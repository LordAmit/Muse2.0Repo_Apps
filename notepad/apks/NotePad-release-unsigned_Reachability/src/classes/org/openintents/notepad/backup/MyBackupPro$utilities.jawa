record `org.openintents.notepad.backup.MyBackupPro$utilities` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`org.openintents.notepad.backup.MyBackupPro$utilities` v0 @kind this) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0b5884.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0b588a.  return @kind void;
}
procedure `void` `Unzip`(`java.lang.String` v18 @kind object @name `zipFile`, `java.lang.String` v19 @kind object @name `targetDir`) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.Unzip:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L0b589c.  v1:= 2048I;
  #L0b58a0.  v4:= 0I;
  #Try_start0.  
  #L0b58a2.  v11:= new `java.io.FileInputStream`;
  #L0b58a6.  v0:= v18 @kind object;
  #L0b58aa.  call `<init>`(v11, v0) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b58b0.  v14:= new `java.util.zip.ZipInputStream`;
  #L0b58b4.  v15:= new `java.io.BufferedInputStream`;
  #L0b58b8.  call `<init>`(v15, v11) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L0b58be.  call `<init>`(v14, v15) @signature `Ljava/util/zip/ZipInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #Try_end0.  
  #L0b58c4.  v5:= v4 @kind object;
  #Try_start1.  
  #L0b58c6.  call temp:= `getNextEntry`(v14) @signature `Ljava/util/zip/ZipInputStream;.getNextEntry:()Ljava/util/zip/ZipEntry;` @kind virtual;
  #L0b58cc.  v7:= temp @kind object;
  #L0b58ce.  if v7 != 0 then goto L0b58da;
  #L0b58d2.  call `close`(v14) @signature `Ljava/util/zip/ZipInputStream;.close:()V` @kind virtual;
  #Try_end1.  
  #L0b58d8.  return @kind void;
  #Try_start2.  
  #L0b58da.  v15:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L0b58de.  v16:= new `java.lang.StringBuilder`;
  #L0b58e2.  v17:= "Extracting: " @kind object;
  #L0b58e6.  call `<init>`(v16, v17) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b58ec.  v0:= v16 @kind object;
  #L0b58f0.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b58f6.  v16:= temp @kind object;
  #L0b58f8.  call temp:= `toString`(v16) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b58fe.  v16:= temp @kind object;
  #L0b5900.  call `println`(v15, v16) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L0b5906.  v3:= new `byte`[v1];
  #L0b590a.  call temp:= `getName`(v7) @signature `Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;` @kind virtual;
  #L0b5910.  v13:= temp @kind object;
  #L0b5912.  v9:= new `java.io.File`;
  #L0b5916.  v15:= new `java.lang.StringBuilder`;
  #L0b591a.  call temp:= `valueOf`(v19) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0b5920.  v16:= temp @kind object;
  #L0b5922.  call `<init>`(v15, v16) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b5928.  call temp:= `append`(v15, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b592e.  v15:= temp @kind object;
  #L0b5930.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b5936.  v15:= temp @kind object;
  #L0b5938.  call `<init>`(v9, v15) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b593e.  v8:= new `java.io.File`;
  #L0b5942.  call temp:= `getParent`(v9) @signature `Ljava/io/File;.getParent:()Ljava/lang/String;` @kind virtual;
  #L0b5948.  v15:= temp @kind object;
  #L0b594a.  call `<init>`(v8, v15) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b5950.  call temp:= `exists`(v8) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L0b5956.  v15:= temp;
  #L0b5958.  if v15 != 0 then goto L0b5962;
  #L0b595c.  call temp:= `mkdirs`(v8) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L0b5962.  v12:= new `java.io.FileOutputStream`;
  #L0b5966.  call `<init>`(v12, v9) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L0b596c.  v4:= new `java.io.BufferedOutputStream`;
  #L0b5970.  call `<init>`(v4, v12, v1) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;I)V` @kind direct;
  #Try_end2.  
  #L0b5976.  v15:= 0I;
  #Try_start3.  
  #L0b5978.  call temp:= `read`(v14, v3, v15, v1) @signature `Ljava/util/zip/ZipInputStream;.read:([BII)I` @kind virtual;
  #L0b597e.  v2:= temp;
  #L0b5980.  v15:= -1I;
  #L0b5982.  if v2 != v15 then goto L0b5996;
  #L0b5986.  call `flush`(v4) @signature `Ljava/io/BufferedOutputStream;.flush:()V` @kind virtual;
  #L0b598c.  call `close`(v4) @signature `Ljava/io/BufferedOutputStream;.close:()V` @kind virtual;
  #L0b5992.  v5:= v4 @kind object;
  #L0b5994.  goto L0b58c6;
  #L0b5996.  v15:= 0I;
  #L0b5998.  call `write`(v4, v3, v15, v2) @signature `Ljava/io/BufferedOutputStream;.write:([BII)V` @kind virtual;
  #Try_end3.  
  #L0b599e.  goto L0b5976;
  #L0b59a0.  v10:= Exception @type ^`java.lang.Exception` @kind object;
  #Try_start4.  
  #L0b59a2.  call `printStackTrace`(v10) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #Try_end4.  
  #L0b59a8.  v5:= v4 @kind object;
  #L0b59aa.  goto L0b58c6;
  #L0b59ac.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L0b59ae.  call `printStackTrace`(v6) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L0b59b4.  goto L0b58d8;
  #L0b59b6.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L0b59b8.  v4:= v5 @kind object;
  #L0b59ba.  goto L0b59ae;
  #L0b59bc.  v10:= Exception @type ^`java.lang.Exception` @kind object;
  #L0b59be.  v4:= v5 @kind object;
  #L0b59c0.  goto L0b59a2;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L0b59ac;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L0b59b6;
  catch `java.lang.Exception` @[Try_start2..Try_end2] goto L0b59bc;
  catch `java.lang.Exception` @[Try_start3..Try_end3] goto L0b59a0;
  catch `java.lang.Exception` @[Try_start4..Try_end4] goto L0b59ac;
}
procedure `boolean` `access$0`(`java.lang.String` v1 @kind object) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.access$0:(Ljava/lang/String;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L0b5a14.  call temp:= `deleteEverythingInDir`(v1) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.deleteEverythingInDir:(Ljava/lang/String;)Z` @kind static;
  #L0b5a1a.  v0:= temp;
  #L0b5a1c.  return v0;
}
procedure `void` `access$1`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.access$1:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L0b5a30.  call `Unzip`(v0, v1) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.Unzip:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L0b5a36.  return @kind void;
}
procedure `void` `access$2`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.util.zip.ZipOutputStream` v2 @kind object) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.access$2:(Ljava/lang/String;Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L0b5a48.  call `zipDir`(v0, v1, v2) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.zipDir:(Ljava/lang/String;Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V` @kind static;
  #L0b5a4e.  return @kind void;
}
procedure `boolean` `deleteEverythingInDir`(`java.lang.String` v7 @kind object @name `strdir`) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.deleteEverythingInDir:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0b5a60.  v1:= 0I;
  #Try_start0.  
  #L0b5a62.  v2:= new `java.io.File`;
  #L0b5a66.  call `<init>`(v2, v7) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L0b5a6c.  call temp:= `isDirectory`(v2) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L0b5a72.  v5:= temp;
  #L0b5a74.  if v5 == 0 then goto L0b5af0;
  #L0b5a78.  call temp:= `list`(v2) @signature `Ljava/io/File;.list:()[Ljava/lang/String;` @kind virtual;
  #L0b5a7e.  v0:= temp @kind object;
  #L0b5a80.  v3:= 0I;
  #L0b5a82.  v5:= length @variable v0;
  #Try_end1.  
  #L0b5a84.  if v3 < v5 then goto L0b5a94;
  #L0b5a88.  v1:= v2 @kind object;
  #L0b5a8a.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L0b5a90.  v5:= temp;
  #L0b5a92.  return v5;
  #Try_start2.  
  #L0b5a94.  v5:= new `java.lang.StringBuilder`;
  #L0b5a98.  call temp:= `getPath`(v2) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L0b5a9e.  v6:= temp @kind object;
  #L0b5aa0.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0b5aa6.  v6:= temp @kind object;
  #L0b5aa8.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b5aae.  v6:= "/" @kind object;
  #L0b5ab2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b5ab8.  v5:= temp @kind object;
  #L0b5aba.  v6:= v0[v3] @kind object;
  #L0b5abe.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0b5ac4.  v5:= temp @kind object;
  #L0b5ac6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0b5acc.  v5:= temp @kind object;
  #L0b5ace.  call temp:= `deleteEverythingInDir`(v5) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.deleteEverythingInDir:(Ljava/lang/String;)Z` @kind static;
  #Try_end2.  
  #L0b5ad4.  v4:= temp;
  #L0b5ad6.  if v4 != 0 then goto L0b5ae0;
  #L0b5ada.  v5:= 0I;
  #L0b5adc.  v1:= v2 @kind object;
  #L0b5ade.  goto L0b5a92;
  #L0b5ae0.  v3:= v3 + 1;
  #L0b5ae4.  goto L0b5a82;
  #L0b5ae6.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L0b5ae8.  goto L0b5a8a;
  #L0b5aea.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L0b5aec.  v1:= v2 @kind object;
  #L0b5aee.  goto L0b5a8a;
  #L0b5af0.  v1:= v2 @kind object;
  #L0b5af2.  goto L0b5a8a;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L0b5ae6;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L0b5aea;
  catch `java.lang.Exception` @[Try_start2..Try_end2] goto L0b5aea;
}
procedure `void` `zipDir`(`java.lang.String` v12 @kind object @name `dir2zip`, `java.lang.String` v13 @kind object @name `originalDir`, `java.util.zip.ZipOutputStream` v14 @kind object @name `zos`) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.zipDir:(Ljava/lang/String;Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #Try_start0.  
  #L0b5b28.  v9:= new `java.io.File`;
  #L0b5b2c.  call `<init>`(v9, v12) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b5b32.  call temp:= `list`(v9) @signature `Ljava/io/File;.list:()[Ljava/lang/String;` @kind virtual;
  #L0b5b38.  v2:= temp @kind object;
  #L0b5b3a.  v10:= 2156I;
  #L0b5b3e.  v8:= new `byte`[v10];
  #L0b5b42.  v1:= 0I;
  #L0b5b44.  v7:= 0I;
  #L0b5b46.  v10:= length @variable v2;
  #L0b5b48.  if v7 < v10 then goto L0b5b4e;
  #L0b5b4c.  return @kind void;
  #L0b5b4e.  v4:= new `java.io.File`;
  #L0b5b52.  v10:= v2[v7] @kind object;
  #L0b5b56.  call `<init>`(v4, v9, v10) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L0b5b5c.  call temp:= `isDirectory`(v4) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L0b5b62.  v10:= temp;
  #L0b5b64.  if v10 == 0 then goto L0b5b7c;
  #L0b5b68.  call temp:= `getPath`(v4) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L0b5b6e.  v5:= temp @kind object;
  #L0b5b70.  call `zipDir`(v5, v13, v14) @signature `Lorg/openintents/notepad/backup/MyBackupPro$utilities;.zipDir:(Ljava/lang/String;Ljava/lang/String;Ljava/util/zip/ZipOutputStream;)V` @kind static;
  #L0b5b76.  v7:= v7 + 1;
  #L0b5b7a.  goto L0b5b46;
  #L0b5b7c.  v6:= new `java.io.FileInputStream`;
  #L0b5b80.  call `<init>`(v6, v4) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L0b5b86.  v0:= new `java.util.zip.ZipEntry`;
  #L0b5b8a.  call temp:= `getPath`(v4) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L0b5b90.  v10:= temp @kind object;
  #L0b5b92.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0b5b98.  v11:= temp;
  #L0b5b9a.  call temp:= `substring`(v10, v11) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0b5ba0.  v10:= temp @kind object;
  #L0b5ba2.  call `<init>`(v0, v10) @signature `Ljava/util/zip/ZipEntry;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0b5ba8.  call `putNextEntry`(v14, v0) @signature `Ljava/util/zip/ZipOutputStream;.putNextEntry:(Ljava/util/zip/ZipEntry;)V` @kind virtual;
  #L0b5bae.  call temp:= `read`(v6, v8) @signature `Ljava/io/FileInputStream;.read:([B)I` @kind virtual;
  #L0b5bb4.  v1:= temp;
  #L0b5bb6.  v10:= -1I;
  #L0b5bb8.  if v1 != v10 then goto L0b5bce;
  #L0b5bbc.  call `close`(v6) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #Try_end0.  
  #L0b5bc2.  goto L0b5b76;
  #L0b5bc4.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L0b5bc6.  call `printStackTrace`(v3) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L0b5bcc.  goto L0b5b4c;
  #L0b5bce.  v10:= 0I;
  #Try_start1.  
  #L0b5bd0.  call `write`(v14, v8, v10, v1) @signature `Ljava/util/zip/ZipOutputStream;.write:([BII)V` @kind virtual;
  #Try_end1.  
  #L0b5bd6.  goto L0b5bae;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L0b5bc4;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L0b5bc4;
}

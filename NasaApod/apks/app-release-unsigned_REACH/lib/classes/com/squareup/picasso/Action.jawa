record `com.squareup.picasso.Action` @kind class @AccessFlag ABSTRACT {
  `boolean` `com.squareup.picasso.Action.cancelled` @AccessFlag ;
  `android.graphics.drawable.Drawable` `com.squareup.picasso.Action.errorDrawable` @AccessFlag FINAL;
  `int` `com.squareup.picasso.Action.errorResId` @AccessFlag FINAL;
  `java.lang.String` `com.squareup.picasso.Action.key` @AccessFlag FINAL;
  `int` `com.squareup.picasso.Action.memoryPolicy` @AccessFlag FINAL;
  `int` `com.squareup.picasso.Action.networkPolicy` @AccessFlag FINAL;
  `boolean` `com.squareup.picasso.Action.noFade` @AccessFlag FINAL;
  `com.squareup.picasso.Picasso` `com.squareup.picasso.Action.picasso` @AccessFlag FINAL;
  `com.squareup.picasso.Request` `com.squareup.picasso.Action.request` @AccessFlag FINAL;
  `java.lang.Object` `com.squareup.picasso.Action.tag` @AccessFlag FINAL;
  `java.lang.ref.WeakReference` `com.squareup.picasso.Action.target` @AccessFlag FINAL;
  `boolean` `com.squareup.picasso.Action.willReplay` @AccessFlag ;
}
procedure `void` `<init>`(`com.squareup.picasso.Action` v2 @kind this, `com.squareup.picasso.Picasso` v3 @kind object @name `picasso`, `java.lang.Object` v4 @kind object, `com.squareup.picasso.Request` v5 @kind object @name `request`, `int` v6 @name `memoryPolicy`, `int` v7 @name `networkPolicy`, `int` v8 @name `errorResId`, `android.graphics.drawable.Drawable` v9 @kind object @name `errorDrawable`, `java.lang.String` v10 @kind object @name `key`, `java.lang.Object` v11 @kind object @name `tag`, `boolean` v12 @name `noFade`) @signature `Lcom/squareup/picasso/Action;.<init>:(Lcom/squareup/picasso/Picasso;Ljava/lang/Object;Lcom/squareup/picasso/Request;IIILandroid/graphics/drawable/Drawable;Ljava/lang/String;Ljava/lang/Object;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `cancel`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.cancel:()V` @AccessFlag  {

  # return;
}
procedure `void` `complete`(`android.graphics.Bitmap` v0 @kind object, `com.squareup.picasso.Picasso$LoadedFrom` v1 @kind object) @signature `Lcom/squareup/picasso/Action;.complete:(Landroid/graphics/Bitmap;Lcom/squareup/picasso/Picasso$LoadedFrom;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `error`() @signature `Lcom/squareup/picasso/Action;.error:()V` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.String` `getKey`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.getKey:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `int` `getMemoryPolicy`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.getMemoryPolicy:()I` @AccessFlag  {

  # return;
}
procedure `int` `getNetworkPolicy`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.getNetworkPolicy:()I` @AccessFlag  {

  # return;
}
procedure `com.squareup.picasso.Picasso` `getPicasso`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.getPicasso:()Lcom/squareup/picasso/Picasso;` @AccessFlag  {

  # return;
}
procedure `com.squareup.picasso.Picasso$Priority` `getPriority`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.getPriority:()Lcom/squareup/picasso/Picasso$Priority;` @AccessFlag  {

  # return;
}
procedure `com.squareup.picasso.Request` `getRequest`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.getRequest:()Lcom/squareup/picasso/Request;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getTag`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.getTag:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getTarget`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.getTarget:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `boolean` `isCancelled`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.isCancelled:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `willReplay`(`com.squareup.picasso.Action` v1 @kind this) @signature `Lcom/squareup/picasso/Action;.willReplay:()Z` @AccessFlag  {

  # return;
}

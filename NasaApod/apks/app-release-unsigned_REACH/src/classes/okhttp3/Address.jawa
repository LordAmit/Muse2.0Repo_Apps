record `okhttp3.Address` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.CertificatePinner` `okhttp3.Address.certificatePinner` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.Address.dns` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.Address.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Address.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.Address.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.Address.proxySelector` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.Address.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.Address.sslSocketFactory` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Address.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Address` v2 @kind this, `java.lang.String` v3 @kind object @name `uriHost`, `int` v4 @name `uriPort`, `okhttp3.Dns` v5 @kind object @name `dns`, `javax.net.SocketFactory` v6 @kind object @name `socketFactory`, `javax.net.ssl.SSLSocketFactory` v7 @kind object @name `sslSocketFactory`, `javax.net.ssl.HostnameVerifier` v8 @kind object @name `hostnameVerifier`, `okhttp3.CertificatePinner` v9 @kind object @name `certificatePinner`, `okhttp3.Authenticator` v10 @kind object @name `proxyAuthenticator`, `java.net.Proxy` v11 @kind object @name `proxy`, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object @name `proxySelector`) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L192018.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19201e.  v1:= new `okhttp3.HttpUrl$Builder`;
  #L192022.  call `<init>`(v1) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L192028.  if v7 == 0 then goto L192068;
  #L19202c.  v0:= "https" @kind object;
  #L192030.  call temp:= `scheme`(v1, v0) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L192036.  v0:= temp @kind object;
  #L192038.  call temp:= `host`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19203e.  v0:= temp @kind object;
  #L192040.  call temp:= `port`(v0, v4) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L192046.  v0:= temp @kind object;
  #L192048.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19204e.  v0:= temp @kind object;
  #L192050.  v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L192054.  if v5 != 0 then goto L19206e;
  #L192058.  v0:= new `java.lang.NullPointerException`;
  #L19205c.  v1:= "dns == null" @kind object;
  #L192060.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192066.  throw v0;
  #L192068.  v0:= "http" @kind object;
  #L19206c.  goto L192030;
  #L19206e.  v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` := v5 @kind object;
  #L192072.  if v6 != 0 then goto L192086;
  #L192076.  v0:= new `java.lang.NullPointerException`;
  #L19207a.  v1:= "socketFactory == null" @kind object;
  #L19207e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192084.  throw v0;
  #L192086.  v2.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L19208a.  if v10 != 0 then goto L19209e;
  #L19208e.  v0:= new `java.lang.NullPointerException`;
  #L192092.  v1:= "proxyAuthenticator == null" @kind object;
  #L192096.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19209c.  throw v0;
  #L19209e.  v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v10 @kind object;
  #L1920a2.  if v12 != 0 then goto L1920b6;
  #L1920a6.  v0:= new `java.lang.NullPointerException`;
  #L1920aa.  v1:= "protocols == null" @kind object;
  #L1920ae.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1920b4.  throw v0;
  #L1920b6.  call temp:= `immutableList`(v12) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1920bc.  v0:= temp @kind object;
  #L1920be.  v2.`okhttp3.Address.protocols` @type ^`java.util.List` := v0 @kind object;
  #L1920c2.  if v13 != 0 then goto L1920d6;
  #L1920c6.  v0:= new `java.lang.NullPointerException`;
  #L1920ca.  v1:= "connectionSpecs == null" @kind object;
  #L1920ce.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1920d4.  throw v0;
  #L1920d6.  call temp:= `immutableList`(v13) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1920dc.  v0:= temp @kind object;
  #L1920de.  v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L1920e2.  if v14 != 0 then goto L1920f6;
  #L1920e6.  v0:= new `java.lang.NullPointerException`;
  #L1920ea.  v1:= "proxySelector == null" @kind object;
  #L1920ee.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1920f4.  throw v0;
  #L1920f6.  v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L1920fa.  v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` := v11 @kind object;
  #L1920fe.  v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L192102.  v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L192106.  v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` := v9 @kind object;
  #L19210a.  return @kind void;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19211c.  v0:= v1.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L192120.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192134.  v0:= v1.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L192138.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19214c.  v0:= v1.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L192150.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Address` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192164.  v0:= instanceof @variable v3 @type ^`okhttp3.Address` @kind boolean;
  #L192168.  if v0 == 0 then goto L19219a;
  #L19216c.  v1:= v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L192170.  v0:= v3 @kind object;
  #L192172.  v0:= (`okhttp3.Address`) v0 @kind object;
  #L192176.  v0:= v0.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19217a.  call temp:= `equals`(v1, v0) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L192180.  v0:= temp;
  #L192182.  if v0 == 0 then goto L19219a;
  #L192186.  v3:= (`okhttp3.Address`) v3 @kind object;
  #L19218a.  call temp:= `equalsNonHost`(v2, v3) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @kind virtual;
  #L192190.  v0:= temp;
  #L192192.  if v0 == 0 then goto L19219a;
  #L192196.  v0:= 1I;
  #L192198.  return v0;
  #L19219a.  v0:= 0I;
  #L19219c.  goto L192198;
}
procedure `boolean` `equalsNonHost`(`okhttp3.Address` v2 @kind this, `okhttp3.Address` v3 @kind object @name `that`) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1921b0.  v0:= v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L1921b4.  v1:= v3.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L1921b8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1921be.  v0:= temp;
  #L1921c0.  if v0 == 0 then goto L19228c;
  #L1921c4.  v0:= v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L1921c8.  v1:= v3.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L1921cc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1921d2.  v0:= temp;
  #L1921d4.  if v0 == 0 then goto L19228c;
  #L1921d8.  v0:= v2.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L1921dc.  v1:= v3.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L1921e0.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L1921e6.  v0:= temp;
  #L1921e8.  if v0 == 0 then goto L19228c;
  #L1921ec.  v0:= v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1921f0.  v1:= v3.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1921f4.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L1921fa.  v0:= temp;
  #L1921fc.  if v0 == 0 then goto L19228c;
  #L192200.  v0:= v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L192204.  v1:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L192208.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19220e.  v0:= temp;
  #L192210.  if v0 == 0 then goto L19228c;
  #L192214.  v0:= v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L192218.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L19221c.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L192222.  v0:= temp;
  #L192224.  if v0 == 0 then goto L19228c;
  #L192228.  v0:= v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19222c.  v1:= v3.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L192230.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L192236.  v0:= temp;
  #L192238.  if v0 == 0 then goto L19228c;
  #L19223c.  v0:= v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L192240.  v1:= v3.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L192244.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19224a.  v0:= temp;
  #L19224c.  if v0 == 0 then goto L19228c;
  #L192250.  v0:= v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L192254.  v1:= v3.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L192258.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19225e.  v0:= temp;
  #L192260.  if v0 == 0 then goto L19228c;
  #L192264.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19226a.  v0:= temp @kind object;
  #L19226c.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L192272.  v0:= temp;
  #L192274.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19227a.  v1:= temp @kind object;
  #L19227c.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L192282.  v1:= temp;
  #L192284.  if v0 != v1 then goto L19228c;
  #L192288.  v0:= 1I;
  #L19228a.  return v0;
  #L19228c.  v0:= 0I;
  #L19228e.  goto L19228a;
}
procedure `int` `hashCode`(`okhttp3.Address` v4 @kind this) @signature `Lokhttp3/Address;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1922a0.  v2:= 0I;
  #L1922a2.  v0:= 17I;
  #L1922a6.  v1:= v4.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L1922aa.  call temp:= `hashCode`(v1) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @kind virtual;
  #L1922b0.  v1:= temp;
  #L1922b2.  v0:= v1 + 527;
  #L1922b6.  v1:= v0 * 31;
  #L1922ba.  v3:= v4.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L1922be.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1922c4.  v3:= temp;
  #L1922c6.  v0:= v1 + v3 @kind int;
  #L1922ca.  v1:= v0 * 31;
  #L1922ce.  v3:= v4.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L1922d2.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1922d8.  v3:= temp;
  #L1922da.  v0:= v1 + v3 @kind int;
  #L1922de.  v1:= v0 * 31;
  #L1922e2.  v3:= v4.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L1922e6.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L1922ec.  v3:= temp;
  #L1922ee.  v0:= v1 + v3 @kind int;
  #L1922f2.  v1:= v0 * 31;
  #L1922f6.  v3:= v4.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1922fa.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L192300.  v3:= temp;
  #L192302.  v0:= v1 + v3 @kind int;
  #L192306.  v1:= v0 * 31;
  #L19230a.  v3:= v4.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L19230e.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L192314.  v3:= temp;
  #L192316.  v0:= v1 + v3 @kind int;
  #L19231a.  v3:= v0 * 31;
  #L19231e.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L192322.  if v1 == 0 then goto L19238c;
  #L192326.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L19232a.  call temp:= `hashCode`(v1) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L192330.  v1:= temp;
  #L192332.  v0:= v3 + v1 @kind int;
  #L192336.  v3:= v0 * 31;
  #L19233a.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19233e.  if v1 == 0 then goto L192390;
  #L192342.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L192346.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L19234c.  v1:= temp;
  #L19234e.  v0:= v3 + v1 @kind int;
  #L192352.  v3:= v0 * 31;
  #L192356.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L19235a.  if v1 == 0 then goto L192394;
  #L19235e.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L192362.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L192368.  v1:= temp;
  #L19236a.  v0:= v3 + v1 @kind int;
  #L19236e.  v1:= v0 * 31;
  #L192372.  v3:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L192376.  if v3 == 0 then goto L192386;
  #L19237a.  v2:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L19237e.  call temp:= `hashCode`(v2) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @kind virtual;
  #L192384.  v2:= temp;
  #L192386.  v0:= v1 + v2 @kind int;
  #L19238a.  return v0;
  #L19238c.  v1:= v2;
  #L19238e.  goto L192332;
  #L192390.  v1:= v2;
  #L192392.  goto L19234e;
  #L192394.  v1:= v2;
  #L192396.  goto L19236a;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1923a8.  v0:= v1.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1923ac.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1923c0.  v0:= v1.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L1923c4.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1923d8.  v0:= v1.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1923dc.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1923f0.  v0:= v1.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L1923f4.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192408.  v0:= v1.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L19240c.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192420.  v0:= v1.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L192424.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192438.  v0:= v1.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19243c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Address` v3 @kind this) @signature `Lokhttp3/Address;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L192450.  v1:= new `java.lang.StringBuilder`;
  #L192454.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19245a.  v2:= "Address{" @kind object;
  #L19245e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192464.  v1:= temp @kind object;
  #L192466.  v2:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19246a.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L192470.  v2:= temp @kind object;
  #L192472.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192478.  v1:= temp @kind object;
  #L19247a.  v2:= ":" @kind object;
  #L19247e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192484.  v1:= temp @kind object;
  #L192486.  v2:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19248a.  call temp:= `port`(v2) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L192490.  v2:= temp;
  #L192492.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L192498.  v0:= temp @kind object;
  #L19249a.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L19249e.  if v1 == 0 then goto L1924cc;
  #L1924a2.  v1:= ", proxy=" @kind object;
  #L1924a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1924ac.  v1:= temp @kind object;
  #L1924ae.  v2:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1924b2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1924b8.  v1:= "}" @kind object;
  #L1924bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1924c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1924c8.  v1:= temp @kind object;
  #L1924ca.  return v1 @kind object;
  #L1924cc.  v1:= ", proxySelector=" @kind object;
  #L1924d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1924d6.  v1:= temp @kind object;
  #L1924d8.  v2:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L1924dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1924e2.  goto L1924b8;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1924f4.  v0:= v1.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L1924f8.  return v0 @kind object;
}

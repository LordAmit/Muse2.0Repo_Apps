record `okhttp3.HttpUrl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedFragment` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedPassword` @AccessFlag ;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedPathSegments` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedUsername` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.host` @AccessFlag ;
  `int` `okhttp3.HttpUrl$Builder.port` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.scheme` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L198bac.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L198bb2.  v0:= "" @kind object;
  #L198bb6.  v2.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L198bba.  v0:= "" @kind object;
  #L198bbe.  v2.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L198bc2.  v0:= -1I;
  #L198bc4.  v2.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v0;
  #L198bc8.  v0:= new `java.util.ArrayList`;
  #L198bcc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L198bd2.  v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` := v0 @kind object;
  #L198bd6.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198bda.  v1:= "" @kind object;
  #L198bde.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198be4.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `pathSegments`, `boolean` v8 @name `alreadyEncoded`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L198bf8.  v2:= 0I;
  #L198bfa.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L198c00.  v0:= temp;
  #L198c02.  v1:= "/\\" @kind object;
  #L198c06.  call temp:= `delimiterOffset`(v7, v2, v0, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L198c0c.  v3:= temp;
  #L198c0e.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L198c14.  v0:= temp;
  #L198c16.  if v3 >= v0 then goto L198c3a;
  #L198c1a.  v4:= 1I;
  #L198c1c.  v0:= v6 @kind object;
  #L198c1e.  v1:= v7 @kind object;
  #L198c20.  v5:= v8;
  #L198c22.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L198c28.  v2:= v3 + 1;
  #L198c2c.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L198c32.  v0:= temp;
  #L198c34.  if v2 <= v0 then goto L198bfa;
  #L198c38.  return v6 @kind object;
  #L198c3a.  v4:= 0I;
  #L198c3c.  goto L198c1c;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L198c50.  v1:= 0I;
  #L198c52.  call temp:= `percentDecode`(v2, v3, v4, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L198c58.  v0:= temp @kind object;
  #L198c5a.  call temp:= `canonicalizeHost`(v0) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L198c60.  v1:= temp @kind object;
  #L198c62.  return v1 @kind object;
}
procedure `boolean` `isDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L198c74.  v0:= "." @kind object;
  #L198c78.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L198c7e.  v0:= temp;
  #L198c80.  if v0 != 0 then goto L198c94;
  #L198c84.  v0:= "%2e" @kind object;
  #L198c88.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L198c8e.  v0:= temp;
  #L198c90.  if v0 == 0 then goto L198c98;
  #L198c94.  v0:= 1I;
  #L198c96.  return v0;
  #L198c98.  v0:= 0I;
  #L198c9a.  goto L198c96;
}
procedure `boolean` `isDotDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L198cac.  v0:= ".." @kind object;
  #L198cb0.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L198cb6.  v0:= temp;
  #L198cb8.  if v0 != 0 then goto L198cec;
  #L198cbc.  v0:= "%2e." @kind object;
  #L198cc0.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L198cc6.  v0:= temp;
  #L198cc8.  if v0 != 0 then goto L198cec;
  #L198ccc.  v0:= ".%2e" @kind object;
  #L198cd0.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L198cd6.  v0:= temp;
  #L198cd8.  if v0 != 0 then goto L198cec;
  #L198cdc.  v0:= "%2e%2e" @kind object;
  #L198ce0.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L198ce6.  v0:= temp;
  #L198ce8.  if v0 == 0 then goto L198cf0;
  #L198cec.  v0:= 1I;
  #L198cee.  return v0;
  #L198cf0.  v0:= 0I;
  #L198cf2.  goto L198cee;
}
procedure `int` `parsePort`(`java.lang.String` v13 @kind object @name `input`, `int` v14 @name `pos`, `int` v15 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L198d04.  v12:= -1I;
  #Try_start0.  
  #L198d06.  v3:= "" @kind object;
  #L198d0a.  v4:= 0I;
  #L198d0c.  v5:= 0I;
  #L198d0e.  v6:= 0I;
  #L198d10.  v7:= 1I;
  #L198d12.  v8:= 0I;
  #L198d14.  v0:= v13 @kind object;
  #L198d16.  v1:= v14;
  #L198d18.  v2:= v15;
  #L198d1a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L198d20.  v11:= temp @kind object;
  #L198d22.  call temp:= `parseInt`(v11) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L198d28.  v10:= temp;
  #L198d2a.  if v10 <= 0 then goto L198d3a;
  #L198d2e.  v0:= 65535I;
  #L198d34.  if v10 > v0 then goto L198d3a;
  #L198d38.  return v10;
  #L198d3a.  v10:= v12;
  #L198d3c.  goto L198d38;
  #L198d3e.  v9:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L198d40.  v10:= v12;
  #L198d42.  goto L198d38;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L198d3e;
}
procedure `void` `pop`(`okhttp3.HttpUrl$Builder` v4 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198d64.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198d68.  v2:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198d6c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L198d72.  v2:= temp;
  #L198d74.  v2:= v2 + -1;
  #L198d78.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L198d7e.  v0:= temp @kind object;
  #L198d80.  v0:= (`java.lang.String`) v0 @kind object;
  #L198d84.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L198d8a.  v1:= temp;
  #L198d8c.  if v1 == 0 then goto L198dc0;
  #L198d90.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198d94.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L198d9a.  v1:= temp;
  #L198d9c.  if v1 != 0 then goto L198dc0;
  #L198da0.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198da4.  v2:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198da8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L198dae.  v2:= temp;
  #L198db0.  v2:= v2 + -1;
  #L198db4.  v3:= "" @kind object;
  #L198db8.  call temp:= `set`(v1, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L198dbe.  return @kind void;
  #L198dc0.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198dc4.  v2:= "" @kind object;
  #L198dc8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198dce.  goto L198dbe;
}
procedure `int` `portColonOffset`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L198de0.  v0:= v4;
  #L198de2.  if v0 >= v5 then goto L198e14;
  #L198de6.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L198dec.  v1:= temp;
  #L198dee.  goto L198e18;
  #L198df4.  v0:= v0 + 1;
  #L198df8.  goto L198de2;
  #L198dfa.  v0:= v0 + 1;
  #L198dfe.  if v0 >= v5 then goto L198df4;
  #L198e02.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L198e08.  v1:= temp;
  #L198e0a.  v2:= 93I;
  #L198e0e.  if v1 != v2 then goto L198dfa;
  #L198e12.  goto L198df4;
  #L198e14.  v0:= v5;
  #L198e16.  return v0;
  #L198e18.  switch v1
                  | 58 => goto L198e16
                  | 91 => goto L198dfa
                  | else => goto L198df4;
}
procedure `void` `push`(`okhttp3.HttpUrl$Builder` v10 @kind this, `java.lang.String` v11 @kind object @name `input`, `int` v12 @name `pos`, `int` v13 @name `limit`, `boolean` v14 @name `addTrailingSlash`, `boolean` v15 @name `alreadyEncoded`) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L198e3c.  v5:= 0I;
  #L198e3e.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L198e42.  v7:= 1I;
  #L198e44.  v8:= 0I;
  #L198e46.  v0:= v11 @kind object;
  #L198e48.  v1:= v12;
  #L198e4a.  v2:= v13;
  #L198e4c.  v4:= v15;
  #L198e4e.  v6:= v5;
  #L198e50.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L198e56.  v9:= temp @kind object;
  #L198e58.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L198e5e.  v0:= temp;
  #L198e60.  if v0 == 0 then goto L198e66;
  #L198e64.  return @kind void;
  #L198e66.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L198e6c.  v0:= temp;
  #L198e6e.  if v0 == 0 then goto L198e7a;
  #L198e72.  call `pop`(v10) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @kind direct;
  #L198e78.  goto L198e64;
  #L198e7a.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198e7e.  v1:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198e82.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L198e88.  v1:= temp;
  #L198e8a.  v1:= v1 + -1;
  #L198e8e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L198e94.  v0:= temp @kind object;
  #L198e96.  v0:= (`java.lang.String`) v0 @kind object;
  #L198e9a.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L198ea0.  v0:= temp;
  #L198ea2.  if v0 == 0 then goto L198ed4;
  #L198ea6.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198eaa.  v1:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198eae.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L198eb4.  v1:= temp;
  #L198eb6.  v1:= v1 + -1;
  #L198eba.  call temp:= `set`(v0, v1, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L198ec0.  if v14 == 0 then goto L198e64;
  #L198ec4.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198ec8.  v1:= "" @kind object;
  #L198ecc.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198ed2.  goto L198e64;
  #L198ed4.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198ed8.  call temp:= `add`(v0, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198ede.  goto L198ec0;
}
procedure `void` `removeAllCanonicalQueryParameters`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `canonicalName`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L198ef0.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L198ef4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L198efa.  v1:= temp;
  #L198efc.  v0:= v1 + -2;
  #L198f00.  if v0 < 0 then goto L198f4a;
  #L198f04.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L198f08.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L198f0e.  v1:= temp @kind object;
  #L198f10.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L198f16.  v1:= temp;
  #L198f18.  if v1 == 0 then goto L198f4c;
  #L198f1c.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L198f20.  v2:= v0 + 1;
  #L198f24.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L198f2a.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L198f2e.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L198f34.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L198f38.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L198f3e.  v1:= temp;
  #L198f40.  if v1 == 0 then goto L198f4c;
  #L198f44.  v1:= 0I;
  #L198f46.  v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v1 @kind object;
  #L198f4a.  return @kind void;
  #L198f4c.  v0:= v0 + -2;
  #L198f50.  goto L198f00;
}
procedure `void` `resolvePath`(`okhttp3.HttpUrl$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `input`, `int` v10 @name `pos`, `int` v11 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L198f64.  v5:= 1I;
  #L198f66.  if v10 != v11 then goto L198f6c;
  #L198f6a.  return @kind void;
  #L198f6c.  call temp:= `charAt`(v9, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L198f72.  v6:= temp;
  #L198f74.  v0:= 47I;
  #L198f78.  if v6 == v0 then goto L198f84;
  #L198f7c.  v0:= 92I;
  #L198f80.  if v6 != v0 then goto L198fce;
  #L198f84.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198f88.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L198f8e.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198f92.  v1:= "" @kind object;
  #L198f96.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198f9c.  v10:= v10 + 1;
  #L198fa0.  v2:= v10;
  #L198fa2.  if v2 >= v11 then goto L198f6a;
  #L198fa6.  v0:= "/\\" @kind object;
  #L198faa.  call temp:= `delimiterOffset`(v9, v2, v11, v0) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L198fb0.  v3:= temp;
  #L198fb2.  if v3 >= v11 then goto L198fee;
  #L198fb6.  v4:= v5;
  #L198fb8.  v0:= v8 @kind object;
  #L198fba.  v1:= v9 @kind object;
  #L198fbc.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L198fc2.  v2:= v3;
  #L198fc4.  if v4 == 0 then goto L198fa2;
  #L198fc8.  v2:= v2 + 1;
  #L198fcc.  goto L198fa2;
  #L198fce.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198fd2.  v1:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L198fd6.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L198fdc.  v1:= temp;
  #L198fde.  v1:= v1 + -1;
  #L198fe2.  v7:= "" @kind object;
  #L198fe6.  call temp:= `set`(v0, v1, v7) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L198fec.  goto L198fa0;
  #L198fee.  v4:= 0I;
  #L198ff0.  goto L198fb8;
}
procedure `int` `schemeDelimiterOffset`(`java.lang.String` v10 @kind object @name `input`, `int` v11 @name `pos`, `int` v12 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L199004.  v9:= 122I;
  #L199008.  v8:= 97I;
  #L19900c.  v7:= 90I;
  #L199010.  v6:= 65I;
  #L199014.  v3:= -1I;
  #L199016.  v4:= v12 - v11 @kind int;
  #L19901a.  v5:= 2I;
  #L19901c.  if v4 >= v5 then goto L199024;
  #L199020.  v2:= v3;
  #L199022.  return v2;
  #L199024.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19902a.  v1:= temp;
  #L19902c.  if v1 < v8 then goto L199034;
  #L199030.  if v1 <= v9 then goto L199040;
  #L199034.  if v1 < v6 then goto L19903c;
  #L199038.  if v1 <= v7 then goto L199040;
  #L19903c.  v2:= v3;
  #L19903e.  goto L199022;
  #L199040.  v2:= v11 + 1;
  #L199044.  if v2 >= v12 then goto L19909a;
  #L199048.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19904e.  v0:= temp;
  #L199050.  if v0 < v8 then goto L199058;
  #L199054.  if v0 <= v9 then goto L199088;
  #L199058.  if v0 < v6 then goto L199060;
  #L19905c.  if v0 <= v7 then goto L199088;
  #L199060.  v4:= 48I;
  #L199064.  if v0 < v4 then goto L199070;
  #L199068.  v4:= 57I;
  #L19906c.  if v0 <= v4 then goto L199088;
  #L199070.  v4:= 43I;
  #L199074.  if v0 == v4 then goto L199088;
  #L199078.  v4:= 45I;
  #L19907c.  if v0 == v4 then goto L199088;
  #L199080.  v4:= 46I;
  #L199084.  if v0 != v4 then goto L19908e;
  #L199088.  v2:= v2 + 1;
  #L19908c.  goto L199044;
  #L19908e.  v4:= 58I;
  #L199092.  if v0 == v4 then goto L199022;
  #L199096.  v2:= v3;
  #L199098.  goto L199022;
  #L19909a.  v2:= v3;
  #L19909c.  goto L199022;
}
procedure `int` `slashCount`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1990b0.  v1:= 0I;
  #L1990b2.  if v4 >= v5 then goto L1990d8;
  #L1990b6.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1990bc.  v0:= temp;
  #L1990be.  v2:= 92I;
  #L1990c2.  if v0 == v2 then goto L1990ce;
  #L1990c6.  v2:= 47I;
  #L1990ca.  if v0 != v2 then goto L1990d8;
  #L1990ce.  v1:= v1 + 1;
  #L1990d2.  v4:= v4 + 1;
  #L1990d6.  goto L1990b2;
  #L1990d8.  return v1;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedPathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1990ec.  v2:= 0I;
  #L1990ee.  if v7 != 0 then goto L199102;
  #L1990f2.  v0:= new `java.lang.NullPointerException`;
  #L1990f6.  v1:= "encodedPathSegment == null" @kind object;
  #L1990fa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199100.  throw v0;
  #L199102.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199108.  v3:= temp;
  #L19910a.  v5:= 1I;
  #L19910c.  v0:= v6 @kind object;
  #L19910e.  v1:= v7 @kind object;
  #L199110.  v4:= v2;
  #L199112.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L199118.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegments`(`okhttp3.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `encodedPathSegments`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19912c.  if v3 != 0 then goto L199140;
  #L199130.  v0:= new `java.lang.NullPointerException`;
  #L199134.  v1:= "encodedPathSegments == null" @kind object;
  #L199138.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19913e.  throw v0;
  #L199140.  v0:= 1I;
  #L199142.  call temp:= `addPathSegments`(v2, v3, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L199148.  v0:= temp @kind object;
  #L19914a.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `encodedName`, `java.lang.String` v9 @kind object @name `encodedValue`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19915c.  v3:= 0I;
  #L19915e.  v2:= 1I;
  #L199160.  if v8 != 0 then goto L199174;
  #L199164.  v0:= new `java.lang.NullPointerException`;
  #L199168.  v1:= "encodedName == null" @kind object;
  #L19916c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199172.  throw v0;
  #L199174.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199178.  if v0 != 0 then goto L19918a;
  #L19917c.  v0:= new `java.util.ArrayList`;
  #L199180.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L199186.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19918a.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19918e.  v1:= " \"'<>#&=" @kind object;
  #L199192.  v0:= v8 @kind object;
  #L199194.  v4:= v2;
  #L199196.  v5:= v2;
  #L199198.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19919e.  v0:= temp @kind object;
  #L1991a0.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1991a6.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L1991aa.  if v9 == 0 then goto L1991c8;
  #L1991ae.  v1:= " \"'<>#&=" @kind object;
  #L1991b2.  v0:= v9 @kind object;
  #L1991b4.  v4:= v2;
  #L1991b6.  v5:= v2;
  #L1991b8.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1991be.  v0:= temp @kind object;
  #L1991c0.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1991c6.  return v7 @kind object;
  #L1991c8.  v0:= 0I;
  #L1991ca.  goto L1991c0;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `pathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1991dc.  v2:= 0I;
  #L1991de.  if v7 != 0 then goto L1991f2;
  #L1991e2.  v0:= new `java.lang.NullPointerException`;
  #L1991e6.  v1:= "pathSegment == null" @kind object;
  #L1991ea.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1991f0.  throw v0;
  #L1991f2.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1991f8.  v3:= temp;
  #L1991fa.  v0:= v6 @kind object;
  #L1991fc.  v1:= v7 @kind object;
  #L1991fe.  v4:= v2;
  #L199200.  v5:= v2;
  #L199202.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L199208.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `pathSegments`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19921c.  if v3 != 0 then goto L199230;
  #L199220.  v0:= new `java.lang.NullPointerException`;
  #L199224.  v1:= "pathSegments == null" @kind object;
  #L199228.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19922e.  throw v0;
  #L199230.  v0:= 0I;
  #L199232.  call temp:= `addPathSegments`(v2, v3, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L199238.  v0:= temp @kind object;
  #L19923a.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `name`, `java.lang.String` v9 @kind object @name `value`) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19924c.  v4:= 1I;
  #L19924e.  v2:= 0I;
  #L199250.  if v8 != 0 then goto L199264;
  #L199254.  v0:= new `java.lang.NullPointerException`;
  #L199258.  v1:= "name == null" @kind object;
  #L19925c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199262.  throw v0;
  #L199264.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199268.  if v0 != 0 then goto L19927a;
  #L19926c.  v0:= new `java.util.ArrayList`;
  #L199270.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L199276.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19927a.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19927e.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L199282.  v0:= v8 @kind object;
  #L199284.  v3:= v2;
  #L199286.  v5:= v4;
  #L199288.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19928e.  v0:= temp @kind object;
  #L199290.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L199296.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19929a.  if v9 == 0 then goto L1992b8;
  #L19929e.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L1992a2.  v0:= v9 @kind object;
  #L1992a4.  v3:= v2;
  #L1992a6.  v5:= v4;
  #L1992a8.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1992ae.  v0:= temp @kind object;
  #L1992b0.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1992b6.  return v7 @kind object;
  #L1992b8.  v0:= 0I;
  #L1992ba.  goto L1992b0;
}
procedure `okhttp3.HttpUrl` `build`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1992cc.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L1992d0.  if v0 != 0 then goto L1992e4;
  #L1992d4.  v0:= new `java.lang.IllegalStateException`;
  #L1992d8.  v1:= "scheme == null" @kind object;
  #L1992dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1992e2.  throw v0;
  #L1992e4.  v0:= v2.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L1992e8.  if v0 != 0 then goto L1992fc;
  #L1992ec.  v0:= new `java.lang.IllegalStateException`;
  #L1992f0.  v1:= "host == null" @kind object;
  #L1992f4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1992fa.  throw v0;
  #L1992fc.  v0:= new `okhttp3.HttpUrl`;
  #L199300.  call `<init>`(v0, v2) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @kind direct;
  #L199306.  return v0 @kind object;
}
procedure `int` `effectivePort`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L199318.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L19931c.  v1:= -1I;
  #L19931e.  if v0 == v1 then goto L199328;
  #L199322.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L199326.  return v0;
  #L199328.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19932c.  call temp:= `defaultPort`(v0) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L199332.  v0:= temp;
  #L199334.  goto L199326;
}
procedure `okhttp3.HttpUrl$Builder` `encodedFragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedFragment`) @signature `Lokhttp3/HttpUrl$Builder;.encodedFragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199348.  v3:= 0I;
  #L19934a.  if v7 == 0 then goto L199368;
  #L19934e.  v1:= "" @kind object;
  #L199352.  v2:= 1I;
  #L199354.  v0:= v7 @kind object;
  #L199356.  v4:= v3;
  #L199358.  v5:= v3;
  #L19935a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199360.  v0:= temp @kind object;
  #L199362.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L199366.  return v6 @kind object;
  #L199368.  v0:= 0I;
  #L19936a.  goto L199362;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPassword`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedPassword`) @signature `Lokhttp3/HttpUrl$Builder;.encodedPassword:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19937c.  v2:= 1I;
  #L19937e.  v3:= 0I;
  #L199380.  if v7 != 0 then goto L199394;
  #L199384.  v0:= new `java.lang.NullPointerException`;
  #L199388.  v1:= "encodedPassword == null" @kind object;
  #L19938c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199392.  throw v0;
  #L199394.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199398.  v0:= v7 @kind object;
  #L19939a.  v4:= v3;
  #L19939c.  v5:= v2;
  #L19939e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1993a4.  v0:= temp @kind object;
  #L1993a6.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L1993aa.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPath`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `encodedPath`) @signature `Lokhttp3/HttpUrl$Builder;.encodedPath:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1993bc.  if v4 != 0 then goto L1993d0;
  #L1993c0.  v0:= new `java.lang.NullPointerException`;
  #L1993c4.  v1:= "encodedPath == null" @kind object;
  #L1993c8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1993ce.  throw v0;
  #L1993d0.  v0:= "/" @kind object;
  #L1993d4.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1993da.  v0:= temp;
  #L1993dc.  if v0 != 0 then goto L199412;
  #L1993e0.  v0:= new `java.lang.IllegalArgumentException`;
  #L1993e4.  v1:= new `java.lang.StringBuilder`;
  #L1993e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1993ee.  v2:= "unexpected encodedPath: " @kind object;
  #L1993f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1993f8.  v1:= temp @kind object;
  #L1993fa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199400.  v1:= temp @kind object;
  #L199402.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199408.  v1:= temp @kind object;
  #L19940a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199410.  throw v0;
  #L199412.  v0:= 0I;
  #L199414.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19941a.  v1:= temp;
  #L19941c.  call `resolvePath`(v3, v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L199422.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedQuery`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedQuery`) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199434.  v2:= 1I;
  #L199436.  if v7 == 0 then goto L19945c;
  #L19943a.  v1:= " \"'<>#" @kind object;
  #L19943e.  v3:= 0I;
  #L199440.  v0:= v7 @kind object;
  #L199442.  v4:= v2;
  #L199444.  v5:= v2;
  #L199446.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19944c.  v0:= temp @kind object;
  #L19944e.  call temp:= `queryStringToNamesAndValues`(v0) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L199454.  v0:= temp @kind object;
  #L199456.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19945a.  return v6 @kind object;
  #L19945c.  v0:= 0I;
  #L19945e.  goto L199456;
}
procedure `okhttp3.HttpUrl$Builder` `encodedUsername`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedUsername`) @signature `Lokhttp3/HttpUrl$Builder;.encodedUsername:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199470.  v2:= 1I;
  #L199472.  v3:= 0I;
  #L199474.  if v7 != 0 then goto L199488;
  #L199478.  v0:= new `java.lang.NullPointerException`;
  #L19947c.  v1:= "encodedUsername == null" @kind object;
  #L199480.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199486.  throw v0;
  #L199488.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19948c.  v0:= v7 @kind object;
  #L19948e.  v4:= v3;
  #L199490.  v5:= v2;
  #L199492.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199498.  v0:= temp @kind object;
  #L19949a.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19949e.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `fragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `fragment`) @signature `Lokhttp3/HttpUrl$Builder;.fragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1994b0.  v2:= 0I;
  #L1994b2.  if v7 == 0 then goto L1994d0;
  #L1994b6.  v1:= "" @kind object;
  #L1994ba.  v0:= v7 @kind object;
  #L1994bc.  v3:= v2;
  #L1994be.  v4:= v2;
  #L1994c0.  v5:= v2;
  #L1994c2.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1994c8.  v0:= temp @kind object;
  #L1994ca.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L1994ce.  return v6 @kind object;
  #L1994d0.  v0:= 0I;
  #L1994d2.  goto L1994ca;
}
procedure `okhttp3.HttpUrl$Builder` `host`(`okhttp3.HttpUrl$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `host`) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1994e4.  if v5 != 0 then goto L1994f8;
  #L1994e8.  v1:= new `java.lang.NullPointerException`;
  #L1994ec.  v2:= "host == null" @kind object;
  #L1994f0.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1994f6.  throw v1;
  #L1994f8.  v1:= 0I;
  #L1994fa.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199500.  v2:= temp;
  #L199502.  call temp:= `canonicalizeHost`(v5, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L199508.  v0:= temp @kind object;
  #L19950a.  if v0 != 0 then goto L199540;
  #L19950e.  v1:= new `java.lang.IllegalArgumentException`;
  #L199512.  v2:= new `java.lang.StringBuilder`;
  #L199516.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19951c.  v3:= "unexpected host: " @kind object;
  #L199520.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199526.  v2:= temp @kind object;
  #L199528.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19952e.  v2:= temp @kind object;
  #L199530.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199536.  v2:= temp @kind object;
  #L199538.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19953e.  throw v1;
  #L199540.  v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v0 @kind object;
  #L199544.  return v4 @kind object;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `parse`(`okhttp3.HttpUrl$Builder` v29 @kind this, `okhttp3.HttpUrl` v30 @kind object @name `base`, `java.lang.String` v31 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;

  #L199558.  v3:= 0I;
  #L19955a.  call temp:= `length`(v31) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199560.  v4:= temp;
  #L199562.  v0:= v31 @kind object;
  #L199566.  call temp:= `skipLeadingAsciiWhitespace`(v0, v3, v4) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19956c.  v5:= temp;
  #L19956e.  call temp:= `length`(v31) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199574.  v3:= temp;
  #L199576.  v0:= v31 @kind object;
  #L19957a.  call temp:= `skipTrailingAsciiWhitespace`(v0, v5, v3) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L199580.  v24:= temp;
  #L199582.  v0:= v31 @kind object;
  #L199586.  v1:= v24;
  #L19958a.  call temp:= `schemeDelimiterOffset`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @kind static;
  #L199590.  v27:= temp;
  #L199592.  v3:= -1I;
  #L199594.  v0:= v27;
  #L199598.  if v0 == v3 then goto L1996f0;
  #L19959c.  v4:= 1I;
  #L19959e.  v6:= "https:" @kind object;
  #L1995a2.  v7:= 0I;
  #L1995a4.  v8:= 6I;
  #L1995a6.  v3:= v31 @kind object;
  #L1995aa.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L1995b0.  v3:= temp;
  #L1995b2.  if v3 == 0 then goto L1996b2;
  #L1995b6.  v3:= "https" @kind object;
  #L1995ba.  v0:= v29 @kind object;
  #L1995be.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L1995c2.  v3:= "https:" @kind object;
  #L1995c6.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1995cc.  v3:= temp;
  #L1995ce.  v5:= v5 + v3 @kind int;
  #L1995d0.  v23:= 0I;
  #L1995d4.  v22:= 0I;
  #L1995d8.  v0:= v31 @kind object;
  #L1995dc.  v1:= v24;
  #L1995e0.  call temp:= `slashCount`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @kind static;
  #L1995e6.  v28:= temp;
  #L1995e8.  v3:= 2I;
  #L1995ea.  v0:= v28;
  #L1995ee.  if v0 >= v3 then goto L199612;
  #L1995f2.  if v30 == 0 then goto L199612;
  #L1995f6.  v0:= v30 @kind object;
  #L1995fa.  v3:= v0.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L1995fe.  v0:= v29 @kind object;
  #L199602.  v4:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L199606.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19960c.  v3:= temp;
  #L19960e.  if v3 != 0 then goto L199958;
  #L199612.  v5:= v5 + v28 @kind int;
  #L199616.  v3:= "@/\\?#" @kind object;
  #L19961a.  v0:= v31 @kind object;
  #L19961e.  v1:= v24;
  #L199622.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L199628.  v21:= temp;
  #L19962a.  v0:= v21;
  #L19962e.  v1:= v24;
  #L199632.  if v0 == v1 then goto L19970e;
  #L199636.  v0:= v31 @kind object;
  #L19963a.  v1:= v21;
  #L19963e.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199644.  v19:= temp;
  #L199646.  goto L1999f0;
  #L19964c.  goto L199616;
  #L19964e.  v0:= v31 @kind object;
  #L199652.  v1:= v21;
  #L199656.  call temp:= `portColonOffset`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @kind static;
  #L19965c.  v26:= temp;
  #L19965e.  v3:= v26 + 1;
  #L199662.  v0:= v21;
  #L199666.  if v3 >= v0 then goto L199832;
  #L19966a.  v0:= v31 @kind object;
  #L19966e.  v1:= v26;
  #L199672.  call temp:= `canonicalizeHost`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L199678.  v3:= temp @kind object;
  #L19967a.  v0:= v29 @kind object;
  #L19967e.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L199682.  v3:= v26 + 1;
  #L199686.  v0:= v31 @kind object;
  #L19968a.  v1:= v21;
  #L19968e.  call temp:= `parsePort`(v0, v3, v1) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @kind static;
  #L199694.  v3:= temp;
  #L199696.  v0:= v29 @kind object;
  #L19969a.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L19969e.  v0:= v29 @kind object;
  #L1996a2.  v3:= v0.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L1996a6.  v4:= -1I;
  #L1996a8.  if v3 != v4 then goto L199862;
  #L1996ac.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L1996b0.  return v3 @kind object;
  #L1996b2.  v4:= 1I;
  #L1996b4.  v6:= "http:" @kind object;
  #L1996b8.  v7:= 0I;
  #L1996ba.  v8:= 5I;
  #L1996bc.  v3:= v31 @kind object;
  #L1996c0.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L1996c6.  v3:= temp;
  #L1996c8.  if v3 == 0 then goto L1996ea;
  #L1996cc.  v3:= "http" @kind object;
  #L1996d0.  v0:= v29 @kind object;
  #L1996d4.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L1996d8.  v3:= "http:" @kind object;
  #L1996dc.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1996e2.  v3:= temp;
  #L1996e4.  v5:= v5 + v3 @kind int;
  #L1996e6.  goto L1995d0;
  #L1996ea.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L1996ee.  goto L1996b0;
  #L1996f0.  if v30 == 0 then goto L199708;
  #L1996f4.  v0:= v30 @kind object;
  #L1996f8.  v3:= v0.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L1996fc.  v0:= v29 @kind object;
  #L199700.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L199704.  goto L1995d0;
  #L199708.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19970c.  goto L1996b0;
  #L19970e.  v19:= -1I;
  #L199712.  goto L199646;
  #L199714.  if v22 != 0 then goto L1997d2;
  #L199718.  v3:= 58I;
  #L19971c.  v0:= v31 @kind object;
  #L199720.  v1:= v21;
  #L199724.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19972a.  v6:= temp;
  #L19972c.  v7:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199730.  v8:= 1I;
  #L199732.  v9:= 0I;
  #L199734.  v10:= 0I;
  #L199736.  v11:= 1I;
  #L199738.  v12:= 0I;
  #L19973a.  v4:= v31 @kind object;
  #L19973e.  call temp:= `canonicalize`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199744.  v20:= temp @kind object;
  #L199746.  if v23 == 0 then goto L199784;
  #L19974a.  v3:= new `java.lang.StringBuilder`;
  #L19974e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199754.  v0:= v29 @kind object;
  #L199758.  v4:= v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19975c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199762.  v3:= temp @kind object;
  #L199764.  v4:= "%40" @kind object;
  #L199768.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19976e.  v3:= temp @kind object;
  #L199770.  v0:= v20 @kind object;
  #L199774.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19977a.  v3:= temp @kind object;
  #L19977c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199782.  v20:= temp @kind object;
  #L199784.  v0:= v20 @kind object;
  #L199788.  v1:= v29 @kind object;
  #L19978c.  v1.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L199790.  v0:= v21;
  #L199794.  if v6 == v0 then goto L1997c6;
  #L199798.  v22:= 1I;
  #L19979c.  v8:= v6 + 1;
  #L1997a0.  v10:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L1997a4.  v11:= 1I;
  #L1997a6.  v12:= 0I;
  #L1997a8.  v13:= 0I;
  #L1997aa.  v14:= 1I;
  #L1997ac.  v15:= 0I;
  #L1997ae.  v7:= v31 @kind object;
  #L1997b2.  v9:= v21;
  #L1997b6.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1997bc.  v3:= temp @kind object;
  #L1997be.  v0:= v29 @kind object;
  #L1997c2.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L1997c6.  v23:= 1I;
  #L1997ca.  v5:= v21 + 1;
  #L1997ce.  goto L199616;
  #L1997d2.  v3:= new `java.lang.StringBuilder`;
  #L1997d6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1997dc.  v0:= v29 @kind object;
  #L1997e0.  v4:= v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L1997e4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1997ea.  v3:= temp @kind object;
  #L1997ec.  v4:= "%40" @kind object;
  #L1997f0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1997f6.  v3:= temp @kind object;
  #L1997f8.  v10:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L1997fc.  v11:= 1I;
  #L1997fe.  v12:= 0I;
  #L199800.  v13:= 0I;
  #L199802.  v14:= 1I;
  #L199804.  v15:= 0I;
  #L199806.  v7:= v31 @kind object;
  #L19980a.  v8:= v5;
  #L19980c.  v9:= v21;
  #L199810.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199816.  v4:= temp @kind object;
  #L199818.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19981e.  v3:= temp @kind object;
  #L199820.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199826.  v3:= temp @kind object;
  #L199828.  v0:= v29 @kind object;
  #L19982c.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L199830.  goto L1997ca;
  #L199832.  v0:= v31 @kind object;
  #L199836.  v1:= v26;
  #L19983a.  call temp:= `canonicalizeHost`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L199840.  v3:= temp @kind object;
  #L199842.  v0:= v29 @kind object;
  #L199846.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L19984a.  v0:= v29 @kind object;
  #L19984e.  v3:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L199852.  call temp:= `defaultPort`(v3) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L199858.  v3:= temp;
  #L19985a.  v0:= v29 @kind object;
  #L19985e.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L199862.  v0:= v29 @kind object;
  #L199866.  v3:= v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19986a.  if v3 != 0 then goto L199876;
  #L19986e.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L199872.  goto L1996b0;
  #L199876.  v5:= v21;
  #L19987a.  v3:= "?#" @kind object;
  #L19987e.  v0:= v31 @kind object;
  #L199882.  v1:= v24;
  #L199886.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19988c.  v25:= temp;
  #L19988e.  v0:= v29 @kind object;
  #L199892.  v1:= v31 @kind object;
  #L199896.  v2:= v25;
  #L19989a.  call `resolvePath`(v0, v1, v5, v2) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L1998a0.  v5:= v25;
  #L1998a4.  v0:= v24;
  #L1998a8.  if v5 >= v0 then goto L199904;
  #L1998ac.  v0:= v31 @kind object;
  #L1998b0.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1998b6.  v3:= temp;
  #L1998b8.  v4:= 63I;
  #L1998bc.  if v3 != v4 then goto L199904;
  #L1998c0.  v3:= 35I;
  #L1998c4.  v0:= v31 @kind object;
  #L1998c8.  v1:= v24;
  #L1998cc.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L1998d2.  v9:= temp;
  #L1998d4.  v8:= v5 + 1;
  #L1998d8.  v10:= " \"'<>#" @kind object;
  #L1998dc.  v11:= 1I;
  #L1998de.  v12:= 0I;
  #L1998e0.  v13:= 1I;
  #L1998e2.  v14:= 1I;
  #L1998e4.  v15:= 0I;
  #L1998e6.  v7:= v31 @kind object;
  #L1998ea.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1998f0.  v3:= temp @kind object;
  #L1998f2.  call temp:= `queryStringToNamesAndValues`(v3) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1998f8.  v3:= temp @kind object;
  #L1998fa.  v0:= v29 @kind object;
  #L1998fe.  v0.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v3 @kind object;
  #L199902.  v5:= v9;
  #L199904.  v0:= v24;
  #L199908.  if v5 >= v0 then goto L199950;
  #L19990c.  v0:= v31 @kind object;
  #L199910.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199916.  v3:= temp;
  #L199918.  v4:= 35I;
  #L19991c.  if v3 != v4 then goto L199950;
  #L199920.  v11:= v5 + 1;
  #L199924.  v13:= "" @kind object;
  #L199928.  v14:= 1I;
  #L19992a.  v15:= 0I;
  #L19992c.  v16:= 0I;
  #L199930.  v17:= 0I;
  #L199934.  v18:= 0I;
  #L199938.  v10:= v31 @kind object;
  #L19993c.  v12:= v24;
  #L199940.  call temp:= `canonicalize`(v10, v11, v12, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199946.  v3:= temp @kind object;
  #L199948.  v0:= v29 @kind object;
  #L19994c.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v3 @kind object;
  #L199950.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L199954.  goto L1996b0;
  #L199958.  call temp:= `encodedUsername`(v30) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19995e.  v3:= temp @kind object;
  #L199960.  v0:= v29 @kind object;
  #L199964.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v3 @kind object;
  #L199968.  call temp:= `encodedPassword`(v30) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19996e.  v3:= temp @kind object;
  #L199970.  v0:= v29 @kind object;
  #L199974.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L199978.  v0:= v30 @kind object;
  #L19997c.  v3:= v0.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L199980.  v0:= v29 @kind object;
  #L199984.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L199988.  v0:= v30 @kind object;
  #L19998c.  v3:= v0.`okhttp3.HttpUrl.port` @type ^`int`;
  #L199990.  v0:= v29 @kind object;
  #L199994.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L199998.  v0:= v29 @kind object;
  #L19999c.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L1999a0.  call `clear`(v3) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1999a6.  v0:= v29 @kind object;
  #L1999aa.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L1999ae.  call temp:= `encodedPathSegments`(v30) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L1999b4.  v4:= temp @kind object;
  #L1999b6.  call temp:= `addAll`(v3, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1999bc.  v0:= v24;
  #L1999c0.  if v5 == v0 then goto L1999d8;
  #L1999c4.  v0:= v31 @kind object;
  #L1999c8.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1999ce.  v3:= temp;
  #L1999d0.  v4:= 35I;
  #L1999d4.  if v3 != v4 then goto L19987a;
  #L1999d8.  call temp:= `encodedQuery`(v30) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L1999de.  v3:= temp @kind object;
  #L1999e0.  v0:= v29 @kind object;
  #L1999e4.  call temp:= `encodedQuery`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1999ea.  goto L19987a;
  #L1999ee.  
  #L1999f0.  switch v19
                  | -1 => goto L19964e
                  | 35 => goto L19964e
                  | 47 => goto L19964e
                  | 63 => goto L19964e
                  | 64 => goto L199714
                  | 92 => goto L19964e
                  | else => goto L19964c;
}
procedure `okhttp3.HttpUrl$Builder` `password`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `password`) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199a34.  v2:= 0I;
  #L199a36.  if v7 != 0 then goto L199a4a;
  #L199a3a.  v0:= new `java.lang.NullPointerException`;
  #L199a3e.  v1:= "password == null" @kind object;
  #L199a42.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199a48.  throw v0;
  #L199a4a.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199a4e.  v5:= 1I;
  #L199a50.  v0:= v7 @kind object;
  #L199a52.  v3:= v2;
  #L199a54.  v4:= v2;
  #L199a56.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199a5c.  v0:= temp @kind object;
  #L199a5e.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L199a62.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `port`(`okhttp3.HttpUrl$Builder` v3 @kind this, `int` v4 @name `port`) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L199a74.  if v4 <= 0 then goto L199a82;
  #L199a78.  v0:= 65535I;
  #L199a7e.  if v4 <= v0 then goto L199ab4;
  #L199a82.  v0:= new `java.lang.IllegalArgumentException`;
  #L199a86.  v1:= new `java.lang.StringBuilder`;
  #L199a8a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199a90.  v2:= "unexpected port: " @kind object;
  #L199a94.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199a9a.  v1:= temp @kind object;
  #L199a9c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L199aa2.  v1:= temp @kind object;
  #L199aa4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199aaa.  v1:= temp @kind object;
  #L199aac.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199ab2.  throw v0;
  #L199ab4.  v3.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v4;
  #L199ab8.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `query`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `query`) @signature `Lokhttp3/HttpUrl$Builder;.query:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199acc.  v4:= 1I;
  #L199ace.  v2:= 0I;
  #L199ad0.  if v7 == 0 then goto L199af4;
  #L199ad4.  v1:= " \"'<>#" @kind object;
  #L199ad8.  v0:= v7 @kind object;
  #L199ada.  v3:= v2;
  #L199adc.  v5:= v4;
  #L199ade.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199ae4.  v0:= temp @kind object;
  #L199ae6.  call temp:= `queryStringToNamesAndValues`(v0) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L199aec.  v0:= temp @kind object;
  #L199aee.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L199af2.  return v6 @kind object;
  #L199af4.  v0:= 0I;
  #L199af6.  goto L199aee;
}
procedure `okhttp3.HttpUrl$Builder` `reencodeForUri`(`okhttp3.HttpUrl$Builder` v14 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L199b08.  v4:= 0I;
  #L199b0a.  v2:= 1I;
  #L199b0c.  v12:= 0I;
  #L199b0e.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199b12.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L199b18.  v13:= temp;
  #L199b1a.  if v12 >= v13 then goto L199b4e;
  #L199b1e.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199b22.  call temp:= `get`(v1, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L199b28.  v0:= temp @kind object;
  #L199b2a.  v0:= (`java.lang.String`) v0 @kind object;
  #L199b2e.  v6:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199b32.  v1:= "[]" @kind object;
  #L199b36.  v3:= v2;
  #L199b38.  v5:= v2;
  #L199b3a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199b40.  v1:= temp @kind object;
  #L199b42.  call temp:= `set`(v6, v12, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199b48.  v12:= v12 + 1;
  #L199b4c.  goto L199b1a;
  #L199b4e.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199b52.  if v1 == 0 then goto L199ba0;
  #L199b56.  v12:= 0I;
  #L199b58.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199b5c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L199b62.  v13:= temp;
  #L199b64.  if v12 >= v13 then goto L199ba0;
  #L199b68.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199b6c.  call temp:= `get`(v1, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L199b72.  v5:= temp @kind object;
  #L199b74.  v5:= (`java.lang.String`) v5 @kind object;
  #L199b78.  if v5 == 0 then goto L199b9a;
  #L199b7c.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199b80.  v6:= "\\^`{|}" @kind object;
  #L199b84.  v7:= v2;
  #L199b86.  v8:= v2;
  #L199b88.  v9:= v2;
  #L199b8a.  v10:= v2;
  #L199b8c.  call temp:= `canonicalize`(v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199b92.  v3:= temp @kind object;
  #L199b94.  call temp:= `set`(v1, v12, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199b9a.  v12:= v12 + 1;
  #L199b9e.  goto L199b64;
  #L199ba0.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L199ba4.  if v1 == 0 then goto L199bc4;
  #L199ba8.  v6:= v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L199bac.  v7:= " \"#<>\\^`{|}" @kind object;
  #L199bb0.  v8:= v2;
  #L199bb2.  v9:= v2;
  #L199bb4.  v10:= v4;
  #L199bb6.  v11:= v4;
  #L199bb8.  call temp:= `canonicalize`(v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199bbe.  v1:= temp @kind object;
  #L199bc0.  v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L199bc4.  return v14 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllEncodedQueryParameters`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedName`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199bd8.  v2:= 1I;
  #L199bda.  if v7 != 0 then goto L199bee;
  #L199bde.  v0:= new `java.lang.NullPointerException`;
  #L199be2.  v1:= "encodedName == null" @kind object;
  #L199be6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199bec.  throw v0;
  #L199bee.  v0:= v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199bf2.  if v0 != 0 then goto L199bf8;
  #L199bf6.  return v6 @kind object;
  #L199bf8.  v1:= " \"'<>#&=" @kind object;
  #L199bfc.  v3:= 0I;
  #L199bfe.  v0:= v7 @kind object;
  #L199c00.  v4:= v2;
  #L199c02.  v5:= v2;
  #L199c04.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199c0a.  v0:= temp @kind object;
  #L199c0c.  call `removeAllCanonicalQueryParameters`(v6, v0) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L199c12.  goto L199bf6;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `name`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L199c24.  v4:= 1I;
  #L199c26.  v2:= 0I;
  #L199c28.  if v8 != 0 then goto L199c3c;
  #L199c2c.  v0:= new `java.lang.NullPointerException`;
  #L199c30.  v1:= "name == null" @kind object;
  #L199c34.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199c3a.  throw v0;
  #L199c3c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199c40.  if v0 != 0 then goto L199c46;
  #L199c44.  return v7 @kind object;
  #L199c46.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L199c4a.  v0:= v8 @kind object;
  #L199c4c.  v3:= v2;
  #L199c4e.  v5:= v4;
  #L199c50.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199c56.  v6:= temp @kind object;
  #L199c58.  call `removeAllCanonicalQueryParameters`(v7, v6) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L199c5e.  goto L199c44;
}
procedure `okhttp3.HttpUrl$Builder` `removePathSegment`(`okhttp3.HttpUrl$Builder` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl$Builder;.removePathSegment:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L199c70.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199c74.  call temp:= `remove`(v0, v3) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L199c7a.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199c7e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L199c84.  v0:= temp;
  #L199c86.  if v0 == 0 then goto L199c98;
  #L199c8a.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199c8e.  v1:= "" @kind object;
  #L199c92.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L199c98.  return v2 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `scheme`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `scheme`) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L199cac.  if v4 != 0 then goto L199cc0;
  #L199cb0.  v0:= new `java.lang.NullPointerException`;
  #L199cb4.  v1:= "scheme == null" @kind object;
  #L199cb8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199cbe.  throw v0;
  #L199cc0.  v0:= "http" @kind object;
  #L199cc4.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L199cca.  v0:= temp;
  #L199ccc.  if v0 == 0 then goto L199cda;
  #L199cd0.  v0:= "http" @kind object;
  #L199cd4.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L199cd8.  return v3 @kind object;
  #L199cda.  v0:= "https" @kind object;
  #L199cde.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L199ce4.  v0:= temp;
  #L199ce6.  if v0 == 0 then goto L199cf4;
  #L199cea.  v0:= "https" @kind object;
  #L199cee.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L199cf2.  goto L199cd8;
  #L199cf4.  v0:= new `java.lang.IllegalArgumentException`;
  #L199cf8.  v1:= new `java.lang.StringBuilder`;
  #L199cfc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199d02.  v2:= "unexpected scheme: " @kind object;
  #L199d06.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d0c.  v1:= temp @kind object;
  #L199d0e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d14.  v1:= temp @kind object;
  #L199d16.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199d1c.  v1:= temp @kind object;
  #L199d1e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199d24.  throw v0;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v10 @kind this, `int` v11 @name `index`, `java.lang.String` v12 @kind object @name `encodedPathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L199d38.  v4:= 1I;
  #L199d3a.  v1:= 0I;
  #L199d3c.  if v12 != 0 then goto L199d50;
  #L199d40.  v0:= new `java.lang.NullPointerException`;
  #L199d44.  v1:= "encodedPathSegment == null" @kind object;
  #L199d48.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199d4e.  throw v0;
  #L199d50.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199d56.  v2:= temp;
  #L199d58.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L199d5c.  v8:= 0I;
  #L199d5e.  v0:= v12 @kind object;
  #L199d60.  v5:= v1;
  #L199d62.  v6:= v1;
  #L199d64.  v7:= v4;
  #L199d66.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199d6c.  v9:= temp @kind object;
  #L199d6e.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199d72.  call temp:= `set`(v0, v11, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199d78.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L199d7e.  v0:= temp;
  #L199d80.  if v0 != 0 then goto L199d90;
  #L199d84.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L199d8a.  v0:= temp;
  #L199d8c.  if v0 == 0 then goto L199dc2;
  #L199d90.  v0:= new `java.lang.IllegalArgumentException`;
  #L199d94.  v1:= new `java.lang.StringBuilder`;
  #L199d98.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199d9e.  v2:= "unexpected path segment: " @kind object;
  #L199da2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199da8.  v1:= temp @kind object;
  #L199daa.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199db0.  v1:= temp @kind object;
  #L199db2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199db8.  v1:= temp @kind object;
  #L199dba.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199dc0.  throw v0;
  #L199dc2.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `encodedName`, `java.lang.String` v2 @kind object @name `encodedValue`) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L199dd4.  call temp:= `removeAllEncodedQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L199dda.  call temp:= `addEncodedQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L199de0.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setPathSegment`(`okhttp3.HttpUrl$Builder` v10 @kind this, `int` v11 @name `index`, `java.lang.String` v12 @kind object @name `pathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.setPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L199df4.  v1:= 0I;
  #L199df6.  if v12 != 0 then goto L199e0a;
  #L199dfa.  v0:= new `java.lang.NullPointerException`;
  #L199dfe.  v1:= "pathSegment == null" @kind object;
  #L199e02.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199e08.  throw v0;
  #L199e0a.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199e10.  v2:= temp;
  #L199e12.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L199e16.  v7:= 1I;
  #L199e18.  v8:= 0I;
  #L199e1a.  v0:= v12 @kind object;
  #L199e1c.  v4:= v1;
  #L199e1e.  v5:= v1;
  #L199e20.  v6:= v1;
  #L199e22.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199e28.  v9:= temp @kind object;
  #L199e2a.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L199e30.  v0:= temp;
  #L199e32.  if v0 != 0 then goto L199e42;
  #L199e36.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L199e3c.  v0:= temp;
  #L199e3e.  if v0 == 0 then goto L199e74;
  #L199e42.  v0:= new `java.lang.IllegalArgumentException`;
  #L199e46.  v1:= new `java.lang.StringBuilder`;
  #L199e4a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199e50.  v2:= "unexpected path segment: " @kind object;
  #L199e54.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199e5a.  v1:= temp @kind object;
  #L199e5c.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199e62.  v1:= temp @kind object;
  #L199e64.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199e6a.  v1:= temp @kind object;
  #L199e6c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199e72.  throw v0;
  #L199e74.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199e78.  call temp:= `set`(v0, v11, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199e7e.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `name`, `java.lang.String` v2 @kind object @name `value`) @signature `Lokhttp3/HttpUrl$Builder;.setQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L199e90.  call temp:= `removeAllQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L199e96.  call temp:= `addQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L199e9c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl$Builder` v5 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L199eb0.  v4:= 58I;
  #L199eb4.  v1:= new `java.lang.StringBuilder`;
  #L199eb8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199ebe.  v2:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L199ec2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199ec8.  v2:= "://" @kind object;
  #L199ecc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199ed2.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L199ed6.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L199edc.  v2:= temp;
  #L199ede.  if v2 == 0 then goto L199ef2;
  #L199ee2.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L199ee6.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L199eec.  v2:= temp;
  #L199eee.  if v2 != 0 then goto L199f26;
  #L199ef2.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L199ef6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199efc.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L199f00.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L199f06.  v2:= temp;
  #L199f08.  if v2 != 0 then goto L199f1c;
  #L199f0c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f12.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L199f16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f1c.  v2:= 64I;
  #L199f20.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f26.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L199f2a.  call temp:= `indexOf`(v2, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L199f30.  v2:= temp;
  #L199f32.  v3:= -1I;
  #L199f34.  if v2 == v3 then goto L199fc6;
  #L199f38.  v2:= 91I;
  #L199f3c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f42.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L199f46.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f4c.  v2:= 93I;
  #L199f50.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f56.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L199f5c.  v0:= temp;
  #L199f5e.  v2:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L199f62.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L199f68.  v2:= temp;
  #L199f6a.  if v0 == v2 then goto L199f7a;
  #L199f6e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f74.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f7a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199f7e.  call `pathSegmentsToString`(v1, v2) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L199f84.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199f88.  if v2 == 0 then goto L199fa0;
  #L199f8c.  v2:= 63I;
  #L199f90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f96.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199f9a.  call `namesAndValuesToQueryString`(v1, v2) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L199fa0.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L199fa4.  if v2 == 0 then goto L199fbc;
  #L199fa8.  v2:= 35I;
  #L199fac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L199fb2.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L199fb6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199fbc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199fc2.  v2:= temp @kind object;
  #L199fc4.  return v2 @kind object;
  #L199fc6.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L199fca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199fd0.  goto L199f56;
}
procedure `okhttp3.HttpUrl$Builder` `username`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `username`) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199fe4.  v2:= 0I;
  #L199fe6.  if v7 != 0 then goto L199ffa;
  #L199fea.  v0:= new `java.lang.NullPointerException`;
  #L199fee.  v1:= "username == null" @kind object;
  #L199ff2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199ff8.  throw v0;
  #L199ffa.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199ffe.  v5:= 1I;
  #L19a000.  v0:= v7 @kind object;
  #L19a002.  v3:= v2;
  #L19a004.  v4:= v2;
  #L19a006.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a00c.  v0:= temp @kind object;
  #L19a00e.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19a012.  return v6 @kind object;
}

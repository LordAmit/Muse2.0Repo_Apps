record `okhttp3.OkHttpClient$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Authenticator` `okhttp3.OkHttpClient$Builder.authenticator` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.OkHttpClient$Builder.cache` @AccessFlag ;
  `okhttp3.internal.tls.CertificateChainCleaner` `okhttp3.OkHttpClient$Builder.certificateChainCleaner` @AccessFlag ;
  `okhttp3.CertificatePinner` `okhttp3.OkHttpClient$Builder.certificatePinner` @AccessFlag ;
  `int` `okhttp3.OkHttpClient$Builder.connectTimeout` @AccessFlag ;
  `okhttp3.ConnectionPool` `okhttp3.OkHttpClient$Builder.connectionPool` @AccessFlag ;
  `java.util.List` `okhttp3.OkHttpClient$Builder.connectionSpecs` @AccessFlag ;
  `okhttp3.CookieJar` `okhttp3.OkHttpClient$Builder.cookieJar` @AccessFlag ;
  `okhttp3.Dispatcher` `okhttp3.OkHttpClient$Builder.dispatcher` @AccessFlag ;
  `okhttp3.Dns` `okhttp3.OkHttpClient$Builder.dns` @AccessFlag ;
  `okhttp3.EventListener$Factory` `okhttp3.OkHttpClient$Builder.eventListenerFactory` @AccessFlag ;
  `boolean` `okhttp3.OkHttpClient$Builder.followRedirects` @AccessFlag ;
  `boolean` `okhttp3.OkHttpClient$Builder.followSslRedirects` @AccessFlag ;
  `javax.net.ssl.HostnameVerifier` `okhttp3.OkHttpClient$Builder.hostnameVerifier` @AccessFlag ;
  `java.util.List` `okhttp3.OkHttpClient$Builder.interceptors` @AccessFlag FINAL;
  `okhttp3.internal.cache.InternalCache` `okhttp3.OkHttpClient$Builder.internalCache` @AccessFlag ;
  `java.util.List` `okhttp3.OkHttpClient$Builder.networkInterceptors` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient$Builder.pingInterval` @AccessFlag ;
  `java.util.List` `okhttp3.OkHttpClient$Builder.protocols` @AccessFlag ;
  `java.net.Proxy` `okhttp3.OkHttpClient$Builder.proxy` @AccessFlag ;
  `okhttp3.Authenticator` `okhttp3.OkHttpClient$Builder.proxyAuthenticator` @AccessFlag ;
  `java.net.ProxySelector` `okhttp3.OkHttpClient$Builder.proxySelector` @AccessFlag ;
  `int` `okhttp3.OkHttpClient$Builder.readTimeout` @AccessFlag ;
  `boolean` `okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @AccessFlag ;
  `javax.net.SocketFactory` `okhttp3.OkHttpClient$Builder.socketFactory` @AccessFlag ;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.OkHttpClient$Builder.sslSocketFactory` @AccessFlag ;
  `int` `okhttp3.OkHttpClient$Builder.writeTimeout` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient$Builder` v3 @kind this) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L19b638.  v2:= 10000I;
  #L19b63c.  v1:= 1I;
  #L19b63e.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b644.  v0:= new `java.util.ArrayList`;
  #L19b648.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19b64e.  v3.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` := v0 @kind object;
  #L19b652.  v0:= new `java.util.ArrayList`;
  #L19b656.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19b65c.  v3.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` := v0 @kind object;
  #L19b660.  v0:= new `okhttp3.Dispatcher`;
  #L19b664.  call `<init>`(v0) @signature `Lokhttp3/Dispatcher;.<init>:()V` @kind direct;
  #L19b66a.  v3.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` := v0 @kind object;
  #L19b66e.  v0:= `@@okhttp3.OkHttpClient.DEFAULT_PROTOCOLS` @type ^`java.util.List` @kind object;
  #L19b672.  v3.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` := v0 @kind object;
  #L19b676.  v0:= `@@okhttp3.OkHttpClient.DEFAULT_CONNECTION_SPECS` @type ^`java.util.List` @kind object;
  #L19b67a.  v3.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L19b67e.  v0:= `@@okhttp3.EventListener.NONE` @type ^`okhttp3.EventListener` @kind object;
  #L19b682.  call temp:= `factory`(v0) @signature `Lokhttp3/EventListener;.factory:(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;` @kind static;
  #L19b688.  v0:= temp @kind object;
  #L19b68a.  v3.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v0 @kind object;
  #L19b68e.  call temp:= `getDefault`() @signature `Ljava/net/ProxySelector;.getDefault:()Ljava/net/ProxySelector;` @kind static;
  #L19b694.  v0:= temp @kind object;
  #L19b696.  v3.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L19b69a.  v0:= `@@okhttp3.CookieJar.NO_COOKIES` @type ^`okhttp3.CookieJar` @kind object;
  #L19b69e.  v3.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` := v0 @kind object;
  #L19b6a2.  call temp:= `getDefault`() @signature `Ljavax/net/SocketFactory;.getDefault:()Ljavax/net/SocketFactory;` @kind static;
  #L19b6a8.  v0:= temp @kind object;
  #L19b6aa.  v3.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L19b6ae.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L19b6b2.  v3.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L19b6b6.  v0:= `@@okhttp3.CertificatePinner.DEFAULT` @type ^`okhttp3.CertificatePinner` @kind object;
  #L19b6ba.  v3.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` := v0 @kind object;
  #L19b6be.  v0:= `@@okhttp3.Authenticator.NONE` @type ^`okhttp3.Authenticator` @kind object;
  #L19b6c2.  v3.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L19b6c6.  v0:= `@@okhttp3.Authenticator.NONE` @type ^`okhttp3.Authenticator` @kind object;
  #L19b6ca.  v3.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L19b6ce.  v0:= new `okhttp3.ConnectionPool`;
  #L19b6d2.  call `<init>`(v0) @signature `Lokhttp3/ConnectionPool;.<init>:()V` @kind direct;
  #L19b6d8.  v3.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` := v0 @kind object;
  #L19b6dc.  v0:= `@@okhttp3.Dns.SYSTEM` @type ^`okhttp3.Dns` @kind object;
  #L19b6e0.  v3.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` := v0 @kind object;
  #L19b6e4.  v3.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` := v1 @kind boolean;
  #L19b6e8.  v3.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` := v1 @kind boolean;
  #L19b6ec.  v3.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` := v1 @kind boolean;
  #L19b6f0.  v3.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int` := v2;
  #L19b6f4.  v3.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int` := v2;
  #L19b6f8.  v3.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int` := v2;
  #L19b6fc.  v0:= 0I;
  #L19b6fe.  v3.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int` := v0;
  #L19b702.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.OkHttpClient` v3 @kind object @name `okHttpClient`) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:(Lokhttp3/OkHttpClient;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19b714.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b71a.  v0:= new `java.util.ArrayList`;
  #L19b71e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19b724.  v2.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` := v0 @kind object;
  #L19b728.  v0:= new `java.util.ArrayList`;
  #L19b72c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19b732.  v2.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` := v0 @kind object;
  #L19b736.  v0:= v3.`okhttp3.OkHttpClient.dispatcher` @type ^`okhttp3.Dispatcher` @kind object;
  #L19b73a.  v2.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` := v0 @kind object;
  #L19b73e.  v0:= v3.`okhttp3.OkHttpClient.proxy` @type ^`java.net.Proxy` @kind object;
  #L19b742.  v2.`okhttp3.OkHttpClient$Builder.proxy` @type ^`java.net.Proxy` := v0 @kind object;
  #L19b746.  v0:= v3.`okhttp3.OkHttpClient.protocols` @type ^`java.util.List` @kind object;
  #L19b74a.  v2.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` := v0 @kind object;
  #L19b74e.  v0:= v3.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` @kind object;
  #L19b752.  v2.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L19b756.  v0:= v2.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L19b75a.  v1:= v3.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L19b75e.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19b764.  v0:= v2.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L19b768.  v1:= v3.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L19b76c.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19b772.  v0:= v3.`okhttp3.OkHttpClient.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` @kind object;
  #L19b776.  v2.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v0 @kind object;
  #L19b77a.  v0:= v3.`okhttp3.OkHttpClient.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L19b77e.  v2.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L19b782.  v0:= v3.`okhttp3.OkHttpClient.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L19b786.  v2.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` := v0 @kind object;
  #L19b78a.  v0:= v3.`okhttp3.OkHttpClient.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L19b78e.  v2.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v0 @kind object;
  #L19b792.  v0:= v3.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L19b796.  v2.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` := v0 @kind object;
  #L19b79a.  v0:= v3.`okhttp3.OkHttpClient.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L19b79e.  v2.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L19b7a2.  v0:= v3.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19b7a6.  v2.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L19b7aa.  v0:= v3.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L19b7ae.  v2.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v0 @kind object;
  #L19b7b2.  v0:= v3.`okhttp3.OkHttpClient.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L19b7b6.  v2.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L19b7ba.  v0:= v3.`okhttp3.OkHttpClient.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L19b7be.  v2.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` := v0 @kind object;
  #L19b7c2.  v0:= v3.`okhttp3.OkHttpClient.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L19b7c6.  v2.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L19b7ca.  v0:= v3.`okhttp3.OkHttpClient.authenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L19b7ce.  v2.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L19b7d2.  v0:= v3.`okhttp3.OkHttpClient.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L19b7d6.  v2.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` := v0 @kind object;
  #L19b7da.  v0:= v3.`okhttp3.OkHttpClient.dns` @type ^`okhttp3.Dns` @kind object;
  #L19b7de.  v2.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` := v0 @kind object;
  #L19b7e2.  v0:= v3.`okhttp3.OkHttpClient.followSslRedirects` @type ^`boolean` @kind boolean;
  #L19b7e6.  v2.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` := v0 @kind boolean;
  #L19b7ea.  v0:= v3.`okhttp3.OkHttpClient.followRedirects` @type ^`boolean` @kind boolean;
  #L19b7ee.  v2.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` := v0 @kind boolean;
  #L19b7f2.  v0:= v3.`okhttp3.OkHttpClient.retryOnConnectionFailure` @type ^`boolean` @kind boolean;
  #L19b7f6.  v2.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` := v0 @kind boolean;
  #L19b7fa.  v0:= v3.`okhttp3.OkHttpClient.connectTimeout` @type ^`int`;
  #L19b7fe.  v2.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int` := v0;
  #L19b802.  v0:= v3.`okhttp3.OkHttpClient.readTimeout` @type ^`int`;
  #L19b806.  v2.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int` := v0;
  #L19b80a.  v0:= v3.`okhttp3.OkHttpClient.writeTimeout` @type ^`int`;
  #L19b80e.  v2.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int` := v0;
  #L19b812.  v0:= v3.`okhttp3.OkHttpClient.pingInterval` @type ^`int`;
  #L19b816.  v2.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int` := v0;
  #L19b81a.  return @kind void;
}
procedure `okhttp3.OkHttpClient$Builder` `addInterceptor`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Interceptor` v3 @kind object @name `interceptor`) @signature `Lokhttp3/OkHttpClient$Builder;.addInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b82c.  if v3 != 0 then goto L19b840;
  #L19b830.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b834.  v1:= "interceptor == null" @kind object;
  #L19b838.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b83e.  throw v0;
  #L19b840.  v0:= v2.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L19b844.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19b84a.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `addNetworkInterceptor`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Interceptor` v3 @kind object @name `interceptor`) @signature `Lokhttp3/OkHttpClient$Builder;.addNetworkInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b85c.  if v3 != 0 then goto L19b870;
  #L19b860.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b864.  v1:= "interceptor == null" @kind object;
  #L19b868.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b86e.  throw v0;
  #L19b870.  v0:= v2.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L19b874.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19b87a.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `authenticator`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Authenticator` v3 @kind object @name `authenticator`) @signature `Lokhttp3/OkHttpClient$Builder;.authenticator:(Lokhttp3/Authenticator;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b88c.  if v3 != 0 then goto L19b8a0;
  #L19b890.  v0:= new `java.lang.NullPointerException`;
  #L19b894.  v1:= "authenticator == null" @kind object;
  #L19b898.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b89e.  throw v0;
  #L19b8a0.  v2.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` := v3 @kind object;
  #L19b8a4.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient` `build`(`okhttp3.OkHttpClient$Builder` v1 @kind this) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b8b8.  v0:= new `okhttp3.OkHttpClient`;
  #L19b8bc.  call `<init>`(v0, v1) @signature `Lokhttp3/OkHttpClient;.<init>:(Lokhttp3/OkHttpClient$Builder;)V` @kind direct;
  #L19b8c2.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `cache`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `okhttp3.Cache` v2 @kind object @name `cache`) @signature `Lokhttp3/OkHttpClient$Builder;.cache:(Lokhttp3/Cache;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b8d4.  v1.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` := v2 @kind object;
  #L19b8d8.  v0:= 0I;
  #L19b8da.  v1.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v0 @kind object;
  #L19b8de.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `certificatePinner`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.CertificatePinner` v3 @kind object @name `certificatePinner`) @signature `Lokhttp3/OkHttpClient$Builder;.certificatePinner:(Lokhttp3/CertificatePinner;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b8f0.  if v3 != 0 then goto L19b904;
  #L19b8f4.  v0:= new `java.lang.NullPointerException`;
  #L19b8f8.  v1:= "certificatePinner == null" @kind object;
  #L19b8fc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b902.  throw v0;
  #L19b904.  v2.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` := v3 @kind object;
  #L19b908.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `connectTimeout`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `long` v2 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `unit`) @signature `Lokhttp3/OkHttpClient$Builder;.connectTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b91c.  v0:= "timeout" @kind object;
  #L19b920.  call temp:= `checkDuration`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L19b926.  v0:= temp;
  #L19b928.  v1.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int` := v0;
  #L19b92c.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `connectionPool`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.ConnectionPool` v3 @kind object @name `connectionPool`) @signature `Lokhttp3/OkHttpClient$Builder;.connectionPool:(Lokhttp3/ConnectionPool;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b940.  if v3 != 0 then goto L19b954;
  #L19b944.  v0:= new `java.lang.NullPointerException`;
  #L19b948.  v1:= "connectionPool == null" @kind object;
  #L19b94c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b952.  throw v0;
  #L19b954.  v2.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` := v3 @kind object;
  #L19b958.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `connectionSpecs`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lokhttp3/OkHttpClient$Builder;.connectionSpecs:(Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b96c.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19b972.  v0:= temp @kind object;
  #L19b974.  v1.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L19b978.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `cookieJar`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.CookieJar` v3 @kind object @name `cookieJar`) @signature `Lokhttp3/OkHttpClient$Builder;.cookieJar:(Lokhttp3/CookieJar;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b98c.  if v3 != 0 then goto L19b9a0;
  #L19b990.  v0:= new `java.lang.NullPointerException`;
  #L19b994.  v1:= "cookieJar == null" @kind object;
  #L19b998.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b99e.  throw v0;
  #L19b9a0.  v2.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` := v3 @kind object;
  #L19b9a4.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `dispatcher`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Dispatcher` v3 @kind object @name `dispatcher`) @signature `Lokhttp3/OkHttpClient$Builder;.dispatcher:(Lokhttp3/Dispatcher;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b9b8.  if v3 != 0 then goto L19b9cc;
  #L19b9bc.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b9c0.  v1:= "dispatcher == null" @kind object;
  #L19b9c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b9ca.  throw v0;
  #L19b9cc.  v2.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` := v3 @kind object;
  #L19b9d0.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `dns`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Dns` v3 @kind object @name `dns`) @signature `Lokhttp3/OkHttpClient$Builder;.dns:(Lokhttp3/Dns;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b9e4.  if v3 != 0 then goto L19b9f8;
  #L19b9e8.  v0:= new `java.lang.NullPointerException`;
  #L19b9ec.  v1:= "dns == null" @kind object;
  #L19b9f0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b9f6.  throw v0;
  #L19b9f8.  v2.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` := v3 @kind object;
  #L19b9fc.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `eventListener`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.EventListener` v3 @kind object @name `eventListener`) @signature `Lokhttp3/OkHttpClient$Builder;.eventListener:(Lokhttp3/EventListener;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ba10.  if v3 != 0 then goto L19ba24;
  #L19ba14.  v0:= new `java.lang.NullPointerException`;
  #L19ba18.  v1:= "eventListener == null" @kind object;
  #L19ba1c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ba22.  throw v0;
  #L19ba24.  call temp:= `factory`(v3) @signature `Lokhttp3/EventListener;.factory:(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;` @kind static;
  #L19ba2a.  v0:= temp @kind object;
  #L19ba2c.  v2.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v0 @kind object;
  #L19ba30.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `eventListenerFactory`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.EventListener$Factory` v3 @kind object @name `eventListenerFactory`) @signature `Lokhttp3/OkHttpClient$Builder;.eventListenerFactory:(Lokhttp3/EventListener$Factory;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ba44.  if v3 != 0 then goto L19ba58;
  #L19ba48.  v0:= new `java.lang.NullPointerException`;
  #L19ba4c.  v1:= "eventListenerFactory == null" @kind object;
  #L19ba50.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ba56.  throw v0;
  #L19ba58.  v2.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v3 @kind object;
  #L19ba5c.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `followRedirects`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `boolean` v1 @name `followRedirects`) @signature `Lokhttp3/OkHttpClient$Builder;.followRedirects:(Z)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19ba70.  v0.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` := v1 @kind boolean;
  #L19ba74.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `followSslRedirects`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `boolean` v1 @name `followProtocolRedirects`) @signature `Lokhttp3/OkHttpClient$Builder;.followSslRedirects:(Z)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19ba88.  v0.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` := v1 @kind boolean;
  #L19ba8c.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `hostnameVerifier`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `javax.net.ssl.HostnameVerifier` v3 @kind object @name `hostnameVerifier`) @signature `Lokhttp3/OkHttpClient$Builder;.hostnameVerifier:(Ljavax/net/ssl/HostnameVerifier;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19baa0.  if v3 != 0 then goto L19bab4;
  #L19baa4.  v0:= new `java.lang.NullPointerException`;
  #L19baa8.  v1:= "hostnameVerifier == null" @kind object;
  #L19baac.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bab2.  throw v0;
  #L19bab4.  v2.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v3 @kind object;
  #L19bab8.  return v2 @kind object;
}
procedure `java.util.List` `interceptors`(`okhttp3.OkHttpClient$Builder` v1 @kind this) @signature `Lokhttp3/OkHttpClient$Builder;.interceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bacc.  v0:= v1.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L19bad0.  return v0 @kind object;
}
procedure `java.util.List` `networkInterceptors`(`okhttp3.OkHttpClient$Builder` v1 @kind this) @signature `Lokhttp3/OkHttpClient$Builder;.networkInterceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bae4.  v0:= v1.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L19bae8.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `pingInterval`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `long` v2 @name `interval`, `java.util.concurrent.TimeUnit` v4 @kind object @name `unit`) @signature `Lokhttp3/OkHttpClient$Builder;.pingInterval:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bafc.  v0:= "interval" @kind object;
  #L19bb00.  call temp:= `checkDuration`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L19bb06.  v0:= temp;
  #L19bb08.  v1.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int` := v0;
  #L19bb0c.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `protocols`(`okhttp3.OkHttpClient$Builder` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lokhttp3/OkHttpClient$Builder;.protocols:(Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19bb20.  v0:= new `java.util.ArrayList`;
  #L19bb24.  call `<init>`(v0, v5) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L19bb2a.  v1:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L19bb2e.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L19bb34.  v1:= temp;
  #L19bb36.  if v1 != 0 then goto L19bb6c;
  #L19bb3a.  v1:= new `java.lang.IllegalArgumentException`;
  #L19bb3e.  v2:= new `java.lang.StringBuilder`;
  #L19bb42.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19bb48.  v3:= "protocols doesn't contain http/1.1: " @kind object;
  #L19bb4c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb52.  v2:= temp @kind object;
  #L19bb54.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb5a.  v2:= temp @kind object;
  #L19bb5c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bb62.  v2:= temp @kind object;
  #L19bb64.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bb6a.  throw v1;
  #L19bb6c.  v1:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L19bb70.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L19bb76.  v1:= temp;
  #L19bb78.  if v1 == 0 then goto L19bbae;
  #L19bb7c.  v1:= new `java.lang.IllegalArgumentException`;
  #L19bb80.  v2:= new `java.lang.StringBuilder`;
  #L19bb84.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19bb8a.  v3:= "protocols must not contain http/1.0: " @kind object;
  #L19bb8e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb94.  v2:= temp @kind object;
  #L19bb96.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb9c.  v2:= temp @kind object;
  #L19bb9e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bba4.  v2:= temp @kind object;
  #L19bba6.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bbac.  throw v1;
  #L19bbae.  v1:= 0I;
  #L19bbb0.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L19bbb6.  v1:= temp;
  #L19bbb8.  if v1 == 0 then goto L19bbcc;
  #L19bbbc.  v1:= new `java.lang.IllegalArgumentException`;
  #L19bbc0.  v2:= "protocols must not contain null" @kind object;
  #L19bbc4.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bbca.  throw v1;
  #L19bbcc.  v1:= `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` @kind object;
  #L19bbd0.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L19bbd6.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19bbdc.  v1:= temp @kind object;
  #L19bbde.  v4.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` := v1 @kind object;
  #L19bbe2.  return v4 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `proxy`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `java.net.Proxy` v1 @kind object @name `proxy`) @signature `Lokhttp3/OkHttpClient$Builder;.proxy:(Ljava/net/Proxy;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19bbf4.  v0.`okhttp3.OkHttpClient$Builder.proxy` @type ^`java.net.Proxy` := v1 @kind object;
  #L19bbf8.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `proxyAuthenticator`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Authenticator` v3 @kind object @name `proxyAuthenticator`) @signature `Lokhttp3/OkHttpClient$Builder;.proxyAuthenticator:(Lokhttp3/Authenticator;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bc0c.  if v3 != 0 then goto L19bc20;
  #L19bc10.  v0:= new `java.lang.NullPointerException`;
  #L19bc14.  v1:= "proxyAuthenticator == null" @kind object;
  #L19bc18.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bc1e.  throw v0;
  #L19bc20.  v2.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v3 @kind object;
  #L19bc24.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `proxySelector`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `java.net.ProxySelector` v1 @kind object @name `proxySelector`) @signature `Lokhttp3/OkHttpClient$Builder;.proxySelector:(Ljava/net/ProxySelector;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19bc38.  v0.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` := v1 @kind object;
  #L19bc3c.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `readTimeout`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `long` v2 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `unit`) @signature `Lokhttp3/OkHttpClient$Builder;.readTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bc50.  v0:= "timeout" @kind object;
  #L19bc54.  call temp:= `checkDuration`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L19bc5a.  v0:= temp;
  #L19bc5c.  v1.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int` := v0;
  #L19bc60.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `retryOnConnectionFailure`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `boolean` v1 @name `retryOnConnectionFailure`) @signature `Lokhttp3/OkHttpClient$Builder;.retryOnConnectionFailure:(Z)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19bc74.  v0.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` := v1 @kind boolean;
  #L19bc78.  return v0 @kind object;
}
procedure `void` `setInternalCache`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `okhttp3.internal.cache.InternalCache` v2 @kind object @name `internalCache`) @signature `Lokhttp3/OkHttpClient$Builder;.setInternalCache:(Lokhttp3/internal/cache/InternalCache;)V` @AccessFlag  {
    temp;
    v0;

  #L19bc8c.  v1.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v2 @kind object;
  #L19bc90.  v0:= 0I;
  #L19bc92.  v1.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` := v0 @kind object;
  #L19bc96.  return @kind void;
}
procedure `okhttp3.OkHttpClient$Builder` `socketFactory`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `javax.net.SocketFactory` v3 @kind object @name `socketFactory`) @signature `Lokhttp3/OkHttpClient$Builder;.socketFactory:(Ljavax/net/SocketFactory;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bca8.  if v3 != 0 then goto L19bcbc;
  #L19bcac.  v0:= new `java.lang.NullPointerException`;
  #L19bcb0.  v1:= "socketFactory == null" @kind object;
  #L19bcb4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bcba.  throw v0;
  #L19bcbc.  v2.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` := v3 @kind object;
  #L19bcc0.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `sslSocketFactory`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `javax.net.ssl.SSLSocketFactory` v3 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/OkHttpClient$Builder;.sslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bcd4.  if v3 != 0 then goto L19bce8;
  #L19bcd8.  v0:= new `java.lang.NullPointerException`;
  #L19bcdc.  v1:= "sslSocketFactory == null" @kind object;
  #L19bce0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bce6.  throw v0;
  #L19bce8.  v2.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L19bcec.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L19bcf2.  v0:= temp @kind object;
  #L19bcf4.  call temp:= `buildCertificateChainCleaner`(v0, v3) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L19bcfa.  v0:= temp @kind object;
  #L19bcfc.  v2.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v0 @kind object;
  #L19bd00.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `sslSocketFactory`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `javax.net.ssl.SSLSocketFactory` v3 @kind object @name `sslSocketFactory`, `javax.net.ssl.X509TrustManager` v4 @kind object @name `trustManager`) @signature `Lokhttp3/OkHttpClient$Builder;.sslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/X509TrustManager;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bd14.  if v3 != 0 then goto L19bd28;
  #L19bd18.  v0:= new `java.lang.NullPointerException`;
  #L19bd1c.  v1:= "sslSocketFactory == null" @kind object;
  #L19bd20.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bd26.  throw v0;
  #L19bd28.  if v4 != 0 then goto L19bd3c;
  #L19bd2c.  v0:= new `java.lang.NullPointerException`;
  #L19bd30.  v1:= "trustManager == null" @kind object;
  #L19bd34.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bd3a.  throw v0;
  #L19bd3c.  v2.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L19bd40.  call temp:= `get`(v4) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.get:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind static;
  #L19bd46.  v0:= temp @kind object;
  #L19bd48.  v2.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v0 @kind object;
  #L19bd4c.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `writeTimeout`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `long` v2 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `unit`) @signature `Lokhttp3/OkHttpClient$Builder;.writeTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bd60.  v0:= "timeout" @kind object;
  #L19bd64.  call temp:= `checkDuration`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L19bd6a.  v0:= temp;
  #L19bd6c.  v1.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int` := v0;
  #L19bd70.  return v1 @kind object;
}

record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.SENT_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L192678.  v0:= new `java.lang.StringBuilder`;
  #L19267c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L192682.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L192688.  v1:= temp @kind object;
  #L19268a.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L192690.  v1:= temp @kind object;
  #L192692.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192698.  v0:= temp @kind object;
  #L19269a.  v1:= "-Sent-Millis" @kind object;
  #L19269e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1926a4.  v0:= temp @kind object;
  #L1926a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1926ac.  v0:= temp @kind object;
  #L1926ae.  `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L1926b2.  v0:= new `java.lang.StringBuilder`;
  #L1926b6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1926bc.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1926c2.  v1:= temp @kind object;
  #L1926c4.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L1926ca.  v1:= temp @kind object;
  #L1926cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1926d2.  v0:= temp @kind object;
  #L1926d4.  v1:= "-Received-Millis" @kind object;
  #L1926d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1926de.  v0:= temp @kind object;
  #L1926e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1926e6.  v0:= temp @kind object;
  #L1926e8.  `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L1926ec.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L192700.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L192706.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L19270c.  v0:= temp @kind object;
  #L19270e.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L192714.  v0:= temp @kind object;
  #L192716.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19271c.  v0:= temp @kind object;
  #L19271e.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L192722.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L192728.  v0:= temp @kind object;
  #L19272a.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19272e.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L192734.  v0:= temp @kind object;
  #L192736.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L19273c.  v0:= temp @kind object;
  #L19273e.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L192742.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L192748.  v0:= temp @kind object;
  #L19274a.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L19274e.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L192754.  v0:= temp;
  #L192756.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L19275a.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L192760.  v0:= temp @kind object;
  #L192762.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L192766.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L19276c.  v0:= temp @kind object;
  #L19276e.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L192772.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L192778.  v0:= temp @kind object;
  #L19277a.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L19277e.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L192784.  v0:= temp @kind wide;
  #L192786.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L19278a.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L192790.  v0:= temp @kind wide;
  #L192792.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L192796.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v22 @kind this, `okio.Source` v23 @kind object @name `in`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L1927a8.  call `<init>`(v22) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #Try_start0.  
  #L1927ae.  call temp:= `buffer`(v23) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1927b4.  v14:= temp @kind object;
  #L1927b6.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1927bc.  v19:= temp @kind object;
  #L1927be.  v0:= v19 @kind object;
  #L1927c2.  v1:= v22 @kind object;
  #L1927c6.  v1.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L1927ca.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1927d0.  v19:= temp @kind object;
  #L1927d2.  v0:= v19 @kind object;
  #L1927d6.  v1:= v22 @kind object;
  #L1927da.  v1.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L1927de.  v17:= new `okhttp3.Headers$Builder`;
  #L1927e2.  call `<init>`(v17) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1927e8.  call temp:= `readInt`(v14) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L1927ee.  v18:= temp;
  #L1927f0.  v7:= 0I;
  #L1927f2.  v0:= v18;
  #L1927f6.  if v7 >= v0 then goto L192816;
  #L1927fa.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192800.  v19:= temp @kind object;
  #L192802.  v0:= v17 @kind object;
  #L192806.  v1:= v19 @kind object;
  #L19280a.  call temp:= `addLenient`(v0, v1) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L192810.  v7:= v7 + 1;
  #L192814.  goto L1927f2;
  #L192816.  call temp:= `build`(v17) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19281c.  v19:= temp @kind object;
  #L19281e.  v0:= v19 @kind object;
  #L192822.  v1:= v22 @kind object;
  #L192826.  v1.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19282a.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192830.  v19:= temp @kind object;
  #L192832.  call temp:= `parse`(v19) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L192838.  v15:= temp @kind object;
  #L19283a.  v0:= v15.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19283e.  v19:= v0 @kind object;
  #L192842.  v0:= v19 @kind object;
  #L192846.  v1:= v22 @kind object;
  #L19284a.  v1.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L19284e.  v0:= v15.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L192852.  v19:= v0;
  #L192856.  v0:= v19;
  #L19285a.  v1:= v22 @kind object;
  #L19285e.  v1.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L192862.  v0:= v15.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L192866.  v19:= v0 @kind object;
  #L19286a.  v0:= v19 @kind object;
  #L19286e.  v1:= v22 @kind object;
  #L192872.  v1.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L192876.  v12:= new `okhttp3.Headers$Builder`;
  #L19287a.  call `<init>`(v12) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L192880.  call temp:= `readInt`(v14) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L192886.  v11:= temp;
  #L192888.  v7:= 0I;
  #L19288a.  if v7 >= v11 then goto L1928a6;
  #L19288e.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192894.  v19:= temp @kind object;
  #L192896.  v0:= v19 @kind object;
  #L19289a.  call temp:= `addLenient`(v12, v0) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1928a0.  v7:= v7 + 1;
  #L1928a4.  goto L19288a;
  #L1928a6.  v19:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L1928aa.  v0:= v19 @kind object;
  #L1928ae.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1928b4.  v13:= temp @kind object;
  #L1928b6.  v19:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L1928ba.  v0:= v19 @kind object;
  #L1928be.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1928c4.  v10:= temp @kind object;
  #L1928c6.  v19:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L1928ca.  v0:= v19 @kind object;
  #L1928ce.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1928d4.  v19:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L1928d8.  v0:= v19 @kind object;
  #L1928dc.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1928e2.  if v13 == 0 then goto L192992;
  #L1928e6.  call temp:= `parseLong`(v13) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1928ec.  v20:= temp @kind wide;
  #L1928ee.  v0:= v20 @kind wide;
  #L1928f2.  v2:= v22 @kind object;
  #L1928f6.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L1928fa.  if v10 == 0 then goto L192998;
  #L1928fe.  call temp:= `parseLong`(v10) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L192904.  v20:= temp @kind wide;
  #L192906.  v0:= v20 @kind wide;
  #L19290a.  v2:= v22 @kind object;
  #L19290e.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L192912.  call temp:= `build`(v12) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L192918.  v19:= temp @kind object;
  #L19291a.  v0:= v19 @kind object;
  #L19291e.  v1:= v22 @kind object;
  #L192922.  v1.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L192926.  call temp:= `isHttps`(v22) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L19292c.  v19:= temp;
  #L19292e.  if v19 == 0 then goto L192a08;
  #L192932.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192938.  v4:= temp @kind object;
  #L19293a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L192940.  v19:= temp;
  #L192942.  if v19 <= 0 then goto L19299e;
  #L192946.  v19:= new `java.io.IOException`;
  #L19294a.  v20:= new `java.lang.StringBuilder`;
  #L19294e.  call `<init>`(v20) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L192954.  v21:= "expected \"\" but was \"" @kind object;
  #L192958.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19295e.  v20:= temp @kind object;
  #L192960.  v0:= v20 @kind object;
  #L192964.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19296a.  v20:= temp @kind object;
  #L19296c.  v21:= "\"" @kind object;
  #L192970.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192976.  v20:= temp @kind object;
  #L192978.  call temp:= `toString`(v20) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19297e.  v20:= temp @kind object;
  #L192980.  call `<init>`(v19, v20) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192986.  throw v19;
  #Try_end0.  
  #L192988.  v19:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19298a.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L192990.  throw v19;
  #L192992.  v20:= 0L;
  #L192996.  goto L1928ee;
  #L192998.  v20:= 0L;
  #L19299c.  goto L192906;
  #Try_start1.  
  #L19299e.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1929a4.  v6:= temp @kind object;
  #L1929a6.  call temp:= `forJavaName`(v6) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L1929ac.  v5:= temp @kind object;
  #L1929ae.  v0:= v22 @kind object;
  #L1929b2.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L1929b8.  v9:= temp @kind object;
  #L1929ba.  v0:= v22 @kind object;
  #L1929be.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L1929c4.  v8:= temp @kind object;
  #L1929c6.  call temp:= `exhausted`(v14) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L1929cc.  v19:= temp;
  #L1929ce.  if v19 != 0 then goto L192a02;
  #L1929d2.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1929d8.  v19:= temp @kind object;
  #L1929da.  call temp:= `forJavaName`(v19) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L1929e0.  v16:= temp @kind object;
  #L1929e2.  v0:= v16 @kind object;
  #L1929e6.  call temp:= `get`(v0, v5, v9, v8) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L1929ec.  v19:= temp @kind object;
  #L1929ee.  v0:= v19 @kind object;
  #L1929f2.  v1:= v22 @kind object;
  #L1929f6.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #Try_end1.  
  #L1929fa.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L192a00.  return @kind void;
  #Try_start2.  
  #L192a02.  v16:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L192a06.  goto L1929e2;
  #L192a08.  v19:= 0I;
  #L192a0c.  v0:= v19 @kind object;
  #L192a10.  v1:= v22 @kind object;
  #L192a14.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #Try_end2.  
  #L192a18.  goto L1929fa;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L192988;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L192988;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L192988;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L192a48.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L192a4c.  v1:= "https://" @kind object;
  #L192a50.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L192a56.  v0:= temp;
  #L192a58.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v9 @kind this, `okio.BufferedSource` v10 @kind object @name `source`) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L192a6c.  call temp:= `readInt`(v10) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L192a72.  v4:= temp;
  #L192a74.  v7:= -1I;
  #L192a76.  if v4 != v7 then goto L192a84;
  #L192a7a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L192a80.  v6:= temp @kind object;
  #L192a82.  return v6 @kind object;
  #Try_start0.  
  #L192a84.  v7:= "X.509" @kind object;
  #L192a88.  call temp:= `getInstance`(v7) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L192a8e.  v1:= temp @kind object;
  #L192a90.  v6:= new `java.util.ArrayList`;
  #L192a94.  call `<init>`(v6, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L192a9a.  v3:= 0I;
  #L192a9c.  if v3 >= v4 then goto L192a82;
  #L192aa0.  call temp:= `readUtf8LineStrict`(v10) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192aa6.  v5:= temp @kind object;
  #L192aa8.  v0:= new `okio.Buffer`;
  #L192aac.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L192ab2.  call temp:= `decodeBase64`(v5) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L192ab8.  v7:= temp @kind object;
  #L192aba.  call temp:= `write`(v0, v7) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L192ac0.  call temp:= `inputStream`(v0) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L192ac6.  v7:= temp @kind object;
  #L192ac8.  call temp:= `generateCertificate`(v1, v7) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L192ace.  v7:= temp @kind object;
  #L192ad0.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L192ad6.  v3:= v3 + 1;
  #L192ada.  goto L192a9c;
  #L192adc.  v2:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L192ade.  v7:= new `java.io.IOException`;
  #L192ae2.  call temp:= `getMessage`(v2) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L192ae8.  v8:= temp @kind object;
  #L192aea.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192af0.  throw v7;
  catch `java.security.cert.CertificateException` @[Try_start0..Try_end0] goto L192adc;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v8 @kind this, `okio.BufferedSink` v9 @kind object @name `sink`, `java.util.List` v10 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #Try_start0.  
  #L192b14.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L192b1a.  v5:= temp;
  #L192b1c.  v6:= (`long`) v5 @kind i2l;
  #L192b1e.  call temp:= `writeDecimalLong`(v9, v6) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L192b24.  v5:= temp @kind object;
  #L192b26.  v6:= 10I;
  #L192b2a.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192b30.  v2:= 0I;
  #L192b32.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L192b38.  v4:= temp;
  #L192b3a.  if v2 >= v4 then goto L192b90;
  #L192b3e.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L192b44.  v5:= temp @kind object;
  #L192b46.  v5:= (`java.security.cert.Certificate`) v5 @kind object;
  #L192b4a.  call temp:= `getEncoded`(v5) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L192b50.  v0:= temp @kind object;
  #L192b52.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L192b58.  v5:= temp @kind object;
  #L192b5a.  call temp:= `base64`(v5) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L192b60.  v3:= temp @kind object;
  #L192b62.  call temp:= `writeUtf8`(v9, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192b68.  v5:= temp @kind object;
  #L192b6a.  v6:= 10I;
  #L192b6e.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #Try_end0.  
  #L192b74.  v2:= v2 + 1;
  #L192b78.  goto L192b3a;
  #L192b7a.  v1:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L192b7c.  v5:= new `java.io.IOException`;
  #L192b80.  call temp:= `getMessage`(v1) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L192b86.  v6:= temp @kind object;
  #L192b88.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192b8e.  throw v5;
  #L192b90.  return @kind void;
  catch `java.security.cert.CertificateEncodingException` @[Try_start0..Try_end0] goto L192b7a;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object @name `request`, `okhttp3.Response` v4 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192bb4.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L192bb8.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L192bbe.  v1:= temp @kind object;
  #L192bc0.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L192bc6.  v1:= temp @kind object;
  #L192bc8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L192bce.  v0:= temp;
  #L192bd0.  if v0 == 0 then goto L192c00;
  #L192bd4.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L192bd8.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L192bde.  v1:= temp @kind object;
  #L192be0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L192be6.  v0:= temp;
  #L192be8.  if v0 == 0 then goto L192c00;
  #L192bec.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192bf0.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L192bf6.  v0:= temp;
  #L192bf8.  if v0 == 0 then goto L192c00;
  #L192bfc.  v0:= 1I;
  #L192bfe.  return v0;
  #L192c00.  v0:= 0I;
  #L192c02.  goto L192bfe;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v6 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v7 @kind object @name `snapshot`) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L192c14.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192c18.  v4:= "Content-Type" @kind object;
  #L192c1c.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L192c22.  v2:= temp @kind object;
  #L192c24.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192c28.  v4:= "Content-Length" @kind object;
  #L192c2c.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L192c32.  v1:= temp @kind object;
  #L192c34.  v3:= new `okhttp3.Request$Builder`;
  #L192c38.  call `<init>`(v3) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L192c3e.  v4:= v6.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L192c42.  call temp:= `url`(v3, v4) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L192c48.  v3:= temp @kind object;
  #L192c4a.  v4:= v6.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L192c4e.  v5:= 0I;
  #L192c50.  call temp:= `method`(v3, v4, v5) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L192c56.  v3:= temp @kind object;
  #L192c58.  v4:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192c5c.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L192c62.  v3:= temp @kind object;
  #L192c64.  call temp:= `build`(v3) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L192c6a.  v0:= temp @kind object;
  #L192c6c.  v3:= new `okhttp3.Response$Builder`;
  #L192c70.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L192c76.  call temp:= `request`(v3, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L192c7c.  v3:= temp @kind object;
  #L192c7e.  v4:= v6.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L192c82.  call temp:= `protocol`(v3, v4) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L192c88.  v3:= temp @kind object;
  #L192c8a.  v4:= v6.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L192c8e.  call temp:= `code`(v3, v4) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L192c94.  v3:= temp @kind object;
  #L192c96.  v4:= v6.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L192c9a.  call temp:= `message`(v3, v4) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L192ca0.  v3:= temp @kind object;
  #L192ca2.  v4:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192ca6.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L192cac.  v3:= temp @kind object;
  #L192cae.  v4:= new `okhttp3.Cache$CacheResponseBody`;
  #L192cb2.  call `<init>`(v4, v7, v2, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L192cb8.  call temp:= `body`(v3, v4) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L192cbe.  v3:= temp @kind object;
  #L192cc0.  v4:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L192cc4.  call temp:= `handshake`(v3, v4) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L192cca.  v3:= temp @kind object;
  #L192ccc.  v4:= v6.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L192cd0.  call temp:= `sentRequestAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L192cd6.  v3:= temp @kind object;
  #L192cd8.  v4:= v6.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L192cdc.  call temp:= `receivedResponseAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L192ce2.  v3:= temp @kind object;
  #L192ce4.  call temp:= `build`(v3) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L192cea.  v3:= temp @kind object;
  #L192cec.  return v3 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v8 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v9 @kind object @name `editor`) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L192d00.  v7:= 10I;
  #L192d04.  v3:= 0I;
  #L192d06.  call temp:= `newSink`(v9, v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L192d0c.  v3:= temp @kind object;
  #L192d0e.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L192d14.  v1:= temp @kind object;
  #L192d16.  v3:= v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L192d1a.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192d20.  v3:= temp @kind object;
  #L192d22.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192d28.  v3:= v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L192d2c.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192d32.  v3:= temp @kind object;
  #L192d34.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192d3a.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192d3e.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L192d44.  v3:= temp;
  #L192d46.  v4:= (`long`) v3 @kind i2l;
  #L192d48.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L192d4e.  v3:= temp @kind object;
  #L192d50.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192d56.  v0:= 0I;
  #L192d58.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192d5c.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L192d62.  v2:= temp;
  #L192d64.  if v0 >= v2 then goto L192da8;
  #L192d68.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192d6c.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L192d72.  v3:= temp @kind object;
  #L192d74.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192d7a.  v3:= temp @kind object;
  #L192d7c.  v4:= ": " @kind object;
  #L192d80.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192d86.  v3:= temp @kind object;
  #L192d88.  v4:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192d8c.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L192d92.  v4:= temp @kind object;
  #L192d94.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192d9a.  v3:= temp @kind object;
  #L192d9c.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192da2.  v0:= v0 + 1;
  #L192da6.  goto L192d64;
  #L192da8.  v3:= new `okhttp3.internal.http.StatusLine`;
  #L192dac.  v4:= v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L192db0.  v5:= v8.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L192db4.  v6:= v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L192db8.  call `<init>`(v3, v4, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L192dbe.  call temp:= `toString`(v3) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L192dc4.  v3:= temp @kind object;
  #L192dc6.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192dcc.  v3:= temp @kind object;
  #L192dce.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192dd4.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192dd8.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L192dde.  v3:= temp;
  #L192de0.  v3:= v3 + 2;
  #L192de4.  v4:= (`long`) v3 @kind i2l;
  #L192de6.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L192dec.  v3:= temp @kind object;
  #L192dee.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192df4.  v0:= 0I;
  #L192df6.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192dfa.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L192e00.  v2:= temp;
  #L192e02.  if v0 >= v2 then goto L192e46;
  #L192e06.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192e0a.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L192e10.  v3:= temp @kind object;
  #L192e12.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192e18.  v3:= temp @kind object;
  #L192e1a.  v4:= ": " @kind object;
  #L192e1e.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192e24.  v3:= temp @kind object;
  #L192e26.  v4:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L192e2a.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L192e30.  v4:= temp @kind object;
  #L192e32.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192e38.  v3:= temp @kind object;
  #L192e3a.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192e40.  v0:= v0 + 1;
  #L192e44.  goto L192e02;
  #L192e46.  v3:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L192e4a.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192e50.  v3:= temp @kind object;
  #L192e52.  v4:= ": " @kind object;
  #L192e56.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192e5c.  v3:= temp @kind object;
  #L192e5e.  v4:= v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L192e62.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L192e68.  v3:= temp @kind object;
  #L192e6a.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192e70.  v3:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L192e74.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192e7a.  v3:= temp @kind object;
  #L192e7c.  v4:= ": " @kind object;
  #L192e80.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192e86.  v3:= temp @kind object;
  #L192e88.  v4:= v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L192e8c.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L192e92.  v3:= temp @kind object;
  #L192e94.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192e9a.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L192ea0.  v3:= temp;
  #L192ea2.  if v3 == 0 then goto L192f14;
  #L192ea6.  call temp:= `writeByte`(v1, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192eac.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L192eb0.  call temp:= `cipherSuite`(v3) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L192eb6.  v3:= temp @kind object;
  #L192eb8.  call temp:= `javaName`(v3) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L192ebe.  v3:= temp @kind object;
  #L192ec0.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192ec6.  v3:= temp @kind object;
  #L192ec8.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192ece.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L192ed2.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L192ed8.  v3:= temp @kind object;
  #L192eda.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L192ee0.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L192ee4.  call temp:= `localCertificates`(v3) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L192eea.  v3:= temp @kind object;
  #L192eec.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L192ef2.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L192ef6.  call temp:= `tlsVersion`(v3) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L192efc.  v3:= temp @kind object;
  #L192efe.  call temp:= `javaName`(v3) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L192f04.  v3:= temp @kind object;
  #L192f06.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L192f0c.  v3:= temp @kind object;
  #L192f0e.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L192f14.  call `close`(v1) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L192f1a.  return @kind void;
}

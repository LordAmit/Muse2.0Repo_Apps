record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.address` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.inetSocketAddress` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.proxy` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v2 @kind this, `okhttp3.Address` v3 @kind object @name `address`, `java.net.Proxy` v4 @kind object @name `proxy`, `java.net.InetSocketAddress` v5 @kind object @name `inetSocketAddress`) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19d3b4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19d3ba.  if v3 != 0 then goto L19d3ce;
  #L19d3be.  v0:= new `java.lang.NullPointerException`;
  #L19d3c2.  v1:= "address == null" @kind object;
  #L19d3c6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d3cc.  throw v0;
  #L19d3ce.  if v4 != 0 then goto L19d3e2;
  #L19d3d2.  v0:= new `java.lang.NullPointerException`;
  #L19d3d6.  v1:= "proxy == null" @kind object;
  #L19d3da.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d3e0.  throw v0;
  #L19d3e2.  if v5 != 0 then goto L19d3f6;
  #L19d3e6.  v0:= new `java.lang.NullPointerException`;
  #L19d3ea.  v1:= "inetSocketAddress == null" @kind object;
  #L19d3ee.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d3f4.  throw v0;
  #L19d3f6.  v2.`okhttp3.Route.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L19d3fa.  v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` := v4 @kind object;
  #L19d3fe.  v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` := v5 @kind object;
  #L19d402.  return @kind void;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d414.  v0:= v1.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19d418.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d42c.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L19d430.  if v0 == 0 then goto L19d484;
  #L19d434.  v0:= v3 @kind object;
  #L19d436.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L19d43a.  v0:= v0.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19d43e.  v1:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19d442.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d448.  v0:= temp;
  #L19d44a.  if v0 == 0 then goto L19d484;
  #L19d44e.  v0:= v3 @kind object;
  #L19d450.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L19d454.  v0:= v0.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19d458.  v1:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19d45c.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d462.  v0:= temp;
  #L19d464.  if v0 == 0 then goto L19d484;
  #L19d468.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L19d46c.  v0:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19d470.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19d474.  call temp:= `equals`(v0, v1) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d47a.  v0:= temp;
  #L19d47c.  if v0 == 0 then goto L19d484;
  #L19d480.  v0:= 1I;
  #L19d482.  return v0;
  #L19d484.  v0:= 0I;
  #L19d486.  goto L19d482;
}
procedure `int` `hashCode`(`okhttp3.Route` v3 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19d498.  v0:= 17I;
  #L19d49c.  v1:= v3.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19d4a0.  call temp:= `hashCode`(v1) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L19d4a6.  v1:= temp;
  #L19d4a8.  v0:= v1 + 527;
  #L19d4ac.  v1:= v0 * 31;
  #L19d4b0.  v2:= v3.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19d4b4.  call temp:= `hashCode`(v2) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L19d4ba.  v2:= temp;
  #L19d4bc.  v0:= v1 + v2 @kind int;
  #L19d4c0.  v1:= v0 * 31;
  #L19d4c4.  v2:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19d4c8.  call temp:= `hashCode`(v2) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L19d4ce.  v2:= temp;
  #L19d4d0.  v0:= v1 + v2 @kind int;
  #L19d4d4.  return v0;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d4e8.  v0:= v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19d4ec.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d500.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19d504.  v0:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19d508.  if v0 == 0 then goto L19d524;
  #L19d50c.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19d510.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L19d516.  v0:= temp @kind object;
  #L19d518.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L19d51c.  if v0 != v1 then goto L19d524;
  #L19d520.  v0:= 1I;
  #L19d522.  return v0;
  #L19d524.  v0:= 0I;
  #L19d526.  goto L19d522;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d538.  v0:= v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19d53c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d550.  v0:= new `java.lang.StringBuilder`;
  #L19d554.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d55a.  v1:= "Route{" @kind object;
  #L19d55e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d564.  v0:= temp @kind object;
  #L19d566.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19d56a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d570.  v0:= temp @kind object;
  #L19d572.  v1:= "}" @kind object;
  #L19d576.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d57c.  v0:= temp @kind object;
  #L19d57e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d584.  v0:= temp @kind object;
  #L19d586.  return v0 @kind object;
}

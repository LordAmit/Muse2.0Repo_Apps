record `okhttp3.MultipartBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `okio.ByteString` `okhttp3.MultipartBody.boundary` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.MultipartBody.contentLength` @AccessFlag PRIVATE;
  `okhttp3.MediaType` `okhttp3.MultipartBody.contentType` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody.originalType` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody.parts` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.ALTERNATIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.COLONSPACE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.CRLF` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.DASHDASH` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.DIGEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.FORM` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.MIXED` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.PARALLEL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MultipartBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2138c4.  v1:= 2I;
  #L2138c6.  v0:= "multipart/mixed" @kind object;
  #L2138ca.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L2138d0.  v0:= temp @kind object;
  #L2138d2.  `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L2138d6.  v0:= "multipart/alternative" @kind object;
  #L2138da.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L2138e0.  v0:= temp @kind object;
  #L2138e2.  `@@okhttp3.MultipartBody.ALTERNATIVE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L2138e6.  v0:= "multipart/digest" @kind object;
  #L2138ea.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L2138f0.  v0:= temp @kind object;
  #L2138f2.  `@@okhttp3.MultipartBody.DIGEST` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L2138f6.  v0:= "multipart/parallel" @kind object;
  #L2138fa.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L213900.  v0:= temp @kind object;
  #L213902.  `@@okhttp3.MultipartBody.PARALLEL` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L213906.  v0:= "multipart/form-data" @kind object;
  #L21390a.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L213910.  v0:= temp @kind object;
  #L213912.  `@@okhttp3.MultipartBody.FORM` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L213916.  v0:= new `byte`[v1];
  #L21391a.  goto L213944;
  #L213920.  `@@okhttp3.MultipartBody.COLONSPACE` @type ^`byte`[] := v0 @kind object;
  #L213924.  v0:= new `byte`[v1];
  #L213928.  goto L213950;
  #L21392e.  `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] := v0 @kind object;
  #L213932.  v0:= new `byte`[v1];
  #L213936.  goto L21395c;
  #L21393c.  `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] := v0 @kind object;
  #L213940.  return @kind void;
  #L213942.  
  #L213944.  v0:= (58I, 32I) @kind object;
  #L21394d.  goto L213920;
  #L21394e.  
  #L213950.  v0:= (13I, 10I) @kind object;
  #L213959.  goto L21392e;
  #L21395a.  
  #L21395c.  v0:= (45I, 45I) @kind object;
  #L213965.  goto L21393c;
}
procedure `void` `<init>`(`okhttp3.MultipartBody` v2 @kind this, `okio.ByteString` v3 @kind object @name `boundary`, `okhttp3.MediaType` v4 @kind object @name `type`, `java.util.List` v5 @kind object) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L213978.  call `<init>`(v2) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L21397e.  v0:= -1L;
  #L213982.  v2.`okhttp3.MultipartBody.contentLength` @type ^`long` := v0 @kind wide;
  #L213986.  v2.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` := v3 @kind object;
  #L21398a.  v2.`okhttp3.MultipartBody.originalType` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L21398e.  v0:= new `java.lang.StringBuilder`;
  #L213992.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213998.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21399e.  v0:= temp @kind object;
  #L2139a0.  v1:= "; boundary=" @kind object;
  #L2139a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2139aa.  v0:= temp @kind object;
  #L2139ac.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L2139b2.  v1:= temp @kind object;
  #L2139b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2139ba.  v0:= temp @kind object;
  #L2139bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2139c2.  v0:= temp @kind object;
  #L2139c4.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L2139ca.  v0:= temp @kind object;
  #L2139cc.  v2.`okhttp3.MultipartBody.contentType` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L2139d0.  call temp:= `immutableList`(v5) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2139d6.  v0:= temp @kind object;
  #L2139d8.  v2.`okhttp3.MultipartBody.parts` @type ^`java.util.List` := v0 @kind object;
  #L2139dc.  return @kind void;
}
procedure `java.lang.StringBuilder` `appendQuotedString`(`java.lang.StringBuilder` v5 @kind object @name `target`, `java.lang.String` v6 @kind object @name `key`) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2139f0.  v4:= 34I;
  #L2139f4.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2139fa.  v1:= 0I;
  #L2139fc.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L213a02.  v2:= temp;
  #L213a04.  if v1 >= v2 then goto L213a46;
  #L213a08.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L213a0e.  v0:= temp;
  #L213a10.  goto L213a50;
  #L213a16.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L213a1c.  v1:= v1 + 1;
  #L213a20.  goto L213a04;
  #L213a22.  v3:= "%0A" @kind object;
  #L213a26.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213a2c.  goto L213a1c;
  #L213a2e.  v3:= "%0D" @kind object;
  #L213a32.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213a38.  goto L213a1c;
  #L213a3a.  v3:= "%22" @kind object;
  #L213a3e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213a44.  goto L213a1c;
  #L213a46.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L213a4c.  return v5 @kind object;
  #L213a4e.  
  #L213a50.  switch v0
                  | 10 => goto L213a22
                  | 13 => goto L213a2e
                  | 34 => goto L213a3a
                  | else => goto L213a16;
}
procedure `long` `writeOrCountBytes`(`okhttp3.MultipartBody` v18 @kind this, `okio.BufferedSink` v19 @kind object @name `sink`, `boolean` v20 @name `countBytes`) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L213a7c.  v4:= 0L;
  #L213a80.  v3:= 0I;
  #L213a82.  if v20 == 0 then goto L213a94;
  #L213a86.  v3:= new `okio.Buffer`;
  #L213a8a.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L213a90.  v19:= v3 @kind object;
  #L213a94.  v12:= 0I;
  #L213a96.  v0:= v18 @kind object;
  #L213a9a.  v15:= v0.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L213a9e.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L213aa4.  v14:= temp;
  #L213aa6.  if v12 >= v14 then goto L213bf8;
  #L213aaa.  v0:= v18 @kind object;
  #L213aae.  v15:= v0.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L213ab2.  call temp:= `get`(v15, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L213ab8.  v13:= temp @kind object;
  #L213aba.  v13:= (`okhttp3.MultipartBody$Part`) v13 @kind object;
  #L213abe.  v11:= v13.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L213ac2.  v2:= v13.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L213ac6.  v15:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L213aca.  v0:= v19 @kind object;
  #L213ace.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213ad4.  v0:= v18 @kind object;
  #L213ad8.  v15:= v0.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L213adc.  v0:= v19 @kind object;
  #L213ae0.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L213ae6.  v15:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L213aea.  v0:= v19 @kind object;
  #L213aee.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213af4.  if v11 == 0 then goto L213b46;
  #L213af8.  v9:= 0I;
  #L213afa.  call temp:= `size`(v11) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L213b00.  v10:= temp;
  #L213b02.  if v9 >= v10 then goto L213b46;
  #L213b06.  call temp:= `name`(v11, v9) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L213b0c.  v15:= temp @kind object;
  #L213b0e.  v0:= v19 @kind object;
  #L213b12.  call temp:= `writeUtf8`(v0, v15) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L213b18.  v15:= temp @kind object;
  #L213b1a.  v16:= `@@okhttp3.MultipartBody.COLONSPACE` @type ^`byte`[] @kind object;
  #L213b1e.  call temp:= `write`(v15, v16) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213b24.  v15:= temp @kind object;
  #L213b26.  call temp:= `value`(v11, v9) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L213b2c.  v16:= temp @kind object;
  #L213b2e.  call temp:= `writeUtf8`(v15, v16) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L213b34.  v15:= temp @kind object;
  #L213b36.  v16:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L213b3a.  call temp:= `write`(v15, v16) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213b40.  v9:= v9 + 1;
  #L213b44.  goto L213b02;
  #L213b46.  call temp:= `contentType`(v2) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L213b4c.  v8:= temp @kind object;
  #L213b4e.  if v8 == 0 then goto L213b7c;
  #L213b52.  v15:= "Content-Type: " @kind object;
  #L213b56.  v0:= v19 @kind object;
  #L213b5a.  call temp:= `writeUtf8`(v0, v15) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L213b60.  v15:= temp @kind object;
  #L213b62.  call temp:= `toString`(v8) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L213b68.  v16:= temp @kind object;
  #L213b6a.  call temp:= `writeUtf8`(v15, v16) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L213b70.  v15:= temp @kind object;
  #L213b72.  v16:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L213b76.  call temp:= `write`(v15, v16) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213b7c.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L213b82.  v6:= temp @kind wide;
  #L213b84.  v16:= -1L;
  #L213b88.  v15:= lcmp(v6, v16);
  #L213b8c.  if v15 == 0 then goto L213bdc;
  #L213b90.  v15:= "Content-Length: " @kind object;
  #L213b94.  v0:= v19 @kind object;
  #L213b98.  call temp:= `writeUtf8`(v0, v15) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L213b9e.  v15:= temp @kind object;
  #L213ba0.  call temp:= `writeDecimalLong`(v15, v6) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L213ba6.  v15:= temp @kind object;
  #L213ba8.  v16:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L213bac.  call temp:= `write`(v15, v16) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213bb2.  v15:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L213bb6.  v0:= v19 @kind object;
  #L213bba.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213bc0.  if v20 == 0 then goto L213bec;
  #L213bc4.  v4:= v4 + v6 @kind long;
  #L213bc6.  v15:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L213bca.  v0:= v19 @kind object;
  #L213bce.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213bd4.  v12:= v12 + 1;
  #L213bd8.  goto L213aa6;
  #L213bdc.  if v20 == 0 then goto L213bb2;
  #L213be0.  call `clear`(v3) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L213be6.  v16:= -1L;
  #L213bea.  return v16 @kind wide;
  #L213bec.  v0:= v19 @kind object;
  #L213bf0.  call `writeTo`(v2, v0) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L213bf6.  goto L213bc6;
  #L213bf8.  v15:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L213bfc.  v0:= v19 @kind object;
  #L213c00.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213c06.  v0:= v18 @kind object;
  #L213c0a.  v15:= v0.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L213c0e.  v0:= v19 @kind object;
  #L213c12.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L213c18.  v15:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L213c1c.  v0:= v19 @kind object;
  #L213c20.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213c26.  v15:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L213c2a.  v0:= v19 @kind object;
  #L213c2e.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L213c34.  if v20 == 0 then goto L213c4a;
  #L213c38.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L213c3e.  v16:= temp @kind wide;
  #L213c40.  v4:= v4 + v16 @kind long;
  #L213c44.  call `clear`(v3) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L213c4a.  v16:= v4 @kind wide;
  #L213c4e.  goto L213bea;
}
procedure `java.lang.String` `boundary`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213c60.  v0:= v1.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L213c64.  call temp:= `utf8`(v0) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L213c6a.  v0:= temp @kind object;
  #L213c6c.  return v0 @kind object;
}
procedure `long` `contentLength`(`okhttp3.MultipartBody` v4 @kind this) @signature `Lokhttp3/MultipartBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L213c80.  v0:= v4.`okhttp3.MultipartBody.contentLength` @type ^`long` @kind wide;
  #L213c84.  v2:= -1L;
  #L213c88.  v2:= lcmp(v0, v2);
  #L213c8c.  if v2 == 0 then goto L213c92;
  #L213c90.  return v0 @kind wide;
  #L213c92.  v2:= 0I;
  #L213c94.  v3:= 1I;
  #L213c96.  call temp:= `writeOrCountBytes`(v4, v2, v3) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L213c9c.  v0:= temp @kind wide;
  #L213c9e.  v4.`okhttp3.MultipartBody.contentLength` @type ^`long` := v0 @kind wide;
  #L213ca2.  goto L213c90;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213cb4.  v0:= v1.`okhttp3.MultipartBody.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L213cb8.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `part`(`okhttp3.MultipartBody` v1 @kind this, `int` v2 @name `index`) @signature `Lokhttp3/MultipartBody;.part:(I)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213ccc.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L213cd0.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L213cd6.  v0:= temp @kind object;
  #L213cd8.  v0:= (`okhttp3.MultipartBody$Part`) v0 @kind object;
  #L213cdc.  return v0 @kind object;
}
procedure `java.util.List` `parts`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.parts:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213cf0.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L213cf4.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213d08.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L213d0c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L213d12.  v0:= temp;
  #L213d14.  return v0;
}
procedure `okhttp3.MediaType` `type`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.type:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213d28.  v0:= v1.`okhttp3.MultipartBody.originalType` @type ^`okhttp3.MediaType` @kind object;
  #L213d2c.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.MultipartBody` v1 @kind this, `okio.BufferedSink` v2 @kind object @name `sink`) @signature `Lokhttp3/MultipartBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213d40.  v0:= 0I;
  #L213d42.  call temp:= `writeOrCountBytes`(v1, v2, v0) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L213d48.  return @kind void;
}

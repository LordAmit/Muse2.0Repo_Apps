record `okhttp3.Response` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.ResponseBody` `okhttp3.Response.body` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Response.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Response` `okhttp3.Response.cacheResponse` @AccessFlag FINAL;
  `int` `okhttp3.Response.code` @AccessFlag FINAL;
  `okhttp3.Handshake` `okhttp3.Response.handshake` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.Response.headers` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Response.message` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.networkResponse` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.priorResponse` @AccessFlag FINAL;
  `okhttp3.Protocol` `okhttp3.Response.protocol` @AccessFlag FINAL;
  `long` `okhttp3.Response.receivedResponseAtMillis` @AccessFlag FINAL;
  `okhttp3.Request` `okhttp3.Response.request` @AccessFlag FINAL;
  `long` `okhttp3.Response.sentRequestAtMillis` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Response` v2 @kind this, `okhttp3.Response$Builder` v3 @kind object @name `builder`) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Response$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19cbac.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19cbb2.  v0:= v3.`okhttp3.Response$Builder.request` @type ^`okhttp3.Request` @kind object;
  #L19cbb6.  v2.`okhttp3.Response.request` @type ^`okhttp3.Request` := v0 @kind object;
  #L19cbba.  v0:= v3.`okhttp3.Response$Builder.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19cbbe.  v2.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L19cbc2.  v0:= v3.`okhttp3.Response$Builder.code` @type ^`int`;
  #L19cbc6.  v2.`okhttp3.Response.code` @type ^`int` := v0;
  #L19cbca.  v0:= v3.`okhttp3.Response$Builder.message` @type ^`java.lang.String` @kind object;
  #L19cbce.  v2.`okhttp3.Response.message` @type ^`java.lang.String` := v0 @kind object;
  #L19cbd2.  v0:= v3.`okhttp3.Response$Builder.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19cbd6.  v2.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L19cbda.  v0:= v3.`okhttp3.Response$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19cbde.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19cbe4.  v0:= temp @kind object;
  #L19cbe6.  v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19cbea.  v0:= v3.`okhttp3.Response$Builder.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19cbee.  v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L19cbf2.  v0:= v3.`okhttp3.Response$Builder.networkResponse` @type ^`okhttp3.Response` @kind object;
  #L19cbf6.  v2.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19cbfa.  v0:= v3.`okhttp3.Response$Builder.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19cbfe.  v2.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19cc02.  v0:= v3.`okhttp3.Response$Builder.priorResponse` @type ^`okhttp3.Response` @kind object;
  #L19cc06.  v2.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19cc0a.  v0:= v3.`okhttp3.Response$Builder.sentRequestAtMillis` @type ^`long` @kind wide;
  #L19cc0e.  v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` := v0 @kind wide;
  #L19cc12.  v0:= v3.`okhttp3.Response$Builder.receivedResponseAtMillis` @type ^`long` @kind wide;
  #L19cc16.  v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` := v0 @kind wide;
  #L19cc1a.  return @kind void;
}
procedure `okhttp3.ResponseBody` `body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cc2c.  v0:= v1.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19cc30.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19cc44.  v0:= v2.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L19cc48.  if v0 == 0 then goto L19cc4e;
  #L19cc4c.  return v0 @kind object;
  #L19cc4e.  v1:= v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19cc52.  call temp:= `parse`(v1) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L19cc58.  v0:= temp @kind object;
  #L19cc5a.  v2.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L19cc5e.  goto L19cc4c;
}
procedure `okhttp3.Response` `cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cc70.  v0:= v1.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19cc74.  return v0 @kind object;
}
procedure `java.util.List` `challenges`(`okhttp3.Response` v3 @kind this) @signature `Lokhttp3/Response;.challenges:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19cc88.  v1:= v3.`okhttp3.Response.code` @type ^`int`;
  #L19cc8c.  v2:= 401I;
  #L19cc90.  if v1 != v2 then goto L19ccaa;
  #L19cc94.  v0:= "WWW-Authenticate" @kind object;
  #L19cc98.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L19cc9e.  v1:= temp @kind object;
  #L19cca0.  call temp:= `parseChallenges`(v1, v0) @signature `Lokhttp3/internal/http/HttpHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19cca6.  v1:= temp @kind object;
  #L19cca8.  return v1 @kind object;
  #L19ccaa.  v1:= v3.`okhttp3.Response.code` @type ^`int`;
  #L19ccae.  v2:= 407I;
  #L19ccb2.  if v1 != v2 then goto L19ccbc;
  #L19ccb6.  v0:= "Proxy-Authenticate" @kind object;
  #L19ccba.  goto L19cc98;
  #L19ccbc.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L19ccc2.  v1:= temp @kind object;
  #L19ccc4.  goto L19cca8;
}
procedure `void` `close`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ccd8.  v0:= v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19ccdc.  if v0 != 0 then goto L19ccf0;
  #L19cce0.  v0:= new `java.lang.IllegalStateException`;
  #L19cce4.  v1:= "response is not eligible for a body and must not be closed" @kind object;
  #L19cce8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ccee.  throw v0;
  #L19ccf0.  v0:= v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19ccf4.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L19ccfa.  return @kind void;
}
procedure `int` `code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cd0c.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L19cd10.  return v0;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cd24.  v0:= v1.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19cd28.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cd3c.  v0:= 0I;
  #L19cd3e.  call temp:= `header`(v1, v2, v0) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19cd44.  v0:= temp @kind object;
  #L19cd46.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v2 @kind this, `java.lang.String` v3 @kind object @name `name`, `java.lang.String` v4 @kind object @name `defaultValue`) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19cd58.  v1:= v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19cd5c.  call temp:= `get`(v1, v3) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19cd62.  v0:= temp @kind object;
  #L19cd64.  if v0 == 0 then goto L19cd6a;
  #L19cd68.  return v0 @kind object;
  #L19cd6a.  v0:= v4 @kind object;
  #L19cd6c.  goto L19cd68;
}
procedure `java.util.List` `headers`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Response;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cd80.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19cd84.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L19cd8a.  v0:= temp @kind object;
  #L19cd8c.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cda0.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19cda4.  return v0 @kind object;
}
procedure `boolean` `isRedirect`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.isRedirect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cdb8.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L19cdbc.  goto L19cdcc;
  #L19cdc2.  v0:= 0I;
  #L19cdc4.  return v0;
  #L19cdc6.  v0:= 1I;
  #L19cdc8.  goto L19cdc4;
  #L19cdca.  
  #L19cdcc.  switch v0
                  | 300 => goto L19cdc6
                  | 301 => goto L19cdc6
                  | 302 => goto L19cdc6
                  | 303 => goto L19cdc6
                  | 304 => goto L19cdc2
                  | 305 => goto L19cdc2
                  | 306 => goto L19cdc2
                  | 307 => goto L19cdc6
                  | 308 => goto L19cdc6
                  | else => goto L19cdc2;
}
procedure `boolean` `isSuccessful`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ce08.  v0:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19ce0c.  v1:= 200I;
  #L19ce10.  if v0 < v1 then goto L19ce24;
  #L19ce14.  v0:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19ce18.  v1:= 300I;
  #L19ce1c.  if v0 >= v1 then goto L19ce24;
  #L19ce20.  v0:= 1I;
  #L19ce22.  return v0;
  #L19ce24.  v0:= 0I;
  #L19ce26.  goto L19ce22;
}
procedure `java.lang.String` `message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ce38.  v0:= v1.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L19ce3c.  return v0 @kind object;
}
procedure `okhttp3.Response` `networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ce50.  v0:= v1.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` @kind object;
  #L19ce54.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `newBuilder`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ce68.  v0:= new `okhttp3.Response$Builder`;
  #L19ce6c.  call `<init>`(v0, v1) @signature `Lokhttp3/Response$Builder;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L19ce72.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `peekBody`(`okhttp3.Response` v7 @kind this, `long` v8 @name `byteCount`) @signature `Lokhttp3/Response;.peekBody:(J)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19ce84.  v3:= v7.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19ce88.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L19ce8e.  v2:= temp @kind object;
  #L19ce90.  call temp:= `request`(v2, v8) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L19ce96.  call temp:= `buffer`(v2) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L19ce9c.  v3:= temp @kind object;
  #L19ce9e.  call temp:= `clone`(v3) @signature `Lokio/Buffer;.clone:()Lokio/Buffer;` @kind virtual;
  #L19cea4.  v0:= temp @kind object;
  #L19cea6.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L19ceac.  v4:= temp @kind wide;
  #L19ceae.  v3:= lcmp(v4, v8);
  #L19ceb2.  if v3 <= 0 then goto L19ceea;
  #L19ceb6.  v1:= new `okio.Buffer`;
  #L19ceba.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19cec0.  call `write`(v1, v0, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L19cec6.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L19cecc.  v3:= v7.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19ced0.  call temp:= `contentType`(v3) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L19ced6.  v3:= temp @kind object;
  #L19ced8.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L19cede.  v4:= temp @kind wide;
  #L19cee0.  call temp:= `create`(v3, v4, v1) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L19cee6.  v3:= temp @kind object;
  #L19cee8.  return v3 @kind object;
  #L19ceea.  v1:= v0 @kind object;
  #L19ceec.  goto L19cecc;
}
procedure `okhttp3.Response` `priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cf00.  v0:= v1.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` @kind object;
  #L19cf04.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cf18.  v0:= v1.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19cf1c.  return v0 @kind object;
}
procedure `long` `receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19cf30.  v0:= v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` @kind wide;
  #L19cf34.  return v0 @kind wide;
}
procedure `okhttp3.Request` `request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cf48.  v0:= v1.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L19cf4c.  return v0 @kind object;
}
procedure `long` `sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19cf60.  v0:= v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` @kind wide;
  #L19cf64.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19cf78.  v0:= new `java.lang.StringBuilder`;
  #L19cf7c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19cf82.  v1:= "Response{protocol=" @kind object;
  #L19cf86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cf8c.  v0:= temp @kind object;
  #L19cf8e.  v1:= v2.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19cf92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cf98.  v0:= temp @kind object;
  #L19cf9a.  v1:= ", code=" @kind object;
  #L19cf9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cfa4.  v0:= temp @kind object;
  #L19cfa6.  v1:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19cfaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cfb0.  v0:= temp @kind object;
  #L19cfb2.  v1:= ", message=" @kind object;
  #L19cfb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cfbc.  v0:= temp @kind object;
  #L19cfbe.  v1:= v2.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L19cfc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cfc8.  v0:= temp @kind object;
  #L19cfca.  v1:= ", url=" @kind object;
  #L19cfce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cfd4.  v0:= temp @kind object;
  #L19cfd6.  v1:= v2.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L19cfda.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19cfe0.  v1:= temp @kind object;
  #L19cfe2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cfe8.  v0:= temp @kind object;
  #L19cfea.  v1:= 125I;
  #L19cfee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cff4.  v0:= temp @kind object;
  #L19cff6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19cffc.  v0:= temp @kind object;
  #L19cffe.  return v0 @kind object;
}

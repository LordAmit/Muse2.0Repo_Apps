record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.javaName` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19d598.  v7:= 4I;
  #L19d59a.  v6:= 3I;
  #L19d59c.  v5:= 2I;
  #L19d59e.  v4:= 1I;
  #L19d5a0.  v3:= 0I;
  #L19d5a2.  v0:= new `okhttp3.TlsVersion`;
  #L19d5a6.  v1:= "TLS_1_3" @kind object;
  #L19d5aa.  v2:= "TLSv1.3" @kind object;
  #L19d5ae.  call `<init>`(v0, v1, v3, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19d5b4.  `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19d5b8.  v0:= new `okhttp3.TlsVersion`;
  #L19d5bc.  v1:= "TLS_1_2" @kind object;
  #L19d5c0.  v2:= "TLSv1.2" @kind object;
  #L19d5c4.  call `<init>`(v0, v1, v4, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19d5ca.  `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19d5ce.  v0:= new `okhttp3.TlsVersion`;
  #L19d5d2.  v1:= "TLS_1_1" @kind object;
  #L19d5d6.  v2:= "TLSv1.1" @kind object;
  #L19d5da.  call `<init>`(v0, v1, v5, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19d5e0.  `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19d5e4.  v0:= new `okhttp3.TlsVersion`;
  #L19d5e8.  v1:= "TLS_1_0" @kind object;
  #L19d5ec.  v2:= "TLSv1" @kind object;
  #L19d5f0.  call `<init>`(v0, v1, v6, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19d5f6.  `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19d5fa.  v0:= new `okhttp3.TlsVersion`;
  #L19d5fe.  v1:= "SSL_3_0" @kind object;
  #L19d602.  v2:= "SSLv3" @kind object;
  #L19d606.  call `<init>`(v0, v1, v7, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19d60c.  `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19d610.  v0:= 5I;
  #L19d612.  v0:= new `okhttp3.TlsVersion`[v0];
  #L19d616.  v1:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d61a.  v0[v3]:= v1 @kind object;
  #L19d61e.  v1:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d622.  v0[v4]:= v1 @kind object;
  #L19d626.  v1:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d62a.  v0[v5]:= v1 @kind object;
  #L19d62e.  v1:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d632.  v0[v6]:= v1 @kind object;
  #L19d636.  v1:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d63a.  v0[v7]:= v1 @kind object;
  #L19d63e.  `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] := v0 @kind object;
  #L19d642.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object @name `javaName`) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19d654.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L19d65a.  v0.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L19d65e.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`java.lang.String` v3 @kind object @name `javaName`) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19d670.  v0:= -1I;
  #L19d672.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19d678.  v1:= temp;
  #L19d67a.  goto L19d73c;
  #L19d680.  goto L19d768;
  #L19d686.  v0:= new `java.lang.IllegalArgumentException`;
  #L19d68a.  v1:= new `java.lang.StringBuilder`;
  #L19d68e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d694.  v2:= "Unexpected TLS version: " @kind object;
  #L19d698.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d69e.  v1:= temp @kind object;
  #L19d6a0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d6a6.  v1:= temp @kind object;
  #L19d6a8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d6ae.  v1:= temp @kind object;
  #L19d6b0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d6b6.  throw v0;
  #L19d6b8.  v1:= "TLSv1.3" @kind object;
  #L19d6bc.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d6c2.  v1:= temp;
  #L19d6c4.  if v1 == 0 then goto L19d680;
  #L19d6c8.  v0:= 0I;
  #L19d6ca.  goto L19d680;
  #L19d6cc.  v1:= "TLSv1.2" @kind object;
  #L19d6d0.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d6d6.  v1:= temp;
  #L19d6d8.  if v1 == 0 then goto L19d680;
  #L19d6dc.  v0:= 1I;
  #L19d6de.  goto L19d680;
  #L19d6e0.  v1:= "TLSv1.1" @kind object;
  #L19d6e4.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d6ea.  v1:= temp;
  #L19d6ec.  if v1 == 0 then goto L19d680;
  #L19d6f0.  v0:= 2I;
  #L19d6f2.  goto L19d680;
  #L19d6f4.  v1:= "TLSv1" @kind object;
  #L19d6f8.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d6fe.  v1:= temp;
  #L19d700.  if v1 == 0 then goto L19d680;
  #L19d704.  v0:= 3I;
  #L19d706.  goto L19d680;
  #L19d708.  v1:= "SSLv3" @kind object;
  #L19d70c.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d712.  v1:= temp;
  #L19d714.  if v1 == 0 then goto L19d680;
  #L19d718.  v0:= 4I;
  #L19d71a.  goto L19d680;
  #L19d71c.  v0:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d720.  return v0 @kind object;
  #L19d722.  v0:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d726.  goto L19d720;
  #L19d728.  v0:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d72c.  goto L19d720;
  #L19d72e.  v0:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d732.  goto L19d720;
  #L19d734.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19d738.  goto L19d720;
  #L19d73a.  
  #L19d73c.  switch v1
                  | -503070503 => goto L19d6e0
                  | -503070502 => goto L19d6cc
                  | -503070501 => goto L19d6b8
                  | 79201641 => goto L19d708
                  | 79923350 => goto L19d6f4
                  | else => goto L19d680;
  #L19d768.  switch v0
                  | 0 => goto L19d71c
                  | 1 => goto L19d722
                  | 2 => goto L19d728
                  | 3 => goto L19d72e
                  | 4 => goto L19d734
                  | else => goto L19d686;
}
procedure `java.util.List` `forJavaNames`(`java.lang.String`[] v5 @kind object @name `tlsVersions`) @signature `Lokhttp3/TlsVersion;.forJavaNames:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19d794.  v0:= new `java.util.ArrayList`;
  #L19d798.  v2:= length @variable v5;
  #L19d79a.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19d7a0.  v3:= length @variable v5;
  #L19d7a2.  v2:= 0I;
  #L19d7a4.  if v2 >= v3 then goto L19d7c0;
  #L19d7a8.  v1:= v5[v2] @kind object;
  #L19d7ac.  call temp:= `forJavaName`(v1) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L19d7b2.  v4:= temp @kind object;
  #L19d7b4.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19d7ba.  v2:= v2 + 1;
  #L19d7be.  goto L19d7a4;
  #L19d7c0.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19d7c6.  v2:= temp @kind object;
  #L19d7c8.  return v2 @kind object;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19d7dc.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L19d7e0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L19d7e6.  v0:= temp @kind object;
  #L19d7e8.  v0:= (`okhttp3.TlsVersion`) v0 @kind object;
  #L19d7ec.  return v0 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19d800.  v0:= `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L19d804.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L19d80a.  v0:= temp @kind object;
  #L19d80c.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L19d810.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.TlsVersion` v1 @kind this) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d824.  v0:= v1.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` @kind object;
  #L19d828.  return v0 @kind object;
}

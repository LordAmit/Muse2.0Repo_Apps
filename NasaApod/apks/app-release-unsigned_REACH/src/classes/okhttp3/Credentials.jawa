record `okhttp3.Credentials` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Credentials` v0 @kind this) @signature `Lokhttp3/Credentials;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1971b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1971be.  return @kind void;
}
procedure `java.lang.String` `basic`(`java.lang.String` v1 @kind object @name `username`, `java.lang.String` v2 @kind object @name `password`) @signature `Lokhttp3/Credentials;.basic:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1971d0.  v0:= `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` @kind object;
  #L1971d4.  call temp:= `basic`(v1, v2, v0) @signature `Lokhttp3/Credentials;.basic:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1971da.  v0:= temp @kind object;
  #L1971dc.  return v0 @kind object;
}
procedure `java.lang.String` `basic`(`java.lang.String` v4 @kind object @name `username`, `java.lang.String` v5 @kind object @name `password`, `java.nio.charset.Charset` v6 @kind object @name `charset`) @signature `Lokhttp3/Credentials;.basic:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1971f0.  v2:= new `java.lang.StringBuilder`;
  #L1971f4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1971fa.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L197200.  v2:= temp @kind object;
  #L197202.  v3:= ":" @kind object;
  #L197206.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19720c.  v2:= temp @kind object;
  #L19720e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L197214.  v2:= temp @kind object;
  #L197216.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19721c.  v1:= temp @kind object;
  #L19721e.  call temp:= `encodeString`(v1, v6) @signature `Lokio/ByteString;.encodeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/ByteString;` @kind static;
  #L197224.  v2:= temp @kind object;
  #L197226.  call temp:= `base64`(v2) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L19722c.  v0:= temp @kind object;
  #L19722e.  v2:= new `java.lang.StringBuilder`;
  #L197232.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L197238.  v3:= "Basic " @kind object;
  #L19723c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L197242.  v2:= temp @kind object;
  #L197244.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19724a.  v2:= temp @kind object;
  #L19724c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L197252.  v2:= temp @kind object;
  #L197254.  return v2 @kind object;
}

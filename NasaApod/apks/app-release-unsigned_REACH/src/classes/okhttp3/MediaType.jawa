record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19b048.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L19b04c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19b052.  v0:= temp @kind object;
  #L19b054.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19b058.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L19b05c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19b062.  v0:= temp @kind object;
  #L19b064.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19b068.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object @name `mediaType`, `java.lang.String` v2 @kind object @name `type`, `java.lang.String` v3 @kind object @name `subtype`, `java.lang.String` v4 @kind object @name `charset`) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19b07c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b082.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L19b086.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L19b08a.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L19b08e.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L19b092.  return @kind void;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v14 @kind object @name `string`) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L19b0a4.  v9:= 0I;
  #L19b0a6.  v13:= 2I;
  #L19b0a8.  v12:= 1I;
  #L19b0aa.  v10:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L19b0ae.  call temp:= `matcher`(v10, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19b0b4.  v8:= temp @kind object;
  #L19b0b6.  call temp:= `lookingAt`(v8) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L19b0bc.  v10:= temp;
  #L19b0be.  if v10 != 0 then goto L19b0c4;
  #L19b0c2.  return v9 @kind object;
  #L19b0c4.  call temp:= `group`(v8, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b0ca.  v10:= temp @kind object;
  #L19b0cc.  v11:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19b0d0.  call temp:= `toLowerCase`(v10, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19b0d6.  v7:= temp @kind object;
  #L19b0d8.  call temp:= `group`(v8, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b0de.  v10:= temp @kind object;
  #L19b0e0.  v11:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19b0e4.  call temp:= `toLowerCase`(v10, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19b0ea.  v5:= temp @kind object;
  #L19b0ec.  v0:= 0I;
  #L19b0ee.  v10:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L19b0f2.  call temp:= `matcher`(v10, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19b0f8.  v3:= temp @kind object;
  #L19b0fa.  call temp:= `end`(v8) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L19b100.  v4:= temp;
  #L19b102.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b108.  v10:= temp;
  #L19b10a.  if v4 >= v10 then goto L19b1be;
  #L19b10e.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b114.  v10:= temp;
  #L19b116.  call temp:= `region`(v3, v4, v10) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L19b11c.  call temp:= `lookingAt`(v3) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L19b122.  v10:= temp;
  #L19b124.  if v10 == 0 then goto L19b0c2;
  #L19b128.  call temp:= `group`(v3, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b12e.  v2:= temp @kind object;
  #L19b130.  if v2 == 0 then goto L19b144;
  #L19b134.  v10:= "charset" @kind object;
  #L19b138.  call temp:= `equalsIgnoreCase`(v2, v10) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19b13e.  v10:= temp;
  #L19b140.  if v10 != 0 then goto L19b14e;
  #L19b144.  call temp:= `end`(v3) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L19b14a.  v4:= temp;
  #L19b14c.  goto L19b102;
  #L19b14e.  call temp:= `group`(v3, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b154.  v6:= temp @kind object;
  #L19b156.  if v6 == 0 then goto L19b1b2;
  #L19b15a.  v10:= "'" @kind object;
  #L19b15e.  call temp:= `startsWith`(v6, v10) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19b164.  v10:= temp;
  #L19b166.  if v10 == 0 then goto L19b1ae;
  #L19b16a.  v10:= "'" @kind object;
  #L19b16e.  call temp:= `endsWith`(v6, v10) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19b174.  v10:= temp;
  #L19b176.  if v10 == 0 then goto L19b1ae;
  #L19b17a.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b180.  v10:= temp;
  #L19b182.  if v10 <= v13 then goto L19b1ae;
  #L19b186.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b18c.  v10:= temp;
  #L19b18e.  v10:= v10 + -1;
  #L19b192.  call temp:= `substring`(v6, v12, v10) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19b198.  v1:= temp @kind object;
  #L19b19a.  if v0 == 0 then goto L19b1aa;
  #L19b19e.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19b1a4.  v10:= temp;
  #L19b1a6.  if v10 == 0 then goto L19b0c2;
  #L19b1aa.  v0:= v1 @kind object;
  #L19b1ac.  goto L19b144;
  #L19b1ae.  v1:= v6 @kind object;
  #L19b1b0.  goto L19b19a;
  #L19b1b2.  v10:= 3I;
  #L19b1b4.  call temp:= `group`(v3, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b1ba.  v1:= temp @kind object;
  #L19b1bc.  goto L19b19a;
  #L19b1be.  v9:= new `okhttp3.MediaType`;
  #L19b1c2.  call `<init>`(v9, v14, v7, v5, v0) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L19b1c8.  goto L19b0c2;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b1dc.  v0:= 0I;
  #L19b1de.  call temp:= `charset`(v1, v0) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L19b1e4.  v0:= temp @kind object;
  #L19b1e6.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v2 @kind this, `java.nio.charset.Charset` v3 @kind object @name `defaultValue`) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L19b1f8.  v1:= v2.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L19b1fc.  if v1 == 0 then goto L19b20c;
  #L19b200.  v1:= v2.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L19b204.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #Try_end0.  
  #L19b20a.  v3:= temp @kind object;
  #L19b20c.  return v3 @kind object;
  #L19b20e.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L19b210.  goto L19b20c;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L19b20e;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b234.  v0:= instanceof @variable v3 @type ^`okhttp3.MediaType` @kind boolean;
  #L19b238.  if v0 == 0 then goto L19b258;
  #L19b23c.  v3:= (`okhttp3.MediaType`) v3 @kind object;
  #L19b240.  v0:= v3.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19b244.  v1:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19b248.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b24e.  v0:= temp;
  #L19b250.  if v0 == 0 then goto L19b258;
  #L19b254.  v0:= 1I;
  #L19b256.  return v0;
  #L19b258.  v0:= 0I;
  #L19b25a.  goto L19b256;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b26c.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19b270.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19b276.  v0:= temp;
  #L19b278.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b28c.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L19b290.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b2a4.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19b2a8.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b2bc.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L19b2c0.  return v0 @kind object;
}

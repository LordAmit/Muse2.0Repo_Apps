record `okhttp3.MultipartBody$Part` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.MultipartBody$Part.body` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.MultipartBody$Part.headers` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Part` v0 @kind this, `okhttp3.Headers` v1 @kind object @name `headers`, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19b4b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b4ba.  v0.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` := v1 @kind object;
  #L19b4be.  v0.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L19b4c2.  return @kind void;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.Headers` v2 @kind object @name `headers`, `okhttp3.RequestBody` v3 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19b4d4.  if v3 != 0 then goto L19b4e8;
  #L19b4d8.  v0:= new `java.lang.NullPointerException`;
  #L19b4dc.  v1:= "body == null" @kind object;
  #L19b4e0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b4e6.  throw v0;
  #L19b4e8.  if v2 == 0 then goto L19b50c;
  #L19b4ec.  v0:= "Content-Type" @kind object;
  #L19b4f0.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19b4f6.  v0:= temp @kind object;
  #L19b4f8.  if v0 == 0 then goto L19b50c;
  #L19b4fc.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b500.  v1:= "Unexpected header: Content-Type" @kind object;
  #L19b504.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b50a.  throw v0;
  #L19b50c.  if v2 == 0 then goto L19b530;
  #L19b510.  v0:= "Content-Length" @kind object;
  #L19b514.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19b51a.  v0:= temp @kind object;
  #L19b51c.  if v0 == 0 then goto L19b530;
  #L19b520.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b524.  v1:= "Unexpected header: Content-Length" @kind object;
  #L19b528.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b52e.  throw v0;
  #L19b530.  v0:= new `okhttp3.MultipartBody$Part`;
  #L19b534.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind direct;
  #L19b53a.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.RequestBody` v1 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19b54c.  v0:= 0I;
  #L19b54e.  call temp:= `create`(v0, v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b554.  v0:= temp @kind object;
  #L19b556.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19b568.  v1:= 0I;
  #L19b56a.  call temp:= `create`(v1, v3) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L19b570.  v0:= temp @kind object;
  #L19b572.  call temp:= `createFormData`(v2, v1, v0) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b578.  v0:= temp @kind object;
  #L19b57a.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v4 @kind object @name `name`, `java.lang.String` v5 @kind object @name `filename`, `okhttp3.RequestBody` v6 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19b58c.  if v4 != 0 then goto L19b5a0;
  #L19b590.  v1:= new `java.lang.NullPointerException`;
  #L19b594.  v2:= "name == null" @kind object;
  #L19b598.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b59e.  throw v1;
  #L19b5a0.  v0:= new `java.lang.StringBuilder`;
  #L19b5a4.  v1:= "form-data; name=" @kind object;
  #L19b5a8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b5ae.  call temp:= `appendQuotedString`(v0, v4) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L19b5b4.  if v5 == 0 then goto L19b5c8;
  #L19b5b8.  v1:= "; filename=" @kind object;
  #L19b5bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b5c2.  call temp:= `appendQuotedString`(v0, v5) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L19b5c8.  v1:= 2I;
  #L19b5ca.  v1:= new `java.lang.String`[v1];
  #L19b5ce.  v2:= 0I;
  #L19b5d0.  v3:= "Content-Disposition" @kind object;
  #L19b5d4.  v1[v2]:= v3 @kind object;
  #L19b5d8.  v2:= 1I;
  #L19b5da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b5e0.  v3:= temp @kind object;
  #L19b5e2.  v1[v2]:= v3 @kind object;
  #L19b5e6.  call temp:= `of`(v1) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L19b5ec.  v1:= temp @kind object;
  #L19b5ee.  call temp:= `create`(v1, v6) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b5f4.  v1:= temp @kind object;
  #L19b5f6.  return v1 @kind object;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b608.  v0:= v1.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19b60c.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b620.  v0:= v1.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L19b624.  return v0 @kind object;
}

record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketReader.closed` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.frameCallback` @AccessFlag FINAL;
  `long` `okhttp3.internal.ws.WebSocketReader.frameLength` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isClient` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isControlFrame` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isFinalFrame` @AccessFlag ;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketReader.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskKey` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.ws.WebSocketReader.opcode` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v2 @kind this, `boolean` v3 @name `isClient`, `okio.BufferedSource` v4 @kind object @name `source`, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v5 @kind object @name `frameCallback`) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1aab68.  v1:= 0I;
  #L1aab6a.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aab70.  v0:= new `okio.Buffer`;
  #L1aab74.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1aab7a.  v2.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1aab7e.  v0:= new `okio.Buffer`;
  #L1aab82.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1aab88.  v2.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1aab8c.  if v4 != 0 then goto L1aaba0;
  #L1aab90.  v0:= new `java.lang.NullPointerException`;
  #L1aab94.  v1:= "source == null" @kind object;
  #L1aab98.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aab9e.  throw v0;
  #L1aaba0.  if v5 != 0 then goto L1aabb4;
  #L1aaba4.  v0:= new `java.lang.NullPointerException`;
  #L1aaba8.  v1:= "frameCallback == null" @kind object;
  #L1aabac.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aabb2.  throw v0;
  #L1aabb4.  v2.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` := v3 @kind boolean;
  #L1aabb8.  v2.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` := v4 @kind object;
  #L1aabbc.  v2.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v5 @kind object;
  #L1aabc0.  if v3 == 0 then goto L1aabd4;
  #L1aabc4.  v0:= v1 @kind object;
  #L1aabc6.  v2.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] := v0 @kind object;
  #L1aabca.  if v3 == 0 then goto L1aabdc;
  #L1aabce.  v2.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v1 @kind object;
  #L1aabd2.  return @kind void;
  #L1aabd4.  v0:= 4I;
  #L1aabd6.  v0:= new `byte`[v0];
  #L1aabda.  goto L1aabc6;
  #L1aabdc.  v1:= new `okio.Buffer$UnsafeCursor`;
  #L1aabe0.  call `<init>`(v1) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1aabe6.  goto L1aabce;
}
procedure `void` `readControlFrame`(`okhttp3.internal.ws.WebSocketReader` v12 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1aabf8.  v10:= 0L;
  #L1aabfc.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aac00.  v5:= lcmp(v6, v10);
  #L1aac04.  if v5 <= 0 then goto L1aac52;
  #L1aac08.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aac0c.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1aac10.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aac14.  call `readFully`(v5, v6, v8) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1aac1a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1aac1e.  if v5 != 0 then goto L1aac52;
  #L1aac22.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1aac26.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1aac2a.  call temp:= `readAndWriteUnsafe`(v5, v6) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1aac30.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1aac34.  call temp:= `seek`(v5, v10) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1aac3a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1aac3e.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1aac42.  call `toggleMask`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1aac48.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1aac4c.  call `close`(v5) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1aac52.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1aac56.  goto L1aad44;
  #L1aac5c.  v5:= new `java.net.ProtocolException`;
  #L1aac60.  v6:= new `java.lang.StringBuilder`;
  #L1aac64.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aac6a.  v7:= "Unknown control opcode: " @kind object;
  #L1aac6e.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aac74.  v6:= temp @kind object;
  #L1aac76.  v7:= v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1aac7a.  call temp:= `toHexString`(v7) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1aac80.  v7:= temp @kind object;
  #L1aac82.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aac88.  v6:= temp @kind object;
  #L1aac8a.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aac90.  v6:= temp @kind object;
  #L1aac92.  call `<init>`(v5, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aac98.  throw v5;
  #L1aac9a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1aac9e.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1aaca2.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1aaca8.  v6:= temp @kind object;
  #L1aacaa.  call `onReadPing`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L1aacb0.  return @kind void;
  #L1aacb2.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1aacb6.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1aacba.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1aacc0.  v6:= temp @kind object;
  #L1aacc2.  call `onReadPong`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L1aacc8.  goto L1aacb0;
  #L1aacca.  v2:= 1005I;
  #L1aacce.  v4:= "" @kind object;
  #L1aacd2.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1aacd6.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1aacdc.  v0:= temp @kind wide;
  #L1aacde.  v6:= 1L;
  #L1aace2.  v5:= lcmp(v0, v6);
  #L1aace6.  if v5 != 0 then goto L1aacfa;
  #L1aacea.  v5:= new `java.net.ProtocolException`;
  #L1aacee.  v6:= "Malformed close payload length of 1." @kind object;
  #L1aacf2.  call `<init>`(v5, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aacf8.  throw v5;
  #L1aacfa.  v5:= lcmp(v0, v10);
  #L1aacfe.  if v5 == 0 then goto L1aad32;
  #L1aad02.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1aad06.  call temp:= `readShort`(v5) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L1aad0c.  v2:= temp;
  #L1aad0e.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1aad12.  call temp:= `readUtf8`(v5) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1aad18.  v4:= temp @kind object;
  #L1aad1a.  call temp:= `closeCodeExceptionMessage`(v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L1aad20.  v3:= temp @kind object;
  #L1aad22.  if v3 == 0 then goto L1aad32;
  #L1aad26.  v5:= new `java.net.ProtocolException`;
  #L1aad2a.  call `<init>`(v5, v3) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aad30.  throw v5;
  #L1aad32.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1aad36.  call `onReadClose`(v5, v2, v4) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L1aad3c.  v5:= 1I;
  #L1aad3e.  v12.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` := v5 @kind boolean;
  #L1aad42.  goto L1aacb0;
  #L1aad44.  switch v5
                  | 8 => goto L1aacca
                  | 9 => goto L1aac9a
                  | 10 => goto L1aacb2
                  | else => goto L1aac5c;
}
procedure `void` `readHeader`(`okhttp3.internal.ws.WebSocketReader` v12 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1aad68.  v9:= 1I;
  #L1aad6a.  v10:= 0I;
  #L1aad6c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1aad70.  if v8 == 0 then goto L1aad84;
  #L1aad74.  v8:= new `java.io.IOException`;
  #L1aad78.  v9:= "closed" @kind object;
  #L1aad7c.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aad82.  throw v8;
  #L1aad84.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aad88.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1aad8e.  v8:= temp @kind object;
  #L1aad90.  call temp:= `timeoutNanos`(v8) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1aad96.  v6:= temp @kind wide;
  #L1aad98.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aad9c.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1aada2.  v8:= temp @kind object;
  #L1aada4.  call temp:= `clearTimeout`(v8) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #Try_start0.  
  #L1aadaa.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aadae.  call temp:= `readByte`(v8) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #Try_end0.  
  #L1aadb4.  v8:= temp;
  #L1aadb6.  v0:= v8 ^& 255;
  #L1aadba.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aadbe.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1aadc4.  v8:= temp @kind object;
  #L1aadc6.  v11:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1aadca.  call temp:= `timeout`(v8, v6, v11) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1aadd0.  v8:= v0 ^& 15;
  #L1aadd4.  v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int` := v8;
  #L1aadd8.  v8:= v0 ^& 128;
  #L1aaddc.  if v8 == 0 then goto L1aae2e;
  #L1aade0.  v8:= v9;
  #L1aade2.  v12.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` := v8 @kind boolean;
  #L1aade6.  v8:= v0 ^& 8;
  #L1aadea.  if v8 == 0 then goto L1aae32;
  #L1aadee.  v8:= v9;
  #L1aadf0.  v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` := v8 @kind boolean;
  #L1aadf4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1aadf8.  if v8 == 0 then goto L1aae36;
  #L1aadfc.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L1aae00.  if v8 != 0 then goto L1aae36;
  #L1aae04.  v8:= new `java.net.ProtocolException`;
  #L1aae08.  v9:= "Control frames must be final." @kind object;
  #L1aae0c.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aae12.  throw v8;
  #L1aae14.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1aae16.  v9:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aae1a.  call temp:= `timeout`(v9) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1aae20.  v9:= temp @kind object;
  #L1aae22.  v10:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1aae26.  call temp:= `timeout`(v9, v6, v10) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1aae2c.  throw v8;
  #L1aae2e.  v8:= v10;
  #L1aae30.  goto L1aade2;
  #L1aae32.  v8:= v10;
  #L1aae34.  goto L1aadf0;
  #L1aae36.  v8:= v0 ^& 64;
  #L1aae3a.  if v8 == 0 then goto L1aae70;
  #L1aae3e.  v3:= v9;
  #L1aae40.  v8:= v0 ^& 32;
  #L1aae44.  if v8 == 0 then goto L1aae74;
  #L1aae48.  v4:= v9;
  #L1aae4a.  v8:= v0 ^& 16;
  #L1aae4e.  if v8 == 0 then goto L1aae78;
  #L1aae52.  v5:= v9;
  #L1aae54.  if v3 != 0 then goto L1aae60;
  #L1aae58.  if v4 != 0 then goto L1aae60;
  #L1aae5c.  if v5 == 0 then goto L1aae7c;
  #L1aae60.  v8:= new `java.net.ProtocolException`;
  #L1aae64.  v9:= "Reserved flags are unsupported." @kind object;
  #L1aae68.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aae6e.  throw v8;
  #L1aae70.  v3:= v10;
  #L1aae72.  goto L1aae40;
  #L1aae74.  v4:= v10;
  #L1aae76.  goto L1aae4a;
  #L1aae78.  v5:= v10;
  #L1aae7a.  goto L1aae54;
  #L1aae7c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aae80.  call temp:= `readByte`(v8) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1aae86.  v8:= temp;
  #L1aae88.  v1:= v8 ^& 255;
  #L1aae8c.  v8:= v1 ^& 128;
  #L1aae90.  if v8 == 0 then goto L1aaeb6;
  #L1aae94.  v2:= v9;
  #L1aae96.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1aae9a.  if v2 != v8 then goto L1aaec0;
  #L1aae9e.  v9:= new `java.net.ProtocolException`;
  #L1aaea2.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1aaea6.  if v8 == 0 then goto L1aaeba;
  #L1aaeaa.  v8:= "Server-sent frames must not be masked." @kind object;
  #L1aaeae.  call `<init>`(v9, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aaeb4.  throw v9;
  #L1aaeb6.  v2:= v10;
  #L1aaeb8.  goto L1aae96;
  #L1aaeba.  v8:= "Client-sent frames must be masked." @kind object;
  #L1aaebe.  goto L1aaeae;
  #L1aaec0.  v8:= v1 ^& 127;
  #L1aaec4.  v8:= (`long`) v8 @kind i2l;
  #L1aaec6.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1aaeca.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aaece.  v10:= 126L;
  #L1aaed2.  v8:= lcmp(v8, v10);
  #L1aaed6.  if v8 != 0 then goto L1aaf1c;
  #L1aaeda.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aaede.  call temp:= `readShort`(v8) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L1aaee4.  v8:= temp;
  #L1aaee6.  v8:= (`long`) v8 @kind i2l;
  #L1aaee8.  v10:= 65535L;
  #L1aaeee.  v8:= v8 ^& v10 @kind long;
  #L1aaef0.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1aaef4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1aaef8.  if v8 == 0 then goto L1aaf96;
  #L1aaefc.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aaf00.  v10:= 125L;
  #L1aaf04.  v8:= lcmp(v8, v10);
  #L1aaf08.  if v8 <= 0 then goto L1aaf96;
  #L1aaf0c.  v8:= new `java.net.ProtocolException`;
  #L1aaf10.  v9:= "Control frame must be less than 125B." @kind object;
  #L1aaf14.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aaf1a.  throw v8;
  #L1aaf1c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aaf20.  v10:= 127L;
  #L1aaf24.  v8:= lcmp(v8, v10);
  #L1aaf28.  if v8 != 0 then goto L1aaef4;
  #L1aaf2c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aaf30.  call temp:= `readLong`(v8) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L1aaf36.  v8:= temp @kind wide;
  #L1aaf38.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1aaf3c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aaf40.  v10:= 0L;
  #L1aaf44.  v8:= lcmp(v8, v10);
  #L1aaf48.  if v8 >= 0 then goto L1aaef4;
  #L1aaf4c.  v8:= new `java.net.ProtocolException`;
  #L1aaf50.  v9:= new `java.lang.StringBuilder`;
  #L1aaf54.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aaf5a.  v10:= "Frame length 0x" @kind object;
  #L1aaf5e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aaf64.  v9:= temp @kind object;
  #L1aaf66.  v10:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aaf6a.  call temp:= `toHexString`(v10) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L1aaf70.  v10:= temp @kind object;
  #L1aaf72.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aaf78.  v9:= temp @kind object;
  #L1aaf7a.  v10:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L1aaf7e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aaf84.  v9:= temp @kind object;
  #L1aaf86.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aaf8c.  v9:= temp @kind object;
  #L1aaf8e.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aaf94.  throw v8;
  #L1aaf96.  if v2 == 0 then goto L1aafa8;
  #L1aaf9a.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aaf9e.  v9:= v12.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1aafa2.  call `readFully`(v8, v9) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L1aafa8.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1aae14;
}
procedure `void` `readMessage`(`okhttp3.internal.ws.WebSocketReader` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1aafc8.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1aafcc.  if v0 == 0 then goto L1aafe0;
  #L1aafd0.  v0:= new `java.io.IOException`;
  #L1aafd4.  v1:= "closed" @kind object;
  #L1aafd8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aafde.  throw v0;
  #L1aafe0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aafe4.  v2:= 0L;
  #L1aafe8.  v0:= lcmp(v0, v2);
  #L1aafec.  if v0 <= 0 then goto L1ab04c;
  #L1aaff0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1aaff4.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1aaff8.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1aaffc.  call `readFully`(v0, v1, v2) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1ab002.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ab006.  if v0 != 0 then goto L1ab04c;
  #L1ab00a.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab00e.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab012.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ab018.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab01c.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab020.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ab026.  v2:= temp @kind wide;
  #L1ab028.  v4:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab02c.  v2:= v2 - v4 @kind long;
  #L1ab02e.  call temp:= `seek`(v0, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ab034.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab038.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ab03c.  call `toggleMask`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ab042.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab046.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ab04c.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L1ab050.  if v0 == 0 then goto L1ab056;
  #L1ab054.  return @kind void;
  #L1ab056.  call `readUntilNonControlFrame`(v6) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @kind direct;
  #L1ab05c.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ab060.  if v0 == 0 then goto L1aafc8;
  #L1ab064.  v0:= new `java.net.ProtocolException`;
  #L1ab068.  v1:= new `java.lang.StringBuilder`;
  #L1ab06c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab072.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L1ab076.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab07c.  v1:= temp @kind object;
  #L1ab07e.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ab082.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ab088.  v2:= temp @kind object;
  #L1ab08a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab090.  v1:= temp @kind object;
  #L1ab092.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab098.  v1:= temp @kind object;
  #L1ab09a.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab0a0.  throw v0;
}
procedure `void` `readMessageFrame`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ab0b4.  v2:= 1I;
  #L1ab0b6.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ab0ba.  if v0 == v2 then goto L1ab0fe;
  #L1ab0be.  v1:= 2I;
  #L1ab0c0.  if v0 == v1 then goto L1ab0fe;
  #L1ab0c4.  v1:= new `java.net.ProtocolException`;
  #L1ab0c8.  v2:= new `java.lang.StringBuilder`;
  #L1ab0cc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab0d2.  v3:= "Unknown opcode: " @kind object;
  #L1ab0d6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab0dc.  v2:= temp @kind object;
  #L1ab0de.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ab0e4.  v3:= temp @kind object;
  #L1ab0e6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab0ec.  v2:= temp @kind object;
  #L1ab0ee.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab0f4.  v2:= temp @kind object;
  #L1ab0f6.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab0fc.  throw v1;
  #L1ab0fe.  call `readMessage`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @kind direct;
  #L1ab104.  if v0 != v2 then goto L1ab120;
  #L1ab108.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ab10c.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab110.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1ab116.  v2:= temp @kind object;
  #L1ab118.  call `onReadMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L1ab11e.  return @kind void;
  #L1ab120.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ab124.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab128.  call temp:= `readByteString`(v2) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ab12e.  v2:= temp @kind object;
  #L1ab130.  call `onReadMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L1ab136.  goto L1ab11e;
}
procedure `void` `readUntilNonControlFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ab148.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ab14c.  if v0 != 0 then goto L1ab15e;
  #L1ab150.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L1ab156.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ab15a.  if v0 != 0 then goto L1ab160;
  #L1ab15e.  return @kind void;
  #L1ab160.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L1ab166.  goto L1ab148;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag  {
    temp;
    v0;

  #L1ab178.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L1ab17e.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ab182.  if v0 == 0 then goto L1ab18e;
  #L1ab186.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L1ab18c.  return @kind void;
  #L1ab18e.  call `readMessageFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @kind direct;
  #L1ab194.  goto L1ab18c;
}

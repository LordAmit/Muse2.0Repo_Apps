record `okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @AccessFlag ;
  `long` `okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @AccessFlag ;
  `int` `okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @AccessFlag ;
  `okhttp3.internal.ws.WebSocketWriter` `okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v0 @kind this, `okhttp3.internal.ws.WebSocketWriter` v1 @kind object @name `this$0`) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21cb3c.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` := v1 @kind object;
  #L21cb40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21cb46.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21cb58.  v5:= 1I;
  #L21cb5a.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21cb5e.  if v0 == 0 then goto L21cb72;
  #L21cb62.  v0:= new `java.io.IOException`;
  #L21cb66.  v1:= "closed" @kind object;
  #L21cb6a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21cb70.  throw v0;
  #L21cb72.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cb76.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21cb7a.  v2:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cb7e.  v2:= v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21cb82.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21cb88.  v2:= temp @kind wide;
  #L21cb8a.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21cb8e.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21cb94.  v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v5 @kind boolean;
  #L21cb98.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cb9c.  v1:= 0I;
  #L21cb9e.  v0.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v1 @kind boolean;
  #L21cba2.  return @kind void;
}
procedure `void` `flush`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21cbb4.  v5:= 0I;
  #L21cbb6.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21cbba.  if v0 == 0 then goto L21cbce;
  #L21cbbe.  v0:= new `java.io.IOException`;
  #L21cbc2.  v1:= "closed" @kind object;
  #L21cbc6.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21cbcc.  throw v0;
  #L21cbce.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cbd2.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21cbd6.  v2:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cbda.  v2:= v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21cbde.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21cbe4.  v2:= temp @kind wide;
  #L21cbe6.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21cbea.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21cbf0.  v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v5 @kind boolean;
  #L21cbf4.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21cc08.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cc0c.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L21cc10.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L21cc16.  v0:= temp @kind object;
  #L21cc18.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v12 @kind this, `okio.Buffer` v13 @kind object @name `source`, `long` v14 @name `byteCount`) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L21cc2c.  v5:= 0I;
  #L21cc2e.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21cc32.  if v0 == 0 then goto L21cc46;
  #L21cc36.  v0:= new `java.io.IOException`;
  #L21cc3a.  v1:= "closed" @kind object;
  #L21cc3e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21cc44.  throw v0;
  #L21cc46.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cc4a.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21cc4e.  call `write`(v0, v13, v14) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L21cc54.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21cc58.  if v0 == 0 then goto L21ccc8;
  #L21cc5c.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` @kind wide;
  #L21cc60.  v8:= -1L;
  #L21cc64.  v0:= lcmp(v0, v8);
  #L21cc68.  if v0 == 0 then goto L21ccc8;
  #L21cc6c.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cc70.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21cc74.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21cc7a.  v0:= temp @kind wide;
  #L21cc7c.  v8:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` @kind wide;
  #L21cc80.  v10:= 8192L;
  #L21cc84.  v8:= v8 - v10 @kind long;
  #L21cc86.  v0:= lcmp(v0, v8);
  #L21cc8a.  if v0 <= 0 then goto L21ccc8;
  #L21cc8e.  v6:= 1I;
  #L21cc90.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21cc94.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21cc98.  call temp:= `completeSegmentByteCount`(v0) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L21cc9e.  v2:= temp @kind wide;
  #L21cca0.  v0:= 0L;
  #L21cca4.  v0:= lcmp(v2, v0);
  #L21cca8.  if v0 <= 0 then goto L21ccc6;
  #L21ccac.  if v6 != 0 then goto L21ccc6;
  #L21ccb0.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21ccb4.  v1:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21ccb8.  v4:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21ccbc.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21ccc2.  v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v5 @kind boolean;
  #L21ccc6.  return @kind void;
  #L21ccc8.  v6:= v5;
  #L21ccca.  goto L21cc90;
}

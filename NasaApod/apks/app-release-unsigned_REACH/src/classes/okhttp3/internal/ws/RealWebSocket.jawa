record `okhttp3.internal.ws.RealWebSocket` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.WebSocket` @kind interface, `okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind interface {
  `boolean` `okhttp3.internal.ws.RealWebSocket.awaitingPong` @AccessFlag PRIVATE;
  `okhttp3.Call` `okhttp3.internal.ws.RealWebSocket.call` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledFuture` `okhttp3.internal.ws.RealWebSocket.cancelFuture` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.ws.RealWebSocket.enqueuedClose` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledExecutorService` `okhttp3.internal.ws.RealWebSocket.executor` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.ws.RealWebSocket.failed` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.ws.RealWebSocket.key` @AccessFlag PRIVATE_FINAL;
  `okhttp3.WebSocketListener` `okhttp3.internal.ws.RealWebSocket.listener` @AccessFlag FINAL;
  `java.util.ArrayDeque` `okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Request` `okhttp3.internal.ws.RealWebSocket.originalRequest` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.ws.RealWebSocket.pingIntervalMillis` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayDeque` `okhttp3.internal.ws.RealWebSocket.pongQueue` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.ws.RealWebSocket.queueSize` @AccessFlag PRIVATE;
  `java.util.Random` `okhttp3.internal.ws.RealWebSocket.random` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader` `okhttp3.internal.ws.RealWebSocket.reader` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.ws.RealWebSocket.receivedCloseCode` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.ws.RealWebSocket.receivedCloseReason` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.ws.RealWebSocket.receivedPingCount` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.ws.RealWebSocket.receivedPongCount` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.ws.RealWebSocket.sentPingCount` @AccessFlag PRIVATE;
  `okhttp3.internal.ws.RealWebSocket$Streams` `okhttp3.internal.ws.RealWebSocket.streams` @AccessFlag PRIVATE;
  `okhttp3.internal.ws.WebSocketWriter` `okhttp3.internal.ws.RealWebSocket.writer` @AccessFlag PRIVATE;
  `java.lang.Runnable` `okhttp3.internal.ws.RealWebSocket.writerRunnable` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@okhttp3.internal.ws.RealWebSocket.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@okhttp3.internal.ws.RealWebSocket.CANCEL_AFTER_CLOSE_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.RealWebSocket.MAX_QUEUE_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.ws.RealWebSocket.ONLY_HTTP1` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/ws/RealWebSocket;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L21bd3c.  v0:= constclass @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L21bd40.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L21bd46.  v0:= temp;
  #L21bd48.  if v0 != 0 then goto L21bd64;
  #L21bd4c.  v0:= 1I;
  #L21bd4e.  `@@okhttp3.internal.ws.RealWebSocket.$assertionsDisabled` @type ^`boolean` := v0 @kind boolean;
  #L21bd52.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L21bd56.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L21bd5c.  v0:= temp @kind object;
  #L21bd5e.  `@@okhttp3.internal.ws.RealWebSocket.ONLY_HTTP1` @type ^`java.util.List` := v0 @kind object;
  #L21bd62.  return @kind void;
  #L21bd64.  v0:= 0I;
  #L21bd66.  goto L21bd4e;
}
procedure `void` `<init>`(`okhttp3.internal.ws.RealWebSocket` v4 @kind this, `okhttp3.Request` v5 @kind object @name `request`, `okhttp3.WebSocketListener` v6 @kind object @name `listener`, `java.util.Random` v7 @kind object @name `random`, `long` v8 @name `pingIntervalMillis`) @signature `Lokhttp3/internal/ws/RealWebSocket;.<init>:(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21bd78.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21bd7e.  v1:= new `java.util.ArrayDeque`;
  #L21bd82.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L21bd88.  v4.`okhttp3.internal.ws.RealWebSocket.pongQueue` @type ^`java.util.ArrayDeque` := v1 @kind object;
  #L21bd8c.  v1:= new `java.util.ArrayDeque`;
  #L21bd90.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L21bd96.  v4.`okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @type ^`java.util.ArrayDeque` := v1 @kind object;
  #L21bd9a.  v1:= -1I;
  #L21bd9c.  v4.`okhttp3.internal.ws.RealWebSocket.receivedCloseCode` @type ^`int` := v1;
  #L21bda0.  v1:= "GET" @kind object;
  #L21bda4.  call temp:= `method`(v5) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L21bdaa.  v2:= temp @kind object;
  #L21bdac.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21bdb2.  v1:= temp;
  #L21bdb4.  if v1 != 0 then goto L21bdf2;
  #L21bdb8.  v1:= new `java.lang.IllegalArgumentException`;
  #L21bdbc.  v2:= new `java.lang.StringBuilder`;
  #L21bdc0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21bdc6.  v3:= "Request must be GET: " @kind object;
  #L21bdca.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bdd0.  v2:= temp @kind object;
  #L21bdd2.  call temp:= `method`(v5) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L21bdd8.  v3:= temp @kind object;
  #L21bdda.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bde0.  v2:= temp @kind object;
  #L21bde2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21bde8.  v2:= temp @kind object;
  #L21bdea.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21bdf0.  throw v1;
  #L21bdf2.  v4.`okhttp3.internal.ws.RealWebSocket.originalRequest` @type ^`okhttp3.Request` := v5 @kind object;
  #L21bdf6.  v4.`okhttp3.internal.ws.RealWebSocket.listener` @type ^`okhttp3.WebSocketListener` := v6 @kind object;
  #L21bdfa.  v4.`okhttp3.internal.ws.RealWebSocket.random` @type ^`java.util.Random` := v7 @kind object;
  #L21bdfe.  v4.`okhttp3.internal.ws.RealWebSocket.pingIntervalMillis` @type ^`long` := v8 @kind wide;
  #L21be02.  v1:= 16I;
  #L21be06.  v0:= new `byte`[v1];
  #L21be0a.  call `nextBytes`(v7, v0) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L21be10.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L21be16.  v1:= temp @kind object;
  #L21be18.  call temp:= `base64`(v1) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L21be1e.  v1:= temp @kind object;
  #L21be20.  v4.`okhttp3.internal.ws.RealWebSocket.key` @type ^`java.lang.String` := v1 @kind object;
  #L21be24.  v1:= new `okhttp3.internal.ws.RealWebSocket$1`;
  #L21be28.  call `<init>`(v1, v4) @signature `Lokhttp3/internal/ws/RealWebSocket$1;.<init>:(Lokhttp3/internal/ws/RealWebSocket;)V` @kind direct;
  #L21be2e.  v4.`okhttp3.internal.ws.RealWebSocket.writerRunnable` @type ^`java.lang.Runnable` := v1 @kind object;
  #L21be32.  return @kind void;
}
procedure `void` `runWriter`(`okhttp3.internal.ws.RealWebSocket` v2 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.runWriter:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L21be44.  v0:= `@@okhttp3.internal.ws.RealWebSocket.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21be48.  if v0 != 0 then goto L21be64;
  #L21be4c.  call temp:= `holdsLock`(v2) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21be52.  v0:= temp;
  #L21be54.  if v0 != 0 then goto L21be64;
  #L21be58.  v0:= new `java.lang.AssertionError`;
  #L21be5c.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21be62.  throw v0;
  #L21be64.  v0:= v2.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21be68.  if v0 == 0 then goto L21be7a;
  #L21be6c.  v0:= v2.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21be70.  v1:= v2.`okhttp3.internal.ws.RealWebSocket.writerRunnable` @type ^`java.lang.Runnable` @kind object;
  #L21be74.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L21be7a.  return @kind void;
}
procedure `boolean` `send`(`okhttp3.internal.ws.RealWebSocket` v6 @kind this, `okio.ByteString` v7 @kind object @name `data`, `int` v8 @name `formatOpcode`) @signature `Lokhttp3/internal/ws/RealWebSocket;.send:(Lokio/ByteString;I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21be8c.  v0:= 0I;
  #L21be8e.  @monitorenter v6
  #Try_start0.  
  #L21be90.  v1:= v6.`okhttp3.internal.ws.RealWebSocket.failed` @type ^`boolean` @kind boolean;
  #L21be94.  if v1 != 0 then goto L21bea0;
  #L21be98.  v1:= v6.`okhttp3.internal.ws.RealWebSocket.enqueuedClose` @type ^`boolean` @kind boolean;
  #Try_end0.  
  #L21be9c.  if v1 == 0 then goto L21bea4;
  #L21bea0.  @monitorexit v6
  #L21bea2.  return v0;
  #Try_start1.  
  #L21bea4.  v2:= v6.`okhttp3.internal.ws.RealWebSocket.queueSize` @type ^`long` @kind wide;
  #L21bea8.  call temp:= `size`(v7) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L21beae.  v1:= temp;
  #L21beb0.  v4:= (`long`) v1 @kind i2l;
  #L21beb2.  v2:= v2 + v4 @kind long;
  #L21beb4.  v4:= 16777216L;
  #L21beba.  v1:= lcmp(v2, v4);
  #L21bebe.  if v1 <= 0 then goto L21bed6;
  #L21bec2.  v1:= 1001I;
  #L21bec6.  v2:= 0I;
  #L21bec8.  call temp:= `close`(v6, v1, v2) @signature `Lokhttp3/internal/ws/RealWebSocket;.close:(ILjava/lang/String;)Z` @kind virtual;
  #Try_end1.  
  #L21bece.  goto L21bea0;
  #L21bed0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21bed2.  @monitorexit v6
  #L21bed4.  throw v0;
  #Try_start2.  
  #L21bed6.  v0:= v6.`okhttp3.internal.ws.RealWebSocket.queueSize` @type ^`long` @kind wide;
  #L21beda.  call temp:= `size`(v7) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L21bee0.  v2:= temp;
  #L21bee2.  v2:= (`long`) v2 @kind i2l;
  #L21bee4.  v0:= v0 + v2 @kind long;
  #L21bee6.  v6.`okhttp3.internal.ws.RealWebSocket.queueSize` @type ^`long` := v0 @kind wide;
  #L21beea.  v0:= v6.`okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21beee.  v1:= new `okhttp3.internal.ws.RealWebSocket$Message`;
  #L21bef2.  call `<init>`(v1, v8, v7) @signature `Lokhttp3/internal/ws/RealWebSocket$Message;.<init>:(ILokio/ByteString;)V` @kind direct;
  #L21bef8.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L21befe.  call `runWriter`(v6) @signature `Lokhttp3/internal/ws/RealWebSocket;.runWriter:()V` @kind direct;
  #Try_end2.  
  #L21bf04.  v0:= 1I;
  #L21bf06.  goto L21bea0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21bed0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21bed0;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21bed0;
}
procedure `void` `awaitTermination`(`okhttp3.internal.ws.RealWebSocket` v4 @kind this, `int` v5 @name `timeout`, `java.util.concurrent.TimeUnit` v6 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/ws/RealWebSocket;.awaitTermination:(ILjava/util/concurrent/TimeUnit;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21bf34.  v0:= v4.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21bf38.  v2:= (`long`) v5 @kind i2l;
  #L21bf3a.  call temp:= `awaitTermination`(v0, v2, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z` @kind interface;
  #L21bf40.  return @kind void;
}
procedure `void` `cancel`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21bf54.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.call` @type ^`okhttp3.Call` @kind object;
  #L21bf58.  call `cancel`(v0) @signature `Lokhttp3/Call;.cancel:()V` @kind interface;
  #L21bf5e.  return @kind void;
}
procedure `void` `checkResponse`(`okhttp3.internal.ws.RealWebSocket` v7 @kind this, `okhttp3.Response` v8 @kind object @name `response`) @signature `Lokhttp3/internal/ws/RealWebSocket;.checkResponse:(Lokhttp3/Response;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21bf70.  call temp:= `code`(v8) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L21bf76.  v4:= temp;
  #L21bf78.  v5:= 101I;
  #L21bf7c.  if v4 == v5 then goto L21bfe2;
  #L21bf80.  v4:= new `java.net.ProtocolException`;
  #L21bf84.  v5:= new `java.lang.StringBuilder`;
  #L21bf88.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21bf8e.  v6:= "Expected HTTP 101 response but was '" @kind object;
  #L21bf92.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bf98.  v5:= temp @kind object;
  #L21bf9a.  call temp:= `code`(v8) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L21bfa0.  v6:= temp;
  #L21bfa2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bfa8.  v5:= temp @kind object;
  #L21bfaa.  v6:= " " @kind object;
  #L21bfae.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bfb4.  v5:= temp @kind object;
  #L21bfb6.  call temp:= `message`(v8) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L21bfbc.  v6:= temp @kind object;
  #L21bfbe.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bfc4.  v5:= temp @kind object;
  #L21bfc6.  v6:= "'" @kind object;
  #L21bfca.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bfd0.  v5:= temp @kind object;
  #L21bfd2.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21bfd8.  v5:= temp @kind object;
  #L21bfda.  call `<init>`(v4, v5) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21bfe0.  throw v4;
  #L21bfe2.  v4:= "Connection" @kind object;
  #L21bfe6.  call temp:= `header`(v8, v4) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21bfec.  v2:= temp @kind object;
  #L21bfee.  v4:= "Upgrade" @kind object;
  #L21bff2.  call temp:= `equalsIgnoreCase`(v4, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L21bff8.  v4:= temp;
  #L21bffa.  if v4 != 0 then goto L21c03c;
  #L21bffe.  v4:= new `java.net.ProtocolException`;
  #L21c002.  v5:= new `java.lang.StringBuilder`;
  #L21c006.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21c00c.  v6:= "Expected 'Connection' header value 'Upgrade' but was '" @kind object;
  #L21c010.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c016.  v5:= temp @kind object;
  #L21c018.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c01e.  v5:= temp @kind object;
  #L21c020.  v6:= "'" @kind object;
  #L21c024.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c02a.  v5:= temp @kind object;
  #L21c02c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21c032.  v5:= temp @kind object;
  #L21c034.  call `<init>`(v4, v5) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c03a.  throw v4;
  #L21c03c.  v4:= "Upgrade" @kind object;
  #L21c040.  call temp:= `header`(v8, v4) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21c046.  v3:= temp @kind object;
  #L21c048.  v4:= "websocket" @kind object;
  #L21c04c.  call temp:= `equalsIgnoreCase`(v4, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L21c052.  v4:= temp;
  #L21c054.  if v4 != 0 then goto L21c096;
  #L21c058.  v4:= new `java.net.ProtocolException`;
  #L21c05c.  v5:= new `java.lang.StringBuilder`;
  #L21c060.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21c066.  v6:= "Expected 'Upgrade' header value 'websocket' but was '" @kind object;
  #L21c06a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c070.  v5:= temp @kind object;
  #L21c072.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c078.  v5:= temp @kind object;
  #L21c07a.  v6:= "'" @kind object;
  #L21c07e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c084.  v5:= temp @kind object;
  #L21c086.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21c08c.  v5:= temp @kind object;
  #L21c08e.  call `<init>`(v4, v5) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c094.  throw v4;
  #L21c096.  v4:= "Sec-WebSocket-Accept" @kind object;
  #L21c09a.  call temp:= `header`(v8, v4) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21c0a0.  v1:= temp @kind object;
  #L21c0a2.  v4:= new `java.lang.StringBuilder`;
  #L21c0a6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21c0ac.  v5:= v7.`okhttp3.internal.ws.RealWebSocket.key` @type ^`java.lang.String` @kind object;
  #L21c0b0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c0b6.  v4:= temp @kind object;
  #L21c0b8.  v5:= "258EAFA5-E914-47DA-95CA-C5AB0DC85B11" @kind object;
  #L21c0bc.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c0c2.  v4:= temp @kind object;
  #L21c0c4.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21c0ca.  v4:= temp @kind object;
  #L21c0cc.  call temp:= `encodeUtf8`(v4) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L21c0d2.  v4:= temp @kind object;
  #L21c0d4.  call temp:= `sha1`(v4) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @kind virtual;
  #L21c0da.  v4:= temp @kind object;
  #L21c0dc.  call temp:= `base64`(v4) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L21c0e2.  v0:= temp @kind object;
  #L21c0e4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21c0ea.  v4:= temp;
  #L21c0ec.  if v4 != 0 then goto L21c142;
  #L21c0f0.  v4:= new `java.net.ProtocolException`;
  #L21c0f4.  v5:= new `java.lang.StringBuilder`;
  #L21c0f8.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21c0fe.  v6:= "Expected 'Sec-WebSocket-Accept' header value '" @kind object;
  #L21c102.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c108.  v5:= temp @kind object;
  #L21c10a.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c110.  v5:= temp @kind object;
  #L21c112.  v6:= "' but was '" @kind object;
  #L21c116.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c11c.  v5:= temp @kind object;
  #L21c11e.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c124.  v5:= temp @kind object;
  #L21c126.  v6:= "'" @kind object;
  #L21c12a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c130.  v5:= temp @kind object;
  #L21c132.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21c138.  v5:= temp @kind object;
  #L21c13a.  call `<init>`(v4, v5) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c140.  throw v4;
  #L21c142.  return @kind void;
}
procedure `boolean` `close`(`okhttp3.internal.ws.RealWebSocket` v2 @kind this, `int` v3 @name `code`, `java.lang.String` v4 @kind object @name `reason`) @signature `Lokhttp3/internal/ws/RealWebSocket;.close:(ILjava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21c154.  v0:= 60000L;
  #L21c15a.  call temp:= `close`(v2, v3, v4, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.close:(ILjava/lang/String;J)Z` @kind virtual;
  #L21c160.  v0:= temp;
  #L21c162.  return v0;
}
procedure `boolean` `close`(`okhttp3.internal.ws.RealWebSocket` v7 @kind this, `int` v8 @name `code`, `java.lang.String` v9 @kind object @name `reason`, `long` v10 @name `cancelAfterCloseMillis`) @signature `Lokhttp3/internal/ws/RealWebSocket;.close:(ILjava/lang/String;J)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21c174.  v1:= 1I;
  #L21c176.  @monitorenter v7
  #Try_start0.  
  #L21c178.  call `validateCloseCode`(v8) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind static;
  #L21c17e.  v0:= 0I;
  #L21c180.  if v9 == 0 then goto L21c1da;
  #L21c184.  call temp:= `encodeUtf8`(v9) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L21c18a.  v0:= temp @kind object;
  #L21c18c.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L21c192.  v2:= temp;
  #L21c194.  v2:= (`long`) v2 @kind i2l;
  #L21c196.  v4:= 123L;
  #L21c19a.  v2:= lcmp(v2, v4);
  #L21c19e.  if v2 <= 0 then goto L21c1da;
  #L21c1a2.  v1:= new `java.lang.IllegalArgumentException`;
  #L21c1a6.  v2:= new `java.lang.StringBuilder`;
  #L21c1aa.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21c1b0.  v3:= "reason.size() > 123: " @kind object;
  #L21c1b4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c1ba.  v2:= temp @kind object;
  #L21c1bc.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21c1c2.  v2:= temp @kind object;
  #L21c1c4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21c1ca.  v2:= temp @kind object;
  #L21c1cc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c1d2.  throw v1;
  #Try_end0.  
  #L21c1d4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c1d6.  @monitorexit v7
  #L21c1d8.  throw v1;
  #Try_start1.  
  #L21c1da.  v2:= v7.`okhttp3.internal.ws.RealWebSocket.failed` @type ^`boolean` @kind boolean;
  #L21c1de.  if v2 != 0 then goto L21c1ea;
  #L21c1e2.  v2:= v7.`okhttp3.internal.ws.RealWebSocket.enqueuedClose` @type ^`boolean` @kind boolean;
  #Try_end1.  
  #L21c1e6.  if v2 == 0 then goto L21c1f0;
  #L21c1ea.  v1:= 0I;
  #L21c1ec.  @monitorexit v7
  #L21c1ee.  return v1;
  #L21c1f0.  v2:= 1I;
  #Try_start2.  
  #L21c1f2.  v7.`okhttp3.internal.ws.RealWebSocket.enqueuedClose` @type ^`boolean` := v2 @kind boolean;
  #L21c1f6.  v2:= v7.`okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c1fa.  v3:= new `okhttp3.internal.ws.RealWebSocket$Close`;
  #L21c1fe.  call `<init>`(v3, v8, v0, v10) @signature `Lokhttp3/internal/ws/RealWebSocket$Close;.<init>:(ILokio/ByteString;J)V` @kind direct;
  #L21c204.  call temp:= `add`(v2, v3) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L21c20a.  call `runWriter`(v7) @signature `Lokhttp3/internal/ws/RealWebSocket;.runWriter:()V` @kind direct;
  #Try_end2.  
  #L21c210.  goto L21c1ec;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c1d4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21c1d4;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21c1d4;
}
procedure `void` `connect`(`okhttp3.internal.ws.RealWebSocket` v4 @kind this, `okhttp3.OkHttpClient` v5 @kind object @name `client`) @signature `Lokhttp3/internal/ws/RealWebSocket;.connect:(Lokhttp3/OkHttpClient;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21c240.  call temp:= `newBuilder`(v5) @signature `Lokhttp3/OkHttpClient;.newBuilder:()Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L21c246.  v1:= temp @kind object;
  #L21c248.  v2:= `@@okhttp3.EventListener.NONE` @type ^`okhttp3.EventListener` @kind object;
  #L21c24c.  call temp:= `eventListener`(v1, v2) @signature `Lokhttp3/OkHttpClient$Builder;.eventListener:(Lokhttp3/EventListener;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L21c252.  v1:= temp @kind object;
  #L21c254.  v2:= `@@okhttp3.internal.ws.RealWebSocket.ONLY_HTTP1` @type ^`java.util.List` @kind object;
  #L21c258.  call temp:= `protocols`(v1, v2) @signature `Lokhttp3/OkHttpClient$Builder;.protocols:(Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L21c25e.  v1:= temp @kind object;
  #L21c260.  call temp:= `build`(v1) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L21c266.  v5:= temp @kind object;
  #L21c268.  v1:= v4.`okhttp3.internal.ws.RealWebSocket.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L21c26c.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L21c272.  v1:= temp @kind object;
  #L21c274.  v2:= "Upgrade" @kind object;
  #L21c278.  v3:= "websocket" @kind object;
  #L21c27c.  call temp:= `header`(v1, v2, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L21c282.  v1:= temp @kind object;
  #L21c284.  v2:= "Connection" @kind object;
  #L21c288.  v3:= "Upgrade" @kind object;
  #L21c28c.  call temp:= `header`(v1, v2, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L21c292.  v1:= temp @kind object;
  #L21c294.  v2:= "Sec-WebSocket-Key" @kind object;
  #L21c298.  v3:= v4.`okhttp3.internal.ws.RealWebSocket.key` @type ^`java.lang.String` @kind object;
  #L21c29c.  call temp:= `header`(v1, v2, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L21c2a2.  v1:= temp @kind object;
  #L21c2a4.  v2:= "Sec-WebSocket-Version" @kind object;
  #L21c2a8.  v3:= "13" @kind object;
  #L21c2ac.  call temp:= `header`(v1, v2, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L21c2b2.  v1:= temp @kind object;
  #L21c2b4.  call temp:= `build`(v1) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L21c2ba.  v0:= temp @kind object;
  #L21c2bc.  v1:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L21c2c0.  call temp:= `newWebSocketCall`(v1, v5, v0) @signature `Lokhttp3/internal/Internal;.newWebSocketCall:(Lokhttp3/OkHttpClient;Lokhttp3/Request;)Lokhttp3/Call;` @kind virtual;
  #L21c2c6.  v1:= temp @kind object;
  #L21c2c8.  v4.`okhttp3.internal.ws.RealWebSocket.call` @type ^`okhttp3.Call` := v1 @kind object;
  #L21c2cc.  v1:= v4.`okhttp3.internal.ws.RealWebSocket.call` @type ^`okhttp3.Call` @kind object;
  #L21c2d0.  v2:= new `okhttp3.internal.ws.RealWebSocket$2`;
  #L21c2d4.  call `<init>`(v2, v4, v0) @signature `Lokhttp3/internal/ws/RealWebSocket$2;.<init>:(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/Request;)V` @kind direct;
  #L21c2da.  call `enqueue`(v1, v2) @signature `Lokhttp3/Call;.enqueue:(Lokhttp3/Callback;)V` @kind interface;
  #L21c2e0.  return @kind void;
}
procedure `void` `failWebSocket`(`okhttp3.internal.ws.RealWebSocket` v3 @kind this, `java.lang.Exception` v4 @kind object @name `e`, `okhttp3.Response` v5 @kind object @name `response`) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21c2f4.  @monitorenter v3
  #Try_start0.  
  #L21c2f6.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.failed` @type ^`boolean` @kind boolean;
  #L21c2fa.  if v1 == 0 then goto L21c302;
  #L21c2fe.  @monitorexit v3
  #L21c300.  return @kind void;
  #L21c302.  v1:= 1I;
  #L21c304.  v3.`okhttp3.internal.ws.RealWebSocket.failed` @type ^`boolean` := v1 @kind boolean;
  #L21c308.  v0:= v3.`okhttp3.internal.ws.RealWebSocket.streams` @type ^`okhttp3.internal.ws.RealWebSocket$Streams` @kind object;
  #L21c30c.  v1:= 0I;
  #L21c30e.  v3.`okhttp3.internal.ws.RealWebSocket.streams` @type ^`okhttp3.internal.ws.RealWebSocket$Streams` := v1 @kind object;
  #L21c312.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.cancelFuture` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L21c316.  if v1 == 0 then goto L21c326;
  #L21c31a.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.cancelFuture` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L21c31e.  v2:= 0I;
  #L21c320.  call temp:= `cancel`(v1, v2) @signature `Ljava/util/concurrent/ScheduledFuture;.cancel:(Z)Z` @kind interface;
  #L21c326.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21c32a.  if v1 == 0 then goto L21c338;
  #L21c32e.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21c332.  call `shutdown`(v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L21c338.  @monitorexit v3
  #Try_end0.  
  #Try_start1.  
  #L21c33a.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.listener` @type ^`okhttp3.WebSocketListener` @kind object;
  #L21c33e.  call `onFailure`(v1, v3, v4, v5) @signature `Lokhttp3/WebSocketListener;.onFailure:(Lokhttp3/WebSocket;Ljava/lang/Throwable;Lokhttp3/Response;)V` @kind virtual;
  #Try_end1.  
  #L21c344.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L21c34a.  goto L21c300;
  #L21c34c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L21c34e.  @monitorexit v3
  #Try_end2.  
  #L21c350.  throw v1;
  #L21c352.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c354.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L21c35a.  throw v1;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c34c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21c352;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21c34c;
}
procedure `void` `initReaderAndWriter`(`okhttp3.internal.ws.RealWebSocket` v7 @kind this, `java.lang.String` v8 @kind object @name `name`, `okhttp3.internal.ws.RealWebSocket$Streams` v9 @kind object @name `streams`) @signature `Lokhttp3/internal/ws/RealWebSocket;.initReaderAndWriter:(Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket$Streams;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21c38c.  @monitorenter v7
  #Try_start0.  
  #L21c38e.  v7.`okhttp3.internal.ws.RealWebSocket.streams` @type ^`okhttp3.internal.ws.RealWebSocket$Streams` := v9 @kind object;
  #L21c392.  v0:= new `okhttp3.internal.ws.WebSocketWriter`;
  #L21c396.  v1:= v9.`okhttp3.internal.ws.RealWebSocket$Streams.client` @type ^`boolean` @kind boolean;
  #L21c39a.  v2:= v9.`okhttp3.internal.ws.RealWebSocket$Streams.sink` @type ^`okio.BufferedSink` @kind object;
  #L21c39e.  v3:= v7.`okhttp3.internal.ws.RealWebSocket.random` @type ^`java.util.Random` @kind object;
  #L21c3a2.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;)V` @kind direct;
  #L21c3a8.  v7.`okhttp3.internal.ws.RealWebSocket.writer` @type ^`okhttp3.internal.ws.WebSocketWriter` := v0 @kind object;
  #L21c3ac.  v0:= new `java.util.concurrent.ScheduledThreadPoolExecutor`;
  #L21c3b0.  v1:= 1I;
  #L21c3b2.  v2:= 0I;
  #L21c3b4.  call temp:= `threadFactory`(v8, v2) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L21c3ba.  v2:= temp @kind object;
  #L21c3bc.  call `<init>`(v0, v1, v2) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L21c3c2.  v7.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` := v0 @kind object;
  #L21c3c6.  v0:= v7.`okhttp3.internal.ws.RealWebSocket.pingIntervalMillis` @type ^`long` @kind wide;
  #L21c3ca.  v2:= 0L;
  #L21c3ce.  v0:= lcmp(v0, v2);
  #L21c3d2.  if v0 == 0 then goto L21c3f6;
  #L21c3d6.  v0:= v7.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21c3da.  v1:= new `okhttp3.internal.ws.RealWebSocket$PingRunnable`;
  #L21c3de.  call `<init>`(v1, v7) @signature `Lokhttp3/internal/ws/RealWebSocket$PingRunnable;.<init>:(Lokhttp3/internal/ws/RealWebSocket;)V` @kind direct;
  #L21c3e4.  v2:= v7.`okhttp3.internal.ws.RealWebSocket.pingIntervalMillis` @type ^`long` @kind wide;
  #L21c3e8.  v4:= v7.`okhttp3.internal.ws.RealWebSocket.pingIntervalMillis` @type ^`long` @kind wide;
  #L21c3ec.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L21c3f0.  call temp:= `scheduleAtFixedRate`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L21c3f6.  v0:= v7.`okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c3fa.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L21c400.  v0:= temp;
  #L21c402.  if v0 != 0 then goto L21c40c;
  #L21c406.  call `runWriter`(v7) @signature `Lokhttp3/internal/ws/RealWebSocket;.runWriter:()V` @kind direct;
  #L21c40c.  @monitorexit v7
  #Try_end0.  
  #L21c40e.  v0:= new `okhttp3.internal.ws.WebSocketReader`;
  #L21c412.  v1:= v9.`okhttp3.internal.ws.RealWebSocket$Streams.client` @type ^`boolean` @kind boolean;
  #L21c416.  v2:= v9.`okhttp3.internal.ws.RealWebSocket$Streams.source` @type ^`okio.BufferedSource` @kind object;
  #L21c41a.  call `<init>`(v0, v1, v2, v7) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @kind direct;
  #L21c420.  v7.`okhttp3.internal.ws.RealWebSocket.reader` @type ^`okhttp3.internal.ws.WebSocketReader` := v0 @kind object;
  #L21c424.  return @kind void;
  #L21c426.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L21c428.  @monitorexit v7
  #Try_end1.  
  #L21c42a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c426;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21c426;
}
procedure `void` `loopReader`(`okhttp3.internal.ws.RealWebSocket` v2 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.loopReader:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21c450.  v0:= v2.`okhttp3.internal.ws.RealWebSocket.receivedCloseCode` @type ^`int`;
  #L21c454.  v1:= -1I;
  #L21c456.  if v0 != v1 then goto L21c466;
  #L21c45a.  v0:= v2.`okhttp3.internal.ws.RealWebSocket.reader` @type ^`okhttp3.internal.ws.WebSocketReader` @kind object;
  #L21c45e.  call `processNextFrame`(v0) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @kind virtual;
  #L21c464.  goto L21c450;
  #L21c466.  return @kind void;
}
procedure `void` `onReadClose`(`okhttp3.internal.ws.RealWebSocket` v3 @kind this, `int` v4 @name `code`, `java.lang.String` v5 @kind object @name `reason`) @signature `Lokhttp3/internal/ws/RealWebSocket;.onReadClose:(ILjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21c478.  v2:= -1I;
  #L21c47a.  if v4 != v2 then goto L21c48a;
  #L21c47e.  v1:= new `java.lang.IllegalArgumentException`;
  #L21c482.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L21c488.  throw v1;
  #L21c48a.  v0:= 0I;
  #L21c48c.  @monitorenter v3
  #Try_start0.  
  #L21c48e.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.receivedCloseCode` @type ^`int`;
  #L21c492.  if v1 == v2 then goto L21c4ac;
  #L21c496.  v1:= new `java.lang.IllegalStateException`;
  #L21c49a.  v2:= "already closed" @kind object;
  #L21c49e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c4a4.  throw v1;
  #L21c4a6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c4a8.  @monitorexit v3
  #Try_end0.  
  #L21c4aa.  throw v1;
  #Try_start1.  
  #L21c4ac.  v3.`okhttp3.internal.ws.RealWebSocket.receivedCloseCode` @type ^`int` := v4;
  #L21c4b0.  v3.`okhttp3.internal.ws.RealWebSocket.receivedCloseReason` @type ^`java.lang.String` := v5 @kind object;
  #L21c4b4.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.enqueuedClose` @type ^`boolean` @kind boolean;
  #L21c4b8.  if v1 == 0 then goto L21c4f4;
  #L21c4bc.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c4c0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L21c4c6.  v1:= temp;
  #L21c4c8.  if v1 == 0 then goto L21c4f4;
  #L21c4cc.  v0:= v3.`okhttp3.internal.ws.RealWebSocket.streams` @type ^`okhttp3.internal.ws.RealWebSocket$Streams` @kind object;
  #L21c4d0.  v1:= 0I;
  #L21c4d2.  v3.`okhttp3.internal.ws.RealWebSocket.streams` @type ^`okhttp3.internal.ws.RealWebSocket$Streams` := v1 @kind object;
  #L21c4d6.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.cancelFuture` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L21c4da.  if v1 == 0 then goto L21c4ea;
  #L21c4de.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.cancelFuture` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L21c4e2.  v2:= 0I;
  #L21c4e4.  call temp:= `cancel`(v1, v2) @signature `Ljava/util/concurrent/ScheduledFuture;.cancel:(Z)Z` @kind interface;
  #L21c4ea.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21c4ee.  call `shutdown`(v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L21c4f4.  @monitorexit v3
  #Try_end1.  
  #Try_start2.  
  #L21c4f6.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.listener` @type ^`okhttp3.WebSocketListener` @kind object;
  #L21c4fa.  call `onClosing`(v1, v3, v4, v5) @signature `Lokhttp3/WebSocketListener;.onClosing:(Lokhttp3/WebSocket;ILjava/lang/String;)V` @kind virtual;
  #L21c500.  if v0 == 0 then goto L21c50e;
  #L21c504.  v1:= v3.`okhttp3.internal.ws.RealWebSocket.listener` @type ^`okhttp3.WebSocketListener` @kind object;
  #L21c508.  call `onClosed`(v1, v3, v4, v5) @signature `Lokhttp3/WebSocketListener;.onClosed:(Lokhttp3/WebSocket;ILjava/lang/String;)V` @kind virtual;
  #Try_end2.  
  #L21c50e.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L21c514.  return @kind void;
  #L21c516.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c518.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L21c51e.  throw v1;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c4a6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21c4a6;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21c516;
}
procedure `void` `onReadMessage`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this, `java.lang.String` v2 @kind object @name `text`) @signature `Lokhttp3/internal/ws/RealWebSocket;.onReadMessage:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21c550.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.listener` @type ^`okhttp3.WebSocketListener` @kind object;
  #L21c554.  call `onMessage`(v0, v1, v2) @signature `Lokhttp3/WebSocketListener;.onMessage:(Lokhttp3/WebSocket;Ljava/lang/String;)V` @kind virtual;
  #L21c55a.  return @kind void;
}
procedure `void` `onReadMessage`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this, `okio.ByteString` v2 @kind object @name `bytes`) @signature `Lokhttp3/internal/ws/RealWebSocket;.onReadMessage:(Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21c56c.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.listener` @type ^`okhttp3.WebSocketListener` @kind object;
  #L21c570.  call `onMessage`(v0, v1, v2) @signature `Lokhttp3/WebSocketListener;.onMessage:(Lokhttp3/WebSocket;Lokio/ByteString;)V` @kind virtual;
  #L21c576.  return @kind void;
}
procedure `void` `onReadPing`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this, `okio.ByteString` v2 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/RealWebSocket;.onReadPing:(Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21c588.  @monitorenter v1
  #Try_start0.  
  #L21c58a.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.failed` @type ^`boolean` @kind boolean;
  #L21c58e.  if v0 != 0 then goto L21c5aa;
  #L21c592.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.enqueuedClose` @type ^`boolean` @kind boolean;
  #L21c596.  if v0 == 0 then goto L21c5ae;
  #L21c59a.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c59e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #Try_end0.  
  #L21c5a4.  v0:= temp;
  #L21c5a6.  if v0 == 0 then goto L21c5ae;
  #L21c5aa.  @monitorexit v1
  #L21c5ac.  return @kind void;
  #Try_start1.  
  #L21c5ae.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.pongQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c5b2.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L21c5b8.  call `runWriter`(v1) @signature `Lokhttp3/internal/ws/RealWebSocket;.runWriter:()V` @kind direct;
  #L21c5be.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.receivedPingCount` @type ^`int`;
  #L21c5c2.  v0:= v0 + 1;
  #L21c5c6.  v1.`okhttp3.internal.ws.RealWebSocket.receivedPingCount` @type ^`int` := v0;
  #Try_end1.  
  #L21c5ca.  goto L21c5aa;
  #L21c5cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c5ce.  @monitorexit v1
  #L21c5d0.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c5cc;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21c5cc;
}
procedure `void` `onReadPong`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this, `okio.ByteString` v2 @kind object @name `buffer`) @signature `Lokhttp3/internal/ws/RealWebSocket;.onReadPong:(Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21c5f8.  @monitorenter v1
  #Try_start0.  
  #L21c5fa.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.receivedPongCount` @type ^`int`;
  #L21c5fe.  v0:= v0 + 1;
  #L21c602.  v1.`okhttp3.internal.ws.RealWebSocket.receivedPongCount` @type ^`int` := v0;
  #L21c606.  v0:= 0I;
  #L21c608.  v1.`okhttp3.internal.ws.RealWebSocket.awaitingPong` @type ^`boolean` := v0 @kind boolean;
  #Try_end0.  
  #L21c60c.  @monitorexit v1
  #L21c60e.  return @kind void;
  #L21c610.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c612.  @monitorexit v1
  #L21c614.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c610;
}
procedure `boolean` `pong`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this, `okio.ByteString` v2 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/RealWebSocket;.pong:(Lokio/ByteString;)Z` @AccessFlag  {
    temp;
    v0;

  #L21c634.  @monitorenter v1
  #Try_start0.  
  #L21c636.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.failed` @type ^`boolean` @kind boolean;
  #L21c63a.  if v0 != 0 then goto L21c656;
  #L21c63e.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.enqueuedClose` @type ^`boolean` @kind boolean;
  #L21c642.  if v0 == 0 then goto L21c65c;
  #L21c646.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c64a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #Try_end0.  
  #L21c650.  v0:= temp;
  #L21c652.  if v0 == 0 then goto L21c65c;
  #L21c656.  v0:= 0I;
  #L21c658.  @monitorexit v1
  #L21c65a.  return v0;
  #Try_start1.  
  #L21c65c.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.pongQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c660.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L21c666.  call `runWriter`(v1) @signature `Lokhttp3/internal/ws/RealWebSocket;.runWriter:()V` @kind direct;
  #Try_end1.  
  #L21c66c.  v0:= 1I;
  #L21c66e.  goto L21c658;
  #L21c670.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c672.  @monitorexit v1
  #L21c674.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c670;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21c670;
}
procedure `boolean` `processNextFrame`(`okhttp3.internal.ws.RealWebSocket` v4 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.processNextFrame:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21c69c.  v1:= 0I;
  #Try_start0.  
  #L21c69e.  v2:= v4.`okhttp3.internal.ws.RealWebSocket.reader` @type ^`okhttp3.internal.ws.WebSocketReader` @kind object;
  #L21c6a2.  call `processNextFrame`(v2) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @kind virtual;
  #L21c6a8.  v2:= v4.`okhttp3.internal.ws.RealWebSocket.receivedCloseCode` @type ^`int`;
  #Try_end0.  
  #L21c6ac.  v3:= -1I;
  #L21c6ae.  if v2 != v3 then goto L21c6b4;
  #L21c6b2.  v1:= 1I;
  #L21c6b4.  return v1;
  #L21c6b6.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L21c6b8.  v2:= 0I;
  #L21c6ba.  call `failWebSocket`(v4, v0, v2) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L21c6c0.  goto L21c6b4;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L21c6b6;
}
procedure `long` `queueSize`(`okhttp3.internal.ws.RealWebSocket` v2 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.queueSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21c6e4.  @monitorenter v2
  #Try_start0.  
  #L21c6e6.  v0:= v2.`okhttp3.internal.ws.RealWebSocket.queueSize` @type ^`long` @kind wide;
  #Try_end0.  
  #L21c6ea.  @monitorexit v2
  #L21c6ec.  return v0 @kind wide;
  #L21c6ee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c6f0.  @monitorexit v2
  #L21c6f2.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c6ee;
}
procedure `int` `receivedPingCount`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.receivedPingCount:()I` @AccessFlag  {
    temp;
    v0;

  #L21c710.  @monitorenter v1
  #Try_start0.  
  #L21c712.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.receivedPingCount` @type ^`int`;
  #Try_end0.  
  #L21c716.  @monitorexit v1
  #L21c718.  return v0;
  #L21c71a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c71c.  @monitorexit v1
  #L21c71e.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c71a;
}
procedure `int` `receivedPongCount`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.receivedPongCount:()I` @AccessFlag  {
    temp;
    v0;

  #L21c73c.  @monitorenter v1
  #Try_start0.  
  #L21c73e.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.receivedPongCount` @type ^`int`;
  #Try_end0.  
  #L21c742.  @monitorexit v1
  #L21c744.  return v0;
  #L21c746.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c748.  @monitorexit v1
  #L21c74a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c746;
}
procedure `okhttp3.Request` `request`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21c768.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L21c76c.  return v0 @kind object;
}
procedure `boolean` `send`(`okhttp3.internal.ws.RealWebSocket` v2 @kind this, `java.lang.String` v3 @kind object @name `text`) @signature `Lokhttp3/internal/ws/RealWebSocket;.send:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21c780.  if v3 != 0 then goto L21c794;
  #L21c784.  v0:= new `java.lang.NullPointerException`;
  #L21c788.  v1:= "text == null" @kind object;
  #L21c78c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c792.  throw v0;
  #L21c794.  call temp:= `encodeUtf8`(v3) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L21c79a.  v0:= temp @kind object;
  #L21c79c.  v1:= 1I;
  #L21c79e.  call temp:= `send`(v2, v0, v1) @signature `Lokhttp3/internal/ws/RealWebSocket;.send:(Lokio/ByteString;I)Z` @kind direct;
  #L21c7a4.  v0:= temp;
  #L21c7a6.  return v0;
}
procedure `boolean` `send`(`okhttp3.internal.ws.RealWebSocket` v2 @kind this, `okio.ByteString` v3 @kind object @name `bytes`) @signature `Lokhttp3/internal/ws/RealWebSocket;.send:(Lokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21c7b8.  if v3 != 0 then goto L21c7cc;
  #L21c7bc.  v0:= new `java.lang.NullPointerException`;
  #L21c7c0.  v1:= "bytes == null" @kind object;
  #L21c7c4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c7ca.  throw v0;
  #L21c7cc.  v0:= 2I;
  #L21c7ce.  call temp:= `send`(v2, v3, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.send:(Lokio/ByteString;I)Z` @kind direct;
  #L21c7d4.  v0:= temp;
  #L21c7d6.  return v0;
}
procedure `int` `sentPingCount`(`okhttp3.internal.ws.RealWebSocket` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.sentPingCount:()I` @AccessFlag  {
    temp;
    v0;

  #L21c7e8.  @monitorenter v1
  #Try_start0.  
  #L21c7ea.  v0:= v1.`okhttp3.internal.ws.RealWebSocket.sentPingCount` @type ^`int`;
  #Try_end0.  
  #L21c7ee.  @monitorexit v1
  #L21c7f0.  return v0;
  #L21c7f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c7f4.  @monitorexit v1
  #L21c7f6.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c7f2;
}
procedure `void` `tearDown`(`okhttp3.internal.ws.RealWebSocket` v4 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.tearDown:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21c814.  v0:= v4.`okhttp3.internal.ws.RealWebSocket.cancelFuture` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L21c818.  if v0 == 0 then goto L21c828;
  #L21c81c.  v0:= v4.`okhttp3.internal.ws.RealWebSocket.cancelFuture` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L21c820.  v1:= 0I;
  #L21c822.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/ScheduledFuture;.cancel:(Z)Z` @kind interface;
  #L21c828.  v0:= v4.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21c82c.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L21c832.  v0:= v4.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21c836.  v2:= 10L;
  #L21c83a.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L21c83e.  call temp:= `awaitTermination`(v0, v2, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z` @kind interface;
  #L21c844.  return @kind void;
}
procedure `boolean` `writeOneFrame`(`okhttp3.internal.ws.RealWebSocket` v16 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.writeOneFrame:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L21c858.  v11:= 0I;
  #L21c85a.  v4:= 0I;
  #L21c85c.  v6:= -1I;
  #L21c85e.  v7:= 0I;
  #L21c860.  v9:= 0I;
  #L21c862.  @monitorenter v16
  #Try_start0.  
  #L21c864.  v0:= v16 @kind object;
  #L21c868.  v12:= v0.`okhttp3.internal.ws.RealWebSocket.failed` @type ^`boolean` @kind boolean;
  #L21c86c.  if v12 == 0 then goto L21c874;
  #L21c870.  @monitorexit v16
  #L21c872.  return v11;
  #L21c874.  v0:= v16 @kind object;
  #L21c878.  v10:= v0.`okhttp3.internal.ws.RealWebSocket.writer` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21c87c.  v0:= v16 @kind object;
  #L21c880.  v12:= v0.`okhttp3.internal.ws.RealWebSocket.pongQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c884.  call temp:= `poll`(v12) @signature `Ljava/util/ArrayDeque;.poll:()Ljava/lang/Object;` @kind virtual;
  #L21c88a.  v5:= temp @kind object;
  #L21c88c.  v5:= (`okio.ByteString`) v5 @kind object;
  #L21c890.  if v5 != 0 then goto L21c8e2;
  #L21c894.  v0:= v16 @kind object;
  #L21c898.  v12:= v0.`okhttp3.internal.ws.RealWebSocket.messageAndCloseQueue` @type ^`java.util.ArrayDeque` @kind object;
  #L21c89c.  call temp:= `poll`(v12) @signature `Ljava/util/ArrayDeque;.poll:()Ljava/lang/Object;` @kind virtual;
  #L21c8a2.  v4:= temp @kind object;
  #L21c8a4.  v12:= instanceof @variable v4 @type ^`okhttp3.internal.ws.RealWebSocket$Close` @kind boolean;
  #L21c8a8.  if v12 == 0 then goto L21c936;
  #L21c8ac.  v0:= v16 @kind object;
  #L21c8b0.  v6:= v0.`okhttp3.internal.ws.RealWebSocket.receivedCloseCode` @type ^`int`;
  #L21c8b4.  v0:= v16 @kind object;
  #L21c8b8.  v7:= v0.`okhttp3.internal.ws.RealWebSocket.receivedCloseReason` @type ^`java.lang.String` @kind object;
  #L21c8bc.  v11:= -1I;
  #L21c8be.  if v6 == v11 then goto L21c8f8;
  #L21c8c2.  v0:= v16 @kind object;
  #L21c8c6.  v9:= v0.`okhttp3.internal.ws.RealWebSocket.streams` @type ^`okhttp3.internal.ws.RealWebSocket$Streams` @kind object;
  #L21c8ca.  v11:= 0I;
  #L21c8cc.  v0:= v16 @kind object;
  #L21c8d0.  v0.`okhttp3.internal.ws.RealWebSocket.streams` @type ^`okhttp3.internal.ws.RealWebSocket$Streams` := v11 @kind object;
  #L21c8d4.  v0:= v16 @kind object;
  #L21c8d8.  v11:= v0.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21c8dc.  call `shutdown`(v11) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L21c8e2.  @monitorexit v16
  #Try_end0.  
  #L21c8e4.  if v5 == 0 then goto L21c93e;
  #Try_start1.  
  #L21c8e8.  call `writePong`(v10, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @kind virtual;
  #Try_end1.  
  #L21c8ee.  v11:= 1I;
  #L21c8f0.  call `closeQuietly`(v9) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L21c8f6.  goto L21c872;
  #Try_start2.  
  #L21c8f8.  v0:= v16 @kind object;
  #L21c8fc.  v12:= v0.`okhttp3.internal.ws.RealWebSocket.executor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L21c900.  v13:= new `okhttp3.internal.ws.RealWebSocket$CancelRunnable`;
  #L21c904.  v0:= v16 @kind object;
  #L21c908.  call `<init>`(v13, v0) @signature `Lokhttp3/internal/ws/RealWebSocket$CancelRunnable;.<init>:(Lokhttp3/internal/ws/RealWebSocket;)V` @kind direct;
  #L21c90e.  v0:= v4 @kind object;
  #L21c910.  v0:= (`okhttp3.internal.ws.RealWebSocket$Close`) v0 @kind object;
  #L21c914.  v11:= v0 @kind object;
  #L21c916.  v14:= v11.`okhttp3.internal.ws.RealWebSocket$Close.cancelAfterCloseMillis` @type ^`long` @kind wide;
  #L21c91a.  v11:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L21c91e.  call temp:= `schedule`(v12, v13, v14, v11) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L21c924.  v11:= temp @kind object;
  #L21c926.  v0:= v16 @kind object;
  #L21c92a.  v0.`okhttp3.internal.ws.RealWebSocket.cancelFuture` @type ^`java.util.concurrent.ScheduledFuture` := v11 @kind object;
  #L21c92e.  goto L21c8e2;
  #L21c930.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c932.  @monitorexit v16
  #Try_end2.  
  #L21c934.  throw v11;
  #L21c936.  if v4 != 0 then goto L21c8e2;
  #Try_start3.  
  #L21c93a.  @monitorexit v16
  #Try_end3.  
  #L21c93c.  goto L21c872;
  #Try_start4.  
  #L21c93e.  v11:= instanceof @variable v4 @type ^`okhttp3.internal.ws.RealWebSocket$Message` @kind boolean;
  #L21c942.  if v11 == 0 then goto L21c9b2;
  #L21c946.  v0:= v4 @kind object;
  #L21c948.  v0:= (`okhttp3.internal.ws.RealWebSocket$Message`) v0 @kind object;
  #L21c94c.  v11:= v0 @kind object;
  #L21c94e.  v3:= v11.`okhttp3.internal.ws.RealWebSocket$Message.data` @type ^`okio.ByteString` @kind object;
  #L21c952.  v4:= (`okhttp3.internal.ws.RealWebSocket$Message`) v4 @kind object;
  #L21c956.  v11:= v4.`okhttp3.internal.ws.RealWebSocket$Message.formatOpcode` @type ^`int`;
  #L21c95a.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L21c960.  v12:= temp;
  #L21c962.  v12:= (`long`) v12 @kind i2l;
  #L21c964.  call temp:= `newMessageSink`(v10, v11, v12) @signature `Lokhttp3/internal/ws/WebSocketWriter;.newMessageSink:(IJ)Lokio/Sink;` @kind virtual;
  #L21c96a.  v11:= temp @kind object;
  #L21c96c.  call temp:= `buffer`(v11) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L21c972.  v8:= temp @kind object;
  #L21c974.  call temp:= `write`(v8, v3) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L21c97a.  call `close`(v8) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L21c980.  @monitorenter v16
  #Try_end4.  
  #Try_start5.  
  #L21c982.  v0:= v16 @kind object;
  #L21c986.  v12:= v0.`okhttp3.internal.ws.RealWebSocket.queueSize` @type ^`long` @kind wide;
  #L21c98a.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L21c990.  v11:= temp;
  #L21c992.  v14:= (`long`) v11 @kind i2l;
  #L21c994.  v12:= v12 - v14 @kind long;
  #L21c996.  v0:= v16 @kind object;
  #L21c99a.  v0.`okhttp3.internal.ws.RealWebSocket.queueSize` @type ^`long` := v12 @kind wide;
  #L21c99e.  @monitorexit v16
  #L21c9a0.  goto L21c8ee;
  #L21c9a2.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c9a4.  @monitorexit v16
  #Try_end5.  
  #Try_start6.  
  #L21c9a6.  throw v11;
  #Try_end6.  
  #L21c9a8.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21c9aa.  call `closeQuietly`(v9) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L21c9b0.  throw v11;
  #Try_start7.  
  #L21c9b2.  v11:= instanceof @variable v4 @type ^`okhttp3.internal.ws.RealWebSocket$Close` @kind boolean;
  #L21c9b6.  if v11 == 0 then goto L21c9e8;
  #L21c9ba.  v0:= v4 @kind object;
  #L21c9bc.  v0:= (`okhttp3.internal.ws.RealWebSocket$Close`) v0 @kind object;
  #L21c9c0.  v2:= v0 @kind object;
  #L21c9c2.  v11:= v2.`okhttp3.internal.ws.RealWebSocket$Close.code` @type ^`int`;
  #L21c9c6.  v12:= v2.`okhttp3.internal.ws.RealWebSocket$Close.reason` @type ^`okio.ByteString` @kind object;
  #L21c9ca.  call `writeClose`(v10, v11, v12) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @kind virtual;
  #L21c9d0.  if v9 == 0 then goto L21c8ee;
  #L21c9d4.  v0:= v16 @kind object;
  #L21c9d8.  v11:= v0.`okhttp3.internal.ws.RealWebSocket.listener` @type ^`okhttp3.WebSocketListener` @kind object;
  #L21c9dc.  v0:= v16 @kind object;
  #L21c9e0.  call `onClosed`(v11, v0, v6, v7) @signature `Lokhttp3/WebSocketListener;.onClosed:(Lokhttp3/WebSocket;ILjava/lang/String;)V` @kind virtual;
  #L21c9e6.  goto L21c8ee;
  #L21c9e8.  v11:= new `java.lang.AssertionError`;
  #L21c9ec.  call `<init>`(v11) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21c9f2.  throw v11;
  #Try_end7.  
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21c930;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21c9a8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21c930;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L21c930;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L21c9a8;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L21c9a2;
  catch `java.lang.Throwable` @[Try_start6..Try_end6] goto L21c9a8;
  catch `java.lang.Throwable` @[Try_start7..Try_end7] goto L21c9a8;
}
procedure `void` `writePingFrame`(`okhttp3.internal.ws.RealWebSocket` v9 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket;.writePingFrame:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L21ca50.  v8:= 0I;
  #L21ca52.  v3:= -1I;
  #L21ca54.  @monitorenter v9
  #Try_start0.  
  #L21ca56.  v4:= v9.`okhttp3.internal.ws.RealWebSocket.failed` @type ^`boolean` @kind boolean;
  #L21ca5a.  if v4 == 0 then goto L21ca62;
  #L21ca5e.  @monitorexit v9
  #L21ca60.  return @kind void;
  #L21ca62.  v2:= v9.`okhttp3.internal.ws.RealWebSocket.writer` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21ca66.  v4:= v9.`okhttp3.internal.ws.RealWebSocket.awaitingPong` @type ^`boolean` @kind boolean;
  #L21ca6a.  if v4 == 0 then goto L21caea;
  #L21ca6e.  v1:= v9.`okhttp3.internal.ws.RealWebSocket.sentPingCount` @type ^`int`;
  #L21ca72.  v4:= v9.`okhttp3.internal.ws.RealWebSocket.sentPingCount` @type ^`int`;
  #L21ca76.  v4:= v4 + 1;
  #L21ca7a.  v9.`okhttp3.internal.ws.RealWebSocket.sentPingCount` @type ^`int` := v4;
  #L21ca7e.  v4:= 1I;
  #L21ca80.  v9.`okhttp3.internal.ws.RealWebSocket.awaitingPong` @type ^`boolean` := v4 @kind boolean;
  #L21ca84.  @monitorexit v9
  #Try_end0.  
  #L21ca86.  if v1 == v3 then goto L21caf4;
  #L21ca8a.  v3:= new `java.net.SocketTimeoutException`;
  #L21ca8e.  v4:= new `java.lang.StringBuilder`;
  #L21ca92.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21ca98.  v5:= "sent ping but didn't receive pong within " @kind object;
  #L21ca9c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21caa2.  v4:= temp @kind object;
  #L21caa4.  v6:= v9.`okhttp3.internal.ws.RealWebSocket.pingIntervalMillis` @type ^`long` @kind wide;
  #L21caa8.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L21caae.  v4:= temp @kind object;
  #L21cab0.  v5:= "ms (after " @kind object;
  #L21cab4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21caba.  v4:= temp @kind object;
  #L21cabc.  v5:= v1 + -1;
  #L21cac0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L21cac6.  v4:= temp @kind object;
  #L21cac8.  v5:= " successful ping/pongs)" @kind object;
  #L21cacc.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21cad2.  v4:= temp @kind object;
  #L21cad4.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21cada.  v4:= temp @kind object;
  #L21cadc.  call `<init>`(v3, v4) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21cae2.  call `failWebSocket`(v9, v3, v8) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L21cae8.  goto L21ca60;
  #L21caea.  v1:= v3;
  #L21caec.  goto L21ca72;
  #L21caee.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L21caf0.  @monitorexit v9
  #Try_end1.  
  #L21caf2.  throw v3;
  #Try_start2.  
  #L21caf4.  v3:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L21caf8.  call `writePing`(v2, v3) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @kind virtual;
  #Try_end2.  
  #L21cafe.  goto L21ca60;
  #L21cb00.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L21cb02.  call `failWebSocket`(v9, v0, v8) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L21cb08.  goto L21ca60;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21caee;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21caee;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L21cb00;
}

record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketWriter.activeWriter` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.buffer` @AccessFlag FINAL;
  `okhttp3.internal.ws.WebSocketWriter$FrameSink` `okhttp3.internal.ws.WebSocketWriter.frameSink` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.isClient` @AccessFlag FINAL;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketWriter.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.maskKey` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.random` @AccessFlag FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.WebSocketWriter.sink` @AccessFlag FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.writerClosed` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `boolean` v3 @name `isClient`, `okio.BufferedSink` v4 @kind object @name `sink`, `java.util.Random` v5 @kind object @name `random`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ab1a8.  v1:= 0I;
  #L1ab1aa.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ab1b0.  v0:= new `okio.Buffer`;
  #L1ab1b4.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ab1ba.  v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ab1be.  v0:= new `okhttp3.internal.ws.WebSocketWriter$FrameSink`;
  #L1ab1c2.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @kind direct;
  #L1ab1c8.  v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` := v0 @kind object;
  #L1ab1cc.  if v4 != 0 then goto L1ab1e0;
  #L1ab1d0.  v0:= new `java.lang.NullPointerException`;
  #L1ab1d4.  v1:= "sink == null" @kind object;
  #L1ab1d8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab1de.  throw v0;
  #L1ab1e0.  if v5 != 0 then goto L1ab1f4;
  #L1ab1e4.  v0:= new `java.lang.NullPointerException`;
  #L1ab1e8.  v1:= "random == null" @kind object;
  #L1ab1ec.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab1f2.  throw v0;
  #L1ab1f4.  v2.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` := v3 @kind boolean;
  #L1ab1f8.  v2.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` := v4 @kind object;
  #L1ab1fc.  call temp:= `buffer`(v4) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L1ab202.  v0:= temp @kind object;
  #L1ab204.  v2.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ab208.  v2.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` := v5 @kind object;
  #L1ab20c.  if v3 == 0 then goto L1ab22e;
  #L1ab210.  v0:= 4I;
  #L1ab212.  v0:= new `byte`[v0];
  #L1ab216.  v2.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] := v0 @kind object;
  #L1ab21a.  if v3 == 0 then goto L1ab228;
  #L1ab21e.  v1:= new `okio.Buffer$UnsafeCursor`;
  #L1ab222.  call `<init>`(v1) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1ab228.  v2.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v1 @kind object;
  #L1ab22c.  return @kind void;
  #L1ab22e.  v0:= v1 @kind object;
  #L1ab230.  goto L1ab216;
}
procedure `void` `writeControlFrame`(`okhttp3.internal.ws.WebSocketWriter` v10 @kind this, `int` v11 @name `opcode`, `okio.ByteString` v12 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ab244.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L1ab248.  if v3 == 0 then goto L1ab25c;
  #L1ab24c.  v3:= new `java.io.IOException`;
  #L1ab250.  v6:= "closed" @kind object;
  #L1ab254.  call `<init>`(v3, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab25a.  throw v3;
  #L1ab25c.  call temp:= `size`(v12) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1ab262.  v2:= temp;
  #L1ab264.  v6:= (`long`) v2 @kind i2l;
  #L1ab266.  v8:= 125L;
  #L1ab26a.  v3:= lcmp(v6, v8);
  #L1ab26e.  if v3 <= 0 then goto L1ab282;
  #L1ab272.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ab276.  v6:= "Payload size must be less than or equal to 125" @kind object;
  #L1ab27a.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab280.  throw v3;
  #L1ab282.  v0:= v11 ^| 128;
  #L1ab286.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab28a.  call temp:= `writeByte`(v3, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab290.  v1:= v2;
  #L1ab292.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1ab296.  if v3 == 0 then goto L1ab31a;
  #L1ab29a.  v1:= v1 ^| 128;
  #L1ab29e.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab2a2.  call temp:= `writeByte`(v3, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab2a8.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L1ab2ac.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab2b0.  call `nextBytes`(v3, v6) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L1ab2b6.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab2ba.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab2be.  call temp:= `write`(v3, v6) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1ab2c4.  if v2 <= 0 then goto L1ab30e;
  #L1ab2c8.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab2cc.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ab2d2.  v4:= temp @kind wide;
  #L1ab2d4.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab2d8.  call temp:= `write`(v3, v12) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1ab2de.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab2e2.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab2e6.  call temp:= `readAndWriteUnsafe`(v3, v6) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ab2ec.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab2f0.  call temp:= `seek`(v3, v4) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ab2f6.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab2fa.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab2fe.  call `toggleMask`(v3, v6) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ab304.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab308.  call `close`(v3) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ab30e.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L1ab312.  call `flush`(v3) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L1ab318.  return @kind void;
  #L1ab31a.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab31e.  call temp:= `writeByte`(v3, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab324.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab328.  call temp:= `write`(v3, v12) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1ab32e.  goto L1ab30e;
}
procedure `okio.Sink` `newMessageSink`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `int` v3 @name `formatOpcode`, `long` v4 @name `contentLength`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.newMessageSink:(IJ)Lokio/Sink;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1ab340.  v1:= 1I;
  #L1ab342.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` @kind boolean;
  #L1ab346.  if v0 == 0 then goto L1ab35a;
  #L1ab34a.  v0:= new `java.lang.IllegalStateException`;
  #L1ab34e.  v1:= "Another message writer is active. Did you call close()?" @kind object;
  #L1ab352.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab358.  throw v0;
  #L1ab35a.  v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v1 @kind boolean;
  #L1ab35e.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab362.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int` := v3;
  #L1ab366.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab36a.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` := v4 @kind wide;
  #L1ab36e.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab372.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v1 @kind boolean;
  #L1ab376.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab37a.  v1:= 0I;
  #L1ab37c.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v1 @kind boolean;
  #L1ab380.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab384.  return v0 @kind object;
}
procedure `void` `writeClose`(`okhttp3.internal.ws.WebSocketWriter` v4 @kind this, `int` v5 @name `code`, `okio.ByteString` v6 @kind object @name `reason`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ab398.  v3:= 1I;
  #L1ab39a.  v1:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L1ab39e.  if v5 != 0 then goto L1ab3a6;
  #L1ab3a2.  if v6 == 0 then goto L1ab3d2;
  #L1ab3a6.  if v5 == 0 then goto L1ab3b0;
  #L1ab3aa.  call `validateCloseCode`(v5) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind static;
  #L1ab3b0.  v0:= new `okio.Buffer`;
  #L1ab3b4.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ab3ba.  call temp:= `writeShort`(v0, v5) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L1ab3c0.  if v6 == 0 then goto L1ab3ca;
  #L1ab3c4.  call temp:= `write`(v0, v6) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1ab3ca.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ab3d0.  v1:= temp @kind object;
  #L1ab3d2.  v2:= 8I;
  #Try_start0.  
  #L1ab3d6.  call `writeControlFrame`(v4, v2, v1) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #Try_end0.  
  #L1ab3dc.  v4.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L1ab3e0.  return @kind void;
  #L1ab3e2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ab3e4.  v4.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L1ab3e8.  throw v2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1ab3e2;
}
procedure `void` `writeMessageFrame`(`okhttp3.internal.ws.WebSocketWriter` v6 @kind this, `int` v7 @name `formatOpcode`, `long` v8 @name `byteCount`, `boolean` v10 @name `isFirstFrame`, `boolean` v11 @name `isFinal`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ab408.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L1ab40c.  if v4 == 0 then goto L1ab420;
  #L1ab410.  v4:= new `java.io.IOException`;
  #L1ab414.  v5:= "closed" @kind object;
  #L1ab418.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab41e.  throw v4;
  #L1ab420.  if v10 == 0 then goto L1ab4e6;
  #L1ab424.  v0:= v7;
  #L1ab426.  if v11 == 0 then goto L1ab42e;
  #L1ab42a.  v0:= v0 ^| 128;
  #L1ab42e.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab432.  call temp:= `writeByte`(v4, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab438.  v1:= 0I;
  #L1ab43a.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1ab43e.  if v4 == 0 then goto L1ab446;
  #L1ab442.  v1:= v1 ^| 128;
  #L1ab446.  v4:= 125L;
  #L1ab44a.  v4:= lcmp(v8, v4);
  #L1ab44e.  if v4 > 0 then goto L1ab4ea;
  #L1ab452.  v4:= (`int`) v8 @kind l2i;
  #L1ab454.  v1:= v1 ^| v4 @kind int;
  #L1ab456.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab45a.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab460.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1ab464.  if v4 == 0 then goto L1ab52e;
  #L1ab468.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L1ab46c.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab470.  call `nextBytes`(v4, v5) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L1ab476.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab47a.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab47e.  call temp:= `write`(v4, v5) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1ab484.  v4:= 0L;
  #L1ab488.  v4:= lcmp(v8, v4);
  #L1ab48c.  if v4 <= 0 then goto L1ab4da;
  #L1ab490.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab494.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ab49a.  v2:= temp @kind wide;
  #L1ab49c.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab4a0.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L1ab4a4.  call `write`(v4, v5, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1ab4aa.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab4ae.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab4b2.  call temp:= `readAndWriteUnsafe`(v4, v5) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ab4b8.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab4bc.  call temp:= `seek`(v4, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ab4c2.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab4c6.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab4ca.  call `toggleMask`(v4, v5) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ab4d0.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab4d4.  call `close`(v4) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ab4da.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L1ab4de.  call temp:= `emit`(v4) @signature `Lokio/BufferedSink;.emit:()Lokio/BufferedSink;` @kind interface;
  #L1ab4e4.  return @kind void;
  #L1ab4e6.  v0:= 0I;
  #L1ab4e8.  goto L1ab426;
  #L1ab4ea.  v4:= 65535L;
  #L1ab4f0.  v4:= lcmp(v8, v4);
  #L1ab4f4.  if v4 > 0 then goto L1ab514;
  #L1ab4f8.  v1:= v1 ^| 126;
  #L1ab4fc.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab500.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab506.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab50a.  v5:= (`int`) v8 @kind l2i;
  #L1ab50c.  call temp:= `writeShort`(v4, v5) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L1ab512.  goto L1ab460;
  #L1ab514.  v1:= v1 ^| 127;
  #L1ab518.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab51c.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab522.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab526.  call temp:= `writeLong`(v4, v8) @signature `Lokio/Buffer;.writeLong:(J)Lokio/Buffer;` @kind virtual;
  #L1ab52c.  goto L1ab460;
  #L1ab52e.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab532.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L1ab536.  call `write`(v4, v5, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1ab53c.  goto L1ab4da;
}
procedure `void` `writePing`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L1ab550.  v0:= 9I;
  #L1ab554.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L1ab55a.  return @kind void;
}
procedure `void` `writePong`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L1ab56c.  v0:= 10I;
  #L1ab570.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L1ab576.  return @kind void;
}

record `okhttp3.internal.http1.Http1Codec$FixedLengthSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `long` `okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.ForwardingTimeout` `okhttp3.internal.http1.Http1Codec$FixedLengthSink.timeout` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v2 @kind this, `okhttp3.internal.http1.Http1Codec` v3 @kind object, `long` v4 @name `bytesRemaining`) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.<init>:(Lokhttp3/internal/http1/Http1Codec;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L218278.  v2.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v3 @kind object;
  #L21827c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L218282.  v0:= new `okio.ForwardingTimeout`;
  #L218286.  v1:= v2.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L21828a.  v1:= v1.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L21828e.  call temp:= `timeout`(v1) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L218294.  v1:= temp @kind object;
  #L218296.  call `<init>`(v0, v1) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L21829c.  v2.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L2182a0.  v2.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` := v4 @kind wide;
  #L2182a4.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v4 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2182b8.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L2182bc.  if v0 == 0 then goto L2182c2;
  #L2182c0.  return @kind void;
  #L2182c2.  v0:= 1I;
  #L2182c4.  v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L2182c8.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L2182cc.  v2:= 0L;
  #L2182d0.  v0:= lcmp(v0, v2);
  #L2182d4.  if v0 <= 0 then goto L2182e8;
  #L2182d8.  v0:= new `java.net.ProtocolException`;
  #L2182dc.  v1:= "unexpected end of stream" @kind object;
  #L2182e0.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2182e6.  throw v0;
  #L2182e8.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2182ec.  v1:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L2182f0.  call `detachTimeout`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.detachTimeout:(Lokio/ForwardingTimeout;)V` @kind virtual;
  #L2182f6.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2182fa.  v1:= 3I;
  #L2182fc.  v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int` := v1;
  #L218300.  goto L2182c0;
}
procedure `void` `flush`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L218314.  v0:= v1.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L218318.  if v0 == 0 then goto L21831e;
  #L21831c.  return @kind void;
  #L21831e.  v0:= v1.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L218322.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L218326.  call `flush`(v0) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L21832c.  goto L21831c;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L218340.  v0:= v1.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L218344.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v6 @kind this, `okio.Buffer` v7 @kind object @name `source`, `long` v8 @name `byteCount`) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L218358.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L21835c.  if v0 == 0 then goto L218370;
  #L218360.  v0:= new `java.lang.IllegalStateException`;
  #L218364.  v1:= "closed" @kind object;
  #L218368.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21836e.  throw v0;
  #L218370.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L218376.  v0:= temp @kind wide;
  #L218378.  v2:= 0L;
  #L21837c.  v4:= v8 @kind wide;
  #L21837e.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L218384.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L218388.  v0:= lcmp(v8, v0);
  #L21838c.  if v0 <= 0 then goto L2183da;
  #L218390.  v0:= new `java.net.ProtocolException`;
  #L218394.  v1:= new `java.lang.StringBuilder`;
  #L218398.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21839e.  v2:= "expected " @kind object;
  #L2183a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2183a8.  v1:= temp @kind object;
  #L2183aa.  v2:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L2183ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2183b4.  v1:= temp @kind object;
  #L2183b6.  v2:= " bytes but received " @kind object;
  #L2183ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2183c0.  v1:= temp @kind object;
  #L2183c2.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2183c8.  v1:= temp @kind object;
  #L2183ca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2183d0.  v1:= temp @kind object;
  #L2183d2.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2183d8.  throw v0;
  #L2183da.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2183de.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L2183e2.  call `write`(v0, v7, v8) @signature `Lokio/BufferedSink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L2183e8.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L2183ec.  v0:= v0 - v8 @kind long;
  #L2183ee.  v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` := v0 @kind wide;
  #L2183f2.  return @kind void;
}

record `okhttp3.internal.platform.Jdk9Platform` @kind class @AccessFlag FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @AccessFlag FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Jdk9Platform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object @name `setProtocolMethod`, `java.lang.reflect.Method` v2 @kind object @name `getProtocolMethod`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21b458.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21b45e.  v0.`okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L21b462.  v0.`okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L21b466.  return @kind void;
}
procedure `okhttp3.internal.platform.Jdk9Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21b478.  v2:= constclass @type ^`javax.net.ssl.SSLParameters` @kind object;
  #L21b47c.  v3:= "setApplicationProtocols" @kind object;
  #L21b480.  v4:= 1I;
  #L21b482.  v4:= new `java.lang.Class`[v4];
  #L21b486.  v5:= 0I;
  #L21b488.  v6:= constclass @type ^`java.lang.String`[] @kind object;
  #L21b48c.  v4[v5]:= v6 @kind object;
  #L21b490.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b496.  v1:= temp @kind object;
  #L21b498.  v2:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21b49c.  v3:= "getApplicationProtocol" @kind object;
  #L21b4a0.  v4:= 0I;
  #L21b4a2.  v4:= new `java.lang.Class`[v4];
  #L21b4a6.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b4ac.  v0:= temp @kind object;
  #L21b4ae.  v2:= new `okhttp3.internal.platform.Jdk9Platform`;
  #L21b4b2.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/platform/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21b4b8.  return v2 @kind object;
  #L21b4ba.  v2:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21b4bc.  v2:= 0I;
  #L21b4be.  goto L21b4b8;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21b4ba;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Jdk9Platform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `sslSocket`, `java.lang.String` v9 @kind object @name `hostname`, `java.util.List` v10 @kind object) @signature `Lokhttp3/internal/platform/Jdk9Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21b4e0.  call temp:= `getSSLParameters`(v8) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L21b4e6.  v2:= temp @kind object;
  #L21b4e8.  call temp:= `alpnProtocolNames`(v10) @signature `Lokhttp3/internal/platform/Jdk9Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L21b4ee.  v1:= temp @kind object;
  #L21b4f0.  v3:= v7.`okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21b4f4.  v4:= 1I;
  #L21b4f6.  v4:= new `java.lang.Object`[v4];
  #L21b4fa.  v5:= 0I;
  #L21b4fc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L21b502.  v6:= temp;
  #L21b504.  v6:= new `java.lang.String`[v6];
  #L21b508.  call temp:= `toArray`(v1, v6) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L21b50e.  v6:= temp @kind object;
  #L21b510.  v4[v5]:= v6 @kind object;
  #L21b514.  call temp:= `invoke`(v3, v2, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b51a.  call `setSSLParameters`(v8, v2) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #Try_end0.  
  #L21b520.  return @kind void;
  #L21b522.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21b524.  v3:= "unable to set ssl parameters" @kind object;
  #L21b528.  call temp:= `assertionError`(v3, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21b52e.  v3:= temp @kind object;
  #L21b530.  throw v3;
  #L21b532.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21b534.  goto L21b524;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21b522;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21b532;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Jdk9Platform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21b558.  v2:= v4.`okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21b55c.  v3:= 0I;
  #L21b55e.  v3:= new `java.lang.Object`[v3];
  #L21b562.  call temp:= `invoke`(v2, v5, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b568.  v1:= temp @kind object;
  #L21b56a.  v1:= (`java.lang.String`) v1 @kind object;
  #L21b56e.  if v1 == 0 then goto L21b582;
  #L21b572.  v2:= "" @kind object;
  #L21b576.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #Try_end0.  
  #L21b57c.  v2:= temp;
  #L21b57e.  if v2 == 0 then goto L21b584;
  #L21b582.  v1:= 0I;
  #L21b584.  return v1 @kind object;
  #L21b586.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21b588.  v2:= "unable to get selected protocols" @kind object;
  #L21b58c.  call temp:= `assertionError`(v2, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21b592.  v2:= temp @kind object;
  #L21b594.  throw v2;
  #L21b596.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21b598.  goto L21b588;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21b586;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21b596;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Jdk9Platform` v2 @kind this, `javax.net.ssl.SSLSocketFactory` v3 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21b5bc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L21b5c0.  v1:= "clientBuilder.sslSocketFactory(SSLSocketFactory) not supported on JDK 9+" @kind object;
  #L21b5c4.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21b5ca.  throw v0;
}

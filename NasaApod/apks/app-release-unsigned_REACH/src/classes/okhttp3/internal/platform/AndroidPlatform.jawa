record `okhttp3.internal.platform.AndroidPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `okhttp3.internal.platform.AndroidPlatform$CloseGuard` `okhttp3.internal.platform.AndroidPlatform.closeGuard` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setHostname` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.platform.AndroidPlatform.MAX_LOG_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.Class` v2 @kind object, `okhttp3.internal.platform.OptionalMethod` v3 @kind object, `okhttp3.internal.platform.OptionalMethod` v4 @kind object, `okhttp3.internal.platform.OptionalMethod` v5 @kind object, `okhttp3.internal.platform.OptionalMethod` v6 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L21abec.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21abf2.  call temp:= `get`() @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.get:()Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;` @kind static;
  #L21abf8.  v0:= temp @kind object;
  #L21abfa.  v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` := v0 @kind object;
  #L21abfe.  v1.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` := v2 @kind object;
  #L21ac02.  v1.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` := v3 @kind object;
  #L21ac06.  v1.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` := v4 @kind object;
  #L21ac0a.  v1.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` := v5 @kind object;
  #L21ac0e.  v1.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` := v6 @kind object;
  #L21ac12.  return @kind void;
}
procedure `boolean` `api23IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.lang.String` v5 @kind object @name `hostname`, `java.lang.Class` v6 @kind object, `java.lang.Object` v7 @kind object @name `networkSecurityPolicy`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21ac24.  v2:= "isCleartextTrafficPermitted" @kind object;
  #L21ac28.  v3:= 0I;
  #L21ac2a.  v3:= new `java.lang.Class`[v3];
  #L21ac2e.  call temp:= `getMethod`(v6, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21ac34.  v1:= temp @kind object;
  #L21ac36.  v2:= 0I;
  #L21ac38.  v2:= new `java.lang.Object`[v2];
  #L21ac3c.  call temp:= `invoke`(v1, v7, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21ac42.  v2:= temp @kind object;
  #L21ac44.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L21ac48.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #Try_end0.  
  #L21ac4e.  v2:= temp;
  #L21ac50.  return v2;
  #L21ac52.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21ac54.  call temp:= `isCleartextTrafficPermitted`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L21ac5a.  v2:= temp;
  #L21ac5c.  goto L21ac50;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21ac52;
}
procedure `boolean` `api24IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `java.lang.String` v7 @kind object @name `hostname`, `java.lang.Class` v8 @kind object, `java.lang.Object` v9 @kind object @name `networkSecurityPolicy`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L21ac80.  v2:= "isCleartextTrafficPermitted" @kind object;
  #L21ac84.  v3:= 1I;
  #L21ac86.  v3:= new `java.lang.Class`[v3];
  #L21ac8a.  v4:= 0I;
  #L21ac8c.  v5:= constclass @type ^`java.lang.String` @kind object;
  #L21ac90.  v3[v4]:= v5 @kind object;
  #L21ac94.  call temp:= `getMethod`(v8, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21ac9a.  v1:= temp @kind object;
  #L21ac9c.  v2:= 1I;
  #L21ac9e.  v2:= new `java.lang.Object`[v2];
  #L21aca2.  v3:= 0I;
  #L21aca4.  v2[v3]:= v7 @kind object;
  #L21aca8.  call temp:= `invoke`(v1, v9, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21acae.  v2:= temp @kind object;
  #L21acb0.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L21acb4.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #Try_end0.  
  #L21acba.  v2:= temp;
  #L21acbc.  return v2;
  #L21acbe.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21acc0.  call temp:= `api23IsCleartextTrafficPermitted`(v6, v7, v8, v9) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L21acc6.  v2:= temp;
  #L21acc8.  goto L21acbc;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21acbe;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L21acec.  v7:= 0I;
  #Try_start0.  
  #L21acee.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L21acf2.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L21acf8.  v1:= temp @kind object;
  #Try_start1.  
  #L21acfa.  v2:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21acfe.  v0:= 0I;
  #L21ad00.  v8:= "setUseSessionTickets" @kind object;
  #L21ad04.  v9:= 1I;
  #L21ad06.  v9:= new `java.lang.Class`[v9];
  #L21ad0a.  v10:= 0I;
  #L21ad0c.  v11:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L21ad10.  v9[v10]:= v11 @kind object;
  #L21ad14.  call `<init>`(v2, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21ad1a.  v3:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21ad1e.  v0:= 0I;
  #L21ad20.  v8:= "setHostname" @kind object;
  #L21ad24.  v9:= 1I;
  #L21ad26.  v9:= new `java.lang.Class`[v9];
  #L21ad2a.  v10:= 0I;
  #L21ad2c.  v11:= constclass @type ^`java.lang.String` @kind object;
  #L21ad30.  v9[v10]:= v11 @kind object;
  #L21ad34.  call `<init>`(v3, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21ad3a.  v4:= 0I;
  #L21ad3c.  v5:= 0I;
  #L21ad3e.  call temp:= `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @kind static;
  #L21ad44.  v0:= temp;
  #L21ad46.  if v0 == 0 then goto L21ad82;
  #L21ad4a.  v4:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21ad4e.  v0:= constclass @type ^`byte`[] @kind object;
  #L21ad52.  v8:= "getAlpnSelectedProtocol" @kind object;
  #L21ad56.  v9:= 0I;
  #L21ad58.  v9:= new `java.lang.Class`[v9];
  #L21ad5c.  call `<init>`(v4, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21ad62.  v5:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21ad66.  v0:= 0I;
  #L21ad68.  v8:= "setAlpnProtocols" @kind object;
  #L21ad6c.  v9:= 1I;
  #L21ad6e.  v9:= new `java.lang.Class`[v9];
  #L21ad72.  v10:= 0I;
  #L21ad74.  v11:= constclass @type ^`byte`[] @kind object;
  #L21ad78.  v9[v10]:= v11 @kind object;
  #L21ad7c.  call `<init>`(v5, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21ad82.  v0:= new `okhttp3.internal.platform.AndroidPlatform`;
  #L21ad86.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @kind direct;
  #L21ad8c.  return v0 @kind object;
  #L21ad8e.  v6:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21ad90.  v0:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L21ad94.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end1.  
  #L21ad9a.  v1:= temp @kind object;
  #L21ad9c.  goto L21acfa;
  #L21ad9e.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21ada0.  v0:= v7 @kind object;
  #L21ada2.  goto L21ad8c;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21ad8e;
  catch `java.lang.ClassNotFoundException` @[Try_start1..Try_end1] goto L21ad9e;
}
procedure `boolean` `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L21add0.  v0:= 1I;
  #L21add2.  v1:= "GMSCore_OpenSSL" @kind object;
  #L21add6.  call temp:= `getProvider`(v1) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L21addc.  v1:= temp @kind object;
  #L21adde.  if v1 == 0 then goto L21ade4;
  #L21ade2.  return v0;
  #Try_start0.  
  #L21ade4.  v1:= "android.net.Network" @kind object;
  #L21ade8.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L21adee.  goto L21ade2;
  #L21adf0.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21adf2.  v0:= 0I;
  #L21adf4.  goto L21ade2;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21adf0;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.AndroidPlatform` v9 @kind this, `javax.net.ssl.X509TrustManager` v10 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #Try_start0.  
  #L21ae18.  v5:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L21ae1c.  call temp:= `forName`(v5) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21ae22.  v4:= temp @kind object;
  #L21ae24.  v5:= 1I;
  #L21ae26.  v5:= new `java.lang.Class`[v5];
  #L21ae2a.  v6:= 0I;
  #L21ae2c.  v7:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21ae30.  v5[v6]:= v7 @kind object;
  #L21ae34.  call temp:= `getConstructor`(v4, v5) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L21ae3a.  v1:= temp @kind object;
  #L21ae3c.  v5:= 1I;
  #L21ae3e.  v5:= new `java.lang.Object`[v5];
  #L21ae42.  v6:= 0I;
  #L21ae44.  v5[v6]:= v10 @kind object;
  #L21ae48.  call temp:= `newInstance`(v1, v5) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21ae4e.  v3:= temp @kind object;
  #L21ae50.  v5:= "checkServerTrusted" @kind object;
  #L21ae54.  v6:= 3I;
  #L21ae56.  v6:= new `java.lang.Class`[v6];
  #L21ae5a.  v7:= 0I;
  #L21ae5c.  v8:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L21ae60.  v6[v7]:= v8 @kind object;
  #L21ae64.  v7:= 1I;
  #L21ae66.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L21ae6a.  v6[v7]:= v8 @kind object;
  #L21ae6e.  v7:= 2I;
  #L21ae70.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L21ae74.  v6[v7]:= v8 @kind object;
  #L21ae78.  call temp:= `getMethod`(v4, v5, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21ae7e.  v0:= temp @kind object;
  #L21ae80.  v5:= new `okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner`;
  #L21ae84.  call `<init>`(v5, v3, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidCertificateChainCleaner;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21ae8a.  return v5 @kind object;
  #L21ae8c.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L21ae8e.  call temp:= `buildCertificateChainCleaner`(v9, v10) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind super;
  #L21ae94.  v5:= temp @kind object;
  #L21ae96.  goto L21ae8a;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L21ae8c;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.AndroidPlatform` v7 @kind this, `javax.net.ssl.X509TrustManager` v8 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21aeb8.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21aebe.  v2:= temp @kind object;
  #L21aec0.  v3:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L21aec4.  v4:= 1I;
  #L21aec6.  v4:= new `java.lang.Class`[v4];
  #L21aeca.  v5:= 0I;
  #L21aecc.  v6:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L21aed0.  v4[v5]:= v6 @kind object;
  #L21aed4.  call temp:= `getDeclaredMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21aeda.  v1:= temp @kind object;
  #L21aedc.  v2:= 1I;
  #L21aede.  call `setAccessible`(v1, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L21aee4.  v2:= new `okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex`;
  #L21aee8.  call `<init>`(v2, v8, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidTrustRootIndex;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21aeee.  return v2 @kind object;
  #L21aef0.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21aef2.  call temp:= `buildTrustRootIndex`(v7, v8) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind super;
  #L21aef8.  v2:= temp @kind object;
  #L21aefa.  goto L21aeee;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21aef0;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `javax.net.ssl.SSLSocket` v7 @kind object @name `sslSocket`, `java.lang.String` v8 @kind object @name `hostname`, `java.util.List` v9 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21af1c.  v5:= 0I;
  #L21af1e.  v4:= 1I;
  #L21af20.  if v8 == 0 then goto L21af50;
  #L21af24.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21af28.  v2:= new `java.lang.Object`[v4];
  #L21af2c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L21af32.  v3:= temp @kind object;
  #L21af34.  v2[v5]:= v3 @kind object;
  #L21af38.  call temp:= `invokeOptionalWithoutCheckedException`(v1, v7, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21af3e.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21af42.  v2:= new `java.lang.Object`[v4];
  #L21af46.  v2[v5]:= v8 @kind object;
  #L21af4a.  call temp:= `invokeOptionalWithoutCheckedException`(v1, v7, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21af50.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21af54.  if v1 == 0 then goto L21af82;
  #L21af58.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21af5c.  call temp:= `isSupported`(v1, v7) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L21af62.  v1:= temp;
  #L21af64.  if v1 == 0 then goto L21af82;
  #L21af68.  v0:= new `java.lang.Object`[v4];
  #L21af6c.  call temp:= `concatLengthPrefixed`(v9) @signature `Lokhttp3/internal/platform/AndroidPlatform;.concatLengthPrefixed:(Ljava/util/List;)[B` @kind static;
  #L21af72.  v1:= temp @kind object;
  #L21af74.  v0[v5]:= v1 @kind object;
  #L21af78.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21af7c.  call temp:= `invokeWithoutCheckedException`(v1, v7, v0) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21af82.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.net.Socket` v5 @kind object @name `socket`, `java.net.InetSocketAddress` v6 @kind object @name `address`, `int` v7 @name `connectTimeout`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21af94.  call `connect`(v5, v6, v7) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #Try_end0.  
  #L21af9a.  return @kind void;
  #L21af9c.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L21af9e.  call temp:= `isAndroidGetsocknameError`(v0) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L21afa4.  v2:= temp;
  #L21afa6.  if v2 == 0 then goto L21afb6;
  #L21afaa.  v2:= new `java.io.IOException`;
  #L21afae.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L21afb4.  throw v2;
  #L21afb6.  throw v0;
  #L21afb8.  v0:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L21afba.  v1:= new `java.io.IOException`;
  #L21afbe.  v2:= "Exception in connect" @kind object;
  #L21afc2.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21afc8.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L21afce.  throw v1;
  #L21afd0.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L21afd2.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L21afd6.  v3:= 26I;
  #L21afda.  if v2 != v3 then goto L21aff4;
  #L21afde.  v1:= new `java.io.IOException`;
  #L21afe2.  v2:= "Exception in connect" @kind object;
  #L21afe6.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21afec.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L21aff2.  throw v1;
  #L21aff4.  throw v0;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L21af9c;
  catch `java.lang.SecurityException` @[Try_start0..Try_end0] goto L21afb8;
  catch `java.lang.ClassCastException` @[Try_start0..Try_end0] goto L21afd0;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21b01c.  v1:= 0I;
  #L21b01e.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b022.  if v2 != 0 then goto L21b028;
  #L21b026.  return v1 @kind object;
  #L21b028.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b02c.  call temp:= `isSupported`(v2, v5) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L21b032.  v2:= temp;
  #L21b034.  if v2 == 0 then goto L21b026;
  #L21b038.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b03c.  v3:= 0I;
  #L21b03e.  v3:= new `java.lang.Object`[v3];
  #L21b042.  call temp:= `invokeWithoutCheckedException`(v2, v5, v3) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b048.  v0:= temp @kind object;
  #L21b04a.  v0:= (`byte`[]) v0 @kind object;
  #L21b04e.  if v0 == 0 then goto L21b026;
  #L21b052.  v1:= new `java.lang.String`;
  #L21b056.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L21b05a.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L21b060.  goto L21b026;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object @name `closer`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21b074.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L21b078.  call temp:= `createAndOpen`(v0, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.createAndOpen:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L21b07e.  v0:= temp @kind object;
  #L21b080.  return v0 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `java.lang.String` v7 @kind object @name `hostname`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L21b094.  v4:= "android.security.NetworkSecurityPolicy" @kind object;
  #L21b098.  call temp:= `forName`(v4) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21b09e.  v2:= temp @kind object;
  #L21b0a0.  v4:= "getInstance" @kind object;
  #L21b0a4.  v5:= 0I;
  #L21b0a6.  v5:= new `java.lang.Class`[v5];
  #L21b0aa.  call temp:= `getMethod`(v2, v4, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b0b0.  v1:= temp @kind object;
  #L21b0b2.  v4:= 0I;
  #L21b0b4.  v5:= 0I;
  #L21b0b6.  v5:= new `java.lang.Object`[v5];
  #L21b0ba.  call temp:= `invoke`(v1, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b0c0.  v3:= temp @kind object;
  #L21b0c2.  call temp:= `api24IsCleartextTrafficPermitted`(v6, v7, v2, v3) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L21b0c8.  v4:= temp;
  #L21b0ca.  return v4;
  #L21b0cc.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21b0ce.  call temp:= `isCleartextTrafficPermitted`(v6, v7) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L21b0d4.  v4:= temp;
  #L21b0d6.  goto L21b0ca;
  #L21b0d8.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21b0da.  v4:= "unable to determine cleartext support" @kind object;
  #L21b0de.  call temp:= `assertionError`(v4, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21b0e4.  v4:= temp @kind object;
  #L21b0e6.  throw v4;
  #L21b0e8.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L21b0ea.  goto L21b0da;
  #L21b0ec.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21b0ee.  goto L21b0da;
  #L21b0f0.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21b0f2.  goto L21b0ce;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21b0cc;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21b0f0;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21b0d8;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L21b0e8;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21b0ec;
}
procedure `void` `log`(`okhttp3.internal.platform.AndroidPlatform` v8 @kind this, `int` v9 @name `level`, `java.lang.String` v10 @kind object @name `message`, `java.lang.Throwable` v11 @kind object @name `t`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21b120.  v7:= 10I;
  #L21b124.  v3:= 5I;
  #L21b126.  if v9 != v3 then goto L21b1a6;
  #L21b12a.  if v11 == 0 then goto L21b160;
  #L21b12e.  v5:= new `java.lang.StringBuilder`;
  #L21b132.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21b138.  call temp:= `append`(v5, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b13e.  v5:= temp @kind object;
  #L21b140.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b146.  v5:= temp @kind object;
  #L21b148.  call temp:= `getStackTraceString`(v11) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L21b14e.  v6:= temp @kind object;
  #L21b150.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b156.  v5:= temp @kind object;
  #L21b158.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21b15e.  v10:= temp @kind object;
  #L21b160.  v1:= 0I;
  #L21b162.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21b168.  v2:= temp;
  #L21b16a.  if v1 >= v2 then goto L21b1ae;
  #L21b16e.  call temp:= `indexOf`(v10, v7, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L21b174.  v4:= temp;
  #L21b176.  v5:= -1I;
  #L21b178.  if v4 == v5 then goto L21b1aa;
  #L21b17c.  v5:= v1 + 4000;
  #L21b180.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L21b186.  v0:= temp;
  #L21b188.  v5:= "OkHttp" @kind object;
  #L21b18c.  call temp:= `substring`(v10, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L21b192.  v6:= temp @kind object;
  #L21b194.  call temp:= `println`(v3, v5, v6) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L21b19a.  v1:= v0;
  #L21b19c.  if v1 < v4 then goto L21b17c;
  #L21b1a0.  v1:= v1 + 1;
  #L21b1a4.  goto L21b16a;
  #L21b1a6.  v3:= 3I;
  #L21b1a8.  goto L21b12a;
  #L21b1aa.  v4:= v2;
  #L21b1ac.  goto L21b17c;
  #L21b1ae.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `java.lang.String` v4 @kind object @name `message`, `java.lang.Object` v5 @kind object @name `stackTrace`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21b1c0.  v1:= v3.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L21b1c4.  call temp:= `warnIfOpen`(v1, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.warnIfOpen:(Ljava/lang/Object;)Z` @kind virtual;
  #L21b1ca.  v0:= temp;
  #L21b1cc.  if v0 != 0 then goto L21b1da;
  #L21b1d0.  v1:= 5I;
  #L21b1d2.  v2:= 0I;
  #L21b1d4.  call `log`(v3, v1, v4, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21b1da.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.AndroidPlatform` v7 @kind this, `javax.net.ssl.SSLSocketFactory` v8 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21b1ec.  v4:= v7.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` @kind object;
  #L21b1f0.  v5:= "sslParameters" @kind object;
  #L21b1f4.  call temp:= `readFieldOrNull`(v8, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21b1fa.  v0:= temp @kind object;
  #L21b1fc.  if v0 != 0 then goto L21b22a;
  #Try_start0.  
  #L21b200.  v4:= "com.google.android.gms.org.conscrypt.SSLParametersImpl" @kind object;
  #L21b204.  v5:= 0I;
  #L21b206.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21b20c.  v6:= temp @kind object;
  #L21b20e.  call temp:= `getClassLoader`(v6) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L21b214.  v6:= temp @kind object;
  #L21b216.  call temp:= `forName`(v4, v5, v6) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L21b21c.  v2:= temp @kind object;
  #L21b21e.  v4:= "sslParameters" @kind object;
  #L21b222.  call temp:= `readFieldOrNull`(v8, v2, v4) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #Try_end0.  
  #L21b228.  v0:= temp @kind object;
  #L21b22a.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21b22e.  v5:= "x509TrustManager" @kind object;
  #L21b232.  call temp:= `readFieldOrNull`(v0, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21b238.  v3:= temp @kind object;
  #L21b23a.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #L21b23e.  if v3 == 0 then goto L21b250;
  #L21b242.  return v3 @kind object;
  #L21b244.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21b246.  call temp:= `trustManager`(v7, v8) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind super;
  #L21b24c.  v3:= temp @kind object;
  #L21b24e.  goto L21b242;
  #L21b250.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21b254.  v5:= "trustManager" @kind object;
  #L21b258.  call temp:= `readFieldOrNull`(v0, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21b25e.  v4:= temp @kind object;
  #L21b260.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L21b264.  v3:= v4 @kind object;
  #L21b266.  goto L21b242;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21b244;
}

record `okhttp3.internal.platform.JdkWithJettyBootPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object @name `putMethod`, `java.lang.reflect.Method` v2 @kind object @name `getMethod`, `java.lang.reflect.Method` v3 @kind object @name `removeMethod`, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21b5dc.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21b5e2.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L21b5e6.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L21b5ea.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L21b5ee.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` := v4 @kind object;
  #L21b5f2.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` := v5 @kind object;
  #L21b5f6.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #Try_start0.  
  #L21b608.  v7:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L21b60c.  call temp:= `forName`(v7) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21b612.  v6:= temp @kind object;
  #L21b614.  v0:= new `java.lang.StringBuilder`;
  #L21b618.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21b61e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b624.  v0:= temp @kind object;
  #L21b626.  v9:= "$Provider" @kind object;
  #L21b62a.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b630.  v0:= temp @kind object;
  #L21b632.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21b638.  v0:= temp @kind object;
  #L21b63a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21b640.  v8:= temp @kind object;
  #L21b642.  v0:= new `java.lang.StringBuilder`;
  #L21b646.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21b64c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b652.  v0:= temp @kind object;
  #L21b654.  v9:= "$ClientProvider" @kind object;
  #L21b658.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b65e.  v0:= temp @kind object;
  #L21b660.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21b666.  v0:= temp @kind object;
  #L21b668.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21b66e.  v4:= temp @kind object;
  #L21b670.  v0:= new `java.lang.StringBuilder`;
  #L21b674.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21b67a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b680.  v0:= temp @kind object;
  #L21b682.  v9:= "$ServerProvider" @kind object;
  #L21b686.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21b68c.  v0:= temp @kind object;
  #L21b68e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21b694.  v0:= temp @kind object;
  #L21b696.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21b69c.  v5:= temp @kind object;
  #L21b69e.  v0:= "put" @kind object;
  #L21b6a2.  v9:= 2I;
  #L21b6a4.  v9:= new `java.lang.Class`[v9];
  #L21b6a8.  v10:= 0I;
  #L21b6aa.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21b6ae.  v9[v10]:= v11 @kind object;
  #L21b6b2.  v10:= 1I;
  #L21b6b4.  v9[v10]:= v8 @kind object;
  #L21b6b8.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b6be.  v1:= temp @kind object;
  #L21b6c0.  v0:= "get" @kind object;
  #L21b6c4.  v9:= 1I;
  #L21b6c6.  v9:= new `java.lang.Class`[v9];
  #L21b6ca.  v10:= 0I;
  #L21b6cc.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21b6d0.  v9[v10]:= v11 @kind object;
  #L21b6d4.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b6da.  v2:= temp @kind object;
  #L21b6dc.  v0:= "remove" @kind object;
  #L21b6e0.  v9:= 1I;
  #L21b6e2.  v9:= new `java.lang.Class`[v9];
  #L21b6e6.  v10:= 0I;
  #L21b6e8.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21b6ec.  v9[v10]:= v11 @kind object;
  #L21b6f0.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b6f6.  v3:= temp @kind object;
  #L21b6f8.  v0:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform`;
  #L21b6fc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #Try_end0.  
  #L21b702.  return v0 @kind object;
  #L21b704.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21b706.  v0:= 0I;
  #L21b708.  goto L21b702;
  #L21b70a.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21b70c.  goto L21b706;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21b704;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21b70a;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object @name `sslSocket`) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L21b734.  v1:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21b738.  v2:= 0I;
  #L21b73a.  v3:= 1I;
  #L21b73c.  v3:= new `java.lang.Object`[v3];
  #L21b740.  v4:= 0I;
  #L21b742.  v3[v4]:= v6 @kind object;
  #L21b746.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L21b74c.  return @kind void;
  #L21b74e.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21b750.  v1:= "unable to remove alpn" @kind object;
  #L21b754.  call temp:= `assertionError`(v1, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21b75a.  v1:= temp @kind object;
  #L21b75c.  throw v1;
  #L21b75e.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21b760.  goto L21b750;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21b74e;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21b75e;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `sslSocket`, `java.lang.String` v9 @kind object @name `hostname`, `java.util.List` v10 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21b784.  call temp:= `alpnProtocolNames`(v10) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L21b78a.  v1:= temp @kind object;
  #Try_start0.  
  #L21b78c.  v3:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L21b790.  call temp:= `getClassLoader`(v3) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L21b796.  v3:= temp @kind object;
  #L21b798.  v4:= 2I;
  #L21b79a.  v4:= new `java.lang.Class`[v4];
  #L21b79e.  v5:= 0I;
  #L21b7a0.  v6:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` @kind object;
  #L21b7a4.  v4[v5]:= v6 @kind object;
  #L21b7a8.  v5:= 1I;
  #L21b7aa.  v6:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` @kind object;
  #L21b7ae.  v4[v5]:= v6 @kind object;
  #L21b7b2.  v5:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`;
  #L21b7b6.  call `<init>`(v5, v1) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform$JettyNegoProvider;.<init>:(Ljava/util/List;)V` @kind direct;
  #L21b7bc.  call temp:= `newProxyInstance`(v3, v4, v5) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L21b7c2.  v2:= temp @kind object;
  #L21b7c4.  v3:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21b7c8.  v4:= 0I;
  #L21b7ca.  v5:= 2I;
  #L21b7cc.  v5:= new `java.lang.Object`[v5];
  #L21b7d0.  v6:= 0I;
  #L21b7d2.  v5[v6]:= v8 @kind object;
  #L21b7d6.  v6:= 1I;
  #L21b7d8.  v5[v6]:= v2 @kind object;
  #L21b7dc.  call temp:= `invoke`(v3, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L21b7e2.  return @kind void;
  #L21b7e4.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21b7e6.  v3:= "unable to set alpn" @kind object;
  #L21b7ea.  call temp:= `assertionError`(v3, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21b7f0.  v3:= temp @kind object;
  #L21b7f2.  throw v3;
  #L21b7f4.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21b7f6.  goto L21b7e6;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21b7f4;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21b7e4;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21b818.  v2:= 0I;
  #Try_start0.  
  #L21b81a.  v3:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21b81e.  v4:= 0I;
  #L21b820.  v5:= 1I;
  #L21b822.  v5:= new `java.lang.Object`[v5];
  #L21b826.  v6:= 0I;
  #L21b828.  v5[v6]:= v8 @kind object;
  #L21b82c.  call temp:= `invoke`(v3, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b832.  v3:= temp @kind object;
  #L21b834.  call temp:= `getInvocationHandler`(v3) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L21b83a.  v1:= temp @kind object;
  #L21b83c.  v1:= (`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`) v1 @kind object;
  #L21b840.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L21b844.  if v3 != 0 then goto L21b868;
  #L21b848.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #L21b84c.  if v3 != 0 then goto L21b868;
  #L21b850.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L21b856.  v3:= temp @kind object;
  #L21b858.  v4:= 4I;
  #L21b85a.  v5:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L21b85e.  v6:= 0I;
  #L21b860.  call `log`(v3, v4, v5, v6) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21b866.  return v2 @kind object;
  #L21b868.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L21b86c.  if v3 != 0 then goto L21b866;
  #L21b870.  v2:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #Try_end0.  
  #L21b874.  goto L21b866;
  #L21b876.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21b878.  v2:= "unable to get selected protocol" @kind object;
  #L21b87c.  call temp:= `assertionError`(v2, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21b882.  v2:= temp @kind object;
  #L21b884.  throw v2;
  #L21b886.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21b888.  goto L21b878;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21b886;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21b876;
}

record `okhttp3.internal.connection.RouteDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.internal.connection.RouteDatabase.failedRoutes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a1350.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a1356.  v0:= new `java.util.LinkedHashSet`;
  #L1a135a.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L1a1360.  v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` := v0 @kind object;
  #L1a1364.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `route`) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1378.  @monitorenter v1
  #Try_start0.  
  #L1a137a.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a137e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a1384.  @monitorexit v1
  #L1a1386.  return @kind void;
  #L1a1388.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a138a.  @monitorexit v1
  #L1a138c.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a1388;
}
procedure `void` `failed`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `failedRoute`) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a13ac.  @monitorenter v1
  #Try_start0.  
  #L1a13ae.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a13b2.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a13b8.  @monitorexit v1
  #L1a13ba.  return @kind void;
  #L1a13bc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a13be.  @monitorexit v1
  #L1a13c0.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a13bc;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `route`) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a13e0.  @monitorenter v1
  #Try_start0.  
  #L1a13e2.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a13e6.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a13ec.  v0:= temp;
  #L1a13ee.  @monitorexit v1
  #L1a13f0.  return v0;
  #L1a13f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a13f4.  @monitorexit v1
  #L1a13f6.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a13f2;
}

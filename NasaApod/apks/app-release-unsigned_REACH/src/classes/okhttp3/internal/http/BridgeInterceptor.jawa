record `okhttp3.internal.http.BridgeInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.CookieJar` `okhttp3.internal.http.BridgeInterceptor.cookieJar` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.BridgeInterceptor` v0 @kind this, `okhttp3.CookieJar` v1 @kind object @name `cookieJar`) @signature `Lokhttp3/internal/http/BridgeInterceptor;.<init>:(Lokhttp3/CookieJar;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L216b18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L216b1e.  v0.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` := v1 @kind object;
  #L216b22.  return @kind void;
}
procedure `java.lang.String` `cookieHeader`(`okhttp3.internal.http.BridgeInterceptor` v6 @kind this, `java.util.List` v7 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.cookieHeader:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L216b34.  v1:= new `java.lang.StringBuilder`;
  #L216b38.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L216b3e.  v2:= 0I;
  #L216b40.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L216b46.  v3:= temp;
  #L216b48.  if v2 >= v3 then goto L216b96;
  #L216b4c.  if v2 <= 0 then goto L216b5a;
  #L216b50.  v4:= "; " @kind object;
  #L216b54.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L216b5a.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L216b60.  v0:= temp @kind object;
  #L216b62.  v0:= (`okhttp3.Cookie`) v0 @kind object;
  #L216b66.  call temp:= `name`(v0) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @kind virtual;
  #L216b6c.  v4:= temp @kind object;
  #L216b6e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L216b74.  v4:= temp @kind object;
  #L216b76.  v5:= 61I;
  #L216b7a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L216b80.  v4:= temp @kind object;
  #L216b82.  call temp:= `value`(v0) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @kind virtual;
  #L216b88.  v5:= temp @kind object;
  #L216b8a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L216b90.  v2:= v2 + 1;
  #L216b94.  goto L216b48;
  #L216b96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L216b9c.  v4:= temp @kind object;
  #L216b9e.  return v4 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.BridgeInterceptor` v18 @kind this, `okhttp3.Interceptor$Chain` v19 @kind object @name `chain`) @signature `Lokhttp3/internal/http/BridgeInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L216bb0.  call temp:= `request`(v19) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L216bb6.  v13:= temp @kind object;
  #L216bb8.  call temp:= `newBuilder`(v13) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L216bbe.  v8:= temp @kind object;
  #L216bc0.  call temp:= `body`(v13) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L216bc6.  v2:= temp @kind object;
  #L216bc8.  if v2 == 0 then goto L216c1a;
  #L216bcc.  call temp:= `contentType`(v2) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L216bd2.  v3:= temp @kind object;
  #L216bd4.  if v3 == 0 then goto L216bea;
  #L216bd8.  v14:= "Content-Type" @kind object;
  #L216bdc.  call temp:= `toString`(v3) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L216be2.  v15:= temp @kind object;
  #L216be4.  call temp:= `header`(v8, v14, v15) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216bea.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L216bf0.  v4:= temp @kind wide;
  #L216bf2.  v14:= -1L;
  #L216bf6.  v14:= lcmp(v4, v14);
  #L216bfa.  if v14 == 0 then goto L216de8;
  #L216bfe.  v14:= "Content-Length" @kind object;
  #L216c02.  call temp:= `toString`(v4) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L216c08.  v15:= temp @kind object;
  #L216c0a.  call temp:= `header`(v8, v14, v15) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216c10.  v14:= "Transfer-Encoding" @kind object;
  #L216c14.  call temp:= `removeHeader`(v8, v14) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216c1a.  v14:= "Host" @kind object;
  #L216c1e.  call temp:= `header`(v13, v14) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L216c24.  v14:= temp @kind object;
  #L216c26.  if v14 != 0 then goto L216c48;
  #L216c2a.  v14:= "Host" @kind object;
  #L216c2e.  call temp:= `url`(v13) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L216c34.  v15:= temp @kind object;
  #L216c36.  v16:= 0I;
  #L216c3a.  call temp:= `hostHeader`(v15, v16) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L216c40.  v15:= temp @kind object;
  #L216c42.  call temp:= `header`(v8, v14, v15) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216c48.  v14:= "Connection" @kind object;
  #L216c4c.  call temp:= `header`(v13, v14) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L216c52.  v14:= temp @kind object;
  #L216c54.  if v14 != 0 then goto L216c66;
  #L216c58.  v14:= "Connection" @kind object;
  #L216c5c.  v15:= "Keep-Alive" @kind object;
  #L216c60.  call temp:= `header`(v8, v14, v15) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216c66.  v12:= 0I;
  #L216c68.  v14:= "Accept-Encoding" @kind object;
  #L216c6c.  call temp:= `header`(v13, v14) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L216c72.  v14:= temp @kind object;
  #L216c74.  if v14 != 0 then goto L216c98;
  #L216c78.  v14:= "Range" @kind object;
  #L216c7c.  call temp:= `header`(v13, v14) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L216c82.  v14:= temp @kind object;
  #L216c84.  if v14 != 0 then goto L216c98;
  #L216c88.  v12:= 1I;
  #L216c8a.  v14:= "Accept-Encoding" @kind object;
  #L216c8e.  v15:= "gzip" @kind object;
  #L216c92.  call temp:= `header`(v8, v14, v15) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216c98.  v0:= v18 @kind object;
  #L216c9c.  v14:= v0.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L216ca0.  call temp:= `url`(v13) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L216ca6.  v15:= temp @kind object;
  #L216ca8.  call temp:= `loadForRequest`(v14, v15) @signature `Lokhttp3/CookieJar;.loadForRequest:(Lokhttp3/HttpUrl;)Ljava/util/List;` @kind interface;
  #L216cae.  v6:= temp @kind object;
  #L216cb0.  call temp:= `isEmpty`(v6) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L216cb6.  v14:= temp;
  #L216cb8.  if v14 != 0 then goto L216cd2;
  #L216cbc.  v14:= "Cookie" @kind object;
  #L216cc0.  v0:= v18 @kind object;
  #L216cc4.  call temp:= `cookieHeader`(v0, v6) @signature `Lokhttp3/internal/http/BridgeInterceptor;.cookieHeader:(Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L216cca.  v15:= temp @kind object;
  #L216ccc.  call temp:= `header`(v8, v14, v15) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216cd2.  v14:= "User-Agent" @kind object;
  #L216cd6.  call temp:= `header`(v13, v14) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L216cdc.  v14:= temp @kind object;
  #L216cde.  if v14 != 0 then goto L216cf4;
  #L216ce2.  v14:= "User-Agent" @kind object;
  #L216ce6.  call temp:= `userAgent`() @signature `Lokhttp3/internal/Version;.userAgent:()Ljava/lang/String;` @kind static;
  #L216cec.  v15:= temp @kind object;
  #L216cee.  call temp:= `header`(v8, v14, v15) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216cf4.  call temp:= `build`(v8) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L216cfa.  v14:= temp @kind object;
  #L216cfc.  v0:= v19 @kind object;
  #L216d00.  call temp:= `proceed`(v0, v14) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L216d06.  v7:= temp @kind object;
  #L216d08.  v0:= v18 @kind object;
  #L216d0c.  v14:= v0.`okhttp3.internal.http.BridgeInterceptor.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L216d10.  call temp:= `url`(v13) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L216d16.  v15:= temp @kind object;
  #L216d18.  call temp:= `headers`(v7) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L216d1e.  v16:= temp @kind object;
  #L216d20.  call `receiveHeaders`(v14, v15, v16) @signature `Lokhttp3/internal/http/HttpHeaders;.receiveHeaders:(Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V` @kind static;
  #L216d26.  call temp:= `newBuilder`(v7) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L216d2c.  v14:= temp @kind object;
  #L216d2e.  call temp:= `request`(v14, v13) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216d34.  v10:= temp @kind object;
  #L216d36.  if v12 == 0 then goto L216dde;
  #L216d3a.  v14:= "gzip" @kind object;
  #L216d3e.  v15:= "Content-Encoding" @kind object;
  #L216d42.  call temp:= `header`(v7, v15) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L216d48.  v15:= temp @kind object;
  #L216d4a.  call temp:= `equalsIgnoreCase`(v14, v15) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L216d50.  v14:= temp;
  #L216d52.  if v14 == 0 then goto L216dde;
  #L216d56.  call temp:= `hasBody`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L216d5c.  v14:= temp;
  #L216d5e.  if v14 == 0 then goto L216dde;
  #L216d62.  v9:= new `okio.GzipSource`;
  #L216d66.  call temp:= `body`(v7) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216d6c.  v14:= temp @kind object;
  #L216d6e.  call temp:= `source`(v14) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L216d74.  v14:= temp @kind object;
  #L216d76.  call `<init>`(v9, v14) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L216d7c.  call temp:= `headers`(v7) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L216d82.  v14:= temp @kind object;
  #L216d84.  call temp:= `newBuilder`(v14) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L216d8a.  v14:= temp @kind object;
  #L216d8c.  v15:= "Content-Encoding" @kind object;
  #L216d90.  call temp:= `removeAll`(v14, v15) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L216d96.  v14:= temp @kind object;
  #L216d98.  v15:= "Content-Length" @kind object;
  #L216d9c.  call temp:= `removeAll`(v14, v15) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L216da2.  v14:= temp @kind object;
  #L216da4.  call temp:= `build`(v14) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L216daa.  v11:= temp @kind object;
  #L216dac.  call temp:= `headers`(v10, v11) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216db2.  v14:= "Content-Type" @kind object;
  #L216db6.  call temp:= `header`(v7, v14) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L216dbc.  v3:= temp @kind object;
  #L216dbe.  v14:= new `okhttp3.internal.http.RealResponseBody`;
  #L216dc2.  v16:= -1L;
  #L216dc6.  call temp:= `buffer`(v9) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L216dcc.  v15:= temp @kind object;
  #L216dce.  v0:= v16 @kind wide;
  #L216dd2.  call `<init>`(v14, v3, v0, v15) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L216dd8.  call temp:= `body`(v10, v14) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216dde.  call temp:= `build`(v10) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L216de4.  v14:= temp @kind object;
  #L216de6.  return v14 @kind object;
  #L216de8.  v14:= "Transfer-Encoding" @kind object;
  #L216dec.  v15:= "chunked" @kind object;
  #L216df0.  call temp:= `header`(v8, v14, v15) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216df6.  v14:= "Content-Length" @kind object;
  #L216dfa.  call temp:= `removeHeader`(v8, v14) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L216e00.  goto L216c1a;
}

record `okhttp3.internal.cache.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC {
  `int` `okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.etag` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.expires` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy$Factory.request` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy$Factory` v9 @kind this, `long` v10 @name `nowMillis`, `okhttp3.Request` v12 @kind object @name `request`, `okhttp3.Response` v13 @kind object @name `cacheResponse`) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19e97c.  v8:= -1I;
  #L19e97e.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19e984.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v8;
  #L19e988.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` := v10 @kind wide;
  #L19e98c.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` := v12 @kind object;
  #L19e990.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` := v13 @kind object;
  #L19e994.  if v13 == 0 then goto L19ea70;
  #L19e998.  call temp:= `sentRequestAtMillis`(v13) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L19e99e.  v6:= temp @kind wide;
  #L19e9a0.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` := v6 @kind wide;
  #L19e9a4.  call temp:= `receivedResponseAtMillis`(v13) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L19e9aa.  v6:= temp @kind wide;
  #L19e9ac.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` := v6 @kind wide;
  #L19e9b0.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L19e9b6.  v1:= temp @kind object;
  #L19e9b8.  v2:= 0I;
  #L19e9ba.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19e9c0.  v3:= temp;
  #L19e9c2.  if v2 >= v3 then goto L19ea70;
  #L19e9c6.  call temp:= `name`(v1, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19e9cc.  v0:= temp @kind object;
  #L19e9ce.  call temp:= `value`(v1, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19e9d4.  v4:= temp @kind object;
  #L19e9d6.  v5:= "Date" @kind object;
  #L19e9da.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19e9e0.  v5:= temp;
  #L19e9e2.  if v5 == 0 then goto L19e9fc;
  #L19e9e6.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L19e9ec.  v5:= temp @kind object;
  #L19e9ee.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` := v5 @kind object;
  #L19e9f2.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` := v4 @kind object;
  #L19e9f6.  v2:= v2 + 1;
  #L19e9fa.  goto L19e9c2;
  #L19e9fc.  v5:= "Expires" @kind object;
  #L19ea00.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19ea06.  v5:= temp;
  #L19ea08.  if v5 == 0 then goto L19ea1a;
  #L19ea0c.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L19ea12.  v5:= temp @kind object;
  #L19ea14.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` := v5 @kind object;
  #L19ea18.  goto L19e9f6;
  #L19ea1a.  v5:= "Last-Modified" @kind object;
  #L19ea1e.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19ea24.  v5:= temp;
  #L19ea26.  if v5 == 0 then goto L19ea3c;
  #L19ea2a.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L19ea30.  v5:= temp @kind object;
  #L19ea32.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` := v5 @kind object;
  #L19ea36.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` := v4 @kind object;
  #L19ea3a.  goto L19e9f6;
  #L19ea3c.  v5:= "ETag" @kind object;
  #L19ea40.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19ea46.  v5:= temp;
  #L19ea48.  if v5 == 0 then goto L19ea52;
  #L19ea4c.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` := v4 @kind object;
  #L19ea50.  goto L19e9f6;
  #L19ea52.  v5:= "Age" @kind object;
  #L19ea56.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19ea5c.  v5:= temp;
  #L19ea5e.  if v5 == 0 then goto L19e9f6;
  #L19ea62.  call temp:= `parseSeconds`(v4, v8) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L19ea68.  v5:= temp;
  #L19ea6a.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v5;
  #L19ea6e.  goto L19e9f6;
  #L19ea70.  return @kind void;
}
procedure `long` `cacheResponseAge`(`okhttp3.internal.cache.CacheStrategy$Factory` v12 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19ea84.  v0:= 0L;
  #L19ea88.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19ea8c.  if v8 == 0 then goto L19eaaa;
  #L19ea90.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L19ea94.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19ea98.  call temp:= `getTime`(v10) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19ea9e.  v10:= temp @kind wide;
  #L19eaa0.  v8:= v8 - v10 @kind long;
  #L19eaa2.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L19eaa8.  v0:= temp @kind wide;
  #L19eaaa.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L19eaae.  v9:= -1I;
  #L19eab0.  if v8 == v9 then goto L19eaee;
  #L19eab4.  v8:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19eab8.  v9:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L19eabc.  v10:= (`long`) v9 @kind i2l;
  #L19eabe.  call temp:= `toMillis`(v8, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19eac4.  v8:= temp @kind wide;
  #L19eac6.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L19eacc.  v2:= temp @kind wide;
  #L19eace.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L19ead2.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L19ead6.  v6:= v8 - v10 @kind long;
  #L19eada.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` @kind wide;
  #L19eade.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L19eae2.  v4:= v8 - v10 @kind long;
  #L19eae6.  v8:= v2 + v6 @kind long;
  #L19eaea.  v8:= v8 + v4 @kind long;
  #L19eaec.  return v8 @kind wide;
  #L19eaee.  v2:= v0 @kind wide;
  #L19eaf0.  goto L19eace;
}
procedure `long` `computeFreshnessLifetime`(`okhttp3.internal.cache.CacheStrategy$Factory` v10 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19eb04.  v6:= 0L;
  #L19eb08.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19eb0c.  call temp:= `cacheControl`(v3) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19eb12.  v2:= temp @kind object;
  #L19eb14.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19eb1a.  v3:= temp;
  #L19eb1c.  v8:= -1I;
  #L19eb1e.  if v3 == v8 then goto L19eb3a;
  #L19eb22.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19eb26.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19eb2c.  v6:= temp;
  #L19eb2e.  v6:= (`long`) v6 @kind i2l;
  #L19eb30.  call temp:= `toMillis`(v3, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19eb36.  v6:= temp @kind wide;
  #L19eb38.  return v6 @kind wide;
  #L19eb3a.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L19eb3e.  if v3 == 0 then goto L19eb7c;
  #L19eb42.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19eb46.  if v3 == 0 then goto L19eb72;
  #L19eb4a.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19eb4e.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19eb54.  v4:= temp @kind wide;
  #L19eb56.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L19eb5a.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19eb60.  v8:= temp @kind wide;
  #L19eb62.  v0:= v8 - v4 @kind long;
  #L19eb66.  v3:= lcmp(v0, v6);
  #L19eb6a.  if v3 <= 0 then goto L19eb78;
  #L19eb6e.  v6:= v0 @kind wide;
  #L19eb70.  goto L19eb38;
  #L19eb72.  v4:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L19eb76.  goto L19eb56;
  #L19eb78.  v0:= v6 @kind wide;
  #L19eb7a.  goto L19eb6e;
  #L19eb7c.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L19eb80.  if v3 == 0 then goto L19eb38;
  #L19eb84.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19eb88.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L19eb8e.  v3:= temp @kind object;
  #L19eb90.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19eb96.  v3:= temp @kind object;
  #L19eb98.  call temp:= `query`(v3) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L19eb9e.  v3:= temp @kind object;
  #L19eba0.  if v3 != 0 then goto L19eb38;
  #L19eba4.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19eba8.  if v3 == 0 then goto L19ebda;
  #L19ebac.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19ebb0.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19ebb6.  v4:= temp @kind wide;
  #L19ebb8.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L19ebbc.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19ebc2.  v8:= temp @kind wide;
  #L19ebc4.  v0:= v4 - v8 @kind long;
  #L19ebc8.  v3:= lcmp(v0, v6);
  #L19ebcc.  if v3 <= 0 then goto L19eb38;
  #L19ebd0.  v6:= 10L;
  #L19ebd4.  v6:= v0 / v6 @kind long;
  #L19ebd8.  goto L19eb38;
  #L19ebda.  v4:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L19ebde.  goto L19ebb8;
}
procedure `okhttp3.internal.cache.CacheStrategy` `getCandidate`(`okhttp3.internal.cache.CacheStrategy$Factory` v24 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L19ebf0.  v0:= v24 @kind object;
  #L19ebf4.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19ebf8.  v19:= v0 @kind object;
  #L19ebfc.  if v19 != 0 then goto L19ec1c;
  #L19ec00.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19ec04.  v0:= v24 @kind object;
  #L19ec08.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ec0c.  v20:= v0 @kind object;
  #L19ec10.  v21:= 0I;
  #L19ec14.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19ec1a.  return v19 @kind object;
  #L19ec1c.  v0:= v24 @kind object;
  #L19ec20.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ec24.  v19:= v0 @kind object;
  #L19ec28.  call temp:= `isHttps`(v19) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L19ec2e.  v19:= temp;
  #L19ec30.  if v19 == 0 then goto L19ec68;
  #L19ec34.  v0:= v24 @kind object;
  #L19ec38.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19ec3c.  v19:= v0 @kind object;
  #L19ec40.  call temp:= `handshake`(v19) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L19ec46.  v19:= temp @kind object;
  #L19ec48.  if v19 != 0 then goto L19ec68;
  #L19ec4c.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19ec50.  v0:= v24 @kind object;
  #L19ec54.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ec58.  v20:= v0 @kind object;
  #L19ec5c.  v21:= 0I;
  #L19ec60.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19ec66.  goto L19ec1a;
  #L19ec68.  v0:= v24 @kind object;
  #L19ec6c.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19ec70.  v19:= v0 @kind object;
  #L19ec74.  v0:= v24 @kind object;
  #L19ec78.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ec7c.  v20:= v0 @kind object;
  #L19ec80.  call temp:= `isCacheable`(v19, v20) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L19ec86.  v19:= temp;
  #L19ec88.  if v19 != 0 then goto L19eca8;
  #L19ec8c.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19ec90.  v0:= v24 @kind object;
  #L19ec94.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ec98.  v20:= v0 @kind object;
  #L19ec9c.  v21:= 0I;
  #L19eca0.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19eca6.  goto L19ec1a;
  #L19eca8.  v0:= v24 @kind object;
  #L19ecac.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ecb0.  v19:= v0 @kind object;
  #L19ecb4.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19ecba.  v9:= temp @kind object;
  #L19ecbc.  call temp:= `noCache`(v9) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L19ecc2.  v19:= temp;
  #L19ecc4.  if v19 != 0 then goto L19ece0;
  #L19ecc8.  v0:= v24 @kind object;
  #L19eccc.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ecd0.  v19:= v0 @kind object;
  #L19ecd4.  call temp:= `hasConditions`(v19) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @kind static;
  #L19ecda.  v19:= temp;
  #L19ecdc.  if v19 == 0 then goto L19ecfc;
  #L19ece0.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19ece4.  v0:= v24 @kind object;
  #L19ece8.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ecec.  v20:= v0 @kind object;
  #L19ecf0.  v21:= 0I;
  #L19ecf4.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19ecfa.  goto L19ec1a;
  #L19ecfc.  v0:= v24 @kind object;
  #L19ed00.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19ed04.  v19:= v0 @kind object;
  #L19ed08.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19ed0e.  v18:= temp @kind object;
  #L19ed10.  call temp:= `immutable`(v18) @signature `Lokhttp3/CacheControl;.immutable:()Z` @kind virtual;
  #L19ed16.  v19:= temp;
  #L19ed18.  if v19 == 0 then goto L19ed3a;
  #L19ed1c.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19ed20.  v20:= 0I;
  #L19ed24.  v0:= v24 @kind object;
  #L19ed28.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19ed2c.  v21:= v0 @kind object;
  #L19ed30.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19ed36.  goto L19ec1a;
  #L19ed3a.  call temp:= `cacheResponseAge`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @kind direct;
  #L19ed40.  v2:= temp @kind wide;
  #L19ed42.  call temp:= `computeFreshnessLifetime`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @kind direct;
  #L19ed48.  v10:= temp @kind wide;
  #L19ed4a.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19ed50.  v19:= temp;
  #L19ed52.  v20:= -1I;
  #L19ed56.  v0:= v19;
  #L19ed5a.  v1:= v20;
  #L19ed5e.  if v0 == v1 then goto L19ed8c;
  #L19ed62.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19ed66.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19ed6c.  v20:= temp;
  #L19ed6e.  v0:= v20;
  #L19ed72.  v0:= (`long`) v0 @kind i2l;
  #L19ed74.  v20:= v0 @kind wide;
  #L19ed78.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19ed7e.  v20:= temp @kind wide;
  #L19ed80.  v0:= v20 @kind wide;
  #L19ed84.  call temp:= `min`(v10, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L19ed8a.  v10:= temp @kind wide;
  #L19ed8c.  v14:= 0L;
  #L19ed90.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L19ed96.  v19:= temp;
  #L19ed98.  v20:= -1I;
  #L19ed9c.  v0:= v19;
  #L19eda0.  v1:= v20;
  #L19eda4.  if v0 == v1 then goto L19edc6;
  #L19eda8.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19edac.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L19edb2.  v20:= temp;
  #L19edb4.  v0:= v20;
  #L19edb8.  v0:= (`long`) v0 @kind i2l;
  #L19edba.  v20:= v0 @kind wide;
  #L19edbe.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19edc4.  v14:= temp @kind wide;
  #L19edc6.  v12:= 0L;
  #L19edca.  call temp:= `mustRevalidate`(v18) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L19edd0.  v19:= temp;
  #L19edd2.  if v19 != 0 then goto L19ee0c;
  #L19edd6.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L19eddc.  v19:= temp;
  #L19edde.  v20:= -1I;
  #L19ede2.  v0:= v19;
  #L19ede6.  v1:= v20;
  #L19edea.  if v0 == v1 then goto L19ee0c;
  #L19edee.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19edf2.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L19edf8.  v20:= temp;
  #L19edfa.  v0:= v20;
  #L19edfe.  v0:= (`long`) v0 @kind i2l;
  #L19ee00.  v20:= v0 @kind wide;
  #L19ee04.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19ee0a.  v12:= temp @kind wide;
  #L19ee0c.  call temp:= `noCache`(v18) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L19ee12.  v19:= temp;
  #L19ee14.  if v19 != 0 then goto L19eea8;
  #L19ee18.  v20:= v2 + v14 @kind long;
  #L19ee1c.  v22:= v10 + v12 @kind long;
  #L19ee20.  v19:= lcmp(v20, v22);
  #L19ee24.  if v19 >= 0 then goto L19eea8;
  #L19ee28.  v0:= v24 @kind object;
  #L19ee2c.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19ee30.  v19:= v0 @kind object;
  #L19ee34.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L19ee3a.  v4:= temp @kind object;
  #L19ee3c.  v20:= v2 + v14 @kind long;
  #L19ee40.  v19:= lcmp(v20, v10);
  #L19ee44.  if v19 < 0 then goto L19ee5e;
  #L19ee48.  v19:= "Warning" @kind object;
  #L19ee4c.  v20:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L19ee50.  v0:= v19 @kind object;
  #L19ee54.  v1:= v20 @kind object;
  #L19ee58.  call temp:= `addHeader`(v4, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L19ee5e.  v16:= 86400000L;
  #L19ee64.  v19:= lcmp(v2, v16);
  #L19ee68.  if v19 <= 0 then goto L19ee8e;
  #L19ee6c.  call temp:= `isFreshnessLifetimeHeuristic`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @kind direct;
  #L19ee72.  v19:= temp;
  #L19ee74.  if v19 == 0 then goto L19ee8e;
  #L19ee78.  v19:= "Warning" @kind object;
  #L19ee7c.  v20:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L19ee80.  v0:= v19 @kind object;
  #L19ee84.  v1:= v20 @kind object;
  #L19ee88.  call temp:= `addHeader`(v4, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L19ee8e.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19ee92.  v20:= 0I;
  #L19ee96.  call temp:= `build`(v4) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L19ee9c.  v21:= temp @kind object;
  #L19ee9e.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19eea4.  goto L19ec1a;
  #L19eea8.  v0:= v24 @kind object;
  #L19eeac.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L19eeb0.  v19:= v0 @kind object;
  #L19eeb4.  if v19 == 0 then goto L19ef3c;
  #L19eeb8.  v5:= "If-None-Match" @kind object;
  #L19eebc.  v0:= v24 @kind object;
  #L19eec0.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L19eec4.  v0:= v24 @kind object;
  #L19eec8.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19eecc.  v19:= v0 @kind object;
  #L19eed0.  call temp:= `headers`(v19) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L19eed6.  v19:= temp @kind object;
  #L19eed8.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L19eede.  v8:= temp @kind object;
  #L19eee0.  v19:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L19eee4.  v0:= v19 @kind object;
  #L19eee8.  call `addLenient`(v0, v8, v5, v6) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L19eeee.  v0:= v24 @kind object;
  #L19eef2.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19eef6.  v19:= v0 @kind object;
  #L19eefa.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L19ef00.  v19:= temp @kind object;
  #L19ef02.  call temp:= `build`(v8) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19ef08.  v20:= temp @kind object;
  #L19ef0a.  call temp:= `headers`(v19, v20) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19ef10.  v19:= temp @kind object;
  #L19ef12.  call temp:= `build`(v19) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L19ef18.  v7:= temp @kind object;
  #L19ef1a.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19ef1e.  v0:= v24 @kind object;
  #L19ef22.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19ef26.  v20:= v0 @kind object;
  #L19ef2a.  v0:= v19 @kind object;
  #L19ef2e.  v1:= v20 @kind object;
  #L19ef32.  call `<init>`(v0, v7, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19ef38.  goto L19ec1a;
  #L19ef3c.  v0:= v24 @kind object;
  #L19ef40.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L19ef44.  v19:= v0 @kind object;
  #L19ef48.  if v19 == 0 then goto L19ef5a;
  #L19ef4c.  v5:= "If-Modified-Since" @kind object;
  #L19ef50.  v0:= v24 @kind object;
  #L19ef54.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` @kind object;
  #L19ef58.  goto L19eec4;
  #L19ef5a.  v0:= v24 @kind object;
  #L19ef5e.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19ef62.  v19:= v0 @kind object;
  #L19ef66.  if v19 == 0 then goto L19ef78;
  #L19ef6a.  v5:= "If-Modified-Since" @kind object;
  #L19ef6e.  v0:= v24 @kind object;
  #L19ef72.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` @kind object;
  #L19ef76.  goto L19eec4;
  #L19ef78.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19ef7c.  v0:= v24 @kind object;
  #L19ef80.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19ef84.  v20:= v0 @kind object;
  #L19ef88.  v21:= 0I;
  #L19ef8c.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19ef92.  goto L19ec1a;
}
procedure `boolean` `hasConditions`(`okhttp3.Request` v1 @kind object @name `request`) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L19efa8.  v0:= "If-Modified-Since" @kind object;
  #L19efac.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19efb2.  v0:= temp @kind object;
  #L19efb4.  if v0 != 0 then goto L19efc8;
  #L19efb8.  v0:= "If-None-Match" @kind object;
  #L19efbc.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19efc2.  v0:= temp @kind object;
  #L19efc4.  if v0 == 0 then goto L19efcc;
  #L19efc8.  v0:= 1I;
  #L19efca.  return v0;
  #L19efcc.  v0:= 0I;
  #L19efce.  goto L19efca;
}
procedure `boolean` `isFreshnessLifetimeHeuristic`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L19efe0.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19efe4.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19efea.  v0:= temp @kind object;
  #L19efec.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19eff2.  v0:= temp;
  #L19eff4.  v1:= -1I;
  #L19eff6.  if v0 != v1 then goto L19f006;
  #L19effa.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L19effe.  if v0 != 0 then goto L19f006;
  #L19f002.  v0:= 1I;
  #L19f004.  return v0;
  #L19f006.  v0:= 0I;
  #L19f008.  goto L19f004;
}
procedure `okhttp3.internal.cache.CacheStrategy` `get`(`okhttp3.internal.cache.CacheStrategy$Factory` v3 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19f01c.  v2:= 0I;
  #L19f01e.  call temp:= `getCandidate`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @kind direct;
  #L19f024.  v0:= temp @kind object;
  #L19f026.  v1:= v0.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L19f02a.  if v1 == 0 then goto L19f050;
  #L19f02e.  v1:= v3.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f032.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19f038.  v1:= temp @kind object;
  #L19f03a.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L19f040.  v1:= temp;
  #L19f042.  if v1 == 0 then goto L19f050;
  #L19f046.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f04a.  call `<init>`(v0, v2, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f050.  return v0 @kind object;
}

record `okhttp3.internal.cache.DiskLruCache$Entry` @kind class @AccessFlag FINAL {
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @AccessFlag ;
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.DiskLruCache$Entry.key` @AccessFlag FINAL;
  `long`[] `okhttp3.internal.cache.DiskLruCache$Entry.lengths` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.cache.DiskLruCache$Entry.readable` @AccessFlag ;
  `long` `okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Entry.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache` v8 @kind object, `java.lang.String` v9 @kind object @name `key`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19f74c.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v8 @kind object;
  #L19f750.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19f756.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` := v9 @kind object;
  #L19f75a.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19f75e.  v3:= new `long`[v3];
  #L19f762.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] := v3 @kind object;
  #L19f766.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19f76a.  v3:= new `java.io.File`[v3];
  #L19f76e.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] := v3 @kind object;
  #L19f772.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19f776.  v3:= new `java.io.File`[v3];
  #L19f77a.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] := v3 @kind object;
  #L19f77e.  v3:= new `java.lang.StringBuilder`;
  #L19f782.  call `<init>`(v3, v9) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f788.  v4:= 46I;
  #L19f78c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f792.  v0:= temp @kind object;
  #L19f794.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L19f79a.  v2:= temp;
  #L19f79c.  v1:= 0I;
  #L19f79e.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19f7a2.  if v1 >= v3 then goto L19f7fe;
  #L19f7a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f7ac.  v3:= v7.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L19f7b0.  v4:= new `java.io.File`;
  #L19f7b4.  v5:= v8.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L19f7b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f7be.  v6:= temp @kind object;
  #L19f7c0.  call `<init>`(v4, v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L19f7c6.  v3[v1]:= v4 @kind object;
  #L19f7ca.  v3:= ".tmp" @kind object;
  #L19f7ce.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f7d4.  v3:= v7.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L19f7d8.  v4:= new `java.io.File`;
  #L19f7dc.  v5:= v8.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L19f7e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f7e6.  v6:= temp @kind object;
  #L19f7e8.  call `<init>`(v4, v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L19f7ee.  v3[v1]:= v4 @kind object;
  #L19f7f2.  call `setLength`(v0, v2) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L19f7f8.  v1:= v1 + 1;
  #L19f7fc.  goto L19f79e;
  #L19f7fe.  return @kind void;
}
procedure `java.io.IOException` `invalidLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind this, `java.lang.String`[] v4 @kind object @name `strings`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L19f810.  v0:= new `java.io.IOException`;
  #L19f814.  v1:= new `java.lang.StringBuilder`;
  #L19f818.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f81e.  v2:= "unexpected journal line: " @kind object;
  #L19f822.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f828.  v1:= temp @kind object;
  #L19f82a.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19f830.  v2:= temp @kind object;
  #L19f832.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f838.  v1:= temp @kind object;
  #L19f83a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f840.  v1:= temp @kind object;
  #L19f842.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f848.  throw v0;
}
procedure `void` `setLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `java.lang.String`[] v7 @kind object @name `strings`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.setLengths:([Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19f85c.  v2:= length @variable v7;
  #L19f85e.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f862.  v3:= v3.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19f866.  if v2 == v3 then goto L19f874;
  #L19f86a.  call temp:= `invalidLengths`(v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L19f870.  v2:= temp @kind object;
  #L19f872.  throw v2;
  #L19f874.  v1:= 0I;
  #Try_start0.  
  #L19f876.  v2:= length @variable v7;
  #L19f878.  if v1 >= v2 then goto L19f8a2;
  #L19f87c.  v2:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L19f880.  v3:= v7[v1] @kind object;
  #L19f884.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L19f88a.  v4:= temp @kind wide;
  #L19f88c.  v2[v1]:= v4 @kind wide;
  #Try_end0.  
  #L19f890.  v1:= v1 + 1;
  #L19f894.  goto L19f876;
  #L19f896.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L19f898.  call temp:= `invalidLengths`(v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L19f89e.  v2:= temp @kind object;
  #L19f8a0.  throw v2;
  #L19f8a2.  return @kind void;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L19f896;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `snapshot`(`okhttp3.internal.cache.DiskLruCache$Entry` v9 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19f8c4.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f8c8.  call temp:= `holdsLock`(v1) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L19f8ce.  v1:= temp;
  #L19f8d0.  if v1 != 0 then goto L19f8e0;
  #L19f8d4.  v1:= new `java.lang.AssertionError`;
  #L19f8d8.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L19f8de.  throw v1;
  #L19f8e0.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f8e4.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19f8e8.  v6:= new `okio.Source`[v1];
  #L19f8ec.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L19f8f0.  call temp:= `clone`(v1) @signature `[J.clone:()Ljava/lang/Object;` @kind virtual;
  #L19f8f6.  v7:= temp @kind object;
  #L19f8f8.  v7:= (`long`[]) v7 @kind object;
  #L19f8fc.  v8:= 0I;
  #Try_start0.  
  #L19f8fe.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f902.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19f906.  if v8 >= v1 then goto L19f92c;
  #L19f90a.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f90e.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L19f912.  v2:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L19f916.  v2:= v2[v8] @kind object;
  #L19f91a.  call temp:= `source`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L19f920.  v1:= temp @kind object;
  #L19f922.  v6[v8]:= v1 @kind object;
  #L19f926.  v8:= v8 + 1;
  #L19f92a.  goto L19f8fe;
  #L19f92c.  v1:= new `okhttp3.internal.cache.DiskLruCache$Snapshot`;
  #L19f930.  v2:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f934.  v3:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` @kind object;
  #L19f938.  v4:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @type ^`long` @kind wide;
  #L19f93c.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;J[Lokio/Source;[J)V` @kind direct;
  #Try_end0.  
  #L19f942.  return v1 @kind object;
  #L19f944.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L19f946.  v8:= 0I;
  #L19f948.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f94c.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19f950.  if v8 >= v1 then goto L19f96c;
  #L19f954.  v1:= v6[v8] @kind object;
  #L19f958.  if v1 == 0 then goto L19f96c;
  #L19f95c.  v1:= v6[v8] @kind object;
  #L19f960.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19f966.  v8:= v8 + 1;
  #L19f96a.  goto L19f948;
  #Try_start1.  
  #L19f96c.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f970.  call temp:= `removeEntry`(v1, v9) @signature `Lokhttp3/internal/cache/DiskLruCache;.removeEntry:(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z` @kind virtual;
  #Try_end1.  
  #L19f976.  v1:= 0I;
  #L19f978.  goto L19f942;
  #L19f97a.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L19f97c.  goto L19f976;
  catch `java.io.FileNotFoundException` @[Try_start0..Try_end0] goto L19f944;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L19f97a;
}
procedure `void` `writeLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `okio.BufferedSink` v7 @kind object @name `writer`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.writeLengths:(Lokio/BufferedSink;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19f9ac.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L19f9b0.  v4:= length @variable v3;
  #L19f9b2.  v2:= 0I;
  #L19f9b4.  if v2 >= v4 then goto L19f9d4;
  #L19f9b8.  v0:= v3[v2] @kind wide;
  #L19f9bc.  v5:= 32I;
  #L19f9c0.  call temp:= `writeByte`(v7, v5) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19f9c6.  v5:= temp @kind object;
  #L19f9c8.  call temp:= `writeDecimalLong`(v5, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L19f9ce.  v2:= v2 + 1;
  #L19f9d2.  goto L19f9b4;
  #L19f9d4.  return @kind void;
}

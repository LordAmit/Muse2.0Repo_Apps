record `okhttp3.internal.cache.DiskLruCache$3` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `okhttp3.internal.cache.DiskLruCache$3.delegate` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$3` v2 @kind this, `okhttp3.internal.cache.DiskLruCache` v3 @kind object @name `this$0`) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.<init>:(Lokhttp3/internal/cache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19f288.  v2.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v3 @kind object;
  #L19f28c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19f292.  v0:= new `java.util.ArrayList`;
  #L19f296.  v1:= v2.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f29a.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.lruEntries` @type ^`java.util.LinkedHashMap` @kind object;
  #L19f29e.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L19f2a4.  v1:= temp @kind object;
  #L19f2a6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L19f2ac.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L19f2b2.  v0:= temp @kind object;
  #L19f2b4.  v2.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` := v0 @kind object;
  #L19f2b8.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.cache.DiskLruCache$3` v6 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19f2cc.  v2:= 1I;
  #L19f2ce.  v3:= 0I;
  #L19f2d0.  v4:= v6.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L19f2d4.  if v4 == 0 then goto L19f2da;
  #L19f2d8.  return v2;
  #L19f2da.  v4:= v6.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f2de.  @monitorenter v4
  #Try_start0.  
  #L19f2e0.  v5:= v6.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f2e4.  v5:= v5.`okhttp3.internal.cache.DiskLruCache.closed` @type ^`boolean` @kind boolean;
  #L19f2e8.  if v5 == 0 then goto L19f2f2;
  #L19f2ec.  @monitorexit v4
  #L19f2ee.  v2:= v3;
  #L19f2f0.  goto L19f2d8;
  #L19f2f2.  v5:= v6.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L19f2f6.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L19f2fc.  v5:= temp;
  #L19f2fe.  if v5 == 0 then goto L19f32c;
  #L19f302.  v5:= v6.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L19f306.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L19f30c.  v0:= temp @kind object;
  #L19f30e.  v0:= (`okhttp3.internal.cache.DiskLruCache$Entry`) v0 @kind object;
  #L19f312.  call temp:= `snapshot`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L19f318.  v1:= temp @kind object;
  #L19f31a.  if v1 == 0 then goto L19f2f2;
  #L19f31e.  v6.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L19f322.  @monitorexit v4
  #L19f324.  goto L19f2d8;
  #L19f326.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19f328.  @monitorexit v4
  #Try_end0.  
  #L19f32a.  throw v2;
  #Try_start1.  
  #L19f32c.  @monitorexit v4
  #Try_end1.  
  #L19f32e.  v2:= v3;
  #L19f330.  goto L19f2d8;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19f326;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L19f326;
}
procedure `java.lang.Object` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L19f358.  call temp:= `next`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L19f35e.  v0:= temp @kind object;
  #L19f360.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19f374.  call temp:= `hasNext`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @kind virtual;
  #L19f37a.  v0:= temp;
  #L19f37c.  if v0 != 0 then goto L19f38c;
  #L19f380.  v0:= new `java.util.NoSuchElementException`;
  #L19f384.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L19f38a.  throw v0;
  #L19f38c.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L19f390.  v1.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L19f394.  v0:= 0I;
  #L19f396.  v1.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L19f39a.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L19f39e.  return v0 @kind object;
}
procedure `void` `remove`(`okhttp3.internal.cache.DiskLruCache$3` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19f3b0.  v2:= 0I;
  #L19f3b2.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L19f3b6.  if v0 != 0 then goto L19f3ca;
  #L19f3ba.  v0:= new `java.lang.IllegalStateException`;
  #L19f3be.  v1:= "remove() before next()" @kind object;
  #L19f3c2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f3c8.  throw v0;
  #Try_start0.  
  #L19f3ca.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19f3ce.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L19f3d2.  call temp:= `access$000`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.access$000:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Ljava/lang/String;` @kind static;
  #L19f3d8.  v1:= temp @kind object;
  #L19f3da.  call temp:= `remove`(v0, v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #Try_end0.  
  #L19f3e0.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L19f3e4.  return @kind void;
  #L19f3e6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L19f3e8.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L19f3ec.  goto L19f3e4;
  #L19f3ee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19f3f0.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L19f3f4.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L19f3e6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19f3ee;
}

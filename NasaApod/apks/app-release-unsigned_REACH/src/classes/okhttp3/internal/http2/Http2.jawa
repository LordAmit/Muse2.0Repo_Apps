record `okhttp3.internal.http2.Http2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.BINARY` @AccessFlag STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FLAGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_ACK` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_COMPRESSED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_NONE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PADDED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PRIORITY` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.INITIAL_MAX_FRAME_SIZE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_DATA` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_GOAWAY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PING` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PRIORITY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_RST_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_SETTINGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_WINDOW_UPDATE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1a4cac.  v11:= 8I;
  #L1a4cb0.  v13:= 4I;
  #L1a4cb2.  v12:= 3I;
  #L1a4cb4.  v10:= 1I;
  #L1a4cb6.  v6:= 0I;
  #L1a4cb8.  v5:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L1a4cbc.  call temp:= `encodeUtf8`(v5) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4cc2.  v5:= temp @kind object;
  #L1a4cc4.  `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` := v5 @kind object;
  #L1a4cc8.  v5:= 10I;
  #L1a4ccc.  v5:= new `java.lang.String`[v5];
  #L1a4cd0.  v7:= "DATA" @kind object;
  #L1a4cd4.  v5[v6]:= v7 @kind object;
  #L1a4cd8.  v7:= "HEADERS" @kind object;
  #L1a4cdc.  v5[v10]:= v7 @kind object;
  #L1a4ce0.  v7:= 2I;
  #L1a4ce2.  v8:= "PRIORITY" @kind object;
  #L1a4ce6.  v5[v7]:= v8 @kind object;
  #L1a4cea.  v7:= "RST_STREAM" @kind object;
  #L1a4cee.  v5[v12]:= v7 @kind object;
  #L1a4cf2.  v7:= "SETTINGS" @kind object;
  #L1a4cf6.  v5[v13]:= v7 @kind object;
  #L1a4cfa.  v7:= 5I;
  #L1a4cfc.  v8:= "PUSH_PROMISE" @kind object;
  #L1a4d00.  v5[v7]:= v8 @kind object;
  #L1a4d04.  v7:= 6I;
  #L1a4d06.  v8:= "PING" @kind object;
  #L1a4d0a.  v5[v7]:= v8 @kind object;
  #L1a4d0e.  v7:= 7I;
  #L1a4d10.  v8:= "GOAWAY" @kind object;
  #L1a4d14.  v5[v7]:= v8 @kind object;
  #L1a4d18.  v7:= "WINDOW_UPDATE" @kind object;
  #L1a4d1c.  v5[v11]:= v7 @kind object;
  #L1a4d20.  v7:= 9I;
  #L1a4d24.  v8:= "CONTINUATION" @kind object;
  #L1a4d28.  v5[v7]:= v8 @kind object;
  #L1a4d2c.  `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a4d30.  v5:= 64I;
  #L1a4d34.  v5:= new `java.lang.String`[v5];
  #L1a4d38.  `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a4d3c.  v5:= 256I;
  #L1a4d40.  v5:= new `java.lang.String`[v5];
  #L1a4d44.  `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a4d48.  v2:= 0I;
  #L1a4d4a.  v5:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a4d4e.  v5:= length @variable v5;
  #L1a4d50.  if v2 >= v5 then goto L1a4d8e;
  #L1a4d54.  v5:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a4d58.  v7:= "%8s" @kind object;
  #L1a4d5c.  v8:= new `java.lang.Object`[v10];
  #L1a4d60.  call temp:= `toBinaryString`(v2) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L1a4d66.  v9:= temp @kind object;
  #L1a4d68.  v8[v6]:= v9 @kind object;
  #L1a4d6c.  call temp:= `format`(v7, v8) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a4d72.  v7:= temp @kind object;
  #L1a4d74.  v8:= 32I;
  #L1a4d78.  v9:= 48I;
  #L1a4d7c.  call temp:= `replace`(v7, v8, v9) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L1a4d82.  v7:= temp @kind object;
  #L1a4d84.  v5[v2]:= v7 @kind object;
  #L1a4d88.  v2:= v2 + 1;
  #L1a4d8c.  goto L1a4d4a;
  #L1a4d8e.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4d92.  v7:= "" @kind object;
  #L1a4d96.  v5[v6]:= v7 @kind object;
  #L1a4d9a.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4d9e.  v7:= "END_STREAM" @kind object;
  #L1a4da2.  v5[v10]:= v7 @kind object;
  #L1a4da6.  v4:= new `int`[v10];
  #L1a4daa.  v4[v6]:= v10;
  #L1a4dae.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4db2.  v7:= "PADDED" @kind object;
  #L1a4db6.  v5[v11]:= v7 @kind object;
  #L1a4dba.  v7:= length @variable v4;
  #L1a4dbc.  v5:= v6;
  #L1a4dbe.  if v5 >= v7 then goto L1a4e06;
  #L1a4dc2.  v3:= v4[v5];
  #L1a4dc6.  v8:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4dca.  v9:= v3 ^| 8;
  #L1a4dce.  v10:= new `java.lang.StringBuilder`;
  #L1a4dd2.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a4dd8.  v11:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4ddc.  v11:= v11[v3] @kind object;
  #L1a4de0.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4de6.  v10:= temp @kind object;
  #L1a4de8.  v11:= "|PADDED" @kind object;
  #L1a4dec.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4df2.  v10:= temp @kind object;
  #L1a4df4.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4dfa.  v10:= temp @kind object;
  #L1a4dfc.  v8[v9]:= v10 @kind object;
  #L1a4e00.  v5:= v5 + 1;
  #L1a4e04.  goto L1a4dbe;
  #L1a4e06.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4e0a.  v7:= "END_HEADERS" @kind object;
  #L1a4e0e.  v5[v13]:= v7 @kind object;
  #L1a4e12.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4e16.  v7:= 32I;
  #L1a4e1a.  v8:= "PRIORITY" @kind object;
  #L1a4e1e.  v5[v7]:= v8 @kind object;
  #L1a4e22.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4e26.  v7:= 36I;
  #L1a4e2a.  v8:= "END_HEADERS|PRIORITY" @kind object;
  #L1a4e2e.  v5[v7]:= v8 @kind object;
  #L1a4e32.  v1:= new `int`[v12];
  #L1a4e36.  goto L1a4f38;
  #L1a4e3c.  v8:= length @variable v1;
  #L1a4e3e.  v7:= v6;
  #L1a4e40.  if v7 >= v8 then goto L1a4f06;
  #L1a4e44.  v0:= v1[v7];
  #L1a4e48.  v9:= length @variable v4;
  #L1a4e4a.  v5:= v6;
  #L1a4e4c.  if v5 >= v9 then goto L1a4efe;
  #L1a4e50.  v3:= v4[v5];
  #L1a4e54.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4e58.  v11:= v3 ^| v0 @kind int;
  #L1a4e5c.  v12:= new `java.lang.StringBuilder`;
  #L1a4e60.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a4e66.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4e6a.  v13:= v13[v3] @kind object;
  #L1a4e6e.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4e74.  v12:= temp @kind object;
  #L1a4e76.  v13:= 124I;
  #L1a4e7a.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4e80.  v12:= temp @kind object;
  #L1a4e82.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4e86.  v13:= v13[v0] @kind object;
  #L1a4e8a.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4e90.  v12:= temp @kind object;
  #L1a4e92.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4e98.  v12:= temp @kind object;
  #L1a4e9a.  v10[v11]:= v12 @kind object;
  #L1a4e9e.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4ea2.  v11:= v3 ^| v0 @kind int;
  #L1a4ea6.  v11:= v11 ^| 8;
  #L1a4eaa.  v12:= new `java.lang.StringBuilder`;
  #L1a4eae.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a4eb4.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4eb8.  v13:= v13[v3] @kind object;
  #L1a4ebc.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4ec2.  v12:= temp @kind object;
  #L1a4ec4.  v13:= 124I;
  #L1a4ec8.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4ece.  v12:= temp @kind object;
  #L1a4ed0.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4ed4.  v13:= v13[v0] @kind object;
  #L1a4ed8.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4ede.  v12:= temp @kind object;
  #L1a4ee0.  v13:= "|PADDED" @kind object;
  #L1a4ee4.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4eea.  v12:= temp @kind object;
  #L1a4eec.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4ef2.  v12:= temp @kind object;
  #L1a4ef4.  v10[v11]:= v12 @kind object;
  #L1a4ef8.  v5:= v5 + 1;
  #L1a4efc.  goto L1a4e4c;
  #L1a4efe.  v5:= v7 + 1;
  #L1a4f02.  v7:= v5;
  #L1a4f04.  goto L1a4e40;
  #L1a4f06.  v2:= 0I;
  #L1a4f08.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4f0c.  v5:= length @variable v5;
  #L1a4f0e.  if v2 >= v5 then goto L1a4f34;
  #L1a4f12.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4f16.  v5:= v5[v2] @kind object;
  #L1a4f1a.  if v5 != 0 then goto L1a4f2e;
  #L1a4f1e.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4f22.  v6:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a4f26.  v6:= v6[v2] @kind object;
  #L1a4f2a.  v5[v2]:= v6 @kind object;
  #L1a4f2e.  v2:= v2 + 1;
  #L1a4f32.  goto L1a4f08;
  #L1a4f34.  return @kind void;
  #L1a4f36.  
  #L1a4f38.  v1:= (4I, 32I, 36I) @kind object;
  #L1a4f4b.  goto L1a4e3c;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a4f5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a4f62.  return @kind void;
}
procedure `java.lang.String` `formatFlags`(`byte` v3 @name `type`, `byte` v4 @name `flags`) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1a4f74.  if v4 != 0 then goto L1a4f7e;
  #L1a4f78.  v1:= "" @kind object;
  #L1a4f7c.  return v1 @kind object;
  #L1a4f7e.  goto L1a5004;
  #L1a4f84.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4f88.  v1:= length @variable v1;
  #L1a4f8a.  if v4 >= v1 then goto L1a4fd6;
  #L1a4f8e.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a4f92.  v0:= v1[v4] @kind object;
  #L1a4f96.  v1:= 5I;
  #L1a4f98.  if v3 != v1 then goto L1a4fe0;
  #L1a4f9c.  v1:= v4 ^& 4;
  #L1a4fa0.  if v1 == 0 then goto L1a4fe0;
  #L1a4fa4.  v1:= "HEADERS" @kind object;
  #L1a4fa8.  v2:= "PUSH_PROMISE" @kind object;
  #L1a4fac.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1a4fb2.  v1:= temp @kind object;
  #L1a4fb4.  goto L1a4f7c;
  #L1a4fb6.  v1:= 1I;
  #L1a4fb8.  if v4 != v1 then goto L1a4fc2;
  #L1a4fbc.  v1:= "ACK" @kind object;
  #L1a4fc0.  goto L1a4f7c;
  #L1a4fc2.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a4fc6.  v1:= v1[v4] @kind object;
  #L1a4fca.  goto L1a4f7c;
  #L1a4fcc.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a4fd0.  v1:= v1[v4] @kind object;
  #L1a4fd4.  goto L1a4f7c;
  #L1a4fd6.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a4fda.  v0:= v1[v4] @kind object;
  #L1a4fde.  goto L1a4f96;
  #L1a4fe0.  if v3 != 0 then goto L1a4ffe;
  #L1a4fe4.  v1:= v4 ^& 32;
  #L1a4fe8.  if v1 == 0 then goto L1a4ffe;
  #L1a4fec.  v1:= "PRIORITY" @kind object;
  #L1a4ff0.  v2:= "COMPRESSED" @kind object;
  #L1a4ff4.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1a4ffa.  v1:= temp @kind object;
  #L1a4ffc.  goto L1a4f7c;
  #L1a4ffe.  v1:= v0 @kind object;
  #L1a5000.  goto L1a4f7c;
  #L1a5002.  
  #L1a5004.  switch v3
                  | 2 => goto L1a4fcc
                  | 3 => goto L1a4fcc
                  | 4 => goto L1a4fb6
                  | 5 => goto L1a4f84
                  | 6 => goto L1a4fb6
                  | 7 => goto L1a4fcc
                  | 8 => goto L1a4fcc
                  | else => goto L1a4f84;
}
procedure `java.lang.String` `frameLog`(`boolean` v7 @name `inbound`, `int` v8 @name `streamId`, `int` v9 @name `length`, `byte` v10 @name `type`, `byte` v11 @name `flags`) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a5038.  v6:= 1I;
  #L1a503a.  v5:= 0I;
  #L1a503c.  v2:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L1a5040.  v2:= length @variable v2;
  #L1a5042.  if v10 >= v2 then goto L1a509c;
  #L1a5046.  v2:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L1a504a.  v1:= v2[v10] @kind object;
  #L1a504e.  call temp:= `formatFlags`(v10, v11) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @kind static;
  #L1a5054.  v0:= temp @kind object;
  #L1a5056.  v3:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L1a505a.  v2:= 5I;
  #L1a505c.  v4:= new `java.lang.Object`[v2];
  #L1a5060.  if v7 == 0 then goto L1a50ba;
  #L1a5064.  v2:= "<<" @kind object;
  #L1a5068.  v4[v5]:= v2 @kind object;
  #L1a506c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1a5072.  v2:= temp @kind object;
  #L1a5074.  v4[v6]:= v2 @kind object;
  #L1a5078.  v2:= 2I;
  #L1a507a.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1a5080.  v5:= temp @kind object;
  #L1a5082.  v4[v2]:= v5 @kind object;
  #L1a5086.  v2:= 3I;
  #L1a5088.  v4[v2]:= v1 @kind object;
  #L1a508c.  v2:= 4I;
  #L1a508e.  v4[v2]:= v0 @kind object;
  #L1a5092.  call temp:= `format`(v3, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a5098.  v2:= temp @kind object;
  #L1a509a.  return v2 @kind object;
  #L1a509c.  v2:= "0x%02x" @kind object;
  #L1a50a0.  v3:= new `java.lang.Object`[v6];
  #L1a50a4.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1a50aa.  v4:= temp @kind object;
  #L1a50ac.  v3[v5]:= v4 @kind object;
  #L1a50b0.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a50b6.  v1:= temp @kind object;
  #L1a50b8.  goto L1a504e;
  #L1a50ba.  v2:= ">>" @kind object;
  #L1a50be.  goto L1a5068;
}
procedure `java.lang.IllegalArgumentException` `illegalArgument`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/http2/Http2;.illegalArgument:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a50d0.  v0:= new `java.lang.IllegalArgumentException`;
  #L1a50d4.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a50da.  v1:= temp @kind object;
  #L1a50dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a50e2.  throw v0;
}
procedure `java.io.IOException` `ioException`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a50f4.  v0:= new `java.io.IOException`;
  #L1a50f8.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a50fe.  v1:= temp @kind object;
  #L1a5100.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a5106.  throw v0;
}

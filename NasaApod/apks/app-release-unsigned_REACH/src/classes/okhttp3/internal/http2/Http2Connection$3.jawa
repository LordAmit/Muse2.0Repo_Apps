record `okhttp3.internal.http2.Http2Connection$3` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$3.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.internal.http2.Http2Connection$3.val$requestHeaders` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$3.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$3` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object @name `this$0`, `java.lang.String` v2 @kind object @name `format`, `java.lang.Object`[] v3 @kind object @name `args`, `int` v4 , `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$3;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21917c.  v0.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L219180.  v0.`okhttp3.internal.http2.Http2Connection$3.val$streamId` @type ^`int` := v4;
  #L219184.  v0.`okhttp3.internal.http2.Http2Connection$3.val$requestHeaders` @type ^`java.util.List` := v5 @kind object;
  #L219188.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L21918e.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$3` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$3;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2191a0.  v1:= v4.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2191a4.  v1:= v1.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L2191a8.  v2:= v4.`okhttp3.internal.http2.Http2Connection$3.val$streamId` @type ^`int`;
  #L2191ac.  v3:= v4.`okhttp3.internal.http2.Http2Connection$3.val$requestHeaders` @type ^`java.util.List` @kind object;
  #L2191b0.  call temp:= `onRequest`(v1, v2, v3) @signature `Lokhttp3/internal/http2/PushObserver;.onRequest:(ILjava/util/List;)Z` @kind interface;
  #L2191b6.  v0:= temp;
  #L2191b8.  if v0 == 0 then goto L2191f4;
  #Try_start0.  
  #L2191bc.  v1:= v4.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2191c0.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2191c4.  v2:= v4.`okhttp3.internal.http2.Http2Connection$3.val$streamId` @type ^`int`;
  #L2191c8.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2191cc.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2191d2.  v2:= v4.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2191d6.  @monitorenter v2
  #Try_end0.  
  #Try_start1.  
  #L2191d8.  v1:= v4.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2191dc.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L2191e0.  v3:= v4.`okhttp3.internal.http2.Http2Connection$3.val$streamId` @type ^`int`;
  #L2191e4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2191ea.  v3:= temp @kind object;
  #L2191ec.  call temp:= `remove`(v1, v3) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2191f2.  @monitorexit v2
  #L2191f4.  return @kind void;
  #L2191f6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2191f8.  @monitorexit v2
  #Try_end1.  
  #Try_start2.  
  #L2191fa.  throw v1;
  #Try_end2.  
  #L2191fc.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2191fe.  goto L2191f4;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L2191fc;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L2191f6;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L2191fc;
}

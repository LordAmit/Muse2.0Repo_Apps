record `okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `byte` `okhttp3.internal.http2.Http2Reader$ContinuationSource.flags` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.length` @AccessFlag ;
  `short` `okhttp3.internal.http2.Http2Reader$ContinuationSource.padding` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `okio.BufferedSource` v1 @kind object @name `source`) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.<init>:(Lokio/BufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L219d20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L219d26.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` := v1 @kind object;
  #L219d2a.  return @kind void;
}
procedure `void` `readContinuationHeader`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v8 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.readContinuationHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L219d3c.  v7:= 1I;
  #L219d3e.  v6:= 0I;
  #L219d40.  v0:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @type ^`int`;
  #L219d44.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L219d48.  call temp:= `readMedium`(v2) @signature `Lokhttp3/internal/http2/Http2Reader;.readMedium:(Lokio/BufferedSource;)I` @kind static;
  #L219d4e.  v2:= temp;
  #L219d50.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int` := v2;
  #L219d54.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.length` @type ^`int` := v2;
  #L219d58.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L219d5c.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L219d62.  v2:= temp;
  #L219d64.  v2:= v2 ^& 255;
  #L219d68.  v1:= (`byte`) v2 @kind i2b;
  #L219d6a.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L219d6e.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L219d74.  v2:= temp;
  #L219d76.  v2:= v2 ^& 255;
  #L219d7a.  v2:= (`byte`) v2 @kind i2b;
  #L219d7c.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.flags` @type ^`byte` := v2 @kind byte;
  #L219d80.  v2:= `@@okhttp3.internal.http2.Http2Reader.logger` @type ^`java.util.logging.Logger` @kind object;
  #L219d84.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L219d88.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L219d8e.  v2:= temp;
  #L219d90.  if v2 == 0 then goto L219db2;
  #L219d94.  v2:= `@@okhttp3.internal.http2.Http2Reader.logger` @type ^`java.util.logging.Logger` @kind object;
  #L219d98.  v3:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @type ^`int`;
  #L219d9c.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.length` @type ^`int`;
  #L219da0.  v5:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.flags` @type ^`byte` @kind byte;
  #L219da4.  call temp:= `frameLog`(v7, v3, v4, v1, v5) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIBB)Ljava/lang/String;` @kind static;
  #L219daa.  v3:= temp @kind object;
  #L219dac.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L219db2.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L219db6.  call temp:= `readInt`(v2) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L219dbc.  v2:= temp;
  #L219dbe.  v3:= 2147483647I;
  #L219dc4.  v2:= v2 ^& v3 @kind int;
  #L219dc6.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @type ^`int` := v2;
  #L219dca.  v2:= 9I;
  #L219dce.  if v1 == v2 then goto L219df0;
  #L219dd2.  v2:= "%s != TYPE_CONTINUATION" @kind object;
  #L219dd6.  v3:= new `java.lang.Object`[v7];
  #L219dda.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L219de0.  v4:= temp @kind object;
  #L219de2.  v3[v6]:= v4 @kind object;
  #L219de6.  call temp:= `ioException`(v2, v3) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L219dec.  v2:= temp @kind object;
  #L219dee.  throw v2;
  #L219df0.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @type ^`int`;
  #L219df4.  if v2 == v0 then goto L219e0a;
  #L219df8.  v2:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L219dfc.  v3:= new `java.lang.Object`[v6];
  #L219e00.  call temp:= `ioException`(v2, v3) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L219e06.  v2:= temp @kind object;
  #L219e08.  throw v2;
  #L219e0a.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L219e1c.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L219e30.  v2:= -1L;
  #L219e34.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int`;
  #L219e38.  if v4 != 0 then goto L219e6a;
  #L219e3c.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L219e40.  v5:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.padding` @type ^`short` @kind short;
  #L219e44.  v6:= (`long`) v5 @kind i2l;
  #L219e46.  call `skip`(v4, v6) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L219e4c.  v4:= 0I;
  #L219e4e.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.padding` @type ^`short` := v4 @kind char;
  #L219e52.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.flags` @type ^`byte` @kind byte;
  #L219e56.  v4:= v4 ^& 4;
  #L219e5a.  if v4 == 0 then goto L219e62;
  #L219e5e.  v0:= v2 @kind wide;
  #L219e60.  return v0 @kind wide;
  #L219e62.  call `readContinuationHeader`(v8) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.readContinuationHeader:()V` @kind direct;
  #L219e68.  goto L219e34;
  #L219e6a.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L219e6e.  v5:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int`;
  #L219e72.  v6:= (`long`) v5 @kind i2l;
  #L219e74.  call temp:= `min`(v10, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L219e7a.  v6:= temp @kind wide;
  #L219e7c.  call temp:= `read`(v4, v9, v6) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L219e82.  v0:= temp @kind wide;
  #L219e84.  v4:= lcmp(v0, v2);
  #L219e88.  if v4 != 0 then goto L219e90;
  #L219e8c.  v0:= v2 @kind wide;
  #L219e8e.  goto L219e60;
  #L219e90.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int`;
  #L219e94.  v2:= (`long`) v2 @kind i2l;
  #L219e96.  v2:= v2 - v0 @kind long;
  #L219e98.  v2:= (`int`) v2 @kind l2i;
  #L219e9a.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int` := v2;
  #L219e9e.  goto L219e60;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L219eb0.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L219eb4.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L219eba.  v0:= temp @kind object;
  #L219ebc.  return v0 @kind object;
}

record `okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class, `okhttp3.internal.http2.Http2Reader$Handler` @kind interface {
  `okhttp3.internal.http2.Http2Reader` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @AccessFlag FINAL;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v4 @kind this, `okhttp3.internal.http2.Http2Connection` v5 @kind object @name `this$0`, `okhttp3.internal.http2.Http2Reader` v6 @kind object @name `reader`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21966c.  v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v5 @kind object;
  #L219670.  v0:= "OkHttp %s" @kind object;
  #L219674.  v1:= 1I;
  #L219676.  v1:= new `java.lang.Object`[v1];
  #L21967a.  v2:= 0I;
  #L21967c.  v3:= v5.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L219680.  v1[v2]:= v3 @kind object;
  #L219684.  call `<init>`(v4, v0, v1) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L21968a.  v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` := v6 @kind object;
  #L21968e.  return @kind void;
}
procedure `void` `applyAndAckSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v6 @kind this, `okhttp3.internal.http2.Settings` v7 @kind object @name `peerSettings`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L2196a0.  v0:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2196a4.  call temp:= `access$200`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$200:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L2196aa.  v0:= temp @kind object;
  #L2196ac.  v1:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3`;
  #L2196b0.  v2:= "OkHttp %s ACK Settings" @kind object;
  #L2196b4.  v3:= 1I;
  #L2196b6.  v3:= new `java.lang.Object`[v3];
  #L2196ba.  v4:= 0I;
  #L2196bc.  v5:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2196c0.  v5:= v5.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L2196c4.  v3[v4]:= v5 @kind object;
  #L2196c8.  call `<init>`(v1, v6, v2, v3, v7) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Settings;)V` @kind direct;
  #L2196ce.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #Try_end0.  
  #L2196d4.  return @kind void;
  #L2196d6.  v0:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L2196d8.  goto L2196d4;
  catch `java.util.concurrent.RejectedExecutionException` @[Try_start0..Try_end0] goto L2196d6;
}
procedure `void` `ackSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ackSettings:()V` @AccessFlag PUBLIC {
    temp;

  #L2196fc.  return @kind void;
}
procedure `void` `alternateService`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 @name `streamId`, `java.lang.String` v2 @kind object @name `origin`, `okio.ByteString` v3 @kind object @name `protocol`, `java.lang.String` v4 @kind object @name `host`, `int` v5 @name `port`, `long` v6 @name `maxAge`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.alternateService:(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V` @AccessFlag PUBLIC {
    temp;

  #L219710.  return @kind void;
}
procedure `void` `data`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v4 @kind this, `boolean` v5 @name `inFinished`, `int` v6 @name `streamId`, `okio.BufferedSource` v7 @kind object @name `source`, `int` v8 @name `length`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.data:(ZILokio/BufferedSource;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L219724.  v1:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219728.  call temp:= `pushedStream`(v1, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L21972e.  v1:= temp;
  #L219730.  if v1 == 0 then goto L219740;
  #L219734.  v1:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219738.  call `pushDataLater`(v1, v6, v7, v8, v5) @signature `Lokhttp3/internal/http2/Http2Connection;.pushDataLater:(ILokio/BufferedSource;IZ)V` @kind virtual;
  #L21973e.  return @kind void;
  #L219740.  v1:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219744.  call temp:= `getStream`(v1, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L21974a.  v0:= temp @kind object;
  #L21974c.  if v0 != 0 then goto L219768;
  #L219750.  v1:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219754.  v2:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L219758.  call `writeSynResetLater`(v1, v6, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynResetLater:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L21975e.  v2:= (`long`) v8 @kind i2l;
  #L219760.  call `skip`(v7, v2) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L219766.  goto L21973e;
  #L219768.  call `receiveData`(v0, v7, v8) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveData:(Lokio/BufferedSource;I)V` @kind virtual;
  #L21976e.  if v5 == 0 then goto L21973e;
  #L219772.  call `receiveFin`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveFin:()V` @kind virtual;
  #L219778.  goto L21973e;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L21978c.  v0:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L219790.  v2:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #Try_start0.  
  #L219794.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L219798.  call `readConnectionPreface`(v3, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V` @kind virtual;
  #L21979e.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L2197a2.  v4:= 0I;
  #L2197a4.  call temp:= `nextFrame`(v3, v4, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @kind virtual;
  #L2197aa.  v3:= temp;
  #L2197ac.  if v3 != 0 then goto L21979e;
  #L2197b0.  v0:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2197b4.  v2:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #Try_end0.  
  #Try_start1.  
  #L2197b8.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2197bc.  call `close`(v3, v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #Try_end1.  
  #L2197c2.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L2197c6.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2197cc.  return @kind void;
  #L2197ce.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L2197d0.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2197d4.  v2:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #Try_end2.  
  #Try_start3.  
  #L2197d8.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2197dc.  call `close`(v3, v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #Try_end3.  
  #L2197e2.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L2197e6.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2197ec.  goto L2197cc;
  #L2197ee.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start4.  
  #L2197f0.  v4:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2197f4.  call `close`(v4, v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #Try_end4.  
  #L2197fa.  v4:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.reader` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L2197fe.  call `closeQuietly`(v4) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L219804.  throw v3;
  #L219806.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L219808.  goto L2197fa;
  #L21980a.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L21980c.  goto L2197e2;
  #L21980e.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L219810.  goto L2197c2;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L2197ce;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L2197ee;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L21980e;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L2197ee;
  catch `java.io.IOException` @[Try_start3..Try_end3] goto L21980a;
  catch `java.io.IOException` @[Try_start4..Try_end4] goto L219806;
}
procedure `void` `goAway`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v6 @kind this, `int` v7 @name `lastGoodStreamId`, `okhttp3.internal.http2.ErrorCode` v8 @kind object @name `errorCode`, `okio.ByteString` v9 @kind object @name `debugData`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L219860.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L219866.  v2:= temp;
  #L219868.  if v2 <= 0 then goto L21986c;
  #L21986c.  v3:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219870.  @monitorenter v3
  #Try_start0.  
  #L219872.  v2:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219876.  v2:= v2.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L21987a.  call temp:= `values`(v2) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L219880.  v2:= temp @kind object;
  #L219882.  v4:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219886.  v4:= v4.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L21988a.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L219890.  v4:= temp;
  #L219892.  v4:= new `okhttp3.internal.http2.Http2Stream`[v4];
  #L219896.  call temp:= `toArray`(v2, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L21989c.  v1:= temp @kind object;
  #L21989e.  v1:= (`okhttp3.internal.http2.Http2Stream`[]) v1 @kind object;
  #L2198a2.  v2:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2198a6.  v4:= 1I;
  #L2198a8.  v2.`okhttp3.internal.http2.Http2Connection.shutdown` @type ^`boolean` := v4 @kind boolean;
  #L2198ac.  @monitorexit v3
  #Try_end0.  
  #L2198ae.  v3:= length @variable v1;
  #L2198b0.  v2:= 0I;
  #L2198b2.  if v2 >= v3 then goto L2198fa;
  #L2198b6.  v0:= v1[v2] @kind object;
  #L2198ba.  call temp:= `getId`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L2198c0.  v4:= temp;
  #L2198c2.  if v4 <= v7 then goto L2198ee;
  #L2198c6.  call temp:= `isLocallyInitiated`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.isLocallyInitiated:()Z` @kind virtual;
  #L2198cc.  v4:= temp;
  #L2198ce.  if v4 == 0 then goto L2198ee;
  #L2198d2.  v4:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2198d6.  call `receiveRstStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2198dc.  v4:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2198e0.  call temp:= `getId`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L2198e6.  v5:= temp;
  #L2198e8.  call temp:= `removeStream`(v4, v5) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L2198ee.  v2:= v2 + 1;
  #L2198f2.  goto L2198b2;
  #L2198f4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L2198f6.  @monitorexit v3
  #Try_end1.  
  #L2198f8.  throw v2;
  #L2198fa.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L2198f4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L2198f4;
}
procedure `void` `headers`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v9 @kind this, `boolean` v10 @name `inFinished`, `int` v11 @name `streamId`, `int` v12 @name `associatedStreamId`, `java.util.List` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.headers:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L219920.  v1:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219924.  call temp:= `pushedStream`(v1, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L21992a.  v1:= temp;
  #L21992c.  if v1 == 0 then goto L21993c;
  #L219930.  v1:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219934.  call `pushHeadersLater`(v1, v11, v13, v10) @signature `Lokhttp3/internal/http2/Http2Connection;.pushHeadersLater:(ILjava/util/List;Z)V` @kind virtual;
  #L21993a.  return @kind void;
  #L21993c.  v7:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219940.  @monitorenter v7
  #Try_start0.  
  #L219942.  v1:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219946.  call temp:= `getStream`(v1, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L21994c.  v6:= temp @kind object;
  #L21994e.  if v6 != 0 then goto L219a06;
  #L219952.  v1:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219956.  v1:= v1.`okhttp3.internal.http2.Http2Connection.shutdown` @type ^`boolean` @kind boolean;
  #L21995a.  if v1 == 0 then goto L219968;
  #L21995e.  @monitorexit v7
  #L219960.  goto L21993a;
  #L219962.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L219964.  @monitorexit v7
  #Try_end0.  
  #L219966.  throw v1;
  #Try_start1.  
  #L219968.  v1:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21996c.  v1:= v1.`okhttp3.internal.http2.Http2Connection.lastGoodStreamId` @type ^`int`;
  #L219970.  if v11 > v1 then goto L219978;
  #L219974.  @monitorexit v7
  #L219976.  goto L21993a;
  #L219978.  v1:= v11 %% 2;
  #L21997c.  v2:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219980.  v2:= v2.`okhttp3.internal.http2.Http2Connection.nextStreamId` @type ^`int`;
  #L219984.  v2:= v2 %% 2;
  #L219988.  if v1 != v2 then goto L219990;
  #L21998c.  @monitorexit v7
  #L21998e.  goto L21993a;
  #L219990.  v0:= new `okhttp3.internal.http2.Http2Stream`;
  #L219994.  v2:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219998.  v3:= 0I;
  #L21999a.  v1:= v11;
  #L21999c.  v4:= v10;
  #L21999e.  v5:= v13 @kind object;
  #L2199a0.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.<init>:(ILokhttp3/internal/http2/Http2Connection;ZZLjava/util/List;)V` @kind direct;
  #L2199a6.  v1:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2199aa.  v1.`okhttp3.internal.http2.Http2Connection.lastGoodStreamId` @type ^`int` := v11;
  #L2199ae.  v1:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2199b2.  v1:= v1.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L2199b6.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2199bc.  v2:= temp @kind object;
  #L2199be.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2199c4.  call temp:= `access$100`() @signature `Lokhttp3/internal/http2/Http2Connection;.access$100:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L2199ca.  v1:= temp @kind object;
  #L2199cc.  v2:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$1`;
  #L2199d0.  v3:= "OkHttp %s stream %d" @kind object;
  #L2199d4.  v4:= 2I;
  #L2199d6.  v4:= new `java.lang.Object`[v4];
  #L2199da.  v5:= 0I;
  #L2199dc.  v8:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2199e0.  v8:= v8.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L2199e4.  v4[v5]:= v8 @kind object;
  #L2199e8.  v5:= 1I;
  #L2199ea.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2199f0.  v8:= temp @kind object;
  #L2199f2.  v4[v5]:= v8 @kind object;
  #L2199f6.  call `<init>`(v2, v9, v3, v4, v0) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$1;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Stream;)V` @kind direct;
  #L2199fc.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L219a02.  @monitorexit v7
  #L219a04.  goto L21993a;
  #L219a06.  @monitorexit v7
  #Try_end1.  
  #L219a08.  call `receiveHeaders`(v6, v13) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveHeaders:(Ljava/util/List;)V` @kind virtual;
  #L219a0e.  if v10 == 0 then goto L21993a;
  #L219a12.  call `receiveFin`(v6) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveFin:()V` @kind virtual;
  #L219a18.  goto L21993a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L219962;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L219962;
}
procedure `void` `ping`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v4 @kind this, `boolean` v5 @name `reply`, `int` v6 @name `payload1`, `int` v7 @name `payload2`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ping:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L219a40.  if v5 == 0 then goto L219a6a;
  #L219a44.  v1:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219a48.  @monitorenter v1
  #Try_start0.  
  #L219a4a.  v0:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219a4e.  v2:= 0I;
  #L219a50.  call temp:= `access$302`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$302:(Lokhttp3/internal/http2/Http2Connection;Z)Z` @kind static;
  #L219a56.  v0:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219a5a.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L219a60.  @monitorexit v1
  #L219a62.  return @kind void;
  #L219a64.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L219a66.  @monitorexit v1
  #Try_end0.  
  #L219a68.  throw v0;
  #Try_start1.  
  #L219a6a.  v0:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219a6e.  call temp:= `access$200`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$200:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L219a74.  v0:= temp @kind object;
  #L219a76.  v1:= new `okhttp3.internal.http2.Http2Connection$PingRunnable`;
  #L219a7a.  v2:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219a7e.  v3:= 1I;
  #L219a80.  call `<init>`(v1, v2, v3, v6, v7) @signature `Lokhttp3/internal/http2/Http2Connection$PingRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;ZII)V` @kind direct;
  #L219a86.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #Try_end1.  
  #L219a8c.  goto L219a62;
  #L219a8e.  v0:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L219a90.  goto L219a62;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L219a64;
  catch `java.util.concurrent.RejectedExecutionException` @[Try_start1..Try_end1] goto L219a8e;
}
procedure `void` `priority`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 @name `streamId`, `int` v2 @name `streamDependency`, `int` v3 @name `weight`, `boolean` v4 @name `exclusive`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.priority:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L219abc.  return @kind void;
}
procedure `void` `pushPromise`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `int` v2 @name `streamId`, `int` v3 @name `promisedStreamId`, `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.pushPromise:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L219ad0.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219ad4.  call `pushRequestLater`(v0, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.pushRequestLater:(ILjava/util/List;)V` @kind virtual;
  #L219ada.  return @kind void;
}
procedure `void` `rstStream`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `int` v3 @name `streamId`, `okhttp3.internal.http2.ErrorCode` v4 @kind object @name `errorCode`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L219aec.  v1:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219af0.  call temp:= `pushedStream`(v1, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream:(I)Z` @kind virtual;
  #L219af6.  v1:= temp;
  #L219af8.  if v1 == 0 then goto L219b08;
  #L219afc.  v1:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b00.  call `pushResetLater`(v1, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.pushResetLater:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L219b06.  return @kind void;
  #L219b08.  v1:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b0c.  call temp:= `removeStream`(v1, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L219b12.  v0:= temp @kind object;
  #L219b14.  if v0 == 0 then goto L219b06;
  #L219b18.  call `receiveRstStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L219b1e.  goto L219b06;
}
procedure `void` `settings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v15 @kind this, `boolean` v16 @name `clearPrevious`, `okhttp3.internal.http2.Settings` v17 @kind object @name `newSettings`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.settings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L219b30.  v2:= 0L;
  #L219b34.  v7:= 0I;
  #L219b36.  v9:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b3a.  @monitorenter v9
  #Try_start0.  
  #L219b3c.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b40.  v8:= v8.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L219b44.  call temp:= `getInitialWindowSize`(v8) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L219b4a.  v5:= temp;
  #L219b4c.  if v16 == 0 then goto L219b5e;
  #L219b50.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b54.  v8:= v8.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L219b58.  call `clear`(v8) @signature `Lokhttp3/internal/http2/Settings;.clear:()V` @kind virtual;
  #L219b5e.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b62.  v8:= v8.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L219b66.  v0:= v17 @kind object;
  #L219b6a.  call `merge`(v8, v0) @signature `Lokhttp3/internal/http2/Settings;.merge:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L219b70.  v0:= v17 @kind object;
  #L219b74.  call `applyAndAckSettings`(v15, v0) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind direct;
  #L219b7a.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b7e.  v8:= v8.`okhttp3.internal.http2.Http2Connection.peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L219b82.  call temp:= `getInitialWindowSize`(v8) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L219b88.  v4:= temp;
  #L219b8a.  v8:= -1I;
  #L219b8c.  if v4 == v8 then goto L219c02;
  #L219b90.  if v4 == v5 then goto L219c02;
  #L219b94.  v8:= v4 - v5 @kind int;
  #L219b98.  v2:= (`long`) v8 @kind i2l;
  #L219b9a.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b9e.  v8:= v8.`okhttp3.internal.http2.Http2Connection.receivedInitialPeerSettings` @type ^`boolean` @kind boolean;
  #L219ba2.  if v8 != 0 then goto L219bba;
  #L219ba6.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219baa.  call `addBytesToWriteWindow`(v8, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L219bb0.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219bb4.  v10:= 1I;
  #L219bb6.  v8.`okhttp3.internal.http2.Http2Connection.receivedInitialPeerSettings` @type ^`boolean` := v10 @kind boolean;
  #L219bba.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219bbe.  v8:= v8.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L219bc2.  call temp:= `isEmpty`(v8) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L219bc8.  v8:= temp;
  #L219bca.  if v8 != 0 then goto L219c02;
  #L219bce.  v8:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219bd2.  v8:= v8.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L219bd6.  call temp:= `values`(v8) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L219bdc.  v8:= temp @kind object;
  #L219bde.  v10:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219be2.  v10:= v10.`okhttp3.internal.http2.Http2Connection.streams` @type ^`java.util.Map` @kind object;
  #L219be6.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L219bec.  v10:= temp;
  #L219bee.  v10:= new `okhttp3.internal.http2.Http2Stream`[v10];
  #L219bf2.  call temp:= `toArray`(v8, v10) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L219bf8.  v8:= temp @kind object;
  #L219bfa.  v0:= v8 @kind object;
  #L219bfc.  v0:= (`okhttp3.internal.http2.Http2Stream`[]) v0 @kind object;
  #L219c00.  v7:= v0 @kind object;
  #L219c02.  call temp:= `access$100`() @signature `Lokhttp3/internal/http2/Http2Connection;.access$100:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L219c08.  v8:= temp @kind object;
  #L219c0a.  v10:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$2`;
  #L219c0e.  v11:= "OkHttp %s settings" @kind object;
  #L219c12.  v12:= 1I;
  #L219c14.  v12:= new `java.lang.Object`[v12];
  #L219c18.  v13:= 0I;
  #L219c1a.  v14:= v15.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219c1e.  v14:= v14.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L219c22.  v12[v13]:= v14 @kind object;
  #L219c26.  call `<init>`(v10, v15, v11, v12) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$2;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L219c2c.  call `execute`(v8, v10) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L219c32.  @monitorexit v9
  #Try_end0.  
  #L219c34.  if v7 == 0 then goto L219c6c;
  #L219c38.  v8:= 0L;
  #L219c3c.  v8:= lcmp(v2, v8);
  #L219c40.  if v8 == 0 then goto L219c6c;
  #L219c44.  v9:= length @variable v7;
  #L219c46.  v8:= 0I;
  #L219c48.  if v8 >= v9 then goto L219c6c;
  #L219c4c.  v6:= v7[v8] @kind object;
  #L219c50.  @monitorenter v6
  #Try_start1.  
  #L219c52.  call `addBytesToWriteWindow`(v6, v2) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L219c58.  @monitorexit v6
  #Try_end1.  
  #L219c5a.  v8:= v8 + 1;
  #L219c5e.  goto L219c48;
  #L219c60.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L219c62.  @monitorexit v9
  #Try_end2.  
  #L219c64.  throw v8;
  #L219c66.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L219c68.  @monitorexit v6
  #Try_end3.  
  #L219c6a.  throw v8;
  #L219c6c.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L219c60;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L219c66;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L219c60;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L219c66;
}
procedure `void` `windowUpdate`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v6 @kind this, `int` v7 @name `streamId`, `long` v8 @name `windowSizeIncrement`) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.windowUpdate:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L219ca8.  if v7 != 0 then goto L219cd4;
  #L219cac.  v2:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219cb0.  @monitorenter v2
  #Try_start0.  
  #L219cb2.  v1:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219cb6.  v4:= v1.`okhttp3.internal.http2.Http2Connection.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L219cba.  v4:= v4 + v8 @kind long;
  #L219cbc.  v1.`okhttp3.internal.http2.Http2Connection.bytesLeftInWriteWindow` @type ^`long` := v4 @kind wide;
  #L219cc0.  v1:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219cc4.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L219cca.  @monitorexit v2
  #L219ccc.  return @kind void;
  #L219cce.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L219cd0.  @monitorexit v2
  #Try_end0.  
  #L219cd2.  throw v1;
  #L219cd4.  v1:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219cd8.  call temp:= `getStream`(v1, v7) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L219cde.  v0:= temp @kind object;
  #L219ce0.  if v0 == 0 then goto L219ccc;
  #L219ce4.  @monitorenter v0
  #Try_start1.  
  #L219ce6.  call `addBytesToWriteWindow`(v0, v8) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L219cec.  @monitorexit v0
  #L219cee.  goto L219ccc;
  #L219cf0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L219cf2.  @monitorexit v0
  #Try_end1.  
  #L219cf4.  throw v1;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L219cce;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L219cf0;
}

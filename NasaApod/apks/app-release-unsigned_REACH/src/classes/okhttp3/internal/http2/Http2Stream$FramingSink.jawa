record `okhttp3.internal.http2.Http2Stream$FramingSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.closed` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.finished` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@okhttp3.internal.http2.Http2Stream$FramingSink.EMIT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L219ed0.  v0:= constclass @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219ed4.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L219eda.  v0:= temp;
  #L219edc.  if v0 != 0 then goto L219ee8;
  #L219ee0.  v0:= 1I;
  #L219ee2.  `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` := v0 @kind boolean;
  #L219ee6.  return @kind void;
  #L219ee8.  v0:= 0I;
  #L219eea.  goto L219ee2;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this, `okhttp3.internal.http2.Http2Stream` v2 @kind object @name `this$0`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L219efc.  v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` := v2 @kind object;
  #L219f00.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L219f06.  v0:= new `okio.Buffer`;
  #L219f0a.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L219f10.  v1.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L219f14.  return @kind void;
}
procedure `void` `emitFrame`(`okhttp3.internal.http2.Http2Stream$FramingSink` v8 @kind this, `boolean` v9 @name `outFinished`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L219f28.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219f2c.  @monitorenter v1
  #Try_start0.  
  #L219f2e.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219f32.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L219f36.  call `enter`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #Try_end0.  
  #Try_start1.  
  #L219f3c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219f40.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L219f44.  v6:= 0L;
  #L219f48.  v0:= lcmp(v2, v6);
  #L219f4c.  if v0 > 0 then goto L219f90;
  #L219f50.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L219f54.  if v0 != 0 then goto L219f90;
  #L219f58.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L219f5c.  if v0 != 0 then goto L219f90;
  #L219f60.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219f64.  v0:= v0.`okhttp3.internal.http2.Http2Stream.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L219f68.  if v0 != 0 then goto L219f90;
  #L219f6c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219f70.  call `waitForIo`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.waitForIo:()V` @kind virtual;
  #Try_end1.  
  #L219f76.  goto L219f3c;
  #L219f78.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L219f7a.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219f7e.  v2:= v2.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L219f82.  call `exitAndThrowIfTimedOut`(v2) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L219f88.  throw v0;
  #L219f8a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L219f8c.  @monitorexit v1
  #Try_end2.  
  #L219f8e.  throw v0;
  #Try_start3.  
  #L219f90.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219f94.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L219f98.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L219f9e.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219fa2.  call `checkOutNotClosed`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L219fa8.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219fac.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L219fb0.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L219fb4.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L219fba.  v6:= temp @kind wide;
  #L219fbc.  call temp:= `min`(v2, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L219fc2.  v4:= temp @kind wide;
  #L219fc4.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219fc8.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L219fcc.  v2:= v2 - v4 @kind long;
  #L219fce.  v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` := v2 @kind wide;
  #L219fd2.  @monitorexit v1
  #Try_end3.  
  #L219fd4.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219fd8.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L219fdc.  call `enter`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #Try_start4.  
  #L219fe2.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219fe6.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219fea.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219fee.  v1:= v1.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L219ff2.  if v9 == 0 then goto L21a026;
  #L219ff6.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L219ffa.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21a000.  v2:= temp @kind wide;
  #L21a002.  v2:= lcmp(v4, v2);
  #L21a006.  if v2 != 0 then goto L21a026;
  #L21a00a.  v2:= 1I;
  #L21a00c.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21a010.  call `writeData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #Try_end4.  
  #L21a016.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a01a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21a01e.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21a024.  return @kind void;
  #L21a026.  v2:= 0I;
  #L21a028.  goto L21a00c;
  #L21a02a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21a02c.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a030.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21a034.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21a03a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L219f8a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L219f78;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L219f8a;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L219f8a;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L21a02a;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSink` v6 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21a07c.  v4:= 0L;
  #L21a080.  v2:= 1I;
  #L21a082.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21a086.  if v0 != 0 then goto L21a0a6;
  #L21a08a.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a08e.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21a094.  v0:= temp;
  #L21a096.  if v0 == 0 then goto L21a0a6;
  #L21a09a.  v0:= new `java.lang.AssertionError`;
  #L21a09e.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21a0a4.  throw v0;
  #L21a0a6.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a0aa.  @monitorenter v1
  #Try_start0.  
  #L21a0ac.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L21a0b0.  if v0 == 0 then goto L21a0b8;
  #L21a0b4.  @monitorexit v1
  #L21a0b6.  return @kind void;
  #L21a0b8.  @monitorexit v1
  #Try_end0.  
  #L21a0ba.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a0be.  v0:= v0.`okhttp3.internal.http2.Http2Stream.sink` @type ^`okhttp3.internal.http2.Http2Stream$FramingSink` @kind object;
  #L21a0c2.  v0:= v0.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L21a0c6.  if v0 != 0 then goto L21a118;
  #L21a0ca.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21a0ce.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21a0d4.  v0:= temp @kind wide;
  #L21a0d6.  v0:= lcmp(v0, v4);
  #L21a0da.  if v0 <= 0 then goto L21a100;
  #L21a0de.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21a0e2.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21a0e8.  v0:= temp @kind wide;
  #L21a0ea.  v0:= lcmp(v0, v4);
  #L21a0ee.  if v0 <= 0 then goto L21a118;
  #L21a0f2.  call `emitFrame`(v6, v2) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21a0f8.  goto L21a0de;
  #L21a0fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L21a0fc.  @monitorexit v1
  #Try_end1.  
  #L21a0fe.  throw v0;
  #L21a100.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a104.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21a108.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a10c.  v1:= v1.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L21a110.  v3:= 0I;
  #L21a112.  call `writeData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L21a118.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a11c.  @monitorenter v1
  #L21a11e.  v0:= 1I;
  #Try_start2.  
  #L21a120.  v6.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L21a124.  @monitorexit v1
  #Try_end2.  
  #L21a126.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a12a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21a12e.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L21a134.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a138.  call `cancelStreamIfNecessary`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.cancelStreamIfNecessary:()V` @kind virtual;
  #L21a13e.  goto L21a0b6;
  #L21a140.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L21a142.  @monitorexit v1
  #Try_end3.  
  #L21a144.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21a0fa;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21a0fa;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21a140;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L21a140;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Stream$FramingSink` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21a180.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21a184.  if v0 != 0 then goto L21a1a4;
  #L21a188.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a18c.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21a192.  v0:= temp;
  #L21a194.  if v0 == 0 then goto L21a1a4;
  #L21a198.  v0:= new `java.lang.AssertionError`;
  #L21a19c.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21a1a2.  throw v0;
  #L21a1a4.  v1:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a1a8.  @monitorenter v1
  #Try_start0.  
  #L21a1aa.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a1ae.  call `checkOutNotClosed`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L21a1b4.  @monitorexit v1
  #Try_end0.  
  #L21a1b6.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21a1ba.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21a1c0.  v0:= temp @kind wide;
  #L21a1c2.  v2:= 0L;
  #L21a1c6.  v0:= lcmp(v0, v2);
  #L21a1ca.  if v0 <= 0 then goto L21a1ec;
  #L21a1ce.  v0:= 0I;
  #L21a1d0.  call `emitFrame`(v4, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21a1d6.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a1da.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21a1de.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L21a1e4.  goto L21a1b6;
  #L21a1e6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L21a1e8.  @monitorexit v1
  #Try_end1.  
  #L21a1ea.  throw v0;
  #L21a1ec.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21a1e6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21a1e6;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21a214.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a218.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21a21c.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http2.Http2Stream$FramingSink` v4 @kind this, `okio.Buffer` v5 @kind object @name `source`, `long` v6 @name `byteCount`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21a230.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21a234.  if v0 != 0 then goto L21a254;
  #L21a238.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21a23c.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21a242.  v0:= temp;
  #L21a244.  if v0 == 0 then goto L21a254;
  #L21a248.  v0:= new `java.lang.AssertionError`;
  #L21a24c.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21a252.  throw v0;
  #L21a254.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21a258.  call `write`(v0, v5, v6) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L21a25e.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21a262.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21a268.  v0:= temp @kind wide;
  #L21a26a.  v2:= 16384L;
  #L21a26e.  v0:= lcmp(v0, v2);
  #L21a272.  if v0 < 0 then goto L21a280;
  #L21a276.  v0:= 0I;
  #L21a278.  call `emitFrame`(v4, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21a27e.  goto L21a25e;
  #L21a280.  return @kind void;
}

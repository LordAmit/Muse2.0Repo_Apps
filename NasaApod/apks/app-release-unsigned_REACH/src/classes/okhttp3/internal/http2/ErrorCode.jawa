record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a34b0.  v8:= 7I;
  #L1a34b2.  v7:= 3I;
  #L1a34b4.  v6:= 2I;
  #L1a34b6.  v5:= 1I;
  #L1a34b8.  v4:= 0I;
  #L1a34ba.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a34be.  v1:= "NO_ERROR" @kind object;
  #L1a34c2.  call `<init>`(v0, v1, v4, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a34c8.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a34cc.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a34d0.  v1:= "PROTOCOL_ERROR" @kind object;
  #L1a34d4.  call `<init>`(v0, v1, v5, v5) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a34da.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a34de.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a34e2.  v1:= "INTERNAL_ERROR" @kind object;
  #L1a34e6.  call `<init>`(v0, v1, v6, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a34ec.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a34f0.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a34f4.  v1:= "FLOW_CONTROL_ERROR" @kind object;
  #L1a34f8.  call `<init>`(v0, v1, v7, v7) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a34fe.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3502.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3506.  v1:= "REFUSED_STREAM" @kind object;
  #L1a350a.  v2:= 4I;
  #L1a350c.  call `<init>`(v0, v1, v2, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3512.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3516.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a351a.  v1:= "CANCEL" @kind object;
  #L1a351e.  v2:= 5I;
  #L1a3520.  v3:= 8I;
  #L1a3524.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a352a.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a352e.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3532.  v1:= "COMPRESSION_ERROR" @kind object;
  #L1a3536.  v2:= 6I;
  #L1a3538.  v3:= 9I;
  #L1a353c.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3542.  `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3546.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a354a.  v1:= "CONNECT_ERROR" @kind object;
  #L1a354e.  v2:= 10I;
  #L1a3552.  call `<init>`(v0, v1, v8, v2) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3558.  `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a355c.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3560.  v1:= "ENHANCE_YOUR_CALM" @kind object;
  #L1a3564.  v2:= 8I;
  #L1a3568.  v3:= 11I;
  #L1a356c.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3572.  `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3576.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a357a.  v1:= "INADEQUATE_SECURITY" @kind object;
  #L1a357e.  v2:= 9I;
  #L1a3582.  v3:= 12I;
  #L1a3586.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a358c.  `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3590.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3594.  v1:= "HTTP_1_1_REQUIRED" @kind object;
  #L1a3598.  v2:= 10I;
  #L1a359c.  v3:= 13I;
  #L1a35a0.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a35a6.  `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a35aa.  v0:= 11I;
  #L1a35ae.  v0:= new `okhttp3.internal.http2.ErrorCode`[v0];
  #L1a35b2.  v1:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a35b6.  v0[v4]:= v1 @kind object;
  #L1a35ba.  v1:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a35be.  v0[v5]:= v1 @kind object;
  #L1a35c2.  v1:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a35c6.  v0[v6]:= v1 @kind object;
  #L1a35ca.  v1:= `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a35ce.  v0[v7]:= v1 @kind object;
  #L1a35d2.  v1:= 4I;
  #L1a35d4.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a35d8.  v0[v1]:= v2 @kind object;
  #L1a35dc.  v1:= 5I;
  #L1a35de.  v2:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a35e2.  v0[v1]:= v2 @kind object;
  #L1a35e6.  v1:= 6I;
  #L1a35e8.  v2:= `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a35ec.  v0[v1]:= v2 @kind object;
  #L1a35f0.  v1:= `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a35f4.  v0[v8]:= v1 @kind object;
  #L1a35f8.  v1:= 8I;
  #L1a35fc.  v2:= `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3600.  v0[v1]:= v2 @kind object;
  #L1a3604.  v1:= 9I;
  #L1a3608.  v2:= `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a360c.  v0[v1]:= v2 @kind object;
  #L1a3610.  v1:= 10I;
  #L1a3614.  v2:= `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3618.  v0[v1]:= v2 @kind object;
  #L1a361c.  `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] := v0 @kind object;
  #L1a3620.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 @name `httpCode`) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a3634.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1a363a.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L1a363e.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `fromHttp2`(`int` v5 @name `code`) @signature `Lokhttp3/internal/http2/ErrorCode;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a3650.  call temp:= `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @kind static;
  #L1a3656.  v2:= temp @kind object;
  #L1a3658.  v3:= length @variable v2;
  #L1a365a.  v1:= 0I;
  #L1a365c.  if v1 >= v3 then goto L1a3674;
  #L1a3660.  v0:= v2[v1] @kind object;
  #L1a3664.  v4:= v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L1a3668.  if v4 != v5 then goto L1a366e;
  #L1a366c.  return v0 @kind object;
  #L1a366e.  v1:= v1 + 1;
  #L1a3672.  goto L1a365c;
  #L1a3674.  v0:= 0I;
  #L1a3676.  goto L1a366c;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a3688.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a368c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1a3692.  v0:= temp @kind object;
  #L1a3694.  v0:= (`okhttp3.internal.http2.ErrorCode`) v0 @kind object;
  #L1a3698.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a36ac.  v0:= `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L1a36b0.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1a36b6.  v0:= temp @kind object;
  #L1a36b8.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L1a36bc.  return v0 @kind object;
}

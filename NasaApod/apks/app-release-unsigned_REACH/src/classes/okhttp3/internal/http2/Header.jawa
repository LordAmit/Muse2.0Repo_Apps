record `okhttp3.internal.http2.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Header.hpackSize` @AccessFlag FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.name` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.value` @AccessFlag PUBLIC_FINAL;
}
global `okio.ByteString` `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_METHOD` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_PATH` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Header;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a36d0.  v0:= ":" @kind object;
  #L1a36d4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a36da.  v0:= temp @kind object;
  #L1a36dc.  `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` := v0 @kind object;
  #L1a36e0.  v0:= ":status" @kind object;
  #L1a36e4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a36ea.  v0:= temp @kind object;
  #L1a36ec.  `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` := v0 @kind object;
  #L1a36f0.  v0:= ":method" @kind object;
  #L1a36f4.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a36fa.  v0:= temp @kind object;
  #L1a36fc.  `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` := v0 @kind object;
  #L1a3700.  v0:= ":path" @kind object;
  #L1a3704.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a370a.  v0:= temp @kind object;
  #L1a370c.  `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` := v0 @kind object;
  #L1a3710.  v0:= ":scheme" @kind object;
  #L1a3714.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a371a.  v0:= temp @kind object;
  #L1a371c.  `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` := v0 @kind object;
  #L1a3720.  v0:= ":authority" @kind object;
  #L1a3724.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a372a.  v0:= temp @kind object;
  #L1a372c.  `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` := v0 @kind object;
  #L1a3730.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v2 @kind this, `java.lang.String` v3 @kind object @name `name`, `java.lang.String` v4 @kind object @name `value`) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a3744.  call temp:= `encodeUtf8`(v3) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a374a.  v0:= temp @kind object;
  #L1a374c.  call temp:= `encodeUtf8`(v4) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a3752.  v1:= temp @kind object;
  #L1a3754.  call `<init>`(v2, v0, v1) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L1a375a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v1 @kind this, `okio.ByteString` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a376c.  call temp:= `encodeUtf8`(v3) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a3772.  v0:= temp @kind object;
  #L1a3774.  call `<init>`(v1, v2, v0) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L1a377a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v2 @kind this, `okio.ByteString` v3 @kind object @name `name`, `okio.ByteString` v4 @kind object @name `value`) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a378c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a3792.  v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` := v3 @kind object;
  #L1a3796.  v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` := v4 @kind object;
  #L1a379a.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1a37a0.  v0:= temp;
  #L1a37a2.  v0:= v0 + 32;
  #L1a37a6.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1a37ac.  v1:= temp;
  #L1a37ae.  v0:= v0 + v1 @kind int;
  #L1a37b0.  v2.`okhttp3.internal.http2.Header.hpackSize` @type ^`int` := v0;
  #L1a37b4.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.Header` v4 @kind this, `java.lang.Object` v5 @kind object @name `other`) @signature `Lokhttp3/internal/http2/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a37c8.  v1:= 0I;
  #L1a37ca.  v2:= instanceof @variable v5 @type ^`okhttp3.internal.http2.Header` @kind boolean;
  #L1a37ce.  if v2 == 0 then goto L1a3802;
  #L1a37d2.  v0:= v5 @kind object;
  #L1a37d4.  v0:= (`okhttp3.internal.http2.Header`) v0 @kind object;
  #L1a37d8.  v2:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1a37dc.  v3:= v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1a37e0.  call temp:= `equals`(v2, v3) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a37e6.  v2:= temp;
  #L1a37e8.  if v2 == 0 then goto L1a3802;
  #L1a37ec.  v2:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1a37f0.  v3:= v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1a37f4.  call temp:= `equals`(v2, v3) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a37fa.  v2:= temp;
  #L1a37fc.  if v2 == 0 then goto L1a3802;
  #L1a3800.  v1:= 1I;
  #L1a3802.  return v1;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.Header` v3 @kind this) @signature `Lokhttp3/internal/http2/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a3814.  v0:= 17I;
  #L1a3818.  v1:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1a381c.  call temp:= `hashCode`(v1) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L1a3822.  v1:= temp;
  #L1a3824.  v0:= v1 + 527;
  #L1a3828.  v1:= v0 * 31;
  #L1a382c.  v2:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1a3830.  call temp:= `hashCode`(v2) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L1a3836.  v2:= temp;
  #L1a3838.  v0:= v1 + v2 @kind int;
  #L1a383c.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.Header` v4 @kind this) @signature `Lokhttp3/internal/http2/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a3850.  v0:= "%s: %s" @kind object;
  #L1a3854.  v1:= 2I;
  #L1a3856.  v1:= new `java.lang.Object`[v1];
  #L1a385a.  v2:= 0I;
  #L1a385c.  v3:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1a3860.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1a3866.  v3:= temp @kind object;
  #L1a3868.  v1[v2]:= v3 @kind object;
  #L1a386c.  v2:= 1I;
  #L1a386e.  v3:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1a3872.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1a3878.  v3:= temp @kind object;
  #L1a387a.  v1[v2]:= v3 @kind object;
  #L1a387e.  call temp:= `format`(v0, v1) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a3884.  v0:= temp @kind object;
  #L1a3886.  return v0 @kind object;
}

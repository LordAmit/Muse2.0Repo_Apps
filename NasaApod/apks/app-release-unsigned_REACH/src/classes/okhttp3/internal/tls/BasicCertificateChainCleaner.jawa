record `okhttp3.internal.tls.BasicCertificateChainCleaner` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.tls.CertificateChainCleaner` @kind class {
  `okhttp3.internal.tls.TrustRootIndex` `okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.tls.BasicCertificateChainCleaner.MAX_SIGNERS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v0 @kind this, `okhttp3.internal.tls.TrustRootIndex` v1 @kind object @name `trustRootIndex`) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L21b8ac.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.<init>:()V` @kind direct;
  #L21b8b2.  v0.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` := v1 @kind object;
  #L21b8b6.  return @kind void;
}
procedure `boolean` `verifySignature`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v4 @kind this, `java.security.cert.X509Certificate` v5 @kind object @name `toVerify`, `java.security.cert.X509Certificate` v6 @kind object @name `signingCert`) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.verifySignature:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21b8c8.  v1:= 0I;
  #L21b8ca.  call temp:= `getIssuerDN`(v5) @signature `Ljava/security/cert/X509Certificate;.getIssuerDN:()Ljava/security/Principal;` @kind virtual;
  #L21b8d0.  v2:= temp @kind object;
  #L21b8d2.  call temp:= `getSubjectDN`(v6) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L21b8d8.  v3:= temp @kind object;
  #L21b8da.  call temp:= `equals`(v2, v3) @signature `Ljava/security/Principal;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L21b8e0.  v2:= temp;
  #L21b8e2.  if v2 != 0 then goto L21b8e8;
  #L21b8e6.  return v1;
  #Try_start0.  
  #L21b8e8.  call temp:= `getPublicKey`(v6) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L21b8ee.  v2:= temp @kind object;
  #L21b8f0.  call `verify`(v5, v2) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #Try_end0.  
  #L21b8f6.  v1:= 1I;
  #L21b8f8.  goto L21b8e6;
  #L21b8fa.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L21b8fc.  goto L21b8e6;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L21b8fa;
}
procedure `java.util.List` `clean`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v11 @kind this, `java.util.List` v12 @kind object, `java.lang.String` v13 @kind object @name `hostname`) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.clean:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L21b920.  v3:= new `java.util.ArrayDeque`;
  #L21b924.  call `<init>`(v3, v12) @signature `Ljava/util/ArrayDeque;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L21b92a.  v4:= new `java.util.ArrayList`;
  #L21b92e.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L21b934.  call temp:= `removeFirst`(v3) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L21b93a.  v8:= temp @kind object;
  #L21b93c.  call temp:= `add`(v4, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21b942.  v1:= 0I;
  #L21b944.  v0:= 0I;
  #L21b946.  v8:= 9I;
  #L21b94a.  if v0 >= v8 then goto L21ba1c;
  #L21b94e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L21b954.  v8:= temp;
  #L21b956.  v8:= v8 + -1;
  #L21b95a.  call temp:= `get`(v4, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L21b960.  v6:= temp @kind object;
  #L21b962.  v6:= (`java.security.cert.X509Certificate`) v6 @kind object;
  #L21b966.  v8:= v11.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L21b96a.  call temp:= `findByIssuerAndSignature`(v8, v6) @signature `Lokhttp3/internal/tls/TrustRootIndex;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @kind interface;
  #L21b970.  v7:= temp @kind object;
  #L21b972.  if v7 == 0 then goto L21b9ac;
  #L21b976.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L21b97c.  v8:= temp;
  #L21b97e.  v9:= 1I;
  #L21b980.  if v8 > v9 then goto L21b990;
  #L21b984.  call temp:= `equals`(v6, v7) @signature `Ljava/security/cert/X509Certificate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21b98a.  v8:= temp;
  #L21b98c.  if v8 != 0 then goto L21b996;
  #L21b990.  call temp:= `add`(v4, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21b996.  call temp:= `verifySignature`(v11, v7, v7) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.verifySignature:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L21b99c.  v8:= temp;
  #L21b99e.  if v8 == 0 then goto L21b9a4;
  #L21b9a2.  return v4 @kind object;
  #L21b9a4.  v1:= 1I;
  #L21b9a6.  v0:= v0 + 1;
  #L21b9aa.  goto L21b946;
  #L21b9ac.  call temp:= `iterator`(v3) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21b9b2.  v2:= temp @kind object;
  #L21b9b4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L21b9ba.  v8:= temp;
  #L21b9bc.  if v8 == 0 then goto L21b9e6;
  #L21b9c0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L21b9c6.  v5:= temp @kind object;
  #L21b9c8.  v5:= (`java.security.cert.X509Certificate`) v5 @kind object;
  #L21b9cc.  call temp:= `verifySignature`(v11, v6, v5) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.verifySignature:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L21b9d2.  v8:= temp;
  #L21b9d4.  if v8 == 0 then goto L21b9b4;
  #L21b9d8.  call `remove`(v2) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L21b9de.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21b9e4.  goto L21b9a6;
  #L21b9e6.  if v1 != 0 then goto L21b9a2;
  #L21b9ea.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L21b9ee.  v9:= new `java.lang.StringBuilder`;
  #L21b9f2.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21b9f8.  v10:= "Failed to find a trusted cert that signed " @kind object;
  #L21b9fc.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba02.  v9:= temp @kind object;
  #L21ba04.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba0a.  v9:= temp @kind object;
  #L21ba0c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ba12.  v9:= temp @kind object;
  #L21ba14.  call `<init>`(v8, v9) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21ba1a.  throw v8;
  #L21ba1c.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L21ba20.  v9:= new `java.lang.StringBuilder`;
  #L21ba24.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21ba2a.  v10:= "Certificate chain too long: " @kind object;
  #L21ba2e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba34.  v9:= temp @kind object;
  #L21ba36.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba3c.  v9:= temp @kind object;
  #L21ba3e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ba44.  v9:= temp @kind object;
  #L21ba46.  call `<init>`(v8, v9) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21ba4c.  throw v8;
}
procedure `boolean` `equals`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v3 @kind this, `java.lang.Object` v4 @kind object @name `other`) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21ba60.  v0:= 1I;
  #L21ba62.  if v4 != v3 then goto L21ba68;
  #L21ba66.  return v0;
  #L21ba68.  v1:= instanceof @variable v4 @type ^`okhttp3.internal.tls.BasicCertificateChainCleaner` @kind boolean;
  #L21ba6c.  if v1 == 0 then goto L21ba88;
  #L21ba70.  v4:= (`okhttp3.internal.tls.BasicCertificateChainCleaner`) v4 @kind object;
  #L21ba74.  v1:= v4.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L21ba78.  v2:= v3.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L21ba7c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21ba82.  v1:= temp;
  #L21ba84.  if v1 != 0 then goto L21ba66;
  #L21ba88.  v0:= 0I;
  #L21ba8a.  goto L21ba66;
}
procedure `int` `hashCode`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v1 @kind this) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21ba9c.  v0:= v1.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L21baa0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L21baa6.  v0:= temp;
  #L21baa8.  return v0;
}

record `okhttp3.internal.Util` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.RequestBody` `@@okhttp3.internal.Util.EMPTY_REQUEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ResponseBody` `@@okhttp3.internal.Util.EMPTY_RESPONSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.ISO_8859_1` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@okhttp3.internal.Util.NATURAL_ORDER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@okhttp3.internal.Util.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_8_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L19da30.  v2:= 0I;
  #L19da32.  v1:= 0I;
  #L19da34.  v0:= new `byte`[v1];
  #L19da38.  `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v0 @kind object;
  #L19da3c.  v0:= new `java.lang.String`[v1];
  #L19da40.  `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @type ^`java.lang.String`[] := v0 @kind object;
  #L19da44.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L19da48.  call temp:= `create`(v2, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @kind static;
  #L19da4e.  v0:= temp @kind object;
  #L19da50.  `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L19da54.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L19da58.  call temp:= `create`(v2, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L19da5e.  v0:= temp @kind object;
  #L19da60.  `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19da64.  v0:= "efbbbf" @kind object;
  #L19da68.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19da6e.  v0:= temp @kind object;
  #L19da70.  `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19da74.  v0:= "feff" @kind object;
  #L19da78.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19da7e.  v0:= temp @kind object;
  #L19da80.  `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19da84.  v0:= "fffe" @kind object;
  #L19da88.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19da8e.  v0:= temp @kind object;
  #L19da90.  `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19da94.  v0:= "0000ffff" @kind object;
  #L19da98.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19da9e.  v0:= temp @kind object;
  #L19daa0.  `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19daa4.  v0:= "ffff0000" @kind object;
  #L19daa8.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19daae.  v0:= temp @kind object;
  #L19dab0.  `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19dab4.  v0:= "UTF-8" @kind object;
  #L19dab8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19dabe.  v0:= temp @kind object;
  #L19dac0.  `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19dac4.  v0:= "ISO-8859-1" @kind object;
  #L19dac8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19dace.  v0:= temp @kind object;
  #L19dad0.  `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19dad4.  v0:= "UTF-16BE" @kind object;
  #L19dad8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19dade.  v0:= temp @kind object;
  #L19dae0.  `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19dae4.  v0:= "UTF-16LE" @kind object;
  #L19dae8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19daee.  v0:= temp @kind object;
  #L19daf0.  `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19daf4.  v0:= "UTF-32BE" @kind object;
  #L19daf8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19dafe.  v0:= temp @kind object;
  #L19db00.  `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19db04.  v0:= "UTF-32LE" @kind object;
  #L19db08.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19db0e.  v0:= temp @kind object;
  #L19db10.  `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19db14.  v0:= "GMT" @kind object;
  #L19db18.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L19db1e.  v0:= temp @kind object;
  #L19db20.  `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` := v0 @kind object;
  #L19db24.  v0:= new `okhttp3.internal.Util$1`;
  #L19db28.  call `<init>`(v0) @signature `Lokhttp3/internal/Util$1;.<init>:()V` @kind direct;
  #L19db2e.  `@@okhttp3.internal.Util.NATURAL_ORDER` @type ^`java.util.Comparator` := v0 @kind object;
  #L19db32.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L19db36.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19db3c.  v0:= temp @kind object;
  #L19db3e.  `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19db42.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.Util` v0 @kind this) @signature `Lokhttp3/internal/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19db54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19db5a.  return @kind void;
}
procedure `java.lang.AssertionError` `assertionError`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Exception` v3 @kind object @name `e`) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19db6c.  v0:= new `java.lang.AssertionError`;
  #L19db70.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #Try_start0.  
  #L19db76.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #Try_end0.  
  #L19db7c.  return v0 @kind object;
  #L19db7e.  v1:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #L19db80.  goto L19db7c;
  catch `java.lang.IllegalStateException` @[Try_start0..Try_end0] goto L19db7e;
}
procedure `java.nio.charset.Charset` `bomAwareCharset`(`okio.BufferedSource` v4 @kind object @name `source`, `java.nio.charset.Charset` v5 @kind object @name `charset`) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19dba4.  v2:= 0L;
  #L19dba8.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L19dbac.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19dbb2.  v0:= temp;
  #L19dbb4.  if v0 == 0 then goto L19dbd2;
  #L19dbb8.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L19dbbc.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19dbc2.  v0:= temp;
  #L19dbc4.  v0:= (`long`) v0 @kind i2l;
  #L19dbc6.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19dbcc.  v5:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19dbd0.  return v5 @kind object;
  #L19dbd2.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19dbd6.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19dbdc.  v0:= temp;
  #L19dbde.  if v0 == 0 then goto L19dbfc;
  #L19dbe2.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19dbe6.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19dbec.  v0:= temp;
  #L19dbee.  v0:= (`long`) v0 @kind i2l;
  #L19dbf0.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19dbf6.  v5:= `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L19dbfa.  goto L19dbd0;
  #L19dbfc.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19dc00.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19dc06.  v0:= temp;
  #L19dc08.  if v0 == 0 then goto L19dc26;
  #L19dc0c.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19dc10.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19dc16.  v0:= temp;
  #L19dc18.  v0:= (`long`) v0 @kind i2l;
  #L19dc1a.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19dc20.  v5:= `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L19dc24.  goto L19dbd0;
  #L19dc26.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19dc2a.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19dc30.  v0:= temp;
  #L19dc32.  if v0 == 0 then goto L19dc50;
  #L19dc36.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19dc3a.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19dc40.  v0:= temp;
  #L19dc42.  v0:= (`long`) v0 @kind i2l;
  #L19dc44.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19dc4a.  v5:= `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L19dc4e.  goto L19dbd0;
  #L19dc50.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19dc54.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19dc5a.  v0:= temp;
  #L19dc5c.  if v0 == 0 then goto L19dbd0;
  #L19dc60.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19dc64.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19dc6a.  v0:= temp;
  #L19dc6c.  v0:= (`long`) v0 @kind i2l;
  #L19dc6e.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19dc74.  v5:= `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L19dc78.  goto L19dbd0;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v7 @kind object @name `host`) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19dc8c.  v4:= 0I;
  #L19dc8e.  v5:= ":" @kind object;
  #L19dc92.  call temp:= `contains`(v7, v5) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19dc98.  v5:= temp;
  #L19dc9a.  if v5 == 0 then goto L19dd4a;
  #L19dc9e.  v5:= "[" @kind object;
  #L19dca2.  call temp:= `startsWith`(v7, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19dca8.  v5:= temp;
  #L19dcaa.  if v5 == 0 then goto L19dcdc;
  #L19dcae.  v5:= "]" @kind object;
  #L19dcb2.  call temp:= `endsWith`(v7, v5) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19dcb8.  v5:= temp;
  #L19dcba.  if v5 == 0 then goto L19dcdc;
  #L19dcbe.  v5:= 1I;
  #L19dcc0.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19dcc6.  v6:= temp;
  #L19dcc8.  v6:= v6 + -1;
  #L19dccc.  call temp:= `decodeIpv6`(v7, v5, v6) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L19dcd2.  v2:= temp @kind object;
  #L19dcd4.  if v2 != 0 then goto L19dcf0;
  #L19dcd8.  v3:= v4 @kind object;
  #L19dcda.  return v3 @kind object;
  #L19dcdc.  v5:= 0I;
  #L19dcde.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19dce4.  v6:= temp;
  #L19dce6.  call temp:= `decodeIpv6`(v7, v5, v6) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L19dcec.  v2:= temp @kind object;
  #L19dcee.  goto L19dcd4;
  #L19dcf0.  call temp:= `getAddress`(v2) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L19dcf6.  v0:= temp @kind object;
  #L19dcf8.  v4:= length @variable v0;
  #L19dcfa.  v5:= 16I;
  #L19dcfe.  if v4 != v5 then goto L19dd0c;
  #L19dd02.  call temp:= `inet6AddressToAscii`(v0) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @kind static;
  #L19dd08.  v3:= temp @kind object;
  #L19dd0a.  goto L19dcda;
  #L19dd0c.  v4:= new `java.lang.AssertionError`;
  #L19dd10.  v5:= new `java.lang.StringBuilder`;
  #L19dd14.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19dd1a.  v6:= "Invalid IPv6 address: '" @kind object;
  #L19dd1e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dd24.  v5:= temp @kind object;
  #L19dd26.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dd2c.  v5:= temp @kind object;
  #L19dd2e.  v6:= "'" @kind object;
  #L19dd32.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dd38.  v5:= temp @kind object;
  #L19dd3a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19dd40.  v5:= temp @kind object;
  #L19dd42.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L19dd48.  throw v4;
  #Try_start0.  
  #L19dd4a.  call temp:= `toASCII`(v7) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19dd50.  v5:= temp @kind object;
  #L19dd52.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19dd56.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19dd5c.  v3:= temp @kind object;
  #L19dd5e.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19dd64.  v5:= temp;
  #L19dd66.  if v5 == 0 then goto L19dd6e;
  #L19dd6a.  v3:= v4 @kind object;
  #L19dd6c.  goto L19dcda;
  #L19dd6e.  call temp:= `containsInvalidHostnameAsciiCodes`(v3) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @kind static;
  #Try_end0.  
  #L19dd74.  v5:= temp;
  #L19dd76.  if v5 == 0 then goto L19dcda;
  #L19dd7a.  v3:= v4 @kind object;
  #L19dd7c.  goto L19dcda;
  #L19dd7e.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L19dd80.  v3:= v4 @kind object;
  #L19dd82.  goto L19dcda;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L19dd7e;
}
procedure `int` `checkDuration`(`java.lang.String` v7 @kind object @name `name`, `long` v8 @name `duration`, `java.util.concurrent.TimeUnit` v10 @kind object @name `unit`) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19dda4.  v4:= 0L;
  #L19dda8.  v2:= lcmp(v8, v4);
  #L19ddac.  if v2 >= 0 then goto L19dde2;
  #L19ddb0.  v2:= new `java.lang.IllegalArgumentException`;
  #L19ddb4.  v3:= new `java.lang.StringBuilder`;
  #L19ddb8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ddbe.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ddc4.  v3:= temp @kind object;
  #L19ddc6.  v4:= " < 0" @kind object;
  #L19ddca.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ddd0.  v3:= temp @kind object;
  #L19ddd2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ddd8.  v3:= temp @kind object;
  #L19ddda.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19dde0.  throw v2;
  #L19dde2.  if v10 != 0 then goto L19ddf6;
  #L19dde6.  v2:= new `java.lang.NullPointerException`;
  #L19ddea.  v3:= "unit == null" @kind object;
  #L19ddee.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ddf4.  throw v2;
  #L19ddf6.  call temp:= `toMillis`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19ddfc.  v0:= temp @kind wide;
  #L19ddfe.  v2:= 2147483647L;
  #L19de04.  v2:= lcmp(v0, v2);
  #L19de08.  if v2 <= 0 then goto L19de3e;
  #L19de0c.  v2:= new `java.lang.IllegalArgumentException`;
  #L19de10.  v3:= new `java.lang.StringBuilder`;
  #L19de14.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19de1a.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19de20.  v3:= temp @kind object;
  #L19de22.  v4:= " too large." @kind object;
  #L19de26.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19de2c.  v3:= temp @kind object;
  #L19de2e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19de34.  v3:= temp @kind object;
  #L19de36.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19de3c.  throw v2;
  #L19de3e.  v2:= lcmp(v0, v4);
  #L19de42.  if v2 != 0 then goto L19de80;
  #L19de46.  v2:= lcmp(v8, v4);
  #L19de4a.  if v2 <= 0 then goto L19de80;
  #L19de4e.  v2:= new `java.lang.IllegalArgumentException`;
  #L19de52.  v3:= new `java.lang.StringBuilder`;
  #L19de56.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19de5c.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19de62.  v3:= temp @kind object;
  #L19de64.  v4:= " too small." @kind object;
  #L19de68.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19de6e.  v3:= temp @kind object;
  #L19de70.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19de76.  v3:= temp @kind object;
  #L19de78.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19de7e.  throw v2;
  #L19de80.  v2:= (`int`) v0 @kind l2i;
  #L19de82.  return v2;
}
procedure `void` `checkOffsetAndCount`(`long` v4 @name `arrayLength`, `long` v6 @name `offset`, `long` v8 @name `count`) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19de94.  v0:= v6 ^| v8 @kind long;
  #L19de98.  v2:= 0L;
  #L19de9c.  v0:= lcmp(v0, v2);
  #L19dea0.  if v0 < 0 then goto L19deb8;
  #L19dea4.  v0:= lcmp(v6, v4);
  #L19dea8.  if v0 > 0 then goto L19deb8;
  #L19deac.  v0:= v4 - v6 @kind long;
  #L19deb0.  v0:= lcmp(v0, v8);
  #L19deb4.  if v0 >= 0 then goto L19dec4;
  #L19deb8.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L19debc.  call `<init>`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19dec2.  throw v0;
  #L19dec4.  return @kind void;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v2 @kind object @name `closeable`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19ded8.  if v2 == 0 then goto L19dee2;
  #Try_start0.  
  #L19dedc.  call `close`(v2) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #Try_end0.  
  #L19dee2.  return @kind void;
  #L19dee4.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19dee6.  throw v0;
  #L19dee8.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19deea.  goto L19dee2;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19dee4;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19dee8;
}
procedure `void` `closeQuietly`(`java.net.ServerSocket` v2 @kind object @name `serverSocket`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/ServerSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19df0c.  if v2 == 0 then goto L19df16;
  #Try_start0.  
  #L19df10.  call `close`(v2) @signature `Ljava/net/ServerSocket;.close:()V` @kind virtual;
  #Try_end0.  
  #L19df16.  return @kind void;
  #L19df18.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19df1a.  throw v0;
  #L19df1c.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19df1e.  goto L19df16;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19df18;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19df1c;
}
procedure `void` `closeQuietly`(`java.net.Socket` v3 @kind object @name `socket`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19df40.  if v3 == 0 then goto L19df4a;
  #Try_start0.  
  #L19df44.  call `close`(v3) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end0.  
  #L19df4a.  return @kind void;
  #L19df4c.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L19df4e.  call temp:= `isAndroidGetsocknameError`(v0) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L19df54.  v2:= temp;
  #L19df56.  if v2 != 0 then goto L19df4a;
  #L19df5a.  throw v0;
  #L19df5c.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19df5e.  throw v1;
  #L19df60.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L19df62.  goto L19df4a;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L19df4c;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19df5c;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19df60;
}
procedure `java.lang.String`[] `concat`(`java.lang.String`[] v3 @kind object @name `array`, `java.lang.String` v4 @kind object @name `value`) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19df88.  v2:= 0I;
  #L19df8a.  v1:= length @variable v3;
  #L19df8c.  v1:= v1 + 1;
  #L19df90.  v0:= new `java.lang.String`[v1];
  #L19df94.  v1:= length @variable v3;
  #L19df96.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19df9c.  v1:= length @variable v0;
  #L19df9e.  v1:= v1 + -1;
  #L19dfa2.  v0[v1]:= v4 @kind object;
  #L19dfa6.  return v0 @kind object;
}
procedure `boolean` `containsInvalidHostnameAsciiCodes`(`java.lang.String` v5 @kind object @name `hostnameAscii`) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19dfb8.  v2:= 1I;
  #L19dfba.  v1:= 0I;
  #L19dfbc.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19dfc2.  v3:= temp;
  #L19dfc4.  if v1 >= v3 then goto L19dffa;
  #L19dfc8.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19dfce.  v0:= temp;
  #L19dfd0.  v3:= 31I;
  #L19dfd4.  if v0 <= v3 then goto L19dfe0;
  #L19dfd8.  v3:= 127I;
  #L19dfdc.  if v0 < v3 then goto L19dfe2;
  #L19dfe0.  return v2;
  #L19dfe2.  v3:= " #%/:?@[\\]" @kind object;
  #L19dfe6.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19dfec.  v3:= temp;
  #L19dfee.  v4:= -1I;
  #L19dff0.  if v3 != v4 then goto L19dfe0;
  #L19dff4.  v1:= v1 + 1;
  #L19dff8.  goto L19dfbc;
  #L19dffa.  v2:= 0I;
  #L19dffc.  goto L19dfe0;
}
procedure `int` `decodeHexDigit`(`char` v1 @name `c`) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e010.  v0:= 48I;
  #L19e014.  if v1 < v0 then goto L19e026;
  #L19e018.  v0:= 57I;
  #L19e01c.  if v1 > v0 then goto L19e026;
  #L19e020.  v0:= v1 + -48;
  #L19e024.  return v0;
  #L19e026.  v0:= 97I;
  #L19e02a.  if v1 < v0 then goto L19e040;
  #L19e02e.  v0:= 102I;
  #L19e032.  if v1 > v0 then goto L19e040;
  #L19e036.  v0:= v1 + -97;
  #L19e03a.  v0:= v0 + 10;
  #L19e03e.  goto L19e024;
  #L19e040.  v0:= 65I;
  #L19e044.  if v1 < v0 then goto L19e05a;
  #L19e048.  v0:= 70I;
  #L19e04c.  if v1 > v0 then goto L19e05a;
  #L19e050.  v0:= v1 + -65;
  #L19e054.  v0:= v0 + 10;
  #L19e058.  goto L19e024;
  #L19e05a.  v0:= -1I;
  #L19e05c.  goto L19e024;
}
procedure `boolean` `decodeIpv4Suffix`(`java.lang.String` v10 @kind object @name `input`, `int` v11 @name `pos`, `int` v12 @name `limit`, `byte`[] v13 @kind object @name `address`, `int` v14 @name `addressOffset`) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19e070.  v7:= 0I;
  #L19e072.  v0:= v14;
  #L19e074.  v5:= v11;
  #L19e076.  v1:= v0;
  #L19e078.  if v5 >= v12 then goto L19e0f2;
  #L19e07c.  v8:= length @variable v13;
  #L19e07e.  if v1 != v8 then goto L19e084;
  #L19e082.  return v7;
  #L19e084.  if v1 == v14 then goto L19e09c;
  #L19e088.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e08e.  v8:= temp;
  #L19e090.  v9:= 46I;
  #L19e094.  if v8 != v9 then goto L19e082;
  #L19e098.  v5:= v5 + 1;
  #L19e09c.  v6:= 0I;
  #L19e09e.  v4:= v5;
  #L19e0a0.  if v5 >= v12 then goto L19e0bc;
  #L19e0a4.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e0aa.  v2:= temp;
  #L19e0ac.  v8:= 48I;
  #L19e0b0.  if v2 < v8 then goto L19e0bc;
  #L19e0b4.  v8:= 57I;
  #L19e0b8.  if v2 <= v8 then goto L19e0d2;
  #L19e0bc.  v3:= v5 - v4 @kind int;
  #L19e0c0.  if v3 == 0 then goto L19e082;
  #L19e0c4.  v0:= v1 + 1;
  #L19e0c8.  v8:= (`byte`) v6 @kind i2b;
  #L19e0ca.  v13[v1]:= v8 @kind byte;
  #L19e0ce.  v1:= v0;
  #L19e0d0.  goto L19e078;
  #L19e0d2.  if v6 != 0 then goto L19e0da;
  #L19e0d6.  if v4 != v5 then goto L19e082;
  #L19e0da.  v8:= v6 * 10;
  #L19e0de.  v8:= v8 + v2 @kind int;
  #L19e0e0.  v6:= v8 + -48;
  #L19e0e4.  v8:= 255I;
  #L19e0e8.  if v6 > v8 then goto L19e082;
  #L19e0ec.  v5:= v5 + 1;
  #L19e0f0.  goto L19e0a0;
  #L19e0f2.  v8:= v14 + 4;
  #L19e0f6.  if v1 != v8 then goto L19e082;
  #L19e0fa.  v7:= 1I;
  #L19e0fc.  goto L19e082;
}
procedure `java.net.InetAddress` `decodeIpv6`(`java.lang.String` v15 @kind object @name `input`, `int` v16 @name `pos`, `int` v17 @name `limit`) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L19e110.  v12:= 16I;
  #L19e114.  v1:= new `byte`[v12];
  #L19e118.  v2:= 0I;
  #L19e11a.  v5:= -1I;
  #L19e11c.  v8:= -1I;
  #L19e11e.  v10:= v16;
  #L19e122.  v0:= v17;
  #L19e126.  if v10 >= v0 then goto L19e170;
  #L19e12a.  v12:= length @variable v1;
  #L19e12c.  if v2 != v12 then goto L19e134;
  #L19e130.  v12:= 0I;
  #L19e132.  return v12 @kind object;
  #L19e134.  v12:= v10 + 2;
  #L19e138.  v0:= v17;
  #L19e13c.  if v12 > v0 then goto L19e180;
  #L19e140.  v12:= "::" @kind object;
  #L19e144.  v13:= 0I;
  #L19e146.  v14:= 2I;
  #L19e148.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19e14e.  v12:= temp;
  #L19e150.  if v12 == 0 then goto L19e180;
  #L19e154.  v12:= -1I;
  #L19e156.  if v5 == v12 then goto L19e15e;
  #L19e15a.  v12:= 0I;
  #L19e15c.  goto L19e132;
  #L19e15e.  v10:= v10 + 2;
  #L19e162.  v2:= v2 + 2;
  #L19e166.  v5:= v2;
  #L19e168.  v0:= v17;
  #L19e16c.  if v10 != v0 then goto L19e19c;
  #L19e170.  v12:= length @variable v1;
  #L19e172.  if v2 == v12 then goto L19e258;
  #L19e176.  v12:= -1I;
  #L19e178.  if v5 != v12 then goto L19e238;
  #L19e17c.  v12:= 0I;
  #L19e17e.  goto L19e132;
  #L19e180.  if v2 == 0 then goto L19e19c;
  #L19e184.  v12:= ":" @kind object;
  #L19e188.  v13:= 0I;
  #L19e18a.  v14:= 1I;
  #L19e18c.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19e192.  v12:= temp;
  #L19e194.  if v12 == 0 then goto L19e1d0;
  #L19e198.  v10:= v10 + 1;
  #L19e19c.  v11:= 0I;
  #L19e19e.  v8:= v10;
  #L19e1a0.  v0:= v17;
  #L19e1a4.  if v10 >= v0 then goto L19e1be;
  #L19e1a8.  call temp:= `charAt`(v15, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e1ae.  v4:= temp;
  #L19e1b0.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19e1b6.  v9:= temp;
  #L19e1b8.  v12:= -1I;
  #L19e1ba.  if v9 != v12 then goto L19e206;
  #L19e1be.  v7:= v10 - v8 @kind int;
  #L19e1c2.  if v7 == 0 then goto L19e1cc;
  #L19e1c6.  v12:= 4I;
  #L19e1c8.  if v7 <= v12 then goto L19e214;
  #L19e1cc.  v12:= 0I;
  #L19e1ce.  goto L19e132;
  #L19e1d0.  v12:= "." @kind object;
  #L19e1d4.  v13:= 0I;
  #L19e1d6.  v14:= 1I;
  #L19e1d8.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19e1de.  v12:= temp;
  #L19e1e0.  if v12 == 0 then goto L19e202;
  #L19e1e4.  v12:= v2 + -2;
  #L19e1e8.  v0:= v17;
  #L19e1ec.  call temp:= `decodeIpv4Suffix`(v15, v8, v0, v1, v12) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @kind static;
  #L19e1f2.  v12:= temp;
  #L19e1f4.  if v12 != 0 then goto L19e1fc;
  #L19e1f8.  v12:= 0I;
  #L19e1fa.  goto L19e132;
  #L19e1fc.  v2:= v2 + 2;
  #L19e200.  goto L19e170;
  #L19e202.  v12:= 0I;
  #L19e204.  goto L19e132;
  #L19e206.  v12:= v11 ^< 4;
  #L19e20a.  v11:= v12 + v9 @kind int;
  #L19e20e.  v10:= v10 + 1;
  #L19e212.  goto L19e1a0;
  #L19e214.  v3:= v2 + 1;
  #L19e218.  v12:= v11 ^>> 8;
  #L19e21c.  v12:= v12 ^& 255;
  #L19e220.  v12:= (`byte`) v12 @kind i2b;
  #L19e222.  v1[v2]:= v12 @kind byte;
  #L19e226.  v2:= v3 + 1;
  #L19e22a.  v12:= v11 ^& 255;
  #L19e22e.  v12:= (`byte`) v12 @kind i2b;
  #L19e230.  v1[v3]:= v12 @kind byte;
  #L19e234.  goto L19e122;
  #L19e238.  v12:= length @variable v1;
  #L19e23a.  v13:= v2 - v5 @kind int;
  #L19e23e.  v12:= v12 - v13 @kind int;
  #L19e240.  v13:= v2 - v5 @kind int;
  #L19e244.  call `arraycopy`(v1, v5, v1, v12, v13) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19e24a.  v12:= length @variable v1;
  #L19e24c.  v12:= v12 - v2 @kind int;
  #L19e24e.  v12:= v12 + v5 @kind int;
  #L19e250.  v13:= 0I;
  #L19e252.  call `fill`(v1, v5, v12, v13) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #Try_start0.  
  #L19e258.  call temp:= `getByAddress`(v1) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #Try_end0.  
  #L19e25e.  v12:= temp @kind object;
  #L19e260.  goto L19e132;
  #L19e264.  v6:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L19e266.  v12:= new `java.lang.AssertionError`;
  #L19e26a.  call `<init>`(v12) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L19e270.  throw v12;
  catch `java.net.UnknownHostException` @[Try_start0..Try_end0] goto L19e264;
}
procedure `int` `delimiterOffset`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`, `char` v5 @name `delimiter`) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19e294.  v0:= v3;
  #L19e296.  if v0 >= v4 then goto L19e2ae;
  #L19e29a.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e2a0.  v1:= temp;
  #L19e2a2.  if v1 != v5 then goto L19e2a8;
  #L19e2a6.  return v0;
  #L19e2a8.  v0:= v0 + 1;
  #L19e2ac.  goto L19e296;
  #L19e2ae.  v0:= v4;
  #L19e2b0.  goto L19e2a6;
}
procedure `int` `delimiterOffset`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`, `java.lang.String` v6 @kind object @name `delimiters`) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e2c4.  v0:= v4;
  #L19e2c6.  if v0 >= v5 then goto L19e2e8;
  #L19e2ca.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e2d0.  v1:= temp;
  #L19e2d2.  call temp:= `indexOf`(v6, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19e2d8.  v1:= temp;
  #L19e2da.  v2:= -1I;
  #L19e2dc.  if v1 == v2 then goto L19e2e2;
  #L19e2e0.  return v0;
  #L19e2e2.  v0:= v0 + 1;
  #L19e2e6.  goto L19e2c6;
  #L19e2e8.  v0:= v5;
  #L19e2ea.  goto L19e2e0;
}
procedure `boolean` `discard`(`okio.Source` v2 @kind object @name `source`, `int` v3 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L19e2fc.  call temp:= `skipAll`(v2, v3, v4) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #Try_end0.  
  #L19e302.  v1:= temp;
  #L19e304.  return v1;
  #L19e306.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L19e308.  v1:= 0I;
  #L19e30a.  goto L19e304;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L19e306;
}
procedure `boolean` `equal`(`java.lang.Object` v1 @kind object @name `a`, `java.lang.Object` v2 @kind object @name `b`) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e32c.  if v1 == v2 then goto L19e340;
  #L19e330.  if v1 == 0 then goto L19e344;
  #L19e334.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19e33a.  v0:= temp;
  #L19e33c.  if v0 == 0 then goto L19e344;
  #L19e340.  v0:= 1I;
  #L19e342.  return v0;
  #L19e344.  v0:= 0I;
  #L19e346.  goto L19e342;
}
procedure `java.lang.String` `format`(`java.lang.String` v1 @kind object @name `format`, `java.lang.Object`[] v2 @kind object @name `args`) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e358.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19e35c.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19e362.  v0:= temp @kind object;
  #L19e364.  return v0 @kind object;
}
procedure `java.lang.String` `hostHeader`(`okhttp3.HttpUrl` v3 @kind object @name `url`, `boolean` v4 @name `includeDefaultPort`) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e378.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19e37e.  v1:= temp @kind object;
  #L19e380.  v2:= ":" @kind object;
  #L19e384.  call temp:= `contains`(v1, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19e38a.  v1:= temp;
  #L19e38c.  if v1 == 0 then goto L19e422;
  #L19e390.  v1:= new `java.lang.StringBuilder`;
  #L19e394.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e39a.  v2:= "[" @kind object;
  #L19e39e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e3a4.  v1:= temp @kind object;
  #L19e3a6.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19e3ac.  v2:= temp @kind object;
  #L19e3ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e3b4.  v1:= temp @kind object;
  #L19e3b6.  v2:= "]" @kind object;
  #L19e3ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e3c0.  v1:= temp @kind object;
  #L19e3c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e3c8.  v0:= temp @kind object;
  #L19e3ca.  if v4 != 0 then goto L19e3ea;
  #L19e3ce.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19e3d4.  v1:= temp;
  #L19e3d6.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L19e3dc.  v2:= temp @kind object;
  #L19e3de.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19e3e4.  v2:= temp;
  #L19e3e6.  if v1 == v2 then goto L19e420;
  #L19e3ea.  v1:= new `java.lang.StringBuilder`;
  #L19e3ee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e3f4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e3fa.  v1:= temp @kind object;
  #L19e3fc.  v2:= ":" @kind object;
  #L19e400.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e406.  v1:= temp @kind object;
  #L19e408.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19e40e.  v2:= temp;
  #L19e410.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e416.  v1:= temp @kind object;
  #L19e418.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e41e.  v0:= temp @kind object;
  #L19e420.  return v0 @kind object;
  #L19e422.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19e428.  v0:= temp @kind object;
  #L19e42a.  goto L19e3ca;
}
procedure `java.util.List` `immutableList`(`java.util.List` v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e43c.  v0:= new `java.util.ArrayList`;
  #L19e440.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L19e446.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19e44c.  v0:= temp @kind object;
  #L19e44e.  return v0 @kind object;
}
procedure `java.util.List` `immutableList`(`java.lang.Object`[] v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e460.  call temp:= `clone`(v1) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L19e466.  v0:= temp @kind object;
  #L19e468.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L19e46c.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L19e472.  v0:= temp @kind object;
  #L19e474.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19e47a.  v0:= temp @kind object;
  #L19e47c.  return v0 @kind object;
}
procedure `int` `indexOf`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object @name `array`, `java.lang.String` v5 @kind object @name `value`) @signature `Lokhttp3/internal/Util;.indexOf:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e490.  v0:= 0I;
  #L19e492.  v1:= length @variable v4;
  #L19e494.  if v0 >= v1 then goto L19e4b0;
  #L19e498.  v2:= v4[v0] @kind object;
  #L19e49c.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19e4a2.  v2:= temp;
  #L19e4a4.  if v2 != 0 then goto L19e4aa;
  #L19e4a8.  return v0;
  #L19e4aa.  v0:= v0 + 1;
  #L19e4ae.  goto L19e494;
  #L19e4b0.  v0:= -1I;
  #L19e4b2.  goto L19e4a8;
}
procedure `int` `indexOfControlOrNonAscii`(`java.lang.String` v4 @kind object @name `input`) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19e4c4.  v1:= 0I;
  #L19e4c6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19e4cc.  v2:= temp;
  #L19e4ce.  if v1 >= v2 then goto L19e4f2;
  #L19e4d2.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e4d8.  v0:= temp;
  #L19e4da.  v3:= 31I;
  #L19e4de.  if v0 <= v3 then goto L19e4ea;
  #L19e4e2.  v3:= 127I;
  #L19e4e6.  if v0 < v3 then goto L19e4ec;
  #L19e4ea.  return v1;
  #L19e4ec.  v1:= v1 + 1;
  #L19e4f0.  goto L19e4ce;
  #L19e4f2.  v1:= -1I;
  #L19e4f4.  goto L19e4ea;
}
procedure `java.lang.String` `inet6AddressToAscii`(`byte`[] v12 @kind object @name `address`) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19e508.  v11:= 16I;
  #L19e50c.  v10:= 58I;
  #L19e510.  v5:= -1I;
  #L19e512.  v4:= 0I;
  #L19e514.  v3:= 0I;
  #L19e516.  v7:= length @variable v12;
  #L19e518.  if v3 >= v7 then goto L19e554;
  #L19e51c.  v1:= v3;
  #L19e51e.  if v3 >= v11 then goto L19e53c;
  #L19e522.  v7:= v12[v3] @kind byte;
  #L19e526.  if v7 != 0 then goto L19e53c;
  #L19e52a.  v7:= v3 + 1;
  #L19e52e.  v7:= v12[v7] @kind byte;
  #L19e532.  if v7 != 0 then goto L19e53c;
  #L19e536.  v3:= v3 + 2;
  #L19e53a.  goto L19e51e;
  #L19e53c.  v0:= v3 - v1 @kind int;
  #L19e540.  if v0 <= v4 then goto L19e54e;
  #L19e544.  v7:= 4I;
  #L19e546.  if v0 < v7 then goto L19e54e;
  #L19e54a.  v5:= v1;
  #L19e54c.  v4:= v0;
  #L19e54e.  v3:= v3 + 2;
  #L19e552.  goto L19e516;
  #L19e554.  v6:= new `okio.Buffer`;
  #L19e558.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19e55e.  v3:= 0I;
  #L19e560.  v7:= length @variable v12;
  #L19e562.  if v3 >= v7 then goto L19e5b2;
  #L19e566.  if v3 != v5 then goto L19e57e;
  #L19e56a.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19e570.  v3:= v3 + v4 @kind int;
  #L19e572.  if v3 != v11 then goto L19e560;
  #L19e576.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19e57c.  goto L19e560;
  #L19e57e.  if v3 <= 0 then goto L19e588;
  #L19e582.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19e588.  v7:= v12[v3] @kind byte;
  #L19e58c.  v7:= v7 ^& 255;
  #L19e590.  v7:= v7 ^< 8;
  #L19e594.  v8:= v3 + 1;
  #L19e598.  v8:= v12[v8] @kind byte;
  #L19e59c.  v8:= v8 ^& 255;
  #L19e5a0.  v2:= v7 ^| v8 @kind int;
  #L19e5a4.  v8:= (`long`) v2 @kind i2l;
  #L19e5a6.  call temp:= `writeHexadecimalUnsignedLong`(v6, v8) @signature `Lokio/Buffer;.writeHexadecimalUnsignedLong:(J)Lokio/Buffer;` @kind virtual;
  #L19e5ac.  v3:= v3 + 2;
  #L19e5b0.  goto L19e560;
  #L19e5b2.  call temp:= `readUtf8`(v6) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19e5b8.  v7:= temp @kind object;
  #L19e5ba.  return v7 @kind object;
}
procedure `java.lang.String`[] `intersect`(`java.util.Comparator` v9 @kind object, `java.lang.String`[] v10 @kind object @name `first`, `java.lang.String`[] v11 @kind object @name `second`) @signature `Lokhttp3/internal/Util;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19e5cc.  v4:= 0I;
  #L19e5ce.  v2:= new `java.util.ArrayList`;
  #L19e5d2.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19e5d8.  v6:= length @variable v10;
  #L19e5da.  v5:= v4;
  #L19e5dc.  if v5 >= v6 then goto L19e610;
  #L19e5e0.  v0:= v10[v5] @kind object;
  #L19e5e4.  v7:= length @variable v11;
  #L19e5e6.  v3:= v4;
  #L19e5e8.  if v3 >= v7 then goto L19e602;
  #L19e5ec.  v1:= v11[v3] @kind object;
  #L19e5f0.  call temp:= `compare`(v9, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19e5f6.  v8:= temp;
  #L19e5f8.  if v8 != 0 then goto L19e60a;
  #L19e5fc.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19e602.  v3:= v5 + 1;
  #L19e606.  v5:= v3;
  #L19e608.  goto L19e5dc;
  #L19e60a.  v3:= v3 + 1;
  #L19e60e.  goto L19e5e8;
  #L19e610.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19e616.  v3:= temp;
  #L19e618.  v3:= new `java.lang.String`[v3];
  #L19e61c.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L19e622.  v3:= temp @kind object;
  #L19e624.  v3:= (`java.lang.String`[]) v3 @kind object;
  #L19e628.  return v3 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v2 @kind object @name `e`) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19e63c.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L19e642.  v0:= temp @kind object;
  #L19e644.  if v0 == 0 then goto L19e670;
  #L19e648.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19e64e.  v0:= temp @kind object;
  #L19e650.  if v0 == 0 then goto L19e670;
  #L19e654.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19e65a.  v0:= temp @kind object;
  #L19e65c.  v1:= "getsockname failed" @kind object;
  #L19e660.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19e666.  v0:= temp;
  #L19e668.  if v0 == 0 then goto L19e670;
  #L19e66c.  v0:= 1I;
  #L19e66e.  return v0;
  #L19e670.  v0:= 0I;
  #L19e672.  goto L19e66e;
}
procedure `boolean` `nonEmptyIntersection`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object @name `first`, `java.lang.String`[] v10 @kind object @name `second`) @signature `Lokhttp3/internal/Util;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19e684.  v2:= 0I;
  #L19e686.  if v9 == 0 then goto L19e69a;
  #L19e68a.  if v10 == 0 then goto L19e69a;
  #L19e68e.  v3:= length @variable v9;
  #L19e690.  if v3 == 0 then goto L19e69a;
  #L19e694.  v3:= length @variable v10;
  #L19e696.  if v3 != 0 then goto L19e69c;
  #L19e69a.  return v2;
  #L19e69c.  v5:= length @variable v9;
  #L19e69e.  v4:= v2;
  #L19e6a0.  if v4 >= v5 then goto L19e69a;
  #L19e6a4.  v0:= v9[v4] @kind object;
  #L19e6a8.  v6:= length @variable v10;
  #L19e6aa.  v3:= v2;
  #L19e6ac.  if v3 >= v6 then goto L19e6ca;
  #L19e6b0.  v1:= v10[v3] @kind object;
  #L19e6b4.  call temp:= `compare`(v8, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19e6ba.  v7:= temp;
  #L19e6bc.  if v7 != 0 then goto L19e6c4;
  #L19e6c0.  v2:= 1I;
  #L19e6c2.  goto L19e69a;
  #L19e6c4.  v3:= v3 + 1;
  #L19e6c8.  goto L19e6ac;
  #L19e6ca.  v3:= v4 + 1;
  #L19e6ce.  v4:= v3;
  #L19e6d0.  goto L19e6a0;
}
procedure `boolean` `skipAll`(`okio.Source` v12 @kind object @name `source`, `int` v13 @name `duration`, `java.util.concurrent.TimeUnit` v14 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19e6e4.  v6:= 9223372036854775807L;
  #L19e6ee.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L19e6f4.  v2:= temp @kind wide;
  #L19e6f6.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e6fc.  v8:= temp @kind object;
  #L19e6fe.  call temp:= `hasDeadline`(v8) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L19e704.  v8:= temp;
  #L19e706.  if v8 == 0 then goto L19e788;
  #L19e70a.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e710.  v8:= temp @kind object;
  #L19e712.  call temp:= `deadlineNanoTime`(v8) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L19e718.  v8:= temp @kind wide;
  #L19e71a.  v4:= v8 - v2 @kind long;
  #L19e71e.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e724.  v8:= temp @kind object;
  #L19e726.  v10:= (`long`) v13 @kind i2l;
  #L19e728.  call temp:= `toNanos`(v14, v10) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L19e72e.  v10:= temp @kind wide;
  #L19e730.  call temp:= `min`(v4, v10) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L19e736.  v10:= temp @kind wide;
  #L19e738.  v10:= v10 + v2 @kind long;
  #L19e73a.  call temp:= `deadlineNanoTime`(v8, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #Try_start0.  
  #L19e740.  v1:= new `okio.Buffer`;
  #L19e744.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19e74a.  v8:= 8192L;
  #L19e74e.  call temp:= `read`(v12, v1, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L19e754.  v8:= temp @kind wide;
  #L19e756.  v10:= -1L;
  #L19e75a.  v8:= lcmp(v8, v10);
  #L19e75e.  if v8 == 0 then goto L19e78c;
  #L19e762.  call `clear`(v1) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #Try_end0.  
  #L19e768.  goto L19e74a;
  #L19e76a.  v0:= Exception @type ^`java.io.InterruptedIOException` @kind object;
  #L19e76c.  v8:= 0I;
  #L19e76e.  v6:= lcmp(v4, v6);
  #L19e772.  if v6 != 0 then goto L19e7bc;
  #L19e776.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e77c.  v6:= temp @kind object;
  #L19e77e.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19e784.  v6:= v8;
  #L19e786.  return v6;
  #L19e788.  v4:= v6 @kind wide;
  #L19e78a.  goto L19e71e;
  #L19e78c.  v8:= 1I;
  #L19e78e.  v6:= lcmp(v4, v6);
  #L19e792.  if v6 != 0 then goto L19e7a8;
  #L19e796.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e79c.  v6:= temp @kind object;
  #L19e79e.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19e7a4.  v6:= v8;
  #L19e7a6.  goto L19e786;
  #L19e7a8.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e7ae.  v6:= temp @kind object;
  #L19e7b0.  v10:= v2 + v4 @kind long;
  #L19e7b4.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19e7ba.  goto L19e7a4;
  #L19e7bc.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e7c2.  v6:= temp @kind object;
  #L19e7c4.  v10:= v2 + v4 @kind long;
  #L19e7c8.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19e7ce.  goto L19e784;
  #L19e7d0.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19e7d2.  v6:= lcmp(v4, v6);
  #L19e7d6.  if v6 != 0 then goto L19e7ea;
  #L19e7da.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e7e0.  v6:= temp @kind object;
  #L19e7e2.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19e7e8.  throw v8;
  #L19e7ea.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19e7f0.  v6:= temp @kind object;
  #L19e7f2.  v10:= v2 + v4 @kind long;
  #L19e7f6.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19e7fc.  goto L19e7e8;
  catch `java.io.InterruptedIOException` @[Try_start0..Try_end0] goto L19e76a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19e7d0;
}
procedure `int` `skipLeadingAsciiWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19e820.  v0:= v3;
  #L19e822.  if v0 >= v4 then goto L19e83c;
  #L19e826.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e82c.  v1:= temp;
  #L19e82e.  goto L19e840;
  #L19e834.  return v0;
  #L19e836.  v0:= v0 + 1;
  #L19e83a.  goto L19e822;
  #L19e83c.  v0:= v4;
  #L19e83e.  goto L19e834;
  #L19e840.  switch v1
                  | 9 => goto L19e836
                  | 10 => goto L19e836
                  | 12 => goto L19e836
                  | 13 => goto L19e836
                  | 32 => goto L19e836
                  | else => goto L19e834;
}
procedure `int` `skipTrailingAsciiWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19e87c.  v0:= v4 + -1;
  #L19e880.  if v0 < v3 then goto L19e896;
  #L19e884.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e88a.  v1:= temp;
  #L19e88c.  goto L19e8a0;
  #L19e892.  v3:= v0 + 1;
  #L19e896.  return v3;
  #L19e898.  v0:= v0 + -1;
  #L19e89c.  goto L19e880;
  #L19e89e.  
  #L19e8a0.  switch v1
                  | 9 => goto L19e898
                  | 10 => goto L19e898
                  | 12 => goto L19e898
                  | 13 => goto L19e898
                  | 32 => goto L19e898
                  | else => goto L19e892;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`(`java.lang.String` v1 @kind object @name `name`, `boolean` v2 @name `daemon`) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e8dc.  v0:= new `okhttp3.internal.Util$2`;
  #L19e8e0.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/Util$2;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L19e8e6.  return v0 @kind object;
}
procedure `java.lang.String` `trimSubstring`(`java.lang.String` v3 @kind object @name `string`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e8f8.  call temp:= `skipLeadingAsciiWhitespace`(v3, v4, v5) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19e8fe.  v1:= temp;
  #L19e900.  call temp:= `skipTrailingAsciiWhitespace`(v3, v1, v5) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19e906.  v0:= temp;
  #L19e908.  call temp:= `substring`(v3, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19e90e.  v2:= temp @kind object;
  #L19e910.  return v2 @kind object;
}
procedure `boolean` `verifyAsIpAddress`(`java.lang.String` v1 @kind object @name `host`) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e924.  v0:= `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` @kind object;
  #L19e928.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19e92e.  v0:= temp @kind object;
  #L19e930.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L19e936.  v0:= temp;
  #L19e938.  return v0;
}

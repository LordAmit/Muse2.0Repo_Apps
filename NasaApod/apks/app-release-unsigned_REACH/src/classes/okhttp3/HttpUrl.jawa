record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl.fragment` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.host` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.password` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.pathSegments` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.HttpUrl.port` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl.queryNamesAndValues` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.scheme` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.url` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.username` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.HttpUrl.FORM_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `char`[] `@@okhttp3.HttpUrl.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_REENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19a024.  v0:= 16I;
  #L19a028.  v0:= new `char`[v0];
  #L19a02c.  goto L19a038;
  #L19a032.  `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L19a036.  return @kind void;
  #L19a038.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L19a05f.  goto L19a032;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v4 @kind this, `okhttp3.HttpUrl$Builder` v5 @kind object @name `builder`) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19a070.  v1:= 0I;
  #L19a072.  v3:= 0I;
  #L19a074.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19a07a.  v0:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19a07e.  v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19a082.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19a086.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19a08c.  v0:= temp @kind object;
  #L19a08e.  v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` := v0 @kind object;
  #L19a092.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19a096.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19a09c.  v0:= temp @kind object;
  #L19a09e.  v4.`okhttp3.HttpUrl.password` @type ^`java.lang.String` := v0 @kind object;
  #L19a0a2.  v0:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19a0a6.  v4.`okhttp3.HttpUrl.host` @type ^`java.lang.String` := v0 @kind object;
  #L19a0aa.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L19a0b0.  v0:= temp;
  #L19a0b2.  v4.`okhttp3.HttpUrl.port` @type ^`int` := v0;
  #L19a0b6.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a0ba.  call temp:= `percentDecode`(v4, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L19a0c0.  v0:= temp @kind object;
  #L19a0c2.  v4.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` := v0 @kind object;
  #L19a0c6.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a0ca.  if v0 == 0 then goto L19a106;
  #L19a0ce.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a0d2.  v2:= 1I;
  #L19a0d4.  call temp:= `percentDecode`(v4, v0, v2) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L19a0da.  v0:= temp @kind object;
  #L19a0dc.  v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19a0e0.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19a0e4.  if v0 == 0 then goto L19a0f4;
  #L19a0e8.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19a0ec.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19a0f2.  v1:= temp @kind object;
  #L19a0f4.  v4.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` := v1 @kind object;
  #L19a0f8.  call temp:= `toString`(v5) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a0fe.  v0:= temp @kind object;
  #L19a100.  v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` := v0 @kind object;
  #L19a104.  return @kind void;
  #L19a106.  v0:= v1 @kind object;
  #L19a108.  goto L19a0dc;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v11 @kind object @name `input`, `int` v12 @name `pos`, `int` v13 @name `limit`, `java.lang.String` v14 @kind object @name `encodeSet`, `boolean` v15 @name `alreadyEncoded`, `boolean` v16 @name `strict`, `boolean` v17 @name `plusIsSpace`, `boolean` v18 @name `asciiOnly`, `java.nio.charset.Charset` v19 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L19a11c.  v2:= v12;
  #L19a11e.  if v2 >= v13 then goto L19a1c0;
  #L19a122.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19a128.  v10:= temp;
  #L19a12a.  v1:= 32I;
  #L19a12e.  if v10 < v1 then goto L19a17c;
  #L19a132.  v1:= 127I;
  #L19a136.  if v10 == v1 then goto L19a17c;
  #L19a13a.  v1:= 128I;
  #L19a13e.  if v10 < v1 then goto L19a146;
  #L19a142.  if v18 != 0 then goto L19a17c;
  #L19a146.  call temp:= `indexOf`(v14, v10) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19a14c.  v1:= temp;
  #L19a14e.  v3:= -1I;
  #L19a150.  if v1 != v3 then goto L19a17c;
  #L19a154.  v1:= 37I;
  #L19a158.  if v10 != v1 then goto L19a170;
  #L19a15c.  if v15 == 0 then goto L19a17c;
  #L19a160.  if v16 == 0 then goto L19a170;
  #L19a164.  call temp:= `percentEncoded`(v11, v2, v13) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L19a16a.  v1:= temp;
  #L19a16c.  if v1 == 0 then goto L19a17c;
  #L19a170.  v1:= 43I;
  #L19a174.  if v10 != v1 then goto L19a1b4;
  #L19a178.  if v17 == 0 then goto L19a1b4;
  #L19a17c.  v0:= new `okio.Buffer`;
  #L19a180.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19a186.  call temp:= `writeUtf8`(v0, v11, v12, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L19a18c.  v1:= v11 @kind object;
  #L19a18e.  v3:= v13;
  #L19a190.  v4:= v14 @kind object;
  #L19a192.  v5:= v15;
  #L19a194.  v6:= v16;
  #L19a198.  v7:= v17;
  #L19a19c.  v8:= v18;
  #L19a1a0.  v9:= v19 @kind object;
  #L19a1a4.  call `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L19a1aa.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19a1b0.  v1:= temp @kind object;
  #L19a1b2.  return v1 @kind object;
  #L19a1b4.  call temp:= `charCount`(v10) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19a1ba.  v1:= temp;
  #L19a1bc.  v2:= v2 + v1 @kind int;
  #L19a1be.  goto L19a11e;
  #L19a1c0.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a1c6.  v1:= temp @kind object;
  #L19a1c8.  goto L19a1b2;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object @name `input`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19a1dc.  v1:= 0I;
  #L19a1de.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a1e4.  v2:= temp;
  #L19a1e6.  v8:= 0I;
  #L19a1e8.  v0:= v9 @kind object;
  #L19a1ea.  v3:= v10 @kind object;
  #L19a1ec.  v4:= v11;
  #L19a1ee.  v5:= v12;
  #L19a1f0.  v6:= v13;
  #L19a1f2.  v7:= v14;
  #L19a1f4.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a1fa.  v0:= temp @kind object;
  #L19a1fc.  return v0 @kind object;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object @name `input`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`, `java.nio.charset.Charset` v15 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19a210.  v1:= 0I;
  #L19a212.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a218.  v2:= temp;
  #L19a21a.  v0:= v9 @kind object;
  #L19a21c.  v3:= v10 @kind object;
  #L19a21e.  v4:= v11;
  #L19a220.  v5:= v12;
  #L19a222.  v6:= v13;
  #L19a224.  v7:= v14;
  #L19a226.  v8:= v15 @kind object;
  #L19a228.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a22e.  v0:= temp @kind object;
  #L19a230.  return v0 @kind object;
}
procedure `void` `canonicalize`(`okio.Buffer` v6 @kind object @name `out`, `java.lang.String` v7 @kind object @name `input`, `int` v8 @name `pos`, `int` v9 @name `limit`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`, `java.nio.charset.Charset` v15 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a244.  v2:= 0I;
  #L19a246.  v3:= v8;
  #L19a248.  if v3 >= v9 then goto L19a37a;
  #L19a24c.  call temp:= `codePointAt`(v7, v3) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19a252.  v1:= temp;
  #L19a254.  if v11 == 0 then goto L19a284;
  #L19a258.  v4:= 9I;
  #L19a25c.  if v1 == v4 then goto L19a278;
  #L19a260.  v4:= 10I;
  #L19a264.  if v1 == v4 then goto L19a278;
  #L19a268.  v4:= 12I;
  #L19a26c.  if v1 == v4 then goto L19a278;
  #L19a270.  v4:= 13I;
  #L19a274.  if v1 != v4 then goto L19a284;
  #L19a278.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19a27e.  v4:= temp;
  #L19a280.  v3:= v3 + v4 @kind int;
  #L19a282.  goto L19a248;
  #L19a284.  v4:= 43I;
  #L19a288.  if v1 != v4 then goto L19a2a6;
  #L19a28c.  if v13 == 0 then goto L19a2a6;
  #L19a290.  if v11 == 0 then goto L19a2a0;
  #L19a294.  v4:= "+" @kind object;
  #L19a298.  call temp:= `writeUtf8`(v6, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L19a29e.  goto L19a278;
  #L19a2a0.  v4:= "%2B" @kind object;
  #L19a2a4.  goto L19a298;
  #L19a2a6.  v4:= 32I;
  #L19a2aa.  if v1 < v4 then goto L19a2ec;
  #L19a2ae.  v4:= 127I;
  #L19a2b2.  if v1 == v4 then goto L19a2ec;
  #L19a2b6.  v4:= 128I;
  #L19a2ba.  if v1 < v4 then goto L19a2c2;
  #L19a2be.  if v14 != 0 then goto L19a2ec;
  #L19a2c2.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19a2c8.  v4:= temp;
  #L19a2ca.  v5:= -1I;
  #L19a2cc.  if v4 != v5 then goto L19a2ec;
  #L19a2d0.  v4:= 37I;
  #L19a2d4.  if v1 != v4 then goto L19a372;
  #L19a2d8.  if v11 == 0 then goto L19a2ec;
  #L19a2dc.  if v12 == 0 then goto L19a372;
  #L19a2e0.  call temp:= `percentEncoded`(v7, v3, v9) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L19a2e6.  v4:= temp;
  #L19a2e8.  if v4 != 0 then goto L19a372;
  #L19a2ec.  if v2 != 0 then goto L19a2fa;
  #L19a2f0.  v2:= new `okio.Buffer`;
  #L19a2f4.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19a2fa.  if v15 == 0 then goto L19a30e;
  #L19a2fe.  v4:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19a302.  call temp:= `equals`(v15, v4) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a308.  v4:= temp;
  #L19a30a.  if v4 == 0 then goto L19a360;
  #L19a30e.  call temp:= `writeUtf8CodePoint`(v2, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19a314.  call temp:= `exhausted`(v2) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L19a31a.  v4:= temp;
  #L19a31c.  if v4 != 0 then goto L19a278;
  #L19a320.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L19a326.  v4:= temp;
  #L19a328.  v0:= v4 ^& 255;
  #L19a32c.  v4:= 37I;
  #L19a330.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19a336.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L19a33a.  v5:= v0 ^> 4;
  #L19a33e.  v5:= v5 ^& 15;
  #L19a342.  v4:= v4[v5] @kind char;
  #L19a346.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19a34c.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L19a350.  v5:= v0 ^& 15;
  #L19a354.  v4:= v4[v5] @kind char;
  #L19a358.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19a35e.  goto L19a314;
  #L19a360.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19a366.  v4:= temp;
  #L19a368.  v4:= v4 + v3 @kind int;
  #L19a36a.  call temp:= `writeString`(v2, v7, v3, v4, v15) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L19a370.  goto L19a314;
  #L19a372.  call temp:= `writeUtf8CodePoint`(v6, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19a378.  goto L19a278;
  #L19a37a.  return @kind void;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object @name `scheme`) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19a38c.  v0:= "http" @kind object;
  #L19a390.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a396.  v0:= temp;
  #L19a398.  if v0 == 0 then goto L19a3a2;
  #L19a39c.  v0:= 80I;
  #L19a3a0.  return v0;
  #L19a3a2.  v0:= "https" @kind object;
  #L19a3a6.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a3ac.  v0:= temp;
  #L19a3ae.  if v0 == 0 then goto L19a3b8;
  #L19a3b2.  v0:= 443I;
  #L19a3b6.  goto L19a3a0;
  #L19a3b8.  v0:= -1I;
  #L19a3ba.  goto L19a3a0;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v1 @kind object @name `uri`) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19a3cc.  call temp:= `toString`(v1) @signature `Ljava/net/URI;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a3d2.  v0:= temp @kind object;
  #L19a3d4.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19a3da.  v0:= temp @kind object;
  #L19a3dc.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v1 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19a3f0.  call temp:= `toString`(v1) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a3f6.  v0:= temp @kind object;
  #L19a3f8.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19a3fe.  v0:= temp @kind object;
  #L19a400.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `getChecked`(`java.lang.String` v5 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.getChecked:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a414.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19a418.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19a41e.  v2:= 0I;
  #L19a420.  call temp:= `parse`(v0, v2, v5) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19a426.  v1:= temp @kind object;
  #L19a428.  v2:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L19a42c.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L19a432.  v3:= temp;
  #L19a434.  v2:= v2[v3];
  #L19a438.  goto L19a4c0;
  #L19a43e.  v2:= new `java.net.MalformedURLException`;
  #L19a442.  v3:= new `java.lang.StringBuilder`;
  #L19a446.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19a44c.  v4:= "Invalid URL: " @kind object;
  #L19a450.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a456.  v3:= temp @kind object;
  #L19a458.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a45e.  v3:= temp @kind object;
  #L19a460.  v4:= " for " @kind object;
  #L19a464.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a46a.  v3:= temp @kind object;
  #L19a46c.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a472.  v3:= temp @kind object;
  #L19a474.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a47a.  v3:= temp @kind object;
  #L19a47c.  call `<init>`(v2, v3) @signature `Ljava/net/MalformedURLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a482.  throw v2;
  #L19a484.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19a48a.  v2:= temp @kind object;
  #L19a48c.  return v2 @kind object;
  #L19a48e.  v2:= new `java.net.UnknownHostException`;
  #L19a492.  v3:= new `java.lang.StringBuilder`;
  #L19a496.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19a49c.  v4:= "Invalid host: " @kind object;
  #L19a4a0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4a6.  v3:= temp @kind object;
  #L19a4a8.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4ae.  v3:= temp @kind object;
  #L19a4b0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a4b6.  v3:= temp @kind object;
  #L19a4b8.  call `<init>`(v2, v3) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a4be.  throw v2;
  #L19a4c0.  switch v2
                  | 1 => goto L19a484
                  | 2 => goto L19a48e
                  | else => goto L19a43e;
}
procedure `void` `namesAndValuesToQueryString`(`java.lang.StringBuilder` v5 @kind object @name `out`, `java.util.List` v6 @kind object) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a4e0.  v0:= 0I;
  #L19a4e2.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a4e8.  v2:= temp;
  #L19a4ea.  if v0 >= v2 then goto L19a538;
  #L19a4ee.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a4f4.  v1:= temp @kind object;
  #L19a4f6.  v1:= (`java.lang.String`) v1 @kind object;
  #L19a4fa.  v4:= v0 + 1;
  #L19a4fe.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a504.  v3:= temp @kind object;
  #L19a506.  v3:= (`java.lang.String`) v3 @kind object;
  #L19a50a.  if v0 <= 0 then goto L19a518;
  #L19a50e.  v4:= 38I;
  #L19a512.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a518.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a51e.  if v3 == 0 then goto L19a532;
  #L19a522.  v4:= 61I;
  #L19a526.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a52c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a532.  v0:= v0 + 2;
  #L19a536.  goto L19a4ea;
  #L19a538.  return @kind void;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v4 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19a54c.  v2:= 0I;
  #L19a54e.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19a552.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19a558.  call temp:= `parse`(v0, v2, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19a55e.  v1:= temp @kind object;
  #L19a560.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19a564.  if v1 != v3 then goto L19a570;
  #L19a568.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19a56e.  v2:= temp @kind object;
  #L19a570.  return v2 @kind object;
}
procedure `void` `pathSegmentsToString`(`java.lang.StringBuilder` v3 @kind object @name `out`, `java.util.List` v4 @kind object) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19a584.  v0:= 0I;
  #L19a586.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a58c.  v1:= temp;
  #L19a58e.  if v0 >= v1 then goto L19a5b4;
  #L19a592.  v2:= 47I;
  #L19a596.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a59c.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a5a2.  v2:= temp @kind object;
  #L19a5a4.  v2:= (`java.lang.String`) v2 @kind object;
  #L19a5a8.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a5ae.  v0:= v0 + 1;
  #L19a5b2.  goto L19a58e;
  #L19a5b4.  return @kind void;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v4 @kind object @name `encoded`, `int` v5 @name `pos`, `int` v6 @name `limit`, `boolean` v7 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19a5c8.  v1:= v5;
  #L19a5ca.  if v1 >= v6 then goto L19a610;
  #L19a5ce.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a5d4.  v0:= temp;
  #L19a5d6.  v3:= 37I;
  #L19a5da.  if v0 == v3 then goto L19a5ea;
  #L19a5de.  v3:= 43I;
  #L19a5e2.  if v0 != v3 then goto L19a60a;
  #L19a5e6.  if v7 == 0 then goto L19a60a;
  #L19a5ea.  v2:= new `okio.Buffer`;
  #L19a5ee.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19a5f4.  call temp:= `writeUtf8`(v2, v4, v5, v1) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L19a5fa.  call `percentDecode`(v2, v4, v1, v6, v7) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L19a600.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19a606.  v3:= temp @kind object;
  #L19a608.  return v3 @kind object;
  #L19a60a.  v1:= v1 + 1;
  #L19a60e.  goto L19a5ca;
  #L19a610.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a616.  v3:= temp @kind object;
  #L19a618.  goto L19a608;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v2 @kind object @name `encoded`, `boolean` v3 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L19a62c.  v0:= 0I;
  #L19a62e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a634.  v1:= temp;
  #L19a636.  call temp:= `percentDecode`(v2, v0, v1, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L19a63c.  v0:= temp @kind object;
  #L19a63e.  return v0 @kind object;
}
procedure `java.util.List` `percentDecode`(`okhttp3.HttpUrl` v5 @kind this, `java.util.List` v6 @kind object, `boolean` v7 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a650.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a656.  v3:= temp;
  #L19a658.  v1:= new `java.util.ArrayList`;
  #L19a65c.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19a662.  v0:= 0I;
  #L19a664.  if v0 >= v3 then goto L19a690;
  #L19a668.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a66e.  v2:= temp @kind object;
  #L19a670.  v2:= (`java.lang.String`) v2 @kind object;
  #L19a674.  if v2 == 0 then goto L19a68c;
  #L19a678.  call temp:= `percentDecode`(v2, v7) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19a67e.  v4:= temp @kind object;
  #L19a680.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a686.  v0:= v0 + 1;
  #L19a68a.  goto L19a664;
  #L19a68c.  v4:= 0I;
  #L19a68e.  goto L19a680;
  #L19a690.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19a696.  v4:= temp @kind object;
  #L19a698.  return v4 @kind object;
}
procedure `void` `percentDecode`(`okio.Buffer` v6 @kind object @name `out`, `java.lang.String` v7 @kind object @name `encoded`, `int` v8 @name `pos`, `int` v9 @name `limit`, `boolean` v10 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a6ac.  v5:= -1I;
  #L19a6ae.  v3:= v8;
  #L19a6b0.  if v3 >= v9 then goto L19a738;
  #L19a6b4.  call temp:= `codePointAt`(v7, v3) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19a6ba.  v0:= temp;
  #L19a6bc.  v4:= 37I;
  #L19a6c0.  if v0 != v4 then goto L19a718;
  #L19a6c4.  v4:= v3 + 2;
  #L19a6c8.  if v4 >= v9 then goto L19a718;
  #L19a6cc.  v4:= v3 + 1;
  #L19a6d0.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a6d6.  v4:= temp;
  #L19a6d8.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19a6de.  v1:= temp;
  #L19a6e0.  v4:= v3 + 2;
  #L19a6e4.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a6ea.  v4:= temp;
  #L19a6ec.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19a6f2.  v2:= temp;
  #L19a6f4.  if v1 == v5 then goto L19a730;
  #L19a6f8.  if v2 == v5 then goto L19a730;
  #L19a6fc.  v4:= v1 ^< 4;
  #L19a700.  v4:= v4 + v2 @kind int;
  #L19a702.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19a708.  v3:= v3 + 2;
  #L19a70c.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19a712.  v4:= temp;
  #L19a714.  v3:= v3 + v4 @kind int;
  #L19a716.  goto L19a6b0;
  #L19a718.  v4:= 43I;
  #L19a71c.  if v0 != v4 then goto L19a730;
  #L19a720.  if v10 == 0 then goto L19a730;
  #L19a724.  v4:= 32I;
  #L19a728.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19a72e.  goto L19a70c;
  #L19a730.  call temp:= `writeUtf8CodePoint`(v6, v0) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19a736.  goto L19a70c;
  #L19a738.  return @kind void;
}
procedure `boolean` `percentEncoded`(`java.lang.String` v3 @kind object @name `encoded`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19a74c.  v2:= -1I;
  #L19a74e.  v0:= v4 + 2;
  #L19a752.  if v0 >= v5 then goto L19a79a;
  #L19a756.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a75c.  v0:= temp;
  #L19a75e.  v1:= 37I;
  #L19a762.  if v0 != v1 then goto L19a79a;
  #L19a766.  v0:= v4 + 1;
  #L19a76a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a770.  v0:= temp;
  #L19a772.  call temp:= `decodeHexDigit`(v0) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19a778.  v0:= temp;
  #L19a77a.  if v0 == v2 then goto L19a79a;
  #L19a77e.  v0:= v4 + 2;
  #L19a782.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a788.  v0:= temp;
  #L19a78a.  call temp:= `decodeHexDigit`(v0) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19a790.  v0:= temp;
  #L19a792.  if v0 == v2 then goto L19a79a;
  #L19a796.  v0:= 1I;
  #L19a798.  return v0;
  #L19a79a.  v0:= 0I;
  #L19a79c.  goto L19a798;
}
procedure `java.util.List` `queryStringToNamesAndValues`(`java.lang.String` v6 @kind object @name `encodedQuery`) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a7b0.  v5:= -1I;
  #L19a7b2.  v3:= new `java.util.ArrayList`;
  #L19a7b6.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19a7bc.  v2:= 0I;
  #L19a7be.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a7c4.  v4:= temp;
  #L19a7c6.  if v2 > v4 then goto L19a834;
  #L19a7ca.  v4:= 38I;
  #L19a7ce.  call temp:= `indexOf`(v6, v4, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19a7d4.  v0:= temp;
  #L19a7d6.  if v0 != v5 then goto L19a7e2;
  #L19a7da.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a7e0.  v0:= temp;
  #L19a7e2.  v4:= 61I;
  #L19a7e6.  call temp:= `indexOf`(v6, v4, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19a7ec.  v1:= temp;
  #L19a7ee.  if v1 == v5 then goto L19a7f6;
  #L19a7f2.  if v1 <= v0 then goto L19a812;
  #L19a7f6.  call temp:= `substring`(v6, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a7fc.  v4:= temp @kind object;
  #L19a7fe.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a804.  v4:= 0I;
  #L19a806.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a80c.  v2:= v0 + 1;
  #L19a810.  goto L19a7be;
  #L19a812.  call temp:= `substring`(v6, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a818.  v4:= temp @kind object;
  #L19a81a.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a820.  v4:= v1 + 1;
  #L19a824.  call temp:= `substring`(v6, v4, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a82a.  v4:= temp @kind object;
  #L19a82c.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a832.  goto L19a80c;
  #L19a834.  return v3 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19a848.  v1:= v3.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L19a84c.  if v1 != 0 then goto L19a854;
  #L19a850.  v1:= 0I;
  #L19a852.  return v1 @kind object;
  #L19a854.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a858.  v2:= 35I;
  #L19a85c.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19a862.  v1:= temp;
  #L19a864.  v0:= v1 + 1;
  #L19a868.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a86c.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19a872.  v1:= temp @kind object;
  #L19a874.  goto L19a852;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a888.  v2:= v5.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L19a88c.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19a892.  v2:= temp;
  #L19a894.  if v2 == 0 then goto L19a89e;
  #L19a898.  v2:= "" @kind object;
  #L19a89c.  return v2 @kind object;
  #L19a89e.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a8a2.  v3:= 58I;
  #L19a8a6.  v4:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19a8aa.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a8b0.  v4:= temp;
  #L19a8b2.  v4:= v4 + 3;
  #L19a8b6.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19a8bc.  v2:= temp;
  #L19a8be.  v1:= v2 + 1;
  #L19a8c2.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a8c6.  v3:= 64I;
  #L19a8ca.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19a8d0.  v0:= temp;
  #L19a8d2.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a8d6.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a8dc.  v2:= temp @kind object;
  #L19a8de.  goto L19a89c;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a8f0.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a8f4.  v3:= 47I;
  #L19a8f8.  v4:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19a8fc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a902.  v4:= temp;
  #L19a904.  v4:= v4 + 3;
  #L19a908.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19a90e.  v1:= temp;
  #L19a910.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a914.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a918.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a91e.  v3:= temp;
  #L19a920.  v4:= "?#" @kind object;
  #L19a924.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19a92a.  v0:= temp;
  #L19a92c.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a930.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a936.  v2:= temp @kind object;
  #L19a938.  return v2 @kind object;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v9 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19a94c.  v8:= 47I;
  #L19a950.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a954.  v6:= v9.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19a958.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a95e.  v6:= temp;
  #L19a960.  v6:= v6 + 3;
  #L19a964.  call temp:= `indexOf`(v5, v8, v6) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19a96a.  v2:= temp;
  #L19a96c.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a970.  v6:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a974.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a97a.  v6:= temp;
  #L19a97c.  v7:= "?#" @kind object;
  #L19a980.  call temp:= `delimiterOffset`(v5, v2, v6, v7) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19a986.  v1:= temp;
  #L19a988.  v3:= new `java.util.ArrayList`;
  #L19a98c.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19a992.  v0:= v2;
  #L19a994.  if v0 >= v1 then goto L19a9be;
  #L19a998.  v0:= v0 + 1;
  #L19a99c.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a9a0.  call temp:= `delimiterOffset`(v5, v0, v1, v8) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19a9a6.  v4:= temp;
  #L19a9a8.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a9ac.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a9b2.  v5:= temp @kind object;
  #L19a9b4.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a9ba.  v0:= v4;
  #L19a9bc.  goto L19a994;
  #L19a9be.  return v3 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a9d0.  v2:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a9d4.  if v2 != 0 then goto L19a9dc;
  #L19a9d8.  v2:= 0I;
  #L19a9da.  return v2 @kind object;
  #L19a9dc.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a9e0.  v3:= 63I;
  #L19a9e4.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19a9ea.  v2:= temp;
  #L19a9ec.  v1:= v2 + 1;
  #L19a9f0.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a9f4.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19a9f8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a9fe.  v3:= temp;
  #L19aa00.  v4:= 35I;
  #L19aa04.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19aa0a.  v0:= temp;
  #L19aa0c.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aa10.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19aa16.  v2:= temp @kind object;
  #L19aa18.  goto L19a9da;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19aa2c.  v2:= v5.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L19aa30.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19aa36.  v2:= temp;
  #L19aa38.  if v2 == 0 then goto L19aa42;
  #L19aa3c.  v2:= "" @kind object;
  #L19aa40.  return v2 @kind object;
  #L19aa42.  v2:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19aa46.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19aa4c.  v2:= temp;
  #L19aa4e.  v1:= v2 + 3;
  #L19aa52.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aa56.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aa5a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19aa60.  v3:= temp;
  #L19aa62.  v4:= ":@" @kind object;
  #L19aa66.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19aa6c.  v0:= temp;
  #L19aa6e.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aa72.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19aa78.  v2:= temp @kind object;
  #L19aa7a.  goto L19aa40;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19aa8c.  v0:= instanceof @variable v3 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L19aa90.  if v0 == 0 then goto L19aab0;
  #L19aa94.  v3:= (`okhttp3.HttpUrl`) v3 @kind object;
  #L19aa98.  v0:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aa9c.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aaa0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19aaa6.  v0:= temp;
  #L19aaa8.  if v0 == 0 then goto L19aab0;
  #L19aaac.  v0:= 1I;
  #L19aaae.  return v0;
  #L19aab0.  v0:= 0I;
  #L19aab2.  goto L19aaae;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19aac4.  v0:= v1.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L19aac8.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19aadc.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aae0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19aae6.  v0:= temp;
  #L19aae8.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19aafc.  v0:= v1.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19ab00.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ab14.  v0:= v2.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19ab18.  v1:= "https" @kind object;
  #L19ab1c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ab22.  v0:= temp;
  #L19ab24.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19ab38.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19ab3c.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19ab42.  v1:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19ab46.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v1 @kind object;
  #L19ab4a.  call temp:= `encodedUsername`(v3) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19ab50.  v1:= temp @kind object;
  #L19ab52.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v1 @kind object;
  #L19ab56.  call temp:= `encodedPassword`(v3) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19ab5c.  v1:= temp @kind object;
  #L19ab5e.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L19ab62.  v1:= v3.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19ab66.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L19ab6a.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19ab6e.  v2:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19ab72.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19ab78.  v2:= temp;
  #L19ab7a.  if v1 == v2 then goto L19abbe;
  #L19ab7e.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19ab82.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L19ab86.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19ab8a.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19ab90.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19ab94.  call temp:= `encodedPathSegments`(v3) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L19ab9a.  v2:= temp @kind object;
  #L19ab9c.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19aba2.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L19aba8.  v1:= temp @kind object;
  #L19abaa.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19abb0.  call temp:= `encodedFragment`(v3) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L19abb6.  v1:= temp @kind object;
  #L19abb8.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L19abbc.  return v0 @kind object;
  #L19abbe.  v1:= -1I;
  #L19abc0.  goto L19ab82;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this, `java.lang.String` v4 @kind object @name `link`) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19abd4.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19abd8.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19abde.  call temp:= `parse`(v0, v3, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19abe4.  v1:= temp @kind object;
  #L19abe6.  v2:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19abea.  if v1 != v2 then goto L19abf0;
  #L19abee.  return v0 @kind object;
  #L19abf0.  v0:= 0I;
  #L19abf2.  goto L19abee;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ac04.  v0:= v1.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L19ac08.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ac1c.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L19ac20.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ac34.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L19ac38.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ac3e.  v0:= temp;
  #L19ac40.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ac54.  v0:= v1.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19ac58.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ac6c.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ac70.  if v1 != 0 then goto L19ac78;
  #L19ac74.  v1:= 0I;
  #L19ac76.  return v1 @kind object;
  #L19ac78.  v0:= new `java.lang.StringBuilder`;
  #L19ac7c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ac82.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ac86.  call `namesAndValuesToQueryString`(v0, v1) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19ac8c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ac92.  v1:= temp @kind object;
  #L19ac94.  goto L19ac76;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v4 @kind this, `java.lang.String` v5 @kind object @name `name`) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19aca8.  v2:= 0I;
  #L19acaa.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19acae.  if v3 != 0 then goto L19acb4;
  #L19acb2.  return v2 @kind object;
  #L19acb4.  v0:= 0I;
  #L19acb6.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19acba.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19acc0.  v1:= temp;
  #L19acc2.  if v0 >= v1 then goto L19acb2;
  #L19acc6.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19acca.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19acd0.  v3:= temp @kind object;
  #L19acd2.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19acd8.  v3:= temp;
  #L19acda.  if v3 == 0 then goto L19acf4;
  #L19acde.  v2:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ace2.  v3:= v0 + 1;
  #L19ace6.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19acec.  v2:= temp @kind object;
  #L19acee.  v2:= (`java.lang.String`) v2 @kind object;
  #L19acf2.  goto L19acb2;
  #L19acf4.  v0:= v0 + 2;
  #L19acf8.  goto L19acc2;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ad0c.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ad10.  if v0 != 0 then goto L19ad20;
  #L19ad14.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L19ad18.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19ad1e.  throw v0;
  #L19ad20.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ad24.  v1:= v3 * 2;
  #L19ad28.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19ad2e.  v0:= temp @kind object;
  #L19ad30.  v0:= (`java.lang.String`) v0 @kind object;
  #L19ad34.  return v0 @kind object;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19ad48.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ad4c.  if v3 != 0 then goto L19ad5a;
  #L19ad50.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L19ad56.  v3:= temp @kind object;
  #L19ad58.  return v3 @kind object;
  #L19ad5a.  v1:= new `java.util.LinkedHashSet`;
  #L19ad5e.  call `<init>`(v1) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L19ad64.  v0:= 0I;
  #L19ad66.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ad6a.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ad70.  v2:= temp;
  #L19ad72.  if v0 >= v2 then goto L19ad8e;
  #L19ad76.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ad7a.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19ad80.  v3:= temp @kind object;
  #L19ad82.  call temp:= `add`(v1, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19ad88.  v0:= v0 + 2;
  #L19ad8c.  goto L19ad72;
  #L19ad8e.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L19ad94.  v3:= temp @kind object;
  #L19ad96.  goto L19ad58;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ada8.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19adac.  if v0 != 0 then goto L19adbc;
  #L19adb0.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L19adb4.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19adba.  throw v0;
  #L19adbc.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19adc0.  v1:= v3 * 2;
  #L19adc4.  v1:= v1 + 1;
  #L19adc8.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19adce.  v0:= temp @kind object;
  #L19add0.  v0:= (`java.lang.String`) v0 @kind object;
  #L19add4.  return v0 @kind object;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object @name `name`) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19ade8.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19adec.  if v3 != 0 then goto L19adfa;
  #L19adf0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L19adf6.  v3:= temp @kind object;
  #L19adf8.  return v3 @kind object;
  #L19adfa.  v1:= new `java.util.ArrayList`;
  #L19adfe.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19ae04.  v0:= 0I;
  #L19ae06.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ae0a.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ae10.  v2:= temp;
  #L19ae12.  if v0 >= v2 then goto L19ae4a;
  #L19ae16.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ae1a.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19ae20.  v3:= temp @kind object;
  #L19ae22.  call temp:= `equals`(v6, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ae28.  v3:= temp;
  #L19ae2a.  if v3 == 0 then goto L19ae44;
  #L19ae2e.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ae32.  v4:= v0 + 1;
  #L19ae36.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19ae3c.  v3:= temp @kind object;
  #L19ae3e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19ae44.  v0:= v0 + 2;
  #L19ae48.  goto L19ae12;
  #L19ae4a.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19ae50.  v3:= temp @kind object;
  #L19ae52.  goto L19adf8;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ae64.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ae68.  if v0 == 0 then goto L19ae7e;
  #L19ae6c.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19ae70.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ae76.  v0:= temp;
  #L19ae78.  v0:= v0 / 2;
  #L19ae7c.  return v0;
  #L19ae7e.  v0:= 0I;
  #L19ae80.  goto L19ae7c;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ae94.  v0:= "/..." @kind object;
  #L19ae98.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19ae9e.  v0:= temp @kind object;
  #L19aea0.  v1:= "" @kind object;
  #L19aea4.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19aeaa.  v0:= temp @kind object;
  #L19aeac.  v1:= "" @kind object;
  #L19aeb0.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19aeb6.  v0:= temp @kind object;
  #L19aeb8.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19aebe.  v0:= temp @kind object;
  #L19aec0.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19aec6.  v0:= temp @kind object;
  #L19aec8.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.String` v3 @kind object @name `link`) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19aedc.  call temp:= `newBuilder`(v2, v3) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19aee2.  v0:= temp @kind object;
  #L19aee4.  if v0 == 0 then goto L19aef2;
  #L19aee8.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19aeee.  v1:= temp @kind object;
  #L19aef0.  return v1 @kind object;
  #L19aef2.  v1:= 0I;
  #L19aef4.  goto L19aef0;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19af08.  v0:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19af0c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19af20.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19af24.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19af38.  v0:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19af3c.  call temp:= `verifyAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L19af42.  v0:= temp;
  #L19af44.  if v0 == 0 then goto L19af4c;
  #L19af48.  v0:= 0I;
  #L19af4a.  return v0 @kind object;
  #L19af4c.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L19af52.  v0:= temp @kind object;
  #L19af54.  v1:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19af58.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19af5e.  v0:= temp @kind object;
  #L19af60.  goto L19af4a;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19af74.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19af7a.  v4:= temp @kind object;
  #L19af7c.  call temp:= `reencodeForUri`(v4) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19af82.  v4:= temp @kind object;
  #L19af84.  call temp:= `toString`(v4) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19af8a.  v3:= temp @kind object;
  #Try_start0.  
  #L19af8c.  v4:= new `java.net.URI`;
  #L19af90.  call `<init>`(v4, v3) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L19af96.  return v4 @kind object;
  #L19af98.  v0:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #Try_start1.  
  #L19af9a.  v4:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L19af9e.  v5:= "" @kind object;
  #L19afa2.  call temp:= `replaceAll`(v3, v4, v5) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19afa8.  v2:= temp @kind object;
  #L19afaa.  call temp:= `create`(v2) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #Try_end1.  
  #L19afb0.  v4:= temp @kind object;
  #L19afb2.  goto L19af96;
  #L19afb4.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19afb6.  v4:= new `java.lang.RuntimeException`;
  #L19afba.  call `<init>`(v4, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19afc0.  throw v4;
  catch `java.net.URISyntaxException` @[Try_start0..Try_end0] goto L19af98;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L19afb4;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L19aff0.  v1:= new `java.net.URL`;
  #L19aff4.  v2:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aff8.  call `<init>`(v1, v2) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L19affe.  return v1 @kind object;
  #L19b000.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L19b002.  v1:= new `java.lang.RuntimeException`;
  #L19b006.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19b00c.  throw v1;
  catch `java.net.MalformedURLException` @[Try_start0..Try_end0] goto L19b000;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b030.  v0:= v1.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L19b034.  return v0 @kind object;
}

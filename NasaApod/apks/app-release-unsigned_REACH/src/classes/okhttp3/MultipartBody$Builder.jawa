record `okhttp3.MultipartBody$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.ByteString` `okhttp3.MultipartBody$Builder.boundary` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody$Builder.parts` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody$Builder.type` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19b2d4.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L19b2da.  v0:= temp @kind object;
  #L19b2dc.  call temp:= `toString`(v0) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b2e2.  v0:= temp @kind object;
  #L19b2e4.  call `<init>`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b2ea.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `boundary`) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19b2fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b302.  v0:= `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` @kind object;
  #L19b306.  v1.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L19b30a.  v0:= new `java.util.ArrayList`;
  #L19b30e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19b314.  v1.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` := v0 @kind object;
  #L19b318.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19b31e.  v0:= temp @kind object;
  #L19b320.  v1.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` := v0 @kind object;
  #L19b324.  return @kind void;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b338.  call temp:= `createFormData`(v2, v3) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b33e.  v0:= temp @kind object;
  #L19b340.  call temp:= `addPart`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19b346.  v0:= temp @kind object;
  #L19b348.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `filename`, `okhttp3.RequestBody` v4 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b35c.  call temp:= `createFormData`(v2, v3, v4) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b362.  v0:= temp @kind object;
  #L19b364.  call temp:= `addPart`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19b36a.  v0:= temp @kind object;
  #L19b36c.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object @name `headers`, `okhttp3.RequestBody` v3 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b380.  call temp:= `create`(v2, v3) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b386.  v0:= temp @kind object;
  #L19b388.  call temp:= `addPart`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19b38e.  v0:= temp @kind object;
  #L19b390.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v2 @kind this, `okhttp3.MultipartBody$Part` v3 @kind object @name `part`) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b3a4.  if v3 != 0 then goto L19b3b8;
  #L19b3a8.  v0:= new `java.lang.NullPointerException`;
  #L19b3ac.  v1:= "part == null" @kind object;
  #L19b3b0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b3b6.  throw v0;
  #L19b3b8.  v0:= v2.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L19b3bc.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19b3c2.  return v2 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b3d4.  call temp:= `create`(v2) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b3da.  v0:= temp @kind object;
  #L19b3dc.  call temp:= `addPart`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19b3e2.  v0:= temp @kind object;
  #L19b3e4.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody` `build`(`okhttp3.MultipartBody$Builder` v4 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19b3f8.  v0:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L19b3fc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19b402.  v0:= temp;
  #L19b404.  if v0 == 0 then goto L19b418;
  #L19b408.  v0:= new `java.lang.IllegalStateException`;
  #L19b40c.  v1:= "Multipart body must have at least one part." @kind object;
  #L19b410.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b416.  throw v0;
  #L19b418.  v0:= new `okhttp3.MultipartBody`;
  #L19b41c.  v1:= v4.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` @kind object;
  #L19b420.  v2:= v4.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` @kind object;
  #L19b424.  v3:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L19b428.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @kind direct;
  #L19b42e.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `setType`(`okhttp3.MultipartBody$Builder` v3 @kind this, `okhttp3.MediaType` v4 @kind object @name `type`) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19b440.  if v4 != 0 then goto L19b454;
  #L19b444.  v0:= new `java.lang.NullPointerException`;
  #L19b448.  v1:= "type == null" @kind object;
  #L19b44c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b452.  throw v0;
  #L19b454.  call temp:= `type`(v4) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @kind virtual;
  #L19b45a.  v0:= temp @kind object;
  #L19b45c.  v1:= "multipart" @kind object;
  #L19b460.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b466.  v0:= temp;
  #L19b468.  if v0 != 0 then goto L19b49e;
  #L19b46c.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b470.  v1:= new `java.lang.StringBuilder`;
  #L19b474.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b47a.  v2:= "multipart != " @kind object;
  #L19b47e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b484.  v1:= temp @kind object;
  #L19b486.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b48c.  v1:= temp @kind object;
  #L19b48e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b494.  v1:= temp @kind object;
  #L19b496.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b49c.  throw v0;
  #L19b49e.  v3.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L19b4a2.  return v3 @kind object;
}

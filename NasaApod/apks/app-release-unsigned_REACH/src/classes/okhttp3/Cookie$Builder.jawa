record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.domain` @AccessFlag ;
  `long` `okhttp3.Cookie$Builder.expiresAt` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.hostOnly` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.httpOnly` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.name` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.path` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.persistent` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.secure` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.value` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19619c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1961a2.  v0:= 253402300799999L;
  #L1961ac.  v2.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v0 @kind wide;
  #L1961b0.  v0:= "/" @kind object;
  #L1961b4.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v0 @kind object;
  #L1961b8.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `domain`, `boolean` v6 @name `hostOnly`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1961cc.  if v5 != 0 then goto L1961e0;
  #L1961d0.  v1:= new `java.lang.NullPointerException`;
  #L1961d4.  v2:= "domain == null" @kind object;
  #L1961d8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1961de.  throw v1;
  #L1961e0.  call temp:= `canonicalizeHost`(v5) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1961e6.  v0:= temp @kind object;
  #L1961e8.  if v0 != 0 then goto L19621e;
  #L1961ec.  v1:= new `java.lang.IllegalArgumentException`;
  #L1961f0.  v2:= new `java.lang.StringBuilder`;
  #L1961f4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1961fa.  v3:= "unexpected domain: " @kind object;
  #L1961fe.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196204.  v2:= temp @kind object;
  #L196206.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19620c.  v2:= temp @kind object;
  #L19620e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L196214.  v2:= temp @kind object;
  #L196216.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19621c.  throw v1;
  #L19621e.  v4.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` := v0 @kind object;
  #L196222.  v4.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` := v6 @kind boolean;
  #L196226.  return v4 @kind object;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L196238.  v0:= new `okhttp3.Cookie`;
  #L19623c.  call `<init>`(v0, v1) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @kind direct;
  #L196242.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L196254.  v0:= 0I;
  #L196256.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L19625c.  v0:= temp @kind object;
  #L19625e.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 @name `expiresAt`) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L196270.  v0:= 0L;
  #L196274.  v0:= lcmp(v4, v0);
  #L196278.  if v0 > 0 then goto L196280;
  #L19627c.  v4:= -9223372036854775808L;
  #L196280.  v0:= 253402300799999L;
  #L19628a.  v0:= lcmp(v4, v0);
  #L19628e.  if v0 <= 0 then goto L19629c;
  #L196292.  v4:= 253402300799999L;
  #L19629c.  v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v4 @kind wide;
  #L1962a0.  v0:= 1I;
  #L1962a2.  v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` := v0 @kind boolean;
  #L1962a6.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1962b8.  v0:= 1I;
  #L1962ba.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L1962c0.  v0:= temp @kind object;
  #L1962c2.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1962d4.  v0:= 1I;
  #L1962d6.  v1.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L1962da.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `name`) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1962ec.  if v3 != 0 then goto L196300;
  #L1962f0.  v0:= new `java.lang.NullPointerException`;
  #L1962f4.  v1:= "name == null" @kind object;
  #L1962f8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1962fe.  throw v0;
  #L196300.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L196306.  v0:= temp @kind object;
  #L196308.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19630e.  v0:= temp;
  #L196310.  if v0 != 0 then goto L196324;
  #L196314.  v0:= new `java.lang.IllegalArgumentException`;
  #L196318.  v1:= "name is not trimmed" @kind object;
  #L19631c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L196322.  throw v0;
  #L196324.  v2.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` := v3 @kind object;
  #L196328.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `path`) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19633c.  v0:= "/" @kind object;
  #L196340.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L196346.  v0:= temp;
  #L196348.  if v0 != 0 then goto L19635c;
  #L19634c.  v0:= new `java.lang.IllegalArgumentException`;
  #L196350.  v1:= "path must start with '/'" @kind object;
  #L196354.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19635a.  throw v0;
  #L19635c.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v3 @kind object;
  #L196360.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L196374.  v0:= 1I;
  #L196376.  v1.`okhttp3.Cookie$Builder.secure` @type ^`boolean` := v0 @kind boolean;
  #L19637a.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19638c.  if v3 != 0 then goto L1963a0;
  #L196390.  v0:= new `java.lang.NullPointerException`;
  #L196394.  v1:= "value == null" @kind object;
  #L196398.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19639e.  throw v0;
  #L1963a0.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1963a6.  v0:= temp @kind object;
  #L1963a8.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1963ae.  v0:= temp;
  #L1963b0.  if v0 != 0 then goto L1963c4;
  #L1963b4.  v0:= new `java.lang.IllegalArgumentException`;
  #L1963b8.  v1:= "value is not trimmed" @kind object;
  #L1963bc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1963c2.  throw v0;
  #L1963c4.  v2.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` := v3 @kind object;
  #L1963c8.  return v2 @kind object;
}

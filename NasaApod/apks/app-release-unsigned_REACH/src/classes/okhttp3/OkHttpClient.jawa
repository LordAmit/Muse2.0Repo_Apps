record `okhttp3.OkHttpClient` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface, `okhttp3.Call$Factory` @kind interface, `okhttp3.WebSocket$Factory` @kind interface {
  `okhttp3.Authenticator` `okhttp3.OkHttpClient.authenticator` @AccessFlag FINAL;
  `okhttp3.Cache` `okhttp3.OkHttpClient.cache` @AccessFlag FINAL;
  `okhttp3.internal.tls.CertificateChainCleaner` `okhttp3.OkHttpClient.certificateChainCleaner` @AccessFlag FINAL;
  `okhttp3.CertificatePinner` `okhttp3.OkHttpClient.certificatePinner` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.connectTimeout` @AccessFlag FINAL;
  `okhttp3.ConnectionPool` `okhttp3.OkHttpClient.connectionPool` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.CookieJar` `okhttp3.OkHttpClient.cookieJar` @AccessFlag FINAL;
  `okhttp3.Dispatcher` `okhttp3.OkHttpClient.dispatcher` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.OkHttpClient.dns` @AccessFlag FINAL;
  `okhttp3.EventListener$Factory` `okhttp3.OkHttpClient.eventListenerFactory` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.followRedirects` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.followSslRedirects` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.OkHttpClient.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.interceptors` @AccessFlag FINAL;
  `okhttp3.internal.cache.InternalCache` `okhttp3.OkHttpClient.internalCache` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.networkInterceptors` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.pingInterval` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.OkHttpClient.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.OkHttpClient.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.OkHttpClient.proxySelector` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.readTimeout` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.retryOnConnectionFailure` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.OkHttpClient.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.OkHttpClient.sslSocketFactory` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.writeTimeout` @AccessFlag FINAL;
}
global `java.util.List` `@@okhttp3.OkHttpClient.DEFAULT_CONNECTION_SPECS` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@okhttp3.OkHttpClient.DEFAULT_PROTOCOLS` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/OkHttpClient;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L213ee4.  v4:= 2I;
  #L213ee6.  v3:= 1I;
  #L213ee8.  v2:= 0I;
  #L213eea.  v0:= new `okhttp3.Protocol`[v4];
  #L213eee.  v1:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L213ef2.  v0[v2]:= v1 @kind object;
  #L213ef6.  v1:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L213efa.  v0[v3]:= v1 @kind object;
  #L213efe.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L213f04.  v0:= temp @kind object;
  #L213f06.  `@@okhttp3.OkHttpClient.DEFAULT_PROTOCOLS` @type ^`java.util.List` := v0 @kind object;
  #L213f0a.  v0:= new `okhttp3.ConnectionSpec`[v4];
  #L213f0e.  v1:= `@@okhttp3.ConnectionSpec.MODERN_TLS` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L213f12.  v0[v2]:= v1 @kind object;
  #L213f16.  v1:= `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L213f1a.  v0[v3]:= v1 @kind object;
  #L213f1e.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L213f24.  v0:= temp @kind object;
  #L213f26.  `@@okhttp3.OkHttpClient.DEFAULT_CONNECTION_SPECS` @type ^`java.util.List` := v0 @kind object;
  #L213f2a.  v0:= new `okhttp3.OkHttpClient$1`;
  #L213f2e.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient$1;.<init>:()V` @kind direct;
  #L213f34.  `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` := v0 @kind object;
  #L213f38.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L213f4c.  v0:= new `okhttp3.OkHttpClient$Builder`;
  #L213f50.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:()V` @kind direct;
  #L213f56.  call `<init>`(v1, v0) @signature `Lokhttp3/OkHttpClient;.<init>:(Lokhttp3/OkHttpClient$Builder;)V` @kind direct;
  #L213f5c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient` v6 @kind this, `okhttp3.OkHttpClient$Builder` v7 @kind object @name `builder`) @signature `Lokhttp3/OkHttpClient;.<init>:(Lokhttp3/OkHttpClient$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L213f70.  v5:= 0I;
  #L213f72.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L213f78.  v3:= v7.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` @kind object;
  #L213f7c.  v6.`okhttp3.OkHttpClient.dispatcher` @type ^`okhttp3.Dispatcher` := v3 @kind object;
  #L213f80.  v3:= v7.`okhttp3.OkHttpClient$Builder.proxy` @type ^`java.net.Proxy` @kind object;
  #L213f84.  v6.`okhttp3.OkHttpClient.proxy` @type ^`java.net.Proxy` := v3 @kind object;
  #L213f88.  v3:= v7.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` @kind object;
  #L213f8c.  v6.`okhttp3.OkHttpClient.protocols` @type ^`java.util.List` := v3 @kind object;
  #L213f90.  v3:= v7.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` @kind object;
  #L213f94.  v6.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` := v3 @kind object;
  #L213f98.  v3:= v7.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L213f9c.  call temp:= `immutableList`(v3) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L213fa2.  v3:= temp @kind object;
  #L213fa4.  v6.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` := v3 @kind object;
  #L213fa8.  v3:= v7.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L213fac.  call temp:= `immutableList`(v3) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L213fb2.  v3:= temp @kind object;
  #L213fb4.  v6.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` := v3 @kind object;
  #L213fb8.  v3:= v7.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` @kind object;
  #L213fbc.  v6.`okhttp3.OkHttpClient.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v3 @kind object;
  #L213fc0.  v3:= v7.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L213fc4.  v6.`okhttp3.OkHttpClient.proxySelector` @type ^`java.net.ProxySelector` := v3 @kind object;
  #L213fc8.  v3:= v7.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L213fcc.  v6.`okhttp3.OkHttpClient.cookieJar` @type ^`okhttp3.CookieJar` := v3 @kind object;
  #L213fd0.  v3:= v7.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` @kind object;
  #L213fd4.  v6.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` := v3 @kind object;
  #L213fd8.  v3:= v7.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L213fdc.  v6.`okhttp3.OkHttpClient.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v3 @kind object;
  #L213fe0.  v3:= v7.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L213fe4.  v6.`okhttp3.OkHttpClient.socketFactory` @type ^`javax.net.SocketFactory` := v3 @kind object;
  #L213fe8.  v0:= 0I;
  #L213fea.  v3:= v6.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` @kind object;
  #L213fee.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L213ff4.  v3:= temp @kind object;
  #L213ff6.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L213ffc.  v4:= temp;
  #L213ffe.  if v4 == 0 then goto L214026;
  #L214002.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L214008.  v1:= temp @kind object;
  #L21400a.  v1:= (`okhttp3.ConnectionSpec`) v1 @kind object;
  #L21400e.  if v0 != 0 then goto L21401e;
  #L214012.  call temp:= `isTls`(v1) @signature `Lokhttp3/ConnectionSpec;.isTls:()Z` @kind virtual;
  #L214018.  v4:= temp;
  #L21401a.  if v4 == 0 then goto L214022;
  #L21401e.  v0:= 1I;
  #L214020.  goto L213ff6;
  #L214022.  v0:= 0I;
  #L214024.  goto L214020;
  #L214026.  v3:= v7.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L21402a.  if v3 != 0 then goto L214032;
  #L21402e.  if v0 != 0 then goto L2140fc;
  #L214032.  v3:= v7.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L214036.  v6.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L21403a.  v3:= v7.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L21403e.  v6.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v3 @kind object;
  #L214042.  v3:= v7.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L214046.  v6.`okhttp3.OkHttpClient.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v3 @kind object;
  #L21404a.  v3:= v7.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L21404e.  v4:= v6.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L214052.  call temp:= `withCertificateChainCleaner`(v3, v4) @signature `Lokhttp3/CertificatePinner;.withCertificateChainCleaner:(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;` @kind virtual;
  #L214058.  v3:= temp @kind object;
  #L21405a.  v6.`okhttp3.OkHttpClient.certificatePinner` @type ^`okhttp3.CertificatePinner` := v3 @kind object;
  #L21405e.  v3:= v7.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L214062.  v6.`okhttp3.OkHttpClient.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v3 @kind object;
  #L214066.  v3:= v7.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L21406a.  v6.`okhttp3.OkHttpClient.authenticator` @type ^`okhttp3.Authenticator` := v3 @kind object;
  #L21406e.  v3:= v7.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L214072.  v6.`okhttp3.OkHttpClient.connectionPool` @type ^`okhttp3.ConnectionPool` := v3 @kind object;
  #L214076.  v3:= v7.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` @kind object;
  #L21407a.  v6.`okhttp3.OkHttpClient.dns` @type ^`okhttp3.Dns` := v3 @kind object;
  #L21407e.  v3:= v7.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` @kind boolean;
  #L214082.  v6.`okhttp3.OkHttpClient.followSslRedirects` @type ^`boolean` := v3 @kind boolean;
  #L214086.  v3:= v7.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` @kind boolean;
  #L21408a.  v6.`okhttp3.OkHttpClient.followRedirects` @type ^`boolean` := v3 @kind boolean;
  #L21408e.  v3:= v7.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` @kind boolean;
  #L214092.  v6.`okhttp3.OkHttpClient.retryOnConnectionFailure` @type ^`boolean` := v3 @kind boolean;
  #L214096.  v3:= v7.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int`;
  #L21409a.  v6.`okhttp3.OkHttpClient.connectTimeout` @type ^`int` := v3;
  #L21409e.  v3:= v7.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int`;
  #L2140a2.  v6.`okhttp3.OkHttpClient.readTimeout` @type ^`int` := v3;
  #L2140a6.  v3:= v7.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int`;
  #L2140aa.  v6.`okhttp3.OkHttpClient.writeTimeout` @type ^`int` := v3;
  #L2140ae.  v3:= v7.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int`;
  #L2140b2.  v6.`okhttp3.OkHttpClient.pingInterval` @type ^`int` := v3;
  #L2140b6.  v3:= v6.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L2140ba.  call temp:= `contains`(v3, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2140c0.  v3:= temp;
  #L2140c2.  if v3 == 0 then goto L21411e;
  #L2140c6.  v3:= new `java.lang.IllegalStateException`;
  #L2140ca.  v4:= new `java.lang.StringBuilder`;
  #L2140ce.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2140d4.  v5:= "Null interceptor: " @kind object;
  #L2140d8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2140de.  v4:= temp @kind object;
  #L2140e0.  v5:= v6.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L2140e4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2140ea.  v4:= temp @kind object;
  #L2140ec.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2140f2.  v4:= temp @kind object;
  #L2140f4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2140fa.  throw v3;
  #L2140fc.  call temp:= `systemDefaultTrustManager`(v6) @signature `Lokhttp3/OkHttpClient;.systemDefaultTrustManager:()Ljavax/net/ssl/X509TrustManager;` @kind direct;
  #L214102.  v2:= temp @kind object;
  #L214104.  call temp:= `systemDefaultSslSocketFactory`(v6, v2) @signature `Lokhttp3/OkHttpClient;.systemDefaultSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind direct;
  #L21410a.  v3:= temp @kind object;
  #L21410c.  v6.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L214110.  call temp:= `get`(v2) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.get:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind static;
  #L214116.  v3:= temp @kind object;
  #L214118.  v6.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v3 @kind object;
  #L21411c.  goto L214042;
  #L21411e.  v3:= v6.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L214122.  call temp:= `contains`(v3, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L214128.  v3:= temp;
  #L21412a.  if v3 == 0 then goto L214164;
  #L21412e.  v3:= new `java.lang.IllegalStateException`;
  #L214132.  v4:= new `java.lang.StringBuilder`;
  #L214136.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21413c.  v5:= "Null network interceptor: " @kind object;
  #L214140.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L214146.  v4:= temp @kind object;
  #L214148.  v5:= v6.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L21414c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L214152.  v4:= temp @kind object;
  #L214154.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21415a.  v4:= temp @kind object;
  #L21415c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214162.  throw v3;
  #L214164.  return @kind void;
}
procedure `javax.net.ssl.SSLSocketFactory` `systemDefaultSslSocketFactory`(`okhttp3.OkHttpClient` v5 @kind this, `javax.net.ssl.X509TrustManager` v6 @kind object @name `trustManager`) @signature `Lokhttp3/OkHttpClient;.systemDefaultSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L214178.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L21417e.  v2:= temp @kind object;
  #L214180.  call temp:= `getSSLContext`(v2) @signature `Lokhttp3/internal/platform/Platform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L214186.  v1:= temp @kind object;
  #L214188.  v2:= 0I;
  #L21418a.  v3:= 1I;
  #L21418c.  v3:= new `javax.net.ssl.TrustManager`[v3];
  #L214190.  v4:= 0I;
  #L214192.  v3[v4]:= v6 @kind object;
  #L214196.  v4:= 0I;
  #L214198.  call `init`(v1, v2, v3, v4) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L21419e.  call temp:= `getSocketFactory`(v1) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #Try_end0.  
  #L2141a4.  v2:= temp @kind object;
  #L2141a6.  return v2 @kind object;
  #L2141a8.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L2141aa.  v2:= "No System TLS" @kind object;
  #L2141ae.  call temp:= `assertionError`(v2, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L2141b4.  v2:= temp @kind object;
  #L2141b6.  throw v2;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L2141a8;
}
procedure `javax.net.ssl.X509TrustManager` `systemDefaultTrustManager`(`okhttp3.OkHttpClient` v6 @kind this) @signature `Lokhttp3/OkHttpClient;.systemDefaultTrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L2141d8.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L2141de.  v3:= temp @kind object;
  #L2141e0.  call temp:= `getInstance`(v3) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L2141e6.  v1:= temp @kind object;
  #L2141e8.  v3:= 0I;
  #L2141ea.  v3:= (`java.security.KeyStore`) v3 @kind object;
  #L2141ee.  call `init`(v1, v3) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L2141f4.  call temp:= `getTrustManagers`(v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L2141fa.  v2:= temp @kind object;
  #L2141fc.  v3:= length @variable v2;
  #L2141fe.  v4:= 1I;
  #L214200.  if v3 != v4 then goto L214212;
  #L214204.  v3:= 0I;
  #L214206.  v3:= v2[v3] @kind object;
  #L21420a.  v3:= instanceof @variable v3 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L21420e.  if v3 != 0 then goto L21425c;
  #L214212.  v3:= new `java.lang.IllegalStateException`;
  #L214216.  v4:= new `java.lang.StringBuilder`;
  #L21421a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L214220.  v5:= "Unexpected default trust managers:" @kind object;
  #L214224.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21422a.  v4:= temp @kind object;
  #L21422c.  call temp:= `toString`(v2) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L214232.  v5:= temp @kind object;
  #L214234.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21423a.  v4:= temp @kind object;
  #L21423c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L214242.  v4:= temp @kind object;
  #L214244.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21424a.  throw v3;
  #Try_end0.  
  #L21424c.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L21424e.  v3:= "No System TLS" @kind object;
  #L214252.  call temp:= `assertionError`(v3, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L214258.  v3:= temp @kind object;
  #L21425a.  throw v3;
  #L21425c.  v3:= 0I;
  #Try_start1.  
  #L21425e.  v3:= v2[v3] @kind object;
  #L214262.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #Try_end1.  
  #L214266.  return v3 @kind object;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L21424c;
  catch `java.security.GeneralSecurityException` @[Try_start1..Try_end1] goto L21424c;
}
procedure `okhttp3.Authenticator` `authenticator`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.authenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214290.  v0:= v1.`okhttp3.OkHttpClient.authenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L214294.  return v0 @kind object;
}
procedure `okhttp3.Cache` `cache`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.cache:()Lokhttp3/Cache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2142a8.  v0:= v1.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L2142ac.  return v0 @kind object;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2142c0.  v0:= v1.`okhttp3.OkHttpClient.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L2142c4.  return v0 @kind object;
}
procedure `int` `connectTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2142d8.  v0:= v1.`okhttp3.OkHttpClient.connectTimeout` @type ^`int`;
  #L2142dc.  return v0;
}
procedure `okhttp3.ConnectionPool` `connectionPool`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectionPool:()Lokhttp3/ConnectionPool;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2142f0.  v0:= v1.`okhttp3.OkHttpClient.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L2142f4.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214308.  v0:= v1.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` @kind object;
  #L21430c.  return v0 @kind object;
}
procedure `okhttp3.CookieJar` `cookieJar`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.cookieJar:()Lokhttp3/CookieJar;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214320.  v0:= v1.`okhttp3.OkHttpClient.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L214324.  return v0 @kind object;
}
procedure `okhttp3.Dispatcher` `dispatcher`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214338.  v0:= v1.`okhttp3.OkHttpClient.dispatcher` @type ^`okhttp3.Dispatcher` @kind object;
  #L21433c.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214350.  v0:= v1.`okhttp3.OkHttpClient.dns` @type ^`okhttp3.Dns` @kind object;
  #L214354.  return v0 @kind object;
}
procedure `okhttp3.EventListener$Factory` `eventListenerFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.eventListenerFactory:()Lokhttp3/EventListener$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214368.  v0:= v1.`okhttp3.OkHttpClient.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` @kind object;
  #L21436c.  return v0 @kind object;
}
procedure `boolean` `followRedirects`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.followRedirects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214380.  v0:= v1.`okhttp3.OkHttpClient.followRedirects` @type ^`boolean` @kind boolean;
  #L214384.  return v0;
}
procedure `boolean` `followSslRedirects`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.followSslRedirects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214398.  v0:= v1.`okhttp3.OkHttpClient.followSslRedirects` @type ^`boolean` @kind boolean;
  #L21439c.  return v0;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2143b0.  v0:= v1.`okhttp3.OkHttpClient.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L2143b4.  return v0 @kind object;
}
procedure `java.util.List` `interceptors`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.interceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2143c8.  v0:= v1.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L2143cc.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.InternalCache` `internalCache`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.internalCache:()Lokhttp3/internal/cache/InternalCache;` @AccessFlag  {
    temp;
    v0;

  #L2143e0.  v0:= v1.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L2143e4.  if v0 == 0 then goto L2143f2;
  #L2143e8.  v0:= v1.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L2143ec.  v0:= v0.`okhttp3.Cache.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2143f0.  return v0 @kind object;
  #L2143f2.  v0:= v1.`okhttp3.OkHttpClient.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2143f6.  goto L2143f0;
}
procedure `java.util.List` `networkInterceptors`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.networkInterceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214408.  v0:= v1.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L21440c.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `newBuilder`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.newBuilder:()Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214420.  v0:= new `okhttp3.OkHttpClient$Builder`;
  #L214424.  call `<init>`(v0, v1) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:(Lokhttp3/OkHttpClient;)V` @kind direct;
  #L21442a.  return v0 @kind object;
}
procedure `okhttp3.Call` `newCall`(`okhttp3.OkHttpClient` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/OkHttpClient;.newCall:(Lokhttp3/Request;)Lokhttp3/Call;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21443c.  v0:= 0I;
  #L21443e.  call temp:= `newRealCall`(v1, v2, v0) @signature `Lokhttp3/RealCall;.newRealCall:(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)Lokhttp3/RealCall;` @kind static;
  #L214444.  v0:= temp @kind object;
  #L214446.  return v0 @kind object;
}
procedure `okhttp3.WebSocket` `newWebSocket`(`okhttp3.OkHttpClient` v6 @kind this, `okhttp3.Request` v7 @kind object @name `request`, `okhttp3.WebSocketListener` v8 @kind object @name `listener`) @signature `Lokhttp3/OkHttpClient;.newWebSocket:(Lokhttp3/Request;Lokhttp3/WebSocketListener;)Lokhttp3/WebSocket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L214458.  v0:= new `okhttp3.internal.ws.RealWebSocket`;
  #L21445c.  v3:= new `java.util.Random`;
  #L214460.  call `<init>`(v3) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L214466.  v1:= v6.`okhttp3.OkHttpClient.pingInterval` @type ^`int`;
  #L21446a.  v4:= (`long`) v1 @kind i2l;
  #L21446c.  v1:= v7 @kind object;
  #L21446e.  v2:= v8 @kind object;
  #L214470.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/ws/RealWebSocket;.<init>:(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V` @kind direct;
  #L214476.  call `connect`(v0, v6) @signature `Lokhttp3/internal/ws/RealWebSocket;.connect:(Lokhttp3/OkHttpClient;)V` @kind virtual;
  #L21447c.  return v0 @kind object;
}
procedure `int` `pingIntervalMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.pingIntervalMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214490.  v0:= v1.`okhttp3.OkHttpClient.pingInterval` @type ^`int`;
  #L214494.  return v0;
}
procedure `java.util.List` `protocols`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2144a8.  v0:= v1.`okhttp3.OkHttpClient.protocols` @type ^`java.util.List` @kind object;
  #L2144ac.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2144c0.  v0:= v1.`okhttp3.OkHttpClient.proxy` @type ^`java.net.Proxy` @kind object;
  #L2144c4.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2144d8.  v0:= v1.`okhttp3.OkHttpClient.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L2144dc.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2144f0.  v0:= v1.`okhttp3.OkHttpClient.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L2144f4.  return v0 @kind object;
}
procedure `int` `readTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.readTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214508.  v0:= v1.`okhttp3.OkHttpClient.readTimeout` @type ^`int`;
  #L21450c.  return v0;
}
procedure `boolean` `retryOnConnectionFailure`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214520.  v0:= v1.`okhttp3.OkHttpClient.retryOnConnectionFailure` @type ^`boolean` @kind boolean;
  #L214524.  return v0;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214538.  v0:= v1.`okhttp3.OkHttpClient.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L21453c.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214550.  v0:= v1.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L214554.  return v0 @kind object;
}
procedure `int` `writeTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.writeTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214568.  v0:= v1.`okhttp3.OkHttpClient.writeTimeout` @type ^`int`;
  #L21456c.  return v0;
}

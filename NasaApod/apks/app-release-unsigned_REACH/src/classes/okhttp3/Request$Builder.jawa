record `okhttp3.Request$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.RequestBody` `okhttp3.Request$Builder.body` @AccessFlag ;
  `okhttp3.Headers$Builder` `okhttp3.Request$Builder.headers` @AccessFlag ;
  `java.lang.String` `okhttp3.Request$Builder.method` @AccessFlag ;
  `java.lang.Object` `okhttp3.Request$Builder.tag` @AccessFlag ;
  `okhttp3.HttpUrl` `okhttp3.Request$Builder.url` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19bf80.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19bf86.  v0:= "GET" @kind object;
  #L19bf8a.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L19bf8e.  v0:= new `okhttp3.Headers$Builder`;
  #L19bf92.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L19bf98.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19bf9c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L19bfb0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19bfb6.  v0:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19bfba.  v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L19bfbe.  v0:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19bfc2.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L19bfc6.  v0:= v2.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19bfca.  v1.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19bfce.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19bfd2.  v1.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L19bfd6.  v0:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19bfda.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bfe0.  v0:= temp @kind object;
  #L19bfe2.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19bfe6.  return @kind void;
}
procedure `okhttp3.Request$Builder` `addHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bff8.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19bffc.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c002.  return v1 @kind object;
}
procedure `okhttp3.Request` `build`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c014.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19c018.  if v0 != 0 then goto L19c02c;
  #L19c01c.  v0:= new `java.lang.IllegalStateException`;
  #L19c020.  v1:= "url == null" @kind object;
  #L19c024.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c02a.  throw v0;
  #L19c02c.  v0:= new `okhttp3.Request`;
  #L19c030.  call `<init>`(v0, v2) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @kind direct;
  #L19c036.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `cacheControl`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.CacheControl` v3 @kind object @name `cacheControl`) @signature `Lokhttp3/Request$Builder;.cacheControl:(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c048.  call temp:= `toString`(v3) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c04e.  v0:= temp @kind object;
  #L19c050.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19c056.  v1:= temp;
  #L19c058.  if v1 == 0 then goto L19c06a;
  #L19c05c.  v1:= "Cache-Control" @kind object;
  #L19c060.  call temp:= `removeHeader`(v2, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c066.  v1:= temp @kind object;
  #L19c068.  return v1 @kind object;
  #L19c06a.  v1:= "Cache-Control" @kind object;
  #L19c06e.  call temp:= `header`(v2, v1, v0) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c074.  v1:= temp @kind object;
  #L19c076.  goto L19c068;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.delete:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c088.  v0:= `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` @kind object;
  #L19c08c.  call temp:= `delete`(v1, v0) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c092.  v0:= temp @kind object;
  #L19c094.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c0a8.  v0:= "DELETE" @kind object;
  #L19c0ac.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c0b2.  v0:= temp @kind object;
  #L19c0b4.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `get`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.get:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c0c8.  v0:= "GET" @kind object;
  #L19c0cc.  v1:= 0I;
  #L19c0ce.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c0d4.  v0:= temp @kind object;
  #L19c0d6.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `head`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.head:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c0e8.  v0:= "HEAD" @kind object;
  #L19c0ec.  v1:= 0I;
  #L19c0ee.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c0f4.  v0:= temp @kind object;
  #L19c0f6.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `header`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c108.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19c10c.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c112.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `headers`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object @name `headers`) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c124.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c12a.  v0:= temp @kind object;
  #L19c12c.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19c130.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `method`(`okhttp3.Request$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `method`, `okhttp3.RequestBody` v5 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19c144.  if v4 != 0 then goto L19c158;
  #L19c148.  v0:= new `java.lang.NullPointerException`;
  #L19c14c.  v1:= "method == null" @kind object;
  #L19c150.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c156.  throw v0;
  #L19c158.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c15e.  v0:= temp;
  #L19c160.  if v0 != 0 then goto L19c174;
  #L19c164.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c168.  v1:= "method.length() == 0" @kind object;
  #L19c16c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c172.  throw v0;
  #L19c174.  if v5 == 0 then goto L19c1c2;
  #L19c178.  call temp:= `permitsRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L19c17e.  v0:= temp;
  #L19c180.  if v0 != 0 then goto L19c1c2;
  #L19c184.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c188.  v1:= new `java.lang.StringBuilder`;
  #L19c18c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c192.  v2:= "method " @kind object;
  #L19c196.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c19c.  v1:= temp @kind object;
  #L19c19e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c1a4.  v1:= temp @kind object;
  #L19c1a6.  v2:= " must not have a request body." @kind object;
  #L19c1aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c1b0.  v1:= temp @kind object;
  #L19c1b2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c1b8.  v1:= temp @kind object;
  #L19c1ba.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c1c0.  throw v0;
  #L19c1c2.  if v5 != 0 then goto L19c210;
  #L19c1c6.  call temp:= `requiresRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L19c1cc.  v0:= temp;
  #L19c1ce.  if v0 == 0 then goto L19c210;
  #L19c1d2.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c1d6.  v1:= new `java.lang.StringBuilder`;
  #L19c1da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c1e0.  v2:= "method " @kind object;
  #L19c1e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c1ea.  v1:= temp @kind object;
  #L19c1ec.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c1f2.  v1:= temp @kind object;
  #L19c1f4.  v2:= " must have a request body." @kind object;
  #L19c1f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c1fe.  v1:= temp @kind object;
  #L19c200.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c206.  v1:= temp @kind object;
  #L19c208.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c20e.  throw v0;
  #L19c210.  v3.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v4 @kind object;
  #L19c214.  v3.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v5 @kind object;
  #L19c218.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `patch`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.patch:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c22c.  v0:= "PATCH" @kind object;
  #L19c230.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c236.  v0:= temp @kind object;
  #L19c238.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `post`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c24c.  v0:= "POST" @kind object;
  #L19c250.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c256.  v0:= temp @kind object;
  #L19c258.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `put`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.put:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c26c.  v0:= "PUT" @kind object;
  #L19c270.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c276.  v0:= temp @kind object;
  #L19c278.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `removeHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c28c.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19c290.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c296.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v0 @kind this, `java.lang.Object` v1 @kind object @name `tag`) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19c2a8.  v0.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v1 @kind object;
  #L19c2ac.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19c2c0.  v7:= 4I;
  #L19c2c2.  v5:= 3I;
  #L19c2c4.  v1:= 1I;
  #L19c2c6.  v2:= 0I;
  #L19c2c8.  if v9 != 0 then goto L19c2dc;
  #L19c2cc.  v0:= new `java.lang.NullPointerException`;
  #L19c2d0.  v1:= "url == null" @kind object;
  #L19c2d4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c2da.  throw v0;
  #L19c2dc.  v3:= "ws:" @kind object;
  #L19c2e0.  v0:= v9 @kind object;
  #L19c2e2.  v4:= v2;
  #L19c2e4.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19c2ea.  v0:= temp;
  #L19c2ec.  if v0 == 0 then goto L19c35c;
  #L19c2f0.  v0:= new `java.lang.StringBuilder`;
  #L19c2f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c2fa.  v1:= "http:" @kind object;
  #L19c2fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c304.  v0:= temp @kind object;
  #L19c306.  call temp:= `substring`(v9, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19c30c.  v1:= temp @kind object;
  #L19c30e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c314.  v0:= temp @kind object;
  #L19c316.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c31c.  v9:= temp @kind object;
  #L19c31e.  call temp:= `parse`(v9) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19c324.  v6:= temp @kind object;
  #L19c326.  if v6 != 0 then goto L19c3a2;
  #L19c32a.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c32e.  v1:= new `java.lang.StringBuilder`;
  #L19c332.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c338.  v2:= "unexpected url: " @kind object;
  #L19c33c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c342.  v1:= temp @kind object;
  #L19c344.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c34a.  v1:= temp @kind object;
  #L19c34c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c352.  v1:= temp @kind object;
  #L19c354.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c35a.  throw v0;
  #L19c35c.  v3:= "wss:" @kind object;
  #L19c360.  v0:= v9 @kind object;
  #L19c362.  v4:= v2;
  #L19c364.  v5:= v7;
  #L19c366.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19c36c.  v0:= temp;
  #L19c36e.  if v0 == 0 then goto L19c31e;
  #L19c372.  v0:= new `java.lang.StringBuilder`;
  #L19c376.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c37c.  v1:= "https:" @kind object;
  #L19c380.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c386.  v0:= temp @kind object;
  #L19c388.  call temp:= `substring`(v9, v7) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19c38e.  v1:= temp @kind object;
  #L19c390.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c396.  v0:= temp @kind object;
  #L19c398.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c39e.  v9:= temp @kind object;
  #L19c3a0.  goto L19c31e;
  #L19c3a2.  call temp:= `url`(v8, v6) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c3a8.  v0:= temp @kind object;
  #L19c3aa.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v4 @kind this, `java.net.URL` v5 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Ljava/net/URL;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c3bc.  if v5 != 0 then goto L19c3d0;
  #L19c3c0.  v1:= new `java.lang.NullPointerException`;
  #L19c3c4.  v2:= "url == null" @kind object;
  #L19c3c8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c3ce.  throw v1;
  #L19c3d0.  call temp:= `get`(v5) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @kind static;
  #L19c3d6.  v0:= temp @kind object;
  #L19c3d8.  if v0 != 0 then goto L19c40e;
  #L19c3dc.  v1:= new `java.lang.IllegalArgumentException`;
  #L19c3e0.  v2:= new `java.lang.StringBuilder`;
  #L19c3e4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c3ea.  v3:= "unexpected url: " @kind object;
  #L19c3ee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c3f4.  v2:= temp @kind object;
  #L19c3f6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c3fc.  v2:= temp @kind object;
  #L19c3fe.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c404.  v2:= temp @kind object;
  #L19c406.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c40c.  throw v1;
  #L19c40e.  call temp:= `url`(v4, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c414.  v1:= temp @kind object;
  #L19c416.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c428.  if v3 != 0 then goto L19c43c;
  #L19c42c.  v0:= new `java.lang.NullPointerException`;
  #L19c430.  v1:= "url == null" @kind object;
  #L19c434.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c43a.  throw v0;
  #L19c43c.  v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L19c440.  return v2 @kind object;
}

record `retrofit2.ParameterHandler$QueryMap` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$QueryMap.encoded` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$QueryMap.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$QueryMap` v0 @kind this, `retrofit2.Converter` v1 @kind object, `boolean` v2 @name `encoded`) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L220998.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L22099e.  v0.`retrofit2.ParameterHandler$QueryMap.valueConverter` @type ^`retrofit2.Converter` := v1 @kind object;
  #L2209a2.  v0.`retrofit2.ParameterHandler$QueryMap.encoded` @type ^`boolean` := v2 @kind boolean;
  #L2209a6.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$QueryMap` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$QueryMap;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L2209b8.  v2:= (`java.util.Map`) v2 @kind object;
  #L2209bc.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$QueryMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @kind virtual;
  #L2209c2.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$QueryMap` v7 @kind this, `retrofit2.RequestBuilder` v8 @kind object @name `builder`, `java.util.Map` v9 @kind object) @signature `Lretrofit2/ParameterHandler$QueryMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2209d4.  if v9 != 0 then goto L2209e8;
  #L2209d8.  v4:= new `java.lang.IllegalArgumentException`;
  #L2209dc.  v5:= "Query map was null." @kind object;
  #L2209e0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2209e6.  throw v4;
  #L2209e8.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2209ee.  v4:= temp @kind object;
  #L2209f0.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2209f6.  v4:= temp @kind object;
  #L2209f8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2209fe.  v5:= temp;
  #L220a00.  if v5 == 0 then goto L220b16;
  #L220a04.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L220a0a.  v1:= temp @kind object;
  #L220a0c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L220a10.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L220a16.  v2:= temp @kind object;
  #L220a18.  v2:= (`java.lang.String`) v2 @kind object;
  #L220a1c.  if v2 != 0 then goto L220a30;
  #L220a20.  v4:= new `java.lang.IllegalArgumentException`;
  #L220a24.  v5:= "Query map contained null key." @kind object;
  #L220a28.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220a2e.  throw v4;
  #L220a30.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L220a36.  v3:= temp @kind object;
  #L220a38.  if v3 != 0 then goto L220a7a;
  #L220a3c.  v4:= new `java.lang.IllegalArgumentException`;
  #L220a40.  v5:= new `java.lang.StringBuilder`;
  #L220a44.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L220a4a.  v6:= "Query map contained null value for key '" @kind object;
  #L220a4e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220a54.  v5:= temp @kind object;
  #L220a56.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220a5c.  v5:= temp @kind object;
  #L220a5e.  v6:= "'." @kind object;
  #L220a62.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220a68.  v5:= temp @kind object;
  #L220a6a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L220a70.  v5:= temp @kind object;
  #L220a72.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220a78.  throw v4;
  #L220a7a.  v5:= v7.`retrofit2.ParameterHandler$QueryMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L220a7e.  call temp:= `convert`(v5, v3) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L220a84.  v0:= temp @kind object;
  #L220a86.  v0:= (`java.lang.String`) v0 @kind object;
  #L220a8a.  if v0 != 0 then goto L220b08;
  #L220a8e.  v4:= new `java.lang.IllegalArgumentException`;
  #L220a92.  v5:= new `java.lang.StringBuilder`;
  #L220a96.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L220a9c.  v6:= "Query map value '" @kind object;
  #L220aa0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220aa6.  v5:= temp @kind object;
  #L220aa8.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220aae.  v5:= temp @kind object;
  #L220ab0.  v6:= "' converted to null by " @kind object;
  #L220ab4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220aba.  v5:= temp @kind object;
  #L220abc.  v6:= v7.`retrofit2.ParameterHandler$QueryMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L220ac0.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L220ac6.  v6:= temp @kind object;
  #L220ac8.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L220ace.  v6:= temp @kind object;
  #L220ad0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220ad6.  v5:= temp @kind object;
  #L220ad8.  v6:= " for key '" @kind object;
  #L220adc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220ae2.  v5:= temp @kind object;
  #L220ae4.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220aea.  v5:= temp @kind object;
  #L220aec.  v6:= "'." @kind object;
  #L220af0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220af6.  v5:= temp @kind object;
  #L220af8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L220afe.  v5:= temp @kind object;
  #L220b00.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220b06.  throw v4;
  #L220b08.  v5:= v7.`retrofit2.ParameterHandler$QueryMap.encoded` @type ^`boolean` @kind boolean;
  #L220b0c.  call `addQueryParam`(v8, v2, v0, v5) @signature `Lretrofit2/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L220b12.  goto L2209f8;
  #L220b16.  return @kind void;
}

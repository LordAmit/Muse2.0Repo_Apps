record `retrofit2.ServiceMethod$Builder` @kind class @AccessFlag FINAL {
  `retrofit2.CallAdapter` `retrofit2.ServiceMethod$Builder.callAdapter` @AccessFlag ;
  `okhttp3.MediaType` `retrofit2.ServiceMethod$Builder.contentType` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotBody` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotField` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPart` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPath` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotQuery` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotUrl` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.hasBody` @AccessFlag ;
  `okhttp3.Headers` `retrofit2.ServiceMethod$Builder.headers` @AccessFlag ;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.httpMethod` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isFormEncoded` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isMultipart` @AccessFlag ;
  `java.lang.reflect.Method` `retrofit2.ServiceMethod$Builder.method` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[] `retrofit2.ServiceMethod$Builder.methodAnnotations` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[][] `retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @AccessFlag FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.ServiceMethod$Builder.parameterHandlers` @AccessFlag ;
  `java.lang.reflect.Type`[] `retrofit2.ServiceMethod$Builder.parameterTypes` @AccessFlag FINAL;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.relativeUrl` @AccessFlag ;
  `java.util.Set` `retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @AccessFlag ;
  `retrofit2.Converter` `retrofit2.ServiceMethod$Builder.responseConverter` @AccessFlag ;
  `java.lang.reflect.Type` `retrofit2.ServiceMethod$Builder.responseType` @AccessFlag ;
  `retrofit2.Retrofit` `retrofit2.ServiceMethod$Builder.retrofit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `retrofit2.Retrofit` v2 @kind object @name `retrofit`, `java.lang.reflect.Method` v3 @kind object @name `method`) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1afe74.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1afe7a.  v1.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` := v2 @kind object;
  #L1afe7e.  v1.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L1afe82.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1afe88.  v0:= temp @kind object;
  #L1afe8a.  v1.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L1afe8e.  call temp:= `getGenericParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L1afe94.  v0:= temp @kind object;
  #L1afe96.  v1.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L1afe9a.  call temp:= `getParameterAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1afea0.  v0:= temp @kind object;
  #L1afea2.  v1.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] := v0 @kind object;
  #L1afea6.  return @kind void;
}
procedure `retrofit2.CallAdapter` `createCallAdapter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1afeb8.  v4:= 1I;
  #L1afeba.  v5:= 0I;
  #L1afebc.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1afec0.  call temp:= `getGenericReturnType`(v3) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1afec6.  v2:= temp @kind object;
  #L1afec8.  call temp:= `hasUnresolvableType`(v2) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1afece.  v3:= temp;
  #L1afed0.  if v3 == 0 then goto L1afeea;
  #L1afed4.  v3:= "Method return type must not include a type variable or wildcard: %s" @kind object;
  #L1afed8.  v4:= new `java.lang.Object`[v4];
  #L1afedc.  v4[v5]:= v2 @kind object;
  #L1afee0.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1afee6.  v3:= temp @kind object;
  #L1afee8.  throw v3;
  #L1afeea.  v3:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L1afeee.  if v2 != v3 then goto L1aff04;
  #L1afef2.  v3:= "Service methods cannot return void." @kind object;
  #L1afef6.  v4:= new `java.lang.Object`[v5];
  #L1afefa.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1aff00.  v3:= temp @kind object;
  #L1aff02.  throw v3;
  #L1aff04.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1aff08.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1aff0e.  v0:= temp @kind object;
  #Try_start0.  
  #L1aff10.  v3:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1aff14.  call temp:= `callAdapter`(v3, v2, v0) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #Try_end0.  
  #L1aff1a.  v3:= temp @kind object;
  #L1aff1c.  return v3 @kind object;
  #L1aff1e.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1aff20.  v3:= "Unable to create call adapter for %s" @kind object;
  #L1aff24.  v4:= new `java.lang.Object`[v4];
  #L1aff28.  v4[v5]:= v2 @kind object;
  #L1aff2c.  call temp:= `methodError`(v6, v1, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1aff32.  v3:= temp @kind object;
  #L1aff34.  throw v3;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1aff1e;
}
procedure `retrofit2.Converter` `createResponseConverter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1aff58.  v2:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1aff5c.  call temp:= `getAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1aff62.  v0:= temp @kind object;
  #Try_start0.  
  #L1aff64.  v2:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1aff68.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1aff6c.  call temp:= `responseBodyConverter`(v2, v3, v0) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #Try_end0.  
  #L1aff72.  v2:= temp @kind object;
  #L1aff74.  return v2 @kind object;
  #L1aff76.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1aff78.  v2:= "Unable to create converter for %s" @kind object;
  #L1aff7c.  v3:= 1I;
  #L1aff7e.  v3:= new `java.lang.Object`[v3];
  #L1aff82.  v4:= 0I;
  #L1aff84.  v5:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1aff88.  v3[v4]:= v5 @kind object;
  #L1aff8c.  call temp:= `methodError`(v6, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1aff92.  v2:= temp @kind object;
  #L1aff94.  throw v2;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1aff76;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1affb8.  v0:= 0I;
  #L1affba.  call temp:= `methodError`(v1, v0, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1affc0.  v0:= temp @kind object;
  #L1affc2.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v3 @kind this, `java.lang.Throwable` v4 @kind object @name `cause`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1affd4.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1affda.  v5:= temp @kind object;
  #L1affdc.  v0:= new `java.lang.IllegalArgumentException`;
  #L1affe0.  v1:= new `java.lang.StringBuilder`;
  #L1affe4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1affea.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afff0.  v1:= temp @kind object;
  #L1afff2.  v2:= "\n    for method " @kind object;
  #L1afff6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afffc.  v1:= temp @kind object;
  #L1afffe.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b0002.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L1b0008.  v2:= temp @kind object;
  #L1b000a.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0010.  v2:= temp @kind object;
  #L1b0012.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0018.  v1:= temp @kind object;
  #L1b001a.  v2:= "." @kind object;
  #L1b001e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0024.  v1:= temp @kind object;
  #L1b0026.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b002a.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b0030.  v2:= temp @kind object;
  #L1b0032.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0038.  v1:= temp @kind object;
  #L1b003a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0040.  v1:= temp @kind object;
  #L1b0042.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1b0048.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `int` v3 @name `p`, `java.lang.String` v4 @kind object @name `message`, `java.lang.Object`[] v5 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b005c.  v0:= new `java.lang.StringBuilder`;
  #L1b0060.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0066.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b006c.  v0:= temp @kind object;
  #L1b006e.  v1:= " (parameter #" @kind object;
  #L1b0072.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0078.  v0:= temp @kind object;
  #L1b007a.  v1:= v3 + 1;
  #L1b007e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0084.  v0:= temp @kind object;
  #L1b0086.  v1:= ")" @kind object;
  #L1b008a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0090.  v0:= temp @kind object;
  #L1b0092.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0098.  v0:= temp @kind object;
  #L1b009a.  call temp:= `methodError`(v2, v0, v5) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b00a0.  v0:= temp @kind object;
  #L1b00a2.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `java.lang.Throwable` v3 @kind object @name `cause`, `int` v4 @name `p`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b00b4.  v0:= new `java.lang.StringBuilder`;
  #L1b00b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b00be.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b00c4.  v0:= temp @kind object;
  #L1b00c6.  v1:= " (parameter #" @kind object;
  #L1b00ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b00d0.  v0:= temp @kind object;
  #L1b00d2.  v1:= v4 + 1;
  #L1b00d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b00dc.  v0:= temp @kind object;
  #L1b00de.  v1:= ")" @kind object;
  #L1b00e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b00e8.  v0:= temp @kind object;
  #L1b00ea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b00f0.  v0:= temp @kind object;
  #L1b00f2.  call temp:= `methodError`(v2, v3, v0, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b00f8.  v0:= temp @kind object;
  #L1b00fa.  return v0 @kind object;
}
procedure `okhttp3.Headers` `parseHeaders`(`retrofit2.ServiceMethod$Builder` v11 @kind this, `java.lang.String`[] v12 @kind object @name `headers`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b010c.  v10:= 1I;
  #L1b010e.  v7:= 0I;
  #L1b0110.  v0:= new `okhttp3.Headers$Builder`;
  #L1b0114.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1b011a.  v8:= length @variable v12;
  #L1b011c.  v6:= v7;
  #L1b011e.  if v6 >= v8 then goto L1b01c2;
  #L1b0122.  v2:= v12[v6] @kind object;
  #L1b0126.  v9:= 58I;
  #L1b012a.  call temp:= `indexOf`(v2, v9) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b0130.  v1:= temp;
  #L1b0132.  v9:= -1I;
  #L1b0134.  if v1 == v9 then goto L1b014c;
  #L1b0138.  if v1 == 0 then goto L1b014c;
  #L1b013c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b0142.  v9:= temp;
  #L1b0144.  v9:= v9 + -1;
  #L1b0148.  if v1 != v9 then goto L1b0162;
  #L1b014c.  v6:= "@Headers value must be in the form \"Name: Value\". Found: \"%s\"" @kind object;
  #L1b0150.  v8:= new `java.lang.Object`[v10];
  #L1b0154.  v8[v7]:= v2 @kind object;
  #L1b0158.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b015e.  v6:= temp @kind object;
  #L1b0160.  throw v6;
  #L1b0162.  call temp:= `substring`(v2, v7, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1b0168.  v3:= temp @kind object;
  #L1b016a.  v9:= v1 + 1;
  #L1b016e.  call temp:= `substring`(v2, v9) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b0174.  v9:= temp @kind object;
  #L1b0176.  call temp:= `trim`(v9) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1b017c.  v4:= temp @kind object;
  #L1b017e.  v9:= "Content-Type" @kind object;
  #L1b0182.  call temp:= `equalsIgnoreCase`(v9, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1b0188.  v9:= temp;
  #L1b018a.  if v9 == 0 then goto L1b01ba;
  #L1b018e.  call temp:= `parse`(v4) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1b0194.  v5:= temp @kind object;
  #L1b0196.  if v5 != 0 then goto L1b01b0;
  #L1b019a.  v6:= "Malformed content type: %s" @kind object;
  #L1b019e.  v8:= new `java.lang.Object`[v10];
  #L1b01a2.  v8[v7]:= v4 @kind object;
  #L1b01a6.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b01ac.  v6:= temp @kind object;
  #L1b01ae.  throw v6;
  #L1b01b0.  v11.`retrofit2.ServiceMethod$Builder.contentType` @type ^`okhttp3.MediaType` := v5 @kind object;
  #L1b01b4.  v6:= v6 + 1;
  #L1b01b8.  goto L1b011e;
  #L1b01ba.  call temp:= `add`(v0, v3, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1b01c0.  goto L1b01b4;
  #L1b01c2.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1b01c8.  v6:= temp @kind object;
  #L1b01ca.  return v6 @kind object;
}
procedure `void` `parseHttpMethodAndPath`(`retrofit2.ServiceMethod$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `httpMethod`, `java.lang.String` v10 @kind object @name `value`, `boolean` v11 @name `hasBody`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b01dc.  v7:= 1I;
  #L1b01de.  v6:= 0I;
  #L1b01e0.  v3:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b01e4.  if v3 == 0 then goto L1b0208;
  #L1b01e8.  v3:= "Only one HTTP method is allowed. Found: %s and %s." @kind object;
  #L1b01ec.  v4:= 2I;
  #L1b01ee.  v4:= new `java.lang.Object`[v4];
  #L1b01f2.  v5:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b01f6.  v4[v6]:= v5 @kind object;
  #L1b01fa.  v4[v7]:= v9 @kind object;
  #L1b01fe.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0204.  v3:= temp @kind object;
  #L1b0206.  throw v3;
  #L1b0208.  v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` := v9 @kind object;
  #L1b020c.  v8.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` := v11 @kind boolean;
  #L1b0210.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1b0216.  v3:= temp;
  #L1b0218.  if v3 == 0 then goto L1b021e;
  #L1b021c.  return @kind void;
  #L1b021e.  v3:= 63I;
  #L1b0222.  call temp:= `indexOf`(v10, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b0228.  v2:= temp;
  #L1b022a.  v3:= -1I;
  #L1b022c.  if v2 == v3 then goto L1b027a;
  #L1b0230.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b0236.  v3:= temp;
  #L1b0238.  v3:= v3 + -1;
  #L1b023c.  if v2 >= v3 then goto L1b027a;
  #L1b0240.  v3:= v2 + 1;
  #L1b0244.  call temp:= `substring`(v10, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b024a.  v1:= temp @kind object;
  #L1b024c.  v3:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b0250.  call temp:= `matcher`(v3, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b0256.  v0:= temp @kind object;
  #L1b0258.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L1b025e.  v3:= temp;
  #L1b0260.  if v3 == 0 then goto L1b027a;
  #L1b0264.  v3:= "URL query string \"%s\" must not have replace block. For dynamic query parameters use @Query." @kind object;
  #L1b0268.  v4:= new `java.lang.Object`[v7];
  #L1b026c.  v4[v6]:= v1 @kind object;
  #L1b0270.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0276.  v3:= temp @kind object;
  #L1b0278.  throw v3;
  #L1b027a.  v8.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` := v10 @kind object;
  #L1b027e.  call temp:= `parsePathParameters`(v10) @signature `Lretrofit2/ServiceMethod;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L1b0284.  v3:= temp @kind object;
  #L1b0286.  v8.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` := v3 @kind object;
  #L1b028a.  goto L1b021c;
}
procedure `void` `parseMethodAnnotation`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `java.lang.annotation.Annotation` v7 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b029c.  v5:= 1I;
  #L1b029e.  v4:= 0I;
  #L1b02a0.  v2:= instanceof @variable v7 @type ^`retrofit2.http.DELETE` @kind boolean;
  #L1b02a4.  if v2 == 0 then goto L1b02c0;
  #L1b02a8.  v2:= "DELETE" @kind object;
  #L1b02ac.  v7:= (`retrofit2.http.DELETE`) v7 @kind object;
  #L1b02b0.  call temp:= `value`(v7) @signature `Lretrofit2/http/DELETE;.value:()Ljava/lang/String;` @kind interface;
  #L1b02b6.  v3:= temp @kind object;
  #L1b02b8.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b02be.  return @kind void;
  #L1b02c0.  v2:= instanceof @variable v7 @type ^`retrofit2.http.GET` @kind boolean;
  #L1b02c4.  if v2 == 0 then goto L1b02e0;
  #L1b02c8.  v2:= "GET" @kind object;
  #L1b02cc.  v7:= (`retrofit2.http.GET`) v7 @kind object;
  #L1b02d0.  call temp:= `value`(v7) @signature `Lretrofit2/http/GET;.value:()Ljava/lang/String;` @kind interface;
  #L1b02d6.  v3:= temp @kind object;
  #L1b02d8.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b02de.  goto L1b02be;
  #L1b02e0.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HEAD` @kind boolean;
  #L1b02e4.  if v2 == 0 then goto L1b0324;
  #L1b02e8.  v2:= "HEAD" @kind object;
  #L1b02ec.  v7:= (`retrofit2.http.HEAD`) v7 @kind object;
  #L1b02f0.  call temp:= `value`(v7) @signature `Lretrofit2/http/HEAD;.value:()Ljava/lang/String;` @kind interface;
  #L1b02f6.  v3:= temp @kind object;
  #L1b02f8.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b02fe.  v2:= constclass @type ^`java.lang.Void` @kind object;
  #L1b0302.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b0306.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b030c.  v2:= temp;
  #L1b030e.  if v2 != 0 then goto L1b02be;
  #L1b0312.  v2:= "HEAD method must use Void as response type." @kind object;
  #L1b0316.  v3:= new `java.lang.Object`[v4];
  #L1b031a.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0320.  v2:= temp @kind object;
  #L1b0322.  throw v2;
  #L1b0324.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PATCH` @kind boolean;
  #L1b0328.  if v2 == 0 then goto L1b0344;
  #L1b032c.  v2:= "PATCH" @kind object;
  #L1b0330.  v7:= (`retrofit2.http.PATCH`) v7 @kind object;
  #L1b0334.  call temp:= `value`(v7) @signature `Lretrofit2/http/PATCH;.value:()Ljava/lang/String;` @kind interface;
  #L1b033a.  v3:= temp @kind object;
  #L1b033c.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b0342.  goto L1b02be;
  #L1b0344.  v2:= instanceof @variable v7 @type ^`retrofit2.http.POST` @kind boolean;
  #L1b0348.  if v2 == 0 then goto L1b0364;
  #L1b034c.  v2:= "POST" @kind object;
  #L1b0350.  v7:= (`retrofit2.http.POST`) v7 @kind object;
  #L1b0354.  call temp:= `value`(v7) @signature `Lretrofit2/http/POST;.value:()Ljava/lang/String;` @kind interface;
  #L1b035a.  v3:= temp @kind object;
  #L1b035c.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b0362.  goto L1b02be;
  #L1b0364.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PUT` @kind boolean;
  #L1b0368.  if v2 == 0 then goto L1b0384;
  #L1b036c.  v2:= "PUT" @kind object;
  #L1b0370.  v7:= (`retrofit2.http.PUT`) v7 @kind object;
  #L1b0374.  call temp:= `value`(v7) @signature `Lretrofit2/http/PUT;.value:()Ljava/lang/String;` @kind interface;
  #L1b037a.  v3:= temp @kind object;
  #L1b037c.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b0382.  goto L1b02be;
  #L1b0384.  v2:= instanceof @variable v7 @type ^`retrofit2.http.OPTIONS` @kind boolean;
  #L1b0388.  if v2 == 0 then goto L1b03a4;
  #L1b038c.  v2:= "OPTIONS" @kind object;
  #L1b0390.  v7:= (`retrofit2.http.OPTIONS`) v7 @kind object;
  #L1b0394.  call temp:= `value`(v7) @signature `Lretrofit2/http/OPTIONS;.value:()Ljava/lang/String;` @kind interface;
  #L1b039a.  v3:= temp @kind object;
  #L1b039c.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b03a2.  goto L1b02be;
  #L1b03a4.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HTTP` @kind boolean;
  #L1b03a8.  if v2 == 0 then goto L1b03d4;
  #L1b03ac.  v1:= v7 @kind object;
  #L1b03ae.  v1:= (`retrofit2.http.HTTP`) v1 @kind object;
  #L1b03b2.  call temp:= `method`(v1) @signature `Lretrofit2/http/HTTP;.method:()Ljava/lang/String;` @kind interface;
  #L1b03b8.  v2:= temp @kind object;
  #L1b03ba.  call temp:= `path`(v1) @signature `Lretrofit2/http/HTTP;.path:()Ljava/lang/String;` @kind interface;
  #L1b03c0.  v3:= temp @kind object;
  #L1b03c2.  call temp:= `hasBody`(v1) @signature `Lretrofit2/http/HTTP;.hasBody:()Z` @kind interface;
  #L1b03c8.  v4:= temp;
  #L1b03ca.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b03d0.  goto L1b02be;
  #L1b03d4.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Headers` @kind boolean;
  #L1b03d8.  if v2 == 0 then goto L1b0410;
  #L1b03dc.  v7:= (`retrofit2.http.Headers`) v7 @kind object;
  #L1b03e0.  call temp:= `value`(v7) @signature `Lretrofit2/http/Headers;.value:()[Ljava/lang/String;` @kind interface;
  #L1b03e6.  v0:= temp @kind object;
  #L1b03e8.  v2:= length @variable v0;
  #L1b03ea.  if v2 != 0 then goto L1b0400;
  #L1b03ee.  v2:= "@Headers annotation is empty." @kind object;
  #L1b03f2.  v3:= new `java.lang.Object`[v4];
  #L1b03f6.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b03fc.  v2:= temp @kind object;
  #L1b03fe.  throw v2;
  #L1b0400.  call temp:= `parseHeaders`(v6, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @kind direct;
  #L1b0406.  v2:= temp @kind object;
  #L1b0408.  v6.`retrofit2.ServiceMethod$Builder.headers` @type ^`okhttp3.Headers` := v2 @kind object;
  #L1b040c.  goto L1b02be;
  #L1b0410.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Multipart` @kind boolean;
  #L1b0414.  if v2 == 0 then goto L1b043a;
  #L1b0418.  v2:= v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b041c.  if v2 == 0 then goto L1b0432;
  #L1b0420.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L1b0424.  v3:= new `java.lang.Object`[v4];
  #L1b0428.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b042e.  v2:= temp @kind object;
  #L1b0430.  throw v2;
  #L1b0432.  v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` := v5 @kind boolean;
  #L1b0436.  goto L1b02be;
  #L1b043a.  v2:= instanceof @variable v7 @type ^`retrofit2.http.FormUrlEncoded` @kind boolean;
  #L1b043e.  if v2 == 0 then goto L1b02be;
  #L1b0442.  v2:= v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b0446.  if v2 == 0 then goto L1b045c;
  #L1b044a.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L1b044e.  v3:= new `java.lang.Object`[v4];
  #L1b0452.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0458.  v2:= temp @kind object;
  #L1b045a.  throw v2;
  #L1b045c.  v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` := v5 @kind boolean;
  #L1b0460.  goto L1b02be;
}
procedure `retrofit2.ParameterHandler` `parseParameter`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `int` v7 @name `p`, `java.lang.reflect.Type` v8 @kind object @name `parameterType`, `java.lang.annotation.Annotation`[] v9 @kind object @name `annotations`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b0474.  v4:= 0I;
  #L1b0476.  v2:= 0I;
  #L1b0478.  v5:= length @variable v9;
  #L1b047a.  v3:= v4;
  #L1b047c.  if v3 >= v5 then goto L1b04b0;
  #L1b0480.  v0:= v9[v3] @kind object;
  #L1b0484.  call temp:= `parseParameterAnnotation`(v6, v7, v8, v9, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L1b048a.  v1:= temp @kind object;
  #L1b048c.  if v1 != 0 then goto L1b0496;
  #L1b0490.  v3:= v3 + 1;
  #L1b0494.  goto L1b047c;
  #L1b0496.  if v2 == 0 then goto L1b04ac;
  #L1b049a.  v3:= "Multiple Retrofit annotations found, only one allowed." @kind object;
  #L1b049e.  v4:= new `java.lang.Object`[v4];
  #L1b04a2.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b04a8.  v3:= temp @kind object;
  #L1b04aa.  throw v3;
  #L1b04ac.  v2:= v1 @kind object;
  #L1b04ae.  goto L1b0490;
  #L1b04b0.  if v2 != 0 then goto L1b04c6;
  #L1b04b4.  v3:= "No Retrofit annotation found." @kind object;
  #L1b04b8.  v4:= new `java.lang.Object`[v4];
  #L1b04bc.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b04c2.  v3:= temp @kind object;
  #L1b04c4.  throw v3;
  #L1b04c6.  return v2 @kind object;
}
procedure `retrofit2.ParameterHandler` `parseParameterAnnotation`(`retrofit2.ServiceMethod$Builder` v30 @kind this, `int` v31 @name `p`, `java.lang.reflect.Type` v32 @kind object @name `type`, `java.lang.annotation.Annotation`[] v33 @kind object @name `annotations`, `java.lang.annotation.Annotation` v34 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L1b04d8.  v0:= v34 @kind object;
  #L1b04dc.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Url` @kind boolean;
  #L1b04e0.  v26:= v0;
  #L1b04e4.  if v26 == 0 then goto L1b069a;
  #L1b04e8.  v0:= v30 @kind object;
  #L1b04ec.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b04f0.  v26:= v0;
  #L1b04f4.  if v26 == 0 then goto L1b0526;
  #L1b04f8.  v26:= "Multiple @Url method annotations found." @kind object;
  #L1b04fc.  v27:= 0I;
  #L1b0500.  v0:= v27;
  #L1b0504.  v0:= new `java.lang.Object`[v0];
  #L1b0508.  v27:= v0 @kind object;
  #L1b050c.  v0:= v30 @kind object;
  #L1b0510.  v1:= v31;
  #L1b0514.  v2:= v26 @kind object;
  #L1b0518.  v3:= v27 @kind object;
  #L1b051c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0522.  v26:= temp @kind object;
  #L1b0524.  throw v26;
  #L1b0526.  v0:= v30 @kind object;
  #L1b052a.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` @kind boolean;
  #L1b052e.  v26:= v0;
  #L1b0532.  if v26 == 0 then goto L1b0564;
  #L1b0536.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L1b053a.  v27:= 0I;
  #L1b053e.  v0:= v27;
  #L1b0542.  v0:= new `java.lang.Object`[v0];
  #L1b0546.  v27:= v0 @kind object;
  #L1b054a.  v0:= v30 @kind object;
  #L1b054e.  v1:= v31;
  #L1b0552.  v2:= v26 @kind object;
  #L1b0556.  v3:= v27 @kind object;
  #L1b055a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0560.  v26:= temp @kind object;
  #L1b0562.  throw v26;
  #L1b0564.  v0:= v30 @kind object;
  #L1b0568.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L1b056c.  v26:= v0;
  #L1b0570.  if v26 == 0 then goto L1b05a2;
  #L1b0574.  v26:= "A @Url parameter must not come after a @Query" @kind object;
  #L1b0578.  v27:= 0I;
  #L1b057c.  v0:= v27;
  #L1b0580.  v0:= new `java.lang.Object`[v0];
  #L1b0584.  v27:= v0 @kind object;
  #L1b0588.  v0:= v30 @kind object;
  #L1b058c.  v1:= v31;
  #L1b0590.  v2:= v26 @kind object;
  #L1b0594.  v3:= v27 @kind object;
  #L1b0598.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b059e.  v26:= temp @kind object;
  #L1b05a0.  throw v26;
  #L1b05a2.  v0:= v30 @kind object;
  #L1b05a6.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b05aa.  v26:= v0 @kind object;
  #L1b05ae.  if v26 == 0 then goto L1b05f4;
  #L1b05b2.  v26:= "@Url cannot be used with @%s URL" @kind object;
  #L1b05b6.  v27:= 1I;
  #L1b05ba.  v0:= v27;
  #L1b05be.  v0:= new `java.lang.Object`[v0];
  #L1b05c2.  v27:= v0 @kind object;
  #L1b05c6.  v28:= 0I;
  #L1b05ca.  v0:= v30 @kind object;
  #L1b05ce.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b05d2.  v29:= v0 @kind object;
  #L1b05d6.  v27[v28]:= v29 @kind object;
  #L1b05da.  v0:= v30 @kind object;
  #L1b05de.  v1:= v31;
  #L1b05e2.  v2:= v26 @kind object;
  #L1b05e6.  v3:= v27 @kind object;
  #L1b05ea.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b05f0.  v26:= temp @kind object;
  #L1b05f2.  throw v26;
  #L1b05f4.  v26:= 1I;
  #L1b05f8.  v0:= v26;
  #L1b05fc.  v1:= v30 @kind object;
  #L1b0600.  v1.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` := v0 @kind boolean;
  #L1b0604.  v26:= constclass @type ^`okhttp3.HttpUrl` @kind object;
  #L1b0608.  v0:= v32 @kind object;
  #L1b060c.  v1:= v26 @kind object;
  #L1b0610.  if v0 == v1 then goto L1b0660;
  #L1b0614.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b0618.  v0:= v32 @kind object;
  #L1b061c.  v1:= v26 @kind object;
  #L1b0620.  if v0 == v1 then goto L1b0660;
  #L1b0624.  v26:= constclass @type ^`java.net.URI` @kind object;
  #L1b0628.  v0:= v32 @kind object;
  #L1b062c.  v1:= v26 @kind object;
  #L1b0630.  if v0 == v1 then goto L1b0660;
  #L1b0634.  v0:= v32 @kind object;
  #L1b0638.  v0:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L1b063c.  v26:= v0;
  #L1b0640.  if v26 == 0 then goto L1b066c;
  #L1b0644.  v26:= "android.net.Uri" @kind object;
  #L1b0648.  v32:= (`java.lang.Class`) v32 @kind object;
  #L1b064c.  call temp:= `getName`(v32) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b0652.  v27:= temp @kind object;
  #L1b0654.  call temp:= `equals`(v26, v27) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b065a.  v26:= temp;
  #L1b065c.  if v26 == 0 then goto L1b066c;
  #L1b0660.  v26:= new `retrofit2.ParameterHandler$RelativeUrl`;
  #L1b0664.  call `<init>`(v26) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.<init>:()V` @kind direct;
  #L1b066a.  return v26 @kind object;
  #L1b066c.  v26:= "@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type." @kind object;
  #L1b0670.  v27:= 0I;
  #L1b0674.  v0:= v27;
  #L1b0678.  v0:= new `java.lang.Object`[v0];
  #L1b067c.  v27:= v0 @kind object;
  #L1b0680.  v0:= v30 @kind object;
  #L1b0684.  v1:= v31;
  #L1b0688.  v2:= v26 @kind object;
  #L1b068c.  v3:= v27 @kind object;
  #L1b0690.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0696.  v26:= temp @kind object;
  #L1b0698.  throw v26;
  #L1b069a.  v0:= v34 @kind object;
  #L1b069e.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Path` @kind boolean;
  #L1b06a2.  v26:= v0;
  #L1b06a6.  if v26 == 0 then goto L1b07e4;
  #L1b06aa.  v0:= v30 @kind object;
  #L1b06ae.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L1b06b2.  v26:= v0;
  #L1b06b6.  if v26 == 0 then goto L1b06e8;
  #L1b06ba.  v26:= "A @Path parameter must not come after a @Query." @kind object;
  #L1b06be.  v27:= 0I;
  #L1b06c2.  v0:= v27;
  #L1b06c6.  v0:= new `java.lang.Object`[v0];
  #L1b06ca.  v27:= v0 @kind object;
  #L1b06ce.  v0:= v30 @kind object;
  #L1b06d2.  v1:= v31;
  #L1b06d6.  v2:= v26 @kind object;
  #L1b06da.  v3:= v27 @kind object;
  #L1b06de.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b06e4.  v26:= temp @kind object;
  #L1b06e6.  throw v26;
  #L1b06e8.  v0:= v30 @kind object;
  #L1b06ec.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b06f0.  v26:= v0;
  #L1b06f4.  if v26 == 0 then goto L1b0726;
  #L1b06f8.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L1b06fc.  v27:= 0I;
  #L1b0700.  v0:= v27;
  #L1b0704.  v0:= new `java.lang.Object`[v0];
  #L1b0708.  v27:= v0 @kind object;
  #L1b070c.  v0:= v30 @kind object;
  #L1b0710.  v1:= v31;
  #L1b0714.  v2:= v26 @kind object;
  #L1b0718.  v3:= v27 @kind object;
  #L1b071c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0722.  v26:= temp @kind object;
  #L1b0724.  throw v26;
  #L1b0726.  v0:= v30 @kind object;
  #L1b072a.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b072e.  v26:= v0 @kind object;
  #L1b0732.  if v26 != 0 then goto L1b0778;
  #L1b0736.  v26:= "@Path can only be used with relative url on @%s" @kind object;
  #L1b073a.  v27:= 1I;
  #L1b073e.  v0:= v27;
  #L1b0742.  v0:= new `java.lang.Object`[v0];
  #L1b0746.  v27:= v0 @kind object;
  #L1b074a.  v28:= 0I;
  #L1b074e.  v0:= v30 @kind object;
  #L1b0752.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b0756.  v29:= v0 @kind object;
  #L1b075a.  v27[v28]:= v29 @kind object;
  #L1b075e.  v0:= v30 @kind object;
  #L1b0762.  v1:= v31;
  #L1b0766.  v2:= v26 @kind object;
  #L1b076a.  v3:= v27 @kind object;
  #L1b076e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0774.  v26:= temp @kind object;
  #L1b0776.  throw v26;
  #L1b0778.  v26:= 1I;
  #L1b077c.  v0:= v26;
  #L1b0780.  v1:= v30 @kind object;
  #L1b0784.  v1.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` := v0 @kind boolean;
  #L1b0788.  v20:= v34 @kind object;
  #L1b078c.  v20:= (`retrofit2.http.Path`) v20 @kind object;
  #L1b0790.  call temp:= `value`(v20) @signature `Lretrofit2/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L1b0796.  v15:= temp @kind object;
  #L1b0798.  v0:= v30 @kind object;
  #L1b079c.  v1:= v31;
  #L1b07a0.  call `validatePathName`(v0, v1, v15) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @kind direct;
  #L1b07a6.  v0:= v30 @kind object;
  #L1b07aa.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b07ae.  v26:= v0 @kind object;
  #L1b07b2.  v0:= v26 @kind object;
  #L1b07b6.  v1:= v32 @kind object;
  #L1b07ba.  v2:= v33 @kind object;
  #L1b07be.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b07c4.  v5:= temp @kind object;
  #L1b07c6.  v26:= new `retrofit2.ParameterHandler$Path`;
  #L1b07ca.  call temp:= `encoded`(v20) @signature `Lretrofit2/http/Path;.encoded:()Z` @kind interface;
  #L1b07d0.  v27:= temp;
  #L1b07d2.  v0:= v26 @kind object;
  #L1b07d6.  v1:= v27;
  #L1b07da.  call `<init>`(v0, v15, v5, v1) @signature `Lretrofit2/ParameterHandler$Path;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b07e0.  goto L1b066a;
  #L1b07e4.  v0:= v34 @kind object;
  #L1b07e8.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Query` @kind boolean;
  #L1b07ec.  v26:= v0;
  #L1b07f0.  if v26 == 0 then goto L1b0996;
  #L1b07f4.  v21:= v34 @kind object;
  #L1b07f8.  v21:= (`retrofit2.http.Query`) v21 @kind object;
  #L1b07fc.  call temp:= `value`(v21) @signature `Lretrofit2/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L1b0802.  v15:= temp @kind object;
  #L1b0804.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/Query;.encoded:()Z` @kind interface;
  #L1b080a.  v8:= temp;
  #L1b080c.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b0812.  v22:= temp @kind object;
  #L1b0814.  v26:= 1I;
  #L1b0818.  v0:= v26;
  #L1b081c.  v1:= v30 @kind object;
  #L1b0820.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L1b0824.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b0828.  v0:= v26 @kind object;
  #L1b082c.  v1:= v22 @kind object;
  #L1b0830.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b0836.  v26:= temp;
  #L1b0838.  if v26 == 0 then goto L1b0912;
  #L1b083c.  v0:= v32 @kind object;
  #L1b0840.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0844.  v26:= v0;
  #L1b0848.  if v26 != 0 then goto L1b08c0;
  #L1b084c.  v26:= new `java.lang.StringBuilder`;
  #L1b0850.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0856.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b085c.  v27:= temp @kind object;
  #L1b085e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0864.  v26:= temp @kind object;
  #L1b0866.  v27:= " must include generic type (e.g., " @kind object;
  #L1b086a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0870.  v26:= temp @kind object;
  #L1b0872.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0878.  v27:= temp @kind object;
  #L1b087a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0880.  v26:= temp @kind object;
  #L1b0882.  v27:= "<String>)" @kind object;
  #L1b0886.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b088c.  v26:= temp @kind object;
  #L1b088e.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0894.  v26:= temp @kind object;
  #L1b0896.  v27:= 0I;
  #L1b089a.  v0:= v27;
  #L1b089e.  v0:= new `java.lang.Object`[v0];
  #L1b08a2.  v27:= v0 @kind object;
  #L1b08a6.  v0:= v30 @kind object;
  #L1b08aa.  v1:= v31;
  #L1b08ae.  v2:= v26 @kind object;
  #L1b08b2.  v3:= v27 @kind object;
  #L1b08b6.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b08bc.  v26:= temp @kind object;
  #L1b08be.  throw v26;
  #L1b08c0.  v16:= v32 @kind object;
  #L1b08c4.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b08c8.  v26:= 0I;
  #L1b08cc.  v0:= v26;
  #L1b08d0.  v1:= v16 @kind object;
  #L1b08d4.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b08da.  v12:= temp @kind object;
  #L1b08dc.  v0:= v30 @kind object;
  #L1b08e0.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b08e4.  v26:= v0 @kind object;
  #L1b08e8.  v0:= v26 @kind object;
  #L1b08ec.  v1:= v33 @kind object;
  #L1b08f0.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b08f6.  v5:= temp @kind object;
  #L1b08f8.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b08fc.  v0:= v26 @kind object;
  #L1b0900.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0906.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Query;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b090c.  v26:= temp @kind object;
  #L1b090e.  goto L1b066a;
  #L1b0912.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b0918.  v26:= temp;
  #L1b091a.  if v26 == 0 then goto L1b0964;
  #L1b091e.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b0924.  v26:= temp @kind object;
  #L1b0926.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b092c.  v4:= temp @kind object;
  #L1b092e.  v0:= v30 @kind object;
  #L1b0932.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0936.  v26:= v0 @kind object;
  #L1b093a.  v0:= v26 @kind object;
  #L1b093e.  v1:= v33 @kind object;
  #L1b0942.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0948.  v5:= temp @kind object;
  #L1b094a.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b094e.  v0:= v26 @kind object;
  #L1b0952.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0958.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Query;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b095e.  v26:= temp @kind object;
  #L1b0960.  goto L1b066a;
  #L1b0964.  v0:= v30 @kind object;
  #L1b0968.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b096c.  v26:= v0 @kind object;
  #L1b0970.  v0:= v26 @kind object;
  #L1b0974.  v1:= v32 @kind object;
  #L1b0978.  v2:= v33 @kind object;
  #L1b097c.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0982.  v5:= temp @kind object;
  #L1b0984.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b0988.  v0:= v26 @kind object;
  #L1b098c.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0992.  goto L1b066a;
  #L1b0996.  v0:= v34 @kind object;
  #L1b099a.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryName` @kind boolean;
  #L1b099e.  v26:= v0;
  #L1b09a2.  if v26 == 0 then goto L1b0b40;
  #L1b09a6.  v21:= v34 @kind object;
  #L1b09aa.  v21:= (`retrofit2.http.QueryName`) v21 @kind object;
  #L1b09ae.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/QueryName;.encoded:()Z` @kind interface;
  #L1b09b4.  v8:= temp;
  #L1b09b6.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b09bc.  v22:= temp @kind object;
  #L1b09be.  v26:= 1I;
  #L1b09c2.  v0:= v26;
  #L1b09c6.  v1:= v30 @kind object;
  #L1b09ca.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L1b09ce.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b09d2.  v0:= v26 @kind object;
  #L1b09d6.  v1:= v22 @kind object;
  #L1b09da.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b09e0.  v26:= temp;
  #L1b09e2.  if v26 == 0 then goto L1b0abc;
  #L1b09e6.  v0:= v32 @kind object;
  #L1b09ea.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b09ee.  v26:= v0;
  #L1b09f2.  if v26 != 0 then goto L1b0a6a;
  #L1b09f6.  v26:= new `java.lang.StringBuilder`;
  #L1b09fa.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0a00.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0a06.  v27:= temp @kind object;
  #L1b0a08.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0a0e.  v26:= temp @kind object;
  #L1b0a10.  v27:= " must include generic type (e.g., " @kind object;
  #L1b0a14.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0a1a.  v26:= temp @kind object;
  #L1b0a1c.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0a22.  v27:= temp @kind object;
  #L1b0a24.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0a2a.  v26:= temp @kind object;
  #L1b0a2c.  v27:= "<String>)" @kind object;
  #L1b0a30.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0a36.  v26:= temp @kind object;
  #L1b0a38.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0a3e.  v26:= temp @kind object;
  #L1b0a40.  v27:= 0I;
  #L1b0a44.  v0:= v27;
  #L1b0a48.  v0:= new `java.lang.Object`[v0];
  #L1b0a4c.  v27:= v0 @kind object;
  #L1b0a50.  v0:= v30 @kind object;
  #L1b0a54.  v1:= v31;
  #L1b0a58.  v2:= v26 @kind object;
  #L1b0a5c.  v3:= v27 @kind object;
  #L1b0a60.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0a66.  v26:= temp @kind object;
  #L1b0a68.  throw v26;
  #L1b0a6a.  v16:= v32 @kind object;
  #L1b0a6e.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b0a72.  v26:= 0I;
  #L1b0a76.  v0:= v26;
  #L1b0a7a.  v1:= v16 @kind object;
  #L1b0a7e.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0a84.  v12:= temp @kind object;
  #L1b0a86.  v0:= v30 @kind object;
  #L1b0a8a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0a8e.  v26:= v0 @kind object;
  #L1b0a92.  v0:= v26 @kind object;
  #L1b0a96.  v1:= v33 @kind object;
  #L1b0a9a.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0aa0.  v5:= temp @kind object;
  #L1b0aa2.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b0aa6.  v0:= v26 @kind object;
  #L1b0aaa.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0ab0.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$QueryName;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b0ab6.  v26:= temp @kind object;
  #L1b0ab8.  goto L1b066a;
  #L1b0abc.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b0ac2.  v26:= temp;
  #L1b0ac4.  if v26 == 0 then goto L1b0b0e;
  #L1b0ac8.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b0ace.  v26:= temp @kind object;
  #L1b0ad0.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b0ad6.  v4:= temp @kind object;
  #L1b0ad8.  v0:= v30 @kind object;
  #L1b0adc.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0ae0.  v26:= v0 @kind object;
  #L1b0ae4.  v0:= v26 @kind object;
  #L1b0ae8.  v1:= v33 @kind object;
  #L1b0aec.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0af2.  v5:= temp @kind object;
  #L1b0af4.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b0af8.  v0:= v26 @kind object;
  #L1b0afc.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0b02.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$QueryName;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b0b08.  v26:= temp @kind object;
  #L1b0b0a.  goto L1b066a;
  #L1b0b0e.  v0:= v30 @kind object;
  #L1b0b12.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0b16.  v26:= v0 @kind object;
  #L1b0b1a.  v0:= v26 @kind object;
  #L1b0b1e.  v1:= v32 @kind object;
  #L1b0b22.  v2:= v33 @kind object;
  #L1b0b26.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0b2c.  v5:= temp @kind object;
  #L1b0b2e.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b0b32.  v0:= v26 @kind object;
  #L1b0b36.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0b3c.  goto L1b066a;
  #L1b0b40.  v0:= v34 @kind object;
  #L1b0b44.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryMap` @kind boolean;
  #L1b0b48.  v26:= v0;
  #L1b0b4c.  if v26 == 0 then goto L1b0cc6;
  #L1b0b50.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b0b56.  v22:= temp @kind object;
  #L1b0b58.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b0b5c.  v0:= v26 @kind object;
  #L1b0b60.  v1:= v22 @kind object;
  #L1b0b64.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b0b6a.  v26:= temp;
  #L1b0b6c.  if v26 != 0 then goto L1b0b9e;
  #L1b0b70.  v26:= "@QueryMap parameter type must be Map." @kind object;
  #L1b0b74.  v27:= 0I;
  #L1b0b78.  v0:= v27;
  #L1b0b7c.  v0:= new `java.lang.Object`[v0];
  #L1b0b80.  v27:= v0 @kind object;
  #L1b0b84.  v0:= v30 @kind object;
  #L1b0b88.  v1:= v31;
  #L1b0b8c.  v2:= v26 @kind object;
  #L1b0b90.  v3:= v27 @kind object;
  #L1b0b94.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0b9a.  v26:= temp @kind object;
  #L1b0b9c.  throw v26;
  #L1b0b9e.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b0ba2.  v0:= v32 @kind object;
  #L1b0ba6.  v1:= v22 @kind object;
  #L1b0baa.  v2:= v26 @kind object;
  #L1b0bae.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0bb4.  v14:= temp @kind object;
  #L1b0bb6.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0bba.  v26:= v0;
  #L1b0bbe.  if v26 != 0 then goto L1b0bf0;
  #L1b0bc2.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b0bc6.  v27:= 0I;
  #L1b0bca.  v0:= v27;
  #L1b0bce.  v0:= new `java.lang.Object`[v0];
  #L1b0bd2.  v27:= v0 @kind object;
  #L1b0bd6.  v0:= v30 @kind object;
  #L1b0bda.  v1:= v31;
  #L1b0bde.  v2:= v26 @kind object;
  #L1b0be2.  v3:= v27 @kind object;
  #L1b0be6.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0bec.  v26:= temp @kind object;
  #L1b0bee.  throw v26;
  #L1b0bf0.  v16:= v14 @kind object;
  #L1b0bf4.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b0bf8.  v26:= 0I;
  #L1b0bfc.  v0:= v26;
  #L1b0c00.  v1:= v16 @kind object;
  #L1b0c04.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0c0a.  v13:= temp @kind object;
  #L1b0c0c.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b0c10.  v0:= v26 @kind object;
  #L1b0c14.  if v0 == v13 then goto L1b0c6c;
  #L1b0c18.  v26:= new `java.lang.StringBuilder`;
  #L1b0c1c.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0c22.  v27:= "@QueryMap keys must be of type String: " @kind object;
  #L1b0c26.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0c2c.  v26:= temp @kind object;
  #L1b0c2e.  v0:= v26 @kind object;
  #L1b0c32.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0c38.  v26:= temp @kind object;
  #L1b0c3a.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0c40.  v26:= temp @kind object;
  #L1b0c42.  v27:= 0I;
  #L1b0c46.  v0:= v27;
  #L1b0c4a.  v0:= new `java.lang.Object`[v0];
  #L1b0c4e.  v27:= v0 @kind object;
  #L1b0c52.  v0:= v30 @kind object;
  #L1b0c56.  v1:= v31;
  #L1b0c5a.  v2:= v26 @kind object;
  #L1b0c5e.  v3:= v27 @kind object;
  #L1b0c62.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0c68.  v26:= temp @kind object;
  #L1b0c6a.  throw v26;
  #L1b0c6c.  v26:= 1I;
  #L1b0c70.  v0:= v26;
  #L1b0c74.  v1:= v16 @kind object;
  #L1b0c78.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0c7e.  v25:= temp @kind object;
  #L1b0c80.  v0:= v30 @kind object;
  #L1b0c84.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0c88.  v26:= v0 @kind object;
  #L1b0c8c.  v0:= v26 @kind object;
  #L1b0c90.  v1:= v25 @kind object;
  #L1b0c94.  v2:= v33 @kind object;
  #L1b0c98.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0c9e.  v23:= temp @kind object;
  #L1b0ca0.  v26:= new `retrofit2.ParameterHandler$QueryMap`;
  #L1b0ca4.  v34:= (`retrofit2.http.QueryMap`) v34 @kind object;
  #L1b0ca8.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/QueryMap;.encoded:()Z` @kind interface;
  #L1b0cae.  v27:= temp;
  #L1b0cb0.  v0:= v26 @kind object;
  #L1b0cb4.  v1:= v23 @kind object;
  #L1b0cb8.  v2:= v27;
  #L1b0cbc.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0cc2.  goto L1b066a;
  #L1b0cc6.  v0:= v34 @kind object;
  #L1b0cca.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Header` @kind boolean;
  #L1b0cce.  v26:= v0;
  #L1b0cd2.  if v26 == 0 then goto L1b0e60;
  #L1b0cd6.  v10:= v34 @kind object;
  #L1b0cda.  v10:= (`retrofit2.http.Header`) v10 @kind object;
  #L1b0cde.  call temp:= `value`(v10) @signature `Lretrofit2/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L1b0ce4.  v15:= temp @kind object;
  #L1b0ce6.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b0cec.  v22:= temp @kind object;
  #L1b0cee.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b0cf2.  v0:= v26 @kind object;
  #L1b0cf6.  v1:= v22 @kind object;
  #L1b0cfa.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b0d00.  v26:= temp;
  #L1b0d02.  if v26 == 0 then goto L1b0ddc;
  #L1b0d06.  v0:= v32 @kind object;
  #L1b0d0a.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0d0e.  v26:= v0;
  #L1b0d12.  if v26 != 0 then goto L1b0d8a;
  #L1b0d16.  v26:= new `java.lang.StringBuilder`;
  #L1b0d1a.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0d20.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0d26.  v27:= temp @kind object;
  #L1b0d28.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0d2e.  v26:= temp @kind object;
  #L1b0d30.  v27:= " must include generic type (e.g., " @kind object;
  #L1b0d34.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0d3a.  v26:= temp @kind object;
  #L1b0d3c.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0d42.  v27:= temp @kind object;
  #L1b0d44.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0d4a.  v26:= temp @kind object;
  #L1b0d4c.  v27:= "<String>)" @kind object;
  #L1b0d50.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0d56.  v26:= temp @kind object;
  #L1b0d58.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0d5e.  v26:= temp @kind object;
  #L1b0d60.  v27:= 0I;
  #L1b0d64.  v0:= v27;
  #L1b0d68.  v0:= new `java.lang.Object`[v0];
  #L1b0d6c.  v27:= v0 @kind object;
  #L1b0d70.  v0:= v30 @kind object;
  #L1b0d74.  v1:= v31;
  #L1b0d78.  v2:= v26 @kind object;
  #L1b0d7c.  v3:= v27 @kind object;
  #L1b0d80.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0d86.  v26:= temp @kind object;
  #L1b0d88.  throw v26;
  #L1b0d8a.  v16:= v32 @kind object;
  #L1b0d8e.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b0d92.  v26:= 0I;
  #L1b0d96.  v0:= v26;
  #L1b0d9a.  v1:= v16 @kind object;
  #L1b0d9e.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0da4.  v12:= temp @kind object;
  #L1b0da6.  v0:= v30 @kind object;
  #L1b0daa.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0dae.  v26:= v0 @kind object;
  #L1b0db2.  v0:= v26 @kind object;
  #L1b0db6.  v1:= v33 @kind object;
  #L1b0dba.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0dc0.  v5:= temp @kind object;
  #L1b0dc2.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b0dc6.  v0:= v26 @kind object;
  #L1b0dca.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b0dd0.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Header;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b0dd6.  v26:= temp @kind object;
  #L1b0dd8.  goto L1b066a;
  #L1b0ddc.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b0de2.  v26:= temp;
  #L1b0de4.  if v26 == 0 then goto L1b0e2e;
  #L1b0de8.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b0dee.  v26:= temp @kind object;
  #L1b0df0.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b0df6.  v4:= temp @kind object;
  #L1b0df8.  v0:= v30 @kind object;
  #L1b0dfc.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0e00.  v26:= v0 @kind object;
  #L1b0e04.  v0:= v26 @kind object;
  #L1b0e08.  v1:= v33 @kind object;
  #L1b0e0c.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0e12.  v5:= temp @kind object;
  #L1b0e14.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b0e18.  v0:= v26 @kind object;
  #L1b0e1c.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b0e22.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Header;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b0e28.  v26:= temp @kind object;
  #L1b0e2a.  goto L1b066a;
  #L1b0e2e.  v0:= v30 @kind object;
  #L1b0e32.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0e36.  v26:= v0 @kind object;
  #L1b0e3a.  v0:= v26 @kind object;
  #L1b0e3e.  v1:= v32 @kind object;
  #L1b0e42.  v2:= v33 @kind object;
  #L1b0e46.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0e4c.  v5:= temp @kind object;
  #L1b0e4e.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b0e52.  v0:= v26 @kind object;
  #L1b0e56.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b0e5c.  goto L1b066a;
  #L1b0e60.  v0:= v34 @kind object;
  #L1b0e64.  v0:= instanceof @variable v0 @type ^`retrofit2.http.HeaderMap` @kind boolean;
  #L1b0e68.  v26:= v0;
  #L1b0e6c.  if v26 == 0 then goto L1b0fd6;
  #L1b0e70.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b0e76.  v22:= temp @kind object;
  #L1b0e78.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b0e7c.  v0:= v26 @kind object;
  #L1b0e80.  v1:= v22 @kind object;
  #L1b0e84.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b0e8a.  v26:= temp;
  #L1b0e8c.  if v26 != 0 then goto L1b0ebe;
  #L1b0e90.  v26:= "@HeaderMap parameter type must be Map." @kind object;
  #L1b0e94.  v27:= 0I;
  #L1b0e98.  v0:= v27;
  #L1b0e9c.  v0:= new `java.lang.Object`[v0];
  #L1b0ea0.  v27:= v0 @kind object;
  #L1b0ea4.  v0:= v30 @kind object;
  #L1b0ea8.  v1:= v31;
  #L1b0eac.  v2:= v26 @kind object;
  #L1b0eb0.  v3:= v27 @kind object;
  #L1b0eb4.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0eba.  v26:= temp @kind object;
  #L1b0ebc.  throw v26;
  #L1b0ebe.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b0ec2.  v0:= v32 @kind object;
  #L1b0ec6.  v1:= v22 @kind object;
  #L1b0eca.  v2:= v26 @kind object;
  #L1b0ece.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0ed4.  v14:= temp @kind object;
  #L1b0ed6.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0eda.  v26:= v0;
  #L1b0ede.  if v26 != 0 then goto L1b0f10;
  #L1b0ee2.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b0ee6.  v27:= 0I;
  #L1b0eea.  v0:= v27;
  #L1b0eee.  v0:= new `java.lang.Object`[v0];
  #L1b0ef2.  v27:= v0 @kind object;
  #L1b0ef6.  v0:= v30 @kind object;
  #L1b0efa.  v1:= v31;
  #L1b0efe.  v2:= v26 @kind object;
  #L1b0f02.  v3:= v27 @kind object;
  #L1b0f06.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0f0c.  v26:= temp @kind object;
  #L1b0f0e.  throw v26;
  #L1b0f10.  v16:= v14 @kind object;
  #L1b0f14.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b0f18.  v26:= 0I;
  #L1b0f1c.  v0:= v26;
  #L1b0f20.  v1:= v16 @kind object;
  #L1b0f24.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0f2a.  v13:= temp @kind object;
  #L1b0f2c.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b0f30.  v0:= v26 @kind object;
  #L1b0f34.  if v0 == v13 then goto L1b0f8c;
  #L1b0f38.  v26:= new `java.lang.StringBuilder`;
  #L1b0f3c.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0f42.  v27:= "@HeaderMap keys must be of type String: " @kind object;
  #L1b0f46.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0f4c.  v26:= temp @kind object;
  #L1b0f4e.  v0:= v26 @kind object;
  #L1b0f52.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0f58.  v26:= temp @kind object;
  #L1b0f5a.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0f60.  v26:= temp @kind object;
  #L1b0f62.  v27:= 0I;
  #L1b0f66.  v0:= v27;
  #L1b0f6a.  v0:= new `java.lang.Object`[v0];
  #L1b0f6e.  v27:= v0 @kind object;
  #L1b0f72.  v0:= v30 @kind object;
  #L1b0f76.  v1:= v31;
  #L1b0f7a.  v2:= v26 @kind object;
  #L1b0f7e.  v3:= v27 @kind object;
  #L1b0f82.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0f88.  v26:= temp @kind object;
  #L1b0f8a.  throw v26;
  #L1b0f8c.  v26:= 1I;
  #L1b0f90.  v0:= v26;
  #L1b0f94.  v1:= v16 @kind object;
  #L1b0f98.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0f9e.  v25:= temp @kind object;
  #L1b0fa0.  v0:= v30 @kind object;
  #L1b0fa4.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0fa8.  v26:= v0 @kind object;
  #L1b0fac.  v0:= v26 @kind object;
  #L1b0fb0.  v1:= v25 @kind object;
  #L1b0fb4.  v2:= v33 @kind object;
  #L1b0fb8.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0fbe.  v23:= temp @kind object;
  #L1b0fc0.  v26:= new `retrofit2.ParameterHandler$HeaderMap`;
  #L1b0fc4.  v0:= v26 @kind object;
  #L1b0fc8.  v1:= v23 @kind object;
  #L1b0fcc.  call `<init>`(v0, v1) @signature `Lretrofit2/ParameterHandler$HeaderMap;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1b0fd2.  goto L1b066a;
  #L1b0fd6.  v0:= v34 @kind object;
  #L1b0fda.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Field` @kind boolean;
  #L1b0fde.  v26:= v0;
  #L1b0fe2.  if v26 == 0 then goto L1b11c6;
  #L1b0fe6.  v0:= v30 @kind object;
  #L1b0fea.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b0fee.  v26:= v0;
  #L1b0ff2.  if v26 != 0 then goto L1b1024;
  #L1b0ff6.  v26:= "@Field parameters can only be used with form encoding." @kind object;
  #L1b0ffa.  v27:= 0I;
  #L1b0ffe.  v0:= v27;
  #L1b1002.  v0:= new `java.lang.Object`[v0];
  #L1b1006.  v27:= v0 @kind object;
  #L1b100a.  v0:= v30 @kind object;
  #L1b100e.  v1:= v31;
  #L1b1012.  v2:= v26 @kind object;
  #L1b1016.  v3:= v27 @kind object;
  #L1b101a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1020.  v26:= temp @kind object;
  #L1b1022.  throw v26;
  #L1b1024.  v9:= v34 @kind object;
  #L1b1028.  v9:= (`retrofit2.http.Field`) v9 @kind object;
  #L1b102c.  call temp:= `value`(v9) @signature `Lretrofit2/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L1b1032.  v15:= temp @kind object;
  #L1b1034.  call temp:= `encoded`(v9) @signature `Lretrofit2/http/Field;.encoded:()Z` @kind interface;
  #L1b103a.  v8:= temp;
  #L1b103c.  v26:= 1I;
  #L1b1040.  v0:= v26;
  #L1b1044.  v1:= v30 @kind object;
  #L1b1048.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L1b104c.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1052.  v22:= temp @kind object;
  #L1b1054.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b1058.  v0:= v26 @kind object;
  #L1b105c.  v1:= v22 @kind object;
  #L1b1060.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1066.  v26:= temp;
  #L1b1068.  if v26 == 0 then goto L1b1142;
  #L1b106c.  v0:= v32 @kind object;
  #L1b1070.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1074.  v26:= v0;
  #L1b1078.  if v26 != 0 then goto L1b10f0;
  #L1b107c.  v26:= new `java.lang.StringBuilder`;
  #L1b1080.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1086.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b108c.  v27:= temp @kind object;
  #L1b108e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1094.  v26:= temp @kind object;
  #L1b1096.  v27:= " must include generic type (e.g., " @kind object;
  #L1b109a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b10a0.  v26:= temp @kind object;
  #L1b10a2.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b10a8.  v27:= temp @kind object;
  #L1b10aa.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b10b0.  v26:= temp @kind object;
  #L1b10b2.  v27:= "<String>)" @kind object;
  #L1b10b6.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b10bc.  v26:= temp @kind object;
  #L1b10be.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b10c4.  v26:= temp @kind object;
  #L1b10c6.  v27:= 0I;
  #L1b10ca.  v0:= v27;
  #L1b10ce.  v0:= new `java.lang.Object`[v0];
  #L1b10d2.  v27:= v0 @kind object;
  #L1b10d6.  v0:= v30 @kind object;
  #L1b10da.  v1:= v31;
  #L1b10de.  v2:= v26 @kind object;
  #L1b10e2.  v3:= v27 @kind object;
  #L1b10e6.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b10ec.  v26:= temp @kind object;
  #L1b10ee.  throw v26;
  #L1b10f0.  v16:= v32 @kind object;
  #L1b10f4.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b10f8.  v26:= 0I;
  #L1b10fc.  v0:= v26;
  #L1b1100.  v1:= v16 @kind object;
  #L1b1104.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b110a.  v12:= temp @kind object;
  #L1b110c.  v0:= v30 @kind object;
  #L1b1110.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1114.  v26:= v0 @kind object;
  #L1b1118.  v0:= v26 @kind object;
  #L1b111c.  v1:= v33 @kind object;
  #L1b1120.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1126.  v5:= temp @kind object;
  #L1b1128.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b112c.  v0:= v26 @kind object;
  #L1b1130.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b1136.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Field;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b113c.  v26:= temp @kind object;
  #L1b113e.  goto L1b066a;
  #L1b1142.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b1148.  v26:= temp;
  #L1b114a.  if v26 == 0 then goto L1b1194;
  #L1b114e.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b1154.  v26:= temp @kind object;
  #L1b1156.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b115c.  v4:= temp @kind object;
  #L1b115e.  v0:= v30 @kind object;
  #L1b1162.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1166.  v26:= v0 @kind object;
  #L1b116a.  v0:= v26 @kind object;
  #L1b116e.  v1:= v33 @kind object;
  #L1b1172.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1178.  v5:= temp @kind object;
  #L1b117a.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b117e.  v0:= v26 @kind object;
  #L1b1182.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b1188.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Field;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b118e.  v26:= temp @kind object;
  #L1b1190.  goto L1b066a;
  #L1b1194.  v0:= v30 @kind object;
  #L1b1198.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b119c.  v26:= v0 @kind object;
  #L1b11a0.  v0:= v26 @kind object;
  #L1b11a4.  v1:= v32 @kind object;
  #L1b11a8.  v2:= v33 @kind object;
  #L1b11ac.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b11b2.  v5:= temp @kind object;
  #L1b11b4.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b11b8.  v0:= v26 @kind object;
  #L1b11bc.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b11c2.  goto L1b066a;
  #L1b11c6.  v0:= v34 @kind object;
  #L1b11ca.  v0:= instanceof @variable v0 @type ^`retrofit2.http.FieldMap` @kind boolean;
  #L1b11ce.  v26:= v0;
  #L1b11d2.  if v26 == 0 then goto L1b139a;
  #L1b11d6.  v0:= v30 @kind object;
  #L1b11da.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b11de.  v26:= v0;
  #L1b11e2.  if v26 != 0 then goto L1b1214;
  #L1b11e6.  v26:= "@FieldMap parameters can only be used with form encoding." @kind object;
  #L1b11ea.  v27:= 0I;
  #L1b11ee.  v0:= v27;
  #L1b11f2.  v0:= new `java.lang.Object`[v0];
  #L1b11f6.  v27:= v0 @kind object;
  #L1b11fa.  v0:= v30 @kind object;
  #L1b11fe.  v1:= v31;
  #L1b1202.  v2:= v26 @kind object;
  #L1b1206.  v3:= v27 @kind object;
  #L1b120a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1210.  v26:= temp @kind object;
  #L1b1212.  throw v26;
  #L1b1214.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b121a.  v22:= temp @kind object;
  #L1b121c.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b1220.  v0:= v26 @kind object;
  #L1b1224.  v1:= v22 @kind object;
  #L1b1228.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b122e.  v26:= temp;
  #L1b1230.  if v26 != 0 then goto L1b1262;
  #L1b1234.  v26:= "@FieldMap parameter type must be Map." @kind object;
  #L1b1238.  v27:= 0I;
  #L1b123c.  v0:= v27;
  #L1b1240.  v0:= new `java.lang.Object`[v0];
  #L1b1244.  v27:= v0 @kind object;
  #L1b1248.  v0:= v30 @kind object;
  #L1b124c.  v1:= v31;
  #L1b1250.  v2:= v26 @kind object;
  #L1b1254.  v3:= v27 @kind object;
  #L1b1258.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b125e.  v26:= temp @kind object;
  #L1b1260.  throw v26;
  #L1b1262.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b1266.  v0:= v32 @kind object;
  #L1b126a.  v1:= v22 @kind object;
  #L1b126e.  v2:= v26 @kind object;
  #L1b1272.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1278.  v14:= temp @kind object;
  #L1b127a.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b127e.  v26:= v0;
  #L1b1282.  if v26 != 0 then goto L1b12b4;
  #L1b1286.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b128a.  v27:= 0I;
  #L1b128e.  v0:= v27;
  #L1b1292.  v0:= new `java.lang.Object`[v0];
  #L1b1296.  v27:= v0 @kind object;
  #L1b129a.  v0:= v30 @kind object;
  #L1b129e.  v1:= v31;
  #L1b12a2.  v2:= v26 @kind object;
  #L1b12a6.  v3:= v27 @kind object;
  #L1b12aa.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b12b0.  v26:= temp @kind object;
  #L1b12b2.  throw v26;
  #L1b12b4.  v16:= v14 @kind object;
  #L1b12b8.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b12bc.  v26:= 0I;
  #L1b12c0.  v0:= v26;
  #L1b12c4.  v1:= v16 @kind object;
  #L1b12c8.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b12ce.  v13:= temp @kind object;
  #L1b12d0.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b12d4.  v0:= v26 @kind object;
  #L1b12d8.  if v0 == v13 then goto L1b1330;
  #L1b12dc.  v26:= new `java.lang.StringBuilder`;
  #L1b12e0.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b12e6.  v27:= "@FieldMap keys must be of type String: " @kind object;
  #L1b12ea.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12f0.  v26:= temp @kind object;
  #L1b12f2.  v0:= v26 @kind object;
  #L1b12f6.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12fc.  v26:= temp @kind object;
  #L1b12fe.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1304.  v26:= temp @kind object;
  #L1b1306.  v27:= 0I;
  #L1b130a.  v0:= v27;
  #L1b130e.  v0:= new `java.lang.Object`[v0];
  #L1b1312.  v27:= v0 @kind object;
  #L1b1316.  v0:= v30 @kind object;
  #L1b131a.  v1:= v31;
  #L1b131e.  v2:= v26 @kind object;
  #L1b1322.  v3:= v27 @kind object;
  #L1b1326.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b132c.  v26:= temp @kind object;
  #L1b132e.  throw v26;
  #L1b1330.  v26:= 1I;
  #L1b1334.  v0:= v26;
  #L1b1338.  v1:= v16 @kind object;
  #L1b133c.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1342.  v25:= temp @kind object;
  #L1b1344.  v0:= v30 @kind object;
  #L1b1348.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b134c.  v26:= v0 @kind object;
  #L1b1350.  v0:= v26 @kind object;
  #L1b1354.  v1:= v25 @kind object;
  #L1b1358.  v2:= v33 @kind object;
  #L1b135c.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1362.  v23:= temp @kind object;
  #L1b1364.  v26:= 1I;
  #L1b1368.  v0:= v26;
  #L1b136c.  v1:= v30 @kind object;
  #L1b1370.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L1b1374.  v26:= new `retrofit2.ParameterHandler$FieldMap`;
  #L1b1378.  v34:= (`retrofit2.http.FieldMap`) v34 @kind object;
  #L1b137c.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/FieldMap;.encoded:()Z` @kind interface;
  #L1b1382.  v27:= temp;
  #L1b1384.  v0:= v26 @kind object;
  #L1b1388.  v1:= v23 @kind object;
  #L1b138c.  v2:= v27;
  #L1b1390.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b1396.  goto L1b066a;
  #L1b139a.  v0:= v34 @kind object;
  #L1b139e.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Part` @kind boolean;
  #L1b13a2.  v26:= v0;
  #L1b13a6.  if v26 == 0 then goto L1b18d0;
  #L1b13aa.  v0:= v30 @kind object;
  #L1b13ae.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b13b2.  v26:= v0;
  #L1b13b6.  if v26 != 0 then goto L1b13e8;
  #L1b13ba.  v26:= "@Part parameters can only be used with multipart encoding." @kind object;
  #L1b13be.  v27:= 0I;
  #L1b13c2.  v0:= v27;
  #L1b13c6.  v0:= new `java.lang.Object`[v0];
  #L1b13ca.  v27:= v0 @kind object;
  #L1b13ce.  v0:= v30 @kind object;
  #L1b13d2.  v1:= v31;
  #L1b13d6.  v2:= v26 @kind object;
  #L1b13da.  v3:= v27 @kind object;
  #L1b13de.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b13e4.  v26:= temp @kind object;
  #L1b13e6.  throw v26;
  #L1b13e8.  v17:= v34 @kind object;
  #L1b13ec.  v17:= (`retrofit2.http.Part`) v17 @kind object;
  #L1b13f0.  v26:= 1I;
  #L1b13f4.  v0:= v26;
  #L1b13f8.  v1:= v30 @kind object;
  #L1b13fc.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L1b1400.  call temp:= `value`(v17) @signature `Lretrofit2/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L1b1406.  v19:= temp @kind object;
  #L1b1408.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b140e.  v22:= temp @kind object;
  #L1b1410.  call temp:= `isEmpty`(v19) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1b1416.  v26:= temp;
  #L1b1418.  if v26 == 0 then goto L1b15de;
  #L1b141c.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b1420.  v0:= v26 @kind object;
  #L1b1424.  v1:= v22 @kind object;
  #L1b1428.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b142e.  v26:= temp;
  #L1b1430.  if v26 == 0 then goto L1b152a;
  #L1b1434.  v0:= v32 @kind object;
  #L1b1438.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b143c.  v26:= v0;
  #L1b1440.  if v26 != 0 then goto L1b14b8;
  #L1b1444.  v26:= new `java.lang.StringBuilder`;
  #L1b1448.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b144e.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1454.  v27:= temp @kind object;
  #L1b1456.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b145c.  v26:= temp @kind object;
  #L1b145e.  v27:= " must include generic type (e.g., " @kind object;
  #L1b1462.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1468.  v26:= temp @kind object;
  #L1b146a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1470.  v27:= temp @kind object;
  #L1b1472.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1478.  v26:= temp @kind object;
  #L1b147a.  v27:= "<String>)" @kind object;
  #L1b147e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1484.  v26:= temp @kind object;
  #L1b1486.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b148c.  v26:= temp @kind object;
  #L1b148e.  v27:= 0I;
  #L1b1492.  v0:= v27;
  #L1b1496.  v0:= new `java.lang.Object`[v0];
  #L1b149a.  v27:= v0 @kind object;
  #L1b149e.  v0:= v30 @kind object;
  #L1b14a2.  v1:= v31;
  #L1b14a6.  v2:= v26 @kind object;
  #L1b14aa.  v3:= v27 @kind object;
  #L1b14ae.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b14b4.  v26:= temp @kind object;
  #L1b14b6.  throw v26;
  #L1b14b8.  v16:= v32 @kind object;
  #L1b14bc.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b14c0.  v26:= 0I;
  #L1b14c4.  v0:= v26;
  #L1b14c8.  v1:= v16 @kind object;
  #L1b14cc.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b14d2.  v12:= temp @kind object;
  #L1b14d4.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b14d8.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b14de.  v27:= temp @kind object;
  #L1b14e0.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b14e6.  v26:= temp;
  #L1b14e8.  if v26 != 0 then goto L1b151a;
  #L1b14ec.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b14f0.  v27:= 0I;
  #L1b14f4.  v0:= v27;
  #L1b14f8.  v0:= new `java.lang.Object`[v0];
  #L1b14fc.  v27:= v0 @kind object;
  #L1b1500.  v0:= v30 @kind object;
  #L1b1504.  v1:= v31;
  #L1b1508.  v2:= v26 @kind object;
  #L1b150c.  v3:= v27 @kind object;
  #L1b1510.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1516.  v26:= temp @kind object;
  #L1b1518.  throw v26;
  #L1b151a.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b151e.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b1524.  v26:= temp @kind object;
  #L1b1526.  goto L1b066a;
  #L1b152a.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b1530.  v26:= temp;
  #L1b1532.  if v26 == 0 then goto L1b1590;
  #L1b1536.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b153c.  v4:= temp @kind object;
  #L1b153e.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1542.  v0:= v26 @kind object;
  #L1b1546.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b154c.  v26:= temp;
  #L1b154e.  if v26 != 0 then goto L1b1580;
  #L1b1552.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b1556.  v27:= 0I;
  #L1b155a.  v0:= v27;
  #L1b155e.  v0:= new `java.lang.Object`[v0];
  #L1b1562.  v27:= v0 @kind object;
  #L1b1566.  v0:= v30 @kind object;
  #L1b156a.  v1:= v31;
  #L1b156e.  v2:= v26 @kind object;
  #L1b1572.  v3:= v27 @kind object;
  #L1b1576.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b157c.  v26:= temp @kind object;
  #L1b157e.  throw v26;
  #L1b1580.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b1584.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b158a.  v26:= temp @kind object;
  #L1b158c.  goto L1b066a;
  #L1b1590.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1594.  v0:= v26 @kind object;
  #L1b1598.  v1:= v22 @kind object;
  #L1b159c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b15a2.  v26:= temp;
  #L1b15a4.  if v26 == 0 then goto L1b15b0;
  #L1b15a8.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b15ac.  goto L1b066a;
  #L1b15b0.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b15b4.  v27:= 0I;
  #L1b15b8.  v0:= v27;
  #L1b15bc.  v0:= new `java.lang.Object`[v0];
  #L1b15c0.  v27:= v0 @kind object;
  #L1b15c4.  v0:= v30 @kind object;
  #L1b15c8.  v1:= v31;
  #L1b15cc.  v2:= v26 @kind object;
  #L1b15d0.  v3:= v27 @kind object;
  #L1b15d4.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b15da.  v26:= temp @kind object;
  #L1b15dc.  throw v26;
  #L1b15de.  v26:= 4I;
  #L1b15e2.  v0:= v26;
  #L1b15e6.  v0:= new `java.lang.String`[v0];
  #L1b15ea.  v26:= v0 @kind object;
  #L1b15ee.  v27:= 0I;
  #L1b15f2.  v28:= "Content-Disposition" @kind object;
  #L1b15f6.  v26[v27]:= v28 @kind object;
  #L1b15fa.  v27:= 1I;
  #L1b15fe.  v28:= new `java.lang.StringBuilder`;
  #L1b1602.  call `<init>`(v28) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1608.  v29:= "form-data; name=\"" @kind object;
  #L1b160c.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1612.  v28:= temp @kind object;
  #L1b1614.  v0:= v28 @kind object;
  #L1b1618.  v1:= v19 @kind object;
  #L1b161c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1622.  v28:= temp @kind object;
  #L1b1624.  v29:= "\"" @kind object;
  #L1b1628.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b162e.  v28:= temp @kind object;
  #L1b1630.  call temp:= `toString`(v28) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1636.  v28:= temp @kind object;
  #L1b1638.  v26[v27]:= v28 @kind object;
  #L1b163c.  v27:= 2I;
  #L1b1640.  v28:= "Content-Transfer-Encoding" @kind object;
  #L1b1644.  v26[v27]:= v28 @kind object;
  #L1b1648.  v27:= 3I;
  #L1b164c.  call temp:= `encoding`(v17) @signature `Lretrofit2/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L1b1652.  v28:= temp @kind object;
  #L1b1654.  v26[v27]:= v28 @kind object;
  #L1b1658.  call temp:= `of`(v26) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L1b165e.  v11:= temp @kind object;
  #L1b1660.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b1664.  v0:= v26 @kind object;
  #L1b1668.  v1:= v22 @kind object;
  #L1b166c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1672.  v26:= temp;
  #L1b1674.  if v26 == 0 then goto L1b17a4;
  #L1b1678.  v0:= v32 @kind object;
  #L1b167c.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1680.  v26:= v0;
  #L1b1684.  if v26 != 0 then goto L1b16fc;
  #L1b1688.  v26:= new `java.lang.StringBuilder`;
  #L1b168c.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1692.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1698.  v27:= temp @kind object;
  #L1b169a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16a0.  v26:= temp @kind object;
  #L1b16a2.  v27:= " must include generic type (e.g., " @kind object;
  #L1b16a6.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16ac.  v26:= temp @kind object;
  #L1b16ae.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b16b4.  v27:= temp @kind object;
  #L1b16b6.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16bc.  v26:= temp @kind object;
  #L1b16be.  v27:= "<String>)" @kind object;
  #L1b16c2.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16c8.  v26:= temp @kind object;
  #L1b16ca.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b16d0.  v26:= temp @kind object;
  #L1b16d2.  v27:= 0I;
  #L1b16d6.  v0:= v27;
  #L1b16da.  v0:= new `java.lang.Object`[v0];
  #L1b16de.  v27:= v0 @kind object;
  #L1b16e2.  v0:= v30 @kind object;
  #L1b16e6.  v1:= v31;
  #L1b16ea.  v2:= v26 @kind object;
  #L1b16ee.  v3:= v27 @kind object;
  #L1b16f2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b16f8.  v26:= temp @kind object;
  #L1b16fa.  throw v26;
  #L1b16fc.  v16:= v32 @kind object;
  #L1b1700.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b1704.  v26:= 0I;
  #L1b1708.  v0:= v26;
  #L1b170c.  v1:= v16 @kind object;
  #L1b1710.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1716.  v12:= temp @kind object;
  #L1b1718.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b171c.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1722.  v27:= temp @kind object;
  #L1b1724.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b172a.  v26:= temp;
  #L1b172c.  if v26 == 0 then goto L1b175e;
  #L1b1730.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b1734.  v27:= 0I;
  #L1b1738.  v0:= v27;
  #L1b173c.  v0:= new `java.lang.Object`[v0];
  #L1b1740.  v27:= v0 @kind object;
  #L1b1744.  v0:= v30 @kind object;
  #L1b1748.  v1:= v31;
  #L1b174c.  v2:= v26 @kind object;
  #L1b1750.  v3:= v27 @kind object;
  #L1b1754.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b175a.  v26:= temp @kind object;
  #L1b175c.  throw v26;
  #L1b175e.  v0:= v30 @kind object;
  #L1b1762.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1766.  v26:= v0 @kind object;
  #L1b176a.  v0:= v30 @kind object;
  #L1b176e.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b1772.  v27:= v0 @kind object;
  #L1b1776.  v0:= v26 @kind object;
  #L1b177a.  v1:= v33 @kind object;
  #L1b177e.  v2:= v27 @kind object;
  #L1b1782.  call temp:= `requestBodyConverter`(v0, v12, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1788.  v6:= temp @kind object;
  #L1b178a.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b178e.  v0:= v26 @kind object;
  #L1b1792.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b1798.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Part;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b179e.  v26:= temp @kind object;
  #L1b17a0.  goto L1b066a;
  #L1b17a4.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b17aa.  v26:= temp;
  #L1b17ac.  if v26 == 0 then goto L1b1848;
  #L1b17b0.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b17b6.  v26:= temp @kind object;
  #L1b17b8.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b17be.  v4:= temp @kind object;
  #L1b17c0.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b17c4.  v0:= v26 @kind object;
  #L1b17c8.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b17ce.  v26:= temp;
  #L1b17d0.  if v26 == 0 then goto L1b1802;
  #L1b17d4.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b17d8.  v27:= 0I;
  #L1b17dc.  v0:= v27;
  #L1b17e0.  v0:= new `java.lang.Object`[v0];
  #L1b17e4.  v27:= v0 @kind object;
  #L1b17e8.  v0:= v30 @kind object;
  #L1b17ec.  v1:= v31;
  #L1b17f0.  v2:= v26 @kind object;
  #L1b17f4.  v3:= v27 @kind object;
  #L1b17f8.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b17fe.  v26:= temp @kind object;
  #L1b1800.  throw v26;
  #L1b1802.  v0:= v30 @kind object;
  #L1b1806.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b180a.  v26:= v0 @kind object;
  #L1b180e.  v0:= v30 @kind object;
  #L1b1812.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b1816.  v27:= v0 @kind object;
  #L1b181a.  v0:= v26 @kind object;
  #L1b181e.  v1:= v33 @kind object;
  #L1b1822.  v2:= v27 @kind object;
  #L1b1826.  call temp:= `requestBodyConverter`(v0, v4, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b182c.  v6:= temp @kind object;
  #L1b182e.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b1832.  v0:= v26 @kind object;
  #L1b1836.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b183c.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Part;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b1842.  v26:= temp @kind object;
  #L1b1844.  goto L1b066a;
  #L1b1848.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b184c.  v0:= v26 @kind object;
  #L1b1850.  v1:= v22 @kind object;
  #L1b1854.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b185a.  v26:= temp;
  #L1b185c.  if v26 == 0 then goto L1b188e;
  #L1b1860.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b1864.  v27:= 0I;
  #L1b1868.  v0:= v27;
  #L1b186c.  v0:= new `java.lang.Object`[v0];
  #L1b1870.  v27:= v0 @kind object;
  #L1b1874.  v0:= v30 @kind object;
  #L1b1878.  v1:= v31;
  #L1b187c.  v2:= v26 @kind object;
  #L1b1880.  v3:= v27 @kind object;
  #L1b1884.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b188a.  v26:= temp @kind object;
  #L1b188c.  throw v26;
  #L1b188e.  v0:= v30 @kind object;
  #L1b1892.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1896.  v26:= v0 @kind object;
  #L1b189a.  v0:= v30 @kind object;
  #L1b189e.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b18a2.  v27:= v0 @kind object;
  #L1b18a6.  v0:= v26 @kind object;
  #L1b18aa.  v1:= v32 @kind object;
  #L1b18ae.  v2:= v33 @kind object;
  #L1b18b2.  v3:= v27 @kind object;
  #L1b18b6.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b18bc.  v6:= temp @kind object;
  #L1b18be.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b18c2.  v0:= v26 @kind object;
  #L1b18c6.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b18cc.  goto L1b066a;
  #L1b18d0.  v0:= v34 @kind object;
  #L1b18d4.  v0:= instanceof @variable v0 @type ^`retrofit2.http.PartMap` @kind boolean;
  #L1b18d8.  v26:= v0;
  #L1b18dc.  if v26 == 0 then goto L1b1afe;
  #L1b18e0.  v0:= v30 @kind object;
  #L1b18e4.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b18e8.  v26:= v0;
  #L1b18ec.  if v26 != 0 then goto L1b191e;
  #L1b18f0.  v26:= "@PartMap parameters can only be used with multipart encoding." @kind object;
  #L1b18f4.  v27:= 0I;
  #L1b18f8.  v0:= v27;
  #L1b18fc.  v0:= new `java.lang.Object`[v0];
  #L1b1900.  v27:= v0 @kind object;
  #L1b1904.  v0:= v30 @kind object;
  #L1b1908.  v1:= v31;
  #L1b190c.  v2:= v26 @kind object;
  #L1b1910.  v3:= v27 @kind object;
  #L1b1914.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b191a.  v26:= temp @kind object;
  #L1b191c.  throw v26;
  #L1b191e.  v26:= 1I;
  #L1b1922.  v0:= v26;
  #L1b1926.  v1:= v30 @kind object;
  #L1b192a.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L1b192e.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1934.  v22:= temp @kind object;
  #L1b1936.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b193a.  v0:= v26 @kind object;
  #L1b193e.  v1:= v22 @kind object;
  #L1b1942.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1948.  v26:= temp;
  #L1b194a.  if v26 != 0 then goto L1b197c;
  #L1b194e.  v26:= "@PartMap parameter type must be Map." @kind object;
  #L1b1952.  v27:= 0I;
  #L1b1956.  v0:= v27;
  #L1b195a.  v0:= new `java.lang.Object`[v0];
  #L1b195e.  v27:= v0 @kind object;
  #L1b1962.  v0:= v30 @kind object;
  #L1b1966.  v1:= v31;
  #L1b196a.  v2:= v26 @kind object;
  #L1b196e.  v3:= v27 @kind object;
  #L1b1972.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1978.  v26:= temp @kind object;
  #L1b197a.  throw v26;
  #L1b197c.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b1980.  v0:= v32 @kind object;
  #L1b1984.  v1:= v22 @kind object;
  #L1b1988.  v2:= v26 @kind object;
  #L1b198c.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1992.  v14:= temp @kind object;
  #L1b1994.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1998.  v26:= v0;
  #L1b199c.  if v26 != 0 then goto L1b19ce;
  #L1b19a0.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b19a4.  v27:= 0I;
  #L1b19a8.  v0:= v27;
  #L1b19ac.  v0:= new `java.lang.Object`[v0];
  #L1b19b0.  v27:= v0 @kind object;
  #L1b19b4.  v0:= v30 @kind object;
  #L1b19b8.  v1:= v31;
  #L1b19bc.  v2:= v26 @kind object;
  #L1b19c0.  v3:= v27 @kind object;
  #L1b19c4.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b19ca.  v26:= temp @kind object;
  #L1b19cc.  throw v26;
  #L1b19ce.  v16:= v14 @kind object;
  #L1b19d2.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b19d6.  v26:= 0I;
  #L1b19da.  v0:= v26;
  #L1b19de.  v1:= v16 @kind object;
  #L1b19e2.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b19e8.  v13:= temp @kind object;
  #L1b19ea.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b19ee.  v0:= v26 @kind object;
  #L1b19f2.  if v0 == v13 then goto L1b1a4a;
  #L1b19f6.  v26:= new `java.lang.StringBuilder`;
  #L1b19fa.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1a00.  v27:= "@PartMap keys must be of type String: " @kind object;
  #L1b1a04.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1a0a.  v26:= temp @kind object;
  #L1b1a0c.  v0:= v26 @kind object;
  #L1b1a10.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1a16.  v26:= temp @kind object;
  #L1b1a18.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1a1e.  v26:= temp @kind object;
  #L1b1a20.  v27:= 0I;
  #L1b1a24.  v0:= v27;
  #L1b1a28.  v0:= new `java.lang.Object`[v0];
  #L1b1a2c.  v27:= v0 @kind object;
  #L1b1a30.  v0:= v30 @kind object;
  #L1b1a34.  v1:= v31;
  #L1b1a38.  v2:= v26 @kind object;
  #L1b1a3c.  v3:= v27 @kind object;
  #L1b1a40.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1a46.  v26:= temp @kind object;
  #L1b1a48.  throw v26;
  #L1b1a4a.  v26:= 1I;
  #L1b1a4e.  v0:= v26;
  #L1b1a52.  v1:= v16 @kind object;
  #L1b1a56.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1a5c.  v25:= temp @kind object;
  #L1b1a5e.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1a62.  call temp:= `getRawType`(v25) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1a68.  v27:= temp @kind object;
  #L1b1a6a.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1a70.  v26:= temp;
  #L1b1a72.  if v26 == 0 then goto L1b1aa4;
  #L1b1a76.  v26:= "@PartMap values cannot be MultipartBody.Part. Use @Part List<Part> or a different value type instead." @kind object;
  #L1b1a7a.  v27:= 0I;
  #L1b1a7e.  v0:= v27;
  #L1b1a82.  v0:= new `java.lang.Object`[v0];
  #L1b1a86.  v27:= v0 @kind object;
  #L1b1a8a.  v0:= v30 @kind object;
  #L1b1a8e.  v1:= v31;
  #L1b1a92.  v2:= v26 @kind object;
  #L1b1a96.  v3:= v27 @kind object;
  #L1b1a9a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1aa0.  v26:= temp @kind object;
  #L1b1aa2.  throw v26;
  #L1b1aa4.  v0:= v30 @kind object;
  #L1b1aa8.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1aac.  v26:= v0 @kind object;
  #L1b1ab0.  v0:= v30 @kind object;
  #L1b1ab4.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b1ab8.  v27:= v0 @kind object;
  #L1b1abc.  v0:= v26 @kind object;
  #L1b1ac0.  v1:= v25 @kind object;
  #L1b1ac4.  v2:= v33 @kind object;
  #L1b1ac8.  v3:= v27 @kind object;
  #L1b1acc.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1ad2.  v24:= temp @kind object;
  #L1b1ad4.  v18:= v34 @kind object;
  #L1b1ad8.  v18:= (`retrofit2.http.PartMap`) v18 @kind object;
  #L1b1adc.  v26:= new `retrofit2.ParameterHandler$PartMap`;
  #L1b1ae0.  call temp:= `encoding`(v18) @signature `Lretrofit2/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L1b1ae6.  v27:= temp @kind object;
  #L1b1ae8.  v0:= v26 @kind object;
  #L1b1aec.  v1:= v24 @kind object;
  #L1b1af0.  v2:= v27 @kind object;
  #L1b1af4.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$PartMap;.<init>:(Lretrofit2/Converter;Ljava/lang/String;)V` @kind direct;
  #L1b1afa.  goto L1b066a;
  #L1b1afe.  v0:= v34 @kind object;
  #L1b1b02.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Body` @kind boolean;
  #L1b1b06.  v26:= v0;
  #L1b1b0a.  if v26 == 0 then goto L1b1c24;
  #L1b1b0e.  v0:= v30 @kind object;
  #L1b1b12.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b1b16.  v26:= v0;
  #L1b1b1a.  if v26 != 0 then goto L1b1b2e;
  #L1b1b1e.  v0:= v30 @kind object;
  #L1b1b22.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b1b26.  v26:= v0;
  #L1b1b2a.  if v26 == 0 then goto L1b1b5c;
  #L1b1b2e.  v26:= "@Body parameters cannot be used with form or multi-part encoding." @kind object;
  #L1b1b32.  v27:= 0I;
  #L1b1b36.  v0:= v27;
  #L1b1b3a.  v0:= new `java.lang.Object`[v0];
  #L1b1b3e.  v27:= v0 @kind object;
  #L1b1b42.  v0:= v30 @kind object;
  #L1b1b46.  v1:= v31;
  #L1b1b4a.  v2:= v26 @kind object;
  #L1b1b4e.  v3:= v27 @kind object;
  #L1b1b52.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1b58.  v26:= temp @kind object;
  #L1b1b5a.  throw v26;
  #L1b1b5c.  v0:= v30 @kind object;
  #L1b1b60.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L1b1b64.  v26:= v0;
  #L1b1b68.  if v26 == 0 then goto L1b1b9a;
  #L1b1b6c.  v26:= "Multiple @Body method annotations found." @kind object;
  #L1b1b70.  v27:= 0I;
  #L1b1b74.  v0:= v27;
  #L1b1b78.  v0:= new `java.lang.Object`[v0];
  #L1b1b7c.  v27:= v0 @kind object;
  #L1b1b80.  v0:= v30 @kind object;
  #L1b1b84.  v1:= v31;
  #L1b1b88.  v2:= v26 @kind object;
  #L1b1b8c.  v3:= v27 @kind object;
  #L1b1b90.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1b96.  v26:= temp @kind object;
  #L1b1b98.  throw v26;
  #Try_start0.  
  #L1b1b9a.  v0:= v30 @kind object;
  #L1b1b9e.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1ba2.  v26:= v0 @kind object;
  #L1b1ba6.  v0:= v30 @kind object;
  #L1b1baa.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b1bae.  v27:= v0 @kind object;
  #L1b1bb2.  v0:= v26 @kind object;
  #L1b1bb6.  v1:= v32 @kind object;
  #L1b1bba.  v2:= v33 @kind object;
  #L1b1bbe.  v3:= v27 @kind object;
  #L1b1bc2.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #Try_end0.  
  #L1b1bc8.  v6:= temp @kind object;
  #L1b1bca.  v26:= 1I;
  #L1b1bce.  v0:= v26;
  #L1b1bd2.  v1:= v30 @kind object;
  #L1b1bd6.  v1.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` := v0 @kind boolean;
  #L1b1bda.  v26:= new `retrofit2.ParameterHandler$Body`;
  #L1b1bde.  v0:= v26 @kind object;
  #L1b1be2.  call `<init>`(v0, v6) @signature `Lretrofit2/ParameterHandler$Body;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1b1be8.  goto L1b066a;
  #L1b1bec.  v7:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b1bee.  v26:= "Unable to create @Body converter for %s" @kind object;
  #L1b1bf2.  v27:= 1I;
  #L1b1bf6.  v0:= v27;
  #L1b1bfa.  v0:= new `java.lang.Object`[v0];
  #L1b1bfe.  v27:= v0 @kind object;
  #L1b1c02.  v28:= 0I;
  #L1b1c06.  v27[v28]:= v32 @kind object;
  #L1b1c0a.  v0:= v30 @kind object;
  #L1b1c0e.  v1:= v31;
  #L1b1c12.  v2:= v26 @kind object;
  #L1b1c16.  v3:= v27 @kind object;
  #L1b1c1a.  call temp:= `parameterError`(v0, v7, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1c20.  v26:= temp @kind object;
  #L1b1c22.  throw v26;
  #L1b1c24.  v26:= 0I;
  #L1b1c28.  goto L1b066a;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b1bec;
}
procedure `void` `validatePathName`(`retrofit2.ServiceMethod$Builder` v5 @kind this, `int` v6 @name `p`, `java.lang.String` v7 @kind object @name `name`) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b1c4c.  v1:= 2I;
  #L1b1c4e.  v4:= 1I;
  #L1b1c50.  v3:= 0I;
  #L1b1c52.  v0:= `@@retrofit2.ServiceMethod.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b1c56.  call temp:= `matcher`(v0, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b1c5c.  v0:= temp @kind object;
  #L1b1c5e.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L1b1c64.  v0:= temp;
  #L1b1c66.  if v0 != 0 then goto L1b1c90;
  #L1b1c6a.  v0:= "@Path parameter name must match %s. Found: %s" @kind object;
  #L1b1c6e.  v1:= new `java.lang.Object`[v1];
  #L1b1c72.  v2:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b1c76.  call temp:= `pattern`(v2) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L1b1c7c.  v2:= temp @kind object;
  #L1b1c7e.  v1[v3]:= v2 @kind object;
  #L1b1c82.  v1[v4]:= v7 @kind object;
  #L1b1c86.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1c8c.  v0:= temp @kind object;
  #L1b1c8e.  throw v0;
  #L1b1c90.  v0:= v5.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` @kind object;
  #L1b1c94.  call temp:= `contains`(v0, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b1c9a.  v0:= temp;
  #L1b1c9c.  if v0 != 0 then goto L1b1cbe;
  #L1b1ca0.  v0:= "URL \"%s\" does not contain \"{%s}\"." @kind object;
  #L1b1ca4.  v1:= new `java.lang.Object`[v1];
  #L1b1ca8.  v2:= v5.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b1cac.  v1[v3]:= v2 @kind object;
  #L1b1cb0.  v1[v4]:= v7 @kind object;
  #L1b1cb4.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1cba.  v0:= temp @kind object;
  #L1b1cbc.  throw v0;
  #L1b1cbe.  return @kind void;
}
procedure `retrofit2.ServiceMethod` `build`(`retrofit2.ServiceMethod$Builder` v10 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1b1cd0.  v9:= 1I;
  #L1b1cd2.  v6:= 0I;
  #L1b1cd4.  call temp:= `createCallAdapter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @kind direct;
  #L1b1cda.  v5:= temp @kind object;
  #L1b1cdc.  v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` := v5 @kind object;
  #L1b1ce0.  v5:= v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` @kind object;
  #L1b1ce4.  call temp:= `responseType`(v5) @signature `Lretrofit2/CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1b1cea.  v5:= temp @kind object;
  #L1b1cec.  v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` := v5 @kind object;
  #L1b1cf0.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b1cf4.  v7:= constclass @type ^`retrofit2.Response` @kind object;
  #L1b1cf8.  if v5 == v7 then goto L1b1d08;
  #L1b1cfc.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b1d00.  v7:= constclass @type ^`okhttp3.Response` @kind object;
  #L1b1d04.  if v5 != v7 then goto L1b1d5c;
  #L1b1d08.  v5:= new `java.lang.StringBuilder`;
  #L1b1d0c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1d12.  v7:= "'" @kind object;
  #L1b1d16.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1d1c.  v5:= temp @kind object;
  #L1b1d1e.  v7:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b1d22.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1d28.  v7:= temp @kind object;
  #L1b1d2a.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1d30.  v7:= temp @kind object;
  #L1b1d32.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1d38.  v5:= temp @kind object;
  #L1b1d3a.  v7:= "' is not a valid response body type. Did you mean ResponseBody?" @kind object;
  #L1b1d3e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1d44.  v5:= temp @kind object;
  #L1b1d46.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1d4c.  v5:= temp @kind object;
  #L1b1d4e.  v6:= new `java.lang.Object`[v6];
  #L1b1d52.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1d58.  v5:= temp @kind object;
  #L1b1d5a.  throw v5;
  #L1b1d5c.  call temp:= `createResponseConverter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @kind direct;
  #L1b1d62.  v5:= temp @kind object;
  #L1b1d64.  v10.`retrofit2.ServiceMethod$Builder.responseConverter` @type ^`retrofit2.Converter` := v5 @kind object;
  #L1b1d68.  v7:= v10.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b1d6c.  v8:= length @variable v7;
  #L1b1d6e.  v5:= v6;
  #L1b1d70.  if v5 >= v8 then goto L1b1d84;
  #L1b1d74.  v0:= v7[v5] @kind object;
  #L1b1d78.  call `parseMethodAnnotation`(v10, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1b1d7e.  v5:= v5 + 1;
  #L1b1d82.  goto L1b1d70;
  #L1b1d84.  v5:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b1d88.  if v5 != 0 then goto L1b1d9e;
  #L1b1d8c.  v5:= "HTTP method annotation is required (e.g., @GET, @POST, etc.)." @kind object;
  #L1b1d90.  v6:= new `java.lang.Object`[v6];
  #L1b1d94.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1d9a.  v5:= temp @kind object;
  #L1b1d9c.  throw v5;
  #L1b1d9e.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L1b1da2.  if v5 != 0 then goto L1b1dda;
  #L1b1da6.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b1daa.  if v5 == 0 then goto L1b1dc0;
  #L1b1dae.  v5:= "Multipart can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L1b1db2.  v6:= new `java.lang.Object`[v6];
  #L1b1db6.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1dbc.  v5:= temp @kind object;
  #L1b1dbe.  throw v5;
  #L1b1dc0.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b1dc4.  if v5 == 0 then goto L1b1dda;
  #L1b1dc8.  v5:= "FormUrlEncoded can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L1b1dcc.  v6:= new `java.lang.Object`[v6];
  #L1b1dd0.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1dd6.  v5:= temp @kind object;
  #L1b1dd8.  throw v5;
  #L1b1dda.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L1b1dde.  v3:= length @variable v5;
  #L1b1de0.  v5:= new `retrofit2.ParameterHandler`[v3];
  #L1b1de4.  v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v5 @kind object;
  #L1b1de8.  v1:= 0I;
  #L1b1dea.  if v1 >= v3 then goto L1b1e4c;
  #L1b1dee.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] @kind object;
  #L1b1df2.  v4:= v5[v1] @kind object;
  #L1b1df6.  call temp:= `hasUnresolvableType`(v4) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1b1dfc.  v5:= temp;
  #L1b1dfe.  if v5 == 0 then goto L1b1e18;
  #L1b1e02.  v5:= "Parameter type must not include a type variable or wildcard: %s" @kind object;
  #L1b1e06.  v7:= new `java.lang.Object`[v9];
  #L1b1e0a.  v7[v6]:= v4 @kind object;
  #L1b1e0e.  call temp:= `parameterError`(v10, v1, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1e14.  v5:= temp @kind object;
  #L1b1e16.  throw v5;
  #L1b1e18.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L1b1e1c.  v2:= v5[v1] @kind object;
  #L1b1e20.  if v2 != 0 then goto L1b1e36;
  #L1b1e24.  v5:= "No Retrofit annotation found." @kind object;
  #L1b1e28.  v6:= new `java.lang.Object`[v6];
  #L1b1e2c.  call temp:= `parameterError`(v10, v1, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1e32.  v5:= temp @kind object;
  #L1b1e34.  throw v5;
  #L1b1e36.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L1b1e3a.  call temp:= `parseParameter`(v10, v1, v4, v2) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L1b1e40.  v7:= temp @kind object;
  #L1b1e42.  v5[v1]:= v7 @kind object;
  #L1b1e46.  v1:= v1 + 1;
  #L1b1e4a.  goto L1b1dea;
  #L1b1e4c.  v5:= v10.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b1e50.  if v5 != 0 then goto L1b1e76;
  #L1b1e54.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b1e58.  if v5 != 0 then goto L1b1e76;
  #L1b1e5c.  v5:= "Missing either @%s URL or @Url parameter." @kind object;
  #L1b1e60.  v7:= new `java.lang.Object`[v9];
  #L1b1e64.  v8:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b1e68.  v7[v6]:= v8 @kind object;
  #L1b1e6c.  call temp:= `methodError`(v10, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1e72.  v5:= temp @kind object;
  #L1b1e74.  throw v5;
  #L1b1e76.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b1e7a.  if v5 != 0 then goto L1b1ea8;
  #L1b1e7e.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b1e82.  if v5 != 0 then goto L1b1ea8;
  #L1b1e86.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L1b1e8a.  if v5 != 0 then goto L1b1ea8;
  #L1b1e8e.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L1b1e92.  if v5 == 0 then goto L1b1ea8;
  #L1b1e96.  v5:= "Non-body HTTP method cannot contain @Body." @kind object;
  #L1b1e9a.  v6:= new `java.lang.Object`[v6];
  #L1b1e9e.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1ea4.  v5:= temp @kind object;
  #L1b1ea6.  throw v5;
  #L1b1ea8.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b1eac.  if v5 == 0 then goto L1b1eca;
  #L1b1eb0.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` @kind boolean;
  #L1b1eb4.  if v5 != 0 then goto L1b1eca;
  #L1b1eb8.  v5:= "Form-encoded method must contain at least one @Field." @kind object;
  #L1b1ebc.  v6:= new `java.lang.Object`[v6];
  #L1b1ec0.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1ec6.  v5:= temp @kind object;
  #L1b1ec8.  throw v5;
  #L1b1eca.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b1ece.  if v5 == 0 then goto L1b1eec;
  #L1b1ed2.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` @kind boolean;
  #L1b1ed6.  if v5 != 0 then goto L1b1eec;
  #L1b1eda.  v5:= "Multipart method must contain at least one @Part." @kind object;
  #L1b1ede.  v6:= new `java.lang.Object`[v6];
  #L1b1ee2.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1ee8.  v5:= temp @kind object;
  #L1b1eea.  throw v5;
  #L1b1eec.  v5:= new `retrofit2.ServiceMethod`;
  #L1b1ef0.  call `<init>`(v5, v10) @signature `Lretrofit2/ServiceMethod;.<init>:(Lretrofit2/ServiceMethod$Builder;)V` @kind direct;
  #L1b1ef6.  return v5 @kind object;
}

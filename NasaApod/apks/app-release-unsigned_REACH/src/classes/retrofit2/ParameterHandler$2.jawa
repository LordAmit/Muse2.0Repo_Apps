record `retrofit2.ParameterHandler$2` @kind class @AccessFlag  extends `retrofit2.ParameterHandler` @kind class {
  `retrofit2.ParameterHandler` `retrofit2.ParameterHandler$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$2` v0 @kind this, `retrofit2.ParameterHandler` v1 @kind object @name `this$0`) @signature `Lretrofit2/ParameterHandler$2;.<init>:(Lretrofit2/ParameterHandler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2201f8.  v0.`retrofit2.ParameterHandler$2.this$0` @type ^`retrofit2.ParameterHandler` := v1 @kind object;
  #L2201fc.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L220202.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$2` v4 @kind this, `retrofit2.RequestBuilder` v5 @kind object @name `builder`, `java.lang.Object` v6 @kind object @name `values`) @signature `Lretrofit2/ParameterHandler$2;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L220214.  if v6 != 0 then goto L22021a;
  #L220218.  return @kind void;
  #L22021a.  v0:= 0I;
  #L22021c.  call temp:= `getLength`(v6) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L220222.  v1:= temp;
  #L220224.  if v0 >= v1 then goto L220218;
  #L220228.  v2:= v4.`retrofit2.ParameterHandler$2.this$0` @type ^`retrofit2.ParameterHandler` @kind object;
  #L22022c.  call temp:= `get`(v6, v0) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L220232.  v3:= temp @kind object;
  #L220234.  call `apply`(v2, v5, v3) @signature `Lretrofit2/ParameterHandler;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @kind virtual;
  #L22023a.  v0:= v0 + 1;
  #L22023e.  goto L220224;
}

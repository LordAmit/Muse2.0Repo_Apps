record `retrofit2.Platform` @kind class @AccessFlag  {
}
global `retrofit2.Platform` `@@retrofit2.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ae9a4.  call temp:= `findPlatform`() @signature `Lretrofit2/Platform;.findPlatform:()Lretrofit2/Platform;` @kind static;
  #L1ae9aa.  v0:= temp @kind object;
  #L1ae9ac.  `@@retrofit2.Platform.PLATFORM` @type ^`retrofit2.Platform` := v0 @kind object;
  #L1ae9b0.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.Platform` v0 @kind this) @signature `Lretrofit2/Platform;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ae9c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ae9ca.  return @kind void;
}
procedure `retrofit2.Platform` `findPlatform`() @signature `Lretrofit2/Platform;.findPlatform:()Lretrofit2/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #Try_start0.  
  #L1ae9dc.  v0:= "android.os.Build" @kind object;
  #L1ae9e0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1ae9e6.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1ae9ea.  if v0 == 0 then goto L1ae9fc;
  #L1ae9ee.  v0:= new `retrofit2.Platform$Android`;
  #L1ae9f2.  call `<init>`(v0) @signature `Lretrofit2/Platform$Android;.<init>:()V` @kind direct;
  #Try_end0.  
  #L1ae9f8.  return v0 @kind object;
  #L1ae9fa.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #Try_start1.  
  #L1ae9fc.  v0:= "java.util.Optional" @kind object;
  #L1aea00.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1aea06.  v0:= new `retrofit2.Platform$Java8`;
  #L1aea0a.  call `<init>`(v0) @signature `Lretrofit2/Platform$Java8;.<init>:()V` @kind direct;
  #Try_end1.  
  #L1aea10.  goto L1ae9f8;
  #L1aea12.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L1aea14.  v0:= new `retrofit2.Platform`;
  #L1aea18.  call `<init>`(v0) @signature `Lretrofit2/Platform;.<init>:()V` @kind direct;
  #L1aea1e.  goto L1ae9f8;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L1ae9fa;
  catch `java.lang.ClassNotFoundException` @[Try_start1..Try_end1] goto L1aea12;
}
procedure `retrofit2.Platform` `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @AccessFlag STATIC {
    temp;
    v0;

  #L1aea4c.  v0:= `@@retrofit2.Platform.PLATFORM` @type ^`retrofit2.Platform` @kind object;
  #L1aea50.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter$Factory` `defaultCallAdapterFactory`(`retrofit2.Platform` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object @name `callbackExecutor`) @signature `Lretrofit2/Platform;.defaultCallAdapterFactory:(Ljava/util/concurrent/Executor;)Lretrofit2/CallAdapter$Factory;` @AccessFlag  {
    temp;
    v0;

  #L1aea64.  if v2 == 0 then goto L1aea74;
  #L1aea68.  v0:= new `retrofit2.ExecutorCallAdapterFactory`;
  #L1aea6c.  call `<init>`(v0, v2) @signature `Lretrofit2/ExecutorCallAdapterFactory;.<init>:(Ljava/util/concurrent/Executor;)V` @kind direct;
  #L1aea72.  return v0 @kind object;
  #L1aea74.  v0:= `@@retrofit2.DefaultCallAdapterFactory.INSTANCE` @type ^`retrofit2.CallAdapter$Factory` @kind object;
  #L1aea78.  goto L1aea72;
}
procedure `java.util.concurrent.Executor` `defaultCallbackExecutor`(`retrofit2.Platform` v1 @kind this) @signature `Lretrofit2/Platform;.defaultCallbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag  {
    temp;
    v0;

  #L1aea8c.  v0:= 0I;
  #L1aea8e.  return v0 @kind object;
}
procedure `java.lang.Object` `invokeDefaultMethod`(`retrofit2.Platform` v1 @kind this, `java.lang.reflect.Method` v2 @kind object @name `method`, `java.lang.Class` v3 @kind object, `java.lang.Object` v4 @kind object @name `object`, `java.lang.Object`[] v5 @kind object @name `args`) @signature `Lretrofit2/Platform;.invokeDefaultMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L1aeaa0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1aeaa4.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L1aeaaa.  throw v0;
}
procedure `boolean` `isDefaultMethod`(`retrofit2.Platform` v1 @kind this, `java.lang.reflect.Method` v2 @kind object @name `method`) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @AccessFlag  {
    temp;
    v0;

  #L1aeabc.  v0:= 0I;
  #L1aeabe.  return v0;
}

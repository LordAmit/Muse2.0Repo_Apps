record `retrofit2.RequestBuilder$ContentTypeOverridingRequestBody` @kind class @AccessFlag  extends `okhttp3.RequestBody` @kind class {
  `okhttp3.MediaType` `retrofit2.RequestBuilder$ContentTypeOverridingRequestBody.contentType` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RequestBody` `retrofit2.RequestBuilder$ContentTypeOverridingRequestBody.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody` v0 @kind this, `okhttp3.RequestBody` v1 @kind object @name `delegate`, `okhttp3.MediaType` v2 @kind object @name `contentType`) @signature `Lretrofit2/RequestBuilder$ContentTypeOverridingRequestBody;.<init>:(Lokhttp3/RequestBody;Lokhttp3/MediaType;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L220d34.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L220d3a.  v0.`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody.delegate` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L220d3e.  v0.`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody.contentType` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L220d42.  return @kind void;
}
procedure `long` `contentLength`(`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody` v2 @kind this) @signature `Lretrofit2/RequestBuilder$ContentTypeOverridingRequestBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L220d54.  v0:= v2.`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody.delegate` @type ^`okhttp3.RequestBody` @kind object;
  #L220d58.  call temp:= `contentLength`(v0) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L220d5e.  v0:= temp @kind wide;
  #L220d60.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody` v1 @kind this) @signature `Lretrofit2/RequestBuilder$ContentTypeOverridingRequestBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L220d74.  v0:= v1.`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L220d78.  return v0 @kind object;
}
procedure `void` `writeTo`(`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody` v1 @kind this, `okio.BufferedSink` v2 @kind object @name `sink`) @signature `Lretrofit2/RequestBuilder$ContentTypeOverridingRequestBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L220d8c.  v0:= v1.`retrofit2.RequestBuilder$ContentTypeOverridingRequestBody.delegate` @type ^`okhttp3.RequestBody` @kind object;
  #L220d90.  call `writeTo`(v0, v2) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L220d96.  return @kind void;
}

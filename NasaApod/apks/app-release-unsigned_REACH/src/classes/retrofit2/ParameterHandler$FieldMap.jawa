record `retrofit2.ParameterHandler$FieldMap` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$FieldMap.encoded` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$FieldMap.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$FieldMap` v0 @kind this, `retrofit2.Converter` v1 @kind object, `boolean` v2 @name `encoded`) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L220368.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L22036e.  v0.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` := v1 @kind object;
  #L220372.  v0.`retrofit2.ParameterHandler$FieldMap.encoded` @type ^`boolean` := v2 @kind boolean;
  #L220376.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$FieldMap` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L220388.  v2:= (`java.util.Map`) v2 @kind object;
  #L22038c.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @kind virtual;
  #L220392.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$FieldMap` v7 @kind this, `retrofit2.RequestBuilder` v8 @kind object @name `builder`, `java.util.Map` v9 @kind object) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2203a4.  if v9 != 0 then goto L2203b8;
  #L2203a8.  v4:= new `java.lang.IllegalArgumentException`;
  #L2203ac.  v5:= "Field map was null." @kind object;
  #L2203b0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2203b6.  throw v4;
  #L2203b8.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2203be.  v4:= temp @kind object;
  #L2203c0.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2203c6.  v4:= temp @kind object;
  #L2203c8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2203ce.  v5:= temp;
  #L2203d0.  if v5 == 0 then goto L2204e6;
  #L2203d4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2203da.  v0:= temp @kind object;
  #L2203dc.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2203e0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2203e6.  v1:= temp @kind object;
  #L2203e8.  v1:= (`java.lang.String`) v1 @kind object;
  #L2203ec.  if v1 != 0 then goto L220400;
  #L2203f0.  v4:= new `java.lang.IllegalArgumentException`;
  #L2203f4.  v5:= "Field map contained null key." @kind object;
  #L2203f8.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2203fe.  throw v4;
  #L220400.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L220406.  v2:= temp @kind object;
  #L220408.  if v2 != 0 then goto L22044a;
  #L22040c.  v4:= new `java.lang.IllegalArgumentException`;
  #L220410.  v5:= new `java.lang.StringBuilder`;
  #L220414.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22041a.  v6:= "Field map contained null value for key '" @kind object;
  #L22041e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220424.  v5:= temp @kind object;
  #L220426.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22042c.  v5:= temp @kind object;
  #L22042e.  v6:= "'." @kind object;
  #L220432.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220438.  v5:= temp @kind object;
  #L22043a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L220440.  v5:= temp @kind object;
  #L220442.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220448.  throw v4;
  #L22044a.  v5:= v7.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L22044e.  call temp:= `convert`(v5, v2) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L220454.  v3:= temp @kind object;
  #L220456.  v3:= (`java.lang.String`) v3 @kind object;
  #L22045a.  if v3 != 0 then goto L2204d8;
  #L22045e.  v4:= new `java.lang.IllegalArgumentException`;
  #L220462.  v5:= new `java.lang.StringBuilder`;
  #L220466.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L22046c.  v6:= "Field map value '" @kind object;
  #L220470.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220476.  v5:= temp @kind object;
  #L220478.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22047e.  v5:= temp @kind object;
  #L220480.  v6:= "' converted to null by " @kind object;
  #L220484.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L22048a.  v5:= temp @kind object;
  #L22048c.  v6:= v7.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L220490.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L220496.  v6:= temp @kind object;
  #L220498.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L22049e.  v6:= temp @kind object;
  #L2204a0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2204a6.  v5:= temp @kind object;
  #L2204a8.  v6:= " for key '" @kind object;
  #L2204ac.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2204b2.  v5:= temp @kind object;
  #L2204b4.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2204ba.  v5:= temp @kind object;
  #L2204bc.  v6:= "'." @kind object;
  #L2204c0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2204c6.  v5:= temp @kind object;
  #L2204c8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2204ce.  v5:= temp @kind object;
  #L2204d0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2204d6.  throw v4;
  #L2204d8.  v5:= v7.`retrofit2.ParameterHandler$FieldMap.encoded` @type ^`boolean` @kind boolean;
  #L2204dc.  call `addFormField`(v8, v1, v3, v5) @signature `Lretrofit2/RequestBuilder;.addFormField:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L2204e2.  goto L2203c8;
  #L2204e6.  return @kind void;
}

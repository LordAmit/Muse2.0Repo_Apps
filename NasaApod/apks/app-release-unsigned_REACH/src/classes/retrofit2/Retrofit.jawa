record `retrofit2.Retrofit` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.HttpUrl` `retrofit2.Retrofit.baseUrl` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.callAdapterFactories` @AccessFlag FINAL;
  `okhttp3.Call$Factory` `retrofit2.Retrofit.callFactory` @AccessFlag FINAL;
  `java.util.concurrent.Executor` `retrofit2.Retrofit.callbackExecutor` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.converterFactories` @AccessFlag FINAL;
  `java.util.Map` `retrofit2.Retrofit.serviceMethodCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.Retrofit.validateEagerly` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.Retrofit` v1 @kind this, `okhttp3.Call$Factory` v2 @kind object @name `callFactory`, `okhttp3.HttpUrl` v3 @kind object @name `baseUrl`, `java.util.List` v4 @kind object, `java.util.List` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object @name `callbackExecutor`, `boolean` v7 @name `validateEagerly`) @signature `Lretrofit2/Retrofit;.<init>:(Lokhttp3/Call$Factory;Lokhttp3/HttpUrl;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1af7f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1af7f6.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L1af7fa.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L1af800.  v1.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` := v0 @kind object;
  #L1af804.  v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` := v2 @kind object;
  #L1af808.  v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L1af80c.  v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` := v4 @kind object;
  #L1af810.  v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` := v5 @kind object;
  #L1af814.  v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` := v6 @kind object;
  #L1af818.  v1.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` := v7 @kind boolean;
  #L1af81c.  return @kind void;
}
procedure `void` `eagerlyValidateMethods`(`retrofit2.Retrofit` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1af830.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L1af836.  v1:= temp @kind object;
  #L1af838.  call temp:= `getDeclaredMethods`(v7) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L1af83e.  v3:= temp @kind object;
  #L1af840.  v4:= length @variable v3;
  #L1af842.  v2:= 0I;
  #L1af844.  if v2 >= v4 then goto L1af864;
  #L1af848.  v0:= v3[v2] @kind object;
  #L1af84c.  call temp:= `isDefaultMethod`(v1, v0) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @kind virtual;
  #L1af852.  v5:= temp;
  #L1af854.  if v5 != 0 then goto L1af85e;
  #L1af858.  call temp:= `loadServiceMethod`(v6, v0) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind virtual;
  #L1af85e.  v2:= v2 + 1;
  #L1af862.  goto L1af844;
  #L1af864.  return @kind void;
}
procedure `okhttp3.HttpUrl` `baseUrl`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.baseUrl:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af878.  v0:= v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1af87c.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `callAdapter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af890.  v0:= 0I;
  #L1af892.  call temp:= `nextCallAdapter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L1af898.  v0:= temp @kind object;
  #L1af89a.  return v0 @kind object;
}
procedure `java.util.List` `callAdapterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callAdapterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af8ac.  v0:= v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1af8b0.  return v0 @kind object;
}
procedure `okhttp3.Call$Factory` `callFactory`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callFactory:()Lokhttp3/Call$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af8c4.  v0:= v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L1af8c8.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `callbackExecutor`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af8dc.  v0:= v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L1af8e0.  return v0 @kind object;
}
procedure `java.util.List` `converterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.converterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af8f4.  v0:= v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1af8f8.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`retrofit2.Retrofit` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1af90c.  call `validateServiceInterface`(v4) @signature `Lretrofit2/Utils;.validateServiceInterface:(Ljava/lang/Class;)V` @kind static;
  #L1af912.  v0:= v3.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` @kind boolean;
  #L1af916.  if v0 == 0 then goto L1af920;
  #L1af91a.  call `eagerlyValidateMethods`(v3, v4) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @kind direct;
  #L1af920.  call temp:= `getClassLoader`(v4) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1af926.  v0:= temp @kind object;
  #L1af928.  v1:= 1I;
  #L1af92a.  v1:= new `java.lang.Class`[v1];
  #L1af92e.  v2:= 0I;
  #L1af930.  v1[v2]:= v4 @kind object;
  #L1af934.  v2:= new `retrofit2.Retrofit$1`;
  #L1af938.  call `<init>`(v2, v3, v4) @signature `Lretrofit2/Retrofit$1;.<init>:(Lretrofit2/Retrofit;Ljava/lang/Class;)V` @kind direct;
  #L1af93e.  call temp:= `newProxyInstance`(v0, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L1af944.  v0:= temp @kind object;
  #L1af946.  return v0 @kind object;
}
procedure `retrofit2.ServiceMethod` `loadServiceMethod`(`retrofit2.Retrofit` v5 @kind this, `java.lang.reflect.Method` v6 @kind object @name `method`) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1af958.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1af95c.  call temp:= `get`(v3, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1af962.  v1:= temp @kind object;
  #L1af964.  v1:= (`retrofit2.ServiceMethod`) v1 @kind object;
  #L1af968.  if v1 == 0 then goto L1af970;
  #L1af96c.  v2:= v1 @kind object;
  #L1af96e.  return v2 @kind object;
  #L1af970.  v4:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1af974.  @monitorenter v4
  #Try_start0.  
  #L1af976.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1af97a.  call temp:= `get`(v3, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1af980.  v3:= temp @kind object;
  #L1af982.  v0:= v3 @kind object;
  #L1af984.  v0:= (`retrofit2.ServiceMethod`) v0 @kind object;
  #L1af988.  v1:= v0 @kind object;
  #L1af98a.  if v1 != 0 then goto L1af9aa;
  #L1af98e.  v3:= new `retrofit2.ServiceMethod$Builder`;
  #L1af992.  call `<init>`(v3, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @kind direct;
  #L1af998.  call temp:= `build`(v3) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @kind virtual;
  #L1af99e.  v1:= temp @kind object;
  #L1af9a0.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1af9a4.  call temp:= `put`(v3, v6, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1af9aa.  @monitorexit v4
  #L1af9ac.  v2:= v1 @kind object;
  #L1af9ae.  goto L1af96e;
  #L1af9b0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1af9b2.  @monitorexit v4
  #Try_end0.  
  #L1af9b4.  throw v3;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1af9b0;
}
procedure `retrofit2.Retrofit$Builder` `newBuilder`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.newBuilder:()Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af9d4.  v0:= new `retrofit2.Retrofit$Builder`;
  #L1af9d8.  call `<init>`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Retrofit;)V` @kind direct;
  #L1af9de.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `nextCallAdapter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.CallAdapter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1af9f0.  v5:= "returnType == null" @kind object;
  #L1af9f4.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1af9fa.  v5:= "annotations == null" @kind object;
  #L1af9fe.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1afa04.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1afa08.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1afa0e.  v5:= temp;
  #L1afa10.  v4:= v5 + 1;
  #L1afa14.  v3:= v4;
  #L1afa16.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1afa1a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1afa20.  v2:= temp;
  #L1afa22.  if v3 >= v2 then goto L1afa4a;
  #L1afa26.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1afa2a.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afa30.  v5:= temp @kind object;
  #L1afa32.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1afa36.  call temp:= `get`(v5, v9, v10, v7) @signature `Lretrofit2/CallAdapter$Factory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @kind virtual;
  #L1afa3c.  v0:= temp @kind object;
  #L1afa3e.  if v0 == 0 then goto L1afa44;
  #L1afa42.  return v0 @kind object;
  #L1afa44.  v3:= v3 + 1;
  #L1afa48.  goto L1afa22;
  #L1afa4a.  v5:= new `java.lang.StringBuilder`;
  #L1afa4e.  v6:= "Could not locate call adapter for " @kind object;
  #L1afa52.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afa58.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afa5e.  v5:= temp @kind object;
  #L1afa60.  v6:= ".\n" @kind object;
  #L1afa64.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afa6a.  v1:= temp @kind object;
  #L1afa6c.  if v8 == 0 then goto L1afac2;
  #L1afa70.  v5:= "  Skipped:" @kind object;
  #L1afa74.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afa7a.  v3:= 0I;
  #L1afa7c.  if v3 >= v4 then goto L1afab8;
  #L1afa80.  v5:= "\n   * " @kind object;
  #L1afa84.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afa8a.  v6:= temp @kind object;
  #L1afa8c.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1afa90.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afa96.  v5:= temp @kind object;
  #L1afa98.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1afa9c.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1afaa2.  v5:= temp @kind object;
  #L1afaa4.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1afaaa.  v5:= temp @kind object;
  #L1afaac.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afab2.  v3:= v3 + 1;
  #L1afab6.  goto L1afa7c;
  #L1afab8.  v5:= 10I;
  #L1afabc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afac2.  v5:= "  Tried:" @kind object;
  #L1afac6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afacc.  v3:= v4;
  #L1aface.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1afad2.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1afad8.  v2:= temp;
  #L1afada.  if v3 >= v2 then goto L1afb16;
  #L1afade.  v5:= "\n   * " @kind object;
  #L1afae2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afae8.  v6:= temp @kind object;
  #L1afaea.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1afaee.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afaf4.  v5:= temp @kind object;
  #L1afaf6.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1afafa.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1afb00.  v5:= temp @kind object;
  #L1afb02.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1afb08.  v5:= temp @kind object;
  #L1afb0a.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb10.  v3:= v3 + 1;
  #L1afb14.  goto L1afada;
  #L1afb16.  v5:= new `java.lang.IllegalArgumentException`;
  #L1afb1a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afb20.  v6:= temp @kind object;
  #L1afb22.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afb28.  throw v5;
}
procedure `retrofit2.Converter` `nextRequestBodyConverter`(`retrofit2.Retrofit` v8 @kind this, `retrofit2.Converter$Factory` v9 @kind object @name `skipPast`, `java.lang.reflect.Type` v10 @kind object @name `type`, `java.lang.annotation.Annotation`[] v11 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v12 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1afb3c.  v6:= "type == null" @kind object;
  #L1afb40.  call temp:= `checkNotNull`(v10, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1afb46.  v6:= "parameterAnnotations == null" @kind object;
  #L1afb4a.  call temp:= `checkNotNull`(v11, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1afb50.  v6:= "methodAnnotations == null" @kind object;
  #L1afb54.  call temp:= `checkNotNull`(v12, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1afb5a.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afb5e.  call temp:= `indexOf`(v6, v9) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1afb64.  v6:= temp;
  #L1afb66.  v5:= v6 + 1;
  #L1afb6a.  v4:= v5;
  #L1afb6c.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afb70.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1afb76.  v2:= temp;
  #L1afb78.  if v4 >= v2 then goto L1afba0;
  #L1afb7c.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afb80.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afb86.  v3:= temp @kind object;
  #L1afb88.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L1afb8c.  call temp:= `requestBodyConverter`(v3, v10, v11, v12, v8) @signature `Lretrofit2/Converter$Factory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1afb92.  v1:= temp @kind object;
  #L1afb94.  if v1 == 0 then goto L1afb9a;
  #L1afb98.  return v1 @kind object;
  #L1afb9a.  v4:= v4 + 1;
  #L1afb9e.  goto L1afb78;
  #L1afba0.  v6:= new `java.lang.StringBuilder`;
  #L1afba4.  v7:= "Could not locate RequestBody converter for " @kind object;
  #L1afba8.  call `<init>`(v6, v7) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afbae.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afbb4.  v6:= temp @kind object;
  #L1afbb6.  v7:= ".\n" @kind object;
  #L1afbba.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afbc0.  v0:= temp @kind object;
  #L1afbc2.  if v9 == 0 then goto L1afc18;
  #L1afbc6.  v6:= "  Skipped:" @kind object;
  #L1afbca.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afbd0.  v4:= 0I;
  #L1afbd2.  if v4 >= v5 then goto L1afc0e;
  #L1afbd6.  v6:= "\n   * " @kind object;
  #L1afbda.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afbe0.  v7:= temp @kind object;
  #L1afbe2.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afbe6.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afbec.  v6:= temp @kind object;
  #L1afbee.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L1afbf2.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1afbf8.  v6:= temp @kind object;
  #L1afbfa.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1afc00.  v6:= temp @kind object;
  #L1afc02.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afc08.  v4:= v4 + 1;
  #L1afc0c.  goto L1afbd2;
  #L1afc0e.  v6:= 10I;
  #L1afc12.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afc18.  v6:= "  Tried:" @kind object;
  #L1afc1c.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afc22.  v4:= v5;
  #L1afc24.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afc28.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1afc2e.  v2:= temp;
  #L1afc30.  if v4 >= v2 then goto L1afc6c;
  #L1afc34.  v6:= "\n   * " @kind object;
  #L1afc38.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afc3e.  v7:= temp @kind object;
  #L1afc40.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afc44.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afc4a.  v6:= temp @kind object;
  #L1afc4c.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L1afc50.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1afc56.  v6:= temp @kind object;
  #L1afc58.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1afc5e.  v6:= temp @kind object;
  #L1afc60.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afc66.  v4:= v4 + 1;
  #L1afc6a.  goto L1afc30;
  #L1afc6c.  v6:= new `java.lang.IllegalArgumentException`;
  #L1afc70.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afc76.  v7:= temp @kind object;
  #L1afc78.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afc7e.  throw v6;
}
procedure `retrofit2.Converter` `nextResponseBodyConverter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.Converter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `type`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1afc90.  v5:= "type == null" @kind object;
  #L1afc94.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1afc9a.  v5:= "annotations == null" @kind object;
  #L1afc9e.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1afca4.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afca8.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1afcae.  v5:= temp;
  #L1afcb0.  v4:= v5 + 1;
  #L1afcb4.  v3:= v4;
  #L1afcb6.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afcba.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1afcc0.  v2:= temp;
  #L1afcc2.  if v3 >= v2 then goto L1afcea;
  #L1afcc6.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afcca.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afcd0.  v5:= temp @kind object;
  #L1afcd2.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1afcd6.  call temp:= `responseBodyConverter`(v5, v9, v10, v7) @signature `Lretrofit2/Converter$Factory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1afcdc.  v1:= temp @kind object;
  #L1afcde.  if v1 == 0 then goto L1afce4;
  #L1afce2.  return v1 @kind object;
  #L1afce4.  v3:= v3 + 1;
  #L1afce8.  goto L1afcc2;
  #L1afcea.  v5:= new `java.lang.StringBuilder`;
  #L1afcee.  v6:= "Could not locate ResponseBody converter for " @kind object;
  #L1afcf2.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afcf8.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afcfe.  v5:= temp @kind object;
  #L1afd00.  v6:= ".\n" @kind object;
  #L1afd04.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afd0a.  v0:= temp @kind object;
  #L1afd0c.  if v8 == 0 then goto L1afd62;
  #L1afd10.  v5:= "  Skipped:" @kind object;
  #L1afd14.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afd1a.  v3:= 0I;
  #L1afd1c.  if v3 >= v4 then goto L1afd58;
  #L1afd20.  v5:= "\n   * " @kind object;
  #L1afd24.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afd2a.  v6:= temp @kind object;
  #L1afd2c.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afd30.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afd36.  v5:= temp @kind object;
  #L1afd38.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1afd3c.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1afd42.  v5:= temp @kind object;
  #L1afd44.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1afd4a.  v5:= temp @kind object;
  #L1afd4c.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afd52.  v3:= v3 + 1;
  #L1afd56.  goto L1afd1c;
  #L1afd58.  v5:= 10I;
  #L1afd5c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afd62.  v5:= "  Tried:" @kind object;
  #L1afd66.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afd6c.  v3:= v4;
  #L1afd6e.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afd72.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1afd78.  v2:= temp;
  #L1afd7a.  if v3 >= v2 then goto L1afdb6;
  #L1afd7e.  v5:= "\n   * " @kind object;
  #L1afd82.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afd88.  v6:= temp @kind object;
  #L1afd8a.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afd8e.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afd94.  v5:= temp @kind object;
  #L1afd96.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1afd9a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1afda0.  v5:= temp @kind object;
  #L1afda2.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1afda8.  v5:= temp @kind object;
  #L1afdaa.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afdb0.  v3:= v3 + 1;
  #L1afdb4.  goto L1afd7a;
  #L1afdb6.  v5:= new `java.lang.IllegalArgumentException`;
  #L1afdba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afdc0.  v6:= temp @kind object;
  #L1afdc2.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afdc8.  throw v5;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v4 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afddc.  v0:= 0I;
  #L1afdde.  call temp:= `nextRequestBodyConverter`(v1, v0, v2, v3, v4) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1afde4.  v0:= temp @kind object;
  #L1afde6.  return v0 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afdf8.  v0:= 0I;
  #L1afdfa.  call temp:= `nextResponseBodyConverter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1afe00.  v0:= temp @kind object;
  #L1afe02.  return v0 @kind object;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.Retrofit` v4 @kind this, `java.lang.reflect.Type` v5 @kind object @name `type`, `java.lang.annotation.Annotation`[] v6 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1afe14.  v3:= "type == null" @kind object;
  #L1afe18.  call temp:= `checkNotNull`(v5, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1afe1e.  v3:= "annotations == null" @kind object;
  #L1afe22.  call temp:= `checkNotNull`(v6, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1afe28.  v2:= 0I;
  #L1afe2a.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afe2e.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1afe34.  v1:= temp;
  #L1afe36.  if v2 >= v1 then goto L1afe5e;
  #L1afe3a.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afe3e.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1afe44.  v3:= temp @kind object;
  #L1afe46.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L1afe4a.  call temp:= `stringConverter`(v3, v5, v6, v4) @signature `Lretrofit2/Converter$Factory;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1afe50.  v0:= temp @kind object;
  #L1afe52.  if v0 == 0 then goto L1afe58;
  #L1afe56.  return v0 @kind object;
  #L1afe58.  v2:= v2 + 1;
  #L1afe5c.  goto L1afe36;
  #L1afe5e.  v0:= `@@retrofit2.BuiltInConverters$ToStringConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$ToStringConverter` @kind object;
  #L1afe62.  goto L1afe56;
}

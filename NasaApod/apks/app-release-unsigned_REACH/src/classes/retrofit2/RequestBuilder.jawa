record `retrofit2.RequestBuilder` @kind class @AccessFlag FINAL {
  `okhttp3.HttpUrl` `retrofit2.RequestBuilder.baseUrl` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RequestBody` `retrofit2.RequestBuilder.body` @AccessFlag PRIVATE;
  `okhttp3.MediaType` `retrofit2.RequestBuilder.contentType` @AccessFlag PRIVATE;
  `okhttp3.FormBody$Builder` `retrofit2.RequestBuilder.formBuilder` @AccessFlag PRIVATE;
  `boolean` `retrofit2.RequestBuilder.hasBody` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.RequestBuilder.method` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MultipartBody$Builder` `retrofit2.RequestBuilder.multipartBuilder` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit2.RequestBuilder.relativeUrl` @AccessFlag PRIVATE;
  `okhttp3.Request$Builder` `retrofit2.RequestBuilder.requestBuilder` @AccessFlag PRIVATE_FINAL;
  `okhttp3.HttpUrl$Builder` `retrofit2.RequestBuilder.urlBuilder` @AccessFlag PRIVATE;
}
global `char`[] `@@retrofit2.RequestBuilder.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@retrofit2.RequestBuilder.PATH_SEGMENT_ALWAYS_ENCODE_SET` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/RequestBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1aead0.  v0:= 16I;
  #L1aead4.  v0:= new `char`[v0];
  #L1aead8.  goto L1aeae4;
  #L1aeade.  `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L1aeae2.  return @kind void;
  #L1aeae4.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L1aeb0b.  goto L1aeade;
}
procedure `void` `<init>`(`retrofit2.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object @name `method`, `okhttp3.HttpUrl` v4 @kind object @name `baseUrl`, `java.lang.String` v5 @kind object @name `relativeUrl`, `okhttp3.Headers` v6 @kind object @name `headers`, `okhttp3.MediaType` v7 @kind object @name `contentType`, `boolean` v8 @name `hasBody`, `boolean` v9 @name `isFormEncoded`, `boolean` v10 @name `isMultipart`) @signature `Lretrofit2/RequestBuilder;.<init>:(Ljava/lang/String;Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/MediaType;ZZZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1aeb1c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aeb22.  v2.`retrofit2.RequestBuilder.method` @type ^`java.lang.String` := v3 @kind object;
  #L1aeb26.  v2.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` := v4 @kind object;
  #L1aeb2a.  v2.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v5 @kind object;
  #L1aeb2e.  v0:= new `okhttp3.Request$Builder`;
  #L1aeb32.  call `<init>`(v0) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L1aeb38.  v2.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` := v0 @kind object;
  #L1aeb3c.  v2.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` := v7 @kind object;
  #L1aeb40.  v2.`retrofit2.RequestBuilder.hasBody` @type ^`boolean` := v8 @kind boolean;
  #L1aeb44.  if v6 == 0 then goto L1aeb52;
  #L1aeb48.  v0:= v2.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L1aeb4c.  call temp:= `headers`(v0, v6) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1aeb52.  if v9 == 0 then goto L1aeb66;
  #L1aeb56.  v0:= new `okhttp3.FormBody$Builder`;
  #L1aeb5a.  call `<init>`(v0) @signature `Lokhttp3/FormBody$Builder;.<init>:()V` @kind direct;
  #L1aeb60.  v2.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` := v0 @kind object;
  #L1aeb64.  return @kind void;
  #L1aeb66.  if v10 == 0 then goto L1aeb64;
  #L1aeb6a.  v0:= new `okhttp3.MultipartBody$Builder`;
  #L1aeb6e.  call `<init>`(v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @kind direct;
  #L1aeb74.  v2.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` := v0 @kind object;
  #L1aeb78.  v0:= v2.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1aeb7c.  v1:= `@@okhttp3.MultipartBody.FORM` @type ^`okhttp3.MediaType` @kind object;
  #L1aeb80.  call temp:= `setType`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L1aeb86.  goto L1aeb64;
}
procedure `java.lang.String` `canonicalizeForPath`(`java.lang.String` v6 @kind object @name `input`, `boolean` v7 @name `alreadyEncoded`) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1aeb98.  v1:= 0I;
  #L1aeb9a.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aeba0.  v2:= temp;
  #L1aeba2.  if v1 >= v2 then goto L1aec04;
  #L1aeba6.  call temp:= `codePointAt`(v6, v1) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L1aebac.  v0:= temp;
  #L1aebae.  v4:= 32I;
  #L1aebb2.  if v0 < v4 then goto L1aebe4;
  #L1aebb6.  v4:= 127I;
  #L1aebba.  if v0 >= v4 then goto L1aebe4;
  #L1aebbe.  v4:= " \"<>^`{}|\\?#" @kind object;
  #L1aebc2.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1aebc8.  v4:= temp;
  #L1aebca.  v5:= -1I;
  #L1aebcc.  if v4 != v5 then goto L1aebe4;
  #L1aebd0.  if v7 != 0 then goto L1aec06;
  #L1aebd4.  v4:= 47I;
  #L1aebd8.  if v0 == v4 then goto L1aebe4;
  #L1aebdc.  v4:= 37I;
  #L1aebe0.  if v0 != v4 then goto L1aec06;
  #L1aebe4.  v3:= new `okio.Buffer`;
  #L1aebe8.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1aebee.  v4:= 0I;
  #L1aebf0.  call temp:= `writeUtf8`(v3, v6, v4, v1) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L1aebf6.  call `canonicalizeForPath`(v3, v6, v1, v2, v7) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L1aebfc.  call temp:= `readUtf8`(v3) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1aec02.  v6:= temp @kind object;
  #L1aec04.  return v6 @kind object;
  #L1aec06.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L1aec0c.  v4:= temp;
  #L1aec0e.  v1:= v1 + v4 @kind int;
  #L1aec10.  goto L1aeba2;
}
procedure `void` `canonicalizeForPath`(`okio.Buffer` v7 @kind object @name `out`, `java.lang.String` v8 @kind object @name `input`, `int` v9 @name `pos`, `int` v10 @name `limit`, `boolean` v11 @name `alreadyEncoded`) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1aec24.  v6:= 37I;
  #L1aec28.  v3:= 0I;
  #L1aec2a.  v2:= v9;
  #L1aec2c.  if v2 >= v10 then goto L1aecfe;
  #L1aec30.  call temp:= `codePointAt`(v8, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L1aec36.  v1:= temp;
  #L1aec38.  if v11 == 0 then goto L1aec68;
  #L1aec3c.  v4:= 9I;
  #L1aec40.  if v1 == v4 then goto L1aec5c;
  #L1aec44.  v4:= 10I;
  #L1aec48.  if v1 == v4 then goto L1aec5c;
  #L1aec4c.  v4:= 12I;
  #L1aec50.  if v1 == v4 then goto L1aec5c;
  #L1aec54.  v4:= 13I;
  #L1aec58.  if v1 != v4 then goto L1aec68;
  #L1aec5c.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L1aec62.  v4:= temp;
  #L1aec64.  v2:= v2 + v4 @kind int;
  #L1aec66.  goto L1aec2c;
  #L1aec68.  v4:= 32I;
  #L1aec6c.  if v1 < v4 then goto L1aec9a;
  #L1aec70.  v4:= 127I;
  #L1aec74.  if v1 >= v4 then goto L1aec9a;
  #L1aec78.  v4:= " \"<>^`{}|\\?#" @kind object;
  #L1aec7c.  call temp:= `indexOf`(v4, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1aec82.  v4:= temp;
  #L1aec84.  v5:= -1I;
  #L1aec86.  if v4 != v5 then goto L1aec9a;
  #L1aec8a.  if v11 != 0 then goto L1aecf6;
  #L1aec8e.  v4:= 47I;
  #L1aec92.  if v1 == v4 then goto L1aec9a;
  #L1aec96.  if v1 != v6 then goto L1aecf6;
  #L1aec9a.  if v3 != 0 then goto L1aeca8;
  #L1aec9e.  v3:= new `okio.Buffer`;
  #L1aeca2.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1aeca8.  call temp:= `writeUtf8CodePoint`(v3, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L1aecae.  call temp:= `exhausted`(v3) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1aecb4.  v4:= temp;
  #L1aecb6.  if v4 != 0 then goto L1aec5c;
  #L1aecba.  call temp:= `readByte`(v3) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1aecc0.  v4:= temp;
  #L1aecc2.  v0:= v4 ^& 255;
  #L1aecc6.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1aeccc.  v4:= `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] @kind object;
  #L1aecd0.  v5:= v0 ^> 4;
  #L1aecd4.  v5:= v5 ^& 15;
  #L1aecd8.  v4:= v4[v5] @kind char;
  #L1aecdc.  call temp:= `writeByte`(v7, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1aece2.  v4:= `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] @kind object;
  #L1aece6.  v5:= v0 ^& 15;
  #L1aecea.  v4:= v4[v5] @kind char;
  #L1aecee.  call temp:= `writeByte`(v7, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1aecf4.  goto L1aecae;
  #L1aecf6.  call temp:= `writeUtf8CodePoint`(v7, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L1aecfc.  goto L1aec5c;
  #L1aecfe.  return @kind void;
}
procedure `void` `addFormField`(`retrofit2.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`, `boolean` v4 @name `encoded`) @signature `Lretrofit2/RequestBuilder;.addFormField:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;

  #L1aed10.  if v4 == 0 then goto L1aed20;
  #L1aed14.  v0:= v1.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L1aed18.  call temp:= `addEncoded`(v0, v2, v3) @signature `Lokhttp3/FormBody$Builder;.addEncoded:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;` @kind virtual;
  #L1aed1e.  return @kind void;
  #L1aed20.  v0:= v1.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L1aed24.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/FormBody$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;` @kind virtual;
  #L1aed2a.  goto L1aed1e;
}
procedure `void` `addHeader`(`retrofit2.RequestBuilder` v4 @kind this, `java.lang.String` v5 @kind object @name `name`, `java.lang.String` v6 @kind object @name `value`) @signature `Lretrofit2/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aed3c.  v1:= "Content-Type" @kind object;
  #L1aed40.  call temp:= `equalsIgnoreCase`(v1, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1aed46.  v1:= temp;
  #L1aed48.  if v1 == 0 then goto L1aed90;
  #L1aed4c.  call temp:= `parse`(v6) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1aed52.  v0:= temp @kind object;
  #L1aed54.  if v0 != 0 then goto L1aed8a;
  #L1aed58.  v1:= new `java.lang.IllegalArgumentException`;
  #L1aed5c.  v2:= new `java.lang.StringBuilder`;
  #L1aed60.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aed66.  v3:= "Malformed content type: " @kind object;
  #L1aed6a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aed70.  v2:= temp @kind object;
  #L1aed72.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aed78.  v2:= temp @kind object;
  #L1aed7a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aed80.  v2:= temp @kind object;
  #L1aed82.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aed88.  throw v1;
  #L1aed8a.  v4.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1aed8e.  return @kind void;
  #L1aed90.  v1:= v4.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L1aed94.  call temp:= `addHeader`(v1, v5, v6) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1aed9a.  goto L1aed8e;
}
procedure `void` `addPart`(`retrofit2.RequestBuilder` v1 @kind this, `okhttp3.Headers` v2 @kind object @name `headers`, `okhttp3.RequestBody` v3 @kind object @name `body`) @signature `Lretrofit2/RequestBuilder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag  {
    temp;
    v0;

  #L1aedac.  v0:= v1.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1aedb0.  call temp:= `addPart`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L1aedb6.  return @kind void;
}
procedure `void` `addPart`(`retrofit2.RequestBuilder` v1 @kind this, `okhttp3.MultipartBody$Part` v2 @kind object @name `part`) @signature `Lretrofit2/RequestBuilder;.addPart:(Lokhttp3/MultipartBody$Part;)V` @AccessFlag  {
    temp;
    v0;

  #L1aedc8.  v0:= v1.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1aedcc.  call temp:= `addPart`(v0, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L1aedd2.  return @kind void;
}
procedure `void` `addPathParam`(`retrofit2.RequestBuilder` v3 @kind this, `java.lang.String` v4 @kind object @name `name`, `java.lang.String` v5 @kind object @name `value`, `boolean` v6 @name `encoded`) @signature `Lretrofit2/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1aede4.  v0:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1aede8.  if v0 != 0 then goto L1aedf8;
  #L1aedec.  v0:= new `java.lang.AssertionError`;
  #L1aedf0.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1aedf6.  throw v0;
  #L1aedf8.  v0:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1aedfc.  v1:= new `java.lang.StringBuilder`;
  #L1aee00.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aee06.  v2:= "{" @kind object;
  #L1aee0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee10.  v1:= temp @kind object;
  #L1aee12.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee18.  v1:= temp @kind object;
  #L1aee1a.  v2:= "}" @kind object;
  #L1aee1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee24.  v1:= temp @kind object;
  #L1aee26.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aee2c.  v1:= temp @kind object;
  #L1aee2e.  call temp:= `canonicalizeForPath`(v5, v6) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L1aee34.  v2:= temp @kind object;
  #L1aee36.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1aee3c.  v0:= temp @kind object;
  #L1aee3e.  v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L1aee42.  return @kind void;
}
procedure `void` `addQueryParam`(`retrofit2.RequestBuilder` v3 @kind this, `java.lang.String` v4 @kind object @name `name`, `java.lang.String` v5 @kind object @name `value`, `boolean` v6 @name `encoded`) @signature `Lretrofit2/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1aee54.  v0:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1aee58.  if v0 == 0 then goto L1aeecc;
  #L1aee5c.  v0:= v3.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1aee60.  v1:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1aee64.  call temp:= `newBuilder`(v0, v1) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1aee6a.  v0:= temp @kind object;
  #L1aee6c.  v3.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` := v0 @kind object;
  #L1aee70.  v0:= v3.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L1aee74.  if v0 != 0 then goto L1aeec6;
  #L1aee78.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aee7c.  v1:= new `java.lang.StringBuilder`;
  #L1aee80.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aee86.  v2:= "Malformed URL. Base: " @kind object;
  #L1aee8a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee90.  v1:= temp @kind object;
  #L1aee92.  v2:= v3.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1aee96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee9c.  v1:= temp @kind object;
  #L1aee9e.  v2:= ", Relative: " @kind object;
  #L1aeea2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aeea8.  v1:= temp @kind object;
  #L1aeeaa.  v2:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1aeeae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aeeb4.  v1:= temp @kind object;
  #L1aeeb6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aeebc.  v1:= temp @kind object;
  #L1aeebe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aeec4.  throw v0;
  #L1aeec6.  v0:= 0I;
  #L1aeec8.  v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L1aeecc.  if v6 == 0 then goto L1aeedc;
  #L1aeed0.  v0:= v3.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L1aeed4.  call temp:= `addEncodedQueryParameter`(v0, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1aeeda.  return @kind void;
  #L1aeedc.  v0:= v3.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L1aeee0.  call temp:= `addQueryParameter`(v0, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1aeee6.  goto L1aeeda;
}
procedure `okhttp3.Request` `build`(`retrofit2.RequestBuilder` v8 @kind this) @signature `Lretrofit2/RequestBuilder;.build:()Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1aeef8.  v4:= v8.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L1aeefc.  if v4 == 0 then goto L1aef5e;
  #L1aef00.  call temp:= `build`(v4) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1aef06.  v3:= temp @kind object;
  #L1aef08.  v0:= v8.`retrofit2.RequestBuilder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L1aef0c.  if v0 != 0 then goto L1aef24;
  #L1aef10.  v5:= v8.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L1aef14.  if v5 == 0 then goto L1aefc0;
  #L1aef18.  v5:= v8.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L1aef1c.  call temp:= `build`(v5) @signature `Lokhttp3/FormBody$Builder;.build:()Lokhttp3/FormBody;` @kind virtual;
  #L1aef22.  v0:= temp @kind object;
  #L1aef24.  v2:= v8.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L1aef28.  if v2 == 0 then goto L1aef3c;
  #L1aef2c.  if v0 == 0 then goto L1aeff0;
  #L1aef30.  v1:= new `retrofit2.RequestBuilder$ContentTypeOverridingRequestBody`;
  #L1aef34.  call `<init>`(v1, v0, v2) @signature `Lretrofit2/RequestBuilder$ContentTypeOverridingRequestBody;.<init>:(Lokhttp3/RequestBody;Lokhttp3/MediaType;)V` @kind direct;
  #L1aef3a.  v0:= v1 @kind object;
  #L1aef3c.  v5:= v8.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L1aef40.  call temp:= `url`(v5, v3) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1aef46.  v5:= temp @kind object;
  #L1aef48.  v6:= v8.`retrofit2.RequestBuilder.method` @type ^`java.lang.String` @kind object;
  #L1aef4c.  call temp:= `method`(v5, v6, v0) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1aef52.  v5:= temp @kind object;
  #L1aef54.  call temp:= `build`(v5) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1aef5a.  v5:= temp @kind object;
  #L1aef5c.  return v5 @kind object;
  #L1aef5e.  v5:= v8.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1aef62.  v6:= v8.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1aef66.  call temp:= `resolve`(v5, v6) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L1aef6c.  v3:= temp @kind object;
  #L1aef6e.  if v3 != 0 then goto L1aef08;
  #L1aef72.  v5:= new `java.lang.IllegalArgumentException`;
  #L1aef76.  v6:= new `java.lang.StringBuilder`;
  #L1aef7a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aef80.  v7:= "Malformed URL. Base: " @kind object;
  #L1aef84.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aef8a.  v6:= temp @kind object;
  #L1aef8c.  v7:= v8.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1aef90.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aef96.  v6:= temp @kind object;
  #L1aef98.  v7:= ", Relative: " @kind object;
  #L1aef9c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aefa2.  v6:= temp @kind object;
  #L1aefa4.  v7:= v8.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1aefa8.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aefae.  v6:= temp @kind object;
  #L1aefb0.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aefb6.  v6:= temp @kind object;
  #L1aefb8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aefbe.  throw v5;
  #L1aefc0.  v5:= v8.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1aefc4.  if v5 == 0 then goto L1aefd6;
  #L1aefc8.  v5:= v8.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1aefcc.  call temp:= `build`(v5) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @kind virtual;
  #L1aefd2.  v0:= temp @kind object;
  #L1aefd4.  goto L1aef24;
  #L1aefd6.  v5:= v8.`retrofit2.RequestBuilder.hasBody` @type ^`boolean` @kind boolean;
  #L1aefda.  if v5 == 0 then goto L1aef24;
  #L1aefde.  v5:= 0I;
  #L1aefe0.  v6:= 0I;
  #L1aefe2.  v6:= new `byte`[v6];
  #L1aefe6.  call temp:= `create`(v5, v6) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L1aefec.  v0:= temp @kind object;
  #L1aefee.  goto L1aef24;
  #L1aeff0.  v5:= v8.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L1aeff4.  v6:= "Content-Type" @kind object;
  #L1aeff8.  call temp:= `toString`(v2) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aeffe.  v7:= temp @kind object;
  #L1af000.  call temp:= `addHeader`(v5, v6, v7) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1af006.  goto L1aef3c;
}
procedure `void` `setBody`(`retrofit2.RequestBuilder` v0 @kind this, `okhttp3.RequestBody` v1 @kind object @name `body`) @signature `Lretrofit2/RequestBuilder;.setBody:(Lokhttp3/RequestBody;)V` @AccessFlag  {
    temp;

  #L1af018.  v0.`retrofit2.RequestBuilder.body` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L1af01c.  return @kind void;
}
procedure `void` `setRelativeUrl`(`retrofit2.RequestBuilder` v1 @kind this, `java.lang.Object` v2 @kind object @name `relativeUrl`) @signature `Lretrofit2/RequestBuilder;.setRelativeUrl:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L1af030.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af036.  v0:= temp @kind object;
  #L1af038.  v1.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L1af03c.  return @kind void;
}

record `okio.Okio` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@okio.Okio.logger` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Okio;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ad320.  v0:= constclass @type ^`okio.Okio` @kind object;
  #L1ad324.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1ad32a.  v0:= temp @kind object;
  #L1ad32c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1ad332.  v0:= temp @kind object;
  #L1ad334.  `@@okio.Okio.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L1ad338.  return @kind void;
}
procedure `void` `<init>`(`okio.Okio` v0 @kind this) @signature `Lokio/Okio;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1ad34c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ad352.  return @kind void;
}
procedure `okio.Sink` `appendingSink`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.appendingSink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ad364.  if v2 != 0 then goto L1ad378;
  #L1ad368.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad36c.  v1:= "file == null" @kind object;
  #L1ad370.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad376.  throw v0;
  #L1ad378.  v0:= new `java.io.FileOutputStream`;
  #L1ad37c.  v1:= 1I;
  #L1ad37e.  call `<init>`(v0, v2, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L1ad384.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L1ad38a.  v0:= temp @kind object;
  #L1ad38c.  return v0 @kind object;
}
procedure `okio.Sink` `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ad3a0.  v0:= new `okio.Okio$3`;
  #L1ad3a4.  call `<init>`(v0) @signature `Lokio/Okio$3;.<init>:()V` @kind direct;
  #L1ad3aa.  return v0 @kind object;
}
procedure `okio.BufferedSink` `buffer`(`okio.Sink` v1 @kind object @name `sink`) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ad3bc.  v0:= new `okio.RealBufferedSink`;
  #L1ad3c0.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L1ad3c6.  return v0 @kind object;
}
procedure `okio.BufferedSource` `buffer`(`okio.Source` v1 @kind object @name `source`) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ad3d8.  v0:= new `okio.RealBufferedSource`;
  #L1ad3dc.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L1ad3e2.  return v0 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v2 @kind object @name `e`) @signature `Lokio/Okio;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1ad3f4.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1ad3fa.  v0:= temp @kind object;
  #L1ad3fc.  if v0 == 0 then goto L1ad428;
  #L1ad400.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1ad406.  v0:= temp @kind object;
  #L1ad408.  if v0 == 0 then goto L1ad428;
  #L1ad40c.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1ad412.  v0:= temp @kind object;
  #L1ad414.  v1:= "getsockname failed" @kind object;
  #L1ad418.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1ad41e.  v0:= temp;
  #L1ad420.  if v0 == 0 then goto L1ad428;
  #L1ad424.  v0:= 1I;
  #L1ad426.  return v0;
  #L1ad428.  v0:= 0I;
  #L1ad42a.  goto L1ad426;
}
procedure `okio.Sink` `sink`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.sink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ad43c.  if v2 != 0 then goto L1ad450;
  #L1ad440.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad444.  v1:= "file == null" @kind object;
  #L1ad448.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad44e.  throw v0;
  #L1ad450.  v0:= new `java.io.FileOutputStream`;
  #L1ad454.  call `<init>`(v0, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1ad45a.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L1ad460.  v0:= temp @kind object;
  #L1ad462.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v1 @kind object @name `out`) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ad474.  v0:= new `okio.Timeout`;
  #L1ad478.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L1ad47e.  call temp:= `sink`(v1, v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L1ad484.  v0:= temp @kind object;
  #L1ad486.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v2 @kind object @name `out`, `okio.Timeout` v3 @kind object @name `timeout`) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1ad498.  if v2 != 0 then goto L1ad4ac;
  #L1ad49c.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad4a0.  v1:= "out == null" @kind object;
  #L1ad4a4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad4aa.  throw v0;
  #L1ad4ac.  if v3 != 0 then goto L1ad4c0;
  #L1ad4b0.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad4b4.  v1:= "timeout == null" @kind object;
  #L1ad4b8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad4be.  throw v0;
  #L1ad4c0.  v0:= new `okio.Okio$1`;
  #L1ad4c4.  call `<init>`(v0, v3, v2) @signature `Lokio/Okio$1;.<init>:(Lokio/Timeout;Ljava/io/OutputStream;)V` @kind direct;
  #L1ad4ca.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.net.Socket` v4 @kind object @name `socket`) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ad4dc.  if v4 != 0 then goto L1ad4f0;
  #L1ad4e0.  v2:= new `java.lang.IllegalArgumentException`;
  #L1ad4e4.  v3:= "socket == null" @kind object;
  #L1ad4e8.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad4ee.  throw v2;
  #L1ad4f0.  call temp:= `getOutputStream`(v4) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L1ad4f6.  v2:= temp @kind object;
  #L1ad4f8.  if v2 != 0 then goto L1ad50c;
  #L1ad4fc.  v2:= new `java.io.IOException`;
  #L1ad500.  v3:= "socket's output stream == null" @kind object;
  #L1ad504.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad50a.  throw v2;
  #L1ad50c.  call temp:= `timeout`(v4) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L1ad512.  v1:= temp @kind object;
  #L1ad514.  call temp:= `getOutputStream`(v4) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L1ad51a.  v2:= temp @kind object;
  #L1ad51c.  call temp:= `sink`(v2, v1) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L1ad522.  v0:= temp @kind object;
  #L1ad524.  call temp:= `sink`(v1, v0) @signature `Lokio/AsyncTimeout;.sink:(Lokio/Sink;)Lokio/Sink;` @kind virtual;
  #L1ad52a.  v2:= temp @kind object;
  #L1ad52c.  return v2 @kind object;
}
procedure `okio.Sink` `sink`(`java.nio.file.Path` v2 @kind object @name `path`, `java.nio.file.OpenOption`[] v3 @kind object @name `options`) @signature `Lokio/Okio;.sink:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ad540.  if v2 != 0 then goto L1ad554;
  #L1ad544.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad548.  v1:= "path == null" @kind object;
  #L1ad54c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad552.  throw v0;
  #L1ad554.  call temp:= `newOutputStream`(v2, v3) @signature `Ljava/nio/file/Files;.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;` @kind static;
  #L1ad55a.  v0:= temp @kind object;
  #L1ad55c.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L1ad562.  v0:= temp @kind object;
  #L1ad564.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.source:(Ljava/io/File;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ad578.  if v2 != 0 then goto L1ad58c;
  #L1ad57c.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad580.  v1:= "file == null" @kind object;
  #L1ad584.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad58a.  throw v0;
  #L1ad58c.  v0:= new `java.io.FileInputStream`;
  #L1ad590.  call `<init>`(v0, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1ad596.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L1ad59c.  v0:= temp @kind object;
  #L1ad59e.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.InputStream` v1 @kind object @name `in`) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ad5b0.  v0:= new `okio.Timeout`;
  #L1ad5b4.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L1ad5ba.  call temp:= `source`(v1, v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L1ad5c0.  v0:= temp @kind object;
  #L1ad5c2.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.InputStream` v2 @kind object @name `in`, `okio.Timeout` v3 @kind object @name `timeout`) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1ad5d4.  if v2 != 0 then goto L1ad5e8;
  #L1ad5d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad5dc.  v1:= "in == null" @kind object;
  #L1ad5e0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad5e6.  throw v0;
  #L1ad5e8.  if v3 != 0 then goto L1ad5fc;
  #L1ad5ec.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad5f0.  v1:= "timeout == null" @kind object;
  #L1ad5f4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad5fa.  throw v0;
  #L1ad5fc.  v0:= new `okio.Okio$2`;
  #L1ad600.  call `<init>`(v0, v3, v2) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @kind direct;
  #L1ad606.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.net.Socket` v4 @kind object @name `socket`) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ad618.  if v4 != 0 then goto L1ad62c;
  #L1ad61c.  v2:= new `java.lang.IllegalArgumentException`;
  #L1ad620.  v3:= "socket == null" @kind object;
  #L1ad624.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad62a.  throw v2;
  #L1ad62c.  call temp:= `getInputStream`(v4) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L1ad632.  v2:= temp @kind object;
  #L1ad634.  if v2 != 0 then goto L1ad648;
  #L1ad638.  v2:= new `java.io.IOException`;
  #L1ad63c.  v3:= "socket's input stream == null" @kind object;
  #L1ad640.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad646.  throw v2;
  #L1ad648.  call temp:= `timeout`(v4) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L1ad64e.  v1:= temp @kind object;
  #L1ad650.  call temp:= `getInputStream`(v4) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L1ad656.  v2:= temp @kind object;
  #L1ad658.  call temp:= `source`(v2, v1) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L1ad65e.  v0:= temp @kind object;
  #L1ad660.  call temp:= `source`(v1, v0) @signature `Lokio/AsyncTimeout;.source:(Lokio/Source;)Lokio/Source;` @kind virtual;
  #L1ad666.  v2:= temp @kind object;
  #L1ad668.  return v2 @kind object;
}
procedure `okio.Source` `source`(`java.nio.file.Path` v2 @kind object @name `path`, `java.nio.file.OpenOption`[] v3 @kind object @name `options`) @signature `Lokio/Okio;.source:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ad67c.  if v2 != 0 then goto L1ad690;
  #L1ad680.  v0:= new `java.lang.IllegalArgumentException`;
  #L1ad684.  v1:= "path == null" @kind object;
  #L1ad688.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad68e.  throw v0;
  #L1ad690.  call temp:= `newInputStream`(v2, v3) @signature `Ljava/nio/file/Files;.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;` @kind static;
  #L1ad696.  v0:= temp @kind object;
  #L1ad698.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L1ad69e.  v0:= temp @kind object;
  #L1ad6a0.  return v0 @kind object;
}
procedure `okio.AsyncTimeout` `timeout`(`java.net.Socket` v1 @kind object @name `socket`) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1ad6b4.  v0:= new `okio.Okio$4`;
  #L1ad6b8.  call `<init>`(v0, v1) @signature `Lokio/Okio$4;.<init>:(Ljava/net/Socket;)V` @kind direct;
  #L1ad6be.  return v0 @kind object;
}

record `okio.RealBufferedSource` @kind class @AccessFlag FINAL extends `okio.BufferedSource` @kind interface {
  `okio.Buffer` `okio.RealBufferedSource.buffer` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.RealBufferedSource.closed` @AccessFlag ;
  `okio.Source` `okio.RealBufferedSource.source` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.RealBufferedSource` v2 @kind this, `okio.Source` v3 @kind object @name `source`) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2498a8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2498ae.  v0:= new `okio.Buffer`;
  #L2498b2.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2498b8.  v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L2498bc.  if v3 != 0 then goto L2498d0;
  #L2498c0.  v0:= new `java.lang.NullPointerException`;
  #L2498c4.  v1:= "source == null" @kind object;
  #L2498c8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2498ce.  throw v0;
  #L2498d0.  v2.`okio.RealBufferedSource.source` @type ^`okio.Source` := v3 @kind object;
  #L2498d4.  return @kind void;
}
procedure `okio.Buffer` `buffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.buffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2498e8.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2498ec.  return v0 @kind object;
}
procedure `void` `close`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249900.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L249904.  if v0 == 0 then goto L24990a;
  #L249908.  return @kind void;
  #L24990a.  v0:= 1I;
  #L24990c.  v1.`okio.RealBufferedSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L249910.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249914.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L24991a.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24991e.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L249924.  goto L249908;
}
procedure `boolean` `exhausted`(`okio.RealBufferedSource` v4 @kind this) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L249938.  v0:= v4.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L24993c.  if v0 == 0 then goto L249950;
  #L249940.  v0:= new `java.lang.IllegalStateException`;
  #L249944.  v1:= "closed" @kind object;
  #L249948.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24994e.  throw v0;
  #L249950.  v0:= v4.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249954.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L24995a.  v0:= temp;
  #L24995c.  if v0 == 0 then goto L249984;
  #L249960.  v0:= v4.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249964.  v1:= v4.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249968.  v2:= 8192L;
  #L24996c.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L249972.  v0:= temp @kind wide;
  #L249974.  v2:= -1L;
  #L249978.  v0:= lcmp(v0, v2);
  #L24997c.  if v0 != 0 then goto L249984;
  #L249980.  v0:= 1I;
  #L249982.  return v0;
  #L249984.  v0:= 0I;
  #L249986.  goto L249982;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 @name `b`) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L249998.  v2:= 0L;
  #L24999c.  v4:= 9223372036854775807L;
  #L2499a6.  v0:= v6 @kind object;
  #L2499a8.  v1:= v7;
  #L2499aa.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L2499b0.  v0:= temp @kind wide;
  #L2499b2.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 @name `b`, `long` v8 @name `fromIndex`) @signature `Lokio/RealBufferedSource;.indexOf:(BJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2499c4.  v4:= 9223372036854775807L;
  #L2499ce.  v0:= v6 @kind object;
  #L2499d0.  v1:= v7;
  #L2499d2.  v2:= v8 @kind wide;
  #L2499d4.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L2499da.  v0:= temp @kind wide;
  #L2499dc.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v10 @kind this, `byte` v11 @name `b`, `long` v12 @name `fromIndex`, `long` v14 @name `toIndex`) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2499f0.  v0:= v10.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L2499f4.  if v0 == 0 then goto L249a08;
  #L2499f8.  v0:= new `java.lang.IllegalStateException`;
  #L2499fc.  v1:= "closed" @kind object;
  #L249a00.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249a06.  throw v0;
  #L249a08.  v0:= 0L;
  #L249a0c.  v0:= lcmp(v12, v0);
  #L249a10.  if v0 < 0 then goto L249a1c;
  #L249a14.  v0:= lcmp(v14, v12);
  #L249a18.  if v0 >= 0 then goto L249a5e;
  #L249a1c.  v0:= new `java.lang.IllegalArgumentException`;
  #L249a20.  v1:= "fromIndex=%s toIndex=%s" @kind object;
  #L249a24.  v2:= 2I;
  #L249a26.  v2:= new `java.lang.Object`[v2];
  #L249a2a.  v3:= 0I;
  #L249a2c.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L249a32.  v4:= temp @kind object;
  #L249a34.  v2[v3]:= v4 @kind object;
  #L249a38.  v3:= 1I;
  #L249a3a.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L249a40.  v4:= temp @kind object;
  #L249a42.  v2[v3]:= v4 @kind object;
  #L249a46.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L249a4c.  v1:= temp @kind object;
  #L249a4e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249a54.  throw v0;
  #L249a56.  call temp:= `max`(v12, v6) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L249a5c.  v12:= temp @kind wide;
  #L249a5e.  v0:= lcmp(v12, v14);
  #L249a62.  if v0 >= 0 then goto L249abc;
  #L249a66.  v0:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249a6a.  v1:= v11;
  #L249a6c.  v2:= v12 @kind wide;
  #L249a6e.  v4:= v14 @kind wide;
  #L249a70.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/Buffer;.indexOf:(BJJ)J` @kind virtual;
  #L249a76.  v8:= temp @kind wide;
  #L249a78.  v0:= -1L;
  #L249a7c.  v0:= lcmp(v8, v0);
  #L249a80.  if v0 == 0 then goto L249a86;
  #L249a84.  return v8 @kind wide;
  #L249a86.  v0:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249a8a.  v6:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L249a8e.  v0:= lcmp(v6, v14);
  #L249a92.  if v0 >= 0 then goto L249ab6;
  #L249a96.  v0:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249a9a.  v1:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249a9e.  v2:= 8192L;
  #L249aa2.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L249aa8.  v0:= temp @kind wide;
  #L249aaa.  v2:= -1L;
  #L249aae.  v0:= lcmp(v0, v2);
  #L249ab2.  if v0 != 0 then goto L249a56;
  #L249ab6.  v8:= -1L;
  #L249aba.  goto L249a84;
  #L249abc.  v8:= -1L;
  #L249ac0.  goto L249a84;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object @name `bytes`) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249ad4.  v0:= 0L;
  #L249ad8.  call temp:= `indexOf`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L249ade.  v0:= temp @kind wide;
  #L249ae0.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v10 @kind this, `okio.ByteString` v11 @kind object @name `bytes`, `long` v12 @name `fromIndex`) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L249af4.  v4:= -1L;
  #L249af8.  v6:= v10.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L249afc.  if v6 == 0 then goto L249b2c;
  #L249b00.  v4:= new `java.lang.IllegalStateException`;
  #L249b04.  v5:= "closed" @kind object;
  #L249b08.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249b0e.  throw v4;
  #L249b10.  call temp:= `size`(v11) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L249b16.  v6:= temp;
  #L249b18.  v6:= (`long`) v6 @kind i2l;
  #L249b1a.  v6:= v0 - v6 @kind long;
  #L249b1e.  v8:= 1L;
  #L249b22.  v6:= v6 + v8 @kind long;
  #L249b24.  call temp:= `max`(v12, v6) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L249b2a.  v12:= temp @kind wide;
  #L249b2c.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249b30.  call temp:= `indexOf`(v6, v11, v12) @signature `Lokio/Buffer;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L249b36.  v2:= temp @kind wide;
  #L249b38.  v6:= lcmp(v2, v4);
  #L249b3c.  if v6 == 0 then goto L249b42;
  #L249b40.  return v2 @kind wide;
  #L249b42.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249b46.  v0:= v6.`okio.Buffer.size` @type ^`long` @kind wide;
  #L249b4a.  v6:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249b4e.  v7:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249b52.  v8:= 8192L;
  #L249b56.  call temp:= `read`(v6, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L249b5c.  v6:= temp @kind wide;
  #L249b5e.  v6:= lcmp(v6, v4);
  #L249b62.  if v6 != 0 then goto L249b10;
  #L249b66.  v2:= v4 @kind wide;
  #L249b68.  goto L249b40;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object @name `targetBytes`) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249b7c.  v0:= 0L;
  #L249b80.  call temp:= `indexOfElement`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L249b86.  v0:= temp @kind wide;
  #L249b88.  return v0 @kind wide;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v10 @kind this, `okio.ByteString` v11 @kind object @name `targetBytes`, `long` v12 @name `fromIndex`) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L249b9c.  v4:= -1L;
  #L249ba0.  v6:= v10.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L249ba4.  if v6 == 0 then goto L249bc0;
  #L249ba8.  v4:= new `java.lang.IllegalStateException`;
  #L249bac.  v5:= "closed" @kind object;
  #L249bb0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249bb6.  throw v4;
  #L249bb8.  call temp:= `max`(v12, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L249bbe.  v12:= temp @kind wide;
  #L249bc0.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249bc4.  call temp:= `indexOfElement`(v6, v11, v12) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L249bca.  v2:= temp @kind wide;
  #L249bcc.  v6:= lcmp(v2, v4);
  #L249bd0.  if v6 == 0 then goto L249bd6;
  #L249bd4.  return v2 @kind wide;
  #L249bd6.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249bda.  v0:= v6.`okio.Buffer.size` @type ^`long` @kind wide;
  #L249bde.  v6:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249be2.  v7:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249be6.  v8:= 8192L;
  #L249bea.  call temp:= `read`(v6, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L249bf0.  v6:= temp @kind wide;
  #L249bf2.  v6:= lcmp(v6, v4);
  #L249bf6.  if v6 != 0 then goto L249bb8;
  #L249bfa.  v2:= v4 @kind wide;
  #L249bfc.  goto L249bd4;
}
procedure `java.io.InputStream` `inputStream`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.inputStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249c10.  v0:= new `okio.RealBufferedSource$1`;
  #L249c14.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @kind direct;
  #L249c1a.  return v0 @kind object;
}
procedure `boolean` `isOpen`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249c2c.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L249c30.  if v0 != 0 then goto L249c38;
  #L249c34.  v0:= 1I;
  #L249c36.  return v0;
  #L249c38.  v0:= 0I;
  #L249c3a.  goto L249c36;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 @name `offset`, `okio.ByteString` v10 @kind object @name `bytes`) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L249c4c.  v5:= 0I;
  #L249c4e.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L249c54.  v6:= temp;
  #L249c56.  v1:= v7 @kind object;
  #L249c58.  v2:= v8 @kind wide;
  #L249c5a.  v4:= v10 @kind object;
  #L249c5c.  call temp:= `rangeEquals`(v1, v2, v4, v5, v6) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @kind virtual;
  #L249c62.  v0:= temp;
  #L249c64.  return v0;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 @name `offset`, `okio.ByteString` v10 @kind object @name `bytes`, `int` v11 @name `bytesOffset`, `int` v12 @name `byteCount`) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L249c78.  v3:= 0I;
  #L249c7a.  v4:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L249c7e.  if v4 == 0 then goto L249c92;
  #L249c82.  v3:= new `java.lang.IllegalStateException`;
  #L249c86.  v4:= "closed" @kind object;
  #L249c8a.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249c90.  throw v3;
  #L249c92.  v4:= 0L;
  #L249c96.  v4:= lcmp(v8, v4);
  #L249c9a.  if v4 < 0 then goto L249cb4;
  #L249c9e.  if v11 < 0 then goto L249cb4;
  #L249ca2.  if v12 < 0 then goto L249cb4;
  #L249ca6.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L249cac.  v4:= temp;
  #L249cae.  v4:= v4 - v11 @kind int;
  #L249cb0.  if v4 >= v12 then goto L249cb6;
  #L249cb4.  return v3;
  #L249cb6.  v2:= 0I;
  #L249cb8.  if v2 >= v12 then goto L249cf6;
  #L249cbc.  v4:= (`long`) v2 @kind i2l;
  #L249cbe.  v0:= v8 + v4 @kind long;
  #L249cc2.  v4:= 1L;
  #L249cc6.  v4:= v4 + v0 @kind long;
  #L249cc8.  call temp:= `request`(v7, v4) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L249cce.  v4:= temp;
  #L249cd0.  if v4 == 0 then goto L249cb4;
  #L249cd4.  v4:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249cd8.  call temp:= `getByte`(v4, v0) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L249cde.  v4:= temp;
  #L249ce0.  v5:= v11 + v2 @kind int;
  #L249ce4.  call temp:= `getByte`(v10, v5) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L249cea.  v5:= temp;
  #L249cec.  if v4 != v5 then goto L249cb4;
  #L249cf0.  v2:= v2 + 1;
  #L249cf4.  goto L249cb8;
  #L249cf6.  v3:= 1I;
  #L249cf8.  goto L249cb4;
}
procedure `int` `read`(`okio.RealBufferedSource` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object @name `sink`) @signature `Lokio/RealBufferedSource;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L249d0c.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249d10.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L249d14.  v4:= 0L;
  #L249d18.  v2:= lcmp(v2, v4);
  #L249d1c.  if v2 != 0 then goto L249d44;
  #L249d20.  v2:= v6.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249d24.  v3:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249d28.  v4:= 8192L;
  #L249d2c.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L249d32.  v0:= temp @kind wide;
  #L249d34.  v2:= -1L;
  #L249d38.  v2:= lcmp(v0, v2);
  #L249d3c.  if v2 != 0 then goto L249d44;
  #L249d40.  v2:= -1I;
  #L249d42.  return v2;
  #L249d44.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249d48.  call temp:= `read`(v2, v7) @signature `Lokio/Buffer;.read:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L249d4e.  v2:= temp;
  #L249d50.  goto L249d42;
}
procedure `int` `read`(`okio.RealBufferedSource` v2 @kind this, `byte`[] v3 @kind object @name `sink`) @signature `Lokio/RealBufferedSource;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249d64.  v0:= 0I;
  #L249d66.  v1:= length @variable v3;
  #L249d68.  call temp:= `read`(v2, v3, v0, v1) @signature `Lokio/RealBufferedSource;.read:([BII)I` @kind virtual;
  #L249d6e.  v0:= temp;
  #L249d70.  return v0;
}
procedure `int` `read`(`okio.RealBufferedSource` v9 @kind this, `byte`[] v10 @kind object @name `sink`, `int` v11 @name `offset`, `int` v12 @name `byteCount`) @signature `Lokio/RealBufferedSource;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L249d84.  v0:= length @variable v10;
  #L249d86.  v0:= (`long`) v0 @kind i2l;
  #L249d88.  v2:= (`long`) v11 @kind i2l;
  #L249d8a.  v4:= (`long`) v12 @kind i2l;
  #L249d8c.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L249d92.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249d96.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L249d9a.  v2:= 0L;
  #L249d9e.  v0:= lcmp(v0, v2);
  #L249da2.  if v0 != 0 then goto L249dca;
  #L249da6.  v0:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249daa.  v1:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249dae.  v2:= 8192L;
  #L249db2.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L249db8.  v6:= temp @kind wide;
  #L249dba.  v0:= -1L;
  #L249dbe.  v0:= lcmp(v6, v0);
  #L249dc2.  if v0 != 0 then goto L249dca;
  #L249dc6.  v0:= -1I;
  #L249dc8.  return v0;
  #L249dca.  v0:= (`long`) v12 @kind i2l;
  #L249dcc.  v2:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249dd0.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L249dd4.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L249dda.  v0:= temp @kind wide;
  #L249ddc.  v8:= (`int`) v0 @kind l2i;
  #L249dde.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249de2.  call temp:= `read`(v0, v10, v11, v8) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L249de8.  v0:= temp;
  #L249dea.  goto L249dc8;
}
procedure `long` `read`(`okio.RealBufferedSource` v10 @kind this, `okio.Buffer` v11 @kind object @name `sink`, `long` v12 @name `byteCount`) @signature `Lokio/RealBufferedSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L249dfc.  v8:= 0L;
  #L249e00.  v4:= -1L;
  #L249e04.  if v11 != 0 then goto L249e18;
  #L249e08.  v4:= new `java.lang.IllegalArgumentException`;
  #L249e0c.  v5:= "sink == null" @kind object;
  #L249e10.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249e16.  throw v4;
  #L249e18.  v6:= lcmp(v12, v8);
  #L249e1c.  if v6 >= 0 then goto L249e52;
  #L249e20.  v4:= new `java.lang.IllegalArgumentException`;
  #L249e24.  v5:= new `java.lang.StringBuilder`;
  #L249e28.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L249e2e.  v6:= "byteCount < 0: " @kind object;
  #L249e32.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249e38.  v5:= temp @kind object;
  #L249e3a.  call temp:= `append`(v5, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L249e40.  v5:= temp @kind object;
  #L249e42.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L249e48.  v5:= temp @kind object;
  #L249e4a.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249e50.  throw v4;
  #L249e52.  v6:= v10.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L249e56.  if v6 == 0 then goto L249e6a;
  #L249e5a.  v4:= new `java.lang.IllegalStateException`;
  #L249e5e.  v5:= "closed" @kind object;
  #L249e62.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249e68.  throw v4;
  #L249e6a.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249e6e.  v6:= v6.`okio.Buffer.size` @type ^`long` @kind wide;
  #L249e72.  v6:= lcmp(v6, v8);
  #L249e76.  if v6 != 0 then goto L249e98;
  #L249e7a.  v6:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249e7e.  v7:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249e82.  v8:= 8192L;
  #L249e86.  call temp:= `read`(v6, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L249e8c.  v0:= temp @kind wide;
  #L249e8e.  v6:= lcmp(v0, v4);
  #L249e92.  if v6 != 0 then goto L249e98;
  #L249e96.  return v4 @kind wide;
  #L249e98.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249e9c.  v4:= v4.`okio.Buffer.size` @type ^`long` @kind wide;
  #L249ea0.  call temp:= `min`(v12, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L249ea6.  v2:= temp @kind wide;
  #L249ea8.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249eac.  call temp:= `read`(v4, v11, v2) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L249eb2.  v4:= temp @kind wide;
  #L249eb4.  goto L249e96;
}
procedure `long` `readAll`(`okio.RealBufferedSource` v10 @kind this, `okio.Sink` v11 @kind object @name `sink`) @signature `Lokio/RealBufferedSource;.readAll:(Lokio/Sink;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L249ec8.  v8:= 0L;
  #L249ecc.  if v11 != 0 then goto L249ee0;
  #L249ed0.  v4:= new `java.lang.IllegalArgumentException`;
  #L249ed4.  v5:= "sink == null" @kind object;
  #L249ed8.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L249ede.  throw v4;
  #L249ee0.  v2:= 0L;
  #L249ee4.  v4:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249ee8.  v5:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249eec.  v6:= 8192L;
  #L249ef0.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L249ef6.  v4:= temp @kind wide;
  #L249ef8.  v6:= -1L;
  #L249efc.  v4:= lcmp(v4, v6);
  #L249f00.  if v4 == 0 then goto L249f26;
  #L249f04.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249f08.  call temp:= `completeSegmentByteCount`(v4) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L249f0e.  v0:= temp @kind wide;
  #L249f10.  v4:= lcmp(v0, v8);
  #L249f14.  if v4 <= 0 then goto L249ee4;
  #L249f18.  v2:= v2 + v0 @kind long;
  #L249f1a.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249f1e.  call `write`(v11, v4, v0) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L249f24.  goto L249ee4;
  #L249f26.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249f2a.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L249f30.  v4:= temp @kind wide;
  #L249f32.  v4:= lcmp(v4, v8);
  #L249f36.  if v4 <= 0 then goto L249f5e;
  #L249f3a.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249f3e.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L249f44.  v4:= temp @kind wide;
  #L249f46.  v2:= v2 + v4 @kind long;
  #L249f48.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249f4c.  v5:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249f50.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L249f56.  v6:= temp @kind wide;
  #L249f58.  call `write`(v11, v4, v6) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L249f5e.  return v2 @kind wide;
}
procedure `byte` `readByte`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249f70.  v0:= 1L;
  #L249f74.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L249f7a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249f7e.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L249f84.  v0:= temp;
  #L249f86.  return v0;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249f98.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249f9c.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249fa0.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L249fa6.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249faa.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L249fb0.  v0:= temp @kind object;
  #L249fb2.  return v0 @kind object;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v1 @kind this, `long` v2 @name `byteCount`) @signature `Lokio/RealBufferedSource;.readByteArray:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L249fc4.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L249fca.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249fce.  call temp:= `readByteArray`(v0, v2) @signature `Lokio/Buffer;.readByteArray:(J)[B` @kind virtual;
  #L249fd4.  v0:= temp @kind object;
  #L249fd6.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteString:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L249fe8.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249fec.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L249ff0.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L249ff6.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L249ffa.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L24a000.  v0:= temp @kind object;
  #L24a002.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 @name `byteCount`) @signature `Lokio/RealBufferedSource;.readByteString:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a014.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a01a.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a01e.  call temp:= `readByteString`(v0, v2) @signature `Lokio/Buffer;.readByteString:(J)Lokio/ByteString;` @kind virtual;
  #L24a024.  v0:= temp @kind object;
  #L24a026.  return v0 @kind object;
}
procedure `long` `readDecimalLong`(`okio.RealBufferedSource` v7 @kind this) @signature `Lokio/RealBufferedSource;.readDecimalLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24a038.  v2:= 1L;
  #L24a03c.  call `require`(v7, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a042.  v1:= 0I;
  #L24a044.  v2:= v1 + 1;
  #L24a048.  v2:= (`long`) v2 @kind i2l;
  #L24a04a.  call temp:= `request`(v7, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L24a050.  v2:= temp;
  #L24a052.  if v2 == 0 then goto L24a0b6;
  #L24a056.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a05a.  v4:= (`long`) v1 @kind i2l;
  #L24a05c.  call temp:= `getByte`(v2, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L24a062.  v0:= temp;
  #L24a064.  v2:= 48I;
  #L24a068.  if v0 < v2 then goto L24a074;
  #L24a06c.  v2:= 57I;
  #L24a070.  if v0 <= v2 then goto L24a0b0;
  #L24a074.  if v1 != 0 then goto L24a080;
  #L24a078.  v2:= 45I;
  #L24a07c.  if v0 == v2 then goto L24a0b0;
  #L24a080.  if v1 != 0 then goto L24a0b6;
  #L24a084.  v2:= new `java.lang.NumberFormatException`;
  #L24a088.  v3:= "Expected leading [0-9] or '-' character but was %#x" @kind object;
  #L24a08c.  v4:= 1I;
  #L24a08e.  v4:= new `java.lang.Object`[v4];
  #L24a092.  v5:= 0I;
  #L24a094.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L24a09a.  v6:= temp @kind object;
  #L24a09c.  v4[v5]:= v6 @kind object;
  #L24a0a0.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L24a0a6.  v3:= temp @kind object;
  #L24a0a8.  call `<init>`(v2, v3) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a0ae.  throw v2;
  #L24a0b0.  v1:= v1 + 1;
  #L24a0b4.  goto L24a044;
  #L24a0b6.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a0ba.  call temp:= `readDecimalLong`(v2) @signature `Lokio/Buffer;.readDecimalLong:()J` @kind virtual;
  #L24a0c0.  v2:= temp @kind wide;
  #L24a0c2.  return v2 @kind wide;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v2 @kind this, `okio.Buffer` v3 @kind object @name `sink`, `long` v4 @name `byteCount`) @signature `Lokio/RealBufferedSource;.readFully:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L24a0d4.  call `require`(v2, v4) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #Try_end0.  
  #L24a0da.  v1:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a0de.  call `readFully`(v1, v3, v4) @signature `Lokio/Buffer;.readFully:(Lokio/Buffer;J)V` @kind virtual;
  #L24a0e4.  return @kind void;
  #L24a0e6.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L24a0e8.  v1:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a0ec.  call temp:= `writeAll`(v3, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L24a0f2.  throw v0;
  catch `java.io.EOFException` @[Try_start0..Try_end0] goto L24a0e6;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v8 @kind this, `byte`[] v9 @kind object @name `sink`) @signature `Lokio/RealBufferedSource;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #Try_start0.  
  #L24a114.  v3:= length @variable v9;
  #L24a116.  v4:= (`long`) v3 @kind i2l;
  #L24a118.  call `require`(v8, v4) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #Try_end0.  
  #L24a11e.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a122.  call `readFully`(v3, v9) @signature `Lokio/Buffer;.readFully:([B)V` @kind virtual;
  #L24a128.  return @kind void;
  #L24a12a.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L24a12c.  v1:= 0I;
  #L24a12e.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a132.  v4:= v3.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24a136.  v6:= 0L;
  #L24a13a.  v3:= lcmp(v4, v6);
  #L24a13e.  if v3 <= 0 then goto L24a16e;
  #L24a142.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a146.  v4:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a14a.  v4:= v4.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24a14e.  v4:= (`int`) v4 @kind l2i;
  #L24a150.  call temp:= `read`(v3, v9, v1, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L24a156.  v2:= temp;
  #L24a158.  v3:= -1I;
  #L24a15a.  if v2 != v3 then goto L24a16a;
  #L24a15e.  v3:= new `java.lang.AssertionError`;
  #L24a162.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L24a168.  throw v3;
  #L24a16a.  v1:= v1 + v2 @kind int;
  #L24a16c.  goto L24a12e;
  #L24a16e.  throw v0;
  catch `java.io.EOFException` @[Try_start0..Try_end0] goto L24a12a;
}
procedure `long` `readHexadecimalUnsignedLong`(`okio.RealBufferedSource` v7 @kind this) @signature `Lokio/RealBufferedSource;.readHexadecimalUnsignedLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24a190.  v2:= 1L;
  #L24a194.  call `require`(v7, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a19a.  v1:= 0I;
  #L24a19c.  v2:= v1 + 1;
  #L24a1a0.  v2:= (`long`) v2 @kind i2l;
  #L24a1a2.  call temp:= `request`(v7, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L24a1a8.  v2:= temp;
  #L24a1aa.  if v2 == 0 then goto L24a222;
  #L24a1ae.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a1b2.  v4:= (`long`) v1 @kind i2l;
  #L24a1b4.  call temp:= `getByte`(v2, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L24a1ba.  v0:= temp;
  #L24a1bc.  v2:= 48I;
  #L24a1c0.  if v0 < v2 then goto L24a1cc;
  #L24a1c4.  v2:= 57I;
  #L24a1c8.  if v0 <= v2 then goto L24a21c;
  #L24a1cc.  v2:= 97I;
  #L24a1d0.  if v0 < v2 then goto L24a1dc;
  #L24a1d4.  v2:= 102I;
  #L24a1d8.  if v0 <= v2 then goto L24a21c;
  #L24a1dc.  v2:= 65I;
  #L24a1e0.  if v0 < v2 then goto L24a1ec;
  #L24a1e4.  v2:= 70I;
  #L24a1e8.  if v0 <= v2 then goto L24a21c;
  #L24a1ec.  if v1 != 0 then goto L24a222;
  #L24a1f0.  v2:= new `java.lang.NumberFormatException`;
  #L24a1f4.  v3:= "Expected leading [0-9a-fA-F] character but was %#x" @kind object;
  #L24a1f8.  v4:= 1I;
  #L24a1fa.  v4:= new `java.lang.Object`[v4];
  #L24a1fe.  v5:= 0I;
  #L24a200.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L24a206.  v6:= temp @kind object;
  #L24a208.  v4[v5]:= v6 @kind object;
  #L24a20c.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L24a212.  v3:= temp @kind object;
  #L24a214.  call `<init>`(v2, v3) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a21a.  throw v2;
  #L24a21c.  v1:= v1 + 1;
  #L24a220.  goto L24a19c;
  #L24a222.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a226.  call temp:= `readHexadecimalUnsignedLong`(v2) @signature `Lokio/Buffer;.readHexadecimalUnsignedLong:()J` @kind virtual;
  #L24a22c.  v2:= temp @kind wide;
  #L24a22e.  return v2 @kind wide;
}
procedure `int` `readInt`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a240.  v0:= 4L;
  #L24a244.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a24a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a24e.  call temp:= `readInt`(v0) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L24a254.  v0:= temp;
  #L24a256.  return v0;
}
procedure `int` `readIntLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a268.  v0:= 4L;
  #L24a26c.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a272.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a276.  call temp:= `readIntLe`(v0) @signature `Lokio/Buffer;.readIntLe:()I` @kind virtual;
  #L24a27c.  v0:= temp;
  #L24a27e.  return v0;
}
procedure `long` `readLong`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a290.  v0:= 8L;
  #L24a294.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a29a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a29e.  call temp:= `readLong`(v0) @signature `Lokio/Buffer;.readLong:()J` @kind virtual;
  #L24a2a4.  v0:= temp @kind wide;
  #L24a2a6.  return v0 @kind wide;
}
procedure `long` `readLongLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLongLe:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a2b8.  v0:= 8L;
  #L24a2bc.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a2c2.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a2c6.  call temp:= `readLongLe`(v0) @signature `Lokio/Buffer;.readLongLe:()J` @kind virtual;
  #L24a2cc.  v0:= temp @kind wide;
  #L24a2ce.  return v0 @kind wide;
}
procedure `short` `readShort`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a2e0.  v0:= 2L;
  #L24a2e4.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a2ea.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a2ee.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L24a2f4.  v0:= temp;
  #L24a2f6.  return v0;
}
procedure `short` `readShortLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a308.  v0:= 2L;
  #L24a30c.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a312.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a316.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L24a31c.  v0:= temp;
  #L24a31e.  return v0;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v3 @kind this, `long` v4 @name `byteCount`, `java.nio.charset.Charset` v6 @kind object @name `charset`) @signature `Lokio/RealBufferedSource;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24a330.  call `require`(v3, v4) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a336.  if v6 != 0 then goto L24a34a;
  #L24a33a.  v0:= new `java.lang.IllegalArgumentException`;
  #L24a33e.  v1:= "charset == null" @kind object;
  #L24a342.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a348.  throw v0;
  #L24a34a.  v0:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a34e.  call temp:= `readString`(v0, v4, v6) @signature `Lokio/Buffer;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L24a354.  v0:= temp @kind object;
  #L24a356.  return v0 @kind object;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v2 @kind this, `java.nio.charset.Charset` v3 @kind object @name `charset`) @signature `Lokio/RealBufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a368.  if v3 != 0 then goto L24a37c;
  #L24a36c.  v0:= new `java.lang.IllegalArgumentException`;
  #L24a370.  v1:= "charset == null" @kind object;
  #L24a374.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a37a.  throw v0;
  #L24a37c.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a380.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24a384.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L24a38a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a38e.  call temp:= `readString`(v0, v3) @signature `Lokio/Buffer;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L24a394.  v0:= temp @kind object;
  #L24a396.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a3a8.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a3ac.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24a3b0.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L24a3b6.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a3ba.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L24a3c0.  v0:= temp @kind object;
  #L24a3c2.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v1 @kind this, `long` v2 @name `byteCount`) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a3d4.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a3da.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a3de.  call temp:= `readUtf8`(v0, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L24a3e4.  v0:= temp @kind object;
  #L24a3e6.  return v0 @kind object;
}
procedure `int` `readUtf8CodePoint`(`okio.RealBufferedSource` v4 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8CodePoint:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24a3f8.  v2:= 1L;
  #L24a3fc.  call `require`(v4, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a402.  v1:= v4.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a406.  v2:= 0L;
  #L24a40a.  call temp:= `getByte`(v1, v2) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L24a410.  v0:= temp;
  #L24a412.  v1:= v0 ^& 224;
  #L24a416.  v2:= 192I;
  #L24a41a.  if v1 != v2 then goto L24a436;
  #L24a41e.  v2:= 2L;
  #L24a422.  call `require`(v4, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a428.  v1:= v4.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a42c.  call temp:= `readUtf8CodePoint`(v1) @signature `Lokio/Buffer;.readUtf8CodePoint:()I` @kind virtual;
  #L24a432.  v1:= temp;
  #L24a434.  return v1;
  #L24a436.  v1:= v0 ^& 240;
  #L24a43a.  v2:= 224I;
  #L24a43e.  if v1 != v2 then goto L24a44e;
  #L24a442.  v2:= 3L;
  #L24a446.  call `require`(v4, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a44c.  goto L24a428;
  #L24a44e.  v1:= v0 ^& 248;
  #L24a452.  v2:= 240I;
  #L24a456.  if v1 != v2 then goto L24a428;
  #L24a45a.  v2:= 4L;
  #L24a45e.  call `require`(v4, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L24a464.  goto L24a428;
}
procedure `java.lang.String` `readUtf8Line`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8Line:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24a478.  v2:= 10I;
  #L24a47c.  call temp:= `indexOf`(v6, v2) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L24a482.  v0:= temp @kind wide;
  #L24a484.  v2:= -1L;
  #L24a488.  v2:= lcmp(v0, v2);
  #L24a48c.  if v2 != 0 then goto L24a4ba;
  #L24a490.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a494.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24a498.  v4:= 0L;
  #L24a49c.  v2:= lcmp(v2, v4);
  #L24a4a0.  if v2 == 0 then goto L24a4b6;
  #L24a4a4.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a4a8.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24a4ac.  call temp:= `readUtf8`(v6, v2) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L24a4b2.  v2:= temp @kind object;
  #L24a4b4.  return v2 @kind object;
  #L24a4b6.  v2:= 0I;
  #L24a4b8.  goto L24a4b4;
  #L24a4ba.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a4be.  call temp:= `readUtf8Line`(v2, v0) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L24a4c4.  v2:= temp @kind object;
  #L24a4c6.  goto L24a4b4;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a4d8.  v0:= 9223372036854775807L;
  #L24a4e2.  call temp:= `readUtf8LineStrict`(v2, v0) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @kind virtual;
  #L24a4e8.  v0:= temp @kind object;
  #L24a4ea.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v17 @kind this, `long` v18 @name `limit`) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L24a4fc.  v2:= 0L;
  #L24a500.  v2:= lcmp(v18, v2);
  #L24a504.  if v2 >= 0 then goto L24a53e;
  #L24a508.  v2:= new `java.lang.IllegalArgumentException`;
  #L24a50c.  v3:= new `java.lang.StringBuilder`;
  #L24a510.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a516.  v4:= "limit < 0: " @kind object;
  #L24a51a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a520.  v3:= temp @kind object;
  #L24a522.  v0:= v18 @kind wide;
  #L24a526.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a52c.  v3:= temp @kind object;
  #L24a52e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a534.  v3:= temp @kind object;
  #L24a536.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a53c.  throw v2;
  #L24a53e.  v2:= 9223372036854775807L;
  #L24a548.  v2:= lcmp(v18, v2);
  #L24a54c.  if v2 != 0 then goto L24a58c;
  #L24a550.  v6:= 9223372036854775807L;
  #L24a55a.  v3:= 10I;
  #L24a55e.  v4:= 0L;
  #L24a562.  v2:= v17 @kind object;
  #L24a566.  call temp:= `indexOf`(v2, v3, v4, v6) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L24a56c.  v14:= temp @kind wide;
  #L24a56e.  v2:= -1L;
  #L24a572.  v2:= lcmp(v14, v2);
  #L24a576.  if v2 == 0 then goto L24a596;
  #L24a57a.  v0:= v17 @kind object;
  #L24a57e.  v2:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a582.  call temp:= `readUtf8Line`(v2, v14) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L24a588.  v2:= temp @kind object;
  #L24a58a.  return v2 @kind object;
  #L24a58c.  v2:= 1L;
  #L24a590.  v6:= v18 + v2 @kind long;
  #L24a594.  goto L24a55a;
  #L24a596.  v2:= 9223372036854775807L;
  #L24a5a0.  v2:= lcmp(v6, v2);
  #L24a5a4.  if v2 >= 0 then goto L24a618;
  #L24a5a8.  v0:= v17 @kind object;
  #L24a5ac.  call temp:= `request`(v0, v6) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L24a5b2.  v2:= temp;
  #L24a5b4.  if v2 == 0 then goto L24a618;
  #L24a5b8.  v0:= v17 @kind object;
  #L24a5bc.  v2:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a5c0.  v4:= 1L;
  #L24a5c4.  v4:= v6 - v4 @kind long;
  #L24a5c8.  call temp:= `getByte`(v2, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L24a5ce.  v2:= temp;
  #L24a5d0.  v3:= 13I;
  #L24a5d4.  if v2 != v3 then goto L24a618;
  #L24a5d8.  v2:= 1L;
  #L24a5dc.  v2:= v2 + v6 @kind long;
  #L24a5de.  v0:= v17 @kind object;
  #L24a5e2.  call temp:= `request`(v0, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L24a5e8.  v2:= temp;
  #L24a5ea.  if v2 == 0 then goto L24a618;
  #L24a5ee.  v0:= v17 @kind object;
  #L24a5f2.  v2:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a5f6.  call temp:= `getByte`(v2, v6) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L24a5fc.  v2:= temp;
  #L24a5fe.  v3:= 10I;
  #L24a602.  if v2 != v3 then goto L24a618;
  #L24a606.  v0:= v17 @kind object;
  #L24a60a.  v2:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a60e.  call temp:= `readUtf8Line`(v2, v6) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L24a614.  v2:= temp @kind object;
  #L24a616.  goto L24a58a;
  #L24a618.  v9:= new `okio.Buffer`;
  #L24a61c.  call `<init>`(v9) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L24a622.  v0:= v17 @kind object;
  #L24a626.  v8:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a62a.  v10:= 0L;
  #L24a62e.  v2:= 32L;
  #L24a632.  v0:= v17 @kind object;
  #L24a636.  v4:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a63a.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24a640.  v4:= temp @kind wide;
  #L24a642.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L24a648.  v12:= temp @kind wide;
  #L24a64a.  call temp:= `copyTo`(v8, v9, v10, v12) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L24a650.  v2:= new `java.io.EOFException`;
  #L24a654.  v3:= new `java.lang.StringBuilder`;
  #L24a658.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a65e.  v4:= "\\n not found: limit=" @kind object;
  #L24a662.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a668.  v3:= temp @kind object;
  #L24a66a.  v0:= v17 @kind object;
  #L24a66e.  v4:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a672.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24a678.  v4:= temp @kind wide;
  #L24a67a.  v0:= v18 @kind wide;
  #L24a67e.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L24a684.  v4:= temp @kind wide;
  #L24a686.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a68c.  v3:= temp @kind object;
  #L24a68e.  v4:= " content=" @kind object;
  #L24a692.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a698.  v3:= temp @kind object;
  #L24a69a.  call temp:= `readByteString`(v9) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L24a6a0.  v4:= temp @kind object;
  #L24a6a2.  call temp:= `hex`(v4) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L24a6a8.  v4:= temp @kind object;
  #L24a6aa.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a6b0.  v3:= temp @kind object;
  #L24a6b2.  v4:= 8230I;
  #L24a6b6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a6bc.  v3:= temp @kind object;
  #L24a6be.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a6c4.  v3:= temp @kind object;
  #L24a6c6.  call `<init>`(v2, v3) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a6cc.  throw v2;
}
procedure `boolean` `request`(`okio.RealBufferedSource` v5 @kind this, `long` v6 @name `byteCount`) @signature `Lokio/RealBufferedSource;.request:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24a6e0.  v0:= 0L;
  #L24a6e4.  v0:= lcmp(v6, v0);
  #L24a6e8.  if v0 >= 0 then goto L24a71e;
  #L24a6ec.  v0:= new `java.lang.IllegalArgumentException`;
  #L24a6f0.  v1:= new `java.lang.StringBuilder`;
  #L24a6f4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a6fa.  v2:= "byteCount < 0: " @kind object;
  #L24a6fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a704.  v1:= temp @kind object;
  #L24a706.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a70c.  v1:= temp @kind object;
  #L24a70e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a714.  v1:= temp @kind object;
  #L24a716.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a71c.  throw v0;
  #L24a71e.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L24a722.  if v0 == 0 then goto L24a736;
  #L24a726.  v0:= new `java.lang.IllegalStateException`;
  #L24a72a.  v1:= "closed" @kind object;
  #L24a72e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a734.  throw v0;
  #L24a736.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a73a.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24a73e.  v0:= lcmp(v0, v6);
  #L24a742.  if v0 >= 0 then goto L24a76a;
  #L24a746.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24a74a.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a74e.  v2:= 8192L;
  #L24a752.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L24a758.  v0:= temp @kind wide;
  #L24a75a.  v2:= -1L;
  #L24a75e.  v0:= lcmp(v0, v2);
  #L24a762.  if v0 != 0 then goto L24a736;
  #L24a766.  v0:= 0I;
  #L24a768.  return v0;
  #L24a76a.  v0:= 1I;
  #L24a76c.  goto L24a768;
}
procedure `void` `require`(`okio.RealBufferedSource` v1 @kind this, `long` v2 @name `byteCount`) @signature `Lokio/RealBufferedSource;.require:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a780.  call temp:= `request`(v1, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L24a786.  v0:= temp;
  #L24a788.  if v0 != 0 then goto L24a798;
  #L24a78c.  v0:= new `java.io.EOFException`;
  #L24a790.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L24a796.  throw v0;
  #L24a798.  return @kind void;
}
procedure `int` `select`(`okio.RealBufferedSource` v8 @kind this, `okio.Options` v9 @kind object @name `options`) @signature `Lokio/RealBufferedSource;.select:(Lokio/Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24a7ac.  v2:= -1I;
  #L24a7ae.  v3:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L24a7b2.  if v3 == 0 then goto L24a7c6;
  #L24a7b6.  v2:= new `java.lang.IllegalStateException`;
  #L24a7ba.  v3:= "closed" @kind object;
  #L24a7be.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a7c4.  throw v2;
  #L24a7c6.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a7ca.  call temp:= `selectPrefix`(v3, v9) @signature `Lokio/Buffer;.selectPrefix:(Lokio/Options;)I` @kind virtual;
  #L24a7d0.  v0:= temp;
  #L24a7d2.  if v0 != v2 then goto L24a7da;
  #L24a7d6.  v0:= v2;
  #L24a7d8.  return v0;
  #L24a7da.  v3:= v9.`okio.Options.byteStrings` @type ^`okio.ByteString`[] @kind object;
  #L24a7de.  v3:= v3[v0] @kind object;
  #L24a7e2.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L24a7e8.  v1:= temp;
  #L24a7ea.  v4:= (`long`) v1 @kind i2l;
  #L24a7ec.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a7f0.  v6:= v3.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24a7f4.  v3:= lcmp(v4, v6);
  #L24a7f8.  if v3 > 0 then goto L24a80a;
  #L24a7fc.  v2:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a800.  v4:= (`long`) v1 @kind i2l;
  #L24a802.  call `skip`(v2, v4) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L24a808.  goto L24a7d8;
  #L24a80a.  v3:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24a80e.  v4:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a812.  v6:= 8192L;
  #L24a816.  call temp:= `read`(v3, v4, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L24a81c.  v4:= temp @kind wide;
  #L24a81e.  v6:= -1L;
  #L24a822.  v3:= lcmp(v4, v6);
  #L24a826.  if v3 != 0 then goto L24a7c6;
  #L24a82a.  v0:= v2;
  #L24a82c.  goto L24a7d8;
}
procedure `void` `skip`(`okio.RealBufferedSource` v9 @kind this, `long` v10 @name `byteCount`) @signature `Lokio/RealBufferedSource;.skip:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L24a840.  v6:= 0L;
  #L24a844.  v2:= v9.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L24a848.  if v2 == 0 then goto L24a87c;
  #L24a84c.  v2:= new `java.lang.IllegalStateException`;
  #L24a850.  v3:= "closed" @kind object;
  #L24a854.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24a85a.  throw v2;
  #L24a85c.  v2:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a860.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L24a866.  v2:= temp @kind wide;
  #L24a868.  call temp:= `min`(v10, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L24a86e.  v0:= temp @kind wide;
  #L24a870.  v2:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a874.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L24a87a.  v10:= v10 - v0 @kind long;
  #L24a87c.  v2:= lcmp(v10, v6);
  #L24a880.  if v2 <= 0 then goto L24a8c0;
  #L24a884.  v2:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a888.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24a88c.  v2:= lcmp(v2, v6);
  #L24a890.  if v2 != 0 then goto L24a85c;
  #L24a894.  v2:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24a898.  v3:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24a89c.  v4:= 8192L;
  #L24a8a0.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L24a8a6.  v2:= temp @kind wide;
  #L24a8a8.  v4:= -1L;
  #L24a8ac.  v2:= lcmp(v2, v4);
  #L24a8b0.  if v2 != 0 then goto L24a85c;
  #L24a8b4.  v2:= new `java.io.EOFException`;
  #L24a8b8.  call `<init>`(v2) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L24a8be.  throw v2;
  #L24a8c0.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a8d4.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24a8d8.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L24a8de.  v0:= temp @kind object;
  #L24a8e0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a8f4.  v0:= new `java.lang.StringBuilder`;
  #L24a8f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24a8fe.  v1:= "buffer(" @kind object;
  #L24a902.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a908.  v0:= temp @kind object;
  #L24a90a.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24a90e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a914.  v0:= temp @kind object;
  #L24a916.  v1:= ")" @kind object;
  #L24a91a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24a920.  v0:= temp @kind object;
  #L24a922.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24a928.  v0:= temp @kind object;
  #L24a92a.  return v0 @kind object;
}

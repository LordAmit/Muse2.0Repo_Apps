record `okio.Base64` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@okio.Base64.MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.Base64.URL_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ab628.  v1:= 64I;
  #L1ab62c.  v0:= new `byte`[v1];
  #L1ab630.  goto L1ab64c;
  #L1ab636.  `@@okio.Base64.MAP` @type ^`byte`[] := v0 @kind object;
  #L1ab63a.  v0:= new `byte`[v1];
  #L1ab63e.  goto L1ab694;
  #L1ab644.  `@@okio.Base64.URL_MAP` @type ^`byte`[] := v0 @kind object;
  #L1ab648.  return @kind void;
  #L1ab64a.  
  #L1ab64c.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L1ab693.  goto L1ab636;
  #L1ab694.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L1ab6db.  goto L1ab644;
}
procedure `void` `<init>`(`okio.Base64` v0 @kind this) @signature `Lokio/Base64;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1ab6ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ab6f2.  return @kind void;
}
procedure `byte`[] `decode`(`java.lang.String` v18 @kind object @name `in`) @signature `Lokio/Base64;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L1ab704.  call temp:= `length`(v18) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ab70a.  v6:= temp;
  #L1ab70c.  if v6 <= 0 then goto L1ab748;
  #L1ab710.  v13:= v6 + -1;
  #L1ab714.  v0:= v18 @kind object;
  #L1ab718.  call temp:= `charAt`(v0, v13) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1ab71e.  v3:= temp;
  #L1ab720.  v13:= 61I;
  #L1ab724.  if v3 == v13 then goto L1ab7d2;
  #L1ab728.  v13:= 10I;
  #L1ab72c.  if v3 == v13 then goto L1ab7d2;
  #L1ab730.  v13:= 13I;
  #L1ab734.  if v3 == v13 then goto L1ab7d2;
  #L1ab738.  v13:= 32I;
  #L1ab73c.  if v3 == v13 then goto L1ab7d2;
  #L1ab740.  v13:= 9I;
  #L1ab744.  if v3 == v13 then goto L1ab7d2;
  #L1ab748.  v14:= (`long`) v6 @kind i2l;
  #L1ab74a.  v16:= 6L;
  #L1ab74e.  v14:= v14 * v16 @kind long;
  #L1ab752.  v16:= 8L;
  #L1ab756.  v14:= v14 / v16 @kind long;
  #L1ab75a.  v13:= (`int`) v14 @kind l2i;
  #L1ab75c.  v7:= new `byte`[v13];
  #L1ab760.  v8:= 0I;
  #L1ab762.  v4:= 0I;
  #L1ab764.  v12:= 0I;
  #L1ab766.  v10:= 0I;
  #L1ab768.  v9:= v8;
  #L1ab76a.  if v10 >= v6 then goto L1ab85a;
  #L1ab76e.  v0:= v18 @kind object;
  #L1ab772.  call temp:= `charAt`(v0, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1ab778.  v3:= temp;
  #L1ab77a.  v13:= 65I;
  #L1ab77e.  if v3 < v13 then goto L1ab7d8;
  #L1ab782.  v13:= 90I;
  #L1ab786.  if v3 > v13 then goto L1ab7d8;
  #L1ab78a.  v2:= v3 + -65;
  #L1ab78e.  v13:= v12 ^< 6;
  #L1ab792.  v14:= (`byte`) v2 @kind i2b;
  #L1ab794.  v12:= v13 ^| v14 @kind int;
  #L1ab798.  v4:= v4 + 1;
  #L1ab79c.  v13:= v4 %% 4;
  #L1ab7a0.  if v13 != 0 then goto L1ab8c4;
  #L1ab7a4.  v8:= v9 + 1;
  #L1ab7a8.  v13:= v12 ^> 16;
  #L1ab7ac.  v13:= (`byte`) v13 @kind i2b;
  #L1ab7ae.  v7[v9]:= v13 @kind byte;
  #L1ab7b2.  v9:= v8 + 1;
  #L1ab7b6.  v13:= v12 ^> 8;
  #L1ab7ba.  v13:= (`byte`) v13 @kind i2b;
  #L1ab7bc.  v7[v8]:= v13 @kind byte;
  #L1ab7c0.  v8:= v9 + 1;
  #L1ab7c4.  v13:= (`byte`) v12 @kind i2b;
  #L1ab7c6.  v7[v9]:= v13 @kind byte;
  #L1ab7ca.  v10:= v10 + 1;
  #L1ab7ce.  v9:= v8;
  #L1ab7d0.  goto L1ab76a;
  #L1ab7d2.  v6:= v6 + -1;
  #L1ab7d6.  goto L1ab70c;
  #L1ab7d8.  v13:= 97I;
  #L1ab7dc.  if v3 < v13 then goto L1ab7ee;
  #L1ab7e0.  v13:= 122I;
  #L1ab7e4.  if v3 > v13 then goto L1ab7ee;
  #L1ab7e8.  v2:= v3 + -71;
  #L1ab7ec.  goto L1ab78e;
  #L1ab7ee.  v13:= 48I;
  #L1ab7f2.  if v3 < v13 then goto L1ab804;
  #L1ab7f6.  v13:= 57I;
  #L1ab7fa.  if v3 > v13 then goto L1ab804;
  #L1ab7fe.  v2:= v3 + 4;
  #L1ab802.  goto L1ab78e;
  #L1ab804.  v13:= 43I;
  #L1ab808.  if v3 == v13 then goto L1ab814;
  #L1ab80c.  v13:= 45I;
  #L1ab810.  if v3 != v13 then goto L1ab81a;
  #L1ab814.  v2:= 62I;
  #L1ab818.  goto L1ab78e;
  #L1ab81a.  v13:= 47I;
  #L1ab81e.  if v3 == v13 then goto L1ab82a;
  #L1ab822.  v13:= 95I;
  #L1ab826.  if v3 != v13 then goto L1ab830;
  #L1ab82a.  v2:= 63I;
  #L1ab82e.  goto L1ab78e;
  #L1ab830.  v13:= 10I;
  #L1ab834.  if v3 == v13 then goto L1ab8c4;
  #L1ab838.  v13:= 13I;
  #L1ab83c.  if v3 == v13 then goto L1ab8c4;
  #L1ab840.  v13:= 32I;
  #L1ab844.  if v3 == v13 then goto L1ab8c4;
  #L1ab848.  v13:= 9I;
  #L1ab84c.  if v3 != v13 then goto L1ab854;
  #L1ab850.  v8:= v9;
  #L1ab852.  goto L1ab7ca;
  #L1ab854.  v7:= 0I;
  #L1ab856.  v8:= v9;
  #L1ab858.  return v7 @kind object;
  #L1ab85a.  v5:= v4 %% 4;
  #L1ab85e.  v13:= 1I;
  #L1ab860.  if v5 != v13 then goto L1ab86a;
  #L1ab864.  v7:= 0I;
  #L1ab866.  v8:= v9;
  #L1ab868.  goto L1ab858;
  #L1ab86a.  v13:= 2I;
  #L1ab86c.  if v5 != v13 then goto L1ab89a;
  #L1ab870.  v12:= v12 ^< 12;
  #L1ab874.  v8:= v9 + 1;
  #L1ab878.  v13:= v12 ^> 16;
  #L1ab87c.  v13:= (`byte`) v13 @kind i2b;
  #L1ab87e.  v7[v9]:= v13 @kind byte;
  #L1ab882.  v13:= length @variable v7;
  #L1ab884.  if v8 == v13 then goto L1ab858;
  #L1ab888.  v11:= new `byte`[v8];
  #L1ab88c.  v13:= 0I;
  #L1ab88e.  v14:= 0I;
  #L1ab890.  call `arraycopy`(v7, v13, v11, v14, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1ab896.  v7:= v11 @kind object;
  #L1ab898.  goto L1ab858;
  #L1ab89a.  v13:= 3I;
  #L1ab89c.  if v5 != v13 then goto L1ab8c0;
  #L1ab8a0.  v12:= v12 ^< 6;
  #L1ab8a4.  v8:= v9 + 1;
  #L1ab8a8.  v13:= v12 ^> 16;
  #L1ab8ac.  v13:= (`byte`) v13 @kind i2b;
  #L1ab8ae.  v7[v9]:= v13 @kind byte;
  #L1ab8b2.  v9:= v8 + 1;
  #L1ab8b6.  v13:= v12 ^> 8;
  #L1ab8ba.  v13:= (`byte`) v13 @kind i2b;
  #L1ab8bc.  v7[v8]:= v13 @kind byte;
  #L1ab8c0.  v8:= v9;
  #L1ab8c2.  goto L1ab882;
  #L1ab8c4.  v8:= v9;
  #L1ab8c6.  goto L1ab7ca;
}
procedure `java.lang.String` `encode`(`byte`[] v1 @kind object @name `in`) @signature `Lokio/Base64;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ab8d8.  v0:= `@@okio.Base64.MAP` @type ^`byte`[] @kind object;
  #L1ab8dc.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L1ab8e2.  v0:= temp @kind object;
  #L1ab8e4.  return v0 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v10 @kind object @name `in`, `byte`[] v11 @kind object @name `map`) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ab8f8.  v9:= 61I;
  #L1ab8fc.  v7:= length @variable v10;
  #L1ab8fe.  v7:= v7 + 2;
  #L1ab902.  v7:= v7 / 3;
  #L1ab906.  v5:= v7 * 4;
  #L1ab90a.  v6:= new `byte`[v5];
  #L1ab90e.  v3:= 0I;
  #L1ab910.  v7:= length @variable v10;
  #L1ab912.  v8:= length @variable v10;
  #L1ab914.  v8:= v8 %% 3;
  #L1ab918.  v1:= v7 - v8 @kind int;
  #L1ab91c.  v2:= 0I;
  #L1ab91e.  v4:= v3;
  #L1ab920.  if v2 >= v1 then goto L1ab9b2;
  #L1ab924.  v3:= v4 + 1;
  #L1ab928.  v7:= v10[v2] @kind byte;
  #L1ab92c.  v7:= v7 ^& 255;
  #L1ab930.  v7:= v7 ^> 2;
  #L1ab934.  v7:= v11[v7] @kind byte;
  #L1ab938.  v6[v4]:= v7 @kind byte;
  #L1ab93c.  v4:= v3 + 1;
  #L1ab940.  v7:= v10[v2] @kind byte;
  #L1ab944.  v7:= v7 ^& 3;
  #L1ab948.  v7:= v7 ^< 4;
  #L1ab94c.  v8:= v2 + 1;
  #L1ab950.  v8:= v10[v8] @kind byte;
  #L1ab954.  v8:= v8 ^& 255;
  #L1ab958.  v8:= v8 ^> 4;
  #L1ab95c.  v7:= v7 ^| v8 @kind int;
  #L1ab95e.  v7:= v11[v7] @kind byte;
  #L1ab962.  v6[v3]:= v7 @kind byte;
  #L1ab966.  v3:= v4 + 1;
  #L1ab96a.  v7:= v2 + 1;
  #L1ab96e.  v7:= v10[v7] @kind byte;
  #L1ab972.  v7:= v7 ^& 15;
  #L1ab976.  v7:= v7 ^< 2;
  #L1ab97a.  v8:= v2 + 2;
  #L1ab97e.  v8:= v10[v8] @kind byte;
  #L1ab982.  v8:= v8 ^& 255;
  #L1ab986.  v8:= v8 ^> 6;
  #L1ab98a.  v7:= v7 ^| v8 @kind int;
  #L1ab98c.  v7:= v11[v7] @kind byte;
  #L1ab990.  v6[v4]:= v7 @kind byte;
  #L1ab994.  v4:= v3 + 1;
  #L1ab998.  v7:= v2 + 2;
  #L1ab99c.  v7:= v10[v7] @kind byte;
  #L1ab9a0.  v7:= v7 ^& 63;
  #L1ab9a4.  v7:= v11[v7] @kind byte;
  #L1ab9a8.  v6[v3]:= v7 @kind byte;
  #L1ab9ac.  v2:= v2 + 3;
  #L1ab9b0.  goto L1ab920;
  #L1ab9b2.  v7:= length @variable v10;
  #L1ab9b4.  v7:= v7 %% 3;
  #L1ab9b8.  goto L1aba8c;
  #L1ab9be.  v3:= v4;
  #Try_start0.  
  #L1ab9c0.  v7:= new `java.lang.String`;
  #L1ab9c4.  v8:= "US-ASCII" @kind object;
  #L1ab9c8.  call `<init>`(v7, v6, v8) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L1ab9ce.  return v7 @kind object;
  #L1ab9d0.  v3:= v4 + 1;
  #L1ab9d4.  v7:= v10[v1] @kind byte;
  #L1ab9d8.  v7:= v7 ^& 255;
  #L1ab9dc.  v7:= v7 ^> 2;
  #L1ab9e0.  v7:= v11[v7] @kind byte;
  #L1ab9e4.  v6[v4]:= v7 @kind byte;
  #L1ab9e8.  v4:= v3 + 1;
  #L1ab9ec.  v7:= v10[v1] @kind byte;
  #L1ab9f0.  v7:= v7 ^& 3;
  #L1ab9f4.  v7:= v7 ^< 4;
  #L1ab9f8.  v7:= v11[v7] @kind byte;
  #L1ab9fc.  v6[v3]:= v7 @kind byte;
  #L1aba00.  v3:= v4 + 1;
  #L1aba04.  v6[v4]:= v9 @kind byte;
  #L1aba08.  v4:= v3 + 1;
  #L1aba0c.  v6[v3]:= v9 @kind byte;
  #L1aba10.  v3:= v4;
  #L1aba12.  goto L1ab9c0;
  #L1aba14.  v3:= v4 + 1;
  #L1aba18.  v7:= v10[v1] @kind byte;
  #L1aba1c.  v7:= v7 ^& 255;
  #L1aba20.  v7:= v7 ^> 2;
  #L1aba24.  v7:= v11[v7] @kind byte;
  #L1aba28.  v6[v4]:= v7 @kind byte;
  #L1aba2c.  v4:= v3 + 1;
  #L1aba30.  v7:= v10[v1] @kind byte;
  #L1aba34.  v7:= v7 ^& 3;
  #L1aba38.  v7:= v7 ^< 4;
  #L1aba3c.  v8:= v1 + 1;
  #L1aba40.  v8:= v10[v8] @kind byte;
  #L1aba44.  v8:= v8 ^& 255;
  #L1aba48.  v8:= v8 ^> 4;
  #L1aba4c.  v7:= v7 ^| v8 @kind int;
  #L1aba4e.  v7:= v11[v7] @kind byte;
  #L1aba52.  v6[v3]:= v7 @kind byte;
  #L1aba56.  v3:= v4 + 1;
  #L1aba5a.  v7:= v1 + 1;
  #L1aba5e.  v7:= v10[v7] @kind byte;
  #L1aba62.  v7:= v7 ^& 15;
  #L1aba66.  v7:= v7 ^< 2;
  #L1aba6a.  v7:= v11[v7] @kind byte;
  #L1aba6e.  v6[v4]:= v7 @kind byte;
  #L1aba72.  v4:= v3 + 1;
  #L1aba76.  v6[v3]:= v9 @kind byte;
  #L1aba7a.  goto L1ab9be;
  #L1aba7c.  v0:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L1aba7e.  v7:= new `java.lang.AssertionError`;
  #L1aba82.  call `<init>`(v7, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1aba88.  throw v7;
  #L1aba8a.  
  #L1aba8c.  switch v7
                  | 1 => goto L1ab9d0
                  | 2 => goto L1aba14
                  | else => goto L1ab9be;
  catch `java.io.UnsupportedEncodingException` @[Try_start0..Try_end0] goto L1aba7c;
}
procedure `java.lang.String` `encodeUrl`(`byte`[] v1 @kind object @name `in`) @signature `Lokio/Base64;.encodeUrl:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ababc.  v0:= `@@okio.Base64.URL_MAP` @type ^`byte`[] @kind object;
  #L1abac0.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L1abac6.  v0:= temp @kind object;
  #L1abac8.  return v0 @kind object;
}

record `okio.RealBufferedSource$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.RealBufferedSource` `okio.RealBufferedSource$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSource$1` v0 @kind this, `okio.RealBufferedSource` v1 @kind object @name `this$0`) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ad944.  v0.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` := v1 @kind object;
  #L1ad948.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1ad94e.  return @kind void;
}
procedure `int` `available`(`okio.RealBufferedSource$1` v4 @kind this) @signature `Lokio/RealBufferedSource$1;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ad960.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ad964.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1ad968.  if v0 == 0 then goto L1ad97c;
  #L1ad96c.  v0:= new `java.io.IOException`;
  #L1ad970.  v1:= "closed" @kind object;
  #L1ad974.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad97a.  throw v0;
  #L1ad97c.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ad980.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1ad984.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1ad988.  v2:= 2147483647L;
  #L1ad98e.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1ad994.  v0:= temp @kind wide;
  #L1ad996.  v0:= (`int`) v0 @kind l2i;
  #L1ad998.  return v0;
}
procedure `void` `close`(`okio.RealBufferedSource$1` v1 @kind this) @signature `Lokio/RealBufferedSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ad9ac.  v0:= v1.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ad9b0.  call `close`(v0) @signature `Lokio/RealBufferedSource;.close:()V` @kind virtual;
  #L1ad9b6.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v6 @kind this) @signature `Lokio/RealBufferedSource$1;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ad9c8.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ad9cc.  v2:= v2.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1ad9d0.  if v2 == 0 then goto L1ad9e4;
  #L1ad9d4.  v2:= new `java.io.IOException`;
  #L1ad9d8.  v3:= "closed" @kind object;
  #L1ad9dc.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ad9e2.  throw v2;
  #L1ad9e4.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ad9e8.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1ad9ec.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1ad9f0.  v4:= 0L;
  #L1ad9f4.  v2:= lcmp(v2, v4);
  #L1ad9f8.  if v2 != 0 then goto L1ada28;
  #L1ad9fc.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ada00.  v2:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1ada04.  v3:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ada08.  v3:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1ada0c.  v4:= 8192L;
  #L1ada10.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1ada16.  v0:= temp @kind wide;
  #L1ada18.  v2:= -1L;
  #L1ada1c.  v2:= lcmp(v0, v2);
  #L1ada20.  if v2 != 0 then goto L1ada28;
  #L1ada24.  v2:= -1I;
  #L1ada26.  return v2;
  #L1ada28.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ada2c.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1ada30.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1ada36.  v2:= temp;
  #L1ada38.  v2:= v2 ^& 255;
  #L1ada3c.  goto L1ada26;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v8 @kind this, `byte`[] v9 @kind object @name `data`, `int` v10 @name `offset`, `int` v11 @name `byteCount`) @signature `Lokio/RealBufferedSource$1;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1ada50.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ada54.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1ada58.  if v0 == 0 then goto L1ada6c;
  #L1ada5c.  v0:= new `java.io.IOException`;
  #L1ada60.  v1:= "closed" @kind object;
  #L1ada64.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ada6a.  throw v0;
  #L1ada6c.  v0:= length @variable v9;
  #L1ada6e.  v0:= (`long`) v0 @kind i2l;
  #L1ada70.  v2:= (`long`) v10 @kind i2l;
  #L1ada72.  v4:= (`long`) v11 @kind i2l;
  #L1ada74.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1ada7a.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ada7e.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1ada82.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1ada86.  v2:= 0L;
  #L1ada8a.  v0:= lcmp(v0, v2);
  #L1ada8e.  if v0 != 0 then goto L1adabe;
  #L1ada92.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ada96.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1ada9a.  v1:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ada9e.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1adaa2.  v2:= 8192L;
  #L1adaa6.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1adaac.  v6:= temp @kind wide;
  #L1adaae.  v0:= -1L;
  #L1adab2.  v0:= lcmp(v6, v0);
  #L1adab6.  if v0 != 0 then goto L1adabe;
  #L1adaba.  v0:= -1I;
  #L1adabc.  return v0;
  #L1adabe.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adac2.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1adac6.  call temp:= `read`(v0, v9, v10, v11) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L1adacc.  v0:= temp;
  #L1adace.  goto L1adabc;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource$1` v2 @kind this) @signature `Lokio/RealBufferedSource$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1adae0.  v0:= new `java.lang.StringBuilder`;
  #L1adae4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1adaea.  v1:= v2.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adaee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1adaf4.  v0:= temp @kind object;
  #L1adaf6.  v1:= ".inputStream()" @kind object;
  #L1adafa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1adb00.  v0:= temp @kind object;
  #L1adb02.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1adb08.  v0:= temp @kind object;
  #L1adb0a.  return v0 @kind object;
}

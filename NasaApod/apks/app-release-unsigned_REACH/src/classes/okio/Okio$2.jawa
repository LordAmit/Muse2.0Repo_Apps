record `okio.Okio$2` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `java.io.InputStream` `okio.Okio$2.val$in` @AccessFlag FINAL_SYNTHETIC;
  `okio.Timeout` `okio.Okio$2.val$timeout` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Okio$2` v0 @kind this, `okio.Timeout` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21e670.  v0.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` := v1 @kind object;
  #L21e674.  v0.`okio.Okio$2.val$in` @type ^`java.io.InputStream` := v2 @kind object;
  #L21e678.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21e67e.  return @kind void;
}
procedure `void` `close`(`okio.Okio$2` v1 @kind this) @signature `Lokio/Okio$2;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21e690.  v0:= v1.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L21e694.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L21e69a.  return @kind void;
}
procedure `long` `read`(`okio.Okio$2` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokio/Okio$2;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21e6ac.  v4:= 0L;
  #L21e6b0.  v6:= lcmp(v10, v4);
  #L21e6b4.  if v6 >= 0 then goto L21e6ea;
  #L21e6b8.  v4:= new `java.lang.IllegalArgumentException`;
  #L21e6bc.  v5:= new `java.lang.StringBuilder`;
  #L21e6c0.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21e6c6.  v6:= "byteCount < 0: " @kind object;
  #L21e6ca.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21e6d0.  v5:= temp @kind object;
  #L21e6d2.  call temp:= `append`(v5, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L21e6d8.  v5:= temp @kind object;
  #L21e6da.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21e6e0.  v5:= temp @kind object;
  #L21e6e2.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21e6e8.  throw v4;
  #L21e6ea.  v6:= lcmp(v10, v4);
  #L21e6ee.  if v6 != 0 then goto L21e6f4;
  #L21e6f2.  return v4 @kind wide;
  #Try_start0.  
  #L21e6f4.  v4:= v8.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` @kind object;
  #L21e6f8.  call `throwIfReached`(v4) @signature `Lokio/Timeout;.throwIfReached:()V` @kind virtual;
  #L21e6fe.  v4:= 1I;
  #L21e700.  call temp:= `writableSegment`(v9, v4) @signature `Lokio/Buffer;.writableSegment:(I)Lokio/Segment;` @kind virtual;
  #L21e706.  v3:= temp @kind object;
  #L21e708.  v4:= v3.`okio.Segment.limit` @type ^`int`;
  #L21e70c.  v4:= v4 - 8192;
  #L21e710.  v4:= (`long`) v4 @kind i2l;
  #L21e712.  call temp:= `min`(v10, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L21e718.  v4:= temp @kind wide;
  #L21e71a.  v2:= (`int`) v4 @kind l2i;
  #L21e71c.  v4:= v8.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L21e720.  v5:= v3.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L21e724.  v6:= v3.`okio.Segment.limit` @type ^`int`;
  #L21e728.  call temp:= `read`(v4, v5, v6, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L21e72e.  v0:= temp;
  #L21e730.  v4:= -1I;
  #L21e732.  if v0 != v4 then goto L21e73c;
  #L21e736.  v4:= -1L;
  #L21e73a.  goto L21e6f2;
  #L21e73c.  v4:= v3.`okio.Segment.limit` @type ^`int`;
  #L21e740.  v4:= v4 + v0 @kind int;
  #L21e742.  v3.`okio.Segment.limit` @type ^`int` := v4;
  #L21e746.  v4:= v9.`okio.Buffer.size` @type ^`long` @kind wide;
  #L21e74a.  v6:= (`long`) v0 @kind i2l;
  #L21e74c.  v4:= v4 + v6 @kind long;
  #L21e74e.  v9.`okio.Buffer.size` @type ^`long` := v4 @kind wide;
  #Try_end0.  
  #L21e752.  v4:= (`long`) v0 @kind i2l;
  #L21e754.  goto L21e6f2;
  #L21e756.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L21e758.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lokio/Okio;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L21e75e.  v4:= temp;
  #L21e760.  if v4 == 0 then goto L21e770;
  #L21e764.  v4:= new `java.io.IOException`;
  #L21e768.  call `<init>`(v4, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L21e76e.  throw v4;
  #L21e770.  throw v1;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L21e756;
}
procedure `okio.Timeout` `timeout`(`okio.Okio$2` v1 @kind this) @signature `Lokio/Okio$2;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21e794.  v0:= v1.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` @kind object;
  #L21e798.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.Okio$2` v2 @kind this) @signature `Lokio/Okio$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21e7ac.  v0:= new `java.lang.StringBuilder`;
  #L21e7b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21e7b6.  v1:= "source(" @kind object;
  #L21e7ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21e7c0.  v0:= temp @kind object;
  #L21e7c2.  v1:= v2.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L21e7c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21e7cc.  v0:= temp @kind object;
  #L21e7ce.  v1:= ")" @kind object;
  #L21e7d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21e7d8.  v0:= temp @kind object;
  #L21e7da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21e7e0.  v0:= temp @kind object;
  #L21e7e2.  return v0 @kind object;
}

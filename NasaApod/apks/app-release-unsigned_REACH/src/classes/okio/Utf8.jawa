record `okio.Utf8` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.Utf8` v0 @kind this) @signature `Lokio/Utf8;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1ae26c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ae272.  return @kind void;
}
procedure `long` `size`(`java.lang.String` v2 @kind object @name `string`) @signature `Lokio/Utf8;.size:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ae284.  v0:= 0I;
  #L1ae286.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ae28c.  v1:= temp;
  #L1ae28e.  call temp:= `size`(v2, v0, v1) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @kind static;
  #L1ae294.  v0:= temp @kind wide;
  #L1ae296.  return v0 @kind wide;
}
procedure `long` `size`(`java.lang.String` v12 @kind object @name `string`, `int` v13 @name `beginIndex`, `int` v14 @name `endIndex`) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ae2a8.  v10:= 1L;
  #L1ae2ac.  v8:= 57343I;
  #L1ae2b2.  if v12 != 0 then goto L1ae2c6;
  #L1ae2b6.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ae2ba.  v6:= "string == null" @kind object;
  #L1ae2be.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae2c4.  throw v3;
  #L1ae2c6.  if v13 >= 0 then goto L1ae2fc;
  #L1ae2ca.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ae2ce.  v6:= new `java.lang.StringBuilder`;
  #L1ae2d2.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ae2d8.  v7:= "beginIndex < 0: " @kind object;
  #L1ae2dc.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae2e2.  v6:= temp @kind object;
  #L1ae2e4.  call temp:= `append`(v6, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae2ea.  v6:= temp @kind object;
  #L1ae2ec.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ae2f2.  v6:= temp @kind object;
  #L1ae2f4.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae2fa.  throw v3;
  #L1ae2fc.  if v14 >= v13 then goto L1ae346;
  #L1ae300.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ae304.  v6:= new `java.lang.StringBuilder`;
  #L1ae308.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ae30e.  v7:= "endIndex < beginIndex: " @kind object;
  #L1ae312.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae318.  v6:= temp @kind object;
  #L1ae31a.  call temp:= `append`(v6, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae320.  v6:= temp @kind object;
  #L1ae322.  v7:= " < " @kind object;
  #L1ae326.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae32c.  v6:= temp @kind object;
  #L1ae32e.  call temp:= `append`(v6, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae334.  v6:= temp @kind object;
  #L1ae336.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ae33c.  v6:= temp @kind object;
  #L1ae33e.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae344.  throw v3;
  #L1ae346.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ae34c.  v3:= temp;
  #L1ae34e.  if v14 <= v3 then goto L1ae3a0;
  #L1ae352.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ae356.  v6:= new `java.lang.StringBuilder`;
  #L1ae35a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ae360.  v7:= "endIndex > string.length: " @kind object;
  #L1ae364.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae36a.  v6:= temp @kind object;
  #L1ae36c.  call temp:= `append`(v6, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae372.  v6:= temp @kind object;
  #L1ae374.  v7:= " > " @kind object;
  #L1ae378.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae37e.  v6:= temp @kind object;
  #L1ae380.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ae386.  v7:= temp;
  #L1ae388.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae38e.  v6:= temp @kind object;
  #L1ae390.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ae396.  v6:= temp @kind object;
  #L1ae398.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae39e.  throw v3;
  #L1ae3a0.  v4:= 0L;
  #L1ae3a4.  v1:= v13;
  #L1ae3a6.  if v1 >= v14 then goto L1ae434;
  #L1ae3aa.  call temp:= `charAt`(v12, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1ae3b0.  v0:= temp;
  #L1ae3b2.  v3:= 128I;
  #L1ae3b6.  if v0 >= v3 then goto L1ae3c2;
  #L1ae3ba.  v4:= v4 + v10 @kind long;
  #L1ae3bc.  v1:= v1 + 1;
  #L1ae3c0.  goto L1ae3a6;
  #L1ae3c2.  v3:= 2048I;
  #L1ae3c6.  if v0 >= v3 then goto L1ae3d6;
  #L1ae3ca.  v6:= 2L;
  #L1ae3ce.  v4:= v4 + v6 @kind long;
  #L1ae3d0.  v1:= v1 + 1;
  #L1ae3d4.  goto L1ae3a6;
  #L1ae3d6.  v3:= 55296I;
  #L1ae3dc.  if v0 < v3 then goto L1ae3e4;
  #L1ae3e0.  if v0 <= v8 then goto L1ae3f0;
  #L1ae3e4.  v6:= 3L;
  #L1ae3e8.  v4:= v4 + v6 @kind long;
  #L1ae3ea.  v1:= v1 + 1;
  #L1ae3ee.  goto L1ae3a6;
  #L1ae3f0.  v3:= v1 + 1;
  #L1ae3f4.  if v3 >= v14 then goto L1ae424;
  #L1ae3f8.  v3:= v1 + 1;
  #L1ae3fc.  call temp:= `charAt`(v12, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1ae402.  v2:= temp;
  #L1ae404.  v3:= 56319I;
  #L1ae40a.  if v0 > v3 then goto L1ae41c;
  #L1ae40e.  v3:= 56320I;
  #L1ae414.  if v2 < v3 then goto L1ae41c;
  #L1ae418.  if v2 <= v8 then goto L1ae428;
  #L1ae41c.  v4:= v4 + v10 @kind long;
  #L1ae41e.  v1:= v1 + 1;
  #L1ae422.  goto L1ae3a6;
  #L1ae424.  v2:= 0I;
  #L1ae426.  goto L1ae404;
  #L1ae428.  v6:= 4L;
  #L1ae42c.  v4:= v4 + v6 @kind long;
  #L1ae42e.  v1:= v1 + 2;
  #L1ae432.  goto L1ae3a6;
  #L1ae434.  return v4 @kind wide;
}

record `okhttp3.RealCall$AsyncCall` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.Callback` `okhttp3.RealCall$AsyncCall.responseCallback` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RealCall` `okhttp3.RealCall$AsyncCall.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RealCall$AsyncCall` v4 @kind this, `okhttp3.RealCall` v5 @kind object @name `this$0`, `okhttp3.Callback` v6 @kind object @name `responseCallback`) @signature `Lokhttp3/RealCall$AsyncCall;.<init>:(Lokhttp3/RealCall;Lokhttp3/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L214e9c.  v4.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` := v5 @kind object;
  #L214ea0.  v0:= "OkHttp %s" @kind object;
  #L214ea4.  v1:= 1I;
  #L214ea6.  v1:= new `java.lang.Object`[v1];
  #L214eaa.  v2:= 0I;
  #L214eac.  call temp:= `redactedUrl`(v5) @signature `Lokhttp3/RealCall;.redactedUrl:()Ljava/lang/String;` @kind virtual;
  #L214eb2.  v3:= temp @kind object;
  #L214eb4.  v1[v2]:= v3 @kind object;
  #L214eb8.  call `<init>`(v4, v0, v1) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L214ebe.  v4.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` := v6 @kind object;
  #L214ec2.  return @kind void;
}
procedure `void` `execute`(`okhttp3.RealCall$AsyncCall` v7 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L214ed4.  v2:= 0I;
  #Try_start0.  
  #L214ed6.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214eda.  call temp:= `getResponseWithInterceptorChain`(v3) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:()Lokhttp3/Response;` @kind virtual;
  #L214ee0.  v1:= temp @kind object;
  #L214ee2.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214ee6.  v3:= v3.`okhttp3.RealCall.retryAndFollowUpInterceptor` @type ^`okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind object;
  #L214eea.  call temp:= `isCanceled`(v3) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isCanceled:()Z` @kind virtual;
  #L214ef0.  v3:= temp;
  #L214ef2.  if v3 == 0 then goto L214f2c;
  #L214ef6.  v2:= 1I;
  #L214ef8.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L214efc.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214f00.  v5:= new `java.io.IOException`;
  #L214f04.  v6:= "Canceled" @kind object;
  #L214f08.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214f0e.  call `onFailure`(v3, v4, v5) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #Try_end0.  
  #L214f14.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214f18.  v3:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L214f1c.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L214f22.  v3:= temp @kind object;
  #L214f24.  call `finished`(v3, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L214f2a.  return @kind void;
  #L214f2c.  v2:= 1I;
  #Try_start1.  
  #L214f2e.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L214f32.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214f36.  call `onResponse`(v3, v4, v1) @signature `Lokhttp3/Callback;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind interface;
  #Try_end1.  
  #L214f3c.  goto L214f14;
  #L214f3e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L214f40.  if v2 == 0 then goto L214f9e;
  #Try_start2.  
  #L214f44.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L214f4a.  v3:= temp @kind object;
  #L214f4c.  v4:= 4I;
  #L214f4e.  v5:= new `java.lang.StringBuilder`;
  #L214f52.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L214f58.  v6:= "Callback failure for " @kind object;
  #L214f5c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L214f62.  v5:= temp @kind object;
  #L214f64.  v6:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214f68.  call temp:= `toLoggableString`(v6) @signature `Lokhttp3/RealCall;.toLoggableString:()Ljava/lang/String;` @kind virtual;
  #L214f6e.  v6:= temp @kind object;
  #L214f70.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L214f76.  v5:= temp @kind object;
  #L214f78.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L214f7e.  v5:= temp @kind object;
  #L214f80.  call `log`(v3, v4, v5, v0) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #Try_end2.  
  #L214f86.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214f8a.  v3:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L214f8e.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L214f94.  v3:= temp @kind object;
  #L214f96.  call `finished`(v3, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L214f9c.  goto L214f2a;
  #Try_start3.  
  #L214f9e.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214fa2.  call temp:= `access$000`(v3) @signature `Lokhttp3/RealCall;.access$000:(Lokhttp3/RealCall;)Lokhttp3/EventListener;` @kind static;
  #L214fa8.  v3:= temp @kind object;
  #L214faa.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214fae.  call `callFailed`(v3, v4, v0) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L214fb4.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L214fb8.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214fbc.  call `onFailure`(v3, v4, v0) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #Try_end3.  
  #L214fc2.  goto L214f86;
  #L214fc4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L214fc6.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L214fca.  v4:= v4.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L214fce.  call temp:= `dispatcher`(v4) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L214fd4.  v4:= temp @kind object;
  #L214fd6.  call `finished`(v4, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L214fdc.  throw v3;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L214f3e;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L214fc4;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L214f3e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L214fc4;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L214fc4;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L214fc4;
}
procedure `okhttp3.RealCall` `get`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @AccessFlag  {
    temp;
    v0;

  #L215018.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L21501c.  return v0 @kind object;
}
procedure `java.lang.String` `host`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L215030.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215034.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L215038.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L21503e.  v0:= temp @kind object;
  #L215040.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L215046.  v0:= temp @kind object;
  #L215048.  return v0 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.request:()Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;

  #L21505c.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215060.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L215064.  return v0 @kind object;
}

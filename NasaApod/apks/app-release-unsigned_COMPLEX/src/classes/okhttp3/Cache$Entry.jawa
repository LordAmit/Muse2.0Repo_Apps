record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.SENT_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L192c20.  v0:= new `java.lang.StringBuilder`;
  #L192c24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L192c2a.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L192c30.  v1:= temp @kind object;
  #L192c32.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L192c38.  v1:= temp @kind object;
  #L192c3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192c40.  v0:= temp @kind object;
  #L192c42.  v1:= "-Sent-Millis" @kind object;
  #L192c46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192c4c.  v0:= temp @kind object;
  #L192c4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L192c54.  v0:= temp @kind object;
  #L192c56.  `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L192c5a.  v0:= new `java.lang.StringBuilder`;
  #L192c5e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L192c64.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L192c6a.  v1:= temp @kind object;
  #L192c6c.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L192c72.  v1:= temp @kind object;
  #L192c74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192c7a.  v0:= temp @kind object;
  #L192c7c.  v1:= "-Received-Millis" @kind object;
  #L192c80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192c86.  v0:= temp @kind object;
  #L192c88.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L192c8e.  v0:= temp @kind object;
  #L192c90.  `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L192c94.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L192ca8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L192cae.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L192cb4.  v0:= temp @kind object;
  #L192cb6.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L192cbc.  v0:= temp @kind object;
  #L192cbe.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L192cc4.  v0:= temp @kind object;
  #L192cc6.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L192cca.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L192cd0.  v0:= temp @kind object;
  #L192cd2.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L192cd6.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L192cdc.  v0:= temp @kind object;
  #L192cde.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L192ce4.  v0:= temp @kind object;
  #L192ce6.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L192cea.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L192cf0.  v0:= temp @kind object;
  #L192cf2.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L192cf6.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L192cfc.  v0:= temp;
  #L192cfe.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L192d02.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L192d08.  v0:= temp @kind object;
  #L192d0a.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L192d0e.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L192d14.  v0:= temp @kind object;
  #L192d16.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L192d1a.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L192d20.  v0:= temp @kind object;
  #L192d22.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L192d26.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L192d2c.  v0:= temp @kind wide;
  #L192d2e.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L192d32.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L192d38.  v0:= temp @kind wide;
  #L192d3a.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L192d3e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v22 @kind this, `okio.Source` v23 @kind object @name `in`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L192d50.  call `<init>`(v22) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #Try_start0.  
  #L192d56.  call temp:= `buffer`(v23) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L192d5c.  v14:= temp @kind object;
  #L192d5e.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192d64.  v19:= temp @kind object;
  #L192d66.  v0:= v19 @kind object;
  #L192d6a.  v1:= v22 @kind object;
  #L192d6e.  v1.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L192d72.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192d78.  v19:= temp @kind object;
  #L192d7a.  v0:= v19 @kind object;
  #L192d7e.  v1:= v22 @kind object;
  #L192d82.  v1.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L192d86.  v17:= new `okhttp3.Headers$Builder`;
  #L192d8a.  call `<init>`(v17) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L192d90.  call temp:= `readInt`(v14) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L192d96.  v18:= temp;
  #L192d98.  v7:= 0I;
  #L192d9a.  v0:= v18;
  #L192d9e.  if v7 >= v0 then goto L192dbe;
  #L192da2.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192da8.  v19:= temp @kind object;
  #L192daa.  v0:= v17 @kind object;
  #L192dae.  v1:= v19 @kind object;
  #L192db2.  call temp:= `addLenient`(v0, v1) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L192db8.  v7:= v7 + 1;
  #L192dbc.  goto L192d9a;
  #L192dbe.  call temp:= `build`(v17) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L192dc4.  v19:= temp @kind object;
  #L192dc6.  v0:= v19 @kind object;
  #L192dca.  v1:= v22 @kind object;
  #L192dce.  v1.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L192dd2.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192dd8.  v19:= temp @kind object;
  #L192dda.  call temp:= `parse`(v19) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L192de0.  v15:= temp @kind object;
  #L192de2.  v0:= v15.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L192de6.  v19:= v0 @kind object;
  #L192dea.  v0:= v19 @kind object;
  #L192dee.  v1:= v22 @kind object;
  #L192df2.  v1.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L192df6.  v0:= v15.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L192dfa.  v19:= v0;
  #L192dfe.  v0:= v19;
  #L192e02.  v1:= v22 @kind object;
  #L192e06.  v1.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L192e0a.  v0:= v15.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L192e0e.  v19:= v0 @kind object;
  #L192e12.  v0:= v19 @kind object;
  #L192e16.  v1:= v22 @kind object;
  #L192e1a.  v1.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L192e1e.  v12:= new `okhttp3.Headers$Builder`;
  #L192e22.  call `<init>`(v12) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L192e28.  call temp:= `readInt`(v14) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L192e2e.  v11:= temp;
  #L192e30.  v7:= 0I;
  #L192e32.  if v7 >= v11 then goto L192e4e;
  #L192e36.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192e3c.  v19:= temp @kind object;
  #L192e3e.  v0:= v19 @kind object;
  #L192e42.  call temp:= `addLenient`(v12, v0) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L192e48.  v7:= v7 + 1;
  #L192e4c.  goto L192e32;
  #L192e4e.  v19:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L192e52.  v0:= v19 @kind object;
  #L192e56.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L192e5c.  v13:= temp @kind object;
  #L192e5e.  v19:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L192e62.  v0:= v19 @kind object;
  #L192e66.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L192e6c.  v10:= temp @kind object;
  #L192e6e.  v19:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L192e72.  v0:= v19 @kind object;
  #L192e76.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L192e7c.  v19:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L192e80.  v0:= v19 @kind object;
  #L192e84.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L192e8a.  if v13 == 0 then goto L192f3a;
  #L192e8e.  call temp:= `parseLong`(v13) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L192e94.  v20:= temp @kind wide;
  #L192e96.  v0:= v20 @kind wide;
  #L192e9a.  v2:= v22 @kind object;
  #L192e9e.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L192ea2.  if v10 == 0 then goto L192f40;
  #L192ea6.  call temp:= `parseLong`(v10) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L192eac.  v20:= temp @kind wide;
  #L192eae.  v0:= v20 @kind wide;
  #L192eb2.  v2:= v22 @kind object;
  #L192eb6.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L192eba.  call temp:= `build`(v12) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L192ec0.  v19:= temp @kind object;
  #L192ec2.  v0:= v19 @kind object;
  #L192ec6.  v1:= v22 @kind object;
  #L192eca.  v1.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L192ece.  call temp:= `isHttps`(v22) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L192ed4.  v19:= temp;
  #L192ed6.  if v19 == 0 then goto L192fb0;
  #L192eda.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192ee0.  v4:= temp @kind object;
  #L192ee2.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L192ee8.  v19:= temp;
  #L192eea.  if v19 <= 0 then goto L192f46;
  #L192eee.  v19:= new `java.io.IOException`;
  #L192ef2.  v20:= new `java.lang.StringBuilder`;
  #L192ef6.  call `<init>`(v20) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L192efc.  v21:= "expected \"\" but was \"" @kind object;
  #L192f00.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192f06.  v20:= temp @kind object;
  #L192f08.  v0:= v20 @kind object;
  #L192f0c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192f12.  v20:= temp @kind object;
  #L192f14.  v21:= "\"" @kind object;
  #L192f18.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192f1e.  v20:= temp @kind object;
  #L192f20.  call temp:= `toString`(v20) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L192f26.  v20:= temp @kind object;
  #L192f28.  call `<init>`(v19, v20) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192f2e.  throw v19;
  #Try_end0.  
  #L192f30.  v19:= Exception @type ^`java.lang.Throwable` @kind object;
  #L192f32.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L192f38.  throw v19;
  #L192f3a.  v20:= 0L;
  #L192f3e.  goto L192e96;
  #L192f40.  v20:= 0L;
  #L192f44.  goto L192eae;
  #Try_start1.  
  #L192f46.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192f4c.  v6:= temp @kind object;
  #L192f4e.  call temp:= `forJavaName`(v6) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L192f54.  v5:= temp @kind object;
  #L192f56.  v0:= v22 @kind object;
  #L192f5a.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L192f60.  v9:= temp @kind object;
  #L192f62.  v0:= v22 @kind object;
  #L192f66.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L192f6c.  v8:= temp @kind object;
  #L192f6e.  call temp:= `exhausted`(v14) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L192f74.  v19:= temp;
  #L192f76.  if v19 != 0 then goto L192faa;
  #L192f7a.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192f80.  v19:= temp @kind object;
  #L192f82.  call temp:= `forJavaName`(v19) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L192f88.  v16:= temp @kind object;
  #L192f8a.  v0:= v16 @kind object;
  #L192f8e.  call temp:= `get`(v0, v5, v9, v8) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L192f94.  v19:= temp @kind object;
  #L192f96.  v0:= v19 @kind object;
  #L192f9a.  v1:= v22 @kind object;
  #L192f9e.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #Try_end1.  
  #L192fa2.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L192fa8.  return @kind void;
  #Try_start2.  
  #L192faa.  v16:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L192fae.  goto L192f8a;
  #L192fb0.  v19:= 0I;
  #L192fb4.  v0:= v19 @kind object;
  #L192fb8.  v1:= v22 @kind object;
  #L192fbc.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #Try_end2.  
  #L192fc0.  goto L192fa2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L192f30;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L192f30;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L192f30;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L192ff0.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L192ff4.  v1:= "https://" @kind object;
  #L192ff8.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L192ffe.  v0:= temp;
  #L193000.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v9 @kind this, `okio.BufferedSource` v10 @kind object @name `source`) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L193014.  call temp:= `readInt`(v10) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L19301a.  v4:= temp;
  #L19301c.  v7:= -1I;
  #L19301e.  if v4 != v7 then goto L19302c;
  #L193022.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L193028.  v6:= temp @kind object;
  #L19302a.  return v6 @kind object;
  #Try_start0.  
  #L19302c.  v7:= "X.509" @kind object;
  #L193030.  call temp:= `getInstance`(v7) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L193036.  v1:= temp @kind object;
  #L193038.  v6:= new `java.util.ArrayList`;
  #L19303c.  call `<init>`(v6, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L193042.  v3:= 0I;
  #L193044.  if v3 >= v4 then goto L19302a;
  #L193048.  call temp:= `readUtf8LineStrict`(v10) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L19304e.  v5:= temp @kind object;
  #L193050.  v0:= new `okio.Buffer`;
  #L193054.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19305a.  call temp:= `decodeBase64`(v5) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L193060.  v7:= temp @kind object;
  #L193062.  call temp:= `write`(v0, v7) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L193068.  call temp:= `inputStream`(v0) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L19306e.  v7:= temp @kind object;
  #L193070.  call temp:= `generateCertificate`(v1, v7) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L193076.  v7:= temp @kind object;
  #L193078.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L19307e.  v3:= v3 + 1;
  #L193082.  goto L193044;
  #L193084.  v2:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L193086.  v7:= new `java.io.IOException`;
  #L19308a.  call temp:= `getMessage`(v2) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L193090.  v8:= temp @kind object;
  #L193092.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193098.  throw v7;
  catch `java.security.cert.CertificateException` @[Try_start0..Try_end0] goto L193084;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v8 @kind this, `okio.BufferedSink` v9 @kind object @name `sink`, `java.util.List` v10 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #Try_start0.  
  #L1930bc.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1930c2.  v5:= temp;
  #L1930c4.  v6:= (`long`) v5 @kind i2l;
  #L1930c6.  call temp:= `writeDecimalLong`(v9, v6) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1930cc.  v5:= temp @kind object;
  #L1930ce.  v6:= 10I;
  #L1930d2.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1930d8.  v2:= 0I;
  #L1930da.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1930e0.  v4:= temp;
  #L1930e2.  if v2 >= v4 then goto L193138;
  #L1930e6.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1930ec.  v5:= temp @kind object;
  #L1930ee.  v5:= (`java.security.cert.Certificate`) v5 @kind object;
  #L1930f2.  call temp:= `getEncoded`(v5) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L1930f8.  v0:= temp @kind object;
  #L1930fa.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L193100.  v5:= temp @kind object;
  #L193102.  call temp:= `base64`(v5) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L193108.  v3:= temp @kind object;
  #L19310a.  call temp:= `writeUtf8`(v9, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L193110.  v5:= temp @kind object;
  #L193112.  v6:= 10I;
  #L193116.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #Try_end0.  
  #L19311c.  v2:= v2 + 1;
  #L193120.  goto L1930e2;
  #L193122.  v1:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L193124.  v5:= new `java.io.IOException`;
  #L193128.  call temp:= `getMessage`(v1) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19312e.  v6:= temp @kind object;
  #L193130.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193136.  throw v5;
  #L193138.  return @kind void;
  catch `java.security.cert.CertificateEncodingException` @[Try_start0..Try_end0] goto L193122;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object @name `request`, `okhttp3.Response` v4 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19315c.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L193160.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193166.  v1:= temp @kind object;
  #L193168.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19316e.  v1:= temp @kind object;
  #L193170.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L193176.  v0:= temp;
  #L193178.  if v0 == 0 then goto L1931a8;
  #L19317c.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L193180.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L193186.  v1:= temp @kind object;
  #L193188.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19318e.  v0:= temp;
  #L193190.  if v0 == 0 then goto L1931a8;
  #L193194.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L193198.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L19319e.  v0:= temp;
  #L1931a0.  if v0 == 0 then goto L1931a8;
  #L1931a4.  v0:= 1I;
  #L1931a6.  return v0;
  #L1931a8.  v0:= 0I;
  #L1931aa.  goto L1931a6;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v6 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v7 @kind object @name `snapshot`) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1931bc.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1931c0.  v4:= "Content-Type" @kind object;
  #L1931c4.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1931ca.  v2:= temp @kind object;
  #L1931cc.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1931d0.  v4:= "Content-Length" @kind object;
  #L1931d4.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1931da.  v1:= temp @kind object;
  #L1931dc.  v3:= new `okhttp3.Request$Builder`;
  #L1931e0.  call `<init>`(v3) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L1931e6.  v4:= v6.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L1931ea.  call temp:= `url`(v3, v4) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1931f0.  v3:= temp @kind object;
  #L1931f2.  v4:= v6.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L1931f6.  v5:= 0I;
  #L1931f8.  call temp:= `method`(v3, v4, v5) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1931fe.  v3:= temp @kind object;
  #L193200.  v4:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L193204.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19320a.  v3:= temp @kind object;
  #L19320c.  call temp:= `build`(v3) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L193212.  v0:= temp @kind object;
  #L193214.  v3:= new `okhttp3.Response$Builder`;
  #L193218.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L19321e.  call temp:= `request`(v3, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L193224.  v3:= temp @kind object;
  #L193226.  v4:= v6.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19322a.  call temp:= `protocol`(v3, v4) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L193230.  v3:= temp @kind object;
  #L193232.  v4:= v6.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L193236.  call temp:= `code`(v3, v4) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L19323c.  v3:= temp @kind object;
  #L19323e.  v4:= v6.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L193242.  call temp:= `message`(v3, v4) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L193248.  v3:= temp @kind object;
  #L19324a.  v4:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L19324e.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L193254.  v3:= temp @kind object;
  #L193256.  v4:= new `okhttp3.Cache$CacheResponseBody`;
  #L19325a.  call `<init>`(v4, v7, v2, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L193260.  call temp:= `body`(v3, v4) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L193266.  v3:= temp @kind object;
  #L193268.  v4:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19326c.  call temp:= `handshake`(v3, v4) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L193272.  v3:= temp @kind object;
  #L193274.  v4:= v6.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L193278.  call temp:= `sentRequestAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L19327e.  v3:= temp @kind object;
  #L193280.  v4:= v6.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L193284.  call temp:= `receivedResponseAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L19328a.  v3:= temp @kind object;
  #L19328c.  call temp:= `build`(v3) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L193292.  v3:= temp @kind object;
  #L193294.  return v3 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v8 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v9 @kind object @name `editor`) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1932a8.  v7:= 10I;
  #L1932ac.  v3:= 0I;
  #L1932ae.  call temp:= `newSink`(v9, v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L1932b4.  v3:= temp @kind object;
  #L1932b6.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L1932bc.  v1:= temp @kind object;
  #L1932be.  v3:= v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L1932c2.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1932c8.  v3:= temp @kind object;
  #L1932ca.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1932d0.  v3:= v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L1932d4.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1932da.  v3:= temp @kind object;
  #L1932dc.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1932e2.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1932e6.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1932ec.  v3:= temp;
  #L1932ee.  v4:= (`long`) v3 @kind i2l;
  #L1932f0.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1932f6.  v3:= temp @kind object;
  #L1932f8.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1932fe.  v0:= 0I;
  #L193300.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L193304.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19330a.  v2:= temp;
  #L19330c.  if v0 >= v2 then goto L193350;
  #L193310.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L193314.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19331a.  v3:= temp @kind object;
  #L19331c.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L193322.  v3:= temp @kind object;
  #L193324.  v4:= ": " @kind object;
  #L193328.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19332e.  v3:= temp @kind object;
  #L193330.  v4:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L193334.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19333a.  v4:= temp @kind object;
  #L19333c.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L193342.  v3:= temp @kind object;
  #L193344.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19334a.  v0:= v0 + 1;
  #L19334e.  goto L19330c;
  #L193350.  v3:= new `okhttp3.internal.http.StatusLine`;
  #L193354.  v4:= v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L193358.  v5:= v8.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L19335c.  v6:= v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L193360.  call `<init>`(v3, v4, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L193366.  call temp:= `toString`(v3) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L19336c.  v3:= temp @kind object;
  #L19336e.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L193374.  v3:= temp @kind object;
  #L193376.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19337c.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L193380.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L193386.  v3:= temp;
  #L193388.  v3:= v3 + 2;
  #L19338c.  v4:= (`long`) v3 @kind i2l;
  #L19338e.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L193394.  v3:= temp @kind object;
  #L193396.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19339c.  v0:= 0I;
  #L19339e.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1933a2.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1933a8.  v2:= temp;
  #L1933aa.  if v0 >= v2 then goto L1933ee;
  #L1933ae.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1933b2.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1933b8.  v3:= temp @kind object;
  #L1933ba.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1933c0.  v3:= temp @kind object;
  #L1933c2.  v4:= ": " @kind object;
  #L1933c6.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1933cc.  v3:= temp @kind object;
  #L1933ce.  v4:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1933d2.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1933d8.  v4:= temp @kind object;
  #L1933da.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1933e0.  v3:= temp @kind object;
  #L1933e2.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1933e8.  v0:= v0 + 1;
  #L1933ec.  goto L1933aa;
  #L1933ee.  v3:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L1933f2.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1933f8.  v3:= temp @kind object;
  #L1933fa.  v4:= ": " @kind object;
  #L1933fe.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L193404.  v3:= temp @kind object;
  #L193406.  v4:= v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L19340a.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L193410.  v3:= temp @kind object;
  #L193412.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L193418.  v3:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L19341c.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L193422.  v3:= temp @kind object;
  #L193424.  v4:= ": " @kind object;
  #L193428.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19342e.  v3:= temp @kind object;
  #L193430.  v4:= v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L193434.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L19343a.  v3:= temp @kind object;
  #L19343c.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L193442.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L193448.  v3:= temp;
  #L19344a.  if v3 == 0 then goto L1934bc;
  #L19344e.  call temp:= `writeByte`(v1, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L193454.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L193458.  call temp:= `cipherSuite`(v3) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L19345e.  v3:= temp @kind object;
  #L193460.  call temp:= `javaName`(v3) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L193466.  v3:= temp @kind object;
  #L193468.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19346e.  v3:= temp @kind object;
  #L193470.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L193476.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19347a.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L193480.  v3:= temp @kind object;
  #L193482.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L193488.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19348c.  call temp:= `localCertificates`(v3) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L193492.  v3:= temp @kind object;
  #L193494.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L19349a.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19349e.  call temp:= `tlsVersion`(v3) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L1934a4.  v3:= temp @kind object;
  #L1934a6.  call temp:= `javaName`(v3) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L1934ac.  v3:= temp @kind object;
  #L1934ae.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1934b4.  v3:= temp @kind object;
  #L1934b6.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1934bc.  call `close`(v1) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L1934c2.  return @kind void;
}

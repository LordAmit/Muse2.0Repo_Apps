record `okhttp3.Cache` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface, `java.io.Flushable` @kind interface {
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.Cache.cache` @AccessFlag FINAL;
  `int` `okhttp3.Cache.hitCount` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.InternalCache` `okhttp3.Cache.internalCache` @AccessFlag FINAL;
  `int` `okhttp3.Cache.networkCount` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.requestCount` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.writeAbortCount` @AccessFlag ;
  `int` `okhttp3.Cache.writeSuccessCount` @AccessFlag ;
}
global `int` `@@okhttp3.Cache.ENTRY_BODY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.Cache.ENTRY_COUNT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.Cache.ENTRY_METADATA` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.Cache.VERSION` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.Cache` v2 @kind this, `java.io.File` v3 @kind object @name `directory`, `long` v4 @name `maxSize`) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1934d4.  v0:= `@@okhttp3.internal.io.FileSystem.SYSTEM` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1934d8.  call `<init>`(v2, v3, v4, v0) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V` @kind direct;
  #L1934de.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache` v6 @kind this, `java.io.File` v7 @kind object @name `directory`, `long` v8 @name `maxSize`, `okhttp3.internal.io.FileSystem` v10 @kind object @name `fileSystem`) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1934f0.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1934f6.  v0:= new `okhttp3.Cache$1`;
  #L1934fa.  call `<init>`(v0, v6) @signature `Lokhttp3/Cache$1;.<init>:(Lokhttp3/Cache;)V` @kind direct;
  #L193500.  v6.`okhttp3.Cache.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v0 @kind object;
  #L193504.  v2:= 201105I;
  #L19350a.  v3:= 2I;
  #L19350c.  v0:= v10 @kind object;
  #L19350e.  v1:= v7 @kind object;
  #L193510.  v4:= v8 @kind wide;
  #L193512.  call temp:= `create`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/cache/DiskLruCache;.create:(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJ)Lokhttp3/internal/cache/DiskLruCache;` @kind static;
  #L193518.  v0:= temp @kind object;
  #L19351a.  v6.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` := v0 @kind object;
  #L19351e.  return @kind void;
}
procedure `void` `abortQuietly`(`okhttp3.Cache` v1 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v2 @kind object @name `editor`) @signature `Lokhttp3/Cache;.abortQuietly:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L193530.  if v2 == 0 then goto L19353a;
  #Try_start0.  
  #L193534.  call `abort`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @kind virtual;
  #Try_end0.  
  #L19353a.  return @kind void;
  #L19353c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L19353e.  goto L19353a;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L19353c;
}
procedure `java.lang.String` `key`(`okhttp3.HttpUrl` v1 @kind object @name `url`) @signature `Lokhttp3/Cache;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L193560.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L193566.  v0:= temp @kind object;
  #L193568.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19356e.  v0:= temp @kind object;
  #L193570.  call temp:= `md5`(v0) @signature `Lokio/ByteString;.md5:()Lokio/ByteString;` @kind virtual;
  #L193576.  v0:= temp @kind object;
  #L193578.  call temp:= `hex`(v0) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L19357e.  v0:= temp @kind object;
  #L193580.  return v0 @kind object;
}
procedure `int` `readInt`(`okio.BufferedSource` v7 @kind object @name `source`) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L193594.  call temp:= `readDecimalLong`(v7) @signature `Lokio/BufferedSource;.readDecimalLong:()J` @kind interface;
  #L19359a.  v2:= temp @kind wide;
  #L19359c.  call temp:= `readUtf8LineStrict`(v7) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1935a2.  v1:= temp @kind object;
  #L1935a4.  v4:= 0L;
  #L1935a8.  v4:= lcmp(v2, v4);
  #L1935ac.  if v4 < 0 then goto L1935ca;
  #L1935b0.  v4:= 2147483647L;
  #L1935b6.  v4:= lcmp(v2, v4);
  #L1935ba.  if v4 > 0 then goto L1935ca;
  #L1935be.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1935c4.  v4:= temp;
  #L1935c6.  if v4 != 0 then goto L193626;
  #L1935ca.  v4:= new `java.io.IOException`;
  #L1935ce.  v5:= new `java.lang.StringBuilder`;
  #L1935d2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1935d8.  v6:= "expected an int but was \"" @kind object;
  #L1935dc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1935e2.  v5:= temp @kind object;
  #L1935e4.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1935ea.  v5:= temp @kind object;
  #L1935ec.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1935f2.  v5:= temp @kind object;
  #L1935f4.  v6:= "\"" @kind object;
  #L1935f8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1935fe.  v5:= temp @kind object;
  #L193600.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L193606.  v5:= temp @kind object;
  #L193608.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19360e.  throw v4;
  #Try_end0.  
  #L193610.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L193612.  v4:= new `java.io.IOException`;
  #L193616.  call temp:= `getMessage`(v0) @signature `Ljava/lang/NumberFormatException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19361c.  v5:= temp @kind object;
  #L19361e.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193624.  throw v4;
  #L193626.  v4:= (`int`) v2 @kind l2i;
  #L193628.  return v4;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L193610;
}
procedure `void` `close`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19364c.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L193650.  call `close`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.close:()V` @kind virtual;
  #L193656.  return @kind void;
}
procedure `void` `delete`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.delete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193668.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19366c.  call `delete`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.delete:()V` @kind virtual;
  #L193672.  return @kind void;
}
procedure `java.io.File` `directory`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.directory:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193684.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L193688.  call temp:= `getDirectory`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.getDirectory:()Ljava/io/File;` @kind virtual;
  #L19368e.  v0:= temp @kind object;
  #L193690.  return v0 @kind object;
}
procedure `void` `evictAll`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.evictAll:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1936a4.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1936a8.  call `evictAll`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.evictAll:()V` @kind virtual;
  #L1936ae.  return @kind void;
}
procedure `void` `flush`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1936c0.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1936c4.  call `flush`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.flush:()V` @kind virtual;
  #L1936ca.  return @kind void;
}
procedure `okhttp3.Response` `get`(`okhttp3.Cache` v7 @kind this, `okhttp3.Request` v8 @kind object @name `request`) @signature `Lokhttp3/Cache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1936dc.  v5:= 0I;
  #L1936de.  call temp:= `url`(v8) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1936e4.  v6:= temp @kind object;
  #L1936e6.  call temp:= `key`(v6) @signature `Lokhttp3/Cache;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind static;
  #L1936ec.  v2:= temp @kind object;
  #Try_start0.  
  #L1936ee.  v6:= v7.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1936f2.  call temp:= `get`(v6, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.get:(Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #Try_end0.  
  #L1936f8.  v4:= temp @kind object;
  #L1936fa.  if v4 != 0 then goto L193708;
  #L1936fe.  v3:= v5 @kind object;
  #L193700.  return v3 @kind object;
  #L193702.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L193704.  v3:= v5 @kind object;
  #L193706.  goto L193700;
  #Try_start1.  
  #L193708.  v1:= new `okhttp3.Cache$Entry`;
  #L19370c.  v6:= 0I;
  #L19370e.  call temp:= `getSource`(v4, v6) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L193714.  v6:= temp @kind object;
  #L193716.  call `<init>`(v1, v6) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @kind direct;
  #Try_end1.  
  #L19371c.  call temp:= `response`(v1, v4) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @kind virtual;
  #L193722.  v3:= temp @kind object;
  #L193724.  call temp:= `matches`(v1, v8, v3) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @kind virtual;
  #L19372a.  v6:= temp;
  #L19372c.  if v6 != 0 then goto L193700;
  #L193730.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L193736.  v6:= temp @kind object;
  #L193738.  call `closeQuietly`(v6) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19373e.  v3:= v5 @kind object;
  #L193740.  goto L193700;
  #L193742.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L193744.  call `closeQuietly`(v4) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19374a.  v3:= v5 @kind object;
  #L19374c.  goto L193700;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L193702;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L193742;
}
procedure `int` `hitCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.hitCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19377c.  @monitorenter v1
  #Try_start0.  
  #L19377e.  v0:= v1.`okhttp3.Cache.hitCount` @type ^`int`;
  #Try_end0.  
  #L193782.  @monitorexit v1
  #L193784.  return v0;
  #L193786.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L193788.  @monitorexit v1
  #L19378a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L193786;
}
procedure `void` `initialize`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.initialize:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1937a8.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1937ac.  call `initialize`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.initialize:()V` @kind virtual;
  #L1937b2.  return @kind void;
}
procedure `boolean` `isClosed`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1937c4.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1937c8.  call temp:= `isClosed`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.isClosed:()Z` @kind virtual;
  #L1937ce.  v0:= temp;
  #L1937d0.  return v0;
}
procedure `long` `maxSize`(`okhttp3.Cache` v2 @kind this) @signature `Lokhttp3/Cache;.maxSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1937e4.  v0:= v2.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1937e8.  call temp:= `getMaxSize`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.getMaxSize:()J` @kind virtual;
  #L1937ee.  v0:= temp @kind wide;
  #L1937f0.  return v0 @kind wide;
}
procedure `int` `networkCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.networkCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193804.  @monitorenter v1
  #Try_start0.  
  #L193806.  v0:= v1.`okhttp3.Cache.networkCount` @type ^`int`;
  #Try_end0.  
  #L19380a.  @monitorexit v1
  #L19380c.  return v0;
  #L19380e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L193810.  @monitorexit v1
  #L193812.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19380e;
}
procedure `okhttp3.internal.cache.CacheRequest` `put`(`okhttp3.Cache` v7 @kind this, `okhttp3.Response` v8 @kind object @name `response`) @signature `Lokhttp3/Cache;.put:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L193830.  v4:= 0I;
  #L193832.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L193838.  v5:= temp @kind object;
  #L19383a.  call temp:= `method`(v5) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L193840.  v3:= temp @kind object;
  #L193842.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L193848.  v5:= temp @kind object;
  #L19384a.  call temp:= `method`(v5) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L193850.  v5:= temp @kind object;
  #L193852.  call temp:= `invalidatesCache`(v5) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind static;
  #L193858.  v5:= temp;
  #L19385a.  if v5 == 0 then goto L19386e;
  #Try_start0.  
  #L19385e.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L193864.  v5:= temp @kind object;
  #L193866.  call `remove`(v7, v5) @signature `Lokhttp3/Cache;.remove:(Lokhttp3/Request;)V` @kind virtual;
  #Try_end0.  
  #L19386c.  return v4 @kind object;
  #L19386e.  v5:= "GET" @kind object;
  #L193872.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L193878.  v5:= temp;
  #L19387a.  if v5 == 0 then goto L19386c;
  #L19387e.  call temp:= `hasVaryAll`(v8) @signature `Lokhttp3/internal/http/HttpHeaders;.hasVaryAll:(Lokhttp3/Response;)Z` @kind static;
  #L193884.  v5:= temp;
  #L193886.  if v5 != 0 then goto L19386c;
  #L19388a.  v2:= new `okhttp3.Cache$Entry`;
  #L19388e.  call `<init>`(v2, v8) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L193894.  v1:= 0I;
  #Try_start1.  
  #L193896.  v5:= v7.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19389a.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1938a0.  v6:= temp @kind object;
  #L1938a2.  call temp:= `url`(v6) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1938a8.  v6:= temp @kind object;
  #L1938aa.  call temp:= `key`(v6) @signature `Lokhttp3/Cache;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind static;
  #L1938b0.  v6:= temp @kind object;
  #L1938b2.  call temp:= `edit`(v5, v6) @signature `Lokhttp3/internal/cache/DiskLruCache;.edit:(Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L1938b8.  v1:= temp @kind object;
  #L1938ba.  if v1 == 0 then goto L19386c;
  #L1938be.  call `writeTo`(v2, v1) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind virtual;
  #L1938c4.  v5:= new `okhttp3.Cache$CacheRequestImpl`;
  #L1938c8.  call `<init>`(v5, v7, v1) @signature `Lokhttp3/Cache$CacheRequestImpl;.<init>:(Lokhttp3/Cache;Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #Try_end1.  
  #L1938ce.  v4:= v5 @kind object;
  #L1938d0.  goto L19386c;
  #L1938d2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1938d4.  call `abortQuietly`(v7, v1) @signature `Lokhttp3/Cache;.abortQuietly:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #L1938da.  goto L19386c;
  #L1938dc.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L1938de.  goto L19386c;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1938dc;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L1938d2;
}
procedure `void` `remove`(`okhttp3.Cache` v2 @kind this, `okhttp3.Request` v3 @kind object @name `request`) @signature `Lokhttp3/Cache;.remove:(Lokhttp3/Request;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L19390c.  v0:= v2.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L193910.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193916.  v1:= temp @kind object;
  #L193918.  call temp:= `key`(v1) @signature `Lokhttp3/Cache;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind static;
  #L19391e.  v1:= temp @kind object;
  #L193920.  call temp:= `remove`(v0, v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L193926.  return @kind void;
}
procedure `int` `requestCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.requestCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193938.  @monitorenter v1
  #Try_start0.  
  #L19393a.  v0:= v1.`okhttp3.Cache.requestCount` @type ^`int`;
  #Try_end0.  
  #L19393e.  @monitorexit v1
  #L193940.  return v0;
  #L193942.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L193944.  @monitorexit v1
  #L193946.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L193942;
}
procedure `long` `size`(`okhttp3.Cache` v2 @kind this) @signature `Lokhttp3/Cache;.size:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L193964.  v0:= v2.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L193968.  call temp:= `size`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.size:()J` @kind virtual;
  #L19396e.  v0:= temp @kind wide;
  #L193970.  return v0 @kind wide;
}
procedure `void` `trackConditionalCacheHit`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.trackConditionalCacheHit:()V` @AccessFlag  {
    temp;
    v0;

  #L193984.  @monitorenter v1
  #Try_start0.  
  #L193986.  v0:= v1.`okhttp3.Cache.hitCount` @type ^`int`;
  #L19398a.  v0:= v0 + 1;
  #L19398e.  v1.`okhttp3.Cache.hitCount` @type ^`int` := v0;
  #Try_end0.  
  #L193992.  @monitorexit v1
  #L193994.  return @kind void;
  #L193996.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L193998.  @monitorexit v1
  #L19399a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L193996;
}
procedure `void` `trackResponse`(`okhttp3.Cache` v1 @kind this, `okhttp3.internal.cache.CacheStrategy` v2 @kind object @name `cacheStrategy`) @signature `Lokhttp3/Cache;.trackResponse:(Lokhttp3/internal/cache/CacheStrategy;)V` @AccessFlag  {
    temp;
    v0;

  #L1939b8.  @monitorenter v1
  #Try_start0.  
  #L1939ba.  v0:= v1.`okhttp3.Cache.requestCount` @type ^`int`;
  #L1939be.  v0:= v0 + 1;
  #L1939c2.  v1.`okhttp3.Cache.requestCount` @type ^`int` := v0;
  #L1939c6.  v0:= v2.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L1939ca.  if v0 == 0 then goto L1939de;
  #L1939ce.  v0:= v1.`okhttp3.Cache.networkCount` @type ^`int`;
  #L1939d2.  v0:= v0 + 1;
  #L1939d6.  v1.`okhttp3.Cache.networkCount` @type ^`int` := v0;
  #Try_end0.  
  #L1939da.  @monitorexit v1
  #L1939dc.  return @kind void;
  #Try_start1.  
  #L1939de.  v0:= v2.`okhttp3.internal.cache.CacheStrategy.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1939e2.  if v0 == 0 then goto L1939da;
  #L1939e6.  v0:= v1.`okhttp3.Cache.hitCount` @type ^`int`;
  #L1939ea.  v0:= v0 + 1;
  #L1939ee.  v1.`okhttp3.Cache.hitCount` @type ^`int` := v0;
  #Try_end1.  
  #L1939f2.  goto L1939da;
  #L1939f4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1939f6.  @monitorexit v1
  #L1939f8.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1939f4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1939f4;
}
procedure `void` `update`(`okhttp3.Cache` v5 @kind this, `okhttp3.Response` v6 @kind object @name `cached`, `okhttp3.Response` v7 @kind object @name `network`) @signature `Lokhttp3/Cache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L193a20.  v2:= new `okhttp3.Cache$Entry`;
  #L193a24.  call `<init>`(v2, v7) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L193a2a.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L193a30.  v4:= temp @kind object;
  #L193a32.  v4:= (`okhttp3.Cache$CacheResponseBody`) v4 @kind object;
  #L193a36.  v3:= v4.`okhttp3.Cache$CacheResponseBody.snapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L193a3a.  v1:= 0I;
  #Try_start0.  
  #L193a3c.  call temp:= `edit`(v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.edit:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L193a42.  v1:= temp @kind object;
  #L193a44.  if v1 == 0 then goto L193a54;
  #L193a48.  call `writeTo`(v2, v1) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind virtual;
  #L193a4e.  call `commit`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #Try_end0.  
  #L193a54.  return @kind void;
  #L193a56.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L193a58.  call `abortQuietly`(v5, v1) @signature `Lokhttp3/Cache;.abortQuietly:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #L193a5e.  goto L193a54;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L193a56;
}
procedure `java.util.Iterator` `urls`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.urls:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193a80.  v0:= new `okhttp3.Cache$2`;
  #L193a84.  call `<init>`(v0, v1) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @kind direct;
  #L193a8a.  return v0 @kind object;
}
procedure `int` `writeAbortCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.writeAbortCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193a9c.  @monitorenter v1
  #Try_start0.  
  #L193a9e.  v0:= v1.`okhttp3.Cache.writeAbortCount` @type ^`int`;
  #Try_end0.  
  #L193aa2.  @monitorexit v1
  #L193aa4.  return v0;
  #L193aa6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L193aa8.  @monitorexit v1
  #L193aaa.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L193aa6;
}
procedure `int` `writeSuccessCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.writeSuccessCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193ac8.  @monitorenter v1
  #Try_start0.  
  #L193aca.  v0:= v1.`okhttp3.Cache.writeSuccessCount` @type ^`int`;
  #Try_end0.  
  #L193ace.  @monitorexit v1
  #L193ad0.  return v0;
  #L193ad2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L193ad4.  @monitorexit v1
  #L193ad6.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L193ad2;
}

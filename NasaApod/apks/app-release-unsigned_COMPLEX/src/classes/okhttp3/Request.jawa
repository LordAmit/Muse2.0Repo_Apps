record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.Request.body` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Request.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Headers` `okhttp3.Request.headers` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Request.method` @AccessFlag FINAL;
  `java.lang.Object` `okhttp3.Request.tag` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Request.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.Request$Builder` v2 @kind object @name `builder`) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L19c9fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19ca02.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19ca06.  v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L19ca0a.  v0:= v2.`okhttp3.Request$Builder.method` @type ^`java.lang.String` @kind object;
  #L19ca0e.  v1.`okhttp3.Request.method` @type ^`java.lang.String` := v0 @kind object;
  #L19ca12.  v0:= v2.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19ca16.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19ca1c.  v0:= temp @kind object;
  #L19ca1e.  v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19ca22.  v0:= v2.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19ca26.  v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19ca2a.  v0:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L19ca2e.  if v0 == 0 then goto L19ca3c;
  #L19ca32.  v0:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L19ca36.  v1.`okhttp3.Request.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L19ca3a.  return @kind void;
  #L19ca3c.  v0:= v1 @kind object;
  #L19ca3e.  goto L19ca36;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ca50.  v0:= v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19ca54.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ca68.  v0:= v2.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L19ca6c.  if v0 == 0 then goto L19ca72;
  #L19ca70.  return v0 @kind object;
  #L19ca72.  v1:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19ca76.  call temp:= `parse`(v1) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L19ca7c.  v0:= temp @kind object;
  #L19ca7e.  v2.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L19ca82.  goto L19ca70;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ca94.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19ca98.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19ca9e.  v0:= temp @kind object;
  #L19caa0.  return v0 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cab4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19cab8.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L19cabe.  v0:= temp @kind object;
  #L19cac0.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cad4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19cad8.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19caec.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19caf0.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L19caf6.  v0:= temp;
  #L19caf8.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cb0c.  v0:= v1.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19cb10.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cb24.  v0:= new `okhttp3.Request$Builder`;
  #L19cb28.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L19cb2e.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cb40.  v0:= v1.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19cb44.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19cb58.  v0:= new `java.lang.StringBuilder`;
  #L19cb5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19cb62.  v1:= "Request{method=" @kind object;
  #L19cb66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cb6c.  v0:= temp @kind object;
  #L19cb6e.  v1:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19cb72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cb78.  v0:= temp @kind object;
  #L19cb7a.  v1:= ", url=" @kind object;
  #L19cb7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cb84.  v0:= temp @kind object;
  #L19cb86.  v1:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19cb8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cb90.  v0:= temp @kind object;
  #L19cb92.  v1:= ", tag=" @kind object;
  #L19cb96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cb9c.  v1:= temp @kind object;
  #L19cb9e.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19cba2.  if v0 == v2 then goto L19cbc8;
  #L19cba6.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19cbaa.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cbb0.  v0:= temp @kind object;
  #L19cbb2.  v1:= 125I;
  #L19cbb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cbbc.  v0:= temp @kind object;
  #L19cbbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19cbc4.  v0:= temp @kind object;
  #L19cbc6.  return v0 @kind object;
  #L19cbc8.  v0:= 0I;
  #L19cbca.  goto L19cbaa;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cbdc.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19cbe0.  return v0 @kind object;
}

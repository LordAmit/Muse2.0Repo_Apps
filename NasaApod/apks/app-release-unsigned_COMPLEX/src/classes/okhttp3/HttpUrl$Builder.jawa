record `okhttp3.HttpUrl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedFragment` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedPassword` @AccessFlag ;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedPathSegments` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedUsername` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.host` @AccessFlag ;
  `int` `okhttp3.HttpUrl$Builder.port` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.scheme` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L199154.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19915a.  v0:= "" @kind object;
  #L19915e.  v2.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L199162.  v0:= "" @kind object;
  #L199166.  v2.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L19916a.  v0:= -1I;
  #L19916c.  v2.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v0;
  #L199170.  v0:= new `java.util.ArrayList`;
  #L199174.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19917a.  v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` := v0 @kind object;
  #L19917e.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199182.  v1:= "" @kind object;
  #L199186.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19918c.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `pathSegments`, `boolean` v8 @name `alreadyEncoded`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1991a0.  v2:= 0I;
  #L1991a2.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1991a8.  v0:= temp;
  #L1991aa.  v1:= "/\\" @kind object;
  #L1991ae.  call temp:= `delimiterOffset`(v7, v2, v0, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L1991b4.  v3:= temp;
  #L1991b6.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1991bc.  v0:= temp;
  #L1991be.  if v3 >= v0 then goto L1991e2;
  #L1991c2.  v4:= 1I;
  #L1991c4.  v0:= v6 @kind object;
  #L1991c6.  v1:= v7 @kind object;
  #L1991c8.  v5:= v8;
  #L1991ca.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L1991d0.  v2:= v3 + 1;
  #L1991d4.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1991da.  v0:= temp;
  #L1991dc.  if v2 <= v0 then goto L1991a2;
  #L1991e0.  return v6 @kind object;
  #L1991e2.  v4:= 0I;
  #L1991e4.  goto L1991c4;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1991f8.  v1:= 0I;
  #L1991fa.  call temp:= `percentDecode`(v2, v3, v4, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L199200.  v0:= temp @kind object;
  #L199202.  call temp:= `canonicalizeHost`(v0) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L199208.  v1:= temp @kind object;
  #L19920a.  return v1 @kind object;
}
procedure `boolean` `isDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19921c.  v0:= "." @kind object;
  #L199220.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L199226.  v0:= temp;
  #L199228.  if v0 != 0 then goto L19923c;
  #L19922c.  v0:= "%2e" @kind object;
  #L199230.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L199236.  v0:= temp;
  #L199238.  if v0 == 0 then goto L199240;
  #L19923c.  v0:= 1I;
  #L19923e.  return v0;
  #L199240.  v0:= 0I;
  #L199242.  goto L19923e;
}
procedure `boolean` `isDotDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L199254.  v0:= ".." @kind object;
  #L199258.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19925e.  v0:= temp;
  #L199260.  if v0 != 0 then goto L199294;
  #L199264.  v0:= "%2e." @kind object;
  #L199268.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19926e.  v0:= temp;
  #L199270.  if v0 != 0 then goto L199294;
  #L199274.  v0:= ".%2e" @kind object;
  #L199278.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19927e.  v0:= temp;
  #L199280.  if v0 != 0 then goto L199294;
  #L199284.  v0:= "%2e%2e" @kind object;
  #L199288.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19928e.  v0:= temp;
  #L199290.  if v0 == 0 then goto L199298;
  #L199294.  v0:= 1I;
  #L199296.  return v0;
  #L199298.  v0:= 0I;
  #L19929a.  goto L199296;
}
procedure `int` `parsePort`(`java.lang.String` v13 @kind object @name `input`, `int` v14 @name `pos`, `int` v15 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1992ac.  v12:= -1I;
  #Try_start0.  
  #L1992ae.  v3:= "" @kind object;
  #L1992b2.  v4:= 0I;
  #L1992b4.  v5:= 0I;
  #L1992b6.  v6:= 0I;
  #L1992b8.  v7:= 1I;
  #L1992ba.  v8:= 0I;
  #L1992bc.  v0:= v13 @kind object;
  #L1992be.  v1:= v14;
  #L1992c0.  v2:= v15;
  #L1992c2.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1992c8.  v11:= temp @kind object;
  #L1992ca.  call temp:= `parseInt`(v11) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L1992d0.  v10:= temp;
  #L1992d2.  if v10 <= 0 then goto L1992e2;
  #L1992d6.  v0:= 65535I;
  #L1992dc.  if v10 > v0 then goto L1992e2;
  #L1992e0.  return v10;
  #L1992e2.  v10:= v12;
  #L1992e4.  goto L1992e0;
  #L1992e6.  v9:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L1992e8.  v10:= v12;
  #L1992ea.  goto L1992e0;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L1992e6;
}
procedure `void` `pop`(`okhttp3.HttpUrl$Builder` v4 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19930c.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199310.  v2:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199314.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19931a.  v2:= temp;
  #L19931c.  v2:= v2 + -1;
  #L199320.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L199326.  v0:= temp @kind object;
  #L199328.  v0:= (`java.lang.String`) v0 @kind object;
  #L19932c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L199332.  v1:= temp;
  #L199334.  if v1 == 0 then goto L199368;
  #L199338.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19933c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L199342.  v1:= temp;
  #L199344.  if v1 != 0 then goto L199368;
  #L199348.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19934c.  v2:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199350.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L199356.  v2:= temp;
  #L199358.  v2:= v2 + -1;
  #L19935c.  v3:= "" @kind object;
  #L199360.  call temp:= `set`(v1, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199366.  return @kind void;
  #L199368.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19936c.  v2:= "" @kind object;
  #L199370.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L199376.  goto L199366;
}
procedure `int` `portColonOffset`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L199388.  v0:= v4;
  #L19938a.  if v0 >= v5 then goto L1993bc;
  #L19938e.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199394.  v1:= temp;
  #L199396.  goto L1993c0;
  #L19939c.  v0:= v0 + 1;
  #L1993a0.  goto L19938a;
  #L1993a2.  v0:= v0 + 1;
  #L1993a6.  if v0 >= v5 then goto L19939c;
  #L1993aa.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1993b0.  v1:= temp;
  #L1993b2.  v2:= 93I;
  #L1993b6.  if v1 != v2 then goto L1993a2;
  #L1993ba.  goto L19939c;
  #L1993bc.  v0:= v5;
  #L1993be.  return v0;
  #L1993c0.  switch v1
                  | 58 => goto L1993be
                  | 91 => goto L1993a2
                  | else => goto L19939c;
}
procedure `void` `push`(`okhttp3.HttpUrl$Builder` v10 @kind this, `java.lang.String` v11 @kind object @name `input`, `int` v12 @name `pos`, `int` v13 @name `limit`, `boolean` v14 @name `addTrailingSlash`, `boolean` v15 @name `alreadyEncoded`) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1993e4.  v5:= 0I;
  #L1993e6.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L1993ea.  v7:= 1I;
  #L1993ec.  v8:= 0I;
  #L1993ee.  v0:= v11 @kind object;
  #L1993f0.  v1:= v12;
  #L1993f2.  v2:= v13;
  #L1993f4.  v4:= v15;
  #L1993f6.  v6:= v5;
  #L1993f8.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1993fe.  v9:= temp @kind object;
  #L199400.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L199406.  v0:= temp;
  #L199408.  if v0 == 0 then goto L19940e;
  #L19940c.  return @kind void;
  #L19940e.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L199414.  v0:= temp;
  #L199416.  if v0 == 0 then goto L199422;
  #L19941a.  call `pop`(v10) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @kind direct;
  #L199420.  goto L19940c;
  #L199422.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199426.  v1:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19942a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L199430.  v1:= temp;
  #L199432.  v1:= v1 + -1;
  #L199436.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19943c.  v0:= temp @kind object;
  #L19943e.  v0:= (`java.lang.String`) v0 @kind object;
  #L199442.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L199448.  v0:= temp;
  #L19944a.  if v0 == 0 then goto L19947c;
  #L19944e.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199452.  v1:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199456.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19945c.  v1:= temp;
  #L19945e.  v1:= v1 + -1;
  #L199462.  call temp:= `set`(v0, v1, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199468.  if v14 == 0 then goto L19940c;
  #L19946c.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199470.  v1:= "" @kind object;
  #L199474.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19947a.  goto L19940c;
  #L19947c.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199480.  call temp:= `add`(v0, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L199486.  goto L199468;
}
procedure `void` `removeAllCanonicalQueryParameters`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `canonicalName`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L199498.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19949c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1994a2.  v1:= temp;
  #L1994a4.  v0:= v1 + -2;
  #L1994a8.  if v0 < 0 then goto L1994f2;
  #L1994ac.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L1994b0.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1994b6.  v1:= temp @kind object;
  #L1994b8.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1994be.  v1:= temp;
  #L1994c0.  if v1 == 0 then goto L1994f4;
  #L1994c4.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L1994c8.  v2:= v0 + 1;
  #L1994cc.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L1994d2.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L1994d6.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L1994dc.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L1994e0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1994e6.  v1:= temp;
  #L1994e8.  if v1 == 0 then goto L1994f4;
  #L1994ec.  v1:= 0I;
  #L1994ee.  v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v1 @kind object;
  #L1994f2.  return @kind void;
  #L1994f4.  v0:= v0 + -2;
  #L1994f8.  goto L1994a8;
}
procedure `void` `resolvePath`(`okhttp3.HttpUrl$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `input`, `int` v10 @name `pos`, `int` v11 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19950c.  v5:= 1I;
  #L19950e.  if v10 != v11 then goto L199514;
  #L199512.  return @kind void;
  #L199514.  call temp:= `charAt`(v9, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19951a.  v6:= temp;
  #L19951c.  v0:= 47I;
  #L199520.  if v6 == v0 then goto L19952c;
  #L199524.  v0:= 92I;
  #L199528.  if v6 != v0 then goto L199576;
  #L19952c.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199530.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L199536.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19953a.  v1:= "" @kind object;
  #L19953e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L199544.  v10:= v10 + 1;
  #L199548.  v2:= v10;
  #L19954a.  if v2 >= v11 then goto L199512;
  #L19954e.  v0:= "/\\" @kind object;
  #L199552.  call temp:= `delimiterOffset`(v9, v2, v11, v0) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L199558.  v3:= temp;
  #L19955a.  if v3 >= v11 then goto L199596;
  #L19955e.  v4:= v5;
  #L199560.  v0:= v8 @kind object;
  #L199562.  v1:= v9 @kind object;
  #L199564.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19956a.  v2:= v3;
  #L19956c.  if v4 == 0 then goto L19954a;
  #L199570.  v2:= v2 + 1;
  #L199574.  goto L19954a;
  #L199576.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19957a.  v1:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19957e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L199584.  v1:= temp;
  #L199586.  v1:= v1 + -1;
  #L19958a.  v7:= "" @kind object;
  #L19958e.  call temp:= `set`(v0, v1, v7) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199594.  goto L199548;
  #L199596.  v4:= 0I;
  #L199598.  goto L199560;
}
procedure `int` `schemeDelimiterOffset`(`java.lang.String` v10 @kind object @name `input`, `int` v11 @name `pos`, `int` v12 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1995ac.  v9:= 122I;
  #L1995b0.  v8:= 97I;
  #L1995b4.  v7:= 90I;
  #L1995b8.  v6:= 65I;
  #L1995bc.  v3:= -1I;
  #L1995be.  v4:= v12 - v11 @kind int;
  #L1995c2.  v5:= 2I;
  #L1995c4.  if v4 >= v5 then goto L1995cc;
  #L1995c8.  v2:= v3;
  #L1995ca.  return v2;
  #L1995cc.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1995d2.  v1:= temp;
  #L1995d4.  if v1 < v8 then goto L1995dc;
  #L1995d8.  if v1 <= v9 then goto L1995e8;
  #L1995dc.  if v1 < v6 then goto L1995e4;
  #L1995e0.  if v1 <= v7 then goto L1995e8;
  #L1995e4.  v2:= v3;
  #L1995e6.  goto L1995ca;
  #L1995e8.  v2:= v11 + 1;
  #L1995ec.  if v2 >= v12 then goto L199642;
  #L1995f0.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1995f6.  v0:= temp;
  #L1995f8.  if v0 < v8 then goto L199600;
  #L1995fc.  if v0 <= v9 then goto L199630;
  #L199600.  if v0 < v6 then goto L199608;
  #L199604.  if v0 <= v7 then goto L199630;
  #L199608.  v4:= 48I;
  #L19960c.  if v0 < v4 then goto L199618;
  #L199610.  v4:= 57I;
  #L199614.  if v0 <= v4 then goto L199630;
  #L199618.  v4:= 43I;
  #L19961c.  if v0 == v4 then goto L199630;
  #L199620.  v4:= 45I;
  #L199624.  if v0 == v4 then goto L199630;
  #L199628.  v4:= 46I;
  #L19962c.  if v0 != v4 then goto L199636;
  #L199630.  v2:= v2 + 1;
  #L199634.  goto L1995ec;
  #L199636.  v4:= 58I;
  #L19963a.  if v0 == v4 then goto L1995ca;
  #L19963e.  v2:= v3;
  #L199640.  goto L1995ca;
  #L199642.  v2:= v3;
  #L199644.  goto L1995ca;
}
procedure `int` `slashCount`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L199658.  v1:= 0I;
  #L19965a.  if v4 >= v5 then goto L199680;
  #L19965e.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199664.  v0:= temp;
  #L199666.  v2:= 92I;
  #L19966a.  if v0 == v2 then goto L199676;
  #L19966e.  v2:= 47I;
  #L199672.  if v0 != v2 then goto L199680;
  #L199676.  v1:= v1 + 1;
  #L19967a.  v4:= v4 + 1;
  #L19967e.  goto L19965a;
  #L199680.  return v1;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedPathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199694.  v2:= 0I;
  #L199696.  if v7 != 0 then goto L1996aa;
  #L19969a.  v0:= new `java.lang.NullPointerException`;
  #L19969e.  v1:= "encodedPathSegment == null" @kind object;
  #L1996a2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1996a8.  throw v0;
  #L1996aa.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1996b0.  v3:= temp;
  #L1996b2.  v5:= 1I;
  #L1996b4.  v0:= v6 @kind object;
  #L1996b6.  v1:= v7 @kind object;
  #L1996b8.  v4:= v2;
  #L1996ba.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L1996c0.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegments`(`okhttp3.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `encodedPathSegments`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1996d4.  if v3 != 0 then goto L1996e8;
  #L1996d8.  v0:= new `java.lang.NullPointerException`;
  #L1996dc.  v1:= "encodedPathSegments == null" @kind object;
  #L1996e0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1996e6.  throw v0;
  #L1996e8.  v0:= 1I;
  #L1996ea.  call temp:= `addPathSegments`(v2, v3, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L1996f0.  v0:= temp @kind object;
  #L1996f2.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `encodedName`, `java.lang.String` v9 @kind object @name `encodedValue`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L199704.  v3:= 0I;
  #L199706.  v2:= 1I;
  #L199708.  if v8 != 0 then goto L19971c;
  #L19970c.  v0:= new `java.lang.NullPointerException`;
  #L199710.  v1:= "encodedName == null" @kind object;
  #L199714.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19971a.  throw v0;
  #L19971c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199720.  if v0 != 0 then goto L199732;
  #L199724.  v0:= new `java.util.ArrayList`;
  #L199728.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19972e.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L199732.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199736.  v1:= " \"'<>#&=" @kind object;
  #L19973a.  v0:= v8 @kind object;
  #L19973c.  v4:= v2;
  #L19973e.  v5:= v2;
  #L199740.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199746.  v0:= temp @kind object;
  #L199748.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19974e.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199752.  if v9 == 0 then goto L199770;
  #L199756.  v1:= " \"'<>#&=" @kind object;
  #L19975a.  v0:= v9 @kind object;
  #L19975c.  v4:= v2;
  #L19975e.  v5:= v2;
  #L199760.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199766.  v0:= temp @kind object;
  #L199768.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19976e.  return v7 @kind object;
  #L199770.  v0:= 0I;
  #L199772.  goto L199768;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `pathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199784.  v2:= 0I;
  #L199786.  if v7 != 0 then goto L19979a;
  #L19978a.  v0:= new `java.lang.NullPointerException`;
  #L19978e.  v1:= "pathSegment == null" @kind object;
  #L199792.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199798.  throw v0;
  #L19979a.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1997a0.  v3:= temp;
  #L1997a2.  v0:= v6 @kind object;
  #L1997a4.  v1:= v7 @kind object;
  #L1997a6.  v4:= v2;
  #L1997a8.  v5:= v2;
  #L1997aa.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L1997b0.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `pathSegments`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1997c4.  if v3 != 0 then goto L1997d8;
  #L1997c8.  v0:= new `java.lang.NullPointerException`;
  #L1997cc.  v1:= "pathSegments == null" @kind object;
  #L1997d0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1997d6.  throw v0;
  #L1997d8.  v0:= 0I;
  #L1997da.  call temp:= `addPathSegments`(v2, v3, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L1997e0.  v0:= temp @kind object;
  #L1997e2.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `name`, `java.lang.String` v9 @kind object @name `value`) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1997f4.  v4:= 1I;
  #L1997f6.  v2:= 0I;
  #L1997f8.  if v8 != 0 then goto L19980c;
  #L1997fc.  v0:= new `java.lang.NullPointerException`;
  #L199800.  v1:= "name == null" @kind object;
  #L199804.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19980a.  throw v0;
  #L19980c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199810.  if v0 != 0 then goto L199822;
  #L199814.  v0:= new `java.util.ArrayList`;
  #L199818.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19981e.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L199822.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199826.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19982a.  v0:= v8 @kind object;
  #L19982c.  v3:= v2;
  #L19982e.  v5:= v4;
  #L199830.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199836.  v0:= temp @kind object;
  #L199838.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19983e.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L199842.  if v9 == 0 then goto L199860;
  #L199846.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19984a.  v0:= v9 @kind object;
  #L19984c.  v3:= v2;
  #L19984e.  v5:= v4;
  #L199850.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199856.  v0:= temp @kind object;
  #L199858.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19985e.  return v7 @kind object;
  #L199860.  v0:= 0I;
  #L199862.  goto L199858;
}
procedure `okhttp3.HttpUrl` `build`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L199874.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L199878.  if v0 != 0 then goto L19988c;
  #L19987c.  v0:= new `java.lang.IllegalStateException`;
  #L199880.  v1:= "scheme == null" @kind object;
  #L199884.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19988a.  throw v0;
  #L19988c.  v0:= v2.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L199890.  if v0 != 0 then goto L1998a4;
  #L199894.  v0:= new `java.lang.IllegalStateException`;
  #L199898.  v1:= "host == null" @kind object;
  #L19989c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1998a2.  throw v0;
  #L1998a4.  v0:= new `okhttp3.HttpUrl`;
  #L1998a8.  call `<init>`(v0, v2) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @kind direct;
  #L1998ae.  return v0 @kind object;
}
procedure `int` `effectivePort`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1998c0.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L1998c4.  v1:= -1I;
  #L1998c6.  if v0 == v1 then goto L1998d0;
  #L1998ca.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L1998ce.  return v0;
  #L1998d0.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L1998d4.  call temp:= `defaultPort`(v0) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L1998da.  v0:= temp;
  #L1998dc.  goto L1998ce;
}
procedure `okhttp3.HttpUrl$Builder` `encodedFragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedFragment`) @signature `Lokhttp3/HttpUrl$Builder;.encodedFragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1998f0.  v3:= 0I;
  #L1998f2.  if v7 == 0 then goto L199910;
  #L1998f6.  v1:= "" @kind object;
  #L1998fa.  v2:= 1I;
  #L1998fc.  v0:= v7 @kind object;
  #L1998fe.  v4:= v3;
  #L199900.  v5:= v3;
  #L199902.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199908.  v0:= temp @kind object;
  #L19990a.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L19990e.  return v6 @kind object;
  #L199910.  v0:= 0I;
  #L199912.  goto L19990a;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPassword`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedPassword`) @signature `Lokhttp3/HttpUrl$Builder;.encodedPassword:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199924.  v2:= 1I;
  #L199926.  v3:= 0I;
  #L199928.  if v7 != 0 then goto L19993c;
  #L19992c.  v0:= new `java.lang.NullPointerException`;
  #L199930.  v1:= "encodedPassword == null" @kind object;
  #L199934.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19993a.  throw v0;
  #L19993c.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199940.  v0:= v7 @kind object;
  #L199942.  v4:= v3;
  #L199944.  v5:= v2;
  #L199946.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19994c.  v0:= temp @kind object;
  #L19994e.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L199952.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPath`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `encodedPath`) @signature `Lokhttp3/HttpUrl$Builder;.encodedPath:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L199964.  if v4 != 0 then goto L199978;
  #L199968.  v0:= new `java.lang.NullPointerException`;
  #L19996c.  v1:= "encodedPath == null" @kind object;
  #L199970.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199976.  throw v0;
  #L199978.  v0:= "/" @kind object;
  #L19997c.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L199982.  v0:= temp;
  #L199984.  if v0 != 0 then goto L1999ba;
  #L199988.  v0:= new `java.lang.IllegalArgumentException`;
  #L19998c.  v1:= new `java.lang.StringBuilder`;
  #L199990.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199996.  v2:= "unexpected encodedPath: " @kind object;
  #L19999a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1999a0.  v1:= temp @kind object;
  #L1999a2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1999a8.  v1:= temp @kind object;
  #L1999aa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1999b0.  v1:= temp @kind object;
  #L1999b2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1999b8.  throw v0;
  #L1999ba.  v0:= 0I;
  #L1999bc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1999c2.  v1:= temp;
  #L1999c4.  call `resolvePath`(v3, v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L1999ca.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedQuery`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedQuery`) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1999dc.  v2:= 1I;
  #L1999de.  if v7 == 0 then goto L199a04;
  #L1999e2.  v1:= " \"'<>#" @kind object;
  #L1999e6.  v3:= 0I;
  #L1999e8.  v0:= v7 @kind object;
  #L1999ea.  v4:= v2;
  #L1999ec.  v5:= v2;
  #L1999ee.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1999f4.  v0:= temp @kind object;
  #L1999f6.  call temp:= `queryStringToNamesAndValues`(v0) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1999fc.  v0:= temp @kind object;
  #L1999fe.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L199a02.  return v6 @kind object;
  #L199a04.  v0:= 0I;
  #L199a06.  goto L1999fe;
}
procedure `okhttp3.HttpUrl$Builder` `encodedUsername`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedUsername`) @signature `Lokhttp3/HttpUrl$Builder;.encodedUsername:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199a18.  v2:= 1I;
  #L199a1a.  v3:= 0I;
  #L199a1c.  if v7 != 0 then goto L199a30;
  #L199a20.  v0:= new `java.lang.NullPointerException`;
  #L199a24.  v1:= "encodedUsername == null" @kind object;
  #L199a28.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199a2e.  throw v0;
  #L199a30.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199a34.  v0:= v7 @kind object;
  #L199a36.  v4:= v3;
  #L199a38.  v5:= v2;
  #L199a3a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199a40.  v0:= temp @kind object;
  #L199a42.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L199a46.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `fragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `fragment`) @signature `Lokhttp3/HttpUrl$Builder;.fragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199a58.  v2:= 0I;
  #L199a5a.  if v7 == 0 then goto L199a78;
  #L199a5e.  v1:= "" @kind object;
  #L199a62.  v0:= v7 @kind object;
  #L199a64.  v3:= v2;
  #L199a66.  v4:= v2;
  #L199a68.  v5:= v2;
  #L199a6a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L199a70.  v0:= temp @kind object;
  #L199a72.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L199a76.  return v6 @kind object;
  #L199a78.  v0:= 0I;
  #L199a7a.  goto L199a72;
}
procedure `okhttp3.HttpUrl$Builder` `host`(`okhttp3.HttpUrl$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `host`) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L199a8c.  if v5 != 0 then goto L199aa0;
  #L199a90.  v1:= new `java.lang.NullPointerException`;
  #L199a94.  v2:= "host == null" @kind object;
  #L199a98.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199a9e.  throw v1;
  #L199aa0.  v1:= 0I;
  #L199aa2.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199aa8.  v2:= temp;
  #L199aaa.  call temp:= `canonicalizeHost`(v5, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L199ab0.  v0:= temp @kind object;
  #L199ab2.  if v0 != 0 then goto L199ae8;
  #L199ab6.  v1:= new `java.lang.IllegalArgumentException`;
  #L199aba.  v2:= new `java.lang.StringBuilder`;
  #L199abe.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199ac4.  v3:= "unexpected host: " @kind object;
  #L199ac8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199ace.  v2:= temp @kind object;
  #L199ad0.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199ad6.  v2:= temp @kind object;
  #L199ad8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199ade.  v2:= temp @kind object;
  #L199ae0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199ae6.  throw v1;
  #L199ae8.  v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v0 @kind object;
  #L199aec.  return v4 @kind object;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `parse`(`okhttp3.HttpUrl$Builder` v29 @kind this, `okhttp3.HttpUrl` v30 @kind object @name `base`, `java.lang.String` v31 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;

  #L199b00.  v3:= 0I;
  #L199b02.  call temp:= `length`(v31) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199b08.  v4:= temp;
  #L199b0a.  v0:= v31 @kind object;
  #L199b0e.  call temp:= `skipLeadingAsciiWhitespace`(v0, v3, v4) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L199b14.  v5:= temp;
  #L199b16.  call temp:= `length`(v31) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199b1c.  v3:= temp;
  #L199b1e.  v0:= v31 @kind object;
  #L199b22.  call temp:= `skipTrailingAsciiWhitespace`(v0, v5, v3) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L199b28.  v24:= temp;
  #L199b2a.  v0:= v31 @kind object;
  #L199b2e.  v1:= v24;
  #L199b32.  call temp:= `schemeDelimiterOffset`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @kind static;
  #L199b38.  v27:= temp;
  #L199b3a.  v3:= -1I;
  #L199b3c.  v0:= v27;
  #L199b40.  if v0 == v3 then goto L199c98;
  #L199b44.  v4:= 1I;
  #L199b46.  v6:= "https:" @kind object;
  #L199b4a.  v7:= 0I;
  #L199b4c.  v8:= 6I;
  #L199b4e.  v3:= v31 @kind object;
  #L199b52.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L199b58.  v3:= temp;
  #L199b5a.  if v3 == 0 then goto L199c5a;
  #L199b5e.  v3:= "https" @kind object;
  #L199b62.  v0:= v29 @kind object;
  #L199b66.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L199b6a.  v3:= "https:" @kind object;
  #L199b6e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199b74.  v3:= temp;
  #L199b76.  v5:= v5 + v3 @kind int;
  #L199b78.  v23:= 0I;
  #L199b7c.  v22:= 0I;
  #L199b80.  v0:= v31 @kind object;
  #L199b84.  v1:= v24;
  #L199b88.  call temp:= `slashCount`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @kind static;
  #L199b8e.  v28:= temp;
  #L199b90.  v3:= 2I;
  #L199b92.  v0:= v28;
  #L199b96.  if v0 >= v3 then goto L199bba;
  #L199b9a.  if v30 == 0 then goto L199bba;
  #L199b9e.  v0:= v30 @kind object;
  #L199ba2.  v3:= v0.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L199ba6.  v0:= v29 @kind object;
  #L199baa.  v4:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L199bae.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L199bb4.  v3:= temp;
  #L199bb6.  if v3 != 0 then goto L199f00;
  #L199bba.  v5:= v5 + v28 @kind int;
  #L199bbe.  v3:= "@/\\?#" @kind object;
  #L199bc2.  v0:= v31 @kind object;
  #L199bc6.  v1:= v24;
  #L199bca.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L199bd0.  v21:= temp;
  #L199bd2.  v0:= v21;
  #L199bd6.  v1:= v24;
  #L199bda.  if v0 == v1 then goto L199cb6;
  #L199bde.  v0:= v31 @kind object;
  #L199be2.  v1:= v21;
  #L199be6.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199bec.  v19:= temp;
  #L199bee.  goto L199f98;
  #L199bf4.  goto L199bbe;
  #L199bf6.  v0:= v31 @kind object;
  #L199bfa.  v1:= v21;
  #L199bfe.  call temp:= `portColonOffset`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @kind static;
  #L199c04.  v26:= temp;
  #L199c06.  v3:= v26 + 1;
  #L199c0a.  v0:= v21;
  #L199c0e.  if v3 >= v0 then goto L199dda;
  #L199c12.  v0:= v31 @kind object;
  #L199c16.  v1:= v26;
  #L199c1a.  call temp:= `canonicalizeHost`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L199c20.  v3:= temp @kind object;
  #L199c22.  v0:= v29 @kind object;
  #L199c26.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L199c2a.  v3:= v26 + 1;
  #L199c2e.  v0:= v31 @kind object;
  #L199c32.  v1:= v21;
  #L199c36.  call temp:= `parsePort`(v0, v3, v1) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @kind static;
  #L199c3c.  v3:= temp;
  #L199c3e.  v0:= v29 @kind object;
  #L199c42.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L199c46.  v0:= v29 @kind object;
  #L199c4a.  v3:= v0.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L199c4e.  v4:= -1I;
  #L199c50.  if v3 != v4 then goto L199e0a;
  #L199c54.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L199c58.  return v3 @kind object;
  #L199c5a.  v4:= 1I;
  #L199c5c.  v6:= "http:" @kind object;
  #L199c60.  v7:= 0I;
  #L199c62.  v8:= 5I;
  #L199c64.  v3:= v31 @kind object;
  #L199c68.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L199c6e.  v3:= temp;
  #L199c70.  if v3 == 0 then goto L199c92;
  #L199c74.  v3:= "http" @kind object;
  #L199c78.  v0:= v29 @kind object;
  #L199c7c.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L199c80.  v3:= "http:" @kind object;
  #L199c84.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199c8a.  v3:= temp;
  #L199c8c.  v5:= v5 + v3 @kind int;
  #L199c8e.  goto L199b78;
  #L199c92.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L199c96.  goto L199c58;
  #L199c98.  if v30 == 0 then goto L199cb0;
  #L199c9c.  v0:= v30 @kind object;
  #L199ca0.  v3:= v0.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L199ca4.  v0:= v29 @kind object;
  #L199ca8.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L199cac.  goto L199b78;
  #L199cb0.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L199cb4.  goto L199c58;
  #L199cb6.  v19:= -1I;
  #L199cba.  goto L199bee;
  #L199cbc.  if v22 != 0 then goto L199d7a;
  #L199cc0.  v3:= 58I;
  #L199cc4.  v0:= v31 @kind object;
  #L199cc8.  v1:= v21;
  #L199ccc.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L199cd2.  v6:= temp;
  #L199cd4.  v7:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199cd8.  v8:= 1I;
  #L199cda.  v9:= 0I;
  #L199cdc.  v10:= 0I;
  #L199cde.  v11:= 1I;
  #L199ce0.  v12:= 0I;
  #L199ce2.  v4:= v31 @kind object;
  #L199ce6.  call temp:= `canonicalize`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199cec.  v20:= temp @kind object;
  #L199cee.  if v23 == 0 then goto L199d2c;
  #L199cf2.  v3:= new `java.lang.StringBuilder`;
  #L199cf6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199cfc.  v0:= v29 @kind object;
  #L199d00.  v4:= v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L199d04.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d0a.  v3:= temp @kind object;
  #L199d0c.  v4:= "%40" @kind object;
  #L199d10.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d16.  v3:= temp @kind object;
  #L199d18.  v0:= v20 @kind object;
  #L199d1c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d22.  v3:= temp @kind object;
  #L199d24.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199d2a.  v20:= temp @kind object;
  #L199d2c.  v0:= v20 @kind object;
  #L199d30.  v1:= v29 @kind object;
  #L199d34.  v1.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L199d38.  v0:= v21;
  #L199d3c.  if v6 == v0 then goto L199d6e;
  #L199d40.  v22:= 1I;
  #L199d44.  v8:= v6 + 1;
  #L199d48.  v10:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199d4c.  v11:= 1I;
  #L199d4e.  v12:= 0I;
  #L199d50.  v13:= 0I;
  #L199d52.  v14:= 1I;
  #L199d54.  v15:= 0I;
  #L199d56.  v7:= v31 @kind object;
  #L199d5a.  v9:= v21;
  #L199d5e.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199d64.  v3:= temp @kind object;
  #L199d66.  v0:= v29 @kind object;
  #L199d6a.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L199d6e.  v23:= 1I;
  #L199d72.  v5:= v21 + 1;
  #L199d76.  goto L199bbe;
  #L199d7a.  v3:= new `java.lang.StringBuilder`;
  #L199d7e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199d84.  v0:= v29 @kind object;
  #L199d88.  v4:= v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L199d8c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d92.  v3:= temp @kind object;
  #L199d94.  v4:= "%40" @kind object;
  #L199d98.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d9e.  v3:= temp @kind object;
  #L199da0.  v10:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199da4.  v11:= 1I;
  #L199da6.  v12:= 0I;
  #L199da8.  v13:= 0I;
  #L199daa.  v14:= 1I;
  #L199dac.  v15:= 0I;
  #L199dae.  v7:= v31 @kind object;
  #L199db2.  v8:= v5;
  #L199db4.  v9:= v21;
  #L199db8.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199dbe.  v4:= temp @kind object;
  #L199dc0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199dc6.  v3:= temp @kind object;
  #L199dc8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199dce.  v3:= temp @kind object;
  #L199dd0.  v0:= v29 @kind object;
  #L199dd4.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L199dd8.  goto L199d72;
  #L199dda.  v0:= v31 @kind object;
  #L199dde.  v1:= v26;
  #L199de2.  call temp:= `canonicalizeHost`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L199de8.  v3:= temp @kind object;
  #L199dea.  v0:= v29 @kind object;
  #L199dee.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L199df2.  v0:= v29 @kind object;
  #L199df6.  v3:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L199dfa.  call temp:= `defaultPort`(v3) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L199e00.  v3:= temp;
  #L199e02.  v0:= v29 @kind object;
  #L199e06.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L199e0a.  v0:= v29 @kind object;
  #L199e0e.  v3:= v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L199e12.  if v3 != 0 then goto L199e1e;
  #L199e16.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L199e1a.  goto L199c58;
  #L199e1e.  v5:= v21;
  #L199e22.  v3:= "?#" @kind object;
  #L199e26.  v0:= v31 @kind object;
  #L199e2a.  v1:= v24;
  #L199e2e.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L199e34.  v25:= temp;
  #L199e36.  v0:= v29 @kind object;
  #L199e3a.  v1:= v31 @kind object;
  #L199e3e.  v2:= v25;
  #L199e42.  call `resolvePath`(v0, v1, v5, v2) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L199e48.  v5:= v25;
  #L199e4c.  v0:= v24;
  #L199e50.  if v5 >= v0 then goto L199eac;
  #L199e54.  v0:= v31 @kind object;
  #L199e58.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199e5e.  v3:= temp;
  #L199e60.  v4:= 63I;
  #L199e64.  if v3 != v4 then goto L199eac;
  #L199e68.  v3:= 35I;
  #L199e6c.  v0:= v31 @kind object;
  #L199e70.  v1:= v24;
  #L199e74.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L199e7a.  v9:= temp;
  #L199e7c.  v8:= v5 + 1;
  #L199e80.  v10:= " \"'<>#" @kind object;
  #L199e84.  v11:= 1I;
  #L199e86.  v12:= 0I;
  #L199e88.  v13:= 1I;
  #L199e8a.  v14:= 1I;
  #L199e8c.  v15:= 0I;
  #L199e8e.  v7:= v31 @kind object;
  #L199e92.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199e98.  v3:= temp @kind object;
  #L199e9a.  call temp:= `queryStringToNamesAndValues`(v3) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L199ea0.  v3:= temp @kind object;
  #L199ea2.  v0:= v29 @kind object;
  #L199ea6.  v0.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v3 @kind object;
  #L199eaa.  v5:= v9;
  #L199eac.  v0:= v24;
  #L199eb0.  if v5 >= v0 then goto L199ef8;
  #L199eb4.  v0:= v31 @kind object;
  #L199eb8.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199ebe.  v3:= temp;
  #L199ec0.  v4:= 35I;
  #L199ec4.  if v3 != v4 then goto L199ef8;
  #L199ec8.  v11:= v5 + 1;
  #L199ecc.  v13:= "" @kind object;
  #L199ed0.  v14:= 1I;
  #L199ed2.  v15:= 0I;
  #L199ed4.  v16:= 0I;
  #L199ed8.  v17:= 0I;
  #L199edc.  v18:= 0I;
  #L199ee0.  v10:= v31 @kind object;
  #L199ee4.  v12:= v24;
  #L199ee8.  call temp:= `canonicalize`(v10, v11, v12, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L199eee.  v3:= temp @kind object;
  #L199ef0.  v0:= v29 @kind object;
  #L199ef4.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v3 @kind object;
  #L199ef8.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L199efc.  goto L199c58;
  #L199f00.  call temp:= `encodedUsername`(v30) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L199f06.  v3:= temp @kind object;
  #L199f08.  v0:= v29 @kind object;
  #L199f0c.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v3 @kind object;
  #L199f10.  call temp:= `encodedPassword`(v30) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L199f16.  v3:= temp @kind object;
  #L199f18.  v0:= v29 @kind object;
  #L199f1c.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L199f20.  v0:= v30 @kind object;
  #L199f24.  v3:= v0.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L199f28.  v0:= v29 @kind object;
  #L199f2c.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L199f30.  v0:= v30 @kind object;
  #L199f34.  v3:= v0.`okhttp3.HttpUrl.port` @type ^`int`;
  #L199f38.  v0:= v29 @kind object;
  #L199f3c.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L199f40.  v0:= v29 @kind object;
  #L199f44.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199f48.  call `clear`(v3) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L199f4e.  v0:= v29 @kind object;
  #L199f52.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L199f56.  call temp:= `encodedPathSegments`(v30) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L199f5c.  v4:= temp @kind object;
  #L199f5e.  call temp:= `addAll`(v3, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L199f64.  v0:= v24;
  #L199f68.  if v5 == v0 then goto L199f80;
  #L199f6c.  v0:= v31 @kind object;
  #L199f70.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199f76.  v3:= temp;
  #L199f78.  v4:= 35I;
  #L199f7c.  if v3 != v4 then goto L199e22;
  #L199f80.  call temp:= `encodedQuery`(v30) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L199f86.  v3:= temp @kind object;
  #L199f88.  v0:= v29 @kind object;
  #L199f8c.  call temp:= `encodedQuery`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L199f92.  goto L199e22;
  #L199f96.  
  #L199f98.  switch v19
                  | -1 => goto L199bf6
                  | 35 => goto L199bf6
                  | 47 => goto L199bf6
                  | 63 => goto L199bf6
                  | 64 => goto L199cbc
                  | 92 => goto L199bf6
                  | else => goto L199bf4;
}
procedure `okhttp3.HttpUrl$Builder` `password`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `password`) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199fdc.  v2:= 0I;
  #L199fde.  if v7 != 0 then goto L199ff2;
  #L199fe2.  v0:= new `java.lang.NullPointerException`;
  #L199fe6.  v1:= "password == null" @kind object;
  #L199fea.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199ff0.  throw v0;
  #L199ff2.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L199ff6.  v5:= 1I;
  #L199ff8.  v0:= v7 @kind object;
  #L199ffa.  v3:= v2;
  #L199ffc.  v4:= v2;
  #L199ffe.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a004.  v0:= temp @kind object;
  #L19a006.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L19a00a.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `port`(`okhttp3.HttpUrl$Builder` v3 @kind this, `int` v4 @name `port`) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19a01c.  if v4 <= 0 then goto L19a02a;
  #L19a020.  v0:= 65535I;
  #L19a026.  if v4 <= v0 then goto L19a05c;
  #L19a02a.  v0:= new `java.lang.IllegalArgumentException`;
  #L19a02e.  v1:= new `java.lang.StringBuilder`;
  #L19a032.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19a038.  v2:= "unexpected port: " @kind object;
  #L19a03c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a042.  v1:= temp @kind object;
  #L19a044.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a04a.  v1:= temp @kind object;
  #L19a04c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a052.  v1:= temp @kind object;
  #L19a054.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a05a.  throw v0;
  #L19a05c.  v3.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v4;
  #L19a060.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `query`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `query`) @signature `Lokhttp3/HttpUrl$Builder;.query:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a074.  v4:= 1I;
  #L19a076.  v2:= 0I;
  #L19a078.  if v7 == 0 then goto L19a09c;
  #L19a07c.  v1:= " \"'<>#" @kind object;
  #L19a080.  v0:= v7 @kind object;
  #L19a082.  v3:= v2;
  #L19a084.  v5:= v4;
  #L19a086.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a08c.  v0:= temp @kind object;
  #L19a08e.  call temp:= `queryStringToNamesAndValues`(v0) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19a094.  v0:= temp @kind object;
  #L19a096.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19a09a.  return v6 @kind object;
  #L19a09c.  v0:= 0I;
  #L19a09e.  goto L19a096;
}
procedure `okhttp3.HttpUrl$Builder` `reencodeForUri`(`okhttp3.HttpUrl$Builder` v14 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L19a0b0.  v4:= 0I;
  #L19a0b2.  v2:= 1I;
  #L19a0b4.  v12:= 0I;
  #L19a0b6.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a0ba.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a0c0.  v13:= temp;
  #L19a0c2.  if v12 >= v13 then goto L19a0f6;
  #L19a0c6.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a0ca.  call temp:= `get`(v1, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a0d0.  v0:= temp @kind object;
  #L19a0d2.  v0:= (`java.lang.String`) v0 @kind object;
  #L19a0d6.  v6:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a0da.  v1:= "[]" @kind object;
  #L19a0de.  v3:= v2;
  #L19a0e0.  v5:= v2;
  #L19a0e2.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a0e8.  v1:= temp @kind object;
  #L19a0ea.  call temp:= `set`(v6, v12, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a0f0.  v12:= v12 + 1;
  #L19a0f4.  goto L19a0c2;
  #L19a0f6.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a0fa.  if v1 == 0 then goto L19a148;
  #L19a0fe.  v12:= 0I;
  #L19a100.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a104.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a10a.  v13:= temp;
  #L19a10c.  if v12 >= v13 then goto L19a148;
  #L19a110.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a114.  call temp:= `get`(v1, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a11a.  v5:= temp @kind object;
  #L19a11c.  v5:= (`java.lang.String`) v5 @kind object;
  #L19a120.  if v5 == 0 then goto L19a142;
  #L19a124.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a128.  v6:= "\\^`{|}" @kind object;
  #L19a12c.  v7:= v2;
  #L19a12e.  v8:= v2;
  #L19a130.  v9:= v2;
  #L19a132.  v10:= v2;
  #L19a134.  call temp:= `canonicalize`(v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a13a.  v3:= temp @kind object;
  #L19a13c.  call temp:= `set`(v1, v12, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a142.  v12:= v12 + 1;
  #L19a146.  goto L19a10c;
  #L19a148.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19a14c.  if v1 == 0 then goto L19a16c;
  #L19a150.  v6:= v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19a154.  v7:= " \"#<>\\^`{|}" @kind object;
  #L19a158.  v8:= v2;
  #L19a15a.  v9:= v2;
  #L19a15c.  v10:= v4;
  #L19a15e.  v11:= v4;
  #L19a160.  call temp:= `canonicalize`(v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a166.  v1:= temp @kind object;
  #L19a168.  v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L19a16c.  return v14 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllEncodedQueryParameters`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedName`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a180.  v2:= 1I;
  #L19a182.  if v7 != 0 then goto L19a196;
  #L19a186.  v0:= new `java.lang.NullPointerException`;
  #L19a18a.  v1:= "encodedName == null" @kind object;
  #L19a18e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a194.  throw v0;
  #L19a196.  v0:= v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a19a.  if v0 != 0 then goto L19a1a0;
  #L19a19e.  return v6 @kind object;
  #L19a1a0.  v1:= " \"'<>#&=" @kind object;
  #L19a1a4.  v3:= 0I;
  #L19a1a6.  v0:= v7 @kind object;
  #L19a1a8.  v4:= v2;
  #L19a1aa.  v5:= v2;
  #L19a1ac.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a1b2.  v0:= temp @kind object;
  #L19a1b4.  call `removeAllCanonicalQueryParameters`(v6, v0) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L19a1ba.  goto L19a19e;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `name`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19a1cc.  v4:= 1I;
  #L19a1ce.  v2:= 0I;
  #L19a1d0.  if v8 != 0 then goto L19a1e4;
  #L19a1d4.  v0:= new `java.lang.NullPointerException`;
  #L19a1d8.  v1:= "name == null" @kind object;
  #L19a1dc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a1e2.  throw v0;
  #L19a1e4.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a1e8.  if v0 != 0 then goto L19a1ee;
  #L19a1ec.  return v7 @kind object;
  #L19a1ee.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19a1f2.  v0:= v8 @kind object;
  #L19a1f4.  v3:= v2;
  #L19a1f6.  v5:= v4;
  #L19a1f8.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a1fe.  v6:= temp @kind object;
  #L19a200.  call `removeAllCanonicalQueryParameters`(v7, v6) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L19a206.  goto L19a1ec;
}
procedure `okhttp3.HttpUrl$Builder` `removePathSegment`(`okhttp3.HttpUrl$Builder` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl$Builder;.removePathSegment:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19a218.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a21c.  call temp:= `remove`(v0, v3) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19a222.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a226.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19a22c.  v0:= temp;
  #L19a22e.  if v0 == 0 then goto L19a240;
  #L19a232.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a236.  v1:= "" @kind object;
  #L19a23a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a240.  return v2 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `scheme`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `scheme`) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19a254.  if v4 != 0 then goto L19a268;
  #L19a258.  v0:= new `java.lang.NullPointerException`;
  #L19a25c.  v1:= "scheme == null" @kind object;
  #L19a260.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a266.  throw v0;
  #L19a268.  v0:= "http" @kind object;
  #L19a26c.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a272.  v0:= temp;
  #L19a274.  if v0 == 0 then goto L19a282;
  #L19a278.  v0:= "http" @kind object;
  #L19a27c.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19a280.  return v3 @kind object;
  #L19a282.  v0:= "https" @kind object;
  #L19a286.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a28c.  v0:= temp;
  #L19a28e.  if v0 == 0 then goto L19a29c;
  #L19a292.  v0:= "https" @kind object;
  #L19a296.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19a29a.  goto L19a280;
  #L19a29c.  v0:= new `java.lang.IllegalArgumentException`;
  #L19a2a0.  v1:= new `java.lang.StringBuilder`;
  #L19a2a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19a2aa.  v2:= "unexpected scheme: " @kind object;
  #L19a2ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a2b4.  v1:= temp @kind object;
  #L19a2b6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a2bc.  v1:= temp @kind object;
  #L19a2be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a2c4.  v1:= temp @kind object;
  #L19a2c6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a2cc.  throw v0;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v10 @kind this, `int` v11 @name `index`, `java.lang.String` v12 @kind object @name `encodedPathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19a2e0.  v4:= 1I;
  #L19a2e2.  v1:= 0I;
  #L19a2e4.  if v12 != 0 then goto L19a2f8;
  #L19a2e8.  v0:= new `java.lang.NullPointerException`;
  #L19a2ec.  v1:= "encodedPathSegment == null" @kind object;
  #L19a2f0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a2f6.  throw v0;
  #L19a2f8.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a2fe.  v2:= temp;
  #L19a300.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L19a304.  v8:= 0I;
  #L19a306.  v0:= v12 @kind object;
  #L19a308.  v5:= v1;
  #L19a30a.  v6:= v1;
  #L19a30c.  v7:= v4;
  #L19a30e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a314.  v9:= temp @kind object;
  #L19a316.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a31a.  call temp:= `set`(v0, v11, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a320.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L19a326.  v0:= temp;
  #L19a328.  if v0 != 0 then goto L19a338;
  #L19a32c.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L19a332.  v0:= temp;
  #L19a334.  if v0 == 0 then goto L19a36a;
  #L19a338.  v0:= new `java.lang.IllegalArgumentException`;
  #L19a33c.  v1:= new `java.lang.StringBuilder`;
  #L19a340.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19a346.  v2:= "unexpected path segment: " @kind object;
  #L19a34a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a350.  v1:= temp @kind object;
  #L19a352.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a358.  v1:= temp @kind object;
  #L19a35a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a360.  v1:= temp @kind object;
  #L19a362.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a368.  throw v0;
  #L19a36a.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `encodedName`, `java.lang.String` v2 @kind object @name `encodedValue`) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19a37c.  call temp:= `removeAllEncodedQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19a382.  call temp:= `addEncodedQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19a388.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setPathSegment`(`okhttp3.HttpUrl$Builder` v10 @kind this, `int` v11 @name `index`, `java.lang.String` v12 @kind object @name `pathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.setPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19a39c.  v1:= 0I;
  #L19a39e.  if v12 != 0 then goto L19a3b2;
  #L19a3a2.  v0:= new `java.lang.NullPointerException`;
  #L19a3a6.  v1:= "pathSegment == null" @kind object;
  #L19a3aa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a3b0.  throw v0;
  #L19a3b2.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a3b8.  v2:= temp;
  #L19a3ba.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L19a3be.  v7:= 1I;
  #L19a3c0.  v8:= 0I;
  #L19a3c2.  v0:= v12 @kind object;
  #L19a3c4.  v4:= v1;
  #L19a3c6.  v5:= v1;
  #L19a3c8.  v6:= v1;
  #L19a3ca.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a3d0.  v9:= temp @kind object;
  #L19a3d2.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L19a3d8.  v0:= temp;
  #L19a3da.  if v0 != 0 then goto L19a3ea;
  #L19a3de.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L19a3e4.  v0:= temp;
  #L19a3e6.  if v0 == 0 then goto L19a41c;
  #L19a3ea.  v0:= new `java.lang.IllegalArgumentException`;
  #L19a3ee.  v1:= new `java.lang.StringBuilder`;
  #L19a3f2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19a3f8.  v2:= "unexpected path segment: " @kind object;
  #L19a3fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a402.  v1:= temp @kind object;
  #L19a404.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a40a.  v1:= temp @kind object;
  #L19a40c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a412.  v1:= temp @kind object;
  #L19a414.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a41a.  throw v0;
  #L19a41c.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a420.  call temp:= `set`(v0, v11, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a426.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `name`, `java.lang.String` v2 @kind object @name `value`) @signature `Lokhttp3/HttpUrl$Builder;.setQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19a438.  call temp:= `removeAllQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19a43e.  call temp:= `addQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19a444.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl$Builder` v5 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a458.  v4:= 58I;
  #L19a45c.  v1:= new `java.lang.StringBuilder`;
  #L19a460.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19a466.  v2:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19a46a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a470.  v2:= "://" @kind object;
  #L19a474.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a47a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19a47e.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19a484.  v2:= temp;
  #L19a486.  if v2 == 0 then goto L19a49a;
  #L19a48a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19a48e.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19a494.  v2:= temp;
  #L19a496.  if v2 != 0 then goto L19a4ce;
  #L19a49a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19a49e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4a4.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19a4a8.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19a4ae.  v2:= temp;
  #L19a4b0.  if v2 != 0 then goto L19a4c4;
  #L19a4b4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4ba.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19a4be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4c4.  v2:= 64I;
  #L19a4c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4ce.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19a4d2.  call temp:= `indexOf`(v2, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19a4d8.  v2:= temp;
  #L19a4da.  v3:= -1I;
  #L19a4dc.  if v2 == v3 then goto L19a56e;
  #L19a4e0.  v2:= 91I;
  #L19a4e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4ea.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19a4ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4f4.  v2:= 93I;
  #L19a4f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a4fe.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L19a504.  v0:= temp;
  #L19a506.  v2:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19a50a.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19a510.  v2:= temp;
  #L19a512.  if v0 == v2 then goto L19a522;
  #L19a516.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a51c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a522.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a526.  call `pathSegmentsToString`(v1, v2) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19a52c.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a530.  if v2 == 0 then goto L19a548;
  #L19a534.  v2:= 63I;
  #L19a538.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a53e.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a542.  call `namesAndValuesToQueryString`(v1, v2) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19a548.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19a54c.  if v2 == 0 then goto L19a564;
  #L19a550.  v2:= 35I;
  #L19a554.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a55a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19a55e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a564.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a56a.  v2:= temp @kind object;
  #L19a56c.  return v2 @kind object;
  #L19a56e.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19a572.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a578.  goto L19a4fe;
}
procedure `okhttp3.HttpUrl$Builder` `username`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `username`) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a58c.  v2:= 0I;
  #L19a58e.  if v7 != 0 then goto L19a5a2;
  #L19a592.  v0:= new `java.lang.NullPointerException`;
  #L19a596.  v1:= "username == null" @kind object;
  #L19a59a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a5a0.  throw v0;
  #L19a5a2.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19a5a6.  v5:= 1I;
  #L19a5a8.  v0:= v7 @kind object;
  #L19a5aa.  v3:= v2;
  #L19a5ac.  v4:= v2;
  #L19a5ae.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a5b4.  v0:= temp @kind object;
  #L19a5b6.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19a5ba.  return v6 @kind object;
}

record `okhttp3.internal.cache2.FileOperator` @kind class @AccessFlag FINAL {
  `java.nio.channels.FileChannel` `okhttp3.internal.cache2.FileOperator.fileChannel` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache2.FileOperator` v0 @kind this, `java.nio.channels.FileChannel` v1 @kind object @name `fileChannel`) @signature `Lokhttp3/internal/cache2/FileOperator;.<init>:(Ljava/nio/channels/FileChannel;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1a12e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a12ea.  v0.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` := v1 @kind object;
  #L1a12ee.  return @kind void;
}
procedure `void` `read`(`okhttp3.internal.cache2.FileOperator` v10 @kind this, `long` v11 @name `pos`, `okio.Buffer` v13 @kind object @name `sink`, `long` v14 @name `byteCount`) @signature `Lokhttp3/internal/cache2/FileOperator;.read:(JLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1a1300.  v0:= 0L;
  #L1a1304.  v0:= lcmp(v14, v0);
  #L1a1308.  if v0 >= 0 then goto L1a1318;
  #L1a130c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L1a1310.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L1a1316.  throw v0;
  #L1a1318.  v0:= 0L;
  #L1a131c.  v0:= lcmp(v14, v0);
  #L1a1320.  if v0 <= 0 then goto L1a133c;
  #L1a1324.  v1:= v10.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L1a1328.  v2:= v11 @kind wide;
  #L1a132a.  v4:= v14 @kind wide;
  #L1a132c.  v6:= v13 @kind object;
  #L1a132e.  call temp:= `transferTo`(v1, v2, v4, v6) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L1a1334.  v8:= temp @kind wide;
  #L1a1336.  v11:= v11 + v8 @kind long;
  #L1a1338.  v14:= v14 - v8 @kind long;
  #L1a133a.  goto L1a1318;
  #L1a133c.  return @kind void;
}
procedure `void` `write`(`okhttp3.internal.cache2.FileOperator` v10 @kind this, `long` v11 @name `pos`, `okio.Buffer` v13 @kind object @name `source`, `long` v14 @name `byteCount`) @signature `Lokhttp3/internal/cache2/FileOperator;.write:(JLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1a1350.  v8:= 0L;
  #L1a1354.  v0:= lcmp(v14, v8);
  #L1a1358.  if v0 < 0 then goto L1a136c;
  #L1a135c.  call temp:= `size`(v13) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1a1362.  v0:= temp @kind wide;
  #L1a1364.  v0:= lcmp(v14, v0);
  #L1a1368.  if v0 <= 0 then goto L1a1378;
  #L1a136c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L1a1370.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L1a1376.  throw v0;
  #L1a1378.  v0:= lcmp(v14, v8);
  #L1a137c.  if v0 <= 0 then goto L1a1398;
  #L1a1380.  v0:= v10.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L1a1384.  v1:= v13 @kind object;
  #L1a1386.  v2:= v11 @kind wide;
  #L1a1388.  v4:= v14 @kind wide;
  #L1a138a.  call temp:= `transferFrom`(v0, v1, v2, v4) @signature `Ljava/nio/channels/FileChannel;.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J` @kind virtual;
  #L1a1390.  v6:= temp @kind wide;
  #L1a1392.  v11:= v11 + v6 @kind long;
  #L1a1394.  v14:= v14 - v6 @kind long;
  #L1a1396.  goto L1a1378;
  #L1a1398.  return @kind void;
}

record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a3a58.  v8:= 7I;
  #L1a3a5a.  v7:= 3I;
  #L1a3a5c.  v6:= 2I;
  #L1a3a5e.  v5:= 1I;
  #L1a3a60.  v4:= 0I;
  #L1a3a62.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3a66.  v1:= "NO_ERROR" @kind object;
  #L1a3a6a.  call `<init>`(v0, v1, v4, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3a70.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3a74.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3a78.  v1:= "PROTOCOL_ERROR" @kind object;
  #L1a3a7c.  call `<init>`(v0, v1, v5, v5) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3a82.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3a86.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3a8a.  v1:= "INTERNAL_ERROR" @kind object;
  #L1a3a8e.  call `<init>`(v0, v1, v6, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3a94.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3a98.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3a9c.  v1:= "FLOW_CONTROL_ERROR" @kind object;
  #L1a3aa0.  call `<init>`(v0, v1, v7, v7) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3aa6.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3aaa.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3aae.  v1:= "REFUSED_STREAM" @kind object;
  #L1a3ab2.  v2:= 4I;
  #L1a3ab4.  call `<init>`(v0, v1, v2, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3aba.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3abe.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3ac2.  v1:= "CANCEL" @kind object;
  #L1a3ac6.  v2:= 5I;
  #L1a3ac8.  v3:= 8I;
  #L1a3acc.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3ad2.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3ad6.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3ada.  v1:= "COMPRESSION_ERROR" @kind object;
  #L1a3ade.  v2:= 6I;
  #L1a3ae0.  v3:= 9I;
  #L1a3ae4.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3aea.  `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3aee.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3af2.  v1:= "CONNECT_ERROR" @kind object;
  #L1a3af6.  v2:= 10I;
  #L1a3afa.  call `<init>`(v0, v1, v8, v2) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3b00.  `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3b04.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3b08.  v1:= "ENHANCE_YOUR_CALM" @kind object;
  #L1a3b0c.  v2:= 8I;
  #L1a3b10.  v3:= 11I;
  #L1a3b14.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3b1a.  `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3b1e.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3b22.  v1:= "INADEQUATE_SECURITY" @kind object;
  #L1a3b26.  v2:= 9I;
  #L1a3b2a.  v3:= 12I;
  #L1a3b2e.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3b34.  `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3b38.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a3b3c.  v1:= "HTTP_1_1_REQUIRED" @kind object;
  #L1a3b40.  v2:= 10I;
  #L1a3b44.  v3:= 13I;
  #L1a3b48.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a3b4e.  `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a3b52.  v0:= 11I;
  #L1a3b56.  v0:= new `okhttp3.internal.http2.ErrorCode`[v0];
  #L1a3b5a.  v1:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3b5e.  v0[v4]:= v1 @kind object;
  #L1a3b62.  v1:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3b66.  v0[v5]:= v1 @kind object;
  #L1a3b6a.  v1:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3b6e.  v0[v6]:= v1 @kind object;
  #L1a3b72.  v1:= `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3b76.  v0[v7]:= v1 @kind object;
  #L1a3b7a.  v1:= 4I;
  #L1a3b7c.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3b80.  v0[v1]:= v2 @kind object;
  #L1a3b84.  v1:= 5I;
  #L1a3b86.  v2:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3b8a.  v0[v1]:= v2 @kind object;
  #L1a3b8e.  v1:= 6I;
  #L1a3b90.  v2:= `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3b94.  v0[v1]:= v2 @kind object;
  #L1a3b98.  v1:= `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3b9c.  v0[v8]:= v1 @kind object;
  #L1a3ba0.  v1:= 8I;
  #L1a3ba4.  v2:= `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3ba8.  v0[v1]:= v2 @kind object;
  #L1a3bac.  v1:= 9I;
  #L1a3bb0.  v2:= `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3bb4.  v0[v1]:= v2 @kind object;
  #L1a3bb8.  v1:= 10I;
  #L1a3bbc.  v2:= `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3bc0.  v0[v1]:= v2 @kind object;
  #L1a3bc4.  `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] := v0 @kind object;
  #L1a3bc8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 @name `httpCode`) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a3bdc.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1a3be2.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L1a3be6.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `fromHttp2`(`int` v5 @name `code`) @signature `Lokhttp3/internal/http2/ErrorCode;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a3bf8.  call temp:= `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @kind static;
  #L1a3bfe.  v2:= temp @kind object;
  #L1a3c00.  v3:= length @variable v2;
  #L1a3c02.  v1:= 0I;
  #L1a3c04.  if v1 >= v3 then goto L1a3c1c;
  #L1a3c08.  v0:= v2[v1] @kind object;
  #L1a3c0c.  v4:= v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L1a3c10.  if v4 != v5 then goto L1a3c16;
  #L1a3c14.  return v0 @kind object;
  #L1a3c16.  v1:= v1 + 1;
  #L1a3c1a.  goto L1a3c04;
  #L1a3c1c.  v0:= 0I;
  #L1a3c1e.  goto L1a3c14;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a3c30.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a3c34.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1a3c3a.  v0:= temp @kind object;
  #L1a3c3c.  v0:= (`okhttp3.internal.http2.ErrorCode`) v0 @kind object;
  #L1a3c40.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a3c54.  v0:= `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L1a3c58.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1a3c5e.  v0:= temp @kind object;
  #L1a3c60.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L1a3c64.  return v0 @kind object;
}

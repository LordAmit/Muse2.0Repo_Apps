record `okhttp3.internal.http2.Http2Connection$5` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$5.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.Buffer` `okhttp3.internal.http2.Http2Connection$5.val$buffer` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$5.val$byteCount` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$5.val$inFinished` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$5.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$5` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object @name `this$0`, `java.lang.String` v2 @kind object @name `format`, `java.lang.Object`[] v3 @kind object @name `args`, `int` v4 , `okio.Buffer` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lokhttp3/internal/http2/Http2Connection$5;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokio/Buffer;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L219c14.  v0.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L219c18.  v0.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int` := v4;
  #L219c1c.  v0.`okhttp3.internal.http2.Http2Connection$5.val$buffer` @type ^`okio.Buffer` := v5 @kind object;
  #L219c20.  v0.`okhttp3.internal.http2.Http2Connection$5.val$byteCount` @type ^`int` := v6;
  #L219c24.  v0.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` := v7 @kind boolean;
  #L219c28.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L219c2e.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$5` v6 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$5;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L219c40.  v1:= v6.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219c44.  v1:= v1.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L219c48.  v2:= v6.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L219c4c.  v3:= v6.`okhttp3.internal.http2.Http2Connection$5.val$buffer` @type ^`okio.Buffer` @kind object;
  #L219c50.  v4:= v6.`okhttp3.internal.http2.Http2Connection$5.val$byteCount` @type ^`int`;
  #L219c54.  v5:= v6.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` @kind boolean;
  #L219c58.  call temp:= `onData`(v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/http2/PushObserver;.onData:(ILokio/BufferedSource;IZ)Z` @kind interface;
  #L219c5e.  v0:= temp;
  #L219c60.  if v0 == 0 then goto L219c7a;
  #L219c64.  v1:= v6.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219c68.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L219c6c.  v2:= v6.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L219c70.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L219c74.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L219c7a.  if v0 != 0 then goto L219c86;
  #L219c7e.  v1:= v6.`okhttp3.internal.http2.Http2Connection$5.val$inFinished` @type ^`boolean` @kind boolean;
  #L219c82.  if v1 == 0 then goto L219ca8;
  #L219c86.  v2:= v6.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219c8a.  @monitorenter v2
  #Try_end0.  
  #Try_start1.  
  #L219c8c.  v1:= v6.`okhttp3.internal.http2.Http2Connection$5.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219c90.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L219c94.  v3:= v6.`okhttp3.internal.http2.Http2Connection$5.val$streamId` @type ^`int`;
  #L219c98.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L219c9e.  v3:= temp @kind object;
  #L219ca0.  call temp:= `remove`(v1, v3) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L219ca6.  @monitorexit v2
  #L219ca8.  return @kind void;
  #L219caa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L219cac.  @monitorexit v2
  #Try_end1.  
  #Try_start2.  
  #L219cae.  throw v1;
  #Try_end2.  
  #L219cb0.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L219cb2.  goto L219ca8;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L219cb0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L219caa;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L219cb0;
}

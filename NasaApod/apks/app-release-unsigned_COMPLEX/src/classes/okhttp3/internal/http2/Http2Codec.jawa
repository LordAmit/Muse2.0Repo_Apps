record `okhttp3.internal.http2.Http2Codec` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http.HttpCodec` @kind interface {
  `okhttp3.Interceptor$Chain` `okhttp3.internal.http2.Http2Codec.chain` @AccessFlag PRIVATE_FINAL;
  `okhttp3.OkHttpClient` `okhttp3.internal.http2.Http2Codec.client` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Codec.connection` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Codec.stream` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.StreamAllocation` `okhttp3.internal.http2.Http2Codec.streamAllocation` @AccessFlag FINAL;
}
global `okio.ByteString` `@@okhttp3.internal.http2.Http2Codec.CONNECTION` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2Codec.ENCODING` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2Codec.HOST` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.http2.Http2Codec.HTTP_2_SKIPPED_REQUEST_HEADERS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.http2.Http2Codec.HTTP_2_SKIPPED_RESPONSE_HEADERS` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2Codec.KEEP_ALIVE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2Codec.PROXY_CONNECTION` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2Codec.TE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2Codec.TRANSFER_ENCODING` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2Codec.UPGRADE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Codec;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21942c.  v7:= 4I;
  #L21942e.  v6:= 3I;
  #L219430.  v5:= 2I;
  #L219432.  v4:= 1I;
  #L219434.  v3:= 0I;
  #L219436.  v0:= "connection" @kind object;
  #L21943a.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L219440.  v0:= temp @kind object;
  #L219442.  `@@okhttp3.internal.http2.Http2Codec.CONNECTION` @type ^`okio.ByteString` := v0 @kind object;
  #L219446.  v0:= "host" @kind object;
  #L21944a.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L219450.  v0:= temp @kind object;
  #L219452.  `@@okhttp3.internal.http2.Http2Codec.HOST` @type ^`okio.ByteString` := v0 @kind object;
  #L219456.  v0:= "keep-alive" @kind object;
  #L21945a.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L219460.  v0:= temp @kind object;
  #L219462.  `@@okhttp3.internal.http2.Http2Codec.KEEP_ALIVE` @type ^`okio.ByteString` := v0 @kind object;
  #L219466.  v0:= "proxy-connection" @kind object;
  #L21946a.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L219470.  v0:= temp @kind object;
  #L219472.  `@@okhttp3.internal.http2.Http2Codec.PROXY_CONNECTION` @type ^`okio.ByteString` := v0 @kind object;
  #L219476.  v0:= "transfer-encoding" @kind object;
  #L21947a.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L219480.  v0:= temp @kind object;
  #L219482.  `@@okhttp3.internal.http2.Http2Codec.TRANSFER_ENCODING` @type ^`okio.ByteString` := v0 @kind object;
  #L219486.  v0:= "te" @kind object;
  #L21948a.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L219490.  v0:= temp @kind object;
  #L219492.  `@@okhttp3.internal.http2.Http2Codec.TE` @type ^`okio.ByteString` := v0 @kind object;
  #L219496.  v0:= "encoding" @kind object;
  #L21949a.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2194a0.  v0:= temp @kind object;
  #L2194a2.  `@@okhttp3.internal.http2.Http2Codec.ENCODING` @type ^`okio.ByteString` := v0 @kind object;
  #L2194a6.  v0:= "upgrade" @kind object;
  #L2194aa.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2194b0.  v0:= temp @kind object;
  #L2194b2.  `@@okhttp3.internal.http2.Http2Codec.UPGRADE` @type ^`okio.ByteString` := v0 @kind object;
  #L2194b6.  v0:= 12I;
  #L2194ba.  v0:= new `okio.ByteString`[v0];
  #L2194be.  v1:= `@@okhttp3.internal.http2.Http2Codec.CONNECTION` @type ^`okio.ByteString` @kind object;
  #L2194c2.  v0[v3]:= v1 @kind object;
  #L2194c6.  v1:= `@@okhttp3.internal.http2.Http2Codec.HOST` @type ^`okio.ByteString` @kind object;
  #L2194ca.  v0[v4]:= v1 @kind object;
  #L2194ce.  v1:= `@@okhttp3.internal.http2.Http2Codec.KEEP_ALIVE` @type ^`okio.ByteString` @kind object;
  #L2194d2.  v0[v5]:= v1 @kind object;
  #L2194d6.  v1:= `@@okhttp3.internal.http2.Http2Codec.PROXY_CONNECTION` @type ^`okio.ByteString` @kind object;
  #L2194da.  v0[v6]:= v1 @kind object;
  #L2194de.  v1:= `@@okhttp3.internal.http2.Http2Codec.TE` @type ^`okio.ByteString` @kind object;
  #L2194e2.  v0[v7]:= v1 @kind object;
  #L2194e6.  v1:= 5I;
  #L2194e8.  v2:= `@@okhttp3.internal.http2.Http2Codec.TRANSFER_ENCODING` @type ^`okio.ByteString` @kind object;
  #L2194ec.  v0[v1]:= v2 @kind object;
  #L2194f0.  v1:= 6I;
  #L2194f2.  v2:= `@@okhttp3.internal.http2.Http2Codec.ENCODING` @type ^`okio.ByteString` @kind object;
  #L2194f6.  v0[v1]:= v2 @kind object;
  #L2194fa.  v1:= 7I;
  #L2194fc.  v2:= `@@okhttp3.internal.http2.Http2Codec.UPGRADE` @type ^`okio.ByteString` @kind object;
  #L219500.  v0[v1]:= v2 @kind object;
  #L219504.  v1:= 8I;
  #L219508.  v2:= `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` @kind object;
  #L21950c.  v0[v1]:= v2 @kind object;
  #L219510.  v1:= 9I;
  #L219514.  v2:= `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` @kind object;
  #L219518.  v0[v1]:= v2 @kind object;
  #L21951c.  v1:= 10I;
  #L219520.  v2:= `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` @kind object;
  #L219524.  v0[v1]:= v2 @kind object;
  #L219528.  v1:= 11I;
  #L21952c.  v2:= `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` @kind object;
  #L219530.  v0[v1]:= v2 @kind object;
  #L219534.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L21953a.  v0:= temp @kind object;
  #L21953c.  `@@okhttp3.internal.http2.Http2Codec.HTTP_2_SKIPPED_REQUEST_HEADERS` @type ^`java.util.List` := v0 @kind object;
  #L219540.  v0:= 8I;
  #L219544.  v0:= new `okio.ByteString`[v0];
  #L219548.  v1:= `@@okhttp3.internal.http2.Http2Codec.CONNECTION` @type ^`okio.ByteString` @kind object;
  #L21954c.  v0[v3]:= v1 @kind object;
  #L219550.  v1:= `@@okhttp3.internal.http2.Http2Codec.HOST` @type ^`okio.ByteString` @kind object;
  #L219554.  v0[v4]:= v1 @kind object;
  #L219558.  v1:= `@@okhttp3.internal.http2.Http2Codec.KEEP_ALIVE` @type ^`okio.ByteString` @kind object;
  #L21955c.  v0[v5]:= v1 @kind object;
  #L219560.  v1:= `@@okhttp3.internal.http2.Http2Codec.PROXY_CONNECTION` @type ^`okio.ByteString` @kind object;
  #L219564.  v0[v6]:= v1 @kind object;
  #L219568.  v1:= `@@okhttp3.internal.http2.Http2Codec.TE` @type ^`okio.ByteString` @kind object;
  #L21956c.  v0[v7]:= v1 @kind object;
  #L219570.  v1:= 5I;
  #L219572.  v2:= `@@okhttp3.internal.http2.Http2Codec.TRANSFER_ENCODING` @type ^`okio.ByteString` @kind object;
  #L219576.  v0[v1]:= v2 @kind object;
  #L21957a.  v1:= 6I;
  #L21957c.  v2:= `@@okhttp3.internal.http2.Http2Codec.ENCODING` @type ^`okio.ByteString` @kind object;
  #L219580.  v0[v1]:= v2 @kind object;
  #L219584.  v1:= 7I;
  #L219586.  v2:= `@@okhttp3.internal.http2.Http2Codec.UPGRADE` @type ^`okio.ByteString` @kind object;
  #L21958a.  v0[v1]:= v2 @kind object;
  #L21958e.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L219594.  v0:= temp @kind object;
  #L219596.  `@@okhttp3.internal.http2.Http2Codec.HTTP_2_SKIPPED_RESPONSE_HEADERS` @type ^`java.util.List` := v0 @kind object;
  #L21959a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Codec` v0 @kind this, `okhttp3.OkHttpClient` v1 @kind object @name `client`, `okhttp3.Interceptor$Chain` v2 @kind object @name `chain`, `okhttp3.internal.connection.StreamAllocation` v3 @kind object @name `streamAllocation`, `okhttp3.internal.http2.Http2Connection` v4 @kind object @name `connection`) @signature `Lokhttp3/internal/http2/Http2Codec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http2/Http2Connection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2195ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2195b2.  v0.`okhttp3.internal.http2.Http2Codec.client` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L2195b6.  v0.`okhttp3.internal.http2.Http2Codec.chain` @type ^`okhttp3.Interceptor$Chain` := v2 @kind object;
  #L2195ba.  v0.`okhttp3.internal.http2.Http2Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` := v3 @kind object;
  #L2195be.  v0.`okhttp3.internal.http2.Http2Codec.connection` @type ^`okhttp3.internal.http2.Http2Connection` := v4 @kind object;
  #L2195c2.  return @kind void;
}
procedure `java.util.List` `http2HeadersList`(`okhttp3.Request` v9 @kind object @name `request`) @signature `Lokhttp3/internal/http2/Http2Codec;.http2HeadersList:(Lokhttp3/Request;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2195d4.  call temp:= `headers`(v9) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L2195da.  v0:= temp @kind object;
  #L2195dc.  v4:= new `java.util.ArrayList`;
  #L2195e0.  call temp:= `size`(v0) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2195e6.  v6:= temp;
  #L2195e8.  v6:= v6 + 4;
  #L2195ec.  call `<init>`(v4, v6) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2195f2.  v6:= new `okhttp3.internal.http2.Header`;
  #L2195f6.  v7:= `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` @kind object;
  #L2195fa.  call temp:= `method`(v9) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L219600.  v8:= temp @kind object;
  #L219602.  call `<init>`(v6, v7, v8) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L219608.  call temp:= `add`(v4, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21960e.  v6:= new `okhttp3.internal.http2.Header`;
  #L219612.  v7:= `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` @kind object;
  #L219616.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L21961c.  v8:= temp @kind object;
  #L21961e.  call temp:= `requestPath`(v8) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind static;
  #L219624.  v8:= temp @kind object;
  #L219626.  call `<init>`(v6, v7, v8) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L21962c.  call temp:= `add`(v4, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L219632.  v6:= "Host" @kind object;
  #L219636.  call temp:= `header`(v9, v6) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21963c.  v1:= temp @kind object;
  #L21963e.  if v1 == 0 then goto L219656;
  #L219642.  v6:= new `okhttp3.internal.http2.Header`;
  #L219646.  v7:= `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` @kind object;
  #L21964a.  call `<init>`(v6, v7, v1) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L219650.  call temp:= `add`(v4, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L219656.  v6:= new `okhttp3.internal.http2.Header`;
  #L21965a.  v7:= `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` @kind object;
  #L21965e.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L219664.  v8:= temp @kind object;
  #L219666.  call temp:= `scheme`(v8) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L21966c.  v8:= temp @kind object;
  #L21966e.  call `<init>`(v6, v7, v8) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L219674.  call temp:= `add`(v4, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21967a.  v2:= 0I;
  #L21967c.  call temp:= `size`(v0) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L219682.  v5:= temp;
  #L219684.  if v2 >= v5 then goto L2196d2;
  #L219688.  call temp:= `name`(v0, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L21968e.  v6:= temp @kind object;
  #L219690.  v7:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L219694.  call temp:= `toLowerCase`(v6, v7) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L21969a.  v6:= temp @kind object;
  #L21969c.  call temp:= `encodeUtf8`(v6) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2196a2.  v3:= temp @kind object;
  #L2196a4.  v6:= `@@okhttp3.internal.http2.Http2Codec.HTTP_2_SKIPPED_REQUEST_HEADERS` @type ^`java.util.List` @kind object;
  #L2196a8.  call temp:= `contains`(v6, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2196ae.  v6:= temp;
  #L2196b0.  if v6 != 0 then goto L2196cc;
  #L2196b4.  v6:= new `okhttp3.internal.http2.Header`;
  #L2196b8.  call temp:= `value`(v0, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2196be.  v7:= temp @kind object;
  #L2196c0.  call `<init>`(v6, v3, v7) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L2196c6.  call temp:= `add`(v4, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2196cc.  v2:= v2 + 1;
  #L2196d0.  goto L219684;
  #L2196d2.  return v4 @kind object;
}
procedure `okhttp3.Response$Builder` `readHttp2HeadersList`(`java.util.List` v9 @kind object) @signature `Lokhttp3/internal/http2/Http2Codec;.readHttp2HeadersList:(Ljava/util/List;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2196e4.  v5:= 0I;
  #L2196e6.  v1:= new `okhttp3.Headers$Builder`;
  #L2196ea.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L2196f0.  v2:= 0I;
  #L2196f2.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2196f8.  v4:= temp;
  #L2196fa.  if v2 >= v4 then goto L2197a4;
  #L2196fe.  call temp:= `get`(v9, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L219704.  v0:= temp @kind object;
  #L219706.  v0:= (`okhttp3.internal.http2.Header`) v0 @kind object;
  #L21970a.  if v0 != 0 then goto L219730;
  #L21970e.  if v5 == 0 then goto L21972a;
  #L219712.  v7:= v5.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L219716.  v8:= 100I;
  #L21971a.  if v7 != v8 then goto L21972a;
  #L21971e.  v5:= 0I;
  #L219720.  v1:= new `okhttp3.Headers$Builder`;
  #L219724.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L21972a.  v2:= v2 + 1;
  #L21972e.  goto L2196fa;
  #L219730.  v3:= v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L219734.  v7:= v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L219738.  call temp:= `utf8`(v7) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L21973e.  v6:= temp @kind object;
  #L219740.  v7:= `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` @kind object;
  #L219744.  call temp:= `equals`(v3, v7) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21974a.  v7:= temp;
  #L21974c.  if v7 == 0 then goto L219780;
  #L219750.  v7:= new `java.lang.StringBuilder`;
  #L219754.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21975a.  v8:= "HTTP/1.1 " @kind object;
  #L21975e.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L219764.  v7:= temp @kind object;
  #L219766.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21976c.  v7:= temp @kind object;
  #L21976e.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L219774.  v7:= temp @kind object;
  #L219776.  call temp:= `parse`(v7) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L21977c.  v5:= temp @kind object;
  #L21977e.  goto L21972a;
  #L219780.  v7:= `@@okhttp3.internal.http2.Http2Codec.HTTP_2_SKIPPED_RESPONSE_HEADERS` @type ^`java.util.List` @kind object;
  #L219784.  call temp:= `contains`(v7, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L21978a.  v7:= temp;
  #L21978c.  if v7 != 0 then goto L21972a;
  #L219790.  v7:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L219794.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L21979a.  v8:= temp @kind object;
  #L21979c.  call `addLenient`(v7, v1, v8, v6) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2197a2.  goto L21972a;
  #L2197a4.  if v5 != 0 then goto L2197b8;
  #L2197a8.  v7:= new `java.net.ProtocolException`;
  #L2197ac.  v8:= "Expected ':status' header not present" @kind object;
  #L2197b0.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2197b6.  throw v7;
  #L2197b8.  v7:= new `okhttp3.Response$Builder`;
  #L2197bc.  call `<init>`(v7) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L2197c2.  v8:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L2197c6.  call temp:= `protocol`(v7, v8) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2197cc.  v7:= temp @kind object;
  #L2197ce.  v8:= v5.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L2197d2.  call temp:= `code`(v7, v8) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L2197d8.  v7:= temp @kind object;
  #L2197da.  v8:= v5.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L2197de.  call temp:= `message`(v7, v8) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2197e4.  v7:= temp @kind object;
  #L2197e6.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L2197ec.  v8:= temp @kind object;
  #L2197ee.  call temp:= `headers`(v7, v8) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2197f4.  v7:= temp @kind object;
  #L2197f6.  return v7 @kind object;
}
procedure `void` `cancel`(`okhttp3.internal.http2.Http2Codec` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Codec;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L219808.  v0:= v2.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21980c.  if v0 == 0 then goto L21981e;
  #L219810.  v0:= v2.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219814.  v1:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L219818.  call `closeLater`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Stream;.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L21981e.  return @kind void;
}
procedure `okio.Sink` `createRequestBody`(`okhttp3.internal.http2.Http2Codec` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`, `long` v3 @name `contentLength`) @signature `Lokhttp3/internal/http2/Http2Codec;.createRequestBody:(Lokhttp3/Request;J)Lokio/Sink;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L219830.  v0:= v1.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219834.  call temp:= `getSink`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getSink:()Lokio/Sink;` @kind virtual;
  #L21983a.  v0:= temp @kind object;
  #L21983c.  return v0 @kind object;
}
procedure `void` `finishRequest`(`okhttp3.internal.http2.Http2Codec` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Codec;.finishRequest:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L219850.  v0:= v1.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219854.  call temp:= `getSink`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.getSink:()Lokio/Sink;` @kind virtual;
  #L21985a.  v0:= temp @kind object;
  #L21985c.  call `close`(v0) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L219862.  return @kind void;
}
procedure `void` `flushRequest`(`okhttp3.internal.http2.Http2Codec` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Codec;.flushRequest:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L219874.  v0:= v1.`okhttp3.internal.http2.Http2Codec.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219878.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L21987e.  return @kind void;
}
procedure `okhttp3.ResponseBody` `openResponseBody`(`okhttp3.internal.http2.Http2Codec` v6 @kind this, `okhttp3.Response` v7 @kind object @name `response`) @signature `Lokhttp3/internal/http2/Http2Codec;.openResponseBody:(Lokhttp3/Response;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L219890.  v4:= v6.`okhttp3.internal.http2.Http2Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L219894.  v4:= v4.`okhttp3.internal.connection.StreamAllocation.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L219898.  v5:= v6.`okhttp3.internal.http2.Http2Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L21989c.  v5:= v5.`okhttp3.internal.connection.StreamAllocation.call` @type ^`okhttp3.Call` @kind object;
  #L2198a0.  call `responseBodyStart`(v4, v5) @signature `Lokhttp3/EventListener;.responseBodyStart:(Lokhttp3/Call;)V` @kind virtual;
  #L2198a6.  v4:= "Content-Type" @kind object;
  #L2198aa.  call temp:= `header`(v7, v4) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2198b0.  v2:= temp @kind object;
  #L2198b2.  call temp:= `contentLength`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.contentLength:(Lokhttp3/Response;)J` @kind static;
  #L2198b8.  v0:= temp @kind wide;
  #L2198ba.  v3:= new `okhttp3.internal.http2.Http2Codec$StreamFinishingSource`;
  #L2198be.  v4:= v6.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2198c2.  call temp:= `getSource`(v4) @signature `Lokhttp3/internal/http2/Http2Stream;.getSource:()Lokio/Source;` @kind virtual;
  #L2198c8.  v4:= temp @kind object;
  #L2198ca.  call `<init>`(v3, v6, v4) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.<init>:(Lokhttp3/internal/http2/Http2Codec;Lokio/Source;)V` @kind direct;
  #L2198d0.  v4:= new `okhttp3.internal.http.RealResponseBody`;
  #L2198d4.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L2198da.  v5:= temp @kind object;
  #L2198dc.  call `<init>`(v4, v2, v0, v5) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L2198e2.  return v4 @kind object;
}
procedure `okhttp3.Response$Builder` `readResponseHeaders`(`okhttp3.internal.http2.Http2Codec` v4 @kind this, `boolean` v5 @name `expectContinue`) @signature `Lokhttp3/internal/http2/Http2Codec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2198f4.  v2:= v4.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2198f8.  call temp:= `takeResponseHeaders`(v2) @signature `Lokhttp3/internal/http2/Http2Stream;.takeResponseHeaders:()Ljava/util/List;` @kind virtual;
  #L2198fe.  v0:= temp @kind object;
  #L219900.  call temp:= `readHttp2HeadersList`(v0) @signature `Lokhttp3/internal/http2/Http2Codec;.readHttp2HeadersList:(Ljava/util/List;)Lokhttp3/Response$Builder;` @kind static;
  #L219906.  v1:= temp @kind object;
  #L219908.  if v5 == 0 then goto L219922;
  #L21990c.  v2:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L219910.  call temp:= `code`(v2, v1) @signature `Lokhttp3/internal/Internal;.code:(Lokhttp3/Response$Builder;)I` @kind virtual;
  #L219916.  v2:= temp;
  #L219918.  v3:= 100I;
  #L21991c.  if v2 != v3 then goto L219922;
  #L219920.  v1:= 0I;
  #L219922.  return v1 @kind object;
}
procedure `void` `writeRequestHeaders`(`okhttp3.internal.http2.Http2Codec` v6 @kind this, `okhttp3.Request` v7 @kind object @name `request`) @signature `Lokhttp3/internal/http2/Http2Codec;.writeRequestHeaders:(Lokhttp3/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L219934.  v2:= v6.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219938.  if v2 == 0 then goto L21993e;
  #L21993c.  return @kind void;
  #L21993e.  call temp:= `body`(v7) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L219944.  v2:= temp @kind object;
  #L219946.  if v2 == 0 then goto L2199ae;
  #L21994a.  v0:= 1I;
  #L21994c.  call temp:= `http2HeadersList`(v7) @signature `Lokhttp3/internal/http2/Http2Codec;.http2HeadersList:(Lokhttp3/Request;)Ljava/util/List;` @kind static;
  #L219952.  v1:= temp @kind object;
  #L219954.  v2:= v6.`okhttp3.internal.http2.Http2Codec.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219958.  call temp:= `newStream`(v2, v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.newStream:(Ljava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L21995e.  v2:= temp @kind object;
  #L219960.  v6.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` := v2 @kind object;
  #L219964.  v2:= v6.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L219968.  call temp:= `readTimeout`(v2) @signature `Lokhttp3/internal/http2/Http2Stream;.readTimeout:()Lokio/Timeout;` @kind virtual;
  #L21996e.  v2:= temp @kind object;
  #L219970.  v3:= v6.`okhttp3.internal.http2.Http2Codec.chain` @type ^`okhttp3.Interceptor$Chain` @kind object;
  #L219974.  call temp:= `readTimeoutMillis`(v3) @signature `Lokhttp3/Interceptor$Chain;.readTimeoutMillis:()I` @kind interface;
  #L21997a.  v3:= temp;
  #L21997c.  v4:= (`long`) v3 @kind i2l;
  #L21997e.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L219982.  call temp:= `timeout`(v2, v4, v3) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L219988.  v2:= v6.`okhttp3.internal.http2.Http2Codec.stream` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21998c.  call temp:= `writeTimeout`(v2) @signature `Lokhttp3/internal/http2/Http2Stream;.writeTimeout:()Lokio/Timeout;` @kind virtual;
  #L219992.  v2:= temp @kind object;
  #L219994.  v3:= v6.`okhttp3.internal.http2.Http2Codec.chain` @type ^`okhttp3.Interceptor$Chain` @kind object;
  #L219998.  call temp:= `writeTimeoutMillis`(v3) @signature `Lokhttp3/Interceptor$Chain;.writeTimeoutMillis:()I` @kind interface;
  #L21999e.  v3:= temp;
  #L2199a0.  v4:= (`long`) v3 @kind i2l;
  #L2199a2.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2199a6.  call temp:= `timeout`(v2, v4, v3) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L2199ac.  goto L21993c;
  #L2199ae.  v0:= 0I;
  #L2199b0.  goto L21994c;
}

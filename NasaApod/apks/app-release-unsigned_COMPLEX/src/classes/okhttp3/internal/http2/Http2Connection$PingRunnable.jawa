record `okhttp3.internal.http2.Http2Connection$PingRunnable` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `int` `okhttp3.internal.http2.Http2Connection$PingRunnable.payload1` @AccessFlag FINAL;
  `int` `okhttp3.internal.http2.Http2Connection$PingRunnable.payload2` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.http2.Http2Connection$PingRunnable.reply` @AccessFlag FINAL;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$PingRunnable.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$PingRunnable` v4 @kind this, `okhttp3.internal.http2.Http2Connection` v5 @kind object @name `this$0`, `boolean` v6 @name `reply`, `int` v7 @name `payload1`, `int` v8 @name `payload2`) @signature `Lokhttp3/internal/http2/Http2Connection$PingRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;ZII)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L219d98.  v4.`okhttp3.internal.http2.Http2Connection$PingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v5 @kind object;
  #L219d9c.  v0:= "OkHttp %s ping %08x%08x" @kind object;
  #L219da0.  v1:= 3I;
  #L219da2.  v1:= new `java.lang.Object`[v1];
  #L219da6.  v2:= 0I;
  #L219da8.  v3:= v5.`okhttp3.internal.http2.Http2Connection.hostname` @type ^`java.lang.String` @kind object;
  #L219dac.  v1[v2]:= v3 @kind object;
  #L219db0.  v2:= 1I;
  #L219db2.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L219db8.  v3:= temp @kind object;
  #L219dba.  v1[v2]:= v3 @kind object;
  #L219dbe.  v2:= 2I;
  #L219dc0.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L219dc6.  v3:= temp @kind object;
  #L219dc8.  v1[v2]:= v3 @kind object;
  #L219dcc.  call `<init>`(v4, v0, v1) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L219dd2.  v4.`okhttp3.internal.http2.Http2Connection$PingRunnable.reply` @type ^`boolean` := v6 @kind boolean;
  #L219dd6.  v4.`okhttp3.internal.http2.Http2Connection$PingRunnable.payload1` @type ^`int` := v7;
  #L219dda.  v4.`okhttp3.internal.http2.Http2Connection$PingRunnable.payload2` @type ^`int` := v8;
  #L219dde.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$PingRunnable` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$PingRunnable;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L219df0.  v0:= v4.`okhttp3.internal.http2.Http2Connection$PingRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219df4.  v1:= v4.`okhttp3.internal.http2.Http2Connection$PingRunnable.reply` @type ^`boolean` @kind boolean;
  #L219df8.  v2:= v4.`okhttp3.internal.http2.Http2Connection$PingRunnable.payload1` @type ^`int`;
  #L219dfc.  v3:= v4.`okhttp3.internal.http2.Http2Connection$PingRunnable.payload2` @type ^`int`;
  #L219e00.  call `writePing`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.writePing:(ZII)V` @kind virtual;
  #L219e06.  return @kind void;
}

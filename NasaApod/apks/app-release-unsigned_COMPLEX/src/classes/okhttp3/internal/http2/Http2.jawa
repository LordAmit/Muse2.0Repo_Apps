record `okhttp3.internal.http2.Http2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.BINARY` @AccessFlag STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FLAGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_ACK` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_COMPRESSED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_NONE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PADDED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PRIORITY` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.INITIAL_MAX_FRAME_SIZE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_DATA` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_GOAWAY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PING` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PRIORITY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_RST_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_SETTINGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_WINDOW_UPDATE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1a5254.  v11:= 8I;
  #L1a5258.  v13:= 4I;
  #L1a525a.  v12:= 3I;
  #L1a525c.  v10:= 1I;
  #L1a525e.  v6:= 0I;
  #L1a5260.  v5:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L1a5264.  call temp:= `encodeUtf8`(v5) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a526a.  v5:= temp @kind object;
  #L1a526c.  `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` := v5 @kind object;
  #L1a5270.  v5:= 10I;
  #L1a5274.  v5:= new `java.lang.String`[v5];
  #L1a5278.  v7:= "DATA" @kind object;
  #L1a527c.  v5[v6]:= v7 @kind object;
  #L1a5280.  v7:= "HEADERS" @kind object;
  #L1a5284.  v5[v10]:= v7 @kind object;
  #L1a5288.  v7:= 2I;
  #L1a528a.  v8:= "PRIORITY" @kind object;
  #L1a528e.  v5[v7]:= v8 @kind object;
  #L1a5292.  v7:= "RST_STREAM" @kind object;
  #L1a5296.  v5[v12]:= v7 @kind object;
  #L1a529a.  v7:= "SETTINGS" @kind object;
  #L1a529e.  v5[v13]:= v7 @kind object;
  #L1a52a2.  v7:= 5I;
  #L1a52a4.  v8:= "PUSH_PROMISE" @kind object;
  #L1a52a8.  v5[v7]:= v8 @kind object;
  #L1a52ac.  v7:= 6I;
  #L1a52ae.  v8:= "PING" @kind object;
  #L1a52b2.  v5[v7]:= v8 @kind object;
  #L1a52b6.  v7:= 7I;
  #L1a52b8.  v8:= "GOAWAY" @kind object;
  #L1a52bc.  v5[v7]:= v8 @kind object;
  #L1a52c0.  v7:= "WINDOW_UPDATE" @kind object;
  #L1a52c4.  v5[v11]:= v7 @kind object;
  #L1a52c8.  v7:= 9I;
  #L1a52cc.  v8:= "CONTINUATION" @kind object;
  #L1a52d0.  v5[v7]:= v8 @kind object;
  #L1a52d4.  `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a52d8.  v5:= 64I;
  #L1a52dc.  v5:= new `java.lang.String`[v5];
  #L1a52e0.  `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a52e4.  v5:= 256I;
  #L1a52e8.  v5:= new `java.lang.String`[v5];
  #L1a52ec.  `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a52f0.  v2:= 0I;
  #L1a52f2.  v5:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a52f6.  v5:= length @variable v5;
  #L1a52f8.  if v2 >= v5 then goto L1a5336;
  #L1a52fc.  v5:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a5300.  v7:= "%8s" @kind object;
  #L1a5304.  v8:= new `java.lang.Object`[v10];
  #L1a5308.  call temp:= `toBinaryString`(v2) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L1a530e.  v9:= temp @kind object;
  #L1a5310.  v8[v6]:= v9 @kind object;
  #L1a5314.  call temp:= `format`(v7, v8) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a531a.  v7:= temp @kind object;
  #L1a531c.  v8:= 32I;
  #L1a5320.  v9:= 48I;
  #L1a5324.  call temp:= `replace`(v7, v8, v9) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L1a532a.  v7:= temp @kind object;
  #L1a532c.  v5[v2]:= v7 @kind object;
  #L1a5330.  v2:= v2 + 1;
  #L1a5334.  goto L1a52f2;
  #L1a5336.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a533a.  v7:= "" @kind object;
  #L1a533e.  v5[v6]:= v7 @kind object;
  #L1a5342.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a5346.  v7:= "END_STREAM" @kind object;
  #L1a534a.  v5[v10]:= v7 @kind object;
  #L1a534e.  v4:= new `int`[v10];
  #L1a5352.  v4[v6]:= v10;
  #L1a5356.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a535a.  v7:= "PADDED" @kind object;
  #L1a535e.  v5[v11]:= v7 @kind object;
  #L1a5362.  v7:= length @variable v4;
  #L1a5364.  v5:= v6;
  #L1a5366.  if v5 >= v7 then goto L1a53ae;
  #L1a536a.  v3:= v4[v5];
  #L1a536e.  v8:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a5372.  v9:= v3 ^| 8;
  #L1a5376.  v10:= new `java.lang.StringBuilder`;
  #L1a537a.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a5380.  v11:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a5384.  v11:= v11[v3] @kind object;
  #L1a5388.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a538e.  v10:= temp @kind object;
  #L1a5390.  v11:= "|PADDED" @kind object;
  #L1a5394.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a539a.  v10:= temp @kind object;
  #L1a539c.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a53a2.  v10:= temp @kind object;
  #L1a53a4.  v8[v9]:= v10 @kind object;
  #L1a53a8.  v5:= v5 + 1;
  #L1a53ac.  goto L1a5366;
  #L1a53ae.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a53b2.  v7:= "END_HEADERS" @kind object;
  #L1a53b6.  v5[v13]:= v7 @kind object;
  #L1a53ba.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a53be.  v7:= 32I;
  #L1a53c2.  v8:= "PRIORITY" @kind object;
  #L1a53c6.  v5[v7]:= v8 @kind object;
  #L1a53ca.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a53ce.  v7:= 36I;
  #L1a53d2.  v8:= "END_HEADERS|PRIORITY" @kind object;
  #L1a53d6.  v5[v7]:= v8 @kind object;
  #L1a53da.  v1:= new `int`[v12];
  #L1a53de.  goto L1a54e0;
  #L1a53e4.  v8:= length @variable v1;
  #L1a53e6.  v7:= v6;
  #L1a53e8.  if v7 >= v8 then goto L1a54ae;
  #L1a53ec.  v0:= v1[v7];
  #L1a53f0.  v9:= length @variable v4;
  #L1a53f2.  v5:= v6;
  #L1a53f4.  if v5 >= v9 then goto L1a54a6;
  #L1a53f8.  v3:= v4[v5];
  #L1a53fc.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a5400.  v11:= v3 ^| v0 @kind int;
  #L1a5404.  v12:= new `java.lang.StringBuilder`;
  #L1a5408.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a540e.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a5412.  v13:= v13[v3] @kind object;
  #L1a5416.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a541c.  v12:= temp @kind object;
  #L1a541e.  v13:= 124I;
  #L1a5422.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5428.  v12:= temp @kind object;
  #L1a542a.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a542e.  v13:= v13[v0] @kind object;
  #L1a5432.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5438.  v12:= temp @kind object;
  #L1a543a.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a5440.  v12:= temp @kind object;
  #L1a5442.  v10[v11]:= v12 @kind object;
  #L1a5446.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a544a.  v11:= v3 ^| v0 @kind int;
  #L1a544e.  v11:= v11 ^| 8;
  #L1a5452.  v12:= new `java.lang.StringBuilder`;
  #L1a5456.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a545c.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a5460.  v13:= v13[v3] @kind object;
  #L1a5464.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a546a.  v12:= temp @kind object;
  #L1a546c.  v13:= 124I;
  #L1a5470.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5476.  v12:= temp @kind object;
  #L1a5478.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a547c.  v13:= v13[v0] @kind object;
  #L1a5480.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5486.  v12:= temp @kind object;
  #L1a5488.  v13:= "|PADDED" @kind object;
  #L1a548c.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5492.  v12:= temp @kind object;
  #L1a5494.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a549a.  v12:= temp @kind object;
  #L1a549c.  v10[v11]:= v12 @kind object;
  #L1a54a0.  v5:= v5 + 1;
  #L1a54a4.  goto L1a53f4;
  #L1a54a6.  v5:= v7 + 1;
  #L1a54aa.  v7:= v5;
  #L1a54ac.  goto L1a53e8;
  #L1a54ae.  v2:= 0I;
  #L1a54b0.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a54b4.  v5:= length @variable v5;
  #L1a54b6.  if v2 >= v5 then goto L1a54dc;
  #L1a54ba.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a54be.  v5:= v5[v2] @kind object;
  #L1a54c2.  if v5 != 0 then goto L1a54d6;
  #L1a54c6.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a54ca.  v6:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a54ce.  v6:= v6[v2] @kind object;
  #L1a54d2.  v5[v2]:= v6 @kind object;
  #L1a54d6.  v2:= v2 + 1;
  #L1a54da.  goto L1a54b0;
  #L1a54dc.  return @kind void;
  #L1a54de.  
  #L1a54e0.  v1:= (4I, 32I, 36I) @kind object;
  #L1a54f3.  goto L1a53e4;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a5504.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a550a.  return @kind void;
}
procedure `java.lang.String` `formatFlags`(`byte` v3 @name `type`, `byte` v4 @name `flags`) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1a551c.  if v4 != 0 then goto L1a5526;
  #L1a5520.  v1:= "" @kind object;
  #L1a5524.  return v1 @kind object;
  #L1a5526.  goto L1a55ac;
  #L1a552c.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a5530.  v1:= length @variable v1;
  #L1a5532.  if v4 >= v1 then goto L1a557e;
  #L1a5536.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a553a.  v0:= v1[v4] @kind object;
  #L1a553e.  v1:= 5I;
  #L1a5540.  if v3 != v1 then goto L1a5588;
  #L1a5544.  v1:= v4 ^& 4;
  #L1a5548.  if v1 == 0 then goto L1a5588;
  #L1a554c.  v1:= "HEADERS" @kind object;
  #L1a5550.  v2:= "PUSH_PROMISE" @kind object;
  #L1a5554.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1a555a.  v1:= temp @kind object;
  #L1a555c.  goto L1a5524;
  #L1a555e.  v1:= 1I;
  #L1a5560.  if v4 != v1 then goto L1a556a;
  #L1a5564.  v1:= "ACK" @kind object;
  #L1a5568.  goto L1a5524;
  #L1a556a.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a556e.  v1:= v1[v4] @kind object;
  #L1a5572.  goto L1a5524;
  #L1a5574.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a5578.  v1:= v1[v4] @kind object;
  #L1a557c.  goto L1a5524;
  #L1a557e.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a5582.  v0:= v1[v4] @kind object;
  #L1a5586.  goto L1a553e;
  #L1a5588.  if v3 != 0 then goto L1a55a6;
  #L1a558c.  v1:= v4 ^& 32;
  #L1a5590.  if v1 == 0 then goto L1a55a6;
  #L1a5594.  v1:= "PRIORITY" @kind object;
  #L1a5598.  v2:= "COMPRESSED" @kind object;
  #L1a559c.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1a55a2.  v1:= temp @kind object;
  #L1a55a4.  goto L1a5524;
  #L1a55a6.  v1:= v0 @kind object;
  #L1a55a8.  goto L1a5524;
  #L1a55aa.  
  #L1a55ac.  switch v3
                  | 2 => goto L1a5574
                  | 3 => goto L1a5574
                  | 4 => goto L1a555e
                  | 5 => goto L1a552c
                  | 6 => goto L1a555e
                  | 7 => goto L1a5574
                  | 8 => goto L1a5574
                  | else => goto L1a552c;
}
procedure `java.lang.String` `frameLog`(`boolean` v7 @name `inbound`, `int` v8 @name `streamId`, `int` v9 @name `length`, `byte` v10 @name `type`, `byte` v11 @name `flags`) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a55e0.  v6:= 1I;
  #L1a55e2.  v5:= 0I;
  #L1a55e4.  v2:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L1a55e8.  v2:= length @variable v2;
  #L1a55ea.  if v10 >= v2 then goto L1a5644;
  #L1a55ee.  v2:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L1a55f2.  v1:= v2[v10] @kind object;
  #L1a55f6.  call temp:= `formatFlags`(v10, v11) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @kind static;
  #L1a55fc.  v0:= temp @kind object;
  #L1a55fe.  v3:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L1a5602.  v2:= 5I;
  #L1a5604.  v4:= new `java.lang.Object`[v2];
  #L1a5608.  if v7 == 0 then goto L1a5662;
  #L1a560c.  v2:= "<<" @kind object;
  #L1a5610.  v4[v5]:= v2 @kind object;
  #L1a5614.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1a561a.  v2:= temp @kind object;
  #L1a561c.  v4[v6]:= v2 @kind object;
  #L1a5620.  v2:= 2I;
  #L1a5622.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1a5628.  v5:= temp @kind object;
  #L1a562a.  v4[v2]:= v5 @kind object;
  #L1a562e.  v2:= 3I;
  #L1a5630.  v4[v2]:= v1 @kind object;
  #L1a5634.  v2:= 4I;
  #L1a5636.  v4[v2]:= v0 @kind object;
  #L1a563a.  call temp:= `format`(v3, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a5640.  v2:= temp @kind object;
  #L1a5642.  return v2 @kind object;
  #L1a5644.  v2:= "0x%02x" @kind object;
  #L1a5648.  v3:= new `java.lang.Object`[v6];
  #L1a564c.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1a5652.  v4:= temp @kind object;
  #L1a5654.  v3[v5]:= v4 @kind object;
  #L1a5658.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a565e.  v1:= temp @kind object;
  #L1a5660.  goto L1a55f6;
  #L1a5662.  v2:= ">>" @kind object;
  #L1a5666.  goto L1a5610;
}
procedure `java.lang.IllegalArgumentException` `illegalArgument`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/http2/Http2;.illegalArgument:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a5678.  v0:= new `java.lang.IllegalArgumentException`;
  #L1a567c.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a5682.  v1:= temp @kind object;
  #L1a5684.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a568a.  throw v0;
}
procedure `java.io.IOException` `ioException`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a569c.  v0:= new `java.io.IOException`;
  #L1a56a0.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a56a6.  v1:= temp @kind object;
  #L1a56a8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a56ae.  throw v0;
}

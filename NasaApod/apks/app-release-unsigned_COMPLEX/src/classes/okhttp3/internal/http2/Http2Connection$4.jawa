record `okhttp3.internal.http2.Http2Connection$4` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$4.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$4.val$inFinished` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.internal.http2.Http2Connection$4.val$requestHeaders` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$4.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$4` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object @name `this$0`, `java.lang.String` v2 @kind object @name `format`, `java.lang.Object`[] v3 @kind object @name `args`, `int` v4 , `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$4;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L219b4c.  v0.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L219b50.  v0.`okhttp3.internal.http2.Http2Connection$4.val$streamId` @type ^`int` := v4;
  #L219b54.  v0.`okhttp3.internal.http2.Http2Connection$4.val$requestHeaders` @type ^`java.util.List` := v5 @kind object;
  #L219b58.  v0.`okhttp3.internal.http2.Http2Connection$4.val$inFinished` @type ^`boolean` := v6 @kind boolean;
  #L219b5c.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L219b62.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$4` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$4;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L219b74.  v1:= v5.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b78.  v1:= v1.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L219b7c.  v2:= v5.`okhttp3.internal.http2.Http2Connection$4.val$streamId` @type ^`int`;
  #L219b80.  v3:= v5.`okhttp3.internal.http2.Http2Connection$4.val$requestHeaders` @type ^`java.util.List` @kind object;
  #L219b84.  v4:= v5.`okhttp3.internal.http2.Http2Connection$4.val$inFinished` @type ^`boolean` @kind boolean;
  #L219b88.  call temp:= `onHeaders`(v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/PushObserver;.onHeaders:(ILjava/util/List;Z)Z` @kind interface;
  #L219b8e.  v0:= temp;
  #L219b90.  if v0 == 0 then goto L219baa;
  #Try_start0.  
  #L219b94.  v1:= v5.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219b98.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L219b9c.  v2:= v5.`okhttp3.internal.http2.Http2Connection$4.val$streamId` @type ^`int`;
  #L219ba0.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L219ba4.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L219baa.  if v0 != 0 then goto L219bb6;
  #L219bae.  v1:= v5.`okhttp3.internal.http2.Http2Connection$4.val$inFinished` @type ^`boolean` @kind boolean;
  #L219bb2.  if v1 == 0 then goto L219bd8;
  #L219bb6.  v2:= v5.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219bba.  @monitorenter v2
  #Try_end0.  
  #Try_start1.  
  #L219bbc.  v1:= v5.`okhttp3.internal.http2.Http2Connection$4.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L219bc0.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L219bc4.  v3:= v5.`okhttp3.internal.http2.Http2Connection$4.val$streamId` @type ^`int`;
  #L219bc8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L219bce.  v3:= temp @kind object;
  #L219bd0.  call temp:= `remove`(v1, v3) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L219bd6.  @monitorexit v2
  #L219bd8.  return @kind void;
  #L219bda.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L219bdc.  @monitorexit v2
  #Try_end1.  
  #Try_start2.  
  #L219bde.  throw v1;
  #Try_end2.  
  #L219be0.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L219be2.  goto L219bd8;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L219be0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L219bda;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L219be0;
}

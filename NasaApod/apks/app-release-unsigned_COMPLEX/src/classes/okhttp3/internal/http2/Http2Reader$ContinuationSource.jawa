record `okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `byte` `okhttp3.internal.http2.Http2Reader$ContinuationSource.flags` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.length` @AccessFlag ;
  `short` `okhttp3.internal.http2.Http2Reader$ContinuationSource.padding` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `okio.BufferedSource` v1 @kind object @name `source`) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.<init>:(Lokio/BufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21a63c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21a642.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` := v1 @kind object;
  #L21a646.  return @kind void;
}
procedure `void` `readContinuationHeader`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v8 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.readContinuationHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21a658.  v7:= 1I;
  #L21a65a.  v6:= 0I;
  #L21a65c.  v0:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @type ^`int`;
  #L21a660.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L21a664.  call temp:= `readMedium`(v2) @signature `Lokhttp3/internal/http2/Http2Reader;.readMedium:(Lokio/BufferedSource;)I` @kind static;
  #L21a66a.  v2:= temp;
  #L21a66c.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int` := v2;
  #L21a670.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.length` @type ^`int` := v2;
  #L21a674.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L21a678.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L21a67e.  v2:= temp;
  #L21a680.  v2:= v2 ^& 255;
  #L21a684.  v1:= (`byte`) v2 @kind i2b;
  #L21a686.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L21a68a.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L21a690.  v2:= temp;
  #L21a692.  v2:= v2 ^& 255;
  #L21a696.  v2:= (`byte`) v2 @kind i2b;
  #L21a698.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.flags` @type ^`byte` := v2 @kind byte;
  #L21a69c.  v2:= `@@okhttp3.internal.http2.Http2Reader.logger` @type ^`java.util.logging.Logger` @kind object;
  #L21a6a0.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L21a6a4.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L21a6aa.  v2:= temp;
  #L21a6ac.  if v2 == 0 then goto L21a6ce;
  #L21a6b0.  v2:= `@@okhttp3.internal.http2.Http2Reader.logger` @type ^`java.util.logging.Logger` @kind object;
  #L21a6b4.  v3:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @type ^`int`;
  #L21a6b8.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.length` @type ^`int`;
  #L21a6bc.  v5:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.flags` @type ^`byte` @kind byte;
  #L21a6c0.  call temp:= `frameLog`(v7, v3, v4, v1, v5) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIBB)Ljava/lang/String;` @kind static;
  #L21a6c6.  v3:= temp @kind object;
  #L21a6c8.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L21a6ce.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L21a6d2.  call temp:= `readInt`(v2) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L21a6d8.  v2:= temp;
  #L21a6da.  v3:= 2147483647I;
  #L21a6e0.  v2:= v2 ^& v3 @kind int;
  #L21a6e2.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @type ^`int` := v2;
  #L21a6e6.  v2:= 9I;
  #L21a6ea.  if v1 == v2 then goto L21a70c;
  #L21a6ee.  v2:= "%s != TYPE_CONTINUATION" @kind object;
  #L21a6f2.  v3:= new `java.lang.Object`[v7];
  #L21a6f6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L21a6fc.  v4:= temp @kind object;
  #L21a6fe.  v3[v6]:= v4 @kind object;
  #L21a702.  call temp:= `ioException`(v2, v3) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L21a708.  v2:= temp @kind object;
  #L21a70a.  throw v2;
  #L21a70c.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.streamId` @type ^`int`;
  #L21a710.  if v2 == v0 then goto L21a726;
  #L21a714.  v2:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L21a718.  v3:= new `java.lang.Object`[v6];
  #L21a71c.  call temp:= `ioException`(v2, v3) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L21a722.  v2:= temp @kind object;
  #L21a724.  throw v2;
  #L21a726.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L21a738.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21a74c.  v2:= -1L;
  #L21a750.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int`;
  #L21a754.  if v4 != 0 then goto L21a786;
  #L21a758.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L21a75c.  v5:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.padding` @type ^`short` @kind short;
  #L21a760.  v6:= (`long`) v5 @kind i2l;
  #L21a762.  call `skip`(v4, v6) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L21a768.  v4:= 0I;
  #L21a76a.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.padding` @type ^`short` := v4 @kind char;
  #L21a76e.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.flags` @type ^`byte` @kind byte;
  #L21a772.  v4:= v4 ^& 4;
  #L21a776.  if v4 == 0 then goto L21a77e;
  #L21a77a.  v0:= v2 @kind wide;
  #L21a77c.  return v0 @kind wide;
  #L21a77e.  call `readContinuationHeader`(v8) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.readContinuationHeader:()V` @kind direct;
  #L21a784.  goto L21a750;
  #L21a786.  v4:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L21a78a.  v5:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int`;
  #L21a78e.  v6:= (`long`) v5 @kind i2l;
  #L21a790.  call temp:= `min`(v10, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L21a796.  v6:= temp @kind wide;
  #L21a798.  call temp:= `read`(v4, v9, v6) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L21a79e.  v0:= temp @kind wide;
  #L21a7a0.  v4:= lcmp(v0, v2);
  #L21a7a4.  if v4 != 0 then goto L21a7ac;
  #L21a7a8.  v0:= v2 @kind wide;
  #L21a7aa.  goto L21a77c;
  #L21a7ac.  v2:= v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int`;
  #L21a7b0.  v2:= (`long`) v2 @kind i2l;
  #L21a7b2.  v2:= v2 - v0 @kind long;
  #L21a7b4.  v2:= (`int`) v2 @kind l2i;
  #L21a7b6.  v8.`okhttp3.internal.http2.Http2Reader$ContinuationSource.left` @type ^`int` := v2;
  #L21a7ba.  goto L21a77c;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21a7cc.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L21a7d0.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L21a7d6.  v0:= temp @kind object;
  #L21a7d8.  return v0 @kind object;
}

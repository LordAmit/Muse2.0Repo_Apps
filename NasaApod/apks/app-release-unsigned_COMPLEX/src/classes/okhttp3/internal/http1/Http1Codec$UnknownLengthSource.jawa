record `okhttp3.internal.http1.Http1Codec$UnknownLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http1.Http1Codec$AbstractSource` @kind class {
  `boolean` `okhttp3.internal.http1.Http1Codec$UnknownLengthSource.inputExhausted` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$UnknownLengthSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$UnknownLengthSource` v1 @kind this, `okhttp3.internal.http1.Http1Codec` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L245b64.  v1.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v2 @kind object;
  #L245b68.  v0:= 0I;
  #L245b6a.  call `<init>`(v1, v2, v0) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/internal/http1/Http1Codec$1;)V` @kind direct;
  #L245b70.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$UnknownLengthSource` v2 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L245b84.  v0:= v2.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.closed` @type ^`boolean` @kind boolean;
  #L245b88.  if v0 == 0 then goto L245b8e;
  #L245b8c.  return @kind void;
  #L245b8e.  v0:= v2.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.inputExhausted` @type ^`boolean` @kind boolean;
  #L245b92.  if v0 != 0 then goto L245ba0;
  #L245b96.  v0:= 0I;
  #L245b98.  v1:= 0I;
  #L245b9a.  call `endOfInput`(v2, v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L245ba0.  v0:= 1I;
  #L245ba2.  v2.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L245ba6.  goto L245b8c;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1Codec$UnknownLengthSource` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L245bb8.  v6:= 1I;
  #L245bba.  v2:= -1L;
  #L245bbe.  v4:= 0L;
  #L245bc2.  v4:= lcmp(v10, v4);
  #L245bc6.  if v4 >= 0 then goto L245bfc;
  #L245bca.  v2:= new `java.lang.IllegalArgumentException`;
  #L245bce.  v3:= new `java.lang.StringBuilder`;
  #L245bd2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L245bd8.  v4:= "byteCount < 0: " @kind object;
  #L245bdc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L245be2.  v3:= temp @kind object;
  #L245be4.  call temp:= `append`(v3, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L245bea.  v3:= temp @kind object;
  #L245bec.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L245bf2.  v3:= temp @kind object;
  #L245bf4.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L245bfa.  throw v2;
  #L245bfc.  v4:= v8.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.closed` @type ^`boolean` @kind boolean;
  #L245c00.  if v4 == 0 then goto L245c14;
  #L245c04.  v2:= new `java.lang.IllegalStateException`;
  #L245c08.  v3:= "closed" @kind object;
  #L245c0c.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L245c12.  throw v2;
  #L245c14.  v4:= v8.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.inputExhausted` @type ^`boolean` @kind boolean;
  #L245c18.  if v4 == 0 then goto L245c20;
  #L245c1c.  v0:= v2 @kind wide;
  #L245c1e.  return v0 @kind wide;
  #L245c20.  call temp:= `read`(v8, v9, v10) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L245c26.  v0:= temp @kind wide;
  #L245c28.  v4:= lcmp(v0, v2);
  #L245c2c.  if v4 != 0 then goto L245c1e;
  #L245c30.  v8.`okhttp3.internal.http1.Http1Codec$UnknownLengthSource.inputExhausted` @type ^`boolean` := v6 @kind boolean;
  #L245c34.  v4:= 0I;
  #L245c36.  call `endOfInput`(v8, v6, v4) @signature `Lokhttp3/internal/http1/Http1Codec$UnknownLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L245c3c.  v0:= v2 @kind wide;
  #L245c3e.  goto L245c1e;
}

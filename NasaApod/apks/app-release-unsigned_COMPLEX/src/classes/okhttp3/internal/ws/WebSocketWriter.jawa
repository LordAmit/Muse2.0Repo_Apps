record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketWriter.activeWriter` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.buffer` @AccessFlag FINAL;
  `okhttp3.internal.ws.WebSocketWriter$FrameSink` `okhttp3.internal.ws.WebSocketWriter.frameSink` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.isClient` @AccessFlag FINAL;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketWriter.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.maskKey` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.random` @AccessFlag FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.WebSocketWriter.sink` @AccessFlag FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.writerClosed` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `boolean` v3 @name `isClient`, `okio.BufferedSink` v4 @kind object @name `sink`, `java.util.Random` v5 @kind object @name `random`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ab750.  v1:= 0I;
  #L1ab752.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ab758.  v0:= new `okio.Buffer`;
  #L1ab75c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ab762.  v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ab766.  v0:= new `okhttp3.internal.ws.WebSocketWriter$FrameSink`;
  #L1ab76a.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @kind direct;
  #L1ab770.  v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` := v0 @kind object;
  #L1ab774.  if v4 != 0 then goto L1ab788;
  #L1ab778.  v0:= new `java.lang.NullPointerException`;
  #L1ab77c.  v1:= "sink == null" @kind object;
  #L1ab780.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab786.  throw v0;
  #L1ab788.  if v5 != 0 then goto L1ab79c;
  #L1ab78c.  v0:= new `java.lang.NullPointerException`;
  #L1ab790.  v1:= "random == null" @kind object;
  #L1ab794.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab79a.  throw v0;
  #L1ab79c.  v2.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` := v3 @kind boolean;
  #L1ab7a0.  v2.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` := v4 @kind object;
  #L1ab7a4.  call temp:= `buffer`(v4) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L1ab7aa.  v0:= temp @kind object;
  #L1ab7ac.  v2.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ab7b0.  v2.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` := v5 @kind object;
  #L1ab7b4.  if v3 == 0 then goto L1ab7d6;
  #L1ab7b8.  v0:= 4I;
  #L1ab7ba.  v0:= new `byte`[v0];
  #L1ab7be.  v2.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] := v0 @kind object;
  #L1ab7c2.  if v3 == 0 then goto L1ab7d0;
  #L1ab7c6.  v1:= new `okio.Buffer$UnsafeCursor`;
  #L1ab7ca.  call `<init>`(v1) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1ab7d0.  v2.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v1 @kind object;
  #L1ab7d4.  return @kind void;
  #L1ab7d6.  v0:= v1 @kind object;
  #L1ab7d8.  goto L1ab7be;
}
procedure `void` `writeControlFrame`(`okhttp3.internal.ws.WebSocketWriter` v10 @kind this, `int` v11 @name `opcode`, `okio.ByteString` v12 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ab7ec.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L1ab7f0.  if v3 == 0 then goto L1ab804;
  #L1ab7f4.  v3:= new `java.io.IOException`;
  #L1ab7f8.  v6:= "closed" @kind object;
  #L1ab7fc.  call `<init>`(v3, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab802.  throw v3;
  #L1ab804.  call temp:= `size`(v12) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1ab80a.  v2:= temp;
  #L1ab80c.  v6:= (`long`) v2 @kind i2l;
  #L1ab80e.  v8:= 125L;
  #L1ab812.  v3:= lcmp(v6, v8);
  #L1ab816.  if v3 <= 0 then goto L1ab82a;
  #L1ab81a.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ab81e.  v6:= "Payload size must be less than or equal to 125" @kind object;
  #L1ab822.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab828.  throw v3;
  #L1ab82a.  v0:= v11 ^| 128;
  #L1ab82e.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab832.  call temp:= `writeByte`(v3, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab838.  v1:= v2;
  #L1ab83a.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1ab83e.  if v3 == 0 then goto L1ab8c2;
  #L1ab842.  v1:= v1 ^| 128;
  #L1ab846.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab84a.  call temp:= `writeByte`(v3, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab850.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L1ab854.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab858.  call `nextBytes`(v3, v6) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L1ab85e.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab862.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab866.  call temp:= `write`(v3, v6) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1ab86c.  if v2 <= 0 then goto L1ab8b6;
  #L1ab870.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab874.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ab87a.  v4:= temp @kind wide;
  #L1ab87c.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab880.  call temp:= `write`(v3, v12) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1ab886.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab88a.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab88e.  call temp:= `readAndWriteUnsafe`(v3, v6) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ab894.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab898.  call temp:= `seek`(v3, v4) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ab89e.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab8a2.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ab8a6.  call `toggleMask`(v3, v6) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ab8ac.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab8b0.  call `close`(v3) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ab8b6.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L1ab8ba.  call `flush`(v3) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L1ab8c0.  return @kind void;
  #L1ab8c2.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab8c6.  call temp:= `writeByte`(v3, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab8cc.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab8d0.  call temp:= `write`(v3, v12) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1ab8d6.  goto L1ab8b6;
}
procedure `okio.Sink` `newMessageSink`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `int` v3 @name `formatOpcode`, `long` v4 @name `contentLength`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.newMessageSink:(IJ)Lokio/Sink;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1ab8e8.  v1:= 1I;
  #L1ab8ea.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` @kind boolean;
  #L1ab8ee.  if v0 == 0 then goto L1ab902;
  #L1ab8f2.  v0:= new `java.lang.IllegalStateException`;
  #L1ab8f6.  v1:= "Another message writer is active. Did you call close()?" @kind object;
  #L1ab8fa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab900.  throw v0;
  #L1ab902.  v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v1 @kind boolean;
  #L1ab906.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab90a.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int` := v3;
  #L1ab90e.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab912.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` := v4 @kind wide;
  #L1ab916.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab91a.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v1 @kind boolean;
  #L1ab91e.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab922.  v1:= 0I;
  #L1ab924.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v1 @kind boolean;
  #L1ab928.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1ab92c.  return v0 @kind object;
}
procedure `void` `writeClose`(`okhttp3.internal.ws.WebSocketWriter` v4 @kind this, `int` v5 @name `code`, `okio.ByteString` v6 @kind object @name `reason`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ab940.  v3:= 1I;
  #L1ab942.  v1:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L1ab946.  if v5 != 0 then goto L1ab94e;
  #L1ab94a.  if v6 == 0 then goto L1ab97a;
  #L1ab94e.  if v5 == 0 then goto L1ab958;
  #L1ab952.  call `validateCloseCode`(v5) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind static;
  #L1ab958.  v0:= new `okio.Buffer`;
  #L1ab95c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ab962.  call temp:= `writeShort`(v0, v5) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L1ab968.  if v6 == 0 then goto L1ab972;
  #L1ab96c.  call temp:= `write`(v0, v6) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1ab972.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ab978.  v1:= temp @kind object;
  #L1ab97a.  v2:= 8I;
  #Try_start0.  
  #L1ab97e.  call `writeControlFrame`(v4, v2, v1) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #Try_end0.  
  #L1ab984.  v4.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L1ab988.  return @kind void;
  #L1ab98a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ab98c.  v4.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L1ab990.  throw v2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1ab98a;
}
procedure `void` `writeMessageFrame`(`okhttp3.internal.ws.WebSocketWriter` v6 @kind this, `int` v7 @name `formatOpcode`, `long` v8 @name `byteCount`, `boolean` v10 @name `isFirstFrame`, `boolean` v11 @name `isFinal`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ab9b0.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L1ab9b4.  if v4 == 0 then goto L1ab9c8;
  #L1ab9b8.  v4:= new `java.io.IOException`;
  #L1ab9bc.  v5:= "closed" @kind object;
  #L1ab9c0.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab9c6.  throw v4;
  #L1ab9c8.  if v10 == 0 then goto L1aba8e;
  #L1ab9cc.  v0:= v7;
  #L1ab9ce.  if v11 == 0 then goto L1ab9d6;
  #L1ab9d2.  v0:= v0 ^| 128;
  #L1ab9d6.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab9da.  call temp:= `writeByte`(v4, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ab9e0.  v1:= 0I;
  #L1ab9e2.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1ab9e6.  if v4 == 0 then goto L1ab9ee;
  #L1ab9ea.  v1:= v1 ^| 128;
  #L1ab9ee.  v4:= 125L;
  #L1ab9f2.  v4:= lcmp(v8, v4);
  #L1ab9f6.  if v4 > 0 then goto L1aba92;
  #L1ab9fa.  v4:= (`int`) v8 @kind l2i;
  #L1ab9fc.  v1:= v1 ^| v4 @kind int;
  #L1ab9fe.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1aba02.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1aba08.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1aba0c.  if v4 == 0 then goto L1abad6;
  #L1aba10.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L1aba14.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1aba18.  call `nextBytes`(v4, v5) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L1aba1e.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1aba22.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1aba26.  call temp:= `write`(v4, v5) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1aba2c.  v4:= 0L;
  #L1aba30.  v4:= lcmp(v8, v4);
  #L1aba34.  if v4 <= 0 then goto L1aba82;
  #L1aba38.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1aba3c.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1aba42.  v2:= temp @kind wide;
  #L1aba44.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1aba48.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L1aba4c.  call `write`(v4, v5, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1aba52.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1aba56.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1aba5a.  call temp:= `readAndWriteUnsafe`(v4, v5) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1aba60.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1aba64.  call temp:= `seek`(v4, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1aba6a.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1aba6e.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1aba72.  call `toggleMask`(v4, v5) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1aba78.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1aba7c.  call `close`(v4) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1aba82.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L1aba86.  call temp:= `emit`(v4) @signature `Lokio/BufferedSink;.emit:()Lokio/BufferedSink;` @kind interface;
  #L1aba8c.  return @kind void;
  #L1aba8e.  v0:= 0I;
  #L1aba90.  goto L1ab9ce;
  #L1aba92.  v4:= 65535L;
  #L1aba98.  v4:= lcmp(v8, v4);
  #L1aba9c.  if v4 > 0 then goto L1ababc;
  #L1abaa0.  v1:= v1 ^| 126;
  #L1abaa4.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1abaa8.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1abaae.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1abab2.  v5:= (`int`) v8 @kind l2i;
  #L1abab4.  call temp:= `writeShort`(v4, v5) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L1ababa.  goto L1aba08;
  #L1ababc.  v1:= v1 ^| 127;
  #L1abac0.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1abac4.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1abaca.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1abace.  call temp:= `writeLong`(v4, v8) @signature `Lokio/Buffer;.writeLong:(J)Lokio/Buffer;` @kind virtual;
  #L1abad4.  goto L1aba08;
  #L1abad6.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1abada.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L1abade.  call `write`(v4, v5, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1abae4.  goto L1aba82;
}
procedure `void` `writePing`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L1abaf8.  v0:= 9I;
  #L1abafc.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L1abb02.  return @kind void;
}
procedure `void` `writePong`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L1abb14.  v0:= 10I;
  #L1abb18.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L1abb1e.  return @kind void;
}

record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketReader.closed` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.frameCallback` @AccessFlag FINAL;
  `long` `okhttp3.internal.ws.WebSocketReader.frameLength` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isClient` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isControlFrame` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isFinalFrame` @AccessFlag ;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketReader.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskKey` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.ws.WebSocketReader.opcode` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v2 @kind this, `boolean` v3 @name `isClient`, `okio.BufferedSource` v4 @kind object @name `source`, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v5 @kind object @name `frameCallback`) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ab110.  v1:= 0I;
  #L1ab112.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ab118.  v0:= new `okio.Buffer`;
  #L1ab11c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ab122.  v2.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ab126.  v0:= new `okio.Buffer`;
  #L1ab12a.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ab130.  v2.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ab134.  if v4 != 0 then goto L1ab148;
  #L1ab138.  v0:= new `java.lang.NullPointerException`;
  #L1ab13c.  v1:= "source == null" @kind object;
  #L1ab140.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab146.  throw v0;
  #L1ab148.  if v5 != 0 then goto L1ab15c;
  #L1ab14c.  v0:= new `java.lang.NullPointerException`;
  #L1ab150.  v1:= "frameCallback == null" @kind object;
  #L1ab154.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab15a.  throw v0;
  #L1ab15c.  v2.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` := v3 @kind boolean;
  #L1ab160.  v2.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` := v4 @kind object;
  #L1ab164.  v2.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v5 @kind object;
  #L1ab168.  if v3 == 0 then goto L1ab17c;
  #L1ab16c.  v0:= v1 @kind object;
  #L1ab16e.  v2.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] := v0 @kind object;
  #L1ab172.  if v3 == 0 then goto L1ab184;
  #L1ab176.  v2.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v1 @kind object;
  #L1ab17a.  return @kind void;
  #L1ab17c.  v0:= 4I;
  #L1ab17e.  v0:= new `byte`[v0];
  #L1ab182.  goto L1ab16e;
  #L1ab184.  v1:= new `okio.Buffer$UnsafeCursor`;
  #L1ab188.  call `<init>`(v1) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1ab18e.  goto L1ab176;
}
procedure `void` `readControlFrame`(`okhttp3.internal.ws.WebSocketReader` v12 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ab1a0.  v10:= 0L;
  #L1ab1a4.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab1a8.  v5:= lcmp(v6, v10);
  #L1ab1ac.  if v5 <= 0 then goto L1ab1fa;
  #L1ab1b0.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab1b4.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab1b8.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab1bc.  call `readFully`(v5, v6, v8) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1ab1c2.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ab1c6.  if v5 != 0 then goto L1ab1fa;
  #L1ab1ca.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab1ce.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab1d2.  call temp:= `readAndWriteUnsafe`(v5, v6) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ab1d8.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab1dc.  call temp:= `seek`(v5, v10) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ab1e2.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab1e6.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ab1ea.  call `toggleMask`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ab1f0.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab1f4.  call `close`(v5) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ab1fa.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ab1fe.  goto L1ab2ec;
  #L1ab204.  v5:= new `java.net.ProtocolException`;
  #L1ab208.  v6:= new `java.lang.StringBuilder`;
  #L1ab20c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab212.  v7:= "Unknown control opcode: " @kind object;
  #L1ab216.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab21c.  v6:= temp @kind object;
  #L1ab21e.  v7:= v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ab222.  call temp:= `toHexString`(v7) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ab228.  v7:= temp @kind object;
  #L1ab22a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab230.  v6:= temp @kind object;
  #L1ab232.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab238.  v6:= temp @kind object;
  #L1ab23a.  call `<init>`(v5, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab240.  throw v5;
  #L1ab242.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ab246.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab24a.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ab250.  v6:= temp @kind object;
  #L1ab252.  call `onReadPing`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L1ab258.  return @kind void;
  #L1ab25a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ab25e.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab262.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ab268.  v6:= temp @kind object;
  #L1ab26a.  call `onReadPong`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L1ab270.  goto L1ab258;
  #L1ab272.  v2:= 1005I;
  #L1ab276.  v4:= "" @kind object;
  #L1ab27a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab27e.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ab284.  v0:= temp @kind wide;
  #L1ab286.  v6:= 1L;
  #L1ab28a.  v5:= lcmp(v0, v6);
  #L1ab28e.  if v5 != 0 then goto L1ab2a2;
  #L1ab292.  v5:= new `java.net.ProtocolException`;
  #L1ab296.  v6:= "Malformed close payload length of 1." @kind object;
  #L1ab29a.  call `<init>`(v5, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab2a0.  throw v5;
  #L1ab2a2.  v5:= lcmp(v0, v10);
  #L1ab2a6.  if v5 == 0 then goto L1ab2da;
  #L1ab2aa.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab2ae.  call temp:= `readShort`(v5) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L1ab2b4.  v2:= temp;
  #L1ab2b6.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab2ba.  call temp:= `readUtf8`(v5) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1ab2c0.  v4:= temp @kind object;
  #L1ab2c2.  call temp:= `closeCodeExceptionMessage`(v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L1ab2c8.  v3:= temp @kind object;
  #L1ab2ca.  if v3 == 0 then goto L1ab2da;
  #L1ab2ce.  v5:= new `java.net.ProtocolException`;
  #L1ab2d2.  call `<init>`(v5, v3) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab2d8.  throw v5;
  #L1ab2da.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ab2de.  call `onReadClose`(v5, v2, v4) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L1ab2e4.  v5:= 1I;
  #L1ab2e6.  v12.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` := v5 @kind boolean;
  #L1ab2ea.  goto L1ab258;
  #L1ab2ec.  switch v5
                  | 8 => goto L1ab272
                  | 9 => goto L1ab242
                  | 10 => goto L1ab25a
                  | else => goto L1ab204;
}
procedure `void` `readHeader`(`okhttp3.internal.ws.WebSocketReader` v12 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ab310.  v9:= 1I;
  #L1ab312.  v10:= 0I;
  #L1ab314.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ab318.  if v8 == 0 then goto L1ab32c;
  #L1ab31c.  v8:= new `java.io.IOException`;
  #L1ab320.  v9:= "closed" @kind object;
  #L1ab324.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab32a.  throw v8;
  #L1ab32c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab330.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ab336.  v8:= temp @kind object;
  #L1ab338.  call temp:= `timeoutNanos`(v8) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1ab33e.  v6:= temp @kind wide;
  #L1ab340.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab344.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ab34a.  v8:= temp @kind object;
  #L1ab34c.  call temp:= `clearTimeout`(v8) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #Try_start0.  
  #L1ab352.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab356.  call temp:= `readByte`(v8) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #Try_end0.  
  #L1ab35c.  v8:= temp;
  #L1ab35e.  v0:= v8 ^& 255;
  #L1ab362.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab366.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ab36c.  v8:= temp @kind object;
  #L1ab36e.  v11:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ab372.  call temp:= `timeout`(v8, v6, v11) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1ab378.  v8:= v0 ^& 15;
  #L1ab37c.  v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int` := v8;
  #L1ab380.  v8:= v0 ^& 128;
  #L1ab384.  if v8 == 0 then goto L1ab3d6;
  #L1ab388.  v8:= v9;
  #L1ab38a.  v12.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` := v8 @kind boolean;
  #L1ab38e.  v8:= v0 ^& 8;
  #L1ab392.  if v8 == 0 then goto L1ab3da;
  #L1ab396.  v8:= v9;
  #L1ab398.  v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` := v8 @kind boolean;
  #L1ab39c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ab3a0.  if v8 == 0 then goto L1ab3de;
  #L1ab3a4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L1ab3a8.  if v8 != 0 then goto L1ab3de;
  #L1ab3ac.  v8:= new `java.net.ProtocolException`;
  #L1ab3b0.  v9:= "Control frames must be final." @kind object;
  #L1ab3b4.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab3ba.  throw v8;
  #L1ab3bc.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ab3be.  v9:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab3c2.  call temp:= `timeout`(v9) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ab3c8.  v9:= temp @kind object;
  #L1ab3ca.  v10:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ab3ce.  call temp:= `timeout`(v9, v6, v10) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1ab3d4.  throw v8;
  #L1ab3d6.  v8:= v10;
  #L1ab3d8.  goto L1ab38a;
  #L1ab3da.  v8:= v10;
  #L1ab3dc.  goto L1ab398;
  #L1ab3de.  v8:= v0 ^& 64;
  #L1ab3e2.  if v8 == 0 then goto L1ab418;
  #L1ab3e6.  v3:= v9;
  #L1ab3e8.  v8:= v0 ^& 32;
  #L1ab3ec.  if v8 == 0 then goto L1ab41c;
  #L1ab3f0.  v4:= v9;
  #L1ab3f2.  v8:= v0 ^& 16;
  #L1ab3f6.  if v8 == 0 then goto L1ab420;
  #L1ab3fa.  v5:= v9;
  #L1ab3fc.  if v3 != 0 then goto L1ab408;
  #L1ab400.  if v4 != 0 then goto L1ab408;
  #L1ab404.  if v5 == 0 then goto L1ab424;
  #L1ab408.  v8:= new `java.net.ProtocolException`;
  #L1ab40c.  v9:= "Reserved flags are unsupported." @kind object;
  #L1ab410.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab416.  throw v8;
  #L1ab418.  v3:= v10;
  #L1ab41a.  goto L1ab3e8;
  #L1ab41c.  v4:= v10;
  #L1ab41e.  goto L1ab3f2;
  #L1ab420.  v5:= v10;
  #L1ab422.  goto L1ab3fc;
  #L1ab424.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab428.  call temp:= `readByte`(v8) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1ab42e.  v8:= temp;
  #L1ab430.  v1:= v8 ^& 255;
  #L1ab434.  v8:= v1 ^& 128;
  #L1ab438.  if v8 == 0 then goto L1ab45e;
  #L1ab43c.  v2:= v9;
  #L1ab43e.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ab442.  if v2 != v8 then goto L1ab468;
  #L1ab446.  v9:= new `java.net.ProtocolException`;
  #L1ab44a.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ab44e.  if v8 == 0 then goto L1ab462;
  #L1ab452.  v8:= "Server-sent frames must not be masked." @kind object;
  #L1ab456.  call `<init>`(v9, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab45c.  throw v9;
  #L1ab45e.  v2:= v10;
  #L1ab460.  goto L1ab43e;
  #L1ab462.  v8:= "Client-sent frames must be masked." @kind object;
  #L1ab466.  goto L1ab456;
  #L1ab468.  v8:= v1 ^& 127;
  #L1ab46c.  v8:= (`long`) v8 @kind i2l;
  #L1ab46e.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ab472.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab476.  v10:= 126L;
  #L1ab47a.  v8:= lcmp(v8, v10);
  #L1ab47e.  if v8 != 0 then goto L1ab4c4;
  #L1ab482.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab486.  call temp:= `readShort`(v8) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L1ab48c.  v8:= temp;
  #L1ab48e.  v8:= (`long`) v8 @kind i2l;
  #L1ab490.  v10:= 65535L;
  #L1ab496.  v8:= v8 ^& v10 @kind long;
  #L1ab498.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ab49c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ab4a0.  if v8 == 0 then goto L1ab53e;
  #L1ab4a4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab4a8.  v10:= 125L;
  #L1ab4ac.  v8:= lcmp(v8, v10);
  #L1ab4b0.  if v8 <= 0 then goto L1ab53e;
  #L1ab4b4.  v8:= new `java.net.ProtocolException`;
  #L1ab4b8.  v9:= "Control frame must be less than 125B." @kind object;
  #L1ab4bc.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab4c2.  throw v8;
  #L1ab4c4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab4c8.  v10:= 127L;
  #L1ab4cc.  v8:= lcmp(v8, v10);
  #L1ab4d0.  if v8 != 0 then goto L1ab49c;
  #L1ab4d4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab4d8.  call temp:= `readLong`(v8) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L1ab4de.  v8:= temp @kind wide;
  #L1ab4e0.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ab4e4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab4e8.  v10:= 0L;
  #L1ab4ec.  v8:= lcmp(v8, v10);
  #L1ab4f0.  if v8 >= 0 then goto L1ab49c;
  #L1ab4f4.  v8:= new `java.net.ProtocolException`;
  #L1ab4f8.  v9:= new `java.lang.StringBuilder`;
  #L1ab4fc.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab502.  v10:= "Frame length 0x" @kind object;
  #L1ab506.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab50c.  v9:= temp @kind object;
  #L1ab50e.  v10:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab512.  call temp:= `toHexString`(v10) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L1ab518.  v10:= temp @kind object;
  #L1ab51a.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab520.  v9:= temp @kind object;
  #L1ab522.  v10:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L1ab526.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab52c.  v9:= temp @kind object;
  #L1ab52e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab534.  v9:= temp @kind object;
  #L1ab536.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab53c.  throw v8;
  #L1ab53e.  if v2 == 0 then goto L1ab550;
  #L1ab542.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab546.  v9:= v12.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ab54a.  call `readFully`(v8, v9) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L1ab550.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1ab3bc;
}
procedure `void` `readMessage`(`okhttp3.internal.ws.WebSocketReader` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ab570.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ab574.  if v0 == 0 then goto L1ab588;
  #L1ab578.  v0:= new `java.io.IOException`;
  #L1ab57c.  v1:= "closed" @kind object;
  #L1ab580.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab586.  throw v0;
  #L1ab588.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab58c.  v2:= 0L;
  #L1ab590.  v0:= lcmp(v0, v2);
  #L1ab594.  if v0 <= 0 then goto L1ab5f4;
  #L1ab598.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ab59c.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab5a0.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab5a4.  call `readFully`(v0, v1, v2) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1ab5aa.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ab5ae.  if v0 != 0 then goto L1ab5f4;
  #L1ab5b2.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab5b6.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab5ba.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ab5c0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab5c4.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab5c8.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ab5ce.  v2:= temp @kind wide;
  #L1ab5d0.  v4:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ab5d4.  v2:= v2 - v4 @kind long;
  #L1ab5d6.  call temp:= `seek`(v0, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ab5dc.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab5e0.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ab5e4.  call `toggleMask`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ab5ea.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ab5ee.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ab5f4.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L1ab5f8.  if v0 == 0 then goto L1ab5fe;
  #L1ab5fc.  return @kind void;
  #L1ab5fe.  call `readUntilNonControlFrame`(v6) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @kind direct;
  #L1ab604.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ab608.  if v0 == 0 then goto L1ab570;
  #L1ab60c.  v0:= new `java.net.ProtocolException`;
  #L1ab610.  v1:= new `java.lang.StringBuilder`;
  #L1ab614.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab61a.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L1ab61e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab624.  v1:= temp @kind object;
  #L1ab626.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ab62a.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ab630.  v2:= temp @kind object;
  #L1ab632.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab638.  v1:= temp @kind object;
  #L1ab63a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab640.  v1:= temp @kind object;
  #L1ab642.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab648.  throw v0;
}
procedure `void` `readMessageFrame`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ab65c.  v2:= 1I;
  #L1ab65e.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ab662.  if v0 == v2 then goto L1ab6a6;
  #L1ab666.  v1:= 2I;
  #L1ab668.  if v0 == v1 then goto L1ab6a6;
  #L1ab66c.  v1:= new `java.net.ProtocolException`;
  #L1ab670.  v2:= new `java.lang.StringBuilder`;
  #L1ab674.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ab67a.  v3:= "Unknown opcode: " @kind object;
  #L1ab67e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab684.  v2:= temp @kind object;
  #L1ab686.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ab68c.  v3:= temp @kind object;
  #L1ab68e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ab694.  v2:= temp @kind object;
  #L1ab696.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ab69c.  v2:= temp @kind object;
  #L1ab69e.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ab6a4.  throw v1;
  #L1ab6a6.  call `readMessage`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @kind direct;
  #L1ab6ac.  if v0 != v2 then goto L1ab6c8;
  #L1ab6b0.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ab6b4.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab6b8.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1ab6be.  v2:= temp @kind object;
  #L1ab6c0.  call `onReadMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L1ab6c6.  return @kind void;
  #L1ab6c8.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ab6cc.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ab6d0.  call temp:= `readByteString`(v2) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ab6d6.  v2:= temp @kind object;
  #L1ab6d8.  call `onReadMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L1ab6de.  goto L1ab6c6;
}
procedure `void` `readUntilNonControlFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ab6f0.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ab6f4.  if v0 != 0 then goto L1ab706;
  #L1ab6f8.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L1ab6fe.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ab702.  if v0 != 0 then goto L1ab708;
  #L1ab706.  return @kind void;
  #L1ab708.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L1ab70e.  goto L1ab6f0;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag  {
    temp;
    v0;

  #L1ab720.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L1ab726.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ab72a.  if v0 == 0 then goto L1ab736;
  #L1ab72e.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L1ab734.  return @kind void;
  #L1ab736.  call `readMessageFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @kind direct;
  #L1ab73c.  goto L1ab734;
}

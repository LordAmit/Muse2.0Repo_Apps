record `okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @AccessFlag ;
  `long` `okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @AccessFlag ;
  `int` `okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @AccessFlag ;
  `okhttp3.internal.ws.WebSocketWriter` `okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v0 @kind this, `okhttp3.internal.ws.WebSocketWriter` v1 @kind object @name `this$0`) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21d458.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` := v1 @kind object;
  #L21d45c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21d462.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21d474.  v5:= 1I;
  #L21d476.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21d47a.  if v0 == 0 then goto L21d48e;
  #L21d47e.  v0:= new `java.io.IOException`;
  #L21d482.  v1:= "closed" @kind object;
  #L21d486.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21d48c.  throw v0;
  #L21d48e.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d492.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21d496.  v2:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d49a.  v2:= v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21d49e.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21d4a4.  v2:= temp @kind wide;
  #L21d4a6.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21d4aa.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21d4b0.  v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v5 @kind boolean;
  #L21d4b4.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d4b8.  v1:= 0I;
  #L21d4ba.  v0.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v1 @kind boolean;
  #L21d4be.  return @kind void;
}
procedure `void` `flush`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21d4d0.  v5:= 0I;
  #L21d4d2.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21d4d6.  if v0 == 0 then goto L21d4ea;
  #L21d4da.  v0:= new `java.io.IOException`;
  #L21d4de.  v1:= "closed" @kind object;
  #L21d4e2.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21d4e8.  throw v0;
  #L21d4ea.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d4ee.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21d4f2.  v2:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d4f6.  v2:= v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21d4fa.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21d500.  v2:= temp @kind wide;
  #L21d502.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21d506.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21d50c.  v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v5 @kind boolean;
  #L21d510.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21d524.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d528.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L21d52c.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L21d532.  v0:= temp @kind object;
  #L21d534.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v12 @kind this, `okio.Buffer` v13 @kind object @name `source`, `long` v14 @name `byteCount`) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L21d548.  v5:= 0I;
  #L21d54a.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21d54e.  if v0 == 0 then goto L21d562;
  #L21d552.  v0:= new `java.io.IOException`;
  #L21d556.  v1:= "closed" @kind object;
  #L21d55a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21d560.  throw v0;
  #L21d562.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d566.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21d56a.  call `write`(v0, v13, v14) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L21d570.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21d574.  if v0 == 0 then goto L21d5e4;
  #L21d578.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` @kind wide;
  #L21d57c.  v8:= -1L;
  #L21d580.  v0:= lcmp(v0, v8);
  #L21d584.  if v0 == 0 then goto L21d5e4;
  #L21d588.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d58c.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21d590.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21d596.  v0:= temp @kind wide;
  #L21d598.  v8:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` @kind wide;
  #L21d59c.  v10:= 8192L;
  #L21d5a0.  v8:= v8 - v10 @kind long;
  #L21d5a2.  v0:= lcmp(v0, v8);
  #L21d5a6.  if v0 <= 0 then goto L21d5e4;
  #L21d5aa.  v6:= 1I;
  #L21d5ac.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d5b0.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21d5b4.  call temp:= `completeSegmentByteCount`(v0) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L21d5ba.  v2:= temp @kind wide;
  #L21d5bc.  v0:= 0L;
  #L21d5c0.  v0:= lcmp(v2, v0);
  #L21d5c4.  if v0 <= 0 then goto L21d5e2;
  #L21d5c8.  if v6 != 0 then goto L21d5e2;
  #L21d5cc.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21d5d0.  v1:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21d5d4.  v4:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21d5d8.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21d5de.  v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v5 @kind boolean;
  #L21d5e2.  return @kind void;
  #L21d5e4.  v6:= v5;
  #L21d5e6.  goto L21d5ac;
}

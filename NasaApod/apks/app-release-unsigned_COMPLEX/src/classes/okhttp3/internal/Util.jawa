record `okhttp3.internal.Util` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.RequestBody` `@@okhttp3.internal.Util.EMPTY_REQUEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ResponseBody` `@@okhttp3.internal.Util.EMPTY_RESPONSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.ISO_8859_1` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@okhttp3.internal.Util.NATURAL_ORDER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@okhttp3.internal.Util.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_8_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L19dfd8.  v2:= 0I;
  #L19dfda.  v1:= 0I;
  #L19dfdc.  v0:= new `byte`[v1];
  #L19dfe0.  `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v0 @kind object;
  #L19dfe4.  v0:= new `java.lang.String`[v1];
  #L19dfe8.  `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @type ^`java.lang.String`[] := v0 @kind object;
  #L19dfec.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L19dff0.  call temp:= `create`(v2, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @kind static;
  #L19dff6.  v0:= temp @kind object;
  #L19dff8.  `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L19dffc.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L19e000.  call temp:= `create`(v2, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L19e006.  v0:= temp @kind object;
  #L19e008.  `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19e00c.  v0:= "efbbbf" @kind object;
  #L19e010.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19e016.  v0:= temp @kind object;
  #L19e018.  `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19e01c.  v0:= "feff" @kind object;
  #L19e020.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19e026.  v0:= temp @kind object;
  #L19e028.  `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19e02c.  v0:= "fffe" @kind object;
  #L19e030.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19e036.  v0:= temp @kind object;
  #L19e038.  `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19e03c.  v0:= "0000ffff" @kind object;
  #L19e040.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19e046.  v0:= temp @kind object;
  #L19e048.  `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19e04c.  v0:= "ffff0000" @kind object;
  #L19e050.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19e056.  v0:= temp @kind object;
  #L19e058.  `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19e05c.  v0:= "UTF-8" @kind object;
  #L19e060.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19e066.  v0:= temp @kind object;
  #L19e068.  `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19e06c.  v0:= "ISO-8859-1" @kind object;
  #L19e070.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19e076.  v0:= temp @kind object;
  #L19e078.  `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19e07c.  v0:= "UTF-16BE" @kind object;
  #L19e080.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19e086.  v0:= temp @kind object;
  #L19e088.  `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19e08c.  v0:= "UTF-16LE" @kind object;
  #L19e090.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19e096.  v0:= temp @kind object;
  #L19e098.  `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19e09c.  v0:= "UTF-32BE" @kind object;
  #L19e0a0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19e0a6.  v0:= temp @kind object;
  #L19e0a8.  `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19e0ac.  v0:= "UTF-32LE" @kind object;
  #L19e0b0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19e0b6.  v0:= temp @kind object;
  #L19e0b8.  `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19e0bc.  v0:= "GMT" @kind object;
  #L19e0c0.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L19e0c6.  v0:= temp @kind object;
  #L19e0c8.  `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` := v0 @kind object;
  #L19e0cc.  v0:= new `okhttp3.internal.Util$1`;
  #L19e0d0.  call `<init>`(v0) @signature `Lokhttp3/internal/Util$1;.<init>:()V` @kind direct;
  #L19e0d6.  `@@okhttp3.internal.Util.NATURAL_ORDER` @type ^`java.util.Comparator` := v0 @kind object;
  #L19e0da.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L19e0de.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19e0e4.  v0:= temp @kind object;
  #L19e0e6.  `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19e0ea.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.Util` v0 @kind this) @signature `Lokhttp3/internal/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19e0fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19e102.  return @kind void;
}
procedure `java.lang.AssertionError` `assertionError`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Exception` v3 @kind object @name `e`) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19e114.  v0:= new `java.lang.AssertionError`;
  #L19e118.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #Try_start0.  
  #L19e11e.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #Try_end0.  
  #L19e124.  return v0 @kind object;
  #L19e126.  v1:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #L19e128.  goto L19e124;
  catch `java.lang.IllegalStateException` @[Try_start0..Try_end0] goto L19e126;
}
procedure `java.nio.charset.Charset` `bomAwareCharset`(`okio.BufferedSource` v4 @kind object @name `source`, `java.nio.charset.Charset` v5 @kind object @name `charset`) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19e14c.  v2:= 0L;
  #L19e150.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L19e154.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19e15a.  v0:= temp;
  #L19e15c.  if v0 == 0 then goto L19e17a;
  #L19e160.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L19e164.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19e16a.  v0:= temp;
  #L19e16c.  v0:= (`long`) v0 @kind i2l;
  #L19e16e.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19e174.  v5:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19e178.  return v5 @kind object;
  #L19e17a.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19e17e.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19e184.  v0:= temp;
  #L19e186.  if v0 == 0 then goto L19e1a4;
  #L19e18a.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19e18e.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19e194.  v0:= temp;
  #L19e196.  v0:= (`long`) v0 @kind i2l;
  #L19e198.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19e19e.  v5:= `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L19e1a2.  goto L19e178;
  #L19e1a4.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19e1a8.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19e1ae.  v0:= temp;
  #L19e1b0.  if v0 == 0 then goto L19e1ce;
  #L19e1b4.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19e1b8.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19e1be.  v0:= temp;
  #L19e1c0.  v0:= (`long`) v0 @kind i2l;
  #L19e1c2.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19e1c8.  v5:= `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L19e1cc.  goto L19e178;
  #L19e1ce.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19e1d2.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19e1d8.  v0:= temp;
  #L19e1da.  if v0 == 0 then goto L19e1f8;
  #L19e1de.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19e1e2.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19e1e8.  v0:= temp;
  #L19e1ea.  v0:= (`long`) v0 @kind i2l;
  #L19e1ec.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19e1f2.  v5:= `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L19e1f6.  goto L19e178;
  #L19e1f8.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19e1fc.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19e202.  v0:= temp;
  #L19e204.  if v0 == 0 then goto L19e178;
  #L19e208.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19e20c.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19e212.  v0:= temp;
  #L19e214.  v0:= (`long`) v0 @kind i2l;
  #L19e216.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19e21c.  v5:= `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L19e220.  goto L19e178;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v7 @kind object @name `host`) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19e234.  v4:= 0I;
  #L19e236.  v5:= ":" @kind object;
  #L19e23a.  call temp:= `contains`(v7, v5) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19e240.  v5:= temp;
  #L19e242.  if v5 == 0 then goto L19e2f2;
  #L19e246.  v5:= "[" @kind object;
  #L19e24a.  call temp:= `startsWith`(v7, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19e250.  v5:= temp;
  #L19e252.  if v5 == 0 then goto L19e284;
  #L19e256.  v5:= "]" @kind object;
  #L19e25a.  call temp:= `endsWith`(v7, v5) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19e260.  v5:= temp;
  #L19e262.  if v5 == 0 then goto L19e284;
  #L19e266.  v5:= 1I;
  #L19e268.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19e26e.  v6:= temp;
  #L19e270.  v6:= v6 + -1;
  #L19e274.  call temp:= `decodeIpv6`(v7, v5, v6) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L19e27a.  v2:= temp @kind object;
  #L19e27c.  if v2 != 0 then goto L19e298;
  #L19e280.  v3:= v4 @kind object;
  #L19e282.  return v3 @kind object;
  #L19e284.  v5:= 0I;
  #L19e286.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19e28c.  v6:= temp;
  #L19e28e.  call temp:= `decodeIpv6`(v7, v5, v6) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L19e294.  v2:= temp @kind object;
  #L19e296.  goto L19e27c;
  #L19e298.  call temp:= `getAddress`(v2) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L19e29e.  v0:= temp @kind object;
  #L19e2a0.  v4:= length @variable v0;
  #L19e2a2.  v5:= 16I;
  #L19e2a6.  if v4 != v5 then goto L19e2b4;
  #L19e2aa.  call temp:= `inet6AddressToAscii`(v0) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @kind static;
  #L19e2b0.  v3:= temp @kind object;
  #L19e2b2.  goto L19e282;
  #L19e2b4.  v4:= new `java.lang.AssertionError`;
  #L19e2b8.  v5:= new `java.lang.StringBuilder`;
  #L19e2bc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e2c2.  v6:= "Invalid IPv6 address: '" @kind object;
  #L19e2c6.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e2cc.  v5:= temp @kind object;
  #L19e2ce.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e2d4.  v5:= temp @kind object;
  #L19e2d6.  v6:= "'" @kind object;
  #L19e2da.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e2e0.  v5:= temp @kind object;
  #L19e2e2.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e2e8.  v5:= temp @kind object;
  #L19e2ea.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L19e2f0.  throw v4;
  #Try_start0.  
  #L19e2f2.  call temp:= `toASCII`(v7) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19e2f8.  v5:= temp @kind object;
  #L19e2fa.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19e2fe.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19e304.  v3:= temp @kind object;
  #L19e306.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19e30c.  v5:= temp;
  #L19e30e.  if v5 == 0 then goto L19e316;
  #L19e312.  v3:= v4 @kind object;
  #L19e314.  goto L19e282;
  #L19e316.  call temp:= `containsInvalidHostnameAsciiCodes`(v3) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @kind static;
  #Try_end0.  
  #L19e31c.  v5:= temp;
  #L19e31e.  if v5 == 0 then goto L19e282;
  #L19e322.  v3:= v4 @kind object;
  #L19e324.  goto L19e282;
  #L19e326.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L19e328.  v3:= v4 @kind object;
  #L19e32a.  goto L19e282;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L19e326;
}
procedure `int` `checkDuration`(`java.lang.String` v7 @kind object @name `name`, `long` v8 @name `duration`, `java.util.concurrent.TimeUnit` v10 @kind object @name `unit`) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19e34c.  v4:= 0L;
  #L19e350.  v2:= lcmp(v8, v4);
  #L19e354.  if v2 >= 0 then goto L19e38a;
  #L19e358.  v2:= new `java.lang.IllegalArgumentException`;
  #L19e35c.  v3:= new `java.lang.StringBuilder`;
  #L19e360.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e366.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e36c.  v3:= temp @kind object;
  #L19e36e.  v4:= " < 0" @kind object;
  #L19e372.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e378.  v3:= temp @kind object;
  #L19e37a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e380.  v3:= temp @kind object;
  #L19e382.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19e388.  throw v2;
  #L19e38a.  if v10 != 0 then goto L19e39e;
  #L19e38e.  v2:= new `java.lang.NullPointerException`;
  #L19e392.  v3:= "unit == null" @kind object;
  #L19e396.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19e39c.  throw v2;
  #L19e39e.  call temp:= `toMillis`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19e3a4.  v0:= temp @kind wide;
  #L19e3a6.  v2:= 2147483647L;
  #L19e3ac.  v2:= lcmp(v0, v2);
  #L19e3b0.  if v2 <= 0 then goto L19e3e6;
  #L19e3b4.  v2:= new `java.lang.IllegalArgumentException`;
  #L19e3b8.  v3:= new `java.lang.StringBuilder`;
  #L19e3bc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e3c2.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e3c8.  v3:= temp @kind object;
  #L19e3ca.  v4:= " too large." @kind object;
  #L19e3ce.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e3d4.  v3:= temp @kind object;
  #L19e3d6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e3dc.  v3:= temp @kind object;
  #L19e3de.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19e3e4.  throw v2;
  #L19e3e6.  v2:= lcmp(v0, v4);
  #L19e3ea.  if v2 != 0 then goto L19e428;
  #L19e3ee.  v2:= lcmp(v8, v4);
  #L19e3f2.  if v2 <= 0 then goto L19e428;
  #L19e3f6.  v2:= new `java.lang.IllegalArgumentException`;
  #L19e3fa.  v3:= new `java.lang.StringBuilder`;
  #L19e3fe.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e404.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e40a.  v3:= temp @kind object;
  #L19e40c.  v4:= " too small." @kind object;
  #L19e410.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e416.  v3:= temp @kind object;
  #L19e418.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e41e.  v3:= temp @kind object;
  #L19e420.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19e426.  throw v2;
  #L19e428.  v2:= (`int`) v0 @kind l2i;
  #L19e42a.  return v2;
}
procedure `void` `checkOffsetAndCount`(`long` v4 @name `arrayLength`, `long` v6 @name `offset`, `long` v8 @name `count`) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19e43c.  v0:= v6 ^| v8 @kind long;
  #L19e440.  v2:= 0L;
  #L19e444.  v0:= lcmp(v0, v2);
  #L19e448.  if v0 < 0 then goto L19e460;
  #L19e44c.  v0:= lcmp(v6, v4);
  #L19e450.  if v0 > 0 then goto L19e460;
  #L19e454.  v0:= v4 - v6 @kind long;
  #L19e458.  v0:= lcmp(v0, v8);
  #L19e45c.  if v0 >= 0 then goto L19e46c;
  #L19e460.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L19e464.  call `<init>`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19e46a.  throw v0;
  #L19e46c.  return @kind void;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v2 @kind object @name `closeable`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19e480.  if v2 == 0 then goto L19e48a;
  #Try_start0.  
  #L19e484.  call `close`(v2) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #Try_end0.  
  #L19e48a.  return @kind void;
  #L19e48c.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19e48e.  throw v0;
  #L19e490.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19e492.  goto L19e48a;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19e48c;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19e490;
}
procedure `void` `closeQuietly`(`java.net.ServerSocket` v2 @kind object @name `serverSocket`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/ServerSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19e4b4.  if v2 == 0 then goto L19e4be;
  #Try_start0.  
  #L19e4b8.  call `close`(v2) @signature `Ljava/net/ServerSocket;.close:()V` @kind virtual;
  #Try_end0.  
  #L19e4be.  return @kind void;
  #L19e4c0.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19e4c2.  throw v0;
  #L19e4c4.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19e4c6.  goto L19e4be;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19e4c0;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19e4c4;
}
procedure `void` `closeQuietly`(`java.net.Socket` v3 @kind object @name `socket`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e4e8.  if v3 == 0 then goto L19e4f2;
  #Try_start0.  
  #L19e4ec.  call `close`(v3) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end0.  
  #L19e4f2.  return @kind void;
  #L19e4f4.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L19e4f6.  call temp:= `isAndroidGetsocknameError`(v0) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L19e4fc.  v2:= temp;
  #L19e4fe.  if v2 != 0 then goto L19e4f2;
  #L19e502.  throw v0;
  #L19e504.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19e506.  throw v1;
  #L19e508.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L19e50a.  goto L19e4f2;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L19e4f4;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19e504;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19e508;
}
procedure `java.lang.String`[] `concat`(`java.lang.String`[] v3 @kind object @name `array`, `java.lang.String` v4 @kind object @name `value`) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e530.  v2:= 0I;
  #L19e532.  v1:= length @variable v3;
  #L19e534.  v1:= v1 + 1;
  #L19e538.  v0:= new `java.lang.String`[v1];
  #L19e53c.  v1:= length @variable v3;
  #L19e53e.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19e544.  v1:= length @variable v0;
  #L19e546.  v1:= v1 + -1;
  #L19e54a.  v0[v1]:= v4 @kind object;
  #L19e54e.  return v0 @kind object;
}
procedure `boolean` `containsInvalidHostnameAsciiCodes`(`java.lang.String` v5 @kind object @name `hostnameAscii`) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19e560.  v2:= 1I;
  #L19e562.  v1:= 0I;
  #L19e564.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19e56a.  v3:= temp;
  #L19e56c.  if v1 >= v3 then goto L19e5a2;
  #L19e570.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e576.  v0:= temp;
  #L19e578.  v3:= 31I;
  #L19e57c.  if v0 <= v3 then goto L19e588;
  #L19e580.  v3:= 127I;
  #L19e584.  if v0 < v3 then goto L19e58a;
  #L19e588.  return v2;
  #L19e58a.  v3:= " #%/:?@[\\]" @kind object;
  #L19e58e.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19e594.  v3:= temp;
  #L19e596.  v4:= -1I;
  #L19e598.  if v3 != v4 then goto L19e588;
  #L19e59c.  v1:= v1 + 1;
  #L19e5a0.  goto L19e564;
  #L19e5a2.  v2:= 0I;
  #L19e5a4.  goto L19e588;
}
procedure `int` `decodeHexDigit`(`char` v1 @name `c`) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e5b8.  v0:= 48I;
  #L19e5bc.  if v1 < v0 then goto L19e5ce;
  #L19e5c0.  v0:= 57I;
  #L19e5c4.  if v1 > v0 then goto L19e5ce;
  #L19e5c8.  v0:= v1 + -48;
  #L19e5cc.  return v0;
  #L19e5ce.  v0:= 97I;
  #L19e5d2.  if v1 < v0 then goto L19e5e8;
  #L19e5d6.  v0:= 102I;
  #L19e5da.  if v1 > v0 then goto L19e5e8;
  #L19e5de.  v0:= v1 + -97;
  #L19e5e2.  v0:= v0 + 10;
  #L19e5e6.  goto L19e5cc;
  #L19e5e8.  v0:= 65I;
  #L19e5ec.  if v1 < v0 then goto L19e602;
  #L19e5f0.  v0:= 70I;
  #L19e5f4.  if v1 > v0 then goto L19e602;
  #L19e5f8.  v0:= v1 + -65;
  #L19e5fc.  v0:= v0 + 10;
  #L19e600.  goto L19e5cc;
  #L19e602.  v0:= -1I;
  #L19e604.  goto L19e5cc;
}
procedure `boolean` `decodeIpv4Suffix`(`java.lang.String` v10 @kind object @name `input`, `int` v11 @name `pos`, `int` v12 @name `limit`, `byte`[] v13 @kind object @name `address`, `int` v14 @name `addressOffset`) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19e618.  v7:= 0I;
  #L19e61a.  v0:= v14;
  #L19e61c.  v5:= v11;
  #L19e61e.  v1:= v0;
  #L19e620.  if v5 >= v12 then goto L19e69a;
  #L19e624.  v8:= length @variable v13;
  #L19e626.  if v1 != v8 then goto L19e62c;
  #L19e62a.  return v7;
  #L19e62c.  if v1 == v14 then goto L19e644;
  #L19e630.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e636.  v8:= temp;
  #L19e638.  v9:= 46I;
  #L19e63c.  if v8 != v9 then goto L19e62a;
  #L19e640.  v5:= v5 + 1;
  #L19e644.  v6:= 0I;
  #L19e646.  v4:= v5;
  #L19e648.  if v5 >= v12 then goto L19e664;
  #L19e64c.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e652.  v2:= temp;
  #L19e654.  v8:= 48I;
  #L19e658.  if v2 < v8 then goto L19e664;
  #L19e65c.  v8:= 57I;
  #L19e660.  if v2 <= v8 then goto L19e67a;
  #L19e664.  v3:= v5 - v4 @kind int;
  #L19e668.  if v3 == 0 then goto L19e62a;
  #L19e66c.  v0:= v1 + 1;
  #L19e670.  v8:= (`byte`) v6 @kind i2b;
  #L19e672.  v13[v1]:= v8 @kind byte;
  #L19e676.  v1:= v0;
  #L19e678.  goto L19e620;
  #L19e67a.  if v6 != 0 then goto L19e682;
  #L19e67e.  if v4 != v5 then goto L19e62a;
  #L19e682.  v8:= v6 * 10;
  #L19e686.  v8:= v8 + v2 @kind int;
  #L19e688.  v6:= v8 + -48;
  #L19e68c.  v8:= 255I;
  #L19e690.  if v6 > v8 then goto L19e62a;
  #L19e694.  v5:= v5 + 1;
  #L19e698.  goto L19e648;
  #L19e69a.  v8:= v14 + 4;
  #L19e69e.  if v1 != v8 then goto L19e62a;
  #L19e6a2.  v7:= 1I;
  #L19e6a4.  goto L19e62a;
}
procedure `java.net.InetAddress` `decodeIpv6`(`java.lang.String` v15 @kind object @name `input`, `int` v16 @name `pos`, `int` v17 @name `limit`) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L19e6b8.  v12:= 16I;
  #L19e6bc.  v1:= new `byte`[v12];
  #L19e6c0.  v2:= 0I;
  #L19e6c2.  v5:= -1I;
  #L19e6c4.  v8:= -1I;
  #L19e6c6.  v10:= v16;
  #L19e6ca.  v0:= v17;
  #L19e6ce.  if v10 >= v0 then goto L19e718;
  #L19e6d2.  v12:= length @variable v1;
  #L19e6d4.  if v2 != v12 then goto L19e6dc;
  #L19e6d8.  v12:= 0I;
  #L19e6da.  return v12 @kind object;
  #L19e6dc.  v12:= v10 + 2;
  #L19e6e0.  v0:= v17;
  #L19e6e4.  if v12 > v0 then goto L19e728;
  #L19e6e8.  v12:= "::" @kind object;
  #L19e6ec.  v13:= 0I;
  #L19e6ee.  v14:= 2I;
  #L19e6f0.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19e6f6.  v12:= temp;
  #L19e6f8.  if v12 == 0 then goto L19e728;
  #L19e6fc.  v12:= -1I;
  #L19e6fe.  if v5 == v12 then goto L19e706;
  #L19e702.  v12:= 0I;
  #L19e704.  goto L19e6da;
  #L19e706.  v10:= v10 + 2;
  #L19e70a.  v2:= v2 + 2;
  #L19e70e.  v5:= v2;
  #L19e710.  v0:= v17;
  #L19e714.  if v10 != v0 then goto L19e744;
  #L19e718.  v12:= length @variable v1;
  #L19e71a.  if v2 == v12 then goto L19e800;
  #L19e71e.  v12:= -1I;
  #L19e720.  if v5 != v12 then goto L19e7e0;
  #L19e724.  v12:= 0I;
  #L19e726.  goto L19e6da;
  #L19e728.  if v2 == 0 then goto L19e744;
  #L19e72c.  v12:= ":" @kind object;
  #L19e730.  v13:= 0I;
  #L19e732.  v14:= 1I;
  #L19e734.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19e73a.  v12:= temp;
  #L19e73c.  if v12 == 0 then goto L19e778;
  #L19e740.  v10:= v10 + 1;
  #L19e744.  v11:= 0I;
  #L19e746.  v8:= v10;
  #L19e748.  v0:= v17;
  #L19e74c.  if v10 >= v0 then goto L19e766;
  #L19e750.  call temp:= `charAt`(v15, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e756.  v4:= temp;
  #L19e758.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19e75e.  v9:= temp;
  #L19e760.  v12:= -1I;
  #L19e762.  if v9 != v12 then goto L19e7ae;
  #L19e766.  v7:= v10 - v8 @kind int;
  #L19e76a.  if v7 == 0 then goto L19e774;
  #L19e76e.  v12:= 4I;
  #L19e770.  if v7 <= v12 then goto L19e7bc;
  #L19e774.  v12:= 0I;
  #L19e776.  goto L19e6da;
  #L19e778.  v12:= "." @kind object;
  #L19e77c.  v13:= 0I;
  #L19e77e.  v14:= 1I;
  #L19e780.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19e786.  v12:= temp;
  #L19e788.  if v12 == 0 then goto L19e7aa;
  #L19e78c.  v12:= v2 + -2;
  #L19e790.  v0:= v17;
  #L19e794.  call temp:= `decodeIpv4Suffix`(v15, v8, v0, v1, v12) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @kind static;
  #L19e79a.  v12:= temp;
  #L19e79c.  if v12 != 0 then goto L19e7a4;
  #L19e7a0.  v12:= 0I;
  #L19e7a2.  goto L19e6da;
  #L19e7a4.  v2:= v2 + 2;
  #L19e7a8.  goto L19e718;
  #L19e7aa.  v12:= 0I;
  #L19e7ac.  goto L19e6da;
  #L19e7ae.  v12:= v11 ^< 4;
  #L19e7b2.  v11:= v12 + v9 @kind int;
  #L19e7b6.  v10:= v10 + 1;
  #L19e7ba.  goto L19e748;
  #L19e7bc.  v3:= v2 + 1;
  #L19e7c0.  v12:= v11 ^>> 8;
  #L19e7c4.  v12:= v12 ^& 255;
  #L19e7c8.  v12:= (`byte`) v12 @kind i2b;
  #L19e7ca.  v1[v2]:= v12 @kind byte;
  #L19e7ce.  v2:= v3 + 1;
  #L19e7d2.  v12:= v11 ^& 255;
  #L19e7d6.  v12:= (`byte`) v12 @kind i2b;
  #L19e7d8.  v1[v3]:= v12 @kind byte;
  #L19e7dc.  goto L19e6ca;
  #L19e7e0.  v12:= length @variable v1;
  #L19e7e2.  v13:= v2 - v5 @kind int;
  #L19e7e6.  v12:= v12 - v13 @kind int;
  #L19e7e8.  v13:= v2 - v5 @kind int;
  #L19e7ec.  call `arraycopy`(v1, v5, v1, v12, v13) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19e7f2.  v12:= length @variable v1;
  #L19e7f4.  v12:= v12 - v2 @kind int;
  #L19e7f6.  v12:= v12 + v5 @kind int;
  #L19e7f8.  v13:= 0I;
  #L19e7fa.  call `fill`(v1, v5, v12, v13) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #Try_start0.  
  #L19e800.  call temp:= `getByAddress`(v1) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #Try_end0.  
  #L19e806.  v12:= temp @kind object;
  #L19e808.  goto L19e6da;
  #L19e80c.  v6:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L19e80e.  v12:= new `java.lang.AssertionError`;
  #L19e812.  call `<init>`(v12) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L19e818.  throw v12;
  catch `java.net.UnknownHostException` @[Try_start0..Try_end0] goto L19e80c;
}
procedure `int` `delimiterOffset`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`, `char` v5 @name `delimiter`) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19e83c.  v0:= v3;
  #L19e83e.  if v0 >= v4 then goto L19e856;
  #L19e842.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e848.  v1:= temp;
  #L19e84a.  if v1 != v5 then goto L19e850;
  #L19e84e.  return v0;
  #L19e850.  v0:= v0 + 1;
  #L19e854.  goto L19e83e;
  #L19e856.  v0:= v4;
  #L19e858.  goto L19e84e;
}
procedure `int` `delimiterOffset`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`, `java.lang.String` v6 @kind object @name `delimiters`) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e86c.  v0:= v4;
  #L19e86e.  if v0 >= v5 then goto L19e890;
  #L19e872.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19e878.  v1:= temp;
  #L19e87a.  call temp:= `indexOf`(v6, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19e880.  v1:= temp;
  #L19e882.  v2:= -1I;
  #L19e884.  if v1 == v2 then goto L19e88a;
  #L19e888.  return v0;
  #L19e88a.  v0:= v0 + 1;
  #L19e88e.  goto L19e86e;
  #L19e890.  v0:= v5;
  #L19e892.  goto L19e888;
}
procedure `boolean` `discard`(`okio.Source` v2 @kind object @name `source`, `int` v3 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L19e8a4.  call temp:= `skipAll`(v2, v3, v4) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #Try_end0.  
  #L19e8aa.  v1:= temp;
  #L19e8ac.  return v1;
  #L19e8ae.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L19e8b0.  v1:= 0I;
  #L19e8b2.  goto L19e8ac;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L19e8ae;
}
procedure `boolean` `equal`(`java.lang.Object` v1 @kind object @name `a`, `java.lang.Object` v2 @kind object @name `b`) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e8d4.  if v1 == v2 then goto L19e8e8;
  #L19e8d8.  if v1 == 0 then goto L19e8ec;
  #L19e8dc.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19e8e2.  v0:= temp;
  #L19e8e4.  if v0 == 0 then goto L19e8ec;
  #L19e8e8.  v0:= 1I;
  #L19e8ea.  return v0;
  #L19e8ec.  v0:= 0I;
  #L19e8ee.  goto L19e8ea;
}
procedure `java.lang.String` `format`(`java.lang.String` v1 @kind object @name `format`, `java.lang.Object`[] v2 @kind object @name `args`) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e900.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19e904.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19e90a.  v0:= temp @kind object;
  #L19e90c.  return v0 @kind object;
}
procedure `java.lang.String` `hostHeader`(`okhttp3.HttpUrl` v3 @kind object @name `url`, `boolean` v4 @name `includeDefaultPort`) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19e920.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19e926.  v1:= temp @kind object;
  #L19e928.  v2:= ":" @kind object;
  #L19e92c.  call temp:= `contains`(v1, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19e932.  v1:= temp;
  #L19e934.  if v1 == 0 then goto L19e9ca;
  #L19e938.  v1:= new `java.lang.StringBuilder`;
  #L19e93c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e942.  v2:= "[" @kind object;
  #L19e946.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e94c.  v1:= temp @kind object;
  #L19e94e.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19e954.  v2:= temp @kind object;
  #L19e956.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e95c.  v1:= temp @kind object;
  #L19e95e.  v2:= "]" @kind object;
  #L19e962.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e968.  v1:= temp @kind object;
  #L19e96a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e970.  v0:= temp @kind object;
  #L19e972.  if v4 != 0 then goto L19e992;
  #L19e976.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19e97c.  v1:= temp;
  #L19e97e.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L19e984.  v2:= temp @kind object;
  #L19e986.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19e98c.  v2:= temp;
  #L19e98e.  if v1 == v2 then goto L19e9c8;
  #L19e992.  v1:= new `java.lang.StringBuilder`;
  #L19e996.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e99c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e9a2.  v1:= temp @kind object;
  #L19e9a4.  v2:= ":" @kind object;
  #L19e9a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e9ae.  v1:= temp @kind object;
  #L19e9b0.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19e9b6.  v2:= temp;
  #L19e9b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e9be.  v1:= temp @kind object;
  #L19e9c0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e9c6.  v0:= temp @kind object;
  #L19e9c8.  return v0 @kind object;
  #L19e9ca.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19e9d0.  v0:= temp @kind object;
  #L19e9d2.  goto L19e972;
}
procedure `java.util.List` `immutableList`(`java.util.List` v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19e9e4.  v0:= new `java.util.ArrayList`;
  #L19e9e8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L19e9ee.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19e9f4.  v0:= temp @kind object;
  #L19e9f6.  return v0 @kind object;
}
procedure `java.util.List` `immutableList`(`java.lang.Object`[] v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19ea08.  call temp:= `clone`(v1) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L19ea0e.  v0:= temp @kind object;
  #L19ea10.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L19ea14.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L19ea1a.  v0:= temp @kind object;
  #L19ea1c.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19ea22.  v0:= temp @kind object;
  #L19ea24.  return v0 @kind object;
}
procedure `int` `indexOf`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object @name `array`, `java.lang.String` v5 @kind object @name `value`) @signature `Lokhttp3/internal/Util;.indexOf:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19ea38.  v0:= 0I;
  #L19ea3a.  v1:= length @variable v4;
  #L19ea3c.  if v0 >= v1 then goto L19ea58;
  #L19ea40.  v2:= v4[v0] @kind object;
  #L19ea44.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19ea4a.  v2:= temp;
  #L19ea4c.  if v2 != 0 then goto L19ea52;
  #L19ea50.  return v0;
  #L19ea52.  v0:= v0 + 1;
  #L19ea56.  goto L19ea3c;
  #L19ea58.  v0:= -1I;
  #L19ea5a.  goto L19ea50;
}
procedure `int` `indexOfControlOrNonAscii`(`java.lang.String` v4 @kind object @name `input`) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19ea6c.  v1:= 0I;
  #L19ea6e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ea74.  v2:= temp;
  #L19ea76.  if v1 >= v2 then goto L19ea9a;
  #L19ea7a.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ea80.  v0:= temp;
  #L19ea82.  v3:= 31I;
  #L19ea86.  if v0 <= v3 then goto L19ea92;
  #L19ea8a.  v3:= 127I;
  #L19ea8e.  if v0 < v3 then goto L19ea94;
  #L19ea92.  return v1;
  #L19ea94.  v1:= v1 + 1;
  #L19ea98.  goto L19ea76;
  #L19ea9a.  v1:= -1I;
  #L19ea9c.  goto L19ea92;
}
procedure `java.lang.String` `inet6AddressToAscii`(`byte`[] v12 @kind object @name `address`) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19eab0.  v11:= 16I;
  #L19eab4.  v10:= 58I;
  #L19eab8.  v5:= -1I;
  #L19eaba.  v4:= 0I;
  #L19eabc.  v3:= 0I;
  #L19eabe.  v7:= length @variable v12;
  #L19eac0.  if v3 >= v7 then goto L19eafc;
  #L19eac4.  v1:= v3;
  #L19eac6.  if v3 >= v11 then goto L19eae4;
  #L19eaca.  v7:= v12[v3] @kind byte;
  #L19eace.  if v7 != 0 then goto L19eae4;
  #L19ead2.  v7:= v3 + 1;
  #L19ead6.  v7:= v12[v7] @kind byte;
  #L19eada.  if v7 != 0 then goto L19eae4;
  #L19eade.  v3:= v3 + 2;
  #L19eae2.  goto L19eac6;
  #L19eae4.  v0:= v3 - v1 @kind int;
  #L19eae8.  if v0 <= v4 then goto L19eaf6;
  #L19eaec.  v7:= 4I;
  #L19eaee.  if v0 < v7 then goto L19eaf6;
  #L19eaf2.  v5:= v1;
  #L19eaf4.  v4:= v0;
  #L19eaf6.  v3:= v3 + 2;
  #L19eafa.  goto L19eabe;
  #L19eafc.  v6:= new `okio.Buffer`;
  #L19eb00.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19eb06.  v3:= 0I;
  #L19eb08.  v7:= length @variable v12;
  #L19eb0a.  if v3 >= v7 then goto L19eb5a;
  #L19eb0e.  if v3 != v5 then goto L19eb26;
  #L19eb12.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19eb18.  v3:= v3 + v4 @kind int;
  #L19eb1a.  if v3 != v11 then goto L19eb08;
  #L19eb1e.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19eb24.  goto L19eb08;
  #L19eb26.  if v3 <= 0 then goto L19eb30;
  #L19eb2a.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19eb30.  v7:= v12[v3] @kind byte;
  #L19eb34.  v7:= v7 ^& 255;
  #L19eb38.  v7:= v7 ^< 8;
  #L19eb3c.  v8:= v3 + 1;
  #L19eb40.  v8:= v12[v8] @kind byte;
  #L19eb44.  v8:= v8 ^& 255;
  #L19eb48.  v2:= v7 ^| v8 @kind int;
  #L19eb4c.  v8:= (`long`) v2 @kind i2l;
  #L19eb4e.  call temp:= `writeHexadecimalUnsignedLong`(v6, v8) @signature `Lokio/Buffer;.writeHexadecimalUnsignedLong:(J)Lokio/Buffer;` @kind virtual;
  #L19eb54.  v3:= v3 + 2;
  #L19eb58.  goto L19eb08;
  #L19eb5a.  call temp:= `readUtf8`(v6) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19eb60.  v7:= temp @kind object;
  #L19eb62.  return v7 @kind object;
}
procedure `java.lang.String`[] `intersect`(`java.util.Comparator` v9 @kind object, `java.lang.String`[] v10 @kind object @name `first`, `java.lang.String`[] v11 @kind object @name `second`) @signature `Lokhttp3/internal/Util;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19eb74.  v4:= 0I;
  #L19eb76.  v2:= new `java.util.ArrayList`;
  #L19eb7a.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19eb80.  v6:= length @variable v10;
  #L19eb82.  v5:= v4;
  #L19eb84.  if v5 >= v6 then goto L19ebb8;
  #L19eb88.  v0:= v10[v5] @kind object;
  #L19eb8c.  v7:= length @variable v11;
  #L19eb8e.  v3:= v4;
  #L19eb90.  if v3 >= v7 then goto L19ebaa;
  #L19eb94.  v1:= v11[v3] @kind object;
  #L19eb98.  call temp:= `compare`(v9, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19eb9e.  v8:= temp;
  #L19eba0.  if v8 != 0 then goto L19ebb2;
  #L19eba4.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19ebaa.  v3:= v5 + 1;
  #L19ebae.  v5:= v3;
  #L19ebb0.  goto L19eb84;
  #L19ebb2.  v3:= v3 + 1;
  #L19ebb6.  goto L19eb90;
  #L19ebb8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ebbe.  v3:= temp;
  #L19ebc0.  v3:= new `java.lang.String`[v3];
  #L19ebc4.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L19ebca.  v3:= temp @kind object;
  #L19ebcc.  v3:= (`java.lang.String`[]) v3 @kind object;
  #L19ebd0.  return v3 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v2 @kind object @name `e`) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19ebe4.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L19ebea.  v0:= temp @kind object;
  #L19ebec.  if v0 == 0 then goto L19ec18;
  #L19ebf0.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19ebf6.  v0:= temp @kind object;
  #L19ebf8.  if v0 == 0 then goto L19ec18;
  #L19ebfc.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19ec02.  v0:= temp @kind object;
  #L19ec04.  v1:= "getsockname failed" @kind object;
  #L19ec08.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19ec0e.  v0:= temp;
  #L19ec10.  if v0 == 0 then goto L19ec18;
  #L19ec14.  v0:= 1I;
  #L19ec16.  return v0;
  #L19ec18.  v0:= 0I;
  #L19ec1a.  goto L19ec16;
}
procedure `boolean` `nonEmptyIntersection`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object @name `first`, `java.lang.String`[] v10 @kind object @name `second`) @signature `Lokhttp3/internal/Util;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19ec2c.  v2:= 0I;
  #L19ec2e.  if v9 == 0 then goto L19ec42;
  #L19ec32.  if v10 == 0 then goto L19ec42;
  #L19ec36.  v3:= length @variable v9;
  #L19ec38.  if v3 == 0 then goto L19ec42;
  #L19ec3c.  v3:= length @variable v10;
  #L19ec3e.  if v3 != 0 then goto L19ec44;
  #L19ec42.  return v2;
  #L19ec44.  v5:= length @variable v9;
  #L19ec46.  v4:= v2;
  #L19ec48.  if v4 >= v5 then goto L19ec42;
  #L19ec4c.  v0:= v9[v4] @kind object;
  #L19ec50.  v6:= length @variable v10;
  #L19ec52.  v3:= v2;
  #L19ec54.  if v3 >= v6 then goto L19ec72;
  #L19ec58.  v1:= v10[v3] @kind object;
  #L19ec5c.  call temp:= `compare`(v8, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19ec62.  v7:= temp;
  #L19ec64.  if v7 != 0 then goto L19ec6c;
  #L19ec68.  v2:= 1I;
  #L19ec6a.  goto L19ec42;
  #L19ec6c.  v3:= v3 + 1;
  #L19ec70.  goto L19ec54;
  #L19ec72.  v3:= v4 + 1;
  #L19ec76.  v4:= v3;
  #L19ec78.  goto L19ec48;
}
procedure `boolean` `skipAll`(`okio.Source` v12 @kind object @name `source`, `int` v13 @name `duration`, `java.util.concurrent.TimeUnit` v14 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19ec8c.  v6:= 9223372036854775807L;
  #L19ec96.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L19ec9c.  v2:= temp @kind wide;
  #L19ec9e.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19eca4.  v8:= temp @kind object;
  #L19eca6.  call temp:= `hasDeadline`(v8) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L19ecac.  v8:= temp;
  #L19ecae.  if v8 == 0 then goto L19ed30;
  #L19ecb2.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ecb8.  v8:= temp @kind object;
  #L19ecba.  call temp:= `deadlineNanoTime`(v8) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L19ecc0.  v8:= temp @kind wide;
  #L19ecc2.  v4:= v8 - v2 @kind long;
  #L19ecc6.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19eccc.  v8:= temp @kind object;
  #L19ecce.  v10:= (`long`) v13 @kind i2l;
  #L19ecd0.  call temp:= `toNanos`(v14, v10) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L19ecd6.  v10:= temp @kind wide;
  #L19ecd8.  call temp:= `min`(v4, v10) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L19ecde.  v10:= temp @kind wide;
  #L19ece0.  v10:= v10 + v2 @kind long;
  #L19ece2.  call temp:= `deadlineNanoTime`(v8, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #Try_start0.  
  #L19ece8.  v1:= new `okio.Buffer`;
  #L19ecec.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19ecf2.  v8:= 8192L;
  #L19ecf6.  call temp:= `read`(v12, v1, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L19ecfc.  v8:= temp @kind wide;
  #L19ecfe.  v10:= -1L;
  #L19ed02.  v8:= lcmp(v8, v10);
  #L19ed06.  if v8 == 0 then goto L19ed34;
  #L19ed0a.  call `clear`(v1) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #Try_end0.  
  #L19ed10.  goto L19ecf2;
  #L19ed12.  v0:= Exception @type ^`java.io.InterruptedIOException` @kind object;
  #L19ed14.  v8:= 0I;
  #L19ed16.  v6:= lcmp(v4, v6);
  #L19ed1a.  if v6 != 0 then goto L19ed64;
  #L19ed1e.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ed24.  v6:= temp @kind object;
  #L19ed26.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19ed2c.  v6:= v8;
  #L19ed2e.  return v6;
  #L19ed30.  v4:= v6 @kind wide;
  #L19ed32.  goto L19ecc6;
  #L19ed34.  v8:= 1I;
  #L19ed36.  v6:= lcmp(v4, v6);
  #L19ed3a.  if v6 != 0 then goto L19ed50;
  #L19ed3e.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ed44.  v6:= temp @kind object;
  #L19ed46.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19ed4c.  v6:= v8;
  #L19ed4e.  goto L19ed2e;
  #L19ed50.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ed56.  v6:= temp @kind object;
  #L19ed58.  v10:= v2 + v4 @kind long;
  #L19ed5c.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19ed62.  goto L19ed4c;
  #L19ed64.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ed6a.  v6:= temp @kind object;
  #L19ed6c.  v10:= v2 + v4 @kind long;
  #L19ed70.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19ed76.  goto L19ed2c;
  #L19ed78.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19ed7a.  v6:= lcmp(v4, v6);
  #L19ed7e.  if v6 != 0 then goto L19ed92;
  #L19ed82.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ed88.  v6:= temp @kind object;
  #L19ed8a.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19ed90.  throw v8;
  #L19ed92.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ed98.  v6:= temp @kind object;
  #L19ed9a.  v10:= v2 + v4 @kind long;
  #L19ed9e.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19eda4.  goto L19ed90;
  catch `java.io.InterruptedIOException` @[Try_start0..Try_end0] goto L19ed12;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19ed78;
}
procedure `int` `skipLeadingAsciiWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19edc8.  v0:= v3;
  #L19edca.  if v0 >= v4 then goto L19ede4;
  #L19edce.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19edd4.  v1:= temp;
  #L19edd6.  goto L19ede8;
  #L19eddc.  return v0;
  #L19edde.  v0:= v0 + 1;
  #L19ede2.  goto L19edca;
  #L19ede4.  v0:= v4;
  #L19ede6.  goto L19eddc;
  #L19ede8.  switch v1
                  | 9 => goto L19edde
                  | 10 => goto L19edde
                  | 12 => goto L19edde
                  | 13 => goto L19edde
                  | 32 => goto L19edde
                  | else => goto L19eddc;
}
procedure `int` `skipTrailingAsciiWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19ee24.  v0:= v4 + -1;
  #L19ee28.  if v0 < v3 then goto L19ee3e;
  #L19ee2c.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ee32.  v1:= temp;
  #L19ee34.  goto L19ee48;
  #L19ee3a.  v3:= v0 + 1;
  #L19ee3e.  return v3;
  #L19ee40.  v0:= v0 + -1;
  #L19ee44.  goto L19ee28;
  #L19ee46.  
  #L19ee48.  switch v1
                  | 9 => goto L19ee40
                  | 10 => goto L19ee40
                  | 12 => goto L19ee40
                  | 13 => goto L19ee40
                  | 32 => goto L19ee40
                  | else => goto L19ee3a;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`(`java.lang.String` v1 @kind object @name `name`, `boolean` v2 @name `daemon`) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19ee84.  v0:= new `okhttp3.internal.Util$2`;
  #L19ee88.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/Util$2;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L19ee8e.  return v0 @kind object;
}
procedure `java.lang.String` `trimSubstring`(`java.lang.String` v3 @kind object @name `string`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19eea0.  call temp:= `skipLeadingAsciiWhitespace`(v3, v4, v5) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19eea6.  v1:= temp;
  #L19eea8.  call temp:= `skipTrailingAsciiWhitespace`(v3, v1, v5) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19eeae.  v0:= temp;
  #L19eeb0.  call temp:= `substring`(v3, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19eeb6.  v2:= temp @kind object;
  #L19eeb8.  return v2 @kind object;
}
procedure `boolean` `verifyAsIpAddress`(`java.lang.String` v1 @kind object @name `host`) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19eecc.  v0:= `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` @kind object;
  #L19eed0.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19eed6.  v0:= temp @kind object;
  #L19eed8.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L19eede.  v0:= temp;
  #L19eee0.  return v0;
}

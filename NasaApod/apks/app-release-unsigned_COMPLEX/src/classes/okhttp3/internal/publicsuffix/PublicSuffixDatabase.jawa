record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @AccessFlag PRIVATE;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EXCEPTION_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PUBLIC_SUFFIX_RESOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a9728.  v3:= 1I;
  #L1a972a.  v2:= 0I;
  #L1a972c.  v0:= new `byte`[v3];
  #L1a9730.  v1:= 42I;
  #L1a9734.  v0[v2]:= v1 @kind byte;
  #L1a9738.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] := v0 @kind object;
  #L1a973c.  v0:= new `java.lang.String`[v2];
  #L1a9740.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L1a9744.  v0:= new `java.lang.String`[v3];
  #L1a9748.  v1:= "*" @kind object;
  #L1a974c.  v0[v2]:= v1 @kind object;
  #L1a9750.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L1a9754.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L1a9758.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L1a975e.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L1a9762.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a9774.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a977a.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L1a977e.  v1:= 0I;
  #L1a9780.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L1a9786.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L1a978a.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L1a978e.  v1:= 1I;
  #L1a9790.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L1a9796.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L1a979a.  return @kind void;
}
procedure `java.lang.String` `binarySearchBytes`(`byte`[] v21 @kind object @name `bytesToSearch`, `byte`[][] v22 @kind object @name `labels`, `int` v23 @name `labelIndex`) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L1a97ac.  v13:= 0I;
  #L1a97ae.  v0:= v21 @kind object;
  #L1a97b2.  v10:= length @variable v0;
  #L1a97b4.  v14:= 0I;
  #L1a97b6.  if v13 >= v10 then goto L1a9938;
  #L1a97ba.  v19:= v13 + v10 @kind int;
  #L1a97be.  v15:= v19 / 2;
  #L1a97c2.  v19:= -1I;
  #L1a97c6.  v0:= v19;
  #L1a97ca.  if v15 <= v0 then goto L1a97e8;
  #L1a97ce.  v19:= v21[v15] @kind byte;
  #L1a97d2.  v20:= 10I;
  #L1a97d6.  v0:= v19;
  #L1a97da.  v1:= v20;
  #L1a97de.  if v0 == v1 then goto L1a97e8;
  #L1a97e2.  v15:= v15 + -1;
  #L1a97e6.  goto L1a97c2;
  #L1a97e8.  v15:= v15 + 1;
  #L1a97ec.  v8:= 1I;
  #L1a97ee.  v19:= v15 + v8 @kind int;
  #L1a97f2.  v19:= v21[v19] @kind byte;
  #L1a97f6.  v20:= 10I;
  #L1a97fa.  v0:= v19;
  #L1a97fe.  v1:= v20;
  #L1a9802.  if v0 == v1 then goto L1a980c;
  #L1a9806.  v8:= v8 + 1;
  #L1a980a.  goto L1a97ee;
  #L1a980c.  v19:= v15 + v8 @kind int;
  #L1a9810.  v18:= v19 - v15 @kind int;
  #L1a9814.  v7:= v23;
  #L1a9818.  v6:= 0I;
  #L1a981a.  v16:= 0I;
  #L1a981e.  v9:= 0I;
  #L1a9820.  if v9 == 0 then goto L1a984c;
  #L1a9824.  v3:= 46I;
  #L1a9828.  v9:= 0I;
  #L1a982a.  v19:= v15 + v16 @kind int;
  #L1a982e.  v19:= v21[v19] @kind byte;
  #L1a9832.  v0:= v19;
  #L1a9836.  v4:= v0 ^& 255;
  #L1a983a.  v5:= v3 - v4 @kind int;
  #L1a983e.  if v5 == 0 then goto L1a985e;
  #L1a9842.  if v5 >= 0 then goto L1a98a8;
  #L1a9846.  v10:= v15 + -1;
  #L1a984a.  goto L1a97b6;
  #L1a984c.  v19:= v22[v7] @kind object;
  #L1a9850.  v19:= v19[v6] @kind byte;
  #L1a9854.  v0:= v19;
  #L1a9858.  v3:= v0 ^& 255;
  #L1a985c.  goto L1a982a;
  #L1a985e.  v16:= v16 + 1;
  #L1a9862.  v6:= v6 + 1;
  #L1a9866.  v0:= v16;
  #L1a986a.  v1:= v18;
  #L1a986e.  if v0 == v1 then goto L1a9842;
  #L1a9872.  v19:= v22[v7] @kind object;
  #L1a9876.  v0:= v19 @kind object;
  #L1a987a.  v0:= length @variable v0;
  #L1a987c.  v19:= v0;
  #L1a9880.  v0:= v19;
  #L1a9884.  if v0 != v6 then goto L1a9820;
  #L1a9888.  v0:= v22 @kind object;
  #L1a988c.  v0:= length @variable v0;
  #L1a988e.  v19:= v0;
  #L1a9892.  v19:= v19 + -1;
  #L1a9896.  v0:= v19;
  #L1a989a.  if v7 == v0 then goto L1a9842;
  #L1a989e.  v7:= v7 + 1;
  #L1a98a2.  v6:= -1I;
  #L1a98a4.  v9:= 1I;
  #L1a98a6.  goto L1a9820;
  #L1a98a8.  if v5 <= 0 then goto L1a98b6;
  #L1a98ac.  v19:= v15 + v8 @kind int;
  #L1a98b0.  v13:= v19 + 1;
  #L1a98b4.  goto L1a97b6;
  #L1a98b6.  v17:= v18 - v16 @kind int;
  #L1a98ba.  v19:= v22[v7] @kind object;
  #L1a98be.  v0:= v19 @kind object;
  #L1a98c2.  v0:= length @variable v0;
  #L1a98c4.  v19:= v0;
  #L1a98c8.  v12:= v19 - v6 @kind int;
  #L1a98cc.  v11:= v7 + 1;
  #L1a98d0.  v0:= v22 @kind object;
  #L1a98d4.  v0:= length @variable v0;
  #L1a98d6.  v19:= v0;
  #L1a98da.  v0:= v19;
  #L1a98de.  if v11 >= v0 then goto L1a98fa;
  #L1a98e2.  v19:= v22[v11] @kind object;
  #L1a98e6.  v0:= v19 @kind object;
  #L1a98ea.  v0:= length @variable v0;
  #L1a98ec.  v19:= v0;
  #L1a98f0.  v12:= v12 + v19 @kind int;
  #L1a98f4.  v11:= v11 + 1;
  #L1a98f8.  goto L1a98d0;
  #L1a98fa.  v0:= v17;
  #L1a98fe.  if v12 >= v0 then goto L1a990a;
  #L1a9902.  v10:= v15 + -1;
  #L1a9906.  goto L1a97b6;
  #L1a990a.  v0:= v17;
  #L1a990e.  if v12 <= v0 then goto L1a991e;
  #L1a9912.  v19:= v15 + v8 @kind int;
  #L1a9916.  v13:= v19 + 1;
  #L1a991a.  goto L1a97b6;
  #L1a991e.  v14:= new `java.lang.String`;
  #L1a9922.  v19:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1a9926.  v0:= v21 @kind object;
  #L1a992a.  v1:= v18;
  #L1a992e.  v2:= v19 @kind object;
  #L1a9932.  call `<init>`(v14, v0, v15, v1, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L1a9938.  return v14 @kind object;
}
procedure `java.lang.String`[] `findMatchingRule`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v13 @kind this, `java.lang.String`[] v14 @kind object @name `domainLabels`) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1a994c.  v12:= 1I;
  #L1a994e.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1a9952.  call temp:= `get`(v10) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L1a9958.  v10:= temp;
  #L1a995a.  if v10 != 0 then goto L1a9996;
  #L1a995e.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1a9962.  v11:= 0I;
  #L1a9964.  call temp:= `compareAndSet`(v10, v11, v12) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L1a996a.  v10:= temp;
  #L1a996c.  if v10 == 0 then goto L1a9996;
  #L1a9970.  call `readTheListUninterruptibly`(v13) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @kind direct;
  #L1a9976.  @monitorenter v13
  #Try_start0.  
  #L1a9978.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L1a997c.  if v10 != 0 then goto L1a99a6;
  #L1a9980.  v10:= new `java.lang.IllegalStateException`;
  #L1a9984.  v11:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L1a9988.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a998e.  throw v10;
  #L1a9990.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a9992.  @monitorexit v13
  #Try_end0.  
  #L1a9994.  throw v10;
  #Try_start1.  
  #L1a9996.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L1a999a.  call `await`(v10) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #Try_end1.  
  #L1a99a0.  goto L1a9976;
  #L1a99a2.  v10:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L1a99a4.  goto L1a9976;
  #Try_start2.  
  #L1a99a6.  @monitorexit v13
  #Try_end2.  
  #L1a99a8.  v10:= length @variable v14;
  #L1a99aa.  v0:= new `byte`[][v10];
  #L1a99ae.  v4:= 0I;
  #L1a99b0.  v10:= length @variable v14;
  #L1a99b2.  if v4 >= v10 then goto L1a99d0;
  #L1a99b6.  v10:= v14[v4] @kind object;
  #L1a99ba.  v11:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1a99be.  call temp:= `getBytes`(v10, v11) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1a99c4.  v10:= temp @kind object;
  #L1a99c6.  v0[v4]:= v10 @kind object;
  #L1a99ca.  v4:= v4 + 1;
  #L1a99ce.  goto L1a99b0;
  #L1a99d0.  v1:= 0I;
  #L1a99d2.  v4:= 0I;
  #L1a99d4.  v10:= length @variable v0;
  #L1a99d6.  if v4 >= v10 then goto L1a99ec;
  #L1a99da.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L1a99de.  call temp:= `binarySearchBytes`(v10, v0, v4) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L1a99e4.  v7:= temp @kind object;
  #L1a99e6.  if v7 == 0 then goto L1a9a82;
  #L1a99ea.  v1:= v7 @kind object;
  #L1a99ec.  v8:= 0I;
  #L1a99ee.  v10:= length @variable v0;
  #L1a99f0.  if v10 <= v12 then goto L1a9a26;
  #L1a99f4.  call temp:= `clone`(v0) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L1a99fa.  v6:= temp @kind object;
  #L1a99fc.  v6:= (`byte`[][]) v6 @kind object;
  #L1a9a00.  v5:= 0I;
  #L1a9a02.  v10:= length @variable v6;
  #L1a9a04.  v10:= v10 + -1;
  #L1a9a08.  if v5 >= v10 then goto L1a9a26;
  #L1a9a0c.  v10:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] @kind object;
  #L1a9a10.  v6[v5]:= v10 @kind object;
  #L1a9a14.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L1a9a18.  call temp:= `binarySearchBytes`(v10, v6, v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L1a9a1e.  v7:= temp @kind object;
  #L1a9a20.  if v7 == 0 then goto L1a9a88;
  #L1a9a24.  v8:= v7 @kind object;
  #L1a9a26.  v3:= 0I;
  #L1a9a28.  if v8 == 0 then goto L1a9a4a;
  #L1a9a2c.  v5:= 0I;
  #L1a9a2e.  v10:= length @variable v0;
  #L1a9a30.  v10:= v10 + -1;
  #L1a9a34.  if v5 >= v10 then goto L1a9a4a;
  #L1a9a38.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] @kind object;
  #L1a9a3c.  call temp:= `binarySearchBytes`(v10, v0, v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L1a9a42.  v7:= temp @kind object;
  #L1a9a44.  if v7 == 0 then goto L1a9a8e;
  #L1a9a48.  v3:= v7 @kind object;
  #L1a9a4a.  if v3 == 0 then goto L1a9a94;
  #L1a9a4e.  v10:= new `java.lang.StringBuilder`;
  #L1a9a52.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a9a58.  v11:= "!" @kind object;
  #L1a9a5c.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9a62.  v10:= temp @kind object;
  #L1a9a64.  call temp:= `append`(v10, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9a6a.  v10:= temp @kind object;
  #L1a9a6c.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a9a72.  v3:= temp @kind object;
  #L1a9a74.  v10:= "\\." @kind object;
  #L1a9a78.  call temp:= `split`(v3, v10) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1a9a7e.  v2:= temp @kind object;
  #L1a9a80.  return v2 @kind object;
  #L1a9a82.  v4:= v4 + 1;
  #L1a9a86.  goto L1a99d4;
  #L1a9a88.  v5:= v5 + 1;
  #L1a9a8c.  goto L1a9a02;
  #L1a9a8e.  v5:= v5 + 1;
  #L1a9a92.  goto L1a9a2e;
  #L1a9a94.  if v1 != 0 then goto L1a9aa2;
  #L1a9a98.  if v8 != 0 then goto L1a9aa2;
  #L1a9a9c.  v2:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] @kind object;
  #L1a9aa0.  goto L1a9a80;
  #L1a9aa2.  if v1 == 0 then goto L1a9ace;
  #L1a9aa6.  v10:= "\\." @kind object;
  #L1a9aaa.  call temp:= `split`(v1, v10) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1a9ab0.  v2:= temp @kind object;
  #L1a9ab2.  if v8 == 0 then goto L1a9ad4;
  #L1a9ab6.  v10:= "\\." @kind object;
  #L1a9aba.  call temp:= `split`(v8, v10) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1a9ac0.  v9:= temp @kind object;
  #L1a9ac2.  v10:= length @variable v2;
  #L1a9ac4.  v11:= length @variable v9;
  #L1a9ac6.  if v10 > v11 then goto L1a9a80;
  #L1a9aca.  v2:= v9 @kind object;
  #L1a9acc.  goto L1a9a80;
  #L1a9ace.  v2:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L1a9ad2.  goto L1a9ab2;
  #L1a9ad4.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L1a9ad8.  goto L1a9ac2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a9990;
  catch `java.lang.InterruptedException` @[Try_start1..Try_end1] goto L1a99a2;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1a9990;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a9b0c.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L1a9b10.  return v0 @kind object;
}
procedure `void` `readTheList`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v8 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1a9b24.  v6:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L1a9b28.  v7:= "publicsuffixes.gz" @kind object;
  #L1a9b2c.  call temp:= `getResourceAsStream`(v6, v7) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L1a9b32.  v3:= temp @kind object;
  #L1a9b34.  if v3 != 0 then goto L1a9b3a;
  #L1a9b38.  return @kind void;
  #L1a9b3a.  v6:= new `okio.GzipSource`;
  #L1a9b3e.  call temp:= `source`(v3) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L1a9b44.  v7:= temp @kind object;
  #L1a9b46.  call `<init>`(v6, v7) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L1a9b4c.  call temp:= `buffer`(v6) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1a9b52.  v0:= temp @kind object;
  #Try_start0.  
  #L1a9b54.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1a9b5a.  v4:= temp;
  #L1a9b5c.  v2:= new `byte`[v4];
  #L1a9b60.  call `readFully`(v0, v2) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L1a9b66.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1a9b6c.  v5:= temp;
  #L1a9b6e.  v1:= new `byte`[v5];
  #L1a9b72.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #Try_end0.  
  #L1a9b78.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1a9b7e.  @monitorenter v8
  #Try_start1.  
  #L1a9b80.  v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v2 @kind object;
  #L1a9b84.  v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v1 @kind object;
  #L1a9b88.  @monitorexit v8
  #Try_end1.  
  #L1a9b8a.  v6:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L1a9b8e.  call `countDown`(v6) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L1a9b94.  goto L1a9b38;
  #L1a9b96.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a9b98.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1a9b9e.  throw v6;
  #L1a9ba0.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L1a9ba2.  @monitorexit v8
  #Try_end2.  
  #L1a9ba4.  throw v6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a9b96;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a9ba0;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1a9ba0;
}
procedure `void` `readTheListUninterruptibly`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a9bd8.  v1:= 0I;
  #Try_start0.  
  #L1a9bda.  call `readTheList`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @kind direct;
  #Try_end0.  
  #L1a9be0.  if v1 == 0 then goto L1a9bf2;
  #L1a9be4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1a9bea.  v2:= temp @kind object;
  #L1a9bec.  call `interrupt`(v2) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1a9bf2.  return @kind void;
  #L1a9bf4.  v0:= Exception @type ^`java.io.InterruptedIOException` @kind object;
  #L1a9bf6.  v1:= 1I;
  #L1a9bf8.  goto L1a9bda;
  #L1a9bfa.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L1a9bfc.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1a9c02.  v2:= temp @kind object;
  #L1a9c04.  v3:= 5I;
  #L1a9c06.  v4:= "Failed to read public suffix list" @kind object;
  #L1a9c0a.  call `log`(v2, v3, v4, v0) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #Try_end1.  
  #L1a9c10.  if v1 == 0 then goto L1a9bf2;
  #L1a9c14.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1a9c1a.  v2:= temp @kind object;
  #L1a9c1c.  call `interrupt`(v2) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1a9c22.  goto L1a9bf2;
  #L1a9c24.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a9c26.  if v1 == 0 then goto L1a9c38;
  #L1a9c2a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1a9c30.  v3:= temp @kind object;
  #L1a9c32.  call `interrupt`(v3) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1a9c38.  throw v2;
  catch `java.io.InterruptedIOException` @[Try_start0..Try_end0] goto L1a9bf4;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1a9bfa;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a9c24;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a9c24;
}
procedure `java.lang.String` `getEffectiveTldPlusOne`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v11 @kind this, `java.lang.String` v12 @kind object @name `domain`) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1a9c68.  v10:= 33I;
  #L1a9c6c.  v9:= 0I;
  #L1a9c6e.  if v12 != 0 then goto L1a9c82;
  #L1a9c72.  v7:= new `java.lang.NullPointerException`;
  #L1a9c76.  v8:= "domain == null" @kind object;
  #L1a9c7a.  call `<init>`(v7, v8) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a9c80.  throw v7;
  #L1a9c82.  call temp:= `toUnicode`(v12) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1a9c88.  v6:= temp @kind object;
  #L1a9c8a.  v7:= "\\." @kind object;
  #L1a9c8e.  call temp:= `split`(v6, v7) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1a9c94.  v0:= temp @kind object;
  #L1a9c96.  call temp:= `findMatchingRule`(v11, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L1a9c9c.  v5:= temp @kind object;
  #L1a9c9e.  v7:= length @variable v0;
  #L1a9ca0.  v8:= length @variable v5;
  #L1a9ca2.  if v7 != v8 then goto L1a9cba;
  #L1a9ca6.  v7:= v5[v9] @kind object;
  #L1a9caa.  call temp:= `charAt`(v7, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a9cb0.  v7:= temp;
  #L1a9cb2.  if v7 == v10 then goto L1a9cba;
  #L1a9cb6.  v7:= 0I;
  #L1a9cb8.  return v7 @kind object;
  #L1a9cba.  v7:= v5[v9] @kind object;
  #L1a9cbe.  call temp:= `charAt`(v7, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a9cc4.  v7:= temp;
  #L1a9cc6.  if v7 != v10 then goto L1a9d0c;
  #L1a9cca.  v7:= length @variable v0;
  #L1a9ccc.  v8:= length @variable v5;
  #L1a9cce.  v2:= v7 - v8 @kind int;
  #L1a9cd2.  v1:= new `java.lang.StringBuilder`;
  #L1a9cd6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a9cdc.  v7:= "\\." @kind object;
  #L1a9ce0.  call temp:= `split`(v12, v7) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1a9ce6.  v4:= temp @kind object;
  #L1a9ce8.  v3:= v2;
  #L1a9cea.  v7:= length @variable v4;
  #L1a9cec.  if v3 >= v7 then goto L1a9d1a;
  #L1a9cf0.  v7:= v4[v3] @kind object;
  #L1a9cf4.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9cfa.  v7:= temp @kind object;
  #L1a9cfc.  v8:= 46I;
  #L1a9d00.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9d06.  v3:= v3 + 1;
  #L1a9d0a.  goto L1a9cea;
  #L1a9d0c.  v7:= length @variable v0;
  #L1a9d0e.  v8:= length @variable v5;
  #L1a9d10.  v8:= v8 + 1;
  #L1a9d14.  v2:= v7 - v8 @kind int;
  #L1a9d18.  goto L1a9cd2;
  #L1a9d1a.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L1a9d20.  v7:= temp;
  #L1a9d22.  v7:= v7 + -1;
  #L1a9d26.  call temp:= `deleteCharAt`(v1, v7) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9d2c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a9d32.  v7:= temp @kind object;
  #L1a9d34.  goto L1a9cb8;
}
procedure `void` `setListBytes`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this, `byte`[] v3 @kind object @name `publicSuffixListBytes`, `byte`[] v4 @kind object @name `publicSuffixExceptionListBytes`) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.setListBytes:([B[B)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1a9d48.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v3 @kind object;
  #L1a9d4c.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v4 @kind object;
  #L1a9d50.  v0:= v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1a9d54.  v1:= 1I;
  #L1a9d56.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L1a9d5c.  v0:= v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L1a9d60.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L1a9d66.  return @kind void;
}

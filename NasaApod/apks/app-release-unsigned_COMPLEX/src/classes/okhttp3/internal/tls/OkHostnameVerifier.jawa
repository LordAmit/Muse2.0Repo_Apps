record `okhttp3.internal.tls.OkHostnameVerifier` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_DNS_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_IPA_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.tls.OkHostnameVerifier` `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1aaa54.  v0:= new `okhttp3.internal.tls.OkHostnameVerifier`;
  #L1aaa58.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @kind direct;
  #L1aaa5e.  `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` := v0 @kind object;
  #L1aaa62.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.tls.OkHostnameVerifier` v0 @kind this) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1aaa74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aaa7a.  return @kind void;
}
procedure `java.util.List` `allSubjectAltNames`(`java.security.cert.X509Certificate` v5 @kind object @name `certificate`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1aaa8c.  v3:= 7I;
  #L1aaa8e.  call temp:= `getSubjectAltNames`(v5, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L1aaa94.  v1:= temp @kind object;
  #L1aaa96.  v3:= 2I;
  #L1aaa98.  call temp:= `getSubjectAltNames`(v5, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L1aaa9e.  v0:= temp @kind object;
  #L1aaaa0.  v2:= new `java.util.ArrayList`;
  #L1aaaa4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1aaaaa.  v3:= temp;
  #L1aaaac.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1aaab2.  v4:= temp;
  #L1aaab4.  v3:= v3 + v4 @kind int;
  #L1aaab6.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1aaabc.  call temp:= `addAll`(v2, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1aaac2.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1aaac8.  return v2 @kind object;
}
procedure `java.util.List` `getSubjectAltNames`(`java.security.cert.X509Certificate` v11 @kind object @name `certificate`, `int` v12 @name `type`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1aaadc.  v5:= new `java.util.ArrayList`;
  #L1aaae0.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L1aaae6.  call temp:= `getSubjectAlternativeNames`(v11) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L1aaaec.  v7:= temp @kind object;
  #L1aaaee.  if v7 != 0 then goto L1aaafc;
  #L1aaaf2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1aaaf8.  v5:= temp @kind object;
  #L1aaafa.  return v5 @kind object;
  #L1aaafc.  call temp:= `iterator`(v7) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1aab02.  v8:= temp @kind object;
  #L1aab04.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1aab0a.  v9:= temp;
  #L1aab0c.  if v9 == 0 then goto L1aaafa;
  #L1aab10.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1aab16.  v6:= temp @kind object;
  #L1aab18.  v0:= v6 @kind object;
  #L1aab1a.  v0:= (`java.util.List`) v0 @kind object;
  #L1aab1e.  v4:= v0 @kind object;
  #L1aab20.  if v4 == 0 then goto L1aab04;
  #L1aab24.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1aab2a.  v9:= temp;
  #L1aab2c.  v10:= 2I;
  #L1aab2e.  if v9 < v10 then goto L1aab04;
  #L1aab32.  v9:= 0I;
  #L1aab34.  call temp:= `get`(v4, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1aab3a.  v2:= temp @kind object;
  #L1aab3c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1aab40.  if v2 == 0 then goto L1aab04;
  #L1aab44.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1aab4a.  v9:= temp;
  #L1aab4c.  if v9 != v12 then goto L1aab04;
  #L1aab50.  v9:= 1I;
  #L1aab52.  call temp:= `get`(v4, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1aab58.  v1:= temp @kind object;
  #L1aab5a.  v1:= (`java.lang.String`) v1 @kind object;
  #L1aab5e.  if v1 == 0 then goto L1aab04;
  #L1aab62.  call temp:= `add`(v5, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1aab68.  goto L1aab04;
  #L1aab6a.  v3:= Exception @type ^`java.security.cert.CertificateParsingException` @kind object;
  #L1aab6c.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1aab72.  v5:= temp @kind object;
  #L1aab74.  goto L1aaafa;
  catch `java.security.cert.CertificateParsingException` @[Try_start0..Try_end0] goto L1aab6a;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object @name `hostname`, `java.security.cert.X509Certificate` v6 @kind object @name `certificate`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aab98.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1aab9c.  call temp:= `toLowerCase`(v5, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1aaba2.  v5:= temp @kind object;
  #L1aaba4.  v2:= 2I;
  #L1aaba6.  call temp:= `getSubjectAltNames`(v6, v2) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L1aabac.  v1:= temp @kind object;
  #L1aabae.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1aabb4.  v2:= temp @kind object;
  #L1aabb6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1aabbc.  v3:= temp;
  #L1aabbe.  if v3 == 0 then goto L1aabde;
  #L1aabc2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1aabc8.  v0:= temp @kind object;
  #L1aabca.  v0:= (`java.lang.String`) v0 @kind object;
  #L1aabce.  call temp:= `verifyHostname`(v4, v5, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L1aabd4.  v3:= temp;
  #L1aabd6.  if v3 == 0 then goto L1aabb6;
  #L1aabda.  v2:= 1I;
  #L1aabdc.  return v2;
  #L1aabde.  v2:= 0I;
  #L1aabe0.  goto L1aabdc;
}
procedure `boolean` `verifyIpAddress`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object @name `ipAddress`, `java.security.cert.X509Certificate` v6 @kind object @name `certificate`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aabf4.  v3:= 7I;
  #L1aabf6.  call temp:= `getSubjectAltNames`(v6, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L1aabfc.  v0:= temp @kind object;
  #L1aabfe.  v1:= 0I;
  #L1aac00.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1aac06.  v2:= temp;
  #L1aac08.  if v1 >= v2 then goto L1aac2e;
  #L1aac0c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1aac12.  v3:= temp @kind object;
  #L1aac14.  v3:= (`java.lang.String`) v3 @kind object;
  #L1aac18.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1aac1e.  v3:= temp;
  #L1aac20.  if v3 == 0 then goto L1aac28;
  #L1aac24.  v3:= 1I;
  #L1aac26.  return v3;
  #L1aac28.  v1:= v1 + 1;
  #L1aac2c.  goto L1aac08;
  #L1aac2e.  v3:= 0I;
  #L1aac30.  goto L1aac26;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object @name `host`, `java.security.cert.X509Certificate` v3 @kind object @name `certificate`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aac44.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L1aac4a.  v0:= temp;
  #L1aac4c.  if v0 == 0 then goto L1aac5a;
  #L1aac50.  call temp:= `verifyIpAddress`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L1aac56.  v0:= temp;
  #L1aac58.  return v0;
  #L1aac5a.  call temp:= `verifyHostname`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L1aac60.  v0:= temp;
  #L1aac62.  goto L1aac58;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object @name `host`, `javax.net.ssl.SSLSession` v6 @kind object @name `session`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aac74.  v3:= 0I;
  #Try_start0.  
  #L1aac76.  call temp:= `getPeerCertificates`(v6) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L1aac7c.  v0:= temp @kind object;
  #L1aac7e.  v2:= 0I;
  #L1aac80.  v2:= v0[v2] @kind object;
  #L1aac84.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L1aac88.  call temp:= `verify`(v4, v5, v2) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #Try_end0.  
  #L1aac8e.  v2:= temp;
  #L1aac90.  return v2;
  #L1aac92.  v1:= Exception @type ^`javax.net.ssl.SSLException` @kind object;
  #L1aac94.  v2:= v3;
  #L1aac96.  goto L1aac90;
  catch `javax.net.ssl.SSLException` @[Try_start0..Try_end0] goto L1aac92;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v8 @kind this, `java.lang.String` v9 @kind object @name `hostname`, `java.lang.String` v10 @kind object @name `pattern`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1aacb8.  v7:= -1I;
  #L1aacba.  v6:= 46I;
  #L1aacbe.  v3:= 1I;
  #L1aacc0.  v2:= 0I;
  #L1aacc2.  if v9 == 0 then goto L1aacf2;
  #L1aacc6.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aaccc.  v4:= temp;
  #L1aacce.  if v4 == 0 then goto L1aacf2;
  #L1aacd2.  v4:= "." @kind object;
  #L1aacd6.  call temp:= `startsWith`(v9, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1aacdc.  v4:= temp;
  #L1aacde.  if v4 != 0 then goto L1aacf2;
  #L1aace2.  v4:= ".." @kind object;
  #L1aace6.  call temp:= `endsWith`(v9, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1aacec.  v4:= temp;
  #L1aacee.  if v4 == 0 then goto L1aacf4;
  #L1aacf2.  return v2;
  #L1aacf4.  if v10 == 0 then goto L1aacf2;
  #L1aacf8.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aacfe.  v4:= temp;
  #L1aad00.  if v4 == 0 then goto L1aacf2;
  #L1aad04.  v4:= "." @kind object;
  #L1aad08.  call temp:= `startsWith`(v10, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1aad0e.  v4:= temp;
  #L1aad10.  if v4 != 0 then goto L1aacf2;
  #L1aad14.  v4:= ".." @kind object;
  #L1aad18.  call temp:= `endsWith`(v10, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1aad1e.  v4:= temp;
  #L1aad20.  if v4 != 0 then goto L1aacf2;
  #L1aad24.  v4:= "." @kind object;
  #L1aad28.  call temp:= `endsWith`(v9, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1aad2e.  v4:= temp;
  #L1aad30.  if v4 != 0 then goto L1aad56;
  #L1aad34.  v4:= new `java.lang.StringBuilder`;
  #L1aad38.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aad3e.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aad44.  v4:= temp @kind object;
  #L1aad46.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aad4c.  v4:= temp @kind object;
  #L1aad4e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aad54.  v9:= temp @kind object;
  #L1aad56.  v4:= "." @kind object;
  #L1aad5a.  call temp:= `endsWith`(v10, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1aad60.  v4:= temp;
  #L1aad62.  if v4 != 0 then goto L1aad88;
  #L1aad66.  v4:= new `java.lang.StringBuilder`;
  #L1aad6a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aad70.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aad76.  v4:= temp @kind object;
  #L1aad78.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aad7e.  v4:= temp @kind object;
  #L1aad80.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aad86.  v10:= temp @kind object;
  #L1aad88.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1aad8c.  call temp:= `toLowerCase`(v10, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1aad92.  v10:= temp @kind object;
  #L1aad94.  v4:= "*" @kind object;
  #L1aad98.  call temp:= `contains`(v10, v4) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1aad9e.  v4:= temp;
  #L1aada0.  if v4 != 0 then goto L1aadae;
  #L1aada4.  call temp:= `equals`(v9, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aadaa.  v2:= temp;
  #L1aadac.  goto L1aacf2;
  #L1aadae.  v4:= "*." @kind object;
  #L1aadb2.  call temp:= `startsWith`(v10, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1aadb8.  v4:= temp;
  #L1aadba.  if v4 == 0 then goto L1aacf2;
  #L1aadbe.  v4:= 42I;
  #L1aadc2.  call temp:= `indexOf`(v10, v4, v3) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L1aadc8.  v4:= temp;
  #L1aadca.  if v4 != v7 then goto L1aacf2;
  #L1aadce.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aadd4.  v4:= temp;
  #L1aadd6.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aaddc.  v5:= temp;
  #L1aadde.  if v4 < v5 then goto L1aacf2;
  #L1aade2.  v4:= "*." @kind object;
  #L1aade6.  call temp:= `equals`(v4, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aadec.  v4:= temp;
  #L1aadee.  if v4 != 0 then goto L1aacf2;
  #L1aadf2.  call temp:= `substring`(v10, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1aadf8.  v0:= temp @kind object;
  #L1aadfa.  call temp:= `endsWith`(v9, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1aae00.  v4:= temp;
  #L1aae02.  if v4 == 0 then goto L1aacf2;
  #L1aae06.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aae0c.  v4:= temp;
  #L1aae0e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aae14.  v5:= temp;
  #L1aae16.  v1:= v4 - v5 @kind int;
  #L1aae1a.  if v1 <= 0 then goto L1aae2e;
  #L1aae1e.  v4:= v1 + -1;
  #L1aae22.  call temp:= `lastIndexOf`(v9, v6, v4) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L1aae28.  v4:= temp;
  #L1aae2a.  if v4 != v7 then goto L1aacf2;
  #L1aae2e.  v2:= v3;
  #L1aae30.  goto L1aacf2;
}

record `okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `java.lang.Object` `okhttp3.internal.http.RetryAndFollowUpInterceptor.callStackTrace` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http.RetryAndFollowUpInterceptor.canceled` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.OkHttpClient` `okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http.RetryAndFollowUpInterceptor.forWebSocket` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.StreamAllocation` `okhttp3.internal.http.RetryAndFollowUpInterceptor.streamAllocation` @AccessFlag PRIVATE_VOLATILE;
}
global `int` `@@okhttp3.internal.http.RetryAndFollowUpInterceptor.MAX_FOLLOW_UPS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v0 @kind this, `okhttp3.OkHttpClient` v1 @kind object @name `client`, `boolean` v2 @name `forWebSocket`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.<init>:(Lokhttp3/OkHttpClient;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L218034.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21803a.  v0.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L21803e.  v0.`okhttp3.internal.http.RetryAndFollowUpInterceptor.forWebSocket` @type ^`boolean` := v2 @kind boolean;
  #L218042.  return @kind void;
}
procedure `okhttp3.Address` `createAddress`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v13 @kind this, `okhttp3.HttpUrl` v14 @kind object @name `url`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L218054.  v5:= 0I;
  #L218056.  v6:= 0I;
  #L218058.  v7:= 0I;
  #L21805a.  call temp:= `isHttps`(v14) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L218060.  v0:= temp;
  #L218062.  if v0 == 0 then goto L21808a;
  #L218066.  v0:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L21806a.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/OkHttpClient;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L218070.  v5:= temp @kind object;
  #L218072.  v0:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L218076.  call temp:= `hostnameVerifier`(v0) @signature `Lokhttp3/OkHttpClient;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L21807c.  v6:= temp @kind object;
  #L21807e.  v0:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L218082.  call temp:= `certificatePinner`(v0) @signature `Lokhttp3/OkHttpClient;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L218088.  v7:= temp @kind object;
  #L21808a.  v0:= new `okhttp3.Address`;
  #L21808e.  call temp:= `host`(v14) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L218094.  v1:= temp @kind object;
  #L218096.  call temp:= `port`(v14) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L21809c.  v2:= temp;
  #L21809e.  v3:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2180a2.  call temp:= `dns`(v3) @signature `Lokhttp3/OkHttpClient;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L2180a8.  v3:= temp @kind object;
  #L2180aa.  v4:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2180ae.  call temp:= `socketFactory`(v4) @signature `Lokhttp3/OkHttpClient;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L2180b4.  v4:= temp @kind object;
  #L2180b6.  v8:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2180ba.  call temp:= `proxyAuthenticator`(v8) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L2180c0.  v8:= temp @kind object;
  #L2180c2.  v9:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2180c6.  call temp:= `proxy`(v9) @signature `Lokhttp3/OkHttpClient;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L2180cc.  v9:= temp @kind object;
  #L2180ce.  v10:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2180d2.  call temp:= `protocols`(v10) @signature `Lokhttp3/OkHttpClient;.protocols:()Ljava/util/List;` @kind virtual;
  #L2180d8.  v10:= temp @kind object;
  #L2180da.  v11:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2180de.  call temp:= `connectionSpecs`(v11) @signature `Lokhttp3/OkHttpClient;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L2180e4.  v11:= temp @kind object;
  #L2180e6.  v12:= v13.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2180ea.  call temp:= `proxySelector`(v12) @signature `Lokhttp3/OkHttpClient;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L2180f0.  v12:= temp @kind object;
  #L2180f2.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L2180f8.  return v0 @kind object;
}
procedure `okhttp3.Request` `followUpRequest`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v11 @kind this, `okhttp3.Response` v12 @kind object @name `userResponse`, `okhttp3.Route` v13 @kind object @name `route`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.followUpRequest:(Lokhttp3/Response;Lokhttp3/Route;)Lokhttp3/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L21810c.  v3:= 0I;
  #L21810e.  if v12 != 0 then goto L21811e;
  #L218112.  v9:= new `java.lang.IllegalStateException`;
  #L218116.  call `<init>`(v9) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L21811c.  throw v9;
  #L21811e.  call temp:= `code`(v12) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L218124.  v5:= temp;
  #L218126.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L21812c.  v9:= temp @kind object;
  #L21812e.  call temp:= `method`(v9) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L218134.  v2:= temp @kind object;
  #L218136.  goto L218388;
  #L21813c.  return v3 @kind object;
  #L21813e.  if v13 == 0 then goto L21816a;
  #L218142.  call temp:= `proxy`(v13) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L218148.  v7:= temp @kind object;
  #L21814a.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L218150.  v9:= temp @kind object;
  #L218152.  v10:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L218156.  if v9 == v10 then goto L218178;
  #L21815a.  v9:= new `java.net.ProtocolException`;
  #L21815e.  v10:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L218162.  call `<init>`(v9, v10) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L218168.  throw v9;
  #L21816a.  v9:= v11.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L21816e.  call temp:= `proxy`(v9) @signature `Lokhttp3/OkHttpClient;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L218174.  v7:= temp @kind object;
  #L218176.  goto L21814a;
  #L218178.  v9:= v11.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L21817c.  call temp:= `proxyAuthenticator`(v9) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L218182.  v9:= temp @kind object;
  #L218184.  call temp:= `authenticate`(v9, v13, v12) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L21818a.  v3:= temp @kind object;
  #L21818c.  goto L21813c;
  #L21818e.  v9:= v11.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L218192.  call temp:= `authenticator`(v9) @signature `Lokhttp3/OkHttpClient;.authenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L218198.  v9:= temp @kind object;
  #L21819a.  call temp:= `authenticate`(v9, v13, v12) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L2181a0.  v3:= temp @kind object;
  #L2181a2.  goto L21813c;
  #L2181a4.  v9:= "GET" @kind object;
  #L2181a8.  call temp:= `equals`(v2, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2181ae.  v9:= temp;
  #L2181b0.  if v9 != 0 then goto L2181c4;
  #L2181b4.  v9:= "HEAD" @kind object;
  #L2181b8.  call temp:= `equals`(v2, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2181be.  v9:= temp;
  #L2181c0.  if v9 == 0 then goto L21813c;
  #L2181c4.  v9:= v11.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2181c8.  call temp:= `followRedirects`(v9) @signature `Lokhttp3/OkHttpClient;.followRedirects:()Z` @kind virtual;
  #L2181ce.  v9:= temp;
  #L2181d0.  if v9 == 0 then goto L21813c;
  #L2181d4.  v9:= "Location" @kind object;
  #L2181d8.  call temp:= `header`(v12, v9) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2181de.  v0:= temp @kind object;
  #L2181e0.  if v0 == 0 then goto L21813c;
  #L2181e4.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2181ea.  v9:= temp @kind object;
  #L2181ec.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2181f2.  v9:= temp @kind object;
  #L2181f4.  call temp:= `resolve`(v9, v0) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L2181fa.  v8:= temp @kind object;
  #L2181fc.  if v8 == 0 then goto L21813c;
  #L218200.  call temp:= `scheme`(v8) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L218206.  v9:= temp @kind object;
  #L218208.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L21820e.  v10:= temp @kind object;
  #L218210.  call temp:= `url`(v10) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L218216.  v10:= temp @kind object;
  #L218218.  call temp:= `scheme`(v10) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L21821e.  v10:= temp @kind object;
  #L218220.  call temp:= `equals`(v9, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L218226.  v6:= temp;
  #L218228.  if v6 != 0 then goto L21823c;
  #L21822c.  v9:= v11.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L218230.  call temp:= `followSslRedirects`(v9) @signature `Lokhttp3/OkHttpClient;.followSslRedirects:()Z` @kind virtual;
  #L218236.  v9:= temp;
  #L218238.  if v9 == 0 then goto L21813c;
  #L21823c.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L218242.  v9:= temp @kind object;
  #L218244.  call temp:= `newBuilder`(v9) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L21824a.  v4:= temp @kind object;
  #L21824c.  call temp:= `permitsRequestBody`(v2) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L218252.  v9:= temp;
  #L218254.  if v9 == 0 then goto L218298;
  #L218258.  call temp:= `redirectsWithBody`(v2) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsWithBody:(Ljava/lang/String;)Z` @kind static;
  #L21825e.  v1:= temp;
  #L218260.  call temp:= `redirectsToGet`(v2) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @kind static;
  #L218266.  v9:= temp;
  #L218268.  if v9 == 0 then goto L2182c2;
  #L21826c.  v9:= "GET" @kind object;
  #L218270.  call temp:= `method`(v4, v9, v3) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L218276.  if v1 != 0 then goto L218298;
  #L21827a.  v9:= "Transfer-Encoding" @kind object;
  #L21827e.  call temp:= `removeHeader`(v4, v9) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L218284.  v9:= "Content-Length" @kind object;
  #L218288.  call temp:= `removeHeader`(v4, v9) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L21828e.  v9:= "Content-Type" @kind object;
  #L218292.  call temp:= `removeHeader`(v4, v9) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L218298.  call temp:= `sameConnection`(v11, v12, v8) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.sameConnection:(Lokhttp3/Response;Lokhttp3/HttpUrl;)Z` @kind direct;
  #L21829e.  v9:= temp;
  #L2182a0.  if v9 != 0 then goto L2182ae;
  #L2182a4.  v9:= "Authorization" @kind object;
  #L2182a8.  call temp:= `removeHeader`(v4, v9) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2182ae.  call temp:= `url`(v4, v8) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2182b4.  v9:= temp @kind object;
  #L2182b6.  call temp:= `build`(v9) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L2182bc.  v3:= temp @kind object;
  #L2182be.  goto L21813c;
  #L2182c2.  if v1 == 0 then goto L2182d6;
  #L2182c6.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2182cc.  v9:= temp @kind object;
  #L2182ce.  call temp:= `body`(v9) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L2182d4.  v3:= temp @kind object;
  #L2182d6.  call temp:= `method`(v4, v2, v3) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2182dc.  goto L218276;
  #L2182de.  v9:= v11.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2182e2.  call temp:= `retryOnConnectionFailure`(v9) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L2182e8.  v9:= temp;
  #L2182ea.  if v9 == 0 then goto L21813c;
  #L2182ee.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2182f4.  v9:= temp @kind object;
  #L2182f6.  call temp:= `body`(v9) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L2182fc.  v9:= temp @kind object;
  #L2182fe.  v9:= instanceof @variable v9 @type ^`okhttp3.internal.http.UnrepeatableRequestBody` @kind boolean;
  #L218302.  if v9 != 0 then goto L21813c;
  #L218306.  call temp:= `priorResponse`(v12) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L21830c.  v9:= temp @kind object;
  #L21830e.  if v9 == 0 then goto L21832a;
  #L218312.  call temp:= `priorResponse`(v12) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L218318.  v9:= temp @kind object;
  #L21831a.  call temp:= `code`(v9) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L218320.  v9:= temp;
  #L218322.  v10:= 408I;
  #L218326.  if v9 == v10 then goto L21813c;
  #L21832a.  v9:= 0I;
  #L21832c.  call temp:= `retryAfter`(v11, v12, v9) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.retryAfter:(Lokhttp3/Response;I)I` @kind direct;
  #L218332.  v9:= temp;
  #L218334.  if v9 > 0 then goto L21813c;
  #L218338.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L21833e.  v3:= temp @kind object;
  #L218340.  goto L21813c;
  #L218344.  call temp:= `priorResponse`(v12) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L21834a.  v9:= temp @kind object;
  #L21834c.  if v9 == 0 then goto L218368;
  #L218350.  call temp:= `priorResponse`(v12) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L218356.  v9:= temp @kind object;
  #L218358.  call temp:= `code`(v9) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L21835e.  v9:= temp;
  #L218360.  v10:= 503I;
  #L218364.  if v9 == v10 then goto L21813c;
  #L218368.  v9:= 2147483647I;
  #L21836e.  call temp:= `retryAfter`(v11, v12, v9) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.retryAfter:(Lokhttp3/Response;I)I` @kind direct;
  #L218374.  v9:= temp;
  #L218376.  if v9 != 0 then goto L21813c;
  #L21837a.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L218380.  v3:= temp @kind object;
  #L218382.  goto L21813c;
  #L218386.  
  #L218388.  switch v5
                  | 300 => goto L2181c4
                  | 301 => goto L2181c4
                  | 302 => goto L2181c4
                  | 303 => goto L2181c4
                  | 307 => goto L2181a4
                  | 308 => goto L2181a4
                  | 401 => goto L21818e
                  | 407 => goto L21813e
                  | 408 => goto L2182de
                  | 503 => goto L218344
                  | else => goto L21813c;
}
procedure `boolean` `isRecoverable`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v3 @kind this, `java.io.IOException` v4 @kind object @name `e`, `boolean` v5 @name `requestSendStarted`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isRecoverable:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2183ec.  v0:= 1I;
  #L2183ee.  v1:= 0I;
  #L2183f0.  v2:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L2183f4.  if v2 == 0 then goto L2183fa;
  #L2183f8.  return v1;
  #L2183fa.  v2:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L2183fe.  if v2 == 0 then goto L218416;
  #L218402.  v2:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L218406.  if v2 == 0 then goto L218412;
  #L21840a.  if v5 != 0 then goto L218412;
  #L21840e.  v1:= v0;
  #L218410.  goto L2183f8;
  #L218412.  v0:= v1;
  #L218414.  goto L21840e;
  #L218416.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L21841a.  if v2 == 0 then goto L21842e;
  #L21841e.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L218424.  v2:= temp @kind object;
  #L218426.  v2:= instanceof @variable v2 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L21842a.  if v2 != 0 then goto L2183f8;
  #L21842e.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L218432.  if v2 != 0 then goto L2183f8;
  #L218436.  v1:= v0;
  #L218438.  goto L2183f8;
}
procedure `boolean` `recover`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v2 @kind this, `java.io.IOException` v3 @kind object @name `e`, `okhttp3.internal.connection.StreamAllocation` v4 @kind object @name `streamAllocation`, `boolean` v5 @name `requestSendStarted`, `okhttp3.Request` v6 @kind object @name `userRequest`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.recover:(Ljava/io/IOException;Lokhttp3/internal/connection/StreamAllocation;ZLokhttp3/Request;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L21844c.  v0:= 0I;
  #L21844e.  call `streamFailed`(v4, v3) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFailed:(Ljava/io/IOException;)V` @kind virtual;
  #L218454.  v1:= v2.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L218458.  call temp:= `retryOnConnectionFailure`(v1) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L21845e.  v1:= temp;
  #L218460.  if v1 != 0 then goto L218466;
  #L218464.  return v0;
  #L218466.  if v5 == 0 then goto L21847a;
  #L21846a.  call temp:= `body`(v6) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L218470.  v1:= temp @kind object;
  #L218472.  v1:= instanceof @variable v1 @type ^`okhttp3.internal.http.UnrepeatableRequestBody` @kind boolean;
  #L218476.  if v1 != 0 then goto L218464;
  #L21847a.  call temp:= `isRecoverable`(v2, v3, v5) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isRecoverable:(Ljava/io/IOException;Z)Z` @kind direct;
  #L218480.  v1:= temp;
  #L218482.  if v1 == 0 then goto L218464;
  #L218486.  call temp:= `hasMoreRoutes`(v4) @signature `Lokhttp3/internal/connection/StreamAllocation;.hasMoreRoutes:()Z` @kind virtual;
  #L21848c.  v1:= temp;
  #L21848e.  if v1 == 0 then goto L218464;
  #L218492.  v0:= 1I;
  #L218494.  goto L218464;
}
procedure `int` `retryAfter`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v2 @kind this, `okhttp3.Response` v3 @kind object @name `userResponse`, `int` v4 @name `defaultDelay`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.retryAfter:(Lokhttp3/Response;I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2184a8.  v1:= "Retry-After" @kind object;
  #L2184ac.  call temp:= `header`(v3, v1) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2184b2.  v0:= temp @kind object;
  #L2184b4.  if v0 != 0 then goto L2184ba;
  #L2184b8.  return v4;
  #L2184ba.  v1:= "\\d+" @kind object;
  #L2184be.  call temp:= `matches`(v0, v1) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L2184c4.  v1:= temp;
  #L2184c6.  if v1 == 0 then goto L2184dc;
  #L2184ca.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L2184d0.  v1:= temp @kind object;
  #L2184d2.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2184d8.  v4:= temp;
  #L2184da.  goto L2184b8;
  #L2184dc.  v4:= 2147483647I;
  #L2184e2.  goto L2184b8;
}
procedure `boolean` `sameConnection`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v3 @kind this, `okhttp3.Response` v4 @kind object @name `response`, `okhttp3.HttpUrl` v5 @kind object @name `followUp`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.sameConnection:(Lokhttp3/Response;Lokhttp3/HttpUrl;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2184f4.  call temp:= `request`(v4) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2184fa.  v1:= temp @kind object;
  #L2184fc.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L218502.  v0:= temp @kind object;
  #L218504.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L21850a.  v1:= temp @kind object;
  #L21850c.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L218512.  v2:= temp @kind object;
  #L218514.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21851a.  v1:= temp;
  #L21851c.  if v1 == 0 then goto L218554;
  #L218520.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L218526.  v1:= temp;
  #L218528.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L21852e.  v2:= temp;
  #L218530.  if v1 != v2 then goto L218554;
  #L218534.  call temp:= `scheme`(v0) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L21853a.  v1:= temp @kind object;
  #L21853c.  call temp:= `scheme`(v5) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L218542.  v2:= temp @kind object;
  #L218544.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21854a.  v1:= temp;
  #L21854c.  if v1 == 0 then goto L218554;
  #L218550.  v1:= 1I;
  #L218552.  return v1;
  #L218554.  v1:= 0I;
  #L218556.  goto L218552;
}
procedure `void` `cancel`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v2 @kind this) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L218568.  v1:= 1I;
  #L21856a.  v2.`okhttp3.internal.http.RetryAndFollowUpInterceptor.canceled` @type ^`boolean` := v1 @kind boolean;
  #L21856e.  v0:= v2.`okhttp3.internal.http.RetryAndFollowUpInterceptor.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L218572.  if v0 == 0 then goto L21857c;
  #L218576.  call `cancel`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.cancel:()V` @kind virtual;
  #L21857c.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v15 @kind this, `okhttp3.Interceptor$Chain` v16 @kind object @name `chain`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L218590.  call temp:= `request`(v16) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L218596.  v12:= temp @kind object;
  #L218598.  v10:= v16 @kind object;
  #L21859c.  v10:= (`okhttp3.internal.http.RealInterceptorChain`) v10 @kind object;
  #L2185a0.  call temp:= `call`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L2185a6.  v3:= temp @kind object;
  #L2185a8.  call temp:= `eventListener`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L2185ae.  v4:= temp @kind object;
  #L2185b0.  v0:= new `okhttp3.internal.connection.StreamAllocation`;
  #L2185b4.  v1:= v15.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2185b8.  call temp:= `connectionPool`(v1) @signature `Lokhttp3/OkHttpClient;.connectionPool:()Lokhttp3/ConnectionPool;` @kind virtual;
  #L2185be.  v1:= temp @kind object;
  #L2185c0.  call temp:= `url`(v12) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2185c6.  v2:= temp @kind object;
  #L2185c8.  call temp:= `createAddress`(v15, v2) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;` @kind direct;
  #L2185ce.  v2:= temp @kind object;
  #L2185d0.  v5:= v15.`okhttp3.internal.http.RetryAndFollowUpInterceptor.callStackTrace` @type ^`java.lang.Object` @kind object;
  #L2185d4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/connection/StreamAllocation;.<init>:(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/Call;Lokhttp3/EventListener;Ljava/lang/Object;)V` @kind direct;
  #L2185da.  v15.`okhttp3.internal.http.RetryAndFollowUpInterceptor.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` := v0 @kind object;
  #L2185de.  v8:= 0I;
  #L2185e0.  v9:= 0I;
  #L2185e2.  v1:= v15.`okhttp3.internal.http.RetryAndFollowUpInterceptor.canceled` @type ^`boolean` @kind boolean;
  #L2185e6.  if v1 == 0 then goto L218600;
  #L2185ea.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L2185f0.  v1:= new `java.io.IOException`;
  #L2185f4.  v2:= "Canceled" @kind object;
  #L2185f8.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2185fe.  throw v1;
  #L218600.  v11:= 1I;
  #L218602.  v1:= 0I;
  #L218604.  v2:= 0I;
  #Try_start0.  
  #L218606.  call temp:= `proceed`(v10, v12, v0, v1, v2) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Response;` @kind virtual;
  #Try_end0.  
  #L21860c.  v14:= temp @kind object;
  #L21860e.  v11:= 0I;
  #L218610.  if v11 == 0 then goto L218622;
  #L218614.  v1:= 0I;
  #L218616.  call `streamFailed`(v0, v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFailed:(Ljava/io/IOException;)V` @kind virtual;
  #L21861c.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L218622.  if v9 == 0 then goto L218658;
  #L218626.  call temp:= `newBuilder`(v14) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L21862c.  v1:= temp @kind object;
  #L21862e.  call temp:= `newBuilder`(v9) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L218634.  v2:= temp @kind object;
  #L218636.  v5:= 0I;
  #L218638.  call temp:= `body`(v2, v5) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L21863e.  v2:= temp @kind object;
  #L218640.  call temp:= `build`(v2) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L218646.  v2:= temp @kind object;
  #L218648.  call temp:= `priorResponse`(v1, v2) @signature `Lokhttp3/Response$Builder;.priorResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L21864e.  v1:= temp @kind object;
  #L218650.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L218656.  v14:= temp @kind object;
  #L218658.  call temp:= `route`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.route:()Lokhttp3/Route;` @kind virtual;
  #L21865e.  v1:= temp @kind object;
  #L218660.  call temp:= `followUpRequest`(v15, v14, v1) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.followUpRequest:(Lokhttp3/Response;Lokhttp3/Route;)Lokhttp3/Request;` @kind direct;
  #L218666.  v7:= temp @kind object;
  #L218668.  if v7 != 0 then goto L218700;
  #L21866c.  v1:= v15.`okhttp3.internal.http.RetryAndFollowUpInterceptor.forWebSocket` @type ^`boolean` @kind boolean;
  #L218670.  if v1 != 0 then goto L21867a;
  #L218674.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L21867a.  return v14 @kind object;
  #L21867c.  v6:= Exception @type ^`okhttp3.internal.connection.RouteException` @kind object;
  #Try_start1.  
  #L21867e.  call temp:= `getLastConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L218684.  v1:= temp @kind object;
  #L218686.  v2:= 0I;
  #L218688.  call temp:= `recover`(v15, v1, v0, v2, v12) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.recover:(Ljava/io/IOException;Lokhttp3/internal/connection/StreamAllocation;ZLokhttp3/Request;)Z` @kind direct;
  #L21868e.  v1:= temp;
  #L218690.  if v1 != 0 then goto L2186b4;
  #L218694.  call temp:= `getLastConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L21869a.  v1:= temp @kind object;
  #L21869c.  throw v1;
  #Try_end1.  
  #L21869e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2186a0.  if v11 == 0 then goto L2186b2;
  #L2186a4.  v2:= 0I;
  #L2186a6.  call `streamFailed`(v0, v2) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFailed:(Ljava/io/IOException;)V` @kind virtual;
  #L2186ac.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L2186b2.  throw v1;
  #L2186b4.  v11:= 0I;
  #L2186b6.  if v11 == 0 then goto L2185e2;
  #L2186ba.  v1:= 0I;
  #L2186bc.  call `streamFailed`(v0, v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFailed:(Ljava/io/IOException;)V` @kind virtual;
  #L2186c2.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L2186c8.  goto L2185e2;
  #L2186ca.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L2186cc.  v1:= instanceof @variable v6 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L2186d0.  if v1 != 0 then goto L2186e4;
  #L2186d4.  v13:= 1I;
  #L2186d6.  call temp:= `recover`(v15, v6, v0, v13, v12) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.recover:(Ljava/io/IOException;Lokhttp3/internal/connection/StreamAllocation;ZLokhttp3/Request;)Z` @kind direct;
  #L2186dc.  v1:= temp;
  #L2186de.  if v1 != 0 then goto L2186e8;
  #L2186e2.  throw v6;
  #Try_end2.  
  #L2186e4.  v13:= 0I;
  #L2186e6.  goto L2186d6;
  #L2186e8.  v11:= 0I;
  #L2186ea.  if v11 == 0 then goto L2185e2;
  #L2186ee.  v1:= 0I;
  #L2186f0.  call `streamFailed`(v0, v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFailed:(Ljava/io/IOException;)V` @kind virtual;
  #L2186f6.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L2186fc.  goto L2185e2;
  #L218700.  call temp:= `body`(v14) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L218706.  v1:= temp @kind object;
  #L218708.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L21870e.  v8:= v8 + 1;
  #L218712.  v1:= 20I;
  #L218716.  if v8 <= v1 then goto L218752;
  #L21871a.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L218720.  v1:= new `java.net.ProtocolException`;
  #L218724.  v2:= new `java.lang.StringBuilder`;
  #L218728.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21872e.  v5:= "Too many follow-up requests: " @kind object;
  #L218732.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L218738.  v2:= temp @kind object;
  #L21873a.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L218740.  v2:= temp @kind object;
  #L218742.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L218748.  v2:= temp @kind object;
  #L21874a.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L218750.  throw v1;
  #L218752.  call temp:= `body`(v7) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L218758.  v1:= temp @kind object;
  #L21875a.  v1:= instanceof @variable v1 @type ^`okhttp3.internal.http.UnrepeatableRequestBody` @kind boolean;
  #L21875e.  if v1 == 0 then goto L218780;
  #L218762.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L218768.  v1:= new `java.net.HttpRetryException`;
  #L21876c.  v2:= "Cannot retry streamed HTTP body" @kind object;
  #L218770.  call temp:= `code`(v14) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L218776.  v5:= temp;
  #L218778.  call `<init>`(v1, v2, v5) @signature `Ljava/net/HttpRetryException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L21877e.  throw v1;
  #L218780.  call temp:= `url`(v7) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L218786.  v1:= temp @kind object;
  #L218788.  call temp:= `sameConnection`(v15, v14, v1) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.sameConnection:(Lokhttp3/Response;Lokhttp3/HttpUrl;)Z` @kind direct;
  #L21878e.  v1:= temp;
  #L218790.  if v1 != 0 then goto L2187d0;
  #L218794.  call `release`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.release:()V` @kind virtual;
  #L21879a.  v0:= new `okhttp3.internal.connection.StreamAllocation`;
  #L21879e.  v1:= v15.`okhttp3.internal.http.RetryAndFollowUpInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2187a2.  call temp:= `connectionPool`(v1) @signature `Lokhttp3/OkHttpClient;.connectionPool:()Lokhttp3/ConnectionPool;` @kind virtual;
  #L2187a8.  v1:= temp @kind object;
  #L2187aa.  call temp:= `url`(v7) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2187b0.  v2:= temp @kind object;
  #L2187b2.  call temp:= `createAddress`(v15, v2) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;` @kind direct;
  #L2187b8.  v2:= temp @kind object;
  #L2187ba.  v5:= v15.`okhttp3.internal.http.RetryAndFollowUpInterceptor.callStackTrace` @type ^`java.lang.Object` @kind object;
  #L2187be.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/connection/StreamAllocation;.<init>:(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/Call;Lokhttp3/EventListener;Ljava/lang/Object;)V` @kind direct;
  #L2187c4.  v15.`okhttp3.internal.http.RetryAndFollowUpInterceptor.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` := v0 @kind object;
  #L2187c8.  v12:= v7 @kind object;
  #L2187ca.  v9:= v14 @kind object;
  #L2187cc.  goto L2185e2;
  #L2187d0.  call temp:= `codec`(v0) @signature `Lokhttp3/internal/connection/StreamAllocation;.codec:()Lokhttp3/internal/http/HttpCodec;` @kind virtual;
  #L2187d6.  v1:= temp @kind object;
  #L2187d8.  if v1 == 0 then goto L2187c8;
  #L2187dc.  v1:= new `java.lang.IllegalStateException`;
  #L2187e0.  v2:= new `java.lang.StringBuilder`;
  #L2187e4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2187ea.  v5:= "Closing the body of " @kind object;
  #L2187ee.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2187f4.  v2:= temp @kind object;
  #L2187f6.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2187fc.  v2:= temp @kind object;
  #L2187fe.  v5:= " didn't close its backing stream. Bad interceptor?" @kind object;
  #L218802.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L218808.  v2:= temp @kind object;
  #L21880a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L218810.  v2:= temp @kind object;
  #L218812.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L218818.  throw v1;
  catch `okhttp3.internal.connection.RouteException` @[Try_start0..Try_end0] goto L21867c;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L2186ca;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21869e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21869e;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21869e;
}
procedure `boolean` `isCanceled`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v1 @kind this) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L218854.  v0:= v1.`okhttp3.internal.http.RetryAndFollowUpInterceptor.canceled` @type ^`boolean` @kind boolean;
  #L218858.  return v0;
}
procedure `void` `setCallStackTrace`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v0 @kind this, `java.lang.Object` v1 @kind object @name `callStackTrace`) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.setCallStackTrace:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L21886c.  v0.`okhttp3.internal.http.RetryAndFollowUpInterceptor.callStackTrace` @type ^`java.lang.Object` := v1 @kind object;
  #L218870.  return @kind void;
}
procedure `okhttp3.internal.connection.StreamAllocation` `streamAllocation`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v1 @kind this) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.streamAllocation:()Lokhttp3/internal/connection/StreamAllocation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L218884.  v0:= v1.`okhttp3.internal.http.RetryAndFollowUpInterceptor.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L218888.  return v0 @kind object;
}

record `okhttp3.internal.cache.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC {
  `int` `okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.etag` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.expires` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy$Factory.request` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy$Factory` v9 @kind this, `long` v10 @name `nowMillis`, `okhttp3.Request` v12 @kind object @name `request`, `okhttp3.Response` v13 @kind object @name `cacheResponse`) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19ef24.  v8:= -1I;
  #L19ef26.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19ef2c.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v8;
  #L19ef30.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` := v10 @kind wide;
  #L19ef34.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` := v12 @kind object;
  #L19ef38.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` := v13 @kind object;
  #L19ef3c.  if v13 == 0 then goto L19f018;
  #L19ef40.  call temp:= `sentRequestAtMillis`(v13) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L19ef46.  v6:= temp @kind wide;
  #L19ef48.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` := v6 @kind wide;
  #L19ef4c.  call temp:= `receivedResponseAtMillis`(v13) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L19ef52.  v6:= temp @kind wide;
  #L19ef54.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` := v6 @kind wide;
  #L19ef58.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L19ef5e.  v1:= temp @kind object;
  #L19ef60.  v2:= 0I;
  #L19ef62.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19ef68.  v3:= temp;
  #L19ef6a.  if v2 >= v3 then goto L19f018;
  #L19ef6e.  call temp:= `name`(v1, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19ef74.  v0:= temp @kind object;
  #L19ef76.  call temp:= `value`(v1, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19ef7c.  v4:= temp @kind object;
  #L19ef7e.  v5:= "Date" @kind object;
  #L19ef82.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19ef88.  v5:= temp;
  #L19ef8a.  if v5 == 0 then goto L19efa4;
  #L19ef8e.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L19ef94.  v5:= temp @kind object;
  #L19ef96.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` := v5 @kind object;
  #L19ef9a.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` := v4 @kind object;
  #L19ef9e.  v2:= v2 + 1;
  #L19efa2.  goto L19ef6a;
  #L19efa4.  v5:= "Expires" @kind object;
  #L19efa8.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19efae.  v5:= temp;
  #L19efb0.  if v5 == 0 then goto L19efc2;
  #L19efb4.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L19efba.  v5:= temp @kind object;
  #L19efbc.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` := v5 @kind object;
  #L19efc0.  goto L19ef9e;
  #L19efc2.  v5:= "Last-Modified" @kind object;
  #L19efc6.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19efcc.  v5:= temp;
  #L19efce.  if v5 == 0 then goto L19efe4;
  #L19efd2.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L19efd8.  v5:= temp @kind object;
  #L19efda.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` := v5 @kind object;
  #L19efde.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` := v4 @kind object;
  #L19efe2.  goto L19ef9e;
  #L19efe4.  v5:= "ETag" @kind object;
  #L19efe8.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19efee.  v5:= temp;
  #L19eff0.  if v5 == 0 then goto L19effa;
  #L19eff4.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` := v4 @kind object;
  #L19eff8.  goto L19ef9e;
  #L19effa.  v5:= "Age" @kind object;
  #L19effe.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19f004.  v5:= temp;
  #L19f006.  if v5 == 0 then goto L19ef9e;
  #L19f00a.  call temp:= `parseSeconds`(v4, v8) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L19f010.  v5:= temp;
  #L19f012.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v5;
  #L19f016.  goto L19ef9e;
  #L19f018.  return @kind void;
}
procedure `long` `cacheResponseAge`(`okhttp3.internal.cache.CacheStrategy$Factory` v12 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19f02c.  v0:= 0L;
  #L19f030.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19f034.  if v8 == 0 then goto L19f052;
  #L19f038.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L19f03c.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19f040.  call temp:= `getTime`(v10) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19f046.  v10:= temp @kind wide;
  #L19f048.  v8:= v8 - v10 @kind long;
  #L19f04a.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L19f050.  v0:= temp @kind wide;
  #L19f052.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L19f056.  v9:= -1I;
  #L19f058.  if v8 == v9 then goto L19f096;
  #L19f05c.  v8:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19f060.  v9:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L19f064.  v10:= (`long`) v9 @kind i2l;
  #L19f066.  call temp:= `toMillis`(v8, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19f06c.  v8:= temp @kind wide;
  #L19f06e.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L19f074.  v2:= temp @kind wide;
  #L19f076.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L19f07a.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L19f07e.  v6:= v8 - v10 @kind long;
  #L19f082.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` @kind wide;
  #L19f086.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L19f08a.  v4:= v8 - v10 @kind long;
  #L19f08e.  v8:= v2 + v6 @kind long;
  #L19f092.  v8:= v8 + v4 @kind long;
  #L19f094.  return v8 @kind wide;
  #L19f096.  v2:= v0 @kind wide;
  #L19f098.  goto L19f076;
}
procedure `long` `computeFreshnessLifetime`(`okhttp3.internal.cache.CacheStrategy$Factory` v10 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19f0ac.  v6:= 0L;
  #L19f0b0.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f0b4.  call temp:= `cacheControl`(v3) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19f0ba.  v2:= temp @kind object;
  #L19f0bc.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19f0c2.  v3:= temp;
  #L19f0c4.  v8:= -1I;
  #L19f0c6.  if v3 == v8 then goto L19f0e2;
  #L19f0ca.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19f0ce.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19f0d4.  v6:= temp;
  #L19f0d6.  v6:= (`long`) v6 @kind i2l;
  #L19f0d8.  call temp:= `toMillis`(v3, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19f0de.  v6:= temp @kind wide;
  #L19f0e0.  return v6 @kind wide;
  #L19f0e2.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L19f0e6.  if v3 == 0 then goto L19f124;
  #L19f0ea.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19f0ee.  if v3 == 0 then goto L19f11a;
  #L19f0f2.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19f0f6.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19f0fc.  v4:= temp @kind wide;
  #L19f0fe.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L19f102.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19f108.  v8:= temp @kind wide;
  #L19f10a.  v0:= v8 - v4 @kind long;
  #L19f10e.  v3:= lcmp(v0, v6);
  #L19f112.  if v3 <= 0 then goto L19f120;
  #L19f116.  v6:= v0 @kind wide;
  #L19f118.  goto L19f0e0;
  #L19f11a.  v4:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L19f11e.  goto L19f0fe;
  #L19f120.  v0:= v6 @kind wide;
  #L19f122.  goto L19f116;
  #L19f124.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L19f128.  if v3 == 0 then goto L19f0e0;
  #L19f12c.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f130.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L19f136.  v3:= temp @kind object;
  #L19f138.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19f13e.  v3:= temp @kind object;
  #L19f140.  call temp:= `query`(v3) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L19f146.  v3:= temp @kind object;
  #L19f148.  if v3 != 0 then goto L19f0e0;
  #L19f14c.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19f150.  if v3 == 0 then goto L19f182;
  #L19f154.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19f158.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19f15e.  v4:= temp @kind wide;
  #L19f160.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L19f164.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L19f16a.  v8:= temp @kind wide;
  #L19f16c.  v0:= v4 - v8 @kind long;
  #L19f170.  v3:= lcmp(v0, v6);
  #L19f174.  if v3 <= 0 then goto L19f0e0;
  #L19f178.  v6:= 10L;
  #L19f17c.  v6:= v0 / v6 @kind long;
  #L19f180.  goto L19f0e0;
  #L19f182.  v4:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L19f186.  goto L19f160;
}
procedure `okhttp3.internal.cache.CacheStrategy` `getCandidate`(`okhttp3.internal.cache.CacheStrategy$Factory` v24 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L19f198.  v0:= v24 @kind object;
  #L19f19c.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f1a0.  v19:= v0 @kind object;
  #L19f1a4.  if v19 != 0 then goto L19f1c4;
  #L19f1a8.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f1ac.  v0:= v24 @kind object;
  #L19f1b0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f1b4.  v20:= v0 @kind object;
  #L19f1b8.  v21:= 0I;
  #L19f1bc.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f1c2.  return v19 @kind object;
  #L19f1c4.  v0:= v24 @kind object;
  #L19f1c8.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f1cc.  v19:= v0 @kind object;
  #L19f1d0.  call temp:= `isHttps`(v19) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L19f1d6.  v19:= temp;
  #L19f1d8.  if v19 == 0 then goto L19f210;
  #L19f1dc.  v0:= v24 @kind object;
  #L19f1e0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f1e4.  v19:= v0 @kind object;
  #L19f1e8.  call temp:= `handshake`(v19) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L19f1ee.  v19:= temp @kind object;
  #L19f1f0.  if v19 != 0 then goto L19f210;
  #L19f1f4.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f1f8.  v0:= v24 @kind object;
  #L19f1fc.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f200.  v20:= v0 @kind object;
  #L19f204.  v21:= 0I;
  #L19f208.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f20e.  goto L19f1c2;
  #L19f210.  v0:= v24 @kind object;
  #L19f214.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f218.  v19:= v0 @kind object;
  #L19f21c.  v0:= v24 @kind object;
  #L19f220.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f224.  v20:= v0 @kind object;
  #L19f228.  call temp:= `isCacheable`(v19, v20) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L19f22e.  v19:= temp;
  #L19f230.  if v19 != 0 then goto L19f250;
  #L19f234.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f238.  v0:= v24 @kind object;
  #L19f23c.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f240.  v20:= v0 @kind object;
  #L19f244.  v21:= 0I;
  #L19f248.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f24e.  goto L19f1c2;
  #L19f250.  v0:= v24 @kind object;
  #L19f254.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f258.  v19:= v0 @kind object;
  #L19f25c.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19f262.  v9:= temp @kind object;
  #L19f264.  call temp:= `noCache`(v9) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L19f26a.  v19:= temp;
  #L19f26c.  if v19 != 0 then goto L19f288;
  #L19f270.  v0:= v24 @kind object;
  #L19f274.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f278.  v19:= v0 @kind object;
  #L19f27c.  call temp:= `hasConditions`(v19) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @kind static;
  #L19f282.  v19:= temp;
  #L19f284.  if v19 == 0 then goto L19f2a4;
  #L19f288.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f28c.  v0:= v24 @kind object;
  #L19f290.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f294.  v20:= v0 @kind object;
  #L19f298.  v21:= 0I;
  #L19f29c.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f2a2.  goto L19f1c2;
  #L19f2a4.  v0:= v24 @kind object;
  #L19f2a8.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f2ac.  v19:= v0 @kind object;
  #L19f2b0.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19f2b6.  v18:= temp @kind object;
  #L19f2b8.  call temp:= `immutable`(v18) @signature `Lokhttp3/CacheControl;.immutable:()Z` @kind virtual;
  #L19f2be.  v19:= temp;
  #L19f2c0.  if v19 == 0 then goto L19f2e2;
  #L19f2c4.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f2c8.  v20:= 0I;
  #L19f2cc.  v0:= v24 @kind object;
  #L19f2d0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f2d4.  v21:= v0 @kind object;
  #L19f2d8.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f2de.  goto L19f1c2;
  #L19f2e2.  call temp:= `cacheResponseAge`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @kind direct;
  #L19f2e8.  v2:= temp @kind wide;
  #L19f2ea.  call temp:= `computeFreshnessLifetime`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @kind direct;
  #L19f2f0.  v10:= temp @kind wide;
  #L19f2f2.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19f2f8.  v19:= temp;
  #L19f2fa.  v20:= -1I;
  #L19f2fe.  v0:= v19;
  #L19f302.  v1:= v20;
  #L19f306.  if v0 == v1 then goto L19f334;
  #L19f30a.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19f30e.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19f314.  v20:= temp;
  #L19f316.  v0:= v20;
  #L19f31a.  v0:= (`long`) v0 @kind i2l;
  #L19f31c.  v20:= v0 @kind wide;
  #L19f320.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19f326.  v20:= temp @kind wide;
  #L19f328.  v0:= v20 @kind wide;
  #L19f32c.  call temp:= `min`(v10, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L19f332.  v10:= temp @kind wide;
  #L19f334.  v14:= 0L;
  #L19f338.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L19f33e.  v19:= temp;
  #L19f340.  v20:= -1I;
  #L19f344.  v0:= v19;
  #L19f348.  v1:= v20;
  #L19f34c.  if v0 == v1 then goto L19f36e;
  #L19f350.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19f354.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L19f35a.  v20:= temp;
  #L19f35c.  v0:= v20;
  #L19f360.  v0:= (`long`) v0 @kind i2l;
  #L19f362.  v20:= v0 @kind wide;
  #L19f366.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19f36c.  v14:= temp @kind wide;
  #L19f36e.  v12:= 0L;
  #L19f372.  call temp:= `mustRevalidate`(v18) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L19f378.  v19:= temp;
  #L19f37a.  if v19 != 0 then goto L19f3b4;
  #L19f37e.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L19f384.  v19:= temp;
  #L19f386.  v20:= -1I;
  #L19f38a.  v0:= v19;
  #L19f38e.  v1:= v20;
  #L19f392.  if v0 == v1 then goto L19f3b4;
  #L19f396.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L19f39a.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L19f3a0.  v20:= temp;
  #L19f3a2.  v0:= v20;
  #L19f3a6.  v0:= (`long`) v0 @kind i2l;
  #L19f3a8.  v20:= v0 @kind wide;
  #L19f3ac.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19f3b2.  v12:= temp @kind wide;
  #L19f3b4.  call temp:= `noCache`(v18) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L19f3ba.  v19:= temp;
  #L19f3bc.  if v19 != 0 then goto L19f450;
  #L19f3c0.  v20:= v2 + v14 @kind long;
  #L19f3c4.  v22:= v10 + v12 @kind long;
  #L19f3c8.  v19:= lcmp(v20, v22);
  #L19f3cc.  if v19 >= 0 then goto L19f450;
  #L19f3d0.  v0:= v24 @kind object;
  #L19f3d4.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f3d8.  v19:= v0 @kind object;
  #L19f3dc.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L19f3e2.  v4:= temp @kind object;
  #L19f3e4.  v20:= v2 + v14 @kind long;
  #L19f3e8.  v19:= lcmp(v20, v10);
  #L19f3ec.  if v19 < 0 then goto L19f406;
  #L19f3f0.  v19:= "Warning" @kind object;
  #L19f3f4.  v20:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L19f3f8.  v0:= v19 @kind object;
  #L19f3fc.  v1:= v20 @kind object;
  #L19f400.  call temp:= `addHeader`(v4, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L19f406.  v16:= 86400000L;
  #L19f40c.  v19:= lcmp(v2, v16);
  #L19f410.  if v19 <= 0 then goto L19f436;
  #L19f414.  call temp:= `isFreshnessLifetimeHeuristic`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @kind direct;
  #L19f41a.  v19:= temp;
  #L19f41c.  if v19 == 0 then goto L19f436;
  #L19f420.  v19:= "Warning" @kind object;
  #L19f424.  v20:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L19f428.  v0:= v19 @kind object;
  #L19f42c.  v1:= v20 @kind object;
  #L19f430.  call temp:= `addHeader`(v4, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L19f436.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f43a.  v20:= 0I;
  #L19f43e.  call temp:= `build`(v4) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L19f444.  v21:= temp @kind object;
  #L19f446.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f44c.  goto L19f1c2;
  #L19f450.  v0:= v24 @kind object;
  #L19f454.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L19f458.  v19:= v0 @kind object;
  #L19f45c.  if v19 == 0 then goto L19f4e4;
  #L19f460.  v5:= "If-None-Match" @kind object;
  #L19f464.  v0:= v24 @kind object;
  #L19f468.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L19f46c.  v0:= v24 @kind object;
  #L19f470.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f474.  v19:= v0 @kind object;
  #L19f478.  call temp:= `headers`(v19) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L19f47e.  v19:= temp @kind object;
  #L19f480.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L19f486.  v8:= temp @kind object;
  #L19f488.  v19:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L19f48c.  v0:= v19 @kind object;
  #L19f490.  call `addLenient`(v0, v8, v5, v6) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L19f496.  v0:= v24 @kind object;
  #L19f49a.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f49e.  v19:= v0 @kind object;
  #L19f4a2.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L19f4a8.  v19:= temp @kind object;
  #L19f4aa.  call temp:= `build`(v8) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19f4b0.  v20:= temp @kind object;
  #L19f4b2.  call temp:= `headers`(v19, v20) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19f4b8.  v19:= temp @kind object;
  #L19f4ba.  call temp:= `build`(v19) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L19f4c0.  v7:= temp @kind object;
  #L19f4c2.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f4c6.  v0:= v24 @kind object;
  #L19f4ca.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f4ce.  v20:= v0 @kind object;
  #L19f4d2.  v0:= v19 @kind object;
  #L19f4d6.  v1:= v20 @kind object;
  #L19f4da.  call `<init>`(v0, v7, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f4e0.  goto L19f1c2;
  #L19f4e4.  v0:= v24 @kind object;
  #L19f4e8.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L19f4ec.  v19:= v0 @kind object;
  #L19f4f0.  if v19 == 0 then goto L19f502;
  #L19f4f4.  v5:= "If-Modified-Since" @kind object;
  #L19f4f8.  v0:= v24 @kind object;
  #L19f4fc.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` @kind object;
  #L19f500.  goto L19f46c;
  #L19f502.  v0:= v24 @kind object;
  #L19f506.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L19f50a.  v19:= v0 @kind object;
  #L19f50e.  if v19 == 0 then goto L19f520;
  #L19f512.  v5:= "If-Modified-Since" @kind object;
  #L19f516.  v0:= v24 @kind object;
  #L19f51a.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` @kind object;
  #L19f51e.  goto L19f46c;
  #L19f520.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f524.  v0:= v24 @kind object;
  #L19f528.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f52c.  v20:= v0 @kind object;
  #L19f530.  v21:= 0I;
  #L19f534.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f53a.  goto L19f1c2;
}
procedure `boolean` `hasConditions`(`okhttp3.Request` v1 @kind object @name `request`) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L19f550.  v0:= "If-Modified-Since" @kind object;
  #L19f554.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19f55a.  v0:= temp @kind object;
  #L19f55c.  if v0 != 0 then goto L19f570;
  #L19f560.  v0:= "If-None-Match" @kind object;
  #L19f564.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19f56a.  v0:= temp @kind object;
  #L19f56c.  if v0 == 0 then goto L19f574;
  #L19f570.  v0:= 1I;
  #L19f572.  return v0;
  #L19f574.  v0:= 0I;
  #L19f576.  goto L19f572;
}
procedure `boolean` `isFreshnessLifetimeHeuristic`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L19f588.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19f58c.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19f592.  v0:= temp @kind object;
  #L19f594.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L19f59a.  v0:= temp;
  #L19f59c.  v1:= -1I;
  #L19f59e.  if v0 != v1 then goto L19f5ae;
  #L19f5a2.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L19f5a6.  if v0 != 0 then goto L19f5ae;
  #L19f5aa.  v0:= 1I;
  #L19f5ac.  return v0;
  #L19f5ae.  v0:= 0I;
  #L19f5b0.  goto L19f5ac;
}
procedure `okhttp3.internal.cache.CacheStrategy` `get`(`okhttp3.internal.cache.CacheStrategy$Factory` v3 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19f5c4.  v2:= 0I;
  #L19f5c6.  call temp:= `getCandidate`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @kind direct;
  #L19f5cc.  v0:= temp @kind object;
  #L19f5ce.  v1:= v0.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L19f5d2.  if v1 == 0 then goto L19f5f8;
  #L19f5d6.  v1:= v3.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L19f5da.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L19f5e0.  v1:= temp @kind object;
  #L19f5e2.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L19f5e8.  v1:= temp;
  #L19f5ea.  if v1 == 0 then goto L19f5f8;
  #L19f5ee.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L19f5f2.  call `<init>`(v0, v2, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L19f5f8.  return v0 @kind object;
}

record `okhttp3.internal.cache.CacheInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.internal.cache.InternalCache` `okhttp3.internal.cache.CacheInterceptor.cache` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor` v0 @kind this, `okhttp3.internal.cache.InternalCache` v1 @kind object @name `cache`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.<init>:(Lokhttp3/internal/cache/InternalCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L21583c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L215842.  v0.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` := v1 @kind object;
  #L215846.  return @kind void;
}
procedure `okhttp3.Response` `cacheWritingResponse`(`okhttp3.internal.cache.CacheInterceptor` v10 @kind this, `okhttp3.internal.cache.CacheRequest` v11 @kind object @name `cacheRequest`, `okhttp3.Response` v12 @kind object @name `response`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L215858.  if v11 != 0 then goto L21585e;
  #L21585c.  return v12 @kind object;
  #L21585e.  call temp:= `body`(v11) @signature `Lokhttp3/internal/cache/CacheRequest;.body:()Lokio/Sink;` @kind interface;
  #L215864.  v1:= temp @kind object;
  #L215866.  if v1 == 0 then goto L21585c;
  #L21586a.  call temp:= `body`(v12) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L215870.  v7:= temp @kind object;
  #L215872.  call temp:= `source`(v7) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L215878.  v6:= temp @kind object;
  #L21587a.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L215880.  v0:= temp @kind object;
  #L215882.  v2:= new `okhttp3.internal.cache.CacheInterceptor$1`;
  #L215886.  call `<init>`(v2, v10, v6, v11, v0) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @kind direct;
  #L21588c.  v7:= "Content-Type" @kind object;
  #L215890.  call temp:= `header`(v12, v7) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L215896.  v3:= temp @kind object;
  #L215898.  call temp:= `body`(v12) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L21589e.  v7:= temp @kind object;
  #L2158a0.  call temp:= `contentLength`(v7) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L2158a6.  v4:= temp @kind wide;
  #L2158a8.  call temp:= `newBuilder`(v12) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L2158ae.  v7:= temp @kind object;
  #L2158b0.  v8:= new `okhttp3.internal.http.RealResponseBody`;
  #L2158b4.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L2158ba.  v9:= temp @kind object;
  #L2158bc.  call `<init>`(v8, v3, v4, v9) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L2158c2.  call temp:= `body`(v7, v8) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2158c8.  v7:= temp @kind object;
  #L2158ca.  call temp:= `build`(v7) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2158d0.  v12:= temp @kind object;
  #L2158d2.  goto L21585c;
}
procedure `okhttp3.Headers` `combine`(`okhttp3.Headers` v7 @kind object @name `cachedHeaders`, `okhttp3.Headers` v8 @kind object @name `networkHeaders`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2158e4.  v2:= new `okhttp3.Headers$Builder`;
  #L2158e8.  call `<init>`(v2) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L2158ee.  v1:= 0I;
  #L2158f0.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2158f6.  v3:= temp;
  #L2158f8.  if v1 >= v3 then goto L215962;
  #L2158fc.  call temp:= `name`(v7, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L215902.  v0:= temp @kind object;
  #L215904.  call temp:= `value`(v7, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L21590a.  v4:= temp @kind object;
  #L21590c.  v5:= "Warning" @kind object;
  #L215910.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215916.  v5:= temp;
  #L215918.  if v5 == 0 then goto L215932;
  #L21591c.  v5:= "1" @kind object;
  #L215920.  call temp:= `startsWith`(v4, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L215926.  v5:= temp;
  #L215928.  if v5 == 0 then goto L215932;
  #L21592c.  v1:= v1 + 1;
  #L215930.  goto L2158f8;
  #L215932.  call temp:= `isContentSpecificHeader`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @kind static;
  #L215938.  v5:= temp;
  #L21593a.  if v5 != 0 then goto L215956;
  #L21593e.  call temp:= `isEndToEnd`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @kind static;
  #L215944.  v5:= temp;
  #L215946.  if v5 == 0 then goto L215956;
  #L21594a.  call temp:= `get`(v8, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L215950.  v5:= temp @kind object;
  #L215952.  if v5 != 0 then goto L21592c;
  #L215956.  v5:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L21595a.  call `addLenient`(v5, v2, v0, v4) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L215960.  goto L21592c;
  #L215962.  v1:= 0I;
  #L215964.  call temp:= `size`(v8) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L21596a.  v3:= temp;
  #L21596c.  if v1 >= v3 then goto L2159a8;
  #L215970.  call temp:= `name`(v8, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L215976.  v0:= temp @kind object;
  #L215978.  call temp:= `isContentSpecificHeader`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @kind static;
  #L21597e.  v5:= temp;
  #L215980.  if v5 != 0 then goto L2159a2;
  #L215984.  call temp:= `isEndToEnd`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @kind static;
  #L21598a.  v5:= temp;
  #L21598c.  if v5 == 0 then goto L2159a2;
  #L215990.  v5:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L215994.  call temp:= `value`(v8, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L21599a.  v6:= temp @kind object;
  #L21599c.  call `addLenient`(v5, v2, v0, v6) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2159a2.  v1:= v1 + 1;
  #L2159a6.  goto L21596c;
  #L2159a8.  call temp:= `build`(v2) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L2159ae.  v5:= temp @kind object;
  #L2159b0.  return v5 @kind object;
}
procedure `boolean` `isContentSpecificHeader`(`java.lang.String` v1 @kind object @name `fieldName`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2159c4.  v0:= "Content-Length" @kind object;
  #L2159c8.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2159ce.  v0:= temp;
  #L2159d0.  if v0 != 0 then goto L2159f4;
  #L2159d4.  v0:= "Content-Encoding" @kind object;
  #L2159d8.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2159de.  v0:= temp;
  #L2159e0.  if v0 != 0 then goto L2159f4;
  #L2159e4.  v0:= "Content-Type" @kind object;
  #L2159e8.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2159ee.  v0:= temp;
  #L2159f0.  if v0 == 0 then goto L2159f8;
  #L2159f4.  v0:= 1I;
  #L2159f6.  return v0;
  #L2159f8.  v0:= 0I;
  #L2159fa.  goto L2159f6;
}
procedure `boolean` `isEndToEnd`(`java.lang.String` v1 @kind object @name `fieldName`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L215a0c.  v0:= "Connection" @kind object;
  #L215a10.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215a16.  v0:= temp;
  #L215a18.  if v0 != 0 then goto L215a90;
  #L215a1c.  v0:= "Keep-Alive" @kind object;
  #L215a20.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215a26.  v0:= temp;
  #L215a28.  if v0 != 0 then goto L215a90;
  #L215a2c.  v0:= "Proxy-Authenticate" @kind object;
  #L215a30.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215a36.  v0:= temp;
  #L215a38.  if v0 != 0 then goto L215a90;
  #L215a3c.  v0:= "Proxy-Authorization" @kind object;
  #L215a40.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215a46.  v0:= temp;
  #L215a48.  if v0 != 0 then goto L215a90;
  #L215a4c.  v0:= "TE" @kind object;
  #L215a50.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215a56.  v0:= temp;
  #L215a58.  if v0 != 0 then goto L215a90;
  #L215a5c.  v0:= "Trailers" @kind object;
  #L215a60.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215a66.  v0:= temp;
  #L215a68.  if v0 != 0 then goto L215a90;
  #L215a6c.  v0:= "Transfer-Encoding" @kind object;
  #L215a70.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215a76.  v0:= temp;
  #L215a78.  if v0 != 0 then goto L215a90;
  #L215a7c.  v0:= "Upgrade" @kind object;
  #L215a80.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L215a86.  v0:= temp;
  #L215a88.  if v0 != 0 then goto L215a90;
  #L215a8c.  v0:= 1I;
  #L215a8e.  return v0;
  #L215a90.  v0:= 0I;
  #L215a92.  goto L215a8e;
}
procedure `okhttp3.Response` `stripBody`(`okhttp3.Response` v2 @kind object @name `response`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L215aa4.  if v2 == 0 then goto L215ace;
  #L215aa8.  call temp:= `body`(v2) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L215aae.  v0:= temp @kind object;
  #L215ab0.  if v0 == 0 then goto L215ace;
  #L215ab4.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L215aba.  v0:= temp @kind object;
  #L215abc.  v1:= 0I;
  #L215abe.  call temp:= `body`(v0, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215ac4.  v0:= temp @kind object;
  #L215ac6.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L215acc.  v2:= temp @kind object;
  #L215ace.  return v2 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.cache.CacheInterceptor` v12 @kind this, `okhttp3.Interceptor$Chain` v13 @kind object @name `chain`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L215ae0.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215ae4.  if v9 == 0 then goto L215bc6;
  #L215ae8.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215aec.  call temp:= `request`(v13) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L215af2.  v10:= temp @kind object;
  #L215af4.  call temp:= `get`(v9, v10) @signature `Lokhttp3/internal/cache/InternalCache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L215afa.  v0:= temp @kind object;
  #L215afc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L215b02.  v6:= temp @kind wide;
  #L215b04.  v9:= new `okhttp3.internal.cache.CacheStrategy$Factory`;
  #L215b08.  call temp:= `request`(v13) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L215b0e.  v10:= temp @kind object;
  #L215b10.  call `<init>`(v9, v6, v10, v0) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L215b16.  call temp:= `get`(v9) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @kind virtual;
  #L215b1c.  v8:= temp @kind object;
  #L215b1e.  v3:= v8.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L215b22.  v2:= v8.`okhttp3.internal.cache.CacheStrategy.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L215b26.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215b2a.  if v9 == 0 then goto L215b38;
  #L215b2e.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215b32.  call `trackResponse`(v9, v8) @signature `Lokhttp3/internal/cache/InternalCache;.trackResponse:(Lokhttp3/internal/cache/CacheStrategy;)V` @kind interface;
  #L215b38.  if v0 == 0 then goto L215b4e;
  #L215b3c.  if v2 != 0 then goto L215b4e;
  #L215b40.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L215b46.  v9:= temp @kind object;
  #L215b48.  call `closeQuietly`(v9) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L215b4e.  if v3 != 0 then goto L215bca;
  #L215b52.  if v2 != 0 then goto L215bca;
  #L215b56.  v9:= new `okhttp3.Response$Builder`;
  #L215b5a.  call `<init>`(v9) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L215b60.  call temp:= `request`(v13) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L215b66.  v10:= temp @kind object;
  #L215b68.  call temp:= `request`(v9, v10) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215b6e.  v9:= temp @kind object;
  #L215b70.  v10:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L215b74.  call temp:= `protocol`(v9, v10) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215b7a.  v9:= temp @kind object;
  #L215b7c.  v10:= 504I;
  #L215b80.  call temp:= `code`(v9, v10) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L215b86.  v9:= temp @kind object;
  #L215b88.  v10:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L215b8c.  call temp:= `message`(v9, v10) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215b92.  v9:= temp @kind object;
  #L215b94.  v10:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L215b98.  call temp:= `body`(v9, v10) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215b9e.  v9:= temp @kind object;
  #L215ba0.  v10:= -1L;
  #L215ba4.  call temp:= `sentRequestAtMillis`(v9, v10) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L215baa.  v9:= temp @kind object;
  #L215bac.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L215bb2.  v10:= temp @kind wide;
  #L215bb4.  call temp:= `receivedResponseAtMillis`(v9, v10) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L215bba.  v9:= temp @kind object;
  #L215bbc.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L215bc2.  v5:= temp @kind object;
  #L215bc4.  return v5 @kind object;
  #L215bc6.  v0:= 0I;
  #L215bc8.  goto L215afc;
  #L215bca.  if v3 != 0 then goto L215bf0;
  #L215bce.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L215bd4.  v9:= temp @kind object;
  #L215bd6.  call temp:= `stripBody`(v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L215bdc.  v10:= temp @kind object;
  #L215bde.  call temp:= `cacheResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215be4.  v9:= temp @kind object;
  #L215be6.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L215bec.  v5:= temp @kind object;
  #L215bee.  goto L215bc4;
  #L215bf0.  v4:= 0I;
  #Try_start0.  
  #L215bf2.  call temp:= `proceed`(v13, v3) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #Try_end0.  
  #L215bf8.  v4:= temp @kind object;
  #L215bfa.  if v4 != 0 then goto L215c10;
  #L215bfe.  if v0 == 0 then goto L215c10;
  #L215c02.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L215c08.  v9:= temp @kind object;
  #L215c0a.  call `closeQuietly`(v9) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L215c10.  if v2 == 0 then goto L215ce0;
  #L215c14.  call temp:= `code`(v4) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L215c1a.  v9:= temp;
  #L215c1c.  v10:= 304I;
  #L215c20.  if v9 != v10 then goto L215cd2;
  #L215c24.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L215c2a.  v9:= temp @kind object;
  #L215c2c.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L215c32.  v10:= temp @kind object;
  #L215c34.  call temp:= `headers`(v4) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L215c3a.  v11:= temp @kind object;
  #L215c3c.  call temp:= `combine`(v10, v11) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind static;
  #L215c42.  v10:= temp @kind object;
  #L215c44.  call temp:= `headers`(v9, v10) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215c4a.  v9:= temp @kind object;
  #L215c4c.  call temp:= `sentRequestAtMillis`(v4) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L215c52.  v10:= temp @kind wide;
  #L215c54.  call temp:= `sentRequestAtMillis`(v9, v10) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L215c5a.  v9:= temp @kind object;
  #L215c5c.  call temp:= `receivedResponseAtMillis`(v4) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L215c62.  v10:= temp @kind wide;
  #L215c64.  call temp:= `receivedResponseAtMillis`(v9, v10) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L215c6a.  v9:= temp @kind object;
  #L215c6c.  call temp:= `stripBody`(v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L215c72.  v10:= temp @kind object;
  #L215c74.  call temp:= `cacheResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215c7a.  v9:= temp @kind object;
  #L215c7c.  call temp:= `stripBody`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L215c82.  v10:= temp @kind object;
  #L215c84.  call temp:= `networkResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215c8a.  v9:= temp @kind object;
  #L215c8c.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L215c92.  v5:= temp @kind object;
  #L215c94.  call temp:= `body`(v4) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L215c9a.  v9:= temp @kind object;
  #L215c9c.  call `close`(v9) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L215ca2.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215ca6.  call `trackConditionalCacheHit`(v9) @signature `Lokhttp3/internal/cache/InternalCache;.trackConditionalCacheHit:()V` @kind interface;
  #L215cac.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215cb0.  call `update`(v9, v2, v5) @signature `Lokhttp3/internal/cache/InternalCache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @kind interface;
  #L215cb6.  goto L215bc4;
  #L215cb8.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L215cba.  if v4 != 0 then goto L215cd0;
  #L215cbe.  if v0 == 0 then goto L215cd0;
  #L215cc2.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L215cc8.  v10:= temp @kind object;
  #L215cca.  call `closeQuietly`(v10) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L215cd0.  throw v9;
  #L215cd2.  call temp:= `body`(v2) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L215cd8.  v9:= temp @kind object;
  #L215cda.  call `closeQuietly`(v9) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L215ce0.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L215ce6.  v9:= temp @kind object;
  #L215ce8.  call temp:= `stripBody`(v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L215cee.  v10:= temp @kind object;
  #L215cf0.  call temp:= `cacheResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215cf6.  v9:= temp @kind object;
  #L215cf8.  call temp:= `stripBody`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L215cfe.  v10:= temp @kind object;
  #L215d00.  call temp:= `networkResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L215d06.  v9:= temp @kind object;
  #L215d08.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L215d0e.  v5:= temp @kind object;
  #L215d10.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215d14.  if v9 == 0 then goto L215bc4;
  #L215d18.  call temp:= `hasBody`(v5) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L215d1e.  v9:= temp;
  #L215d20.  if v9 == 0 then goto L215d48;
  #L215d24.  call temp:= `isCacheable`(v5, v3) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L215d2a.  v9:= temp;
  #L215d2c.  if v9 == 0 then goto L215d48;
  #L215d30.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215d34.  call temp:= `put`(v9, v5) @signature `Lokhttp3/internal/cache/InternalCache;.put:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @kind interface;
  #L215d3a.  v1:= temp @kind object;
  #L215d3c.  call temp:= `cacheWritingResponse`(v12, v1, v5) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @kind direct;
  #L215d42.  v5:= temp @kind object;
  #L215d44.  goto L215bc4;
  #L215d48.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L215d4e.  v9:= temp @kind object;
  #L215d50.  call temp:= `invalidatesCache`(v9) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind static;
  #L215d56.  v9:= temp;
  #L215d58.  if v9 == 0 then goto L215bc4;
  #Try_start1.  
  #L215d5c.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215d60.  call `remove`(v9, v3) @signature `Lokhttp3/internal/cache/InternalCache;.remove:(Lokhttp3/Request;)V` @kind interface;
  #Try_end1.  
  #L215d66.  goto L215bc4;
  #L215d6a.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L215d6c.  goto L215bc4;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L215cb8;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L215d6a;
}

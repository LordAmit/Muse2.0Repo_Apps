record `okhttp3.internal.cache.CacheInterceptor$1` @kind class @AccessFlag  extends `okio.Source` @kind interface {
  `boolean` `okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @AccessFlag ;
  `okhttp3.internal.cache.CacheInterceptor` `okhttp3.internal.cache.CacheInterceptor$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.BufferedSink` `okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.cache.CacheRequest` `okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @AccessFlag FINAL_SYNTHETIC;
  `okio.BufferedSource` `okhttp3.internal.cache.CacheInterceptor$1.val$source` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor$1` v0 @kind this, `okhttp3.internal.cache.CacheInterceptor` v1 @kind object @name `this$0`, `okio.BufferedSource` v2 @kind object, `okhttp3.internal.cache.CacheRequest` v3 @kind object, `okio.BufferedSink` v4 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L215714.  v0.`okhttp3.internal.cache.CacheInterceptor$1.this$0` @type ^`okhttp3.internal.cache.CacheInterceptor` := v1 @kind object;
  #L215718.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` := v2 @kind object;
  #L21571c.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` := v3 @kind object;
  #L215720.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` := v4 @kind object;
  #L215724.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21572a.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.CacheInterceptor$1` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21573c.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L215740.  if v0 != 0 then goto L215768;
  #L215744.  v0:= 100I;
  #L215748.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L21574c.  call temp:= `discard`(v2, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L215752.  v0:= temp;
  #L215754.  if v0 != 0 then goto L215768;
  #L215758.  v0:= 1I;
  #L21575a.  v2.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v0 @kind boolean;
  #L21575e.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` @kind object;
  #L215762.  call `abort`(v0) @signature `Lokhttp3/internal/cache/CacheRequest;.abort:()V` @kind interface;
  #L215768.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L21576c.  call `close`(v0) @signature `Lokio/BufferedSource;.close:()V` @kind interface;
  #L215772.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.cache.CacheInterceptor$1` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L215784.  v0:= -1L;
  #L215788.  v3:= 1I;
  #Try_start0.  
  #L21578a.  v2:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L21578e.  call temp:= `read`(v2, v9, v10) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #Try_end0.  
  #L215794.  v4:= temp @kind wide;
  #L215796.  v2:= lcmp(v4, v0);
  #L21579a.  if v2 != 0 then goto L2157d2;
  #L21579e.  v2:= v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L2157a2.  if v2 != 0 then goto L2157b4;
  #L2157a6.  v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v3 @kind boolean;
  #L2157aa.  v2:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L2157ae.  call `close`(v2) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L2157b4.  v4:= v0 @kind wide;
  #L2157b6.  return v4 @kind wide;
  #L2157b8.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L2157ba.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L2157be.  if v0 != 0 then goto L2157d0;
  #L2157c2.  v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v3 @kind boolean;
  #L2157c6.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` @kind object;
  #L2157ca.  call `abort`(v0) @signature `Lokhttp3/internal/cache/CacheRequest;.abort:()V` @kind interface;
  #L2157d0.  throw v6;
  #L2157d2.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L2157d6.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L2157dc.  v1:= temp @kind object;
  #L2157de.  call temp:= `size`(v9) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2157e4.  v2:= temp @kind wide;
  #L2157e6.  v2:= v2 - v4 @kind long;
  #L2157e8.  v0:= v9 @kind object;
  #L2157ea.  call temp:= `copyTo`(v0, v1, v2, v4) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L2157f0.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L2157f4.  call temp:= `emitCompleteSegments`(v0) @signature `Lokio/BufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind interface;
  #L2157fa.  goto L2157b6;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L2157b8;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.cache.CacheInterceptor$1` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21581c.  v0:= v1.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L215820.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L215826.  v0:= temp @kind object;
  #L215828.  return v0 @kind object;
}

record `okhttp3.internal.cache.DiskLruCache$Entry` @kind class @AccessFlag FINAL {
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @AccessFlag ;
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.DiskLruCache$Entry.key` @AccessFlag FINAL;
  `long`[] `okhttp3.internal.cache.DiskLruCache$Entry.lengths` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.cache.DiskLruCache$Entry.readable` @AccessFlag ;
  `long` `okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Entry.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache` v8 @kind object, `java.lang.String` v9 @kind object @name `key`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19fcf4.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v8 @kind object;
  #L19fcf8.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19fcfe.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` := v9 @kind object;
  #L19fd02.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19fd06.  v3:= new `long`[v3];
  #L19fd0a.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] := v3 @kind object;
  #L19fd0e.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19fd12.  v3:= new `java.io.File`[v3];
  #L19fd16.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] := v3 @kind object;
  #L19fd1a.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19fd1e.  v3:= new `java.io.File`[v3];
  #L19fd22.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] := v3 @kind object;
  #L19fd26.  v3:= new `java.lang.StringBuilder`;
  #L19fd2a.  call `<init>`(v3, v9) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19fd30.  v4:= 46I;
  #L19fd34.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fd3a.  v0:= temp @kind object;
  #L19fd3c.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L19fd42.  v2:= temp;
  #L19fd44.  v1:= 0I;
  #L19fd46.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19fd4a.  if v1 >= v3 then goto L19fda6;
  #L19fd4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fd54.  v3:= v7.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L19fd58.  v4:= new `java.io.File`;
  #L19fd5c.  v5:= v8.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L19fd60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19fd66.  v6:= temp @kind object;
  #L19fd68.  call `<init>`(v4, v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L19fd6e.  v3[v1]:= v4 @kind object;
  #L19fd72.  v3:= ".tmp" @kind object;
  #L19fd76.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fd7c.  v3:= v7.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L19fd80.  v4:= new `java.io.File`;
  #L19fd84.  v5:= v8.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L19fd88.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19fd8e.  v6:= temp @kind object;
  #L19fd90.  call `<init>`(v4, v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L19fd96.  v3[v1]:= v4 @kind object;
  #L19fd9a.  call `setLength`(v0, v2) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L19fda0.  v1:= v1 + 1;
  #L19fda4.  goto L19fd46;
  #L19fda6.  return @kind void;
}
procedure `java.io.IOException` `invalidLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind this, `java.lang.String`[] v4 @kind object @name `strings`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L19fdb8.  v0:= new `java.io.IOException`;
  #L19fdbc.  v1:= new `java.lang.StringBuilder`;
  #L19fdc0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19fdc6.  v2:= "unexpected journal line: " @kind object;
  #L19fdca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fdd0.  v1:= temp @kind object;
  #L19fdd2.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19fdd8.  v2:= temp @kind object;
  #L19fdda.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fde0.  v1:= temp @kind object;
  #L19fde2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19fde8.  v1:= temp @kind object;
  #L19fdea.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19fdf0.  throw v0;
}
procedure `void` `setLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `java.lang.String`[] v7 @kind object @name `strings`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.setLengths:([Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19fe04.  v2:= length @variable v7;
  #L19fe06.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19fe0a.  v3:= v3.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19fe0e.  if v2 == v3 then goto L19fe1c;
  #L19fe12.  call temp:= `invalidLengths`(v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L19fe18.  v2:= temp @kind object;
  #L19fe1a.  throw v2;
  #L19fe1c.  v1:= 0I;
  #Try_start0.  
  #L19fe1e.  v2:= length @variable v7;
  #L19fe20.  if v1 >= v2 then goto L19fe4a;
  #L19fe24.  v2:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L19fe28.  v3:= v7[v1] @kind object;
  #L19fe2c.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L19fe32.  v4:= temp @kind wide;
  #L19fe34.  v2[v1]:= v4 @kind wide;
  #Try_end0.  
  #L19fe38.  v1:= v1 + 1;
  #L19fe3c.  goto L19fe1e;
  #L19fe3e.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L19fe40.  call temp:= `invalidLengths`(v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L19fe46.  v2:= temp @kind object;
  #L19fe48.  throw v2;
  #L19fe4a.  return @kind void;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L19fe3e;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `snapshot`(`okhttp3.internal.cache.DiskLruCache$Entry` v9 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19fe6c.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19fe70.  call temp:= `holdsLock`(v1) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L19fe76.  v1:= temp;
  #L19fe78.  if v1 != 0 then goto L19fe88;
  #L19fe7c.  v1:= new `java.lang.AssertionError`;
  #L19fe80.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L19fe86.  throw v1;
  #L19fe88.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19fe8c.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19fe90.  v6:= new `okio.Source`[v1];
  #L19fe94.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L19fe98.  call temp:= `clone`(v1) @signature `[J.clone:()Ljava/lang/Object;` @kind virtual;
  #L19fe9e.  v7:= temp @kind object;
  #L19fea0.  v7:= (`long`[]) v7 @kind object;
  #L19fea4.  v8:= 0I;
  #Try_start0.  
  #L19fea6.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19feaa.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19feae.  if v8 >= v1 then goto L19fed4;
  #L19feb2.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19feb6.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L19feba.  v2:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L19febe.  v2:= v2[v8] @kind object;
  #L19fec2.  call temp:= `source`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L19fec8.  v1:= temp @kind object;
  #L19feca.  v6[v8]:= v1 @kind object;
  #L19fece.  v8:= v8 + 1;
  #L19fed2.  goto L19fea6;
  #L19fed4.  v1:= new `okhttp3.internal.cache.DiskLruCache$Snapshot`;
  #L19fed8.  v2:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19fedc.  v3:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` @kind object;
  #L19fee0.  v4:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @type ^`long` @kind wide;
  #L19fee4.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;J[Lokio/Source;[J)V` @kind direct;
  #Try_end0.  
  #L19feea.  return v1 @kind object;
  #L19feec.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L19feee.  v8:= 0I;
  #L19fef0.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19fef4.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L19fef8.  if v8 >= v1 then goto L19ff14;
  #L19fefc.  v1:= v6[v8] @kind object;
  #L19ff00.  if v1 == 0 then goto L19ff14;
  #L19ff04.  v1:= v6[v8] @kind object;
  #L19ff08.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19ff0e.  v8:= v8 + 1;
  #L19ff12.  goto L19fef0;
  #Try_start1.  
  #L19ff14.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19ff18.  call temp:= `removeEntry`(v1, v9) @signature `Lokhttp3/internal/cache/DiskLruCache;.removeEntry:(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z` @kind virtual;
  #Try_end1.  
  #L19ff1e.  v1:= 0I;
  #L19ff20.  goto L19feea;
  #L19ff22.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L19ff24.  goto L19ff1e;
  catch `java.io.FileNotFoundException` @[Try_start0..Try_end0] goto L19feec;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L19ff22;
}
procedure `void` `writeLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `okio.BufferedSink` v7 @kind object @name `writer`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.writeLengths:(Lokio/BufferedSink;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ff54.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L19ff58.  v4:= length @variable v3;
  #L19ff5a.  v2:= 0I;
  #L19ff5c.  if v2 >= v4 then goto L19ff7c;
  #L19ff60.  v0:= v3[v2] @kind wide;
  #L19ff64.  v5:= 32I;
  #L19ff68.  call temp:= `writeByte`(v7, v5) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19ff6e.  v5:= temp @kind object;
  #L19ff70.  call temp:= `writeDecimalLong`(v5, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L19ff76.  v2:= v2 + 1;
  #L19ff7a.  goto L19ff5c;
  #L19ff7c.  return @kind void;
}

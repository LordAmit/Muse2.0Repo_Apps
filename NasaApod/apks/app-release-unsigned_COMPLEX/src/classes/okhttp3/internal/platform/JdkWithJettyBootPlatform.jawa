record `okhttp3.internal.platform.JdkWithJettyBootPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object @name `putMethod`, `java.lang.reflect.Method` v2 @kind object @name `getMethod`, `java.lang.reflect.Method` v3 @kind object @name `removeMethod`, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21bef8.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21befe.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L21bf02.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L21bf06.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L21bf0a.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` := v4 @kind object;
  #L21bf0e.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` := v5 @kind object;
  #L21bf12.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #Try_start0.  
  #L21bf24.  v7:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L21bf28.  call temp:= `forName`(v7) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21bf2e.  v6:= temp @kind object;
  #L21bf30.  v0:= new `java.lang.StringBuilder`;
  #L21bf34.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21bf3a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bf40.  v0:= temp @kind object;
  #L21bf42.  v9:= "$Provider" @kind object;
  #L21bf46.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bf4c.  v0:= temp @kind object;
  #L21bf4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21bf54.  v0:= temp @kind object;
  #L21bf56.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21bf5c.  v8:= temp @kind object;
  #L21bf5e.  v0:= new `java.lang.StringBuilder`;
  #L21bf62.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21bf68.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bf6e.  v0:= temp @kind object;
  #L21bf70.  v9:= "$ClientProvider" @kind object;
  #L21bf74.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bf7a.  v0:= temp @kind object;
  #L21bf7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21bf82.  v0:= temp @kind object;
  #L21bf84.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21bf8a.  v4:= temp @kind object;
  #L21bf8c.  v0:= new `java.lang.StringBuilder`;
  #L21bf90.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21bf96.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bf9c.  v0:= temp @kind object;
  #L21bf9e.  v9:= "$ServerProvider" @kind object;
  #L21bfa2.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21bfa8.  v0:= temp @kind object;
  #L21bfaa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21bfb0.  v0:= temp @kind object;
  #L21bfb2.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21bfb8.  v5:= temp @kind object;
  #L21bfba.  v0:= "put" @kind object;
  #L21bfbe.  v9:= 2I;
  #L21bfc0.  v9:= new `java.lang.Class`[v9];
  #L21bfc4.  v10:= 0I;
  #L21bfc6.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21bfca.  v9[v10]:= v11 @kind object;
  #L21bfce.  v10:= 1I;
  #L21bfd0.  v9[v10]:= v8 @kind object;
  #L21bfd4.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21bfda.  v1:= temp @kind object;
  #L21bfdc.  v0:= "get" @kind object;
  #L21bfe0.  v9:= 1I;
  #L21bfe2.  v9:= new `java.lang.Class`[v9];
  #L21bfe6.  v10:= 0I;
  #L21bfe8.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21bfec.  v9[v10]:= v11 @kind object;
  #L21bff0.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21bff6.  v2:= temp @kind object;
  #L21bff8.  v0:= "remove" @kind object;
  #L21bffc.  v9:= 1I;
  #L21bffe.  v9:= new `java.lang.Class`[v9];
  #L21c002.  v10:= 0I;
  #L21c004.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21c008.  v9[v10]:= v11 @kind object;
  #L21c00c.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21c012.  v3:= temp @kind object;
  #L21c014.  v0:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform`;
  #L21c018.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #Try_end0.  
  #L21c01e.  return v0 @kind object;
  #L21c020.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21c022.  v0:= 0I;
  #L21c024.  goto L21c01e;
  #L21c026.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21c028.  goto L21c022;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21c020;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21c026;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object @name `sslSocket`) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L21c050.  v1:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21c054.  v2:= 0I;
  #L21c056.  v3:= 1I;
  #L21c058.  v3:= new `java.lang.Object`[v3];
  #L21c05c.  v4:= 0I;
  #L21c05e.  v3[v4]:= v6 @kind object;
  #L21c062.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L21c068.  return @kind void;
  #L21c06a.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21c06c.  v1:= "unable to remove alpn" @kind object;
  #L21c070.  call temp:= `assertionError`(v1, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21c076.  v1:= temp @kind object;
  #L21c078.  throw v1;
  #L21c07a.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21c07c.  goto L21c06c;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21c06a;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21c07a;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `sslSocket`, `java.lang.String` v9 @kind object @name `hostname`, `java.util.List` v10 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21c0a0.  call temp:= `alpnProtocolNames`(v10) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L21c0a6.  v1:= temp @kind object;
  #Try_start0.  
  #L21c0a8.  v3:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L21c0ac.  call temp:= `getClassLoader`(v3) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L21c0b2.  v3:= temp @kind object;
  #L21c0b4.  v4:= 2I;
  #L21c0b6.  v4:= new `java.lang.Class`[v4];
  #L21c0ba.  v5:= 0I;
  #L21c0bc.  v6:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` @kind object;
  #L21c0c0.  v4[v5]:= v6 @kind object;
  #L21c0c4.  v5:= 1I;
  #L21c0c6.  v6:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` @kind object;
  #L21c0ca.  v4[v5]:= v6 @kind object;
  #L21c0ce.  v5:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`;
  #L21c0d2.  call `<init>`(v5, v1) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform$JettyNegoProvider;.<init>:(Ljava/util/List;)V` @kind direct;
  #L21c0d8.  call temp:= `newProxyInstance`(v3, v4, v5) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L21c0de.  v2:= temp @kind object;
  #L21c0e0.  v3:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21c0e4.  v4:= 0I;
  #L21c0e6.  v5:= 2I;
  #L21c0e8.  v5:= new `java.lang.Object`[v5];
  #L21c0ec.  v6:= 0I;
  #L21c0ee.  v5[v6]:= v8 @kind object;
  #L21c0f2.  v6:= 1I;
  #L21c0f4.  v5[v6]:= v2 @kind object;
  #L21c0f8.  call temp:= `invoke`(v3, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L21c0fe.  return @kind void;
  #L21c100.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21c102.  v3:= "unable to set alpn" @kind object;
  #L21c106.  call temp:= `assertionError`(v3, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21c10c.  v3:= temp @kind object;
  #L21c10e.  throw v3;
  #L21c110.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21c112.  goto L21c102;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21c110;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21c100;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21c134.  v2:= 0I;
  #Try_start0.  
  #L21c136.  v3:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21c13a.  v4:= 0I;
  #L21c13c.  v5:= 1I;
  #L21c13e.  v5:= new `java.lang.Object`[v5];
  #L21c142.  v6:= 0I;
  #L21c144.  v5[v6]:= v8 @kind object;
  #L21c148.  call temp:= `invoke`(v3, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21c14e.  v3:= temp @kind object;
  #L21c150.  call temp:= `getInvocationHandler`(v3) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L21c156.  v1:= temp @kind object;
  #L21c158.  v1:= (`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`) v1 @kind object;
  #L21c15c.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L21c160.  if v3 != 0 then goto L21c184;
  #L21c164.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #L21c168.  if v3 != 0 then goto L21c184;
  #L21c16c.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L21c172.  v3:= temp @kind object;
  #L21c174.  v4:= 4I;
  #L21c176.  v5:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L21c17a.  v6:= 0I;
  #L21c17c.  call `log`(v3, v4, v5, v6) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21c182.  return v2 @kind object;
  #L21c184.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L21c188.  if v3 != 0 then goto L21c182;
  #L21c18c.  v2:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #Try_end0.  
  #L21c190.  goto L21c182;
  #L21c192.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21c194.  v2:= "unable to get selected protocol" @kind object;
  #L21c198.  call temp:= `assertionError`(v2, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21c19e.  v2:= temp @kind object;
  #L21c1a0.  throw v2;
  #L21c1a2.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21c1a4.  goto L21c194;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21c1a2;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21c192;
}

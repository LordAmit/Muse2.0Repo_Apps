record `okhttp3.internal.platform.AndroidPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `okhttp3.internal.platform.AndroidPlatform$CloseGuard` `okhttp3.internal.platform.AndroidPlatform.closeGuard` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setHostname` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.platform.AndroidPlatform.MAX_LOG_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.Class` v2 @kind object, `okhttp3.internal.platform.OptionalMethod` v3 @kind object, `okhttp3.internal.platform.OptionalMethod` v4 @kind object, `okhttp3.internal.platform.OptionalMethod` v5 @kind object, `okhttp3.internal.platform.OptionalMethod` v6 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L21b508.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21b50e.  call temp:= `get`() @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.get:()Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;` @kind static;
  #L21b514.  v0:= temp @kind object;
  #L21b516.  v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` := v0 @kind object;
  #L21b51a.  v1.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` := v2 @kind object;
  #L21b51e.  v1.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` := v3 @kind object;
  #L21b522.  v1.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` := v4 @kind object;
  #L21b526.  v1.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` := v5 @kind object;
  #L21b52a.  v1.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` := v6 @kind object;
  #L21b52e.  return @kind void;
}
procedure `boolean` `api23IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.lang.String` v5 @kind object @name `hostname`, `java.lang.Class` v6 @kind object, `java.lang.Object` v7 @kind object @name `networkSecurityPolicy`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21b540.  v2:= "isCleartextTrafficPermitted" @kind object;
  #L21b544.  v3:= 0I;
  #L21b546.  v3:= new `java.lang.Class`[v3];
  #L21b54a.  call temp:= `getMethod`(v6, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b550.  v1:= temp @kind object;
  #L21b552.  v2:= 0I;
  #L21b554.  v2:= new `java.lang.Object`[v2];
  #L21b558.  call temp:= `invoke`(v1, v7, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b55e.  v2:= temp @kind object;
  #L21b560.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L21b564.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #Try_end0.  
  #L21b56a.  v2:= temp;
  #L21b56c.  return v2;
  #L21b56e.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21b570.  call temp:= `isCleartextTrafficPermitted`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L21b576.  v2:= temp;
  #L21b578.  goto L21b56c;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21b56e;
}
procedure `boolean` `api24IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `java.lang.String` v7 @kind object @name `hostname`, `java.lang.Class` v8 @kind object, `java.lang.Object` v9 @kind object @name `networkSecurityPolicy`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L21b59c.  v2:= "isCleartextTrafficPermitted" @kind object;
  #L21b5a0.  v3:= 1I;
  #L21b5a2.  v3:= new `java.lang.Class`[v3];
  #L21b5a6.  v4:= 0I;
  #L21b5a8.  v5:= constclass @type ^`java.lang.String` @kind object;
  #L21b5ac.  v3[v4]:= v5 @kind object;
  #L21b5b0.  call temp:= `getMethod`(v8, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b5b6.  v1:= temp @kind object;
  #L21b5b8.  v2:= 1I;
  #L21b5ba.  v2:= new `java.lang.Object`[v2];
  #L21b5be.  v3:= 0I;
  #L21b5c0.  v2[v3]:= v7 @kind object;
  #L21b5c4.  call temp:= `invoke`(v1, v9, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b5ca.  v2:= temp @kind object;
  #L21b5cc.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L21b5d0.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #Try_end0.  
  #L21b5d6.  v2:= temp;
  #L21b5d8.  return v2;
  #L21b5da.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21b5dc.  call temp:= `api23IsCleartextTrafficPermitted`(v6, v7, v8, v9) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L21b5e2.  v2:= temp;
  #L21b5e4.  goto L21b5d8;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21b5da;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L21b608.  v7:= 0I;
  #Try_start0.  
  #L21b60a.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L21b60e.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L21b614.  v1:= temp @kind object;
  #Try_start1.  
  #L21b616.  v2:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21b61a.  v0:= 0I;
  #L21b61c.  v8:= "setUseSessionTickets" @kind object;
  #L21b620.  v9:= 1I;
  #L21b622.  v9:= new `java.lang.Class`[v9];
  #L21b626.  v10:= 0I;
  #L21b628.  v11:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L21b62c.  v9[v10]:= v11 @kind object;
  #L21b630.  call `<init>`(v2, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21b636.  v3:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21b63a.  v0:= 0I;
  #L21b63c.  v8:= "setHostname" @kind object;
  #L21b640.  v9:= 1I;
  #L21b642.  v9:= new `java.lang.Class`[v9];
  #L21b646.  v10:= 0I;
  #L21b648.  v11:= constclass @type ^`java.lang.String` @kind object;
  #L21b64c.  v9[v10]:= v11 @kind object;
  #L21b650.  call `<init>`(v3, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21b656.  v4:= 0I;
  #L21b658.  v5:= 0I;
  #L21b65a.  call temp:= `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @kind static;
  #L21b660.  v0:= temp;
  #L21b662.  if v0 == 0 then goto L21b69e;
  #L21b666.  v4:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21b66a.  v0:= constclass @type ^`byte`[] @kind object;
  #L21b66e.  v8:= "getAlpnSelectedProtocol" @kind object;
  #L21b672.  v9:= 0I;
  #L21b674.  v9:= new `java.lang.Class`[v9];
  #L21b678.  call `<init>`(v4, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21b67e.  v5:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21b682.  v0:= 0I;
  #L21b684.  v8:= "setAlpnProtocols" @kind object;
  #L21b688.  v9:= 1I;
  #L21b68a.  v9:= new `java.lang.Class`[v9];
  #L21b68e.  v10:= 0I;
  #L21b690.  v11:= constclass @type ^`byte`[] @kind object;
  #L21b694.  v9[v10]:= v11 @kind object;
  #L21b698.  call `<init>`(v5, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21b69e.  v0:= new `okhttp3.internal.platform.AndroidPlatform`;
  #L21b6a2.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @kind direct;
  #L21b6a8.  return v0 @kind object;
  #L21b6aa.  v6:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21b6ac.  v0:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L21b6b0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end1.  
  #L21b6b6.  v1:= temp @kind object;
  #L21b6b8.  goto L21b616;
  #L21b6ba.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21b6bc.  v0:= v7 @kind object;
  #L21b6be.  goto L21b6a8;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21b6aa;
  catch `java.lang.ClassNotFoundException` @[Try_start1..Try_end1] goto L21b6ba;
}
procedure `boolean` `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L21b6ec.  v0:= 1I;
  #L21b6ee.  v1:= "GMSCore_OpenSSL" @kind object;
  #L21b6f2.  call temp:= `getProvider`(v1) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L21b6f8.  v1:= temp @kind object;
  #L21b6fa.  if v1 == 0 then goto L21b700;
  #L21b6fe.  return v0;
  #Try_start0.  
  #L21b700.  v1:= "android.net.Network" @kind object;
  #L21b704.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L21b70a.  goto L21b6fe;
  #L21b70c.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21b70e.  v0:= 0I;
  #L21b710.  goto L21b6fe;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21b70c;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.AndroidPlatform` v9 @kind this, `javax.net.ssl.X509TrustManager` v10 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #Try_start0.  
  #L21b734.  v5:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L21b738.  call temp:= `forName`(v5) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21b73e.  v4:= temp @kind object;
  #L21b740.  v5:= 1I;
  #L21b742.  v5:= new `java.lang.Class`[v5];
  #L21b746.  v6:= 0I;
  #L21b748.  v7:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21b74c.  v5[v6]:= v7 @kind object;
  #L21b750.  call temp:= `getConstructor`(v4, v5) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L21b756.  v1:= temp @kind object;
  #L21b758.  v5:= 1I;
  #L21b75a.  v5:= new `java.lang.Object`[v5];
  #L21b75e.  v6:= 0I;
  #L21b760.  v5[v6]:= v10 @kind object;
  #L21b764.  call temp:= `newInstance`(v1, v5) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b76a.  v3:= temp @kind object;
  #L21b76c.  v5:= "checkServerTrusted" @kind object;
  #L21b770.  v6:= 3I;
  #L21b772.  v6:= new `java.lang.Class`[v6];
  #L21b776.  v7:= 0I;
  #L21b778.  v8:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L21b77c.  v6[v7]:= v8 @kind object;
  #L21b780.  v7:= 1I;
  #L21b782.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L21b786.  v6[v7]:= v8 @kind object;
  #L21b78a.  v7:= 2I;
  #L21b78c.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L21b790.  v6[v7]:= v8 @kind object;
  #L21b794.  call temp:= `getMethod`(v4, v5, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b79a.  v0:= temp @kind object;
  #L21b79c.  v5:= new `okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner`;
  #L21b7a0.  call `<init>`(v5, v3, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidCertificateChainCleaner;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21b7a6.  return v5 @kind object;
  #L21b7a8.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L21b7aa.  call temp:= `buildCertificateChainCleaner`(v9, v10) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind super;
  #L21b7b0.  v5:= temp @kind object;
  #L21b7b2.  goto L21b7a6;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L21b7a8;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.AndroidPlatform` v7 @kind this, `javax.net.ssl.X509TrustManager` v8 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21b7d4.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21b7da.  v2:= temp @kind object;
  #L21b7dc.  v3:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L21b7e0.  v4:= 1I;
  #L21b7e2.  v4:= new `java.lang.Class`[v4];
  #L21b7e6.  v5:= 0I;
  #L21b7e8.  v6:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L21b7ec.  v4[v5]:= v6 @kind object;
  #L21b7f0.  call temp:= `getDeclaredMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b7f6.  v1:= temp @kind object;
  #L21b7f8.  v2:= 1I;
  #L21b7fa.  call `setAccessible`(v1, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L21b800.  v2:= new `okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex`;
  #L21b804.  call `<init>`(v2, v8, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidTrustRootIndex;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21b80a.  return v2 @kind object;
  #L21b80c.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21b80e.  call temp:= `buildTrustRootIndex`(v7, v8) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind super;
  #L21b814.  v2:= temp @kind object;
  #L21b816.  goto L21b80a;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21b80c;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `javax.net.ssl.SSLSocket` v7 @kind object @name `sslSocket`, `java.lang.String` v8 @kind object @name `hostname`, `java.util.List` v9 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21b838.  v5:= 0I;
  #L21b83a.  v4:= 1I;
  #L21b83c.  if v8 == 0 then goto L21b86c;
  #L21b840.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b844.  v2:= new `java.lang.Object`[v4];
  #L21b848.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L21b84e.  v3:= temp @kind object;
  #L21b850.  v2[v5]:= v3 @kind object;
  #L21b854.  call temp:= `invokeOptionalWithoutCheckedException`(v1, v7, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b85a.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b85e.  v2:= new `java.lang.Object`[v4];
  #L21b862.  v2[v5]:= v8 @kind object;
  #L21b866.  call temp:= `invokeOptionalWithoutCheckedException`(v1, v7, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b86c.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b870.  if v1 == 0 then goto L21b89e;
  #L21b874.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b878.  call temp:= `isSupported`(v1, v7) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L21b87e.  v1:= temp;
  #L21b880.  if v1 == 0 then goto L21b89e;
  #L21b884.  v0:= new `java.lang.Object`[v4];
  #L21b888.  call temp:= `concatLengthPrefixed`(v9) @signature `Lokhttp3/internal/platform/AndroidPlatform;.concatLengthPrefixed:(Ljava/util/List;)[B` @kind static;
  #L21b88e.  v1:= temp @kind object;
  #L21b890.  v0[v5]:= v1 @kind object;
  #L21b894.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b898.  call temp:= `invokeWithoutCheckedException`(v1, v7, v0) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b89e.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.net.Socket` v5 @kind object @name `socket`, `java.net.InetSocketAddress` v6 @kind object @name `address`, `int` v7 @name `connectTimeout`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21b8b0.  call `connect`(v5, v6, v7) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #Try_end0.  
  #L21b8b6.  return @kind void;
  #L21b8b8.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L21b8ba.  call temp:= `isAndroidGetsocknameError`(v0) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L21b8c0.  v2:= temp;
  #L21b8c2.  if v2 == 0 then goto L21b8d2;
  #L21b8c6.  v2:= new `java.io.IOException`;
  #L21b8ca.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L21b8d0.  throw v2;
  #L21b8d2.  throw v0;
  #L21b8d4.  v0:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L21b8d6.  v1:= new `java.io.IOException`;
  #L21b8da.  v2:= "Exception in connect" @kind object;
  #L21b8de.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21b8e4.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L21b8ea.  throw v1;
  #L21b8ec.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L21b8ee.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L21b8f2.  v3:= 26I;
  #L21b8f6.  if v2 != v3 then goto L21b910;
  #L21b8fa.  v1:= new `java.io.IOException`;
  #L21b8fe.  v2:= "Exception in connect" @kind object;
  #L21b902.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21b908.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L21b90e.  throw v1;
  #L21b910.  throw v0;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L21b8b8;
  catch `java.lang.SecurityException` @[Try_start0..Try_end0] goto L21b8d4;
  catch `java.lang.ClassCastException` @[Try_start0..Try_end0] goto L21b8ec;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21b938.  v1:= 0I;
  #L21b93a.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b93e.  if v2 != 0 then goto L21b944;
  #L21b942.  return v1 @kind object;
  #L21b944.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b948.  call temp:= `isSupported`(v2, v5) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L21b94e.  v2:= temp;
  #L21b950.  if v2 == 0 then goto L21b942;
  #L21b954.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21b958.  v3:= 0I;
  #L21b95a.  v3:= new `java.lang.Object`[v3];
  #L21b95e.  call temp:= `invokeWithoutCheckedException`(v2, v5, v3) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b964.  v0:= temp @kind object;
  #L21b966.  v0:= (`byte`[]) v0 @kind object;
  #L21b96a.  if v0 == 0 then goto L21b942;
  #L21b96e.  v1:= new `java.lang.String`;
  #L21b972.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L21b976.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L21b97c.  goto L21b942;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object @name `closer`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21b990.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L21b994.  call temp:= `createAndOpen`(v0, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.createAndOpen:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L21b99a.  v0:= temp @kind object;
  #L21b99c.  return v0 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `java.lang.String` v7 @kind object @name `hostname`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L21b9b0.  v4:= "android.security.NetworkSecurityPolicy" @kind object;
  #L21b9b4.  call temp:= `forName`(v4) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21b9ba.  v2:= temp @kind object;
  #L21b9bc.  v4:= "getInstance" @kind object;
  #L21b9c0.  v5:= 0I;
  #L21b9c2.  v5:= new `java.lang.Class`[v5];
  #L21b9c6.  call temp:= `getMethod`(v2, v4, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21b9cc.  v1:= temp @kind object;
  #L21b9ce.  v4:= 0I;
  #L21b9d0.  v5:= 0I;
  #L21b9d2.  v5:= new `java.lang.Object`[v5];
  #L21b9d6.  call temp:= `invoke`(v1, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21b9dc.  v3:= temp @kind object;
  #L21b9de.  call temp:= `api24IsCleartextTrafficPermitted`(v6, v7, v2, v3) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L21b9e4.  v4:= temp;
  #L21b9e6.  return v4;
  #L21b9e8.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21b9ea.  call temp:= `isCleartextTrafficPermitted`(v6, v7) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L21b9f0.  v4:= temp;
  #L21b9f2.  goto L21b9e6;
  #L21b9f4.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21b9f6.  v4:= "unable to determine cleartext support" @kind object;
  #L21b9fa.  call temp:= `assertionError`(v4, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21ba00.  v4:= temp @kind object;
  #L21ba02.  throw v4;
  #L21ba04.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L21ba06.  goto L21b9f6;
  #L21ba08.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21ba0a.  goto L21b9f6;
  #L21ba0c.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21ba0e.  goto L21b9ea;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21b9e8;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21ba0c;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21b9f4;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L21ba04;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21ba08;
}
procedure `void` `log`(`okhttp3.internal.platform.AndroidPlatform` v8 @kind this, `int` v9 @name `level`, `java.lang.String` v10 @kind object @name `message`, `java.lang.Throwable` v11 @kind object @name `t`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21ba3c.  v7:= 10I;
  #L21ba40.  v3:= 5I;
  #L21ba42.  if v9 != v3 then goto L21bac2;
  #L21ba46.  if v11 == 0 then goto L21ba7c;
  #L21ba4a.  v5:= new `java.lang.StringBuilder`;
  #L21ba4e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21ba54.  call temp:= `append`(v5, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba5a.  v5:= temp @kind object;
  #L21ba5c.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba62.  v5:= temp @kind object;
  #L21ba64.  call temp:= `getStackTraceString`(v11) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L21ba6a.  v6:= temp @kind object;
  #L21ba6c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ba72.  v5:= temp @kind object;
  #L21ba74.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ba7a.  v10:= temp @kind object;
  #L21ba7c.  v1:= 0I;
  #L21ba7e.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21ba84.  v2:= temp;
  #L21ba86.  if v1 >= v2 then goto L21baca;
  #L21ba8a.  call temp:= `indexOf`(v10, v7, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L21ba90.  v4:= temp;
  #L21ba92.  v5:= -1I;
  #L21ba94.  if v4 == v5 then goto L21bac6;
  #L21ba98.  v5:= v1 + 4000;
  #L21ba9c.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L21baa2.  v0:= temp;
  #L21baa4.  v5:= "OkHttp" @kind object;
  #L21baa8.  call temp:= `substring`(v10, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L21baae.  v6:= temp @kind object;
  #L21bab0.  call temp:= `println`(v3, v5, v6) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L21bab6.  v1:= v0;
  #L21bab8.  if v1 < v4 then goto L21ba98;
  #L21babc.  v1:= v1 + 1;
  #L21bac0.  goto L21ba86;
  #L21bac2.  v3:= 3I;
  #L21bac4.  goto L21ba46;
  #L21bac6.  v4:= v2;
  #L21bac8.  goto L21ba98;
  #L21baca.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `java.lang.String` v4 @kind object @name `message`, `java.lang.Object` v5 @kind object @name `stackTrace`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21badc.  v1:= v3.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L21bae0.  call temp:= `warnIfOpen`(v1, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.warnIfOpen:(Ljava/lang/Object;)Z` @kind virtual;
  #L21bae6.  v0:= temp;
  #L21bae8.  if v0 != 0 then goto L21baf6;
  #L21baec.  v1:= 5I;
  #L21baee.  v2:= 0I;
  #L21baf0.  call `log`(v3, v1, v4, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21baf6.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.AndroidPlatform` v7 @kind this, `javax.net.ssl.SSLSocketFactory` v8 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21bb08.  v4:= v7.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` @kind object;
  #L21bb0c.  v5:= "sslParameters" @kind object;
  #L21bb10.  call temp:= `readFieldOrNull`(v8, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21bb16.  v0:= temp @kind object;
  #L21bb18.  if v0 != 0 then goto L21bb46;
  #Try_start0.  
  #L21bb1c.  v4:= "com.google.android.gms.org.conscrypt.SSLParametersImpl" @kind object;
  #L21bb20.  v5:= 0I;
  #L21bb22.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21bb28.  v6:= temp @kind object;
  #L21bb2a.  call temp:= `getClassLoader`(v6) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L21bb30.  v6:= temp @kind object;
  #L21bb32.  call temp:= `forName`(v4, v5, v6) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L21bb38.  v2:= temp @kind object;
  #L21bb3a.  v4:= "sslParameters" @kind object;
  #L21bb3e.  call temp:= `readFieldOrNull`(v8, v2, v4) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #Try_end0.  
  #L21bb44.  v0:= temp @kind object;
  #L21bb46.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21bb4a.  v5:= "x509TrustManager" @kind object;
  #L21bb4e.  call temp:= `readFieldOrNull`(v0, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21bb54.  v3:= temp @kind object;
  #L21bb56.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #L21bb5a.  if v3 == 0 then goto L21bb6c;
  #L21bb5e.  return v3 @kind object;
  #L21bb60.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21bb62.  call temp:= `trustManager`(v7, v8) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind super;
  #L21bb68.  v3:= temp @kind object;
  #L21bb6a.  goto L21bb5e;
  #L21bb6c.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21bb70.  v5:= "trustManager" @kind object;
  #L21bb74.  call temp:= `readFieldOrNull`(v0, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21bb7a.  v4:= temp @kind object;
  #L21bb7c.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L21bb80.  v3:= v4 @kind object;
  #L21bb82.  goto L21bb5e;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21bb60;
}

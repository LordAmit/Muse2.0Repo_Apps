record `okhttp3.internal.platform.Platform` @kind class @AccessFlag PUBLIC {
}
global `int` `@@okhttp3.internal.platform.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.platform.Platform` `@@okhttp3.internal.platform.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.Platform.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a91f8.  call temp:= `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1a91fe.  v0:= temp @kind object;
  #L1a9200.  `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L1a9204.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L1a9208.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a920e.  v0:= temp @kind object;
  #L1a9210.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1a9216.  v0:= temp @kind object;
  #L1a9218.  `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L1a921c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Platform` v0 @kind this) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a9230.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a9236.  return @kind void;
}
procedure `java.util.List` `alpnProtocolNames`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a9248.  v1:= new `java.util.ArrayList`;
  #L1a924c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a9252.  v4:= temp;
  #L1a9254.  call `<init>`(v1, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1a925a.  v0:= 0I;
  #L1a925c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a9262.  v3:= temp;
  #L1a9264.  if v0 >= v3 then goto L1a9292;
  #L1a9268.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a926e.  v2:= temp @kind object;
  #L1a9270.  v2:= (`okhttp3.Protocol`) v2 @kind object;
  #L1a9274.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L1a9278.  if v2 != v4 then goto L1a9282;
  #L1a927c.  v0:= v0 + 1;
  #L1a9280.  goto L1a9264;
  #L1a9282.  call temp:= `toString`(v2) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a9288.  v4:= temp @kind object;
  #L1a928a.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a9290.  goto L1a927c;
  #L1a9292.  return v1 @kind object;
}
procedure `byte`[] `concatLengthPrefixed`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.concatLengthPrefixed:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a92a4.  v2:= new `okio.Buffer`;
  #L1a92a8.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1a92ae.  v0:= 0I;
  #L1a92b0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a92b6.  v3:= temp;
  #L1a92b8.  if v0 >= v3 then goto L1a92fc;
  #L1a92bc.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a92c2.  v1:= temp @kind object;
  #L1a92c4.  v1:= (`okhttp3.Protocol`) v1 @kind object;
  #L1a92c8.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L1a92cc.  if v1 != v4 then goto L1a92d6;
  #L1a92d0.  v0:= v0 + 1;
  #L1a92d4.  goto L1a92b8;
  #L1a92d6.  call temp:= `toString`(v1) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a92dc.  v4:= temp @kind object;
  #L1a92de.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a92e4.  v4:= temp;
  #L1a92e6.  call temp:= `writeByte`(v2, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1a92ec.  call temp:= `toString`(v1) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a92f2.  v4:= temp @kind object;
  #L1a92f4.  call temp:= `writeUtf8`(v2, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L1a92fa.  goto L1a92d0;
  #L1a92fc.  call temp:= `readByteArray`(v2) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L1a9302.  v4:= temp @kind object;
  #L1a9304.  return v4 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a9318.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1a931e.  v0:= temp @kind object;
  #L1a9320.  if v0 == 0 then goto L1a9326;
  #L1a9324.  return v0 @kind object;
  #L1a9326.  call temp:= `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @kind static;
  #L1a932c.  v4:= temp;
  #L1a932e.  if v4 == 0 then goto L1a9342;
  #L1a9332.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1a9338.  v1:= temp @kind object;
  #L1a933a.  if v1 == 0 then goto L1a9342;
  #L1a933e.  v0:= v1 @kind object;
  #L1a9340.  goto L1a9324;
  #L1a9342.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @kind static;
  #L1a9348.  v2:= temp @kind object;
  #L1a934a.  if v2 == 0 then goto L1a9352;
  #L1a934e.  v0:= v2 @kind object;
  #L1a9350.  goto L1a9324;
  #L1a9352.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1a9358.  v3:= temp @kind object;
  #L1a935a.  if v3 == 0 then goto L1a9362;
  #L1a935e.  v0:= v3 @kind object;
  #L1a9360.  goto L1a9324;
  #L1a9362.  v0:= new `okhttp3.internal.platform.Platform`;
  #L1a9366.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L1a936c.  goto L1a9324;
}
procedure `okhttp3.internal.platform.Platform` `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a9380.  v0:= `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L1a9384.  return v0 @kind object;
}
procedure `boolean` `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1a9398.  v1:= "conscrypt" @kind object;
  #L1a939c.  v2:= "okhttp.platform" @kind object;
  #L1a93a0.  call temp:= `getProperty`(v2) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1a93a6.  v2:= temp @kind object;
  #L1a93a8.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a93ae.  v1:= temp;
  #L1a93b0.  if v1 == 0 then goto L1a93b8;
  #L1a93b4.  v1:= 1I;
  #L1a93b6.  return v1;
  #L1a93b8.  call temp:= `getProviders`() @signature `Ljava/security/Security;.getProviders:()[Ljava/security/Provider;` @kind static;
  #L1a93be.  v1:= temp @kind object;
  #L1a93c0.  v2:= 0I;
  #L1a93c2.  v1:= v1[v2] @kind object;
  #L1a93c6.  call temp:= `getName`(v1) @signature `Ljava/security/Provider;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a93cc.  v0:= temp @kind object;
  #L1a93ce.  v1:= "Conscrypt" @kind object;
  #L1a93d2.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a93d8.  v1:= temp;
  #L1a93da.  goto L1a93b6;
}
procedure `java.lang.Object` `readFieldOrNull`(`java.lang.Object` v8 @kind object @name `instance`, `java.lang.Class` v9 @kind object, `java.lang.String` v10 @kind object @name `fieldName`) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1a93ec.  v5:= 0I;
  #L1a93ee.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a93f4.  v0:= temp @kind object;
  #L1a93f6.  v6:= constclass @type ^`java.lang.Object` @kind object;
  #L1a93fa.  if v0 == v6 then goto L1a944c;
  #Try_start0.  
  #L1a93fe.  call temp:= `getDeclaredField`(v0, v10) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L1a9404.  v3:= temp @kind object;
  #L1a9406.  v6:= 1I;
  #L1a9408.  call `setAccessible`(v3, v6) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1a940e.  call temp:= `get`(v3, v8) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a9414.  v4:= temp @kind object;
  #L1a9416.  if v4 == 0 then goto L1a9426;
  #L1a941a.  call temp:= `isInstance`(v9, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a9420.  v6:= temp;
  #L1a9422.  if v6 != 0 then goto L1a9428;
  #L1a9426.  return v5 @kind object;
  #L1a9428.  call temp:= `cast`(v9, v4) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L1a942e.  v5:= temp @kind object;
  #L1a9430.  goto L1a9426;
  #L1a9432.  v2:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1a9434.  v5:= new `java.lang.AssertionError`;
  #L1a9438.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1a943e.  throw v5;
  #L1a9440.  v6:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L1a9442.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1a9448.  v0:= temp @kind object;
  #L1a944a.  goto L1a93f6;
  #L1a944c.  v6:= "delegate" @kind object;
  #L1a9450.  call temp:= `equals`(v10, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a9456.  v6:= temp;
  #L1a9458.  if v6 != 0 then goto L1a9426;
  #L1a945c.  v6:= constclass @type ^`java.lang.Object` @kind object;
  #L1a9460.  v7:= "delegate" @kind object;
  #L1a9464.  call temp:= `readFieldOrNull`(v8, v6, v7) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1a946a.  v1:= temp @kind object;
  #L1a946c.  if v1 == 0 then goto L1a9426;
  #L1a9470.  call temp:= `readFieldOrNull`(v1, v9, v10) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1a9476.  v5:= temp @kind object;
  #L1a9478.  goto L1a9426;
  catch `java.lang.NoSuchFieldException` @[Try_start0..Try_end0] goto L1a9440;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L1a9432;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object @name `sslSocket`) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L1a949c.  return @kind void;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v4 @kind this, `javax.net.ssl.SSLSocketFactory` v5 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a94b0.  call temp:= `trustManager`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind virtual;
  #L1a94b6.  v0:= temp @kind object;
  #L1a94b8.  if v0 != 0 then goto L1a9512;
  #L1a94bc.  v1:= new `java.lang.IllegalStateException`;
  #L1a94c0.  v2:= new `java.lang.StringBuilder`;
  #L1a94c4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a94ca.  v3:= "Unable to extract the trust manager on " @kind object;
  #L1a94ce.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a94d4.  v2:= temp @kind object;
  #L1a94d6.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1a94dc.  v3:= temp @kind object;
  #L1a94de.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a94e4.  v2:= temp @kind object;
  #L1a94e6.  v3:= ", sslSocketFactory is " @kind object;
  #L1a94ea.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a94f0.  v2:= temp @kind object;
  #L1a94f2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a94f8.  v3:= temp @kind object;
  #L1a94fa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9500.  v2:= temp @kind object;
  #L1a9502.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a9508.  v2:= temp @kind object;
  #L1a950a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a9510.  throw v1;
  #L1a9512.  call temp:= `buildCertificateChainCleaner`(v4, v0) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L1a9518.  v1:= temp @kind object;
  #L1a951a.  return v1 @kind object;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a952c.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner`;
  #L1a9530.  call temp:= `buildTrustRootIndex`(v2, v3) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind virtual;
  #L1a9536.  v1:= temp @kind object;
  #L1a9538.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @kind direct;
  #L1a953e.  return v0 @kind object;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.Platform` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a9550.  v0:= new `okhttp3.internal.tls.BasicTrustRootIndex`;
  #L1a9554.  call temp:= `getAcceptedIssuers`(v3) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L1a955a.  v1:= temp @kind object;
  #L1a955c.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L1a9562.  return v0 @kind object;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object @name `sslSocket`, `java.lang.String` v2 @kind object @name `hostname`, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L1a9574.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.net.Socket` v1 @kind object @name `socket`, `java.net.InetSocketAddress` v2 @kind object @name `address`, `int` v3 @name `connectTimeout`) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L1a9588.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L1a958e.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a95a0.  v0:= "OkHttp" @kind object;
  #L1a95a4.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLContext` `getSSLContext`(`okhttp3.internal.platform.Platform` v3 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1a95b8.  v1:= "TLS" @kind object;
  #L1a95bc.  call temp:= `getInstance`(v1) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #Try_end0.  
  #L1a95c2.  v1:= temp @kind object;
  #L1a95c4.  return v1 @kind object;
  #L1a95c6.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L1a95c8.  v1:= new `java.lang.IllegalStateException`;
  #L1a95cc.  v2:= "No TLS provider" @kind object;
  #L1a95d0.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1a95d6.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[Try_start0..Try_end0] goto L1a95c6;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a95f8.  v0:= 0I;
  #L1a95fa.  return v0 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object @name `closer`) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a960c.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L1a9610.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1a9614.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1a961a.  v0:= temp;
  #L1a961c.  if v0 == 0 then goto L1a962c;
  #L1a9620.  v0:= new `java.lang.Throwable`;
  #L1a9624.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a962a.  return v0 @kind object;
  #L1a962c.  v0:= 0I;
  #L1a962e.  goto L1a962a;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object @name `hostname`) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a9640.  v0:= 1I;
  #L1a9642.  return v0;
}
procedure `void` `log`(`okhttp3.internal.platform.Platform` v2 @kind this, `int` v3 @name `level`, `java.lang.String` v4 @kind object @name `message`, `java.lang.Throwable` v5 @kind object @name `t`) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a9654.  v1:= 5I;
  #L1a9656.  if v3 != v1 then goto L1a966a;
  #L1a965a.  v0:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L1a965e.  v1:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L1a9662.  call `log`(v1, v0, v4, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1a9668.  return @kind void;
  #L1a966a.  v0:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L1a966e.  goto L1a965e;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object @name `message`, `java.lang.Object` v4 @kind object @name `stackTrace`) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a9680.  if v4 != 0 then goto L1a96aa;
  #L1a9684.  v0:= new `java.lang.StringBuilder`;
  #L1a9688.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a968e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9694.  v0:= temp @kind object;
  #L1a9696.  v1:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L1a969a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a96a0.  v0:= temp @kind object;
  #L1a96a2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a96a8.  v3:= temp @kind object;
  #L1a96aa.  v0:= 5I;
  #L1a96ac.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L1a96b0.  call `log`(v2, v0, v3, v4) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1a96b6.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Platform` v6 @kind this, `javax.net.ssl.SSLSocketFactory` v7 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a96c8.  v4:= 0I;
  #Try_start0.  
  #L1a96ca.  v3:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L1a96ce.  call temp:= `forName`(v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1a96d4.  v2:= temp @kind object;
  #L1a96d6.  v3:= "context" @kind object;
  #L1a96da.  call temp:= `readFieldOrNull`(v7, v2, v3) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1a96e0.  v0:= temp @kind object;
  #L1a96e2.  if v0 != 0 then goto L1a96ea;
  #L1a96e6.  v3:= v4 @kind object;
  #L1a96e8.  return v3 @kind object;
  #L1a96ea.  v3:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L1a96ee.  v5:= "trustManager" @kind object;
  #L1a96f2.  call temp:= `readFieldOrNull`(v0, v3, v5) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1a96f8.  v3:= temp @kind object;
  #L1a96fa.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #Try_end0.  
  #L1a96fe.  goto L1a96e8;
  #L1a9700.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L1a9702.  v3:= v4 @kind object;
  #L1a9704.  goto L1a96e8;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L1a9700;
}

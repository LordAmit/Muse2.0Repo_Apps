record `okhttp3.internal.connection.RouteSelector` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.internal.connection.RouteSelector.address` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call` `okhttp3.internal.connection.RouteSelector.call` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.RouteSelector.eventListener` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RouteSelector.nextProxyIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.postponedRoutes` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.proxies` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteDatabase` `okhttp3.internal.connection.RouteSelector.routeDatabase` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector` v2 @kind this, `okhttp3.Address` v3 @kind object @name `address`, `okhttp3.internal.connection.RouteDatabase` v4 @kind object @name `routeDatabase`, `okhttp3.Call` v5 @kind object @name `call`, `okhttp3.EventListener` v6 @kind object @name `eventListener`) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a1b5c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a1b62.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1a1b68.  v0:= temp @kind object;
  #L1a1b6a.  v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v0 @kind object;
  #L1a1b6e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1a1b74.  v0:= temp @kind object;
  #L1a1b76.  v2.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L1a1b7a.  v0:= new `java.util.ArrayList`;
  #L1a1b7e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a1b84.  v2.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` := v0 @kind object;
  #L1a1b88.  v2.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L1a1b8c.  v2.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` := v4 @kind object;
  #L1a1b90.  v2.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` := v5 @kind object;
  #L1a1b94.  v2.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` := v6 @kind object;
  #L1a1b98.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a1b9e.  v0:= temp @kind object;
  #L1a1ba0.  call temp:= `proxy`(v3) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a1ba6.  v1:= temp @kind object;
  #L1a1ba8.  call `resetNextProxy`(v2, v0, v1) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @kind direct;
  #L1a1bae.  return @kind void;
}
procedure `java.lang.String` `getHostString`(`java.net.InetSocketAddress` v2 @kind object @name `socketAddress`) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a1bc0.  call temp:= `getAddress`(v2) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L1a1bc6.  v0:= temp @kind object;
  #L1a1bc8.  if v0 != 0 then goto L1a1bd6;
  #L1a1bcc.  call temp:= `getHostName`(v2) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L1a1bd2.  v1:= temp @kind object;
  #L1a1bd4.  return v1 @kind object;
  #L1a1bd6.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L1a1bdc.  v1:= temp @kind object;
  #L1a1bde.  goto L1a1bd4;
}
procedure `boolean` `hasNextProxy`(`okhttp3.internal.connection.RouteSelector` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a1bf0.  v0:= v2.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L1a1bf4.  v1:= v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a1bf8.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a1bfe.  v1:= temp;
  #L1a1c00.  if v0 >= v1 then goto L1a1c08;
  #L1a1c04.  v0:= 1I;
  #L1a1c06.  return v0;
  #L1a1c08.  v0:= 0I;
  #L1a1c0a.  goto L1a1c06;
}
procedure `java.net.Proxy` `nextProxy`(`okhttp3.internal.connection.RouteSelector` v4 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a1c1c.  call temp:= `hasNextProxy`(v4) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a1c22.  v1:= temp;
  #L1a1c24.  if v1 != 0 then goto L1a1c86;
  #L1a1c28.  v1:= new `java.net.SocketException`;
  #L1a1c2c.  v2:= new `java.lang.StringBuilder`;
  #L1a1c30.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a1c36.  v3:= "No route to " @kind object;
  #L1a1c3a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1c40.  v2:= temp @kind object;
  #L1a1c42.  v3:= v4.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1c46.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a1c4c.  v3:= temp @kind object;
  #L1a1c4e.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a1c54.  v3:= temp @kind object;
  #L1a1c56.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1c5c.  v2:= temp @kind object;
  #L1a1c5e.  v3:= "; exhausted proxy configurations: " @kind object;
  #L1a1c62.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1c68.  v2:= temp @kind object;
  #L1a1c6a.  v3:= v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a1c6e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1c74.  v2:= temp @kind object;
  #L1a1c76.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a1c7c.  v2:= temp @kind object;
  #L1a1c7e.  call `<init>`(v1, v2) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a1c84.  throw v1;
  #L1a1c86.  v1:= v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a1c8a.  v2:= v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L1a1c8e.  v3:= v2 + 1;
  #L1a1c92.  v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v3;
  #L1a1c96.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a1c9c.  v0:= temp @kind object;
  #L1a1c9e.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L1a1ca2.  call `resetNextInetSocketAddress`(v4, v0) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @kind direct;
  #L1a1ca8.  return v0 @kind object;
}
procedure `void` `resetNextInetSocketAddress`(`okhttp3.internal.connection.RouteSelector` v11 @kind this, `java.net.Proxy` v12 @kind object @name `proxy`) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1a1cbc.  v8:= new `java.util.ArrayList`;
  #L1a1cc0.  call `<init>`(v8) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a1cc6.  v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v8 @kind object;
  #L1a1cca.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a1cd0.  v8:= temp @kind object;
  #L1a1cd2.  v9:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1a1cd6.  if v8 == v9 then goto L1a1cea;
  #L1a1cda.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a1ce0.  v8:= temp @kind object;
  #L1a1ce2.  v9:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L1a1ce6.  if v8 != v9 then goto L1a1d74;
  #L1a1cea.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1cee.  call temp:= `url`(v8) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a1cf4.  v8:= temp @kind object;
  #L1a1cf6.  call temp:= `host`(v8) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a1cfc.  v6:= temp @kind object;
  #L1a1cfe.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1d02.  call temp:= `url`(v8) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a1d08.  v8:= temp @kind object;
  #L1a1d0a.  call temp:= `port`(v8) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1a1d10.  v7:= temp;
  #L1a1d12.  v8:= 1I;
  #L1a1d14.  if v7 < v8 then goto L1a1d22;
  #L1a1d18.  v8:= 65535I;
  #L1a1d1e.  if v7 <= v8 then goto L1a1dd6;
  #L1a1d22.  v8:= new `java.net.SocketException`;
  #L1a1d26.  v9:= new `java.lang.StringBuilder`;
  #L1a1d2a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a1d30.  v10:= "No route to " @kind object;
  #L1a1d34.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1d3a.  v9:= temp @kind object;
  #L1a1d3c.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1d42.  v9:= temp @kind object;
  #L1a1d44.  v10:= ":" @kind object;
  #L1a1d48.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1d4e.  v9:= temp @kind object;
  #L1a1d50.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1d56.  v9:= temp @kind object;
  #L1a1d58.  v10:= "; port is out of range" @kind object;
  #L1a1d5c.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1d62.  v9:= temp @kind object;
  #L1a1d64.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a1d6a.  v9:= temp @kind object;
  #L1a1d6c.  call `<init>`(v8, v9) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a1d72.  throw v8;
  #L1a1d74.  call temp:= `address`(v12) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L1a1d7a.  v3:= temp @kind object;
  #L1a1d7c.  v8:= instanceof @variable v3 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L1a1d80.  if v8 != 0 then goto L1a1dbe;
  #L1a1d84.  v8:= new `java.lang.IllegalArgumentException`;
  #L1a1d88.  v9:= new `java.lang.StringBuilder`;
  #L1a1d8c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a1d92.  v10:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L1a1d96.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1d9c.  v9:= temp @kind object;
  #L1a1d9e.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a1da4.  v10:= temp @kind object;
  #L1a1da6.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1dac.  v9:= temp @kind object;
  #L1a1dae.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a1db4.  v9:= temp @kind object;
  #L1a1db6.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a1dbc.  throw v8;
  #L1a1dbe.  v4:= v3 @kind object;
  #L1a1dc0.  v4:= (`java.net.InetSocketAddress`) v4 @kind object;
  #L1a1dc4.  call temp:= `getHostString`(v4) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L1a1dca.  v6:= temp @kind object;
  #L1a1dcc.  call temp:= `getPort`(v4) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L1a1dd2.  v7:= temp;
  #L1a1dd4.  goto L1a1d12;
  #L1a1dd6.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a1ddc.  v8:= temp @kind object;
  #L1a1dde.  v9:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L1a1de2.  if v8 != v9 then goto L1a1dfa;
  #L1a1de6.  v8:= v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a1dea.  call temp:= `createUnresolved`(v6, v7) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L1a1df0.  v9:= temp @kind object;
  #L1a1df2.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a1df8.  return @kind void;
  #L1a1dfa.  v8:= v11.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L1a1dfe.  v9:= v11.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L1a1e02.  call `dnsStart`(v8, v9, v6) @signature `Lokhttp3/EventListener;.dnsStart:(Lokhttp3/Call;Ljava/lang/String;)V` @kind virtual;
  #L1a1e08.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1e0c.  call temp:= `dns`(v8) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L1a1e12.  v8:= temp @kind object;
  #L1a1e14.  call temp:= `lookup`(v8, v6) @signature `Lokhttp3/Dns;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L1a1e1a.  v0:= temp @kind object;
  #L1a1e1c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a1e22.  v8:= temp;
  #L1a1e24.  if v8 == 0 then goto L1a1e6e;
  #L1a1e28.  v8:= new `java.net.UnknownHostException`;
  #L1a1e2c.  v9:= new `java.lang.StringBuilder`;
  #L1a1e30.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a1e36.  v10:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1e3a.  call temp:= `dns`(v10) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L1a1e40.  v10:= temp @kind object;
  #L1a1e42.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1e48.  v9:= temp @kind object;
  #L1a1e4a.  v10:= " returned no addresses for " @kind object;
  #L1a1e4e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1e54.  v9:= temp @kind object;
  #L1a1e56.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1e5c.  v9:= temp @kind object;
  #L1a1e5e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a1e64.  v9:= temp @kind object;
  #L1a1e66.  call `<init>`(v8, v9) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a1e6c.  throw v8;
  #L1a1e6e.  v8:= v11.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L1a1e72.  v9:= v11.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L1a1e76.  call `dnsEnd`(v8, v9, v6, v0) @signature `Lokhttp3/EventListener;.dnsEnd:(Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L1a1e7c.  v1:= 0I;
  #L1a1e7e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a1e84.  v5:= temp;
  #L1a1e86.  if v1 >= v5 then goto L1a1df8;
  #L1a1e8a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a1e90.  v2:= temp @kind object;
  #L1a1e92.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L1a1e96.  v8:= v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a1e9a.  v9:= new `java.net.InetSocketAddress`;
  #L1a1e9e.  call `<init>`(v9, v2, v7) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L1a1ea4.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a1eaa.  v1:= v1 + 1;
  #L1a1eae.  goto L1a1e86;
}
procedure `void` `resetNextProxy`(`okhttp3.internal.connection.RouteSelector` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object @name `url`, `java.net.Proxy` v6 @kind object @name `proxy`) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a1ec0.  v3:= 0I;
  #L1a1ec2.  if v6 == 0 then goto L1a1ed8;
  #L1a1ec6.  call temp:= `singletonList`(v6) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1a1ecc.  v1:= temp @kind object;
  #L1a1ece.  v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v1 @kind object;
  #L1a1ed2.  v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v3;
  #L1a1ed6.  return @kind void;
  #L1a1ed8.  v1:= v4.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1edc.  call temp:= `proxySelector`(v1) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a1ee2.  v1:= temp @kind object;
  #L1a1ee4.  call temp:= `uri`(v5) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L1a1eea.  v2:= temp @kind object;
  #L1a1eec.  call temp:= `select`(v1, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L1a1ef2.  v0:= temp @kind object;
  #L1a1ef4.  if v0 == 0 then goto L1a1f12;
  #L1a1ef8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a1efe.  v1:= temp;
  #L1a1f00.  if v1 != 0 then goto L1a1f12;
  #L1a1f04.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1a1f0a.  v1:= temp @kind object;
  #L1a1f0c.  v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v1 @kind object;
  #L1a1f10.  goto L1a1ed2;
  #L1a1f12.  v1:= 1I;
  #L1a1f14.  v1:= new `java.net.Proxy`[v1];
  #L1a1f18.  v2:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L1a1f1c.  v1[v3]:= v2 @kind object;
  #L1a1f20.  call temp:= `immutableList`(v1) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1a1f26.  v1:= temp @kind object;
  #L1a1f28.  goto L1a1f0c;
}
procedure `void` `connectFailed`(`okhttp3.internal.connection.RouteSelector` v3 @kind this, `okhttp3.Route` v4 @kind object @name `failedRoute`, `java.io.IOException` v5 @kind object @name `failure`) @signature `Lokhttp3/internal/connection/RouteSelector;.connectFailed:(Lokhttp3/Route;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a1f3c.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a1f42.  v0:= temp @kind object;
  #L1a1f44.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a1f4a.  v0:= temp @kind object;
  #L1a1f4c.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1a1f50.  if v0 == v1 then goto L1a1f9a;
  #L1a1f54.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1f58.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a1f5e.  v0:= temp @kind object;
  #L1a1f60.  if v0 == 0 then goto L1a1f9a;
  #L1a1f64.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1f68.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a1f6e.  v0:= temp @kind object;
  #L1a1f70.  v1:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a1f74.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a1f7a.  v1:= temp @kind object;
  #L1a1f7c.  call temp:= `uri`(v1) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L1a1f82.  v1:= temp @kind object;
  #L1a1f84.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a1f8a.  v2:= temp @kind object;
  #L1a1f8c.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L1a1f92.  v2:= temp @kind object;
  #L1a1f94.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L1a1f9a.  v0:= v3.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L1a1f9e.  call `failed`(v0, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @kind virtual;
  #L1a1fa4.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1fb8.  call temp:= `hasNextProxy`(v1) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a1fbe.  v0:= temp;
  #L1a1fc0.  if v0 != 0 then goto L1a1fd4;
  #L1a1fc4.  v0:= v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a1fc8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a1fce.  v0:= temp;
  #L1a1fd0.  if v0 != 0 then goto L1a1fd8;
  #L1a1fd4.  v0:= 1I;
  #L1a1fd6.  return v0;
  #L1a1fd8.  v0:= 0I;
  #L1a1fda.  goto L1a1fd6;
}
procedure `okhttp3.internal.connection.RouteSelector$Selection` `next`(`okhttp3.internal.connection.RouteSelector` v7 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a1fec.  call temp:= `hasNext`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L1a1ff2.  v5:= temp;
  #L1a1ff4.  if v5 != 0 then goto L1a2004;
  #L1a1ff8.  v5:= new `java.util.NoSuchElementException`;
  #L1a1ffc.  call `<init>`(v5) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1a2002.  throw v5;
  #L1a2004.  v3:= new `java.util.ArrayList`;
  #L1a2008.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a200e.  call temp:= `hasNextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a2014.  v5:= temp;
  #L1a2016.  if v5 == 0 then goto L1a2086;
  #L1a201a.  call temp:= `nextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @kind direct;
  #L1a2020.  v1:= temp @kind object;
  #L1a2022.  v0:= 0I;
  #L1a2024.  v5:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a2028.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a202e.  v4:= temp;
  #L1a2030.  if v0 >= v4 then goto L1a207a;
  #L1a2034.  v2:= new `okhttp3.Route`;
  #L1a2038.  v6:= v7.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a203c.  v5:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a2040.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a2046.  v5:= temp @kind object;
  #L1a2048.  v5:= (`java.net.InetSocketAddress`) v5 @kind object;
  #L1a204c.  call `<init>`(v2, v6, v1, v5) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L1a2052.  v5:= v7.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L1a2056.  call temp:= `shouldPostpone`(v5, v2) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @kind virtual;
  #L1a205c.  v5:= temp;
  #L1a205e.  if v5 == 0 then goto L1a2072;
  #L1a2062.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a2066.  call temp:= `add`(v5, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a206c.  v0:= v0 + 1;
  #L1a2070.  goto L1a2030;
  #L1a2072.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a2078.  goto L1a206c;
  #L1a207a.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a2080.  v5:= temp;
  #L1a2082.  if v5 != 0 then goto L1a200e;
  #L1a2086.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a208c.  v5:= temp;
  #L1a208e.  if v5 == 0 then goto L1a20a6;
  #L1a2092.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a2096.  call temp:= `addAll`(v3, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1a209c.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a20a0.  call `clear`(v5) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1a20a6.  v5:= new `okhttp3.internal.connection.RouteSelector$Selection`;
  #L1a20aa.  call `<init>`(v5, v3) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @kind direct;
  #L1a20b0.  return v5 @kind object;
}

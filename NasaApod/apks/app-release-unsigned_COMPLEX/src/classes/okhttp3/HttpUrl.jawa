record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl.fragment` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.host` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.password` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.pathSegments` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.HttpUrl.port` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl.queryNamesAndValues` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.scheme` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.url` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.username` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.HttpUrl.FORM_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `char`[] `@@okhttp3.HttpUrl.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_REENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19a5cc.  v0:= 16I;
  #L19a5d0.  v0:= new `char`[v0];
  #L19a5d4.  goto L19a5e0;
  #L19a5da.  `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L19a5de.  return @kind void;
  #L19a5e0.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L19a607.  goto L19a5da;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v4 @kind this, `okhttp3.HttpUrl$Builder` v5 @kind object @name `builder`) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19a618.  v1:= 0I;
  #L19a61a.  v3:= 0I;
  #L19a61c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19a622.  v0:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19a626.  v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19a62a.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19a62e.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19a634.  v0:= temp @kind object;
  #L19a636.  v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` := v0 @kind object;
  #L19a63a.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19a63e.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19a644.  v0:= temp @kind object;
  #L19a646.  v4.`okhttp3.HttpUrl.password` @type ^`java.lang.String` := v0 @kind object;
  #L19a64a.  v0:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19a64e.  v4.`okhttp3.HttpUrl.host` @type ^`java.lang.String` := v0 @kind object;
  #L19a652.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L19a658.  v0:= temp;
  #L19a65a.  v4.`okhttp3.HttpUrl.port` @type ^`int` := v0;
  #L19a65e.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a662.  call temp:= `percentDecode`(v4, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L19a668.  v0:= temp @kind object;
  #L19a66a.  v4.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` := v0 @kind object;
  #L19a66e.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a672.  if v0 == 0 then goto L19a6ae;
  #L19a676.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a67a.  v2:= 1I;
  #L19a67c.  call temp:= `percentDecode`(v4, v0, v2) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L19a682.  v0:= temp @kind object;
  #L19a684.  v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19a688.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19a68c.  if v0 == 0 then goto L19a69c;
  #L19a690.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19a694.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19a69a.  v1:= temp @kind object;
  #L19a69c.  v4.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` := v1 @kind object;
  #L19a6a0.  call temp:= `toString`(v5) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a6a6.  v0:= temp @kind object;
  #L19a6a8.  v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` := v0 @kind object;
  #L19a6ac.  return @kind void;
  #L19a6ae.  v0:= v1 @kind object;
  #L19a6b0.  goto L19a684;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v11 @kind object @name `input`, `int` v12 @name `pos`, `int` v13 @name `limit`, `java.lang.String` v14 @kind object @name `encodeSet`, `boolean` v15 @name `alreadyEncoded`, `boolean` v16 @name `strict`, `boolean` v17 @name `plusIsSpace`, `boolean` v18 @name `asciiOnly`, `java.nio.charset.Charset` v19 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L19a6c4.  v2:= v12;
  #L19a6c6.  if v2 >= v13 then goto L19a768;
  #L19a6ca.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19a6d0.  v10:= temp;
  #L19a6d2.  v1:= 32I;
  #L19a6d6.  if v10 < v1 then goto L19a724;
  #L19a6da.  v1:= 127I;
  #L19a6de.  if v10 == v1 then goto L19a724;
  #L19a6e2.  v1:= 128I;
  #L19a6e6.  if v10 < v1 then goto L19a6ee;
  #L19a6ea.  if v18 != 0 then goto L19a724;
  #L19a6ee.  call temp:= `indexOf`(v14, v10) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19a6f4.  v1:= temp;
  #L19a6f6.  v3:= -1I;
  #L19a6f8.  if v1 != v3 then goto L19a724;
  #L19a6fc.  v1:= 37I;
  #L19a700.  if v10 != v1 then goto L19a718;
  #L19a704.  if v15 == 0 then goto L19a724;
  #L19a708.  if v16 == 0 then goto L19a718;
  #L19a70c.  call temp:= `percentEncoded`(v11, v2, v13) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L19a712.  v1:= temp;
  #L19a714.  if v1 == 0 then goto L19a724;
  #L19a718.  v1:= 43I;
  #L19a71c.  if v10 != v1 then goto L19a75c;
  #L19a720.  if v17 == 0 then goto L19a75c;
  #L19a724.  v0:= new `okio.Buffer`;
  #L19a728.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19a72e.  call temp:= `writeUtf8`(v0, v11, v12, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L19a734.  v1:= v11 @kind object;
  #L19a736.  v3:= v13;
  #L19a738.  v4:= v14 @kind object;
  #L19a73a.  v5:= v15;
  #L19a73c.  v6:= v16;
  #L19a740.  v7:= v17;
  #L19a744.  v8:= v18;
  #L19a748.  v9:= v19 @kind object;
  #L19a74c.  call `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L19a752.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19a758.  v1:= temp @kind object;
  #L19a75a.  return v1 @kind object;
  #L19a75c.  call temp:= `charCount`(v10) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19a762.  v1:= temp;
  #L19a764.  v2:= v2 + v1 @kind int;
  #L19a766.  goto L19a6c6;
  #L19a768.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19a76e.  v1:= temp @kind object;
  #L19a770.  goto L19a75a;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object @name `input`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19a784.  v1:= 0I;
  #L19a786.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a78c.  v2:= temp;
  #L19a78e.  v8:= 0I;
  #L19a790.  v0:= v9 @kind object;
  #L19a792.  v3:= v10 @kind object;
  #L19a794.  v4:= v11;
  #L19a796.  v5:= v12;
  #L19a798.  v6:= v13;
  #L19a79a.  v7:= v14;
  #L19a79c.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a7a2.  v0:= temp @kind object;
  #L19a7a4.  return v0 @kind object;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object @name `input`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`, `java.nio.charset.Charset` v15 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19a7b8.  v1:= 0I;
  #L19a7ba.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a7c0.  v2:= temp;
  #L19a7c2.  v0:= v9 @kind object;
  #L19a7c4.  v3:= v10 @kind object;
  #L19a7c6.  v4:= v11;
  #L19a7c8.  v5:= v12;
  #L19a7ca.  v6:= v13;
  #L19a7cc.  v7:= v14;
  #L19a7ce.  v8:= v15 @kind object;
  #L19a7d0.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a7d6.  v0:= temp @kind object;
  #L19a7d8.  return v0 @kind object;
}
procedure `void` `canonicalize`(`okio.Buffer` v6 @kind object @name `out`, `java.lang.String` v7 @kind object @name `input`, `int` v8 @name `pos`, `int` v9 @name `limit`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`, `java.nio.charset.Charset` v15 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a7ec.  v2:= 0I;
  #L19a7ee.  v3:= v8;
  #L19a7f0.  if v3 >= v9 then goto L19a922;
  #L19a7f4.  call temp:= `codePointAt`(v7, v3) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19a7fa.  v1:= temp;
  #L19a7fc.  if v11 == 0 then goto L19a82c;
  #L19a800.  v4:= 9I;
  #L19a804.  if v1 == v4 then goto L19a820;
  #L19a808.  v4:= 10I;
  #L19a80c.  if v1 == v4 then goto L19a820;
  #L19a810.  v4:= 12I;
  #L19a814.  if v1 == v4 then goto L19a820;
  #L19a818.  v4:= 13I;
  #L19a81c.  if v1 != v4 then goto L19a82c;
  #L19a820.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19a826.  v4:= temp;
  #L19a828.  v3:= v3 + v4 @kind int;
  #L19a82a.  goto L19a7f0;
  #L19a82c.  v4:= 43I;
  #L19a830.  if v1 != v4 then goto L19a84e;
  #L19a834.  if v13 == 0 then goto L19a84e;
  #L19a838.  if v11 == 0 then goto L19a848;
  #L19a83c.  v4:= "+" @kind object;
  #L19a840.  call temp:= `writeUtf8`(v6, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L19a846.  goto L19a820;
  #L19a848.  v4:= "%2B" @kind object;
  #L19a84c.  goto L19a840;
  #L19a84e.  v4:= 32I;
  #L19a852.  if v1 < v4 then goto L19a894;
  #L19a856.  v4:= 127I;
  #L19a85a.  if v1 == v4 then goto L19a894;
  #L19a85e.  v4:= 128I;
  #L19a862.  if v1 < v4 then goto L19a86a;
  #L19a866.  if v14 != 0 then goto L19a894;
  #L19a86a.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19a870.  v4:= temp;
  #L19a872.  v5:= -1I;
  #L19a874.  if v4 != v5 then goto L19a894;
  #L19a878.  v4:= 37I;
  #L19a87c.  if v1 != v4 then goto L19a91a;
  #L19a880.  if v11 == 0 then goto L19a894;
  #L19a884.  if v12 == 0 then goto L19a91a;
  #L19a888.  call temp:= `percentEncoded`(v7, v3, v9) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L19a88e.  v4:= temp;
  #L19a890.  if v4 != 0 then goto L19a91a;
  #L19a894.  if v2 != 0 then goto L19a8a2;
  #L19a898.  v2:= new `okio.Buffer`;
  #L19a89c.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19a8a2.  if v15 == 0 then goto L19a8b6;
  #L19a8a6.  v4:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19a8aa.  call temp:= `equals`(v15, v4) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a8b0.  v4:= temp;
  #L19a8b2.  if v4 == 0 then goto L19a908;
  #L19a8b6.  call temp:= `writeUtf8CodePoint`(v2, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19a8bc.  call temp:= `exhausted`(v2) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L19a8c2.  v4:= temp;
  #L19a8c4.  if v4 != 0 then goto L19a820;
  #L19a8c8.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L19a8ce.  v4:= temp;
  #L19a8d0.  v0:= v4 ^& 255;
  #L19a8d4.  v4:= 37I;
  #L19a8d8.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19a8de.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L19a8e2.  v5:= v0 ^> 4;
  #L19a8e6.  v5:= v5 ^& 15;
  #L19a8ea.  v4:= v4[v5] @kind char;
  #L19a8ee.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19a8f4.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L19a8f8.  v5:= v0 ^& 15;
  #L19a8fc.  v4:= v4[v5] @kind char;
  #L19a900.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19a906.  goto L19a8bc;
  #L19a908.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19a90e.  v4:= temp;
  #L19a910.  v4:= v4 + v3 @kind int;
  #L19a912.  call temp:= `writeString`(v2, v7, v3, v4, v15) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L19a918.  goto L19a8bc;
  #L19a91a.  call temp:= `writeUtf8CodePoint`(v6, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19a920.  goto L19a820;
  #L19a922.  return @kind void;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object @name `scheme`) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19a934.  v0:= "http" @kind object;
  #L19a938.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a93e.  v0:= temp;
  #L19a940.  if v0 == 0 then goto L19a94a;
  #L19a944.  v0:= 80I;
  #L19a948.  return v0;
  #L19a94a.  v0:= "https" @kind object;
  #L19a94e.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a954.  v0:= temp;
  #L19a956.  if v0 == 0 then goto L19a960;
  #L19a95a.  v0:= 443I;
  #L19a95e.  goto L19a948;
  #L19a960.  v0:= -1I;
  #L19a962.  goto L19a948;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v1 @kind object @name `uri`) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19a974.  call temp:= `toString`(v1) @signature `Ljava/net/URI;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a97a.  v0:= temp @kind object;
  #L19a97c.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19a982.  v0:= temp @kind object;
  #L19a984.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v1 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19a998.  call temp:= `toString`(v1) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L19a99e.  v0:= temp @kind object;
  #L19a9a0.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19a9a6.  v0:= temp @kind object;
  #L19a9a8.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `getChecked`(`java.lang.String` v5 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.getChecked:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19a9bc.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19a9c0.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19a9c6.  v2:= 0I;
  #L19a9c8.  call temp:= `parse`(v0, v2, v5) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19a9ce.  v1:= temp @kind object;
  #L19a9d0.  v2:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L19a9d4.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L19a9da.  v3:= temp;
  #L19a9dc.  v2:= v2[v3];
  #L19a9e0.  goto L19aa68;
  #L19a9e6.  v2:= new `java.net.MalformedURLException`;
  #L19a9ea.  v3:= new `java.lang.StringBuilder`;
  #L19a9ee.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19a9f4.  v4:= "Invalid URL: " @kind object;
  #L19a9f8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19a9fe.  v3:= temp @kind object;
  #L19aa00.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aa06.  v3:= temp @kind object;
  #L19aa08.  v4:= " for " @kind object;
  #L19aa0c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aa12.  v3:= temp @kind object;
  #L19aa14.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aa1a.  v3:= temp @kind object;
  #L19aa1c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19aa22.  v3:= temp @kind object;
  #L19aa24.  call `<init>`(v2, v3) @signature `Ljava/net/MalformedURLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19aa2a.  throw v2;
  #L19aa2c.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19aa32.  v2:= temp @kind object;
  #L19aa34.  return v2 @kind object;
  #L19aa36.  v2:= new `java.net.UnknownHostException`;
  #L19aa3a.  v3:= new `java.lang.StringBuilder`;
  #L19aa3e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19aa44.  v4:= "Invalid host: " @kind object;
  #L19aa48.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aa4e.  v3:= temp @kind object;
  #L19aa50.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aa56.  v3:= temp @kind object;
  #L19aa58.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19aa5e.  v3:= temp @kind object;
  #L19aa60.  call `<init>`(v2, v3) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19aa66.  throw v2;
  #L19aa68.  switch v2
                  | 1 => goto L19aa2c
                  | 2 => goto L19aa36
                  | else => goto L19a9e6;
}
procedure `void` `namesAndValuesToQueryString`(`java.lang.StringBuilder` v5 @kind object @name `out`, `java.util.List` v6 @kind object) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19aa88.  v0:= 0I;
  #L19aa8a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19aa90.  v2:= temp;
  #L19aa92.  if v0 >= v2 then goto L19aae0;
  #L19aa96.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19aa9c.  v1:= temp @kind object;
  #L19aa9e.  v1:= (`java.lang.String`) v1 @kind object;
  #L19aaa2.  v4:= v0 + 1;
  #L19aaa6.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19aaac.  v3:= temp @kind object;
  #L19aaae.  v3:= (`java.lang.String`) v3 @kind object;
  #L19aab2.  if v0 <= 0 then goto L19aac0;
  #L19aab6.  v4:= 38I;
  #L19aaba.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aac0.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aac6.  if v3 == 0 then goto L19aada;
  #L19aaca.  v4:= 61I;
  #L19aace.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aad4.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aada.  v0:= v0 + 2;
  #L19aade.  goto L19aa92;
  #L19aae0.  return @kind void;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v4 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19aaf4.  v2:= 0I;
  #L19aaf6.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19aafa.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19ab00.  call temp:= `parse`(v0, v2, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19ab06.  v1:= temp @kind object;
  #L19ab08.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19ab0c.  if v1 != v3 then goto L19ab18;
  #L19ab10.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19ab16.  v2:= temp @kind object;
  #L19ab18.  return v2 @kind object;
}
procedure `void` `pathSegmentsToString`(`java.lang.StringBuilder` v3 @kind object @name `out`, `java.util.List` v4 @kind object) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19ab2c.  v0:= 0I;
  #L19ab2e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ab34.  v1:= temp;
  #L19ab36.  if v0 >= v1 then goto L19ab5c;
  #L19ab3a.  v2:= 47I;
  #L19ab3e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ab44.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19ab4a.  v2:= temp @kind object;
  #L19ab4c.  v2:= (`java.lang.String`) v2 @kind object;
  #L19ab50.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ab56.  v0:= v0 + 1;
  #L19ab5a.  goto L19ab36;
  #L19ab5c.  return @kind void;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v4 @kind object @name `encoded`, `int` v5 @name `pos`, `int` v6 @name `limit`, `boolean` v7 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19ab70.  v1:= v5;
  #L19ab72.  if v1 >= v6 then goto L19abb8;
  #L19ab76.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ab7c.  v0:= temp;
  #L19ab7e.  v3:= 37I;
  #L19ab82.  if v0 == v3 then goto L19ab92;
  #L19ab86.  v3:= 43I;
  #L19ab8a.  if v0 != v3 then goto L19abb2;
  #L19ab8e.  if v7 == 0 then goto L19abb2;
  #L19ab92.  v2:= new `okio.Buffer`;
  #L19ab96.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19ab9c.  call temp:= `writeUtf8`(v2, v4, v5, v1) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L19aba2.  call `percentDecode`(v2, v4, v1, v6, v7) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L19aba8.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19abae.  v3:= temp @kind object;
  #L19abb0.  return v3 @kind object;
  #L19abb2.  v1:= v1 + 1;
  #L19abb6.  goto L19ab72;
  #L19abb8.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19abbe.  v3:= temp @kind object;
  #L19abc0.  goto L19abb0;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v2 @kind object @name `encoded`, `boolean` v3 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L19abd4.  v0:= 0I;
  #L19abd6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19abdc.  v1:= temp;
  #L19abde.  call temp:= `percentDecode`(v2, v0, v1, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L19abe4.  v0:= temp @kind object;
  #L19abe6.  return v0 @kind object;
}
procedure `java.util.List` `percentDecode`(`okhttp3.HttpUrl` v5 @kind this, `java.util.List` v6 @kind object, `boolean` v7 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19abf8.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19abfe.  v3:= temp;
  #L19ac00.  v1:= new `java.util.ArrayList`;
  #L19ac04.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19ac0a.  v0:= 0I;
  #L19ac0c.  if v0 >= v3 then goto L19ac38;
  #L19ac10.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19ac16.  v2:= temp @kind object;
  #L19ac18.  v2:= (`java.lang.String`) v2 @kind object;
  #L19ac1c.  if v2 == 0 then goto L19ac34;
  #L19ac20.  call temp:= `percentDecode`(v2, v7) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19ac26.  v4:= temp @kind object;
  #L19ac28.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19ac2e.  v0:= v0 + 1;
  #L19ac32.  goto L19ac0c;
  #L19ac34.  v4:= 0I;
  #L19ac36.  goto L19ac28;
  #L19ac38.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19ac3e.  v4:= temp @kind object;
  #L19ac40.  return v4 @kind object;
}
procedure `void` `percentDecode`(`okio.Buffer` v6 @kind object @name `out`, `java.lang.String` v7 @kind object @name `encoded`, `int` v8 @name `pos`, `int` v9 @name `limit`, `boolean` v10 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ac54.  v5:= -1I;
  #L19ac56.  v3:= v8;
  #L19ac58.  if v3 >= v9 then goto L19ace0;
  #L19ac5c.  call temp:= `codePointAt`(v7, v3) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19ac62.  v0:= temp;
  #L19ac64.  v4:= 37I;
  #L19ac68.  if v0 != v4 then goto L19acc0;
  #L19ac6c.  v4:= v3 + 2;
  #L19ac70.  if v4 >= v9 then goto L19acc0;
  #L19ac74.  v4:= v3 + 1;
  #L19ac78.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ac7e.  v4:= temp;
  #L19ac80.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19ac86.  v1:= temp;
  #L19ac88.  v4:= v3 + 2;
  #L19ac8c.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ac92.  v4:= temp;
  #L19ac94.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19ac9a.  v2:= temp;
  #L19ac9c.  if v1 == v5 then goto L19acd8;
  #L19aca0.  if v2 == v5 then goto L19acd8;
  #L19aca4.  v4:= v1 ^< 4;
  #L19aca8.  v4:= v4 + v2 @kind int;
  #L19acaa.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19acb0.  v3:= v3 + 2;
  #L19acb4.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19acba.  v4:= temp;
  #L19acbc.  v3:= v3 + v4 @kind int;
  #L19acbe.  goto L19ac58;
  #L19acc0.  v4:= 43I;
  #L19acc4.  if v0 != v4 then goto L19acd8;
  #L19acc8.  if v10 == 0 then goto L19acd8;
  #L19accc.  v4:= 32I;
  #L19acd0.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19acd6.  goto L19acb4;
  #L19acd8.  call temp:= `writeUtf8CodePoint`(v6, v0) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19acde.  goto L19acb4;
  #L19ace0.  return @kind void;
}
procedure `boolean` `percentEncoded`(`java.lang.String` v3 @kind object @name `encoded`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19acf4.  v2:= -1I;
  #L19acf6.  v0:= v4 + 2;
  #L19acfa.  if v0 >= v5 then goto L19ad42;
  #L19acfe.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ad04.  v0:= temp;
  #L19ad06.  v1:= 37I;
  #L19ad0a.  if v0 != v1 then goto L19ad42;
  #L19ad0e.  v0:= v4 + 1;
  #L19ad12.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ad18.  v0:= temp;
  #L19ad1a.  call temp:= `decodeHexDigit`(v0) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19ad20.  v0:= temp;
  #L19ad22.  if v0 == v2 then goto L19ad42;
  #L19ad26.  v0:= v4 + 2;
  #L19ad2a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ad30.  v0:= temp;
  #L19ad32.  call temp:= `decodeHexDigit`(v0) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19ad38.  v0:= temp;
  #L19ad3a.  if v0 == v2 then goto L19ad42;
  #L19ad3e.  v0:= 1I;
  #L19ad40.  return v0;
  #L19ad42.  v0:= 0I;
  #L19ad44.  goto L19ad40;
}
procedure `java.util.List` `queryStringToNamesAndValues`(`java.lang.String` v6 @kind object @name `encodedQuery`) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ad58.  v5:= -1I;
  #L19ad5a.  v3:= new `java.util.ArrayList`;
  #L19ad5e.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19ad64.  v2:= 0I;
  #L19ad66.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ad6c.  v4:= temp;
  #L19ad6e.  if v2 > v4 then goto L19addc;
  #L19ad72.  v4:= 38I;
  #L19ad76.  call temp:= `indexOf`(v6, v4, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19ad7c.  v0:= temp;
  #L19ad7e.  if v0 != v5 then goto L19ad8a;
  #L19ad82.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ad88.  v0:= temp;
  #L19ad8a.  v4:= 61I;
  #L19ad8e.  call temp:= `indexOf`(v6, v4, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19ad94.  v1:= temp;
  #L19ad96.  if v1 == v5 then goto L19ad9e;
  #L19ad9a.  if v1 <= v0 then goto L19adba;
  #L19ad9e.  call temp:= `substring`(v6, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19ada4.  v4:= temp @kind object;
  #L19ada6.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19adac.  v4:= 0I;
  #L19adae.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19adb4.  v2:= v0 + 1;
  #L19adb8.  goto L19ad66;
  #L19adba.  call temp:= `substring`(v6, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19adc0.  v4:= temp @kind object;
  #L19adc2.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19adc8.  v4:= v1 + 1;
  #L19adcc.  call temp:= `substring`(v6, v4, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19add2.  v4:= temp @kind object;
  #L19add4.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19adda.  goto L19adb4;
  #L19addc.  return v3 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19adf0.  v1:= v3.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L19adf4.  if v1 != 0 then goto L19adfc;
  #L19adf8.  v1:= 0I;
  #L19adfa.  return v1 @kind object;
  #L19adfc.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19ae00.  v2:= 35I;
  #L19ae04.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19ae0a.  v1:= temp;
  #L19ae0c.  v0:= v1 + 1;
  #L19ae10.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19ae14.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19ae1a.  v1:= temp @kind object;
  #L19ae1c.  goto L19adfa;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19ae30.  v2:= v5.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L19ae34.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19ae3a.  v2:= temp;
  #L19ae3c.  if v2 == 0 then goto L19ae46;
  #L19ae40.  v2:= "" @kind object;
  #L19ae44.  return v2 @kind object;
  #L19ae46.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19ae4a.  v3:= 58I;
  #L19ae4e.  v4:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19ae52.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ae58.  v4:= temp;
  #L19ae5a.  v4:= v4 + 3;
  #L19ae5e.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19ae64.  v2:= temp;
  #L19ae66.  v1:= v2 + 1;
  #L19ae6a.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19ae6e.  v3:= 64I;
  #L19ae72.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19ae78.  v0:= temp;
  #L19ae7a.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19ae7e.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19ae84.  v2:= temp @kind object;
  #L19ae86.  goto L19ae44;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19ae98.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19ae9c.  v3:= 47I;
  #L19aea0.  v4:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19aea4.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19aeaa.  v4:= temp;
  #L19aeac.  v4:= v4 + 3;
  #L19aeb0.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19aeb6.  v1:= temp;
  #L19aeb8.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aebc.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aec0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19aec6.  v3:= temp;
  #L19aec8.  v4:= "?#" @kind object;
  #L19aecc.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19aed2.  v0:= temp;
  #L19aed4.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aed8.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19aede.  v2:= temp @kind object;
  #L19aee0.  return v2 @kind object;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v9 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19aef4.  v8:= 47I;
  #L19aef8.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19aefc.  v6:= v9.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19af00.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19af06.  v6:= temp;
  #L19af08.  v6:= v6 + 3;
  #L19af0c.  call temp:= `indexOf`(v5, v8, v6) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19af12.  v2:= temp;
  #L19af14.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19af18.  v6:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19af1c.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19af22.  v6:= temp;
  #L19af24.  v7:= "?#" @kind object;
  #L19af28.  call temp:= `delimiterOffset`(v5, v2, v6, v7) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19af2e.  v1:= temp;
  #L19af30.  v3:= new `java.util.ArrayList`;
  #L19af34.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19af3a.  v0:= v2;
  #L19af3c.  if v0 >= v1 then goto L19af66;
  #L19af40.  v0:= v0 + 1;
  #L19af44.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19af48.  call temp:= `delimiterOffset`(v5, v0, v1, v8) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19af4e.  v4:= temp;
  #L19af50.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19af54.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19af5a.  v5:= temp @kind object;
  #L19af5c.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19af62.  v0:= v4;
  #L19af64.  goto L19af3c;
  #L19af66.  return v3 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19af78.  v2:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19af7c.  if v2 != 0 then goto L19af84;
  #L19af80.  v2:= 0I;
  #L19af82.  return v2 @kind object;
  #L19af84.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19af88.  v3:= 63I;
  #L19af8c.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19af92.  v2:= temp;
  #L19af94.  v1:= v2 + 1;
  #L19af98.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19af9c.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19afa0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19afa6.  v3:= temp;
  #L19afa8.  v4:= 35I;
  #L19afac.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19afb2.  v0:= temp;
  #L19afb4.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19afb8.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19afbe.  v2:= temp @kind object;
  #L19afc0.  goto L19af82;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19afd4.  v2:= v5.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L19afd8.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19afde.  v2:= temp;
  #L19afe0.  if v2 == 0 then goto L19afea;
  #L19afe4.  v2:= "" @kind object;
  #L19afe8.  return v2 @kind object;
  #L19afea.  v2:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19afee.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19aff4.  v2:= temp;
  #L19aff6.  v1:= v2 + 3;
  #L19affa.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19affe.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19b002.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b008.  v3:= temp;
  #L19b00a.  v4:= ":@" @kind object;
  #L19b00e.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19b014.  v0:= temp;
  #L19b016.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19b01a.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19b020.  v2:= temp @kind object;
  #L19b022.  goto L19afe8;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b034.  v0:= instanceof @variable v3 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L19b038.  if v0 == 0 then goto L19b058;
  #L19b03c.  v3:= (`okhttp3.HttpUrl`) v3 @kind object;
  #L19b040.  v0:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19b044.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19b048.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b04e.  v0:= temp;
  #L19b050.  if v0 == 0 then goto L19b058;
  #L19b054.  v0:= 1I;
  #L19b056.  return v0;
  #L19b058.  v0:= 0I;
  #L19b05a.  goto L19b056;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b06c.  v0:= v1.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L19b070.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b084.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19b088.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19b08e.  v0:= temp;
  #L19b090.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b0a4.  v0:= v1.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19b0a8.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b0bc.  v0:= v2.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19b0c0.  v1:= "https" @kind object;
  #L19b0c4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b0ca.  v0:= temp;
  #L19b0cc.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19b0e0.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19b0e4.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19b0ea.  v1:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19b0ee.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v1 @kind object;
  #L19b0f2.  call temp:= `encodedUsername`(v3) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19b0f8.  v1:= temp @kind object;
  #L19b0fa.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v1 @kind object;
  #L19b0fe.  call temp:= `encodedPassword`(v3) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19b104.  v1:= temp @kind object;
  #L19b106.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L19b10a.  v1:= v3.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19b10e.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L19b112.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19b116.  v2:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19b11a.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19b120.  v2:= temp;
  #L19b122.  if v1 == v2 then goto L19b166;
  #L19b126.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19b12a.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L19b12e.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b132.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19b138.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b13c.  call temp:= `encodedPathSegments`(v3) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L19b142.  v2:= temp @kind object;
  #L19b144.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19b14a.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L19b150.  v1:= temp @kind object;
  #L19b152.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b158.  call temp:= `encodedFragment`(v3) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L19b15e.  v1:= temp @kind object;
  #L19b160.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L19b164.  return v0 @kind object;
  #L19b166.  v1:= -1I;
  #L19b168.  goto L19b12a;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this, `java.lang.String` v4 @kind object @name `link`) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19b17c.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19b180.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19b186.  call temp:= `parse`(v0, v3, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19b18c.  v1:= temp @kind object;
  #L19b18e.  v2:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19b192.  if v1 != v2 then goto L19b198;
  #L19b196.  return v0 @kind object;
  #L19b198.  v0:= 0I;
  #L19b19a.  goto L19b196;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b1ac.  v0:= v1.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L19b1b0.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b1c4.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L19b1c8.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b1dc.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L19b1e0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b1e6.  v0:= temp;
  #L19b1e8.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b1fc.  v0:= v1.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19b200.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b214.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b218.  if v1 != 0 then goto L19b220;
  #L19b21c.  v1:= 0I;
  #L19b21e.  return v1 @kind object;
  #L19b220.  v0:= new `java.lang.StringBuilder`;
  #L19b224.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b22a.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b22e.  call `namesAndValuesToQueryString`(v0, v1) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19b234.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b23a.  v1:= temp @kind object;
  #L19b23c.  goto L19b21e;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v4 @kind this, `java.lang.String` v5 @kind object @name `name`) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19b250.  v2:= 0I;
  #L19b252.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b256.  if v3 != 0 then goto L19b25c;
  #L19b25a.  return v2 @kind object;
  #L19b25c.  v0:= 0I;
  #L19b25e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b262.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b268.  v1:= temp;
  #L19b26a.  if v0 >= v1 then goto L19b25a;
  #L19b26e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b272.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b278.  v3:= temp @kind object;
  #L19b27a.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b280.  v3:= temp;
  #L19b282.  if v3 == 0 then goto L19b29c;
  #L19b286.  v2:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b28a.  v3:= v0 + 1;
  #L19b28e.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b294.  v2:= temp @kind object;
  #L19b296.  v2:= (`java.lang.String`) v2 @kind object;
  #L19b29a.  goto L19b25a;
  #L19b29c.  v0:= v0 + 2;
  #L19b2a0.  goto L19b26a;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b2b4.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b2b8.  if v0 != 0 then goto L19b2c8;
  #L19b2bc.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L19b2c0.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19b2c6.  throw v0;
  #L19b2c8.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b2cc.  v1:= v3 * 2;
  #L19b2d0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b2d6.  v0:= temp @kind object;
  #L19b2d8.  v0:= (`java.lang.String`) v0 @kind object;
  #L19b2dc.  return v0 @kind object;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19b2f0.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b2f4.  if v3 != 0 then goto L19b302;
  #L19b2f8.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L19b2fe.  v3:= temp @kind object;
  #L19b300.  return v3 @kind object;
  #L19b302.  v1:= new `java.util.LinkedHashSet`;
  #L19b306.  call `<init>`(v1) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L19b30c.  v0:= 0I;
  #L19b30e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b312.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b318.  v2:= temp;
  #L19b31a.  if v0 >= v2 then goto L19b336;
  #L19b31e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b322.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b328.  v3:= temp @kind object;
  #L19b32a.  call temp:= `add`(v1, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19b330.  v0:= v0 + 2;
  #L19b334.  goto L19b31a;
  #L19b336.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L19b33c.  v3:= temp @kind object;
  #L19b33e.  goto L19b300;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b350.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b354.  if v0 != 0 then goto L19b364;
  #L19b358.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L19b35c.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19b362.  throw v0;
  #L19b364.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b368.  v1:= v3 * 2;
  #L19b36c.  v1:= v1 + 1;
  #L19b370.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b376.  v0:= temp @kind object;
  #L19b378.  v0:= (`java.lang.String`) v0 @kind object;
  #L19b37c.  return v0 @kind object;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object @name `name`) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19b390.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b394.  if v3 != 0 then goto L19b3a2;
  #L19b398.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L19b39e.  v3:= temp @kind object;
  #L19b3a0.  return v3 @kind object;
  #L19b3a2.  v1:= new `java.util.ArrayList`;
  #L19b3a6.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19b3ac.  v0:= 0I;
  #L19b3ae.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b3b2.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b3b8.  v2:= temp;
  #L19b3ba.  if v0 >= v2 then goto L19b3f2;
  #L19b3be.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b3c2.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b3c8.  v3:= temp @kind object;
  #L19b3ca.  call temp:= `equals`(v6, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b3d0.  v3:= temp;
  #L19b3d2.  if v3 == 0 then goto L19b3ec;
  #L19b3d6.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b3da.  v4:= v0 + 1;
  #L19b3de.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b3e4.  v3:= temp @kind object;
  #L19b3e6.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19b3ec.  v0:= v0 + 2;
  #L19b3f0.  goto L19b3ba;
  #L19b3f2.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19b3f8.  v3:= temp @kind object;
  #L19b3fa.  goto L19b3a0;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b40c.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b410.  if v0 == 0 then goto L19b426;
  #L19b414.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b418.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b41e.  v0:= temp;
  #L19b420.  v0:= v0 / 2;
  #L19b424.  return v0;
  #L19b426.  v0:= 0I;
  #L19b428.  goto L19b424;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b43c.  v0:= "/..." @kind object;
  #L19b440.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b446.  v0:= temp @kind object;
  #L19b448.  v1:= "" @kind object;
  #L19b44c.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b452.  v0:= temp @kind object;
  #L19b454.  v1:= "" @kind object;
  #L19b458.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b45e.  v0:= temp @kind object;
  #L19b460.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19b466.  v0:= temp @kind object;
  #L19b468.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b46e.  v0:= temp @kind object;
  #L19b470.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.String` v3 @kind object @name `link`) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b484.  call temp:= `newBuilder`(v2, v3) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b48a.  v0:= temp @kind object;
  #L19b48c.  if v0 == 0 then goto L19b49a;
  #L19b490.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19b496.  v1:= temp @kind object;
  #L19b498.  return v1 @kind object;
  #L19b49a.  v1:= 0I;
  #L19b49c.  goto L19b498;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b4b0.  v0:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19b4b4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b4c8.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19b4cc.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b4e0.  v0:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19b4e4.  call temp:= `verifyAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L19b4ea.  v0:= temp;
  #L19b4ec.  if v0 == 0 then goto L19b4f4;
  #L19b4f0.  v0:= 0I;
  #L19b4f2.  return v0 @kind object;
  #L19b4f4.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L19b4fa.  v0:= temp @kind object;
  #L19b4fc.  v1:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19b500.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19b506.  v0:= temp @kind object;
  #L19b508.  goto L19b4f2;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b51c.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b522.  v4:= temp @kind object;
  #L19b524.  call temp:= `reencodeForUri`(v4) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b52a.  v4:= temp @kind object;
  #L19b52c.  call temp:= `toString`(v4) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b532.  v3:= temp @kind object;
  #Try_start0.  
  #L19b534.  v4:= new `java.net.URI`;
  #L19b538.  call `<init>`(v4, v3) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L19b53e.  return v4 @kind object;
  #L19b540.  v0:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #Try_start1.  
  #L19b542.  v4:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L19b546.  v5:= "" @kind object;
  #L19b54a.  call temp:= `replaceAll`(v3, v4, v5) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19b550.  v2:= temp @kind object;
  #L19b552.  call temp:= `create`(v2) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #Try_end1.  
  #L19b558.  v4:= temp @kind object;
  #L19b55a.  goto L19b53e;
  #L19b55c.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19b55e.  v4:= new `java.lang.RuntimeException`;
  #L19b562.  call `<init>`(v4, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19b568.  throw v4;
  catch `java.net.URISyntaxException` @[Try_start0..Try_end0] goto L19b540;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L19b55c;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L19b598.  v1:= new `java.net.URL`;
  #L19b59c.  v2:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19b5a0.  call `<init>`(v1, v2) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L19b5a6.  return v1 @kind object;
  #L19b5a8.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L19b5aa.  v1:= new `java.lang.RuntimeException`;
  #L19b5ae.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19b5b4.  throw v1;
  catch `java.net.MalformedURLException` @[Try_start0..Try_end0] goto L19b5a8;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b5d8.  v0:= v1.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L19b5dc.  return v0 @kind object;
}

record `okhttp3.Cache$2` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `boolean` `okhttp3.Cache$2.canRemove` @AccessFlag ;
  `java.util.Iterator` `okhttp3.Cache$2.delegate` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Cache$2.nextUrl` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.Cache$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$2` v1 @kind this, `okhttp3.Cache` v2 @kind object @name `this$0`) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L192ad4.  v1.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` := v2 @kind object;
  #L192ad8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L192ade.  v0:= v1.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` @kind object;
  #L192ae2.  v0:= v0.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L192ae6.  call temp:= `snapshots`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L192aec.  v0:= temp @kind object;
  #L192aee.  v1.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` := v0 @kind object;
  #L192af2.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$2` v5 @kind this) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L192b04.  v2:= 1I;
  #L192b06.  v3:= 0I;
  #L192b08.  v4:= v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L192b0c.  if v4 == 0 then goto L192b12;
  #L192b10.  return v2;
  #L192b12.  v5.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v3 @kind boolean;
  #L192b16.  v4:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L192b1a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L192b20.  v4:= temp;
  #L192b22.  if v4 == 0 then goto L192b70;
  #L192b26.  v4:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L192b2a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L192b30.  v1:= temp @kind object;
  #L192b32.  v1:= (`okhttp3.internal.cache.DiskLruCache$Snapshot`) v1 @kind object;
  #L192b36.  v4:= 0I;
  #Try_start0.  
  #L192b38.  call temp:= `getSource`(v1, v4) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L192b3e.  v4:= temp @kind object;
  #L192b40.  call temp:= `buffer`(v4) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L192b46.  v0:= temp @kind object;
  #L192b48.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L192b4e.  v4:= temp @kind object;
  #L192b50.  v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v4 @kind object;
  #Try_end0.  
  #L192b54.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L192b5a.  goto L192b10;
  #L192b5c.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L192b5e.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L192b64.  goto L192b16;
  #L192b66.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L192b68.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L192b6e.  throw v2;
  #L192b70.  v2:= v3;
  #L192b72.  goto L192b10;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L192b5c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L192b66;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$2` v1 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L192b94.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @kind virtual;
  #L192b9a.  v0:= temp @kind object;
  #L192b9c.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192bb0.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @kind virtual;
  #L192bb6.  v1:= temp;
  #L192bb8.  if v1 != 0 then goto L192bc8;
  #L192bbc.  v1:= new `java.util.NoSuchElementException`;
  #L192bc0.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L192bc6.  throw v1;
  #L192bc8.  v0:= v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L192bcc.  v1:= 0I;
  #L192bce.  v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v1 @kind object;
  #L192bd2.  v1:= 1I;
  #L192bd4.  v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v1 @kind boolean;
  #L192bd8.  return v0 @kind object;
}
procedure `void` `remove`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L192bec.  v0:= v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` @kind boolean;
  #L192bf0.  if v0 != 0 then goto L192c04;
  #L192bf4.  v0:= new `java.lang.IllegalStateException`;
  #L192bf8.  v1:= "remove() before next()" @kind object;
  #L192bfc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192c02.  throw v0;
  #L192c04.  v0:= v2.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L192c08.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L192c0e.  return @kind void;
}

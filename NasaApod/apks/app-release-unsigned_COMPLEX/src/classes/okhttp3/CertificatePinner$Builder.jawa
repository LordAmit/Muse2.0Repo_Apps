record `okhttp3.CertificatePinner$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.CertificatePinner$Builder.pins` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner$Builder` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19445c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L194462.  v0:= new `java.util.ArrayList`;
  #L194466.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19446c.  v1.`okhttp3.CertificatePinner$Builder.pins` @type ^`java.util.List` := v0 @kind object;
  #L194470.  return @kind void;
}
procedure `okhttp3.CertificatePinner$Builder` `add`(`okhttp3.CertificatePinner$Builder` v5 @kind this, `java.lang.String` v6 @kind object @name `pattern`, `java.lang.String`[] v7 @kind object @name `pins`) @signature `Lokhttp3/CertificatePinner$Builder;.add:(Ljava/lang/String;[Ljava/lang/String;)Lokhttp3/CertificatePinner$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L194484.  if v6 != 0 then goto L194498;
  #L194488.  v1:= new `java.lang.NullPointerException`;
  #L19448c.  v2:= "pattern == null" @kind object;
  #L194490.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L194496.  throw v1;
  #L194498.  v2:= length @variable v7;
  #L19449a.  v1:= 0I;
  #L19449c.  if v1 >= v2 then goto L1944be;
  #L1944a0.  v0:= v7[v1] @kind object;
  #L1944a4.  v3:= v5.`okhttp3.CertificatePinner$Builder.pins` @type ^`java.util.List` @kind object;
  #L1944a8.  v4:= new `okhttp3.CertificatePinner$Pin`;
  #L1944ac.  call `<init>`(v4, v6, v0) @signature `Lokhttp3/CertificatePinner$Pin;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1944b2.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1944b8.  v1:= v1 + 1;
  #L1944bc.  goto L19449c;
  #L1944be.  return v5 @kind object;
}
procedure `okhttp3.CertificatePinner` `build`(`okhttp3.CertificatePinner$Builder` v3 @kind this) @signature `Lokhttp3/CertificatePinner$Builder;.build:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1944d0.  v0:= new `okhttp3.CertificatePinner`;
  #L1944d4.  v1:= new `java.util.LinkedHashSet`;
  #L1944d8.  v2:= v3.`okhttp3.CertificatePinner$Builder.pins` @type ^`java.util.List` @kind object;
  #L1944dc.  call `<init>`(v1, v2) @signature `Ljava/util/LinkedHashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1944e2.  v2:= 0I;
  #L1944e4.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @kind direct;
  #L1944ea.  return v0 @kind object;
}

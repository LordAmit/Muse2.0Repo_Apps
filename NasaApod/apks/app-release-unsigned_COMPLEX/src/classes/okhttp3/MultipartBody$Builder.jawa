record `okhttp3.MultipartBody$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.ByteString` `okhttp3.MultipartBody$Builder.boundary` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody$Builder.parts` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody$Builder.type` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19b87c.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L19b882.  v0:= temp @kind object;
  #L19b884.  call temp:= `toString`(v0) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b88a.  v0:= temp @kind object;
  #L19b88c.  call `<init>`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b892.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `boundary`) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19b8a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b8aa.  v0:= `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` @kind object;
  #L19b8ae.  v1.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L19b8b2.  v0:= new `java.util.ArrayList`;
  #L19b8b6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19b8bc.  v1.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` := v0 @kind object;
  #L19b8c0.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19b8c6.  v0:= temp @kind object;
  #L19b8c8.  v1.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` := v0 @kind object;
  #L19b8cc.  return @kind void;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b8e0.  call temp:= `createFormData`(v2, v3) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b8e6.  v0:= temp @kind object;
  #L19b8e8.  call temp:= `addPart`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19b8ee.  v0:= temp @kind object;
  #L19b8f0.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `filename`, `okhttp3.RequestBody` v4 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b904.  call temp:= `createFormData`(v2, v3, v4) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b90a.  v0:= temp @kind object;
  #L19b90c.  call temp:= `addPart`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19b912.  v0:= temp @kind object;
  #L19b914.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object @name `headers`, `okhttp3.RequestBody` v3 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b928.  call temp:= `create`(v2, v3) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b92e.  v0:= temp @kind object;
  #L19b930.  call temp:= `addPart`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19b936.  v0:= temp @kind object;
  #L19b938.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v2 @kind this, `okhttp3.MultipartBody$Part` v3 @kind object @name `part`) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b94c.  if v3 != 0 then goto L19b960;
  #L19b950.  v0:= new `java.lang.NullPointerException`;
  #L19b954.  v1:= "part == null" @kind object;
  #L19b958.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b95e.  throw v0;
  #L19b960.  v0:= v2.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L19b964.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19b96a.  return v2 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b97c.  call temp:= `create`(v2) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19b982.  v0:= temp @kind object;
  #L19b984.  call temp:= `addPart`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19b98a.  v0:= temp @kind object;
  #L19b98c.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody` `build`(`okhttp3.MultipartBody$Builder` v4 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19b9a0.  v0:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L19b9a4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19b9aa.  v0:= temp;
  #L19b9ac.  if v0 == 0 then goto L19b9c0;
  #L19b9b0.  v0:= new `java.lang.IllegalStateException`;
  #L19b9b4.  v1:= "Multipart body must have at least one part." @kind object;
  #L19b9b8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b9be.  throw v0;
  #L19b9c0.  v0:= new `okhttp3.MultipartBody`;
  #L19b9c4.  v1:= v4.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` @kind object;
  #L19b9c8.  v2:= v4.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` @kind object;
  #L19b9cc.  v3:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L19b9d0.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @kind direct;
  #L19b9d6.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `setType`(`okhttp3.MultipartBody$Builder` v3 @kind this, `okhttp3.MediaType` v4 @kind object @name `type`) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19b9e8.  if v4 != 0 then goto L19b9fc;
  #L19b9ec.  v0:= new `java.lang.NullPointerException`;
  #L19b9f0.  v1:= "type == null" @kind object;
  #L19b9f4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b9fa.  throw v0;
  #L19b9fc.  call temp:= `type`(v4) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @kind virtual;
  #L19ba02.  v0:= temp @kind object;
  #L19ba04.  v1:= "multipart" @kind object;
  #L19ba08.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ba0e.  v0:= temp;
  #L19ba10.  if v0 != 0 then goto L19ba46;
  #L19ba14.  v0:= new `java.lang.IllegalArgumentException`;
  #L19ba18.  v1:= new `java.lang.StringBuilder`;
  #L19ba1c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ba22.  v2:= "multipart != " @kind object;
  #L19ba26.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ba2c.  v1:= temp @kind object;
  #L19ba2e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ba34.  v1:= temp @kind object;
  #L19ba36.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ba3c.  v1:= temp @kind object;
  #L19ba3e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ba44.  throw v0;
  #L19ba46.  v3.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L19ba4a.  return v3 @kind object;
}

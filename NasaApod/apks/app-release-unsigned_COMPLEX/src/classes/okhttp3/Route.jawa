record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.address` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.inetSocketAddress` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.proxy` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v2 @kind this, `okhttp3.Address` v3 @kind object @name `address`, `java.net.Proxy` v4 @kind object @name `proxy`, `java.net.InetSocketAddress` v5 @kind object @name `inetSocketAddress`) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19d95c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19d962.  if v3 != 0 then goto L19d976;
  #L19d966.  v0:= new `java.lang.NullPointerException`;
  #L19d96a.  v1:= "address == null" @kind object;
  #L19d96e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d974.  throw v0;
  #L19d976.  if v4 != 0 then goto L19d98a;
  #L19d97a.  v0:= new `java.lang.NullPointerException`;
  #L19d97e.  v1:= "proxy == null" @kind object;
  #L19d982.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d988.  throw v0;
  #L19d98a.  if v5 != 0 then goto L19d99e;
  #L19d98e.  v0:= new `java.lang.NullPointerException`;
  #L19d992.  v1:= "inetSocketAddress == null" @kind object;
  #L19d996.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d99c.  throw v0;
  #L19d99e.  v2.`okhttp3.Route.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L19d9a2.  v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` := v4 @kind object;
  #L19d9a6.  v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` := v5 @kind object;
  #L19d9aa.  return @kind void;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d9bc.  v0:= v1.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19d9c0.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d9d4.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L19d9d8.  if v0 == 0 then goto L19da2c;
  #L19d9dc.  v0:= v3 @kind object;
  #L19d9de.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L19d9e2.  v0:= v0.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19d9e6.  v1:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19d9ea.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19d9f0.  v0:= temp;
  #L19d9f2.  if v0 == 0 then goto L19da2c;
  #L19d9f6.  v0:= v3 @kind object;
  #L19d9f8.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L19d9fc.  v0:= v0.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19da00.  v1:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19da04.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19da0a.  v0:= temp;
  #L19da0c.  if v0 == 0 then goto L19da2c;
  #L19da10.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L19da14.  v0:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19da18.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19da1c.  call temp:= `equals`(v0, v1) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19da22.  v0:= temp;
  #L19da24.  if v0 == 0 then goto L19da2c;
  #L19da28.  v0:= 1I;
  #L19da2a.  return v0;
  #L19da2c.  v0:= 0I;
  #L19da2e.  goto L19da2a;
}
procedure `int` `hashCode`(`okhttp3.Route` v3 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19da40.  v0:= 17I;
  #L19da44.  v1:= v3.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19da48.  call temp:= `hashCode`(v1) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L19da4e.  v1:= temp;
  #L19da50.  v0:= v1 + 527;
  #L19da54.  v1:= v0 * 31;
  #L19da58.  v2:= v3.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19da5c.  call temp:= `hashCode`(v2) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L19da62.  v2:= temp;
  #L19da64.  v0:= v1 + v2 @kind int;
  #L19da68.  v1:= v0 * 31;
  #L19da6c.  v2:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19da70.  call temp:= `hashCode`(v2) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L19da76.  v2:= temp;
  #L19da78.  v0:= v1 + v2 @kind int;
  #L19da7c.  return v0;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19da90.  v0:= v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19da94.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19daa8.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19daac.  v0:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19dab0.  if v0 == 0 then goto L19dacc;
  #L19dab4.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19dab8.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L19dabe.  v0:= temp @kind object;
  #L19dac0.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L19dac4.  if v0 != v1 then goto L19dacc;
  #L19dac8.  v0:= 1I;
  #L19daca.  return v0;
  #L19dacc.  v0:= 0I;
  #L19dace.  goto L19daca;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dae0.  v0:= v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19dae4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19daf8.  v0:= new `java.lang.StringBuilder`;
  #L19dafc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19db02.  v1:= "Route{" @kind object;
  #L19db06.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19db0c.  v0:= temp @kind object;
  #L19db0e.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19db12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19db18.  v0:= temp @kind object;
  #L19db1a.  v1:= "}" @kind object;
  #L19db1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19db24.  v0:= temp @kind object;
  #L19db26.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19db2c.  v0:= temp @kind object;
  #L19db2e.  return v0 @kind object;
}

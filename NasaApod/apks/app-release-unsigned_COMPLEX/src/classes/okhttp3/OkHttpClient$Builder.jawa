record `okhttp3.OkHttpClient$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Authenticator` `okhttp3.OkHttpClient$Builder.authenticator` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.OkHttpClient$Builder.cache` @AccessFlag ;
  `okhttp3.internal.tls.CertificateChainCleaner` `okhttp3.OkHttpClient$Builder.certificateChainCleaner` @AccessFlag ;
  `okhttp3.CertificatePinner` `okhttp3.OkHttpClient$Builder.certificatePinner` @AccessFlag ;
  `int` `okhttp3.OkHttpClient$Builder.connectTimeout` @AccessFlag ;
  `okhttp3.ConnectionPool` `okhttp3.OkHttpClient$Builder.connectionPool` @AccessFlag ;
  `java.util.List` `okhttp3.OkHttpClient$Builder.connectionSpecs` @AccessFlag ;
  `okhttp3.CookieJar` `okhttp3.OkHttpClient$Builder.cookieJar` @AccessFlag ;
  `okhttp3.Dispatcher` `okhttp3.OkHttpClient$Builder.dispatcher` @AccessFlag ;
  `okhttp3.Dns` `okhttp3.OkHttpClient$Builder.dns` @AccessFlag ;
  `okhttp3.EventListener$Factory` `okhttp3.OkHttpClient$Builder.eventListenerFactory` @AccessFlag ;
  `boolean` `okhttp3.OkHttpClient$Builder.followRedirects` @AccessFlag ;
  `boolean` `okhttp3.OkHttpClient$Builder.followSslRedirects` @AccessFlag ;
  `javax.net.ssl.HostnameVerifier` `okhttp3.OkHttpClient$Builder.hostnameVerifier` @AccessFlag ;
  `java.util.List` `okhttp3.OkHttpClient$Builder.interceptors` @AccessFlag FINAL;
  `okhttp3.internal.cache.InternalCache` `okhttp3.OkHttpClient$Builder.internalCache` @AccessFlag ;
  `java.util.List` `okhttp3.OkHttpClient$Builder.networkInterceptors` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient$Builder.pingInterval` @AccessFlag ;
  `java.util.List` `okhttp3.OkHttpClient$Builder.protocols` @AccessFlag ;
  `java.net.Proxy` `okhttp3.OkHttpClient$Builder.proxy` @AccessFlag ;
  `okhttp3.Authenticator` `okhttp3.OkHttpClient$Builder.proxyAuthenticator` @AccessFlag ;
  `java.net.ProxySelector` `okhttp3.OkHttpClient$Builder.proxySelector` @AccessFlag ;
  `int` `okhttp3.OkHttpClient$Builder.readTimeout` @AccessFlag ;
  `boolean` `okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @AccessFlag ;
  `javax.net.SocketFactory` `okhttp3.OkHttpClient$Builder.socketFactory` @AccessFlag ;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.OkHttpClient$Builder.sslSocketFactory` @AccessFlag ;
  `int` `okhttp3.OkHttpClient$Builder.writeTimeout` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient$Builder` v3 @kind this) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L19bbe0.  v2:= 10000I;
  #L19bbe4.  v1:= 1I;
  #L19bbe6.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19bbec.  v0:= new `java.util.ArrayList`;
  #L19bbf0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19bbf6.  v3.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` := v0 @kind object;
  #L19bbfa.  v0:= new `java.util.ArrayList`;
  #L19bbfe.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19bc04.  v3.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` := v0 @kind object;
  #L19bc08.  v0:= new `okhttp3.Dispatcher`;
  #L19bc0c.  call `<init>`(v0) @signature `Lokhttp3/Dispatcher;.<init>:()V` @kind direct;
  #L19bc12.  v3.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` := v0 @kind object;
  #L19bc16.  v0:= `@@okhttp3.OkHttpClient.DEFAULT_PROTOCOLS` @type ^`java.util.List` @kind object;
  #L19bc1a.  v3.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` := v0 @kind object;
  #L19bc1e.  v0:= `@@okhttp3.OkHttpClient.DEFAULT_CONNECTION_SPECS` @type ^`java.util.List` @kind object;
  #L19bc22.  v3.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L19bc26.  v0:= `@@okhttp3.EventListener.NONE` @type ^`okhttp3.EventListener` @kind object;
  #L19bc2a.  call temp:= `factory`(v0) @signature `Lokhttp3/EventListener;.factory:(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;` @kind static;
  #L19bc30.  v0:= temp @kind object;
  #L19bc32.  v3.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v0 @kind object;
  #L19bc36.  call temp:= `getDefault`() @signature `Ljava/net/ProxySelector;.getDefault:()Ljava/net/ProxySelector;` @kind static;
  #L19bc3c.  v0:= temp @kind object;
  #L19bc3e.  v3.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L19bc42.  v0:= `@@okhttp3.CookieJar.NO_COOKIES` @type ^`okhttp3.CookieJar` @kind object;
  #L19bc46.  v3.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` := v0 @kind object;
  #L19bc4a.  call temp:= `getDefault`() @signature `Ljavax/net/SocketFactory;.getDefault:()Ljavax/net/SocketFactory;` @kind static;
  #L19bc50.  v0:= temp @kind object;
  #L19bc52.  v3.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L19bc56.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L19bc5a.  v3.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L19bc5e.  v0:= `@@okhttp3.CertificatePinner.DEFAULT` @type ^`okhttp3.CertificatePinner` @kind object;
  #L19bc62.  v3.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` := v0 @kind object;
  #L19bc66.  v0:= `@@okhttp3.Authenticator.NONE` @type ^`okhttp3.Authenticator` @kind object;
  #L19bc6a.  v3.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L19bc6e.  v0:= `@@okhttp3.Authenticator.NONE` @type ^`okhttp3.Authenticator` @kind object;
  #L19bc72.  v3.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L19bc76.  v0:= new `okhttp3.ConnectionPool`;
  #L19bc7a.  call `<init>`(v0) @signature `Lokhttp3/ConnectionPool;.<init>:()V` @kind direct;
  #L19bc80.  v3.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` := v0 @kind object;
  #L19bc84.  v0:= `@@okhttp3.Dns.SYSTEM` @type ^`okhttp3.Dns` @kind object;
  #L19bc88.  v3.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` := v0 @kind object;
  #L19bc8c.  v3.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` := v1 @kind boolean;
  #L19bc90.  v3.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` := v1 @kind boolean;
  #L19bc94.  v3.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` := v1 @kind boolean;
  #L19bc98.  v3.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int` := v2;
  #L19bc9c.  v3.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int` := v2;
  #L19bca0.  v3.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int` := v2;
  #L19bca4.  v0:= 0I;
  #L19bca6.  v3.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int` := v0;
  #L19bcaa.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.OkHttpClient` v3 @kind object @name `okHttpClient`) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:(Lokhttp3/OkHttpClient;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19bcbc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19bcc2.  v0:= new `java.util.ArrayList`;
  #L19bcc6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19bccc.  v2.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` := v0 @kind object;
  #L19bcd0.  v0:= new `java.util.ArrayList`;
  #L19bcd4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19bcda.  v2.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` := v0 @kind object;
  #L19bcde.  v0:= v3.`okhttp3.OkHttpClient.dispatcher` @type ^`okhttp3.Dispatcher` @kind object;
  #L19bce2.  v2.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` := v0 @kind object;
  #L19bce6.  v0:= v3.`okhttp3.OkHttpClient.proxy` @type ^`java.net.Proxy` @kind object;
  #L19bcea.  v2.`okhttp3.OkHttpClient$Builder.proxy` @type ^`java.net.Proxy` := v0 @kind object;
  #L19bcee.  v0:= v3.`okhttp3.OkHttpClient.protocols` @type ^`java.util.List` @kind object;
  #L19bcf2.  v2.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` := v0 @kind object;
  #L19bcf6.  v0:= v3.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` @kind object;
  #L19bcfa.  v2.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L19bcfe.  v0:= v2.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L19bd02.  v1:= v3.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L19bd06.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19bd0c.  v0:= v2.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L19bd10.  v1:= v3.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L19bd14.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19bd1a.  v0:= v3.`okhttp3.OkHttpClient.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` @kind object;
  #L19bd1e.  v2.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v0 @kind object;
  #L19bd22.  v0:= v3.`okhttp3.OkHttpClient.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L19bd26.  v2.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L19bd2a.  v0:= v3.`okhttp3.OkHttpClient.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L19bd2e.  v2.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` := v0 @kind object;
  #L19bd32.  v0:= v3.`okhttp3.OkHttpClient.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L19bd36.  v2.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v0 @kind object;
  #L19bd3a.  v0:= v3.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L19bd3e.  v2.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` := v0 @kind object;
  #L19bd42.  v0:= v3.`okhttp3.OkHttpClient.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L19bd46.  v2.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L19bd4a.  v0:= v3.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19bd4e.  v2.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L19bd52.  v0:= v3.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L19bd56.  v2.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v0 @kind object;
  #L19bd5a.  v0:= v3.`okhttp3.OkHttpClient.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L19bd5e.  v2.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L19bd62.  v0:= v3.`okhttp3.OkHttpClient.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L19bd66.  v2.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` := v0 @kind object;
  #L19bd6a.  v0:= v3.`okhttp3.OkHttpClient.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L19bd6e.  v2.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L19bd72.  v0:= v3.`okhttp3.OkHttpClient.authenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L19bd76.  v2.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` := v0 @kind object;
  #L19bd7a.  v0:= v3.`okhttp3.OkHttpClient.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L19bd7e.  v2.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` := v0 @kind object;
  #L19bd82.  v0:= v3.`okhttp3.OkHttpClient.dns` @type ^`okhttp3.Dns` @kind object;
  #L19bd86.  v2.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` := v0 @kind object;
  #L19bd8a.  v0:= v3.`okhttp3.OkHttpClient.followSslRedirects` @type ^`boolean` @kind boolean;
  #L19bd8e.  v2.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` := v0 @kind boolean;
  #L19bd92.  v0:= v3.`okhttp3.OkHttpClient.followRedirects` @type ^`boolean` @kind boolean;
  #L19bd96.  v2.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` := v0 @kind boolean;
  #L19bd9a.  v0:= v3.`okhttp3.OkHttpClient.retryOnConnectionFailure` @type ^`boolean` @kind boolean;
  #L19bd9e.  v2.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` := v0 @kind boolean;
  #L19bda2.  v0:= v3.`okhttp3.OkHttpClient.connectTimeout` @type ^`int`;
  #L19bda6.  v2.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int` := v0;
  #L19bdaa.  v0:= v3.`okhttp3.OkHttpClient.readTimeout` @type ^`int`;
  #L19bdae.  v2.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int` := v0;
  #L19bdb2.  v0:= v3.`okhttp3.OkHttpClient.writeTimeout` @type ^`int`;
  #L19bdb6.  v2.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int` := v0;
  #L19bdba.  v0:= v3.`okhttp3.OkHttpClient.pingInterval` @type ^`int`;
  #L19bdbe.  v2.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int` := v0;
  #L19bdc2.  return @kind void;
}
procedure `okhttp3.OkHttpClient$Builder` `addInterceptor`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Interceptor` v3 @kind object @name `interceptor`) @signature `Lokhttp3/OkHttpClient$Builder;.addInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bdd4.  if v3 != 0 then goto L19bde8;
  #L19bdd8.  v0:= new `java.lang.IllegalArgumentException`;
  #L19bddc.  v1:= "interceptor == null" @kind object;
  #L19bde0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bde6.  throw v0;
  #L19bde8.  v0:= v2.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L19bdec.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19bdf2.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `addNetworkInterceptor`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Interceptor` v3 @kind object @name `interceptor`) @signature `Lokhttp3/OkHttpClient$Builder;.addNetworkInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19be04.  if v3 != 0 then goto L19be18;
  #L19be08.  v0:= new `java.lang.IllegalArgumentException`;
  #L19be0c.  v1:= "interceptor == null" @kind object;
  #L19be10.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19be16.  throw v0;
  #L19be18.  v0:= v2.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L19be1c.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19be22.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `authenticator`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Authenticator` v3 @kind object @name `authenticator`) @signature `Lokhttp3/OkHttpClient$Builder;.authenticator:(Lokhttp3/Authenticator;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19be34.  if v3 != 0 then goto L19be48;
  #L19be38.  v0:= new `java.lang.NullPointerException`;
  #L19be3c.  v1:= "authenticator == null" @kind object;
  #L19be40.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19be46.  throw v0;
  #L19be48.  v2.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` := v3 @kind object;
  #L19be4c.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient` `build`(`okhttp3.OkHttpClient$Builder` v1 @kind this) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19be60.  v0:= new `okhttp3.OkHttpClient`;
  #L19be64.  call `<init>`(v0, v1) @signature `Lokhttp3/OkHttpClient;.<init>:(Lokhttp3/OkHttpClient$Builder;)V` @kind direct;
  #L19be6a.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `cache`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `okhttp3.Cache` v2 @kind object @name `cache`) @signature `Lokhttp3/OkHttpClient$Builder;.cache:(Lokhttp3/Cache;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19be7c.  v1.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` := v2 @kind object;
  #L19be80.  v0:= 0I;
  #L19be82.  v1.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v0 @kind object;
  #L19be86.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `certificatePinner`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.CertificatePinner` v3 @kind object @name `certificatePinner`) @signature `Lokhttp3/OkHttpClient$Builder;.certificatePinner:(Lokhttp3/CertificatePinner;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19be98.  if v3 != 0 then goto L19beac;
  #L19be9c.  v0:= new `java.lang.NullPointerException`;
  #L19bea0.  v1:= "certificatePinner == null" @kind object;
  #L19bea4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19beaa.  throw v0;
  #L19beac.  v2.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` := v3 @kind object;
  #L19beb0.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `connectTimeout`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `long` v2 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `unit`) @signature `Lokhttp3/OkHttpClient$Builder;.connectTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bec4.  v0:= "timeout" @kind object;
  #L19bec8.  call temp:= `checkDuration`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L19bece.  v0:= temp;
  #L19bed0.  v1.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int` := v0;
  #L19bed4.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `connectionPool`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.ConnectionPool` v3 @kind object @name `connectionPool`) @signature `Lokhttp3/OkHttpClient$Builder;.connectionPool:(Lokhttp3/ConnectionPool;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bee8.  if v3 != 0 then goto L19befc;
  #L19beec.  v0:= new `java.lang.NullPointerException`;
  #L19bef0.  v1:= "connectionPool == null" @kind object;
  #L19bef4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19befa.  throw v0;
  #L19befc.  v2.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` := v3 @kind object;
  #L19bf00.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `connectionSpecs`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lokhttp3/OkHttpClient$Builder;.connectionSpecs:(Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bf14.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19bf1a.  v0:= temp @kind object;
  #L19bf1c.  v1.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L19bf20.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `cookieJar`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.CookieJar` v3 @kind object @name `cookieJar`) @signature `Lokhttp3/OkHttpClient$Builder;.cookieJar:(Lokhttp3/CookieJar;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bf34.  if v3 != 0 then goto L19bf48;
  #L19bf38.  v0:= new `java.lang.NullPointerException`;
  #L19bf3c.  v1:= "cookieJar == null" @kind object;
  #L19bf40.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bf46.  throw v0;
  #L19bf48.  v2.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` := v3 @kind object;
  #L19bf4c.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `dispatcher`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Dispatcher` v3 @kind object @name `dispatcher`) @signature `Lokhttp3/OkHttpClient$Builder;.dispatcher:(Lokhttp3/Dispatcher;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bf60.  if v3 != 0 then goto L19bf74;
  #L19bf64.  v0:= new `java.lang.IllegalArgumentException`;
  #L19bf68.  v1:= "dispatcher == null" @kind object;
  #L19bf6c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bf72.  throw v0;
  #L19bf74.  v2.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` := v3 @kind object;
  #L19bf78.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `dns`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Dns` v3 @kind object @name `dns`) @signature `Lokhttp3/OkHttpClient$Builder;.dns:(Lokhttp3/Dns;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bf8c.  if v3 != 0 then goto L19bfa0;
  #L19bf90.  v0:= new `java.lang.NullPointerException`;
  #L19bf94.  v1:= "dns == null" @kind object;
  #L19bf98.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bf9e.  throw v0;
  #L19bfa0.  v2.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` := v3 @kind object;
  #L19bfa4.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `eventListener`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.EventListener` v3 @kind object @name `eventListener`) @signature `Lokhttp3/OkHttpClient$Builder;.eventListener:(Lokhttp3/EventListener;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bfb8.  if v3 != 0 then goto L19bfcc;
  #L19bfbc.  v0:= new `java.lang.NullPointerException`;
  #L19bfc0.  v1:= "eventListener == null" @kind object;
  #L19bfc4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bfca.  throw v0;
  #L19bfcc.  call temp:= `factory`(v3) @signature `Lokhttp3/EventListener;.factory:(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;` @kind static;
  #L19bfd2.  v0:= temp @kind object;
  #L19bfd4.  v2.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v0 @kind object;
  #L19bfd8.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `eventListenerFactory`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.EventListener$Factory` v3 @kind object @name `eventListenerFactory`) @signature `Lokhttp3/OkHttpClient$Builder;.eventListenerFactory:(Lokhttp3/EventListener$Factory;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bfec.  if v3 != 0 then goto L19c000;
  #L19bff0.  v0:= new `java.lang.NullPointerException`;
  #L19bff4.  v1:= "eventListenerFactory == null" @kind object;
  #L19bff8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bffe.  throw v0;
  #L19c000.  v2.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v3 @kind object;
  #L19c004.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `followRedirects`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `boolean` v1 @name `followRedirects`) @signature `Lokhttp3/OkHttpClient$Builder;.followRedirects:(Z)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19c018.  v0.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` := v1 @kind boolean;
  #L19c01c.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `followSslRedirects`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `boolean` v1 @name `followProtocolRedirects`) @signature `Lokhttp3/OkHttpClient$Builder;.followSslRedirects:(Z)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19c030.  v0.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` := v1 @kind boolean;
  #L19c034.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `hostnameVerifier`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `javax.net.ssl.HostnameVerifier` v3 @kind object @name `hostnameVerifier`) @signature `Lokhttp3/OkHttpClient$Builder;.hostnameVerifier:(Ljavax/net/ssl/HostnameVerifier;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c048.  if v3 != 0 then goto L19c05c;
  #L19c04c.  v0:= new `java.lang.NullPointerException`;
  #L19c050.  v1:= "hostnameVerifier == null" @kind object;
  #L19c054.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c05a.  throw v0;
  #L19c05c.  v2.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v3 @kind object;
  #L19c060.  return v2 @kind object;
}
procedure `java.util.List` `interceptors`(`okhttp3.OkHttpClient$Builder` v1 @kind this) @signature `Lokhttp3/OkHttpClient$Builder;.interceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c074.  v0:= v1.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L19c078.  return v0 @kind object;
}
procedure `java.util.List` `networkInterceptors`(`okhttp3.OkHttpClient$Builder` v1 @kind this) @signature `Lokhttp3/OkHttpClient$Builder;.networkInterceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c08c.  v0:= v1.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L19c090.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `pingInterval`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `long` v2 @name `interval`, `java.util.concurrent.TimeUnit` v4 @kind object @name `unit`) @signature `Lokhttp3/OkHttpClient$Builder;.pingInterval:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c0a4.  v0:= "interval" @kind object;
  #L19c0a8.  call temp:= `checkDuration`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L19c0ae.  v0:= temp;
  #L19c0b0.  v1.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int` := v0;
  #L19c0b4.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `protocols`(`okhttp3.OkHttpClient$Builder` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lokhttp3/OkHttpClient$Builder;.protocols:(Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c0c8.  v0:= new `java.util.ArrayList`;
  #L19c0cc.  call `<init>`(v0, v5) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L19c0d2.  v1:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L19c0d6.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L19c0dc.  v1:= temp;
  #L19c0de.  if v1 != 0 then goto L19c114;
  #L19c0e2.  v1:= new `java.lang.IllegalArgumentException`;
  #L19c0e6.  v2:= new `java.lang.StringBuilder`;
  #L19c0ea.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c0f0.  v3:= "protocols doesn't contain http/1.1: " @kind object;
  #L19c0f4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c0fa.  v2:= temp @kind object;
  #L19c0fc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c102.  v2:= temp @kind object;
  #L19c104.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c10a.  v2:= temp @kind object;
  #L19c10c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c112.  throw v1;
  #L19c114.  v1:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L19c118.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L19c11e.  v1:= temp;
  #L19c120.  if v1 == 0 then goto L19c156;
  #L19c124.  v1:= new `java.lang.IllegalArgumentException`;
  #L19c128.  v2:= new `java.lang.StringBuilder`;
  #L19c12c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c132.  v3:= "protocols must not contain http/1.0: " @kind object;
  #L19c136.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c13c.  v2:= temp @kind object;
  #L19c13e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c144.  v2:= temp @kind object;
  #L19c146.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c14c.  v2:= temp @kind object;
  #L19c14e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c154.  throw v1;
  #L19c156.  v1:= 0I;
  #L19c158.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L19c15e.  v1:= temp;
  #L19c160.  if v1 == 0 then goto L19c174;
  #L19c164.  v1:= new `java.lang.IllegalArgumentException`;
  #L19c168.  v2:= "protocols must not contain null" @kind object;
  #L19c16c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c172.  throw v1;
  #L19c174.  v1:= `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` @kind object;
  #L19c178.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L19c17e.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19c184.  v1:= temp @kind object;
  #L19c186.  v4.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` := v1 @kind object;
  #L19c18a.  return v4 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `proxy`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `java.net.Proxy` v1 @kind object @name `proxy`) @signature `Lokhttp3/OkHttpClient$Builder;.proxy:(Ljava/net/Proxy;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19c19c.  v0.`okhttp3.OkHttpClient$Builder.proxy` @type ^`java.net.Proxy` := v1 @kind object;
  #L19c1a0.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `proxyAuthenticator`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `okhttp3.Authenticator` v3 @kind object @name `proxyAuthenticator`) @signature `Lokhttp3/OkHttpClient$Builder;.proxyAuthenticator:(Lokhttp3/Authenticator;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c1b4.  if v3 != 0 then goto L19c1c8;
  #L19c1b8.  v0:= new `java.lang.NullPointerException`;
  #L19c1bc.  v1:= "proxyAuthenticator == null" @kind object;
  #L19c1c0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c1c6.  throw v0;
  #L19c1c8.  v2.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v3 @kind object;
  #L19c1cc.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `proxySelector`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `java.net.ProxySelector` v1 @kind object @name `proxySelector`) @signature `Lokhttp3/OkHttpClient$Builder;.proxySelector:(Ljava/net/ProxySelector;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19c1e0.  v0.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` := v1 @kind object;
  #L19c1e4.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `readTimeout`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `long` v2 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `unit`) @signature `Lokhttp3/OkHttpClient$Builder;.readTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c1f8.  v0:= "timeout" @kind object;
  #L19c1fc.  call temp:= `checkDuration`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L19c202.  v0:= temp;
  #L19c204.  v1.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int` := v0;
  #L19c208.  return v1 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `retryOnConnectionFailure`(`okhttp3.OkHttpClient$Builder` v0 @kind this, `boolean` v1 @name `retryOnConnectionFailure`) @signature `Lokhttp3/OkHttpClient$Builder;.retryOnConnectionFailure:(Z)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19c21c.  v0.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` := v1 @kind boolean;
  #L19c220.  return v0 @kind object;
}
procedure `void` `setInternalCache`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `okhttp3.internal.cache.InternalCache` v2 @kind object @name `internalCache`) @signature `Lokhttp3/OkHttpClient$Builder;.setInternalCache:(Lokhttp3/internal/cache/InternalCache;)V` @AccessFlag  {
    temp;
    v0;

  #L19c234.  v1.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v2 @kind object;
  #L19c238.  v0:= 0I;
  #L19c23a.  v1.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` := v0 @kind object;
  #L19c23e.  return @kind void;
}
procedure `okhttp3.OkHttpClient$Builder` `socketFactory`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `javax.net.SocketFactory` v3 @kind object @name `socketFactory`) @signature `Lokhttp3/OkHttpClient$Builder;.socketFactory:(Ljavax/net/SocketFactory;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c250.  if v3 != 0 then goto L19c264;
  #L19c254.  v0:= new `java.lang.NullPointerException`;
  #L19c258.  v1:= "socketFactory == null" @kind object;
  #L19c25c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c262.  throw v0;
  #L19c264.  v2.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` := v3 @kind object;
  #L19c268.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `sslSocketFactory`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `javax.net.ssl.SSLSocketFactory` v3 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/OkHttpClient$Builder;.sslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c27c.  if v3 != 0 then goto L19c290;
  #L19c280.  v0:= new `java.lang.NullPointerException`;
  #L19c284.  v1:= "sslSocketFactory == null" @kind object;
  #L19c288.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c28e.  throw v0;
  #L19c290.  v2.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L19c294.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L19c29a.  v0:= temp @kind object;
  #L19c29c.  call temp:= `buildCertificateChainCleaner`(v0, v3) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L19c2a2.  v0:= temp @kind object;
  #L19c2a4.  v2.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v0 @kind object;
  #L19c2a8.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `sslSocketFactory`(`okhttp3.OkHttpClient$Builder` v2 @kind this, `javax.net.ssl.SSLSocketFactory` v3 @kind object @name `sslSocketFactory`, `javax.net.ssl.X509TrustManager` v4 @kind object @name `trustManager`) @signature `Lokhttp3/OkHttpClient$Builder;.sslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/X509TrustManager;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c2bc.  if v3 != 0 then goto L19c2d0;
  #L19c2c0.  v0:= new `java.lang.NullPointerException`;
  #L19c2c4.  v1:= "sslSocketFactory == null" @kind object;
  #L19c2c8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c2ce.  throw v0;
  #L19c2d0.  if v4 != 0 then goto L19c2e4;
  #L19c2d4.  v0:= new `java.lang.NullPointerException`;
  #L19c2d8.  v1:= "trustManager == null" @kind object;
  #L19c2dc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c2e2.  throw v0;
  #L19c2e4.  v2.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L19c2e8.  call temp:= `get`(v4) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.get:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind static;
  #L19c2ee.  v0:= temp @kind object;
  #L19c2f0.  v2.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v0 @kind object;
  #L19c2f4.  return v2 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `writeTimeout`(`okhttp3.OkHttpClient$Builder` v1 @kind this, `long` v2 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `unit`) @signature `Lokhttp3/OkHttpClient$Builder;.writeTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c308.  v0:= "timeout" @kind object;
  #L19c30c.  call temp:= `checkDuration`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L19c312.  v0:= temp;
  #L19c314.  v1.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int` := v0;
  #L19c318.  return v1 @kind object;
}

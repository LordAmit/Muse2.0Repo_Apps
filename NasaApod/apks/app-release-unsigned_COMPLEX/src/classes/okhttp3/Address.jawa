record `okhttp3.Address` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.CertificatePinner` `okhttp3.Address.certificatePinner` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.Address.dns` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.Address.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Address.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.Address.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.Address.proxySelector` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.Address.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.Address.sslSocketFactory` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Address.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Address` v2 @kind this, `java.lang.String` v3 @kind object @name `uriHost`, `int` v4 @name `uriPort`, `okhttp3.Dns` v5 @kind object @name `dns`, `javax.net.SocketFactory` v6 @kind object @name `socketFactory`, `javax.net.ssl.SSLSocketFactory` v7 @kind object @name `sslSocketFactory`, `javax.net.ssl.HostnameVerifier` v8 @kind object @name `hostnameVerifier`, `okhttp3.CertificatePinner` v9 @kind object @name `certificatePinner`, `okhttp3.Authenticator` v10 @kind object @name `proxyAuthenticator`, `java.net.Proxy` v11 @kind object @name `proxy`, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object @name `proxySelector`) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1925c0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1925c6.  v1:= new `okhttp3.HttpUrl$Builder`;
  #L1925ca.  call `<init>`(v1) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L1925d0.  if v7 == 0 then goto L192610;
  #L1925d4.  v0:= "https" @kind object;
  #L1925d8.  call temp:= `scheme`(v1, v0) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1925de.  v0:= temp @kind object;
  #L1925e0.  call temp:= `host`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1925e6.  v0:= temp @kind object;
  #L1925e8.  call temp:= `port`(v0, v4) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1925ee.  v0:= temp @kind object;
  #L1925f0.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1925f6.  v0:= temp @kind object;
  #L1925f8.  v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L1925fc.  if v5 != 0 then goto L192616;
  #L192600.  v0:= new `java.lang.NullPointerException`;
  #L192604.  v1:= "dns == null" @kind object;
  #L192608.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19260e.  throw v0;
  #L192610.  v0:= "http" @kind object;
  #L192614.  goto L1925d8;
  #L192616.  v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` := v5 @kind object;
  #L19261a.  if v6 != 0 then goto L19262e;
  #L19261e.  v0:= new `java.lang.NullPointerException`;
  #L192622.  v1:= "socketFactory == null" @kind object;
  #L192626.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19262c.  throw v0;
  #L19262e.  v2.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L192632.  if v10 != 0 then goto L192646;
  #L192636.  v0:= new `java.lang.NullPointerException`;
  #L19263a.  v1:= "proxyAuthenticator == null" @kind object;
  #L19263e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L192644.  throw v0;
  #L192646.  v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v10 @kind object;
  #L19264a.  if v12 != 0 then goto L19265e;
  #L19264e.  v0:= new `java.lang.NullPointerException`;
  #L192652.  v1:= "protocols == null" @kind object;
  #L192656.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19265c.  throw v0;
  #L19265e.  call temp:= `immutableList`(v12) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L192664.  v0:= temp @kind object;
  #L192666.  v2.`okhttp3.Address.protocols` @type ^`java.util.List` := v0 @kind object;
  #L19266a.  if v13 != 0 then goto L19267e;
  #L19266e.  v0:= new `java.lang.NullPointerException`;
  #L192672.  v1:= "connectionSpecs == null" @kind object;
  #L192676.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19267c.  throw v0;
  #L19267e.  call temp:= `immutableList`(v13) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L192684.  v0:= temp @kind object;
  #L192686.  v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L19268a.  if v14 != 0 then goto L19269e;
  #L19268e.  v0:= new `java.lang.NullPointerException`;
  #L192692.  v1:= "proxySelector == null" @kind object;
  #L192696.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19269c.  throw v0;
  #L19269e.  v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L1926a2.  v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` := v11 @kind object;
  #L1926a6.  v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L1926aa.  v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L1926ae.  v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` := v9 @kind object;
  #L1926b2.  return @kind void;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1926c4.  v0:= v1.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L1926c8.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1926dc.  v0:= v1.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1926e0.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1926f4.  v0:= v1.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L1926f8.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Address` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19270c.  v0:= instanceof @variable v3 @type ^`okhttp3.Address` @kind boolean;
  #L192710.  if v0 == 0 then goto L192742;
  #L192714.  v1:= v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L192718.  v0:= v3 @kind object;
  #L19271a.  v0:= (`okhttp3.Address`) v0 @kind object;
  #L19271e.  v0:= v0.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L192722.  call temp:= `equals`(v1, v0) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L192728.  v0:= temp;
  #L19272a.  if v0 == 0 then goto L192742;
  #L19272e.  v3:= (`okhttp3.Address`) v3 @kind object;
  #L192732.  call temp:= `equalsNonHost`(v2, v3) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @kind virtual;
  #L192738.  v0:= temp;
  #L19273a.  if v0 == 0 then goto L192742;
  #L19273e.  v0:= 1I;
  #L192740.  return v0;
  #L192742.  v0:= 0I;
  #L192744.  goto L192740;
}
procedure `boolean` `equalsNonHost`(`okhttp3.Address` v2 @kind this, `okhttp3.Address` v3 @kind object @name `that`) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L192758.  v0:= v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L19275c.  v1:= v3.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L192760.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L192766.  v0:= temp;
  #L192768.  if v0 == 0 then goto L192834;
  #L19276c.  v0:= v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L192770.  v1:= v3.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L192774.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19277a.  v0:= temp;
  #L19277c.  if v0 == 0 then goto L192834;
  #L192780.  v0:= v2.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L192784.  v1:= v3.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L192788.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L19278e.  v0:= temp;
  #L192790.  if v0 == 0 then goto L192834;
  #L192794.  v0:= v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L192798.  v1:= v3.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L19279c.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L1927a2.  v0:= temp;
  #L1927a4.  if v0 == 0 then goto L192834;
  #L1927a8.  v0:= v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L1927ac.  v1:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L1927b0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1927b6.  v0:= temp;
  #L1927b8.  if v0 == 0 then goto L192834;
  #L1927bc.  v0:= v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1927c0.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1927c4.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1927ca.  v0:= temp;
  #L1927cc.  if v0 == 0 then goto L192834;
  #L1927d0.  v0:= v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1927d4.  v1:= v3.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1927d8.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1927de.  v0:= temp;
  #L1927e0.  if v0 == 0 then goto L192834;
  #L1927e4.  v0:= v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1927e8.  v1:= v3.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1927ec.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1927f2.  v0:= temp;
  #L1927f4.  if v0 == 0 then goto L192834;
  #L1927f8.  v0:= v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L1927fc.  v1:= v3.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L192800.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L192806.  v0:= temp;
  #L192808.  if v0 == 0 then goto L192834;
  #L19280c.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L192812.  v0:= temp @kind object;
  #L192814.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19281a.  v0:= temp;
  #L19281c.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L192822.  v1:= temp @kind object;
  #L192824.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19282a.  v1:= temp;
  #L19282c.  if v0 != v1 then goto L192834;
  #L192830.  v0:= 1I;
  #L192832.  return v0;
  #L192834.  v0:= 0I;
  #L192836.  goto L192832;
}
procedure `int` `hashCode`(`okhttp3.Address` v4 @kind this) @signature `Lokhttp3/Address;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L192848.  v2:= 0I;
  #L19284a.  v0:= 17I;
  #L19284e.  v1:= v4.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L192852.  call temp:= `hashCode`(v1) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @kind virtual;
  #L192858.  v1:= temp;
  #L19285a.  v0:= v1 + 527;
  #L19285e.  v1:= v0 * 31;
  #L192862.  v3:= v4.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L192866.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L19286c.  v3:= temp;
  #L19286e.  v0:= v1 + v3 @kind int;
  #L192872.  v1:= v0 * 31;
  #L192876.  v3:= v4.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L19287a.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L192880.  v3:= temp;
  #L192882.  v0:= v1 + v3 @kind int;
  #L192886.  v1:= v0 * 31;
  #L19288a.  v3:= v4.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L19288e.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L192894.  v3:= temp;
  #L192896.  v0:= v1 + v3 @kind int;
  #L19289a.  v1:= v0 * 31;
  #L19289e.  v3:= v4.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1928a2.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L1928a8.  v3:= temp;
  #L1928aa.  v0:= v1 + v3 @kind int;
  #L1928ae.  v1:= v0 * 31;
  #L1928b2.  v3:= v4.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L1928b6.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1928bc.  v3:= temp;
  #L1928be.  v0:= v1 + v3 @kind int;
  #L1928c2.  v3:= v0 * 31;
  #L1928c6.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1928ca.  if v1 == 0 then goto L192934;
  #L1928ce.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1928d2.  call temp:= `hashCode`(v1) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L1928d8.  v1:= temp;
  #L1928da.  v0:= v3 + v1 @kind int;
  #L1928de.  v3:= v0 * 31;
  #L1928e2.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1928e6.  if v1 == 0 then goto L192938;
  #L1928ea.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1928ee.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1928f4.  v1:= temp;
  #L1928f6.  v0:= v3 + v1 @kind int;
  #L1928fa.  v3:= v0 * 31;
  #L1928fe.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L192902.  if v1 == 0 then goto L19293c;
  #L192906.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L19290a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L192910.  v1:= temp;
  #L192912.  v0:= v3 + v1 @kind int;
  #L192916.  v1:= v0 * 31;
  #L19291a.  v3:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L19291e.  if v3 == 0 then goto L19292e;
  #L192922.  v2:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L192926.  call temp:= `hashCode`(v2) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @kind virtual;
  #L19292c.  v2:= temp;
  #L19292e.  v0:= v1 + v2 @kind int;
  #L192932.  return v0;
  #L192934.  v1:= v2;
  #L192936.  goto L1928da;
  #L192938.  v1:= v2;
  #L19293a.  goto L1928f6;
  #L19293c.  v1:= v2;
  #L19293e.  goto L192912;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192950.  v0:= v1.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L192954.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192968.  v0:= v1.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L19296c.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192980.  v0:= v1.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L192984.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192998.  v0:= v1.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L19299c.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1929b0.  v0:= v1.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L1929b4.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1929c8.  v0:= v1.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L1929cc.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1929e0.  v0:= v1.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1929e4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Address` v3 @kind this) @signature `Lokhttp3/Address;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1929f8.  v1:= new `java.lang.StringBuilder`;
  #L1929fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L192a02.  v2:= "Address{" @kind object;
  #L192a06.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a0c.  v1:= temp @kind object;
  #L192a0e.  v2:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L192a12.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L192a18.  v2:= temp @kind object;
  #L192a1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a20.  v1:= temp @kind object;
  #L192a22.  v2:= ":" @kind object;
  #L192a26.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a2c.  v1:= temp @kind object;
  #L192a2e.  v2:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L192a32.  call temp:= `port`(v2) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L192a38.  v2:= temp;
  #L192a3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a40.  v0:= temp @kind object;
  #L192a42.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L192a46.  if v1 == 0 then goto L192a74;
  #L192a4a.  v1:= ", proxy=" @kind object;
  #L192a4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a54.  v1:= temp @kind object;
  #L192a56.  v2:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L192a5a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a60.  v1:= "}" @kind object;
  #L192a64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a6a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L192a70.  v1:= temp @kind object;
  #L192a72.  return v1 @kind object;
  #L192a74.  v1:= ", proxySelector=" @kind object;
  #L192a78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a7e.  v1:= temp @kind object;
  #L192a80.  v2:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L192a84.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L192a8a.  goto L192a60;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L192a9c.  v0:= v1.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L192aa0.  return v0 @kind object;
}

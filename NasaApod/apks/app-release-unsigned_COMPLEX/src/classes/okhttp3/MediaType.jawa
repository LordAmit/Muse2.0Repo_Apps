record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19b5f0.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L19b5f4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19b5fa.  v0:= temp @kind object;
  #L19b5fc.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19b600.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L19b604.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19b60a.  v0:= temp @kind object;
  #L19b60c.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19b610.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object @name `mediaType`, `java.lang.String` v2 @kind object @name `type`, `java.lang.String` v3 @kind object @name `subtype`, `java.lang.String` v4 @kind object @name `charset`) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19b624.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b62a.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L19b62e.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L19b632.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L19b636.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L19b63a.  return @kind void;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v14 @kind object @name `string`) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L19b64c.  v9:= 0I;
  #L19b64e.  v13:= 2I;
  #L19b650.  v12:= 1I;
  #L19b652.  v10:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L19b656.  call temp:= `matcher`(v10, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19b65c.  v8:= temp @kind object;
  #L19b65e.  call temp:= `lookingAt`(v8) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L19b664.  v10:= temp;
  #L19b666.  if v10 != 0 then goto L19b66c;
  #L19b66a.  return v9 @kind object;
  #L19b66c.  call temp:= `group`(v8, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b672.  v10:= temp @kind object;
  #L19b674.  v11:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19b678.  call temp:= `toLowerCase`(v10, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19b67e.  v7:= temp @kind object;
  #L19b680.  call temp:= `group`(v8, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b686.  v10:= temp @kind object;
  #L19b688.  v11:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19b68c.  call temp:= `toLowerCase`(v10, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19b692.  v5:= temp @kind object;
  #L19b694.  v0:= 0I;
  #L19b696.  v10:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L19b69a.  call temp:= `matcher`(v10, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19b6a0.  v3:= temp @kind object;
  #L19b6a2.  call temp:= `end`(v8) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L19b6a8.  v4:= temp;
  #L19b6aa.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b6b0.  v10:= temp;
  #L19b6b2.  if v4 >= v10 then goto L19b766;
  #L19b6b6.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b6bc.  v10:= temp;
  #L19b6be.  call temp:= `region`(v3, v4, v10) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L19b6c4.  call temp:= `lookingAt`(v3) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L19b6ca.  v10:= temp;
  #L19b6cc.  if v10 == 0 then goto L19b66a;
  #L19b6d0.  call temp:= `group`(v3, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b6d6.  v2:= temp @kind object;
  #L19b6d8.  if v2 == 0 then goto L19b6ec;
  #L19b6dc.  v10:= "charset" @kind object;
  #L19b6e0.  call temp:= `equalsIgnoreCase`(v2, v10) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19b6e6.  v10:= temp;
  #L19b6e8.  if v10 != 0 then goto L19b6f6;
  #L19b6ec.  call temp:= `end`(v3) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L19b6f2.  v4:= temp;
  #L19b6f4.  goto L19b6aa;
  #L19b6f6.  call temp:= `group`(v3, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b6fc.  v6:= temp @kind object;
  #L19b6fe.  if v6 == 0 then goto L19b75a;
  #L19b702.  v10:= "'" @kind object;
  #L19b706.  call temp:= `startsWith`(v6, v10) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19b70c.  v10:= temp;
  #L19b70e.  if v10 == 0 then goto L19b756;
  #L19b712.  v10:= "'" @kind object;
  #L19b716.  call temp:= `endsWith`(v6, v10) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19b71c.  v10:= temp;
  #L19b71e.  if v10 == 0 then goto L19b756;
  #L19b722.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b728.  v10:= temp;
  #L19b72a.  if v10 <= v13 then goto L19b756;
  #L19b72e.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b734.  v10:= temp;
  #L19b736.  v10:= v10 + -1;
  #L19b73a.  call temp:= `substring`(v6, v12, v10) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19b740.  v1:= temp @kind object;
  #L19b742.  if v0 == 0 then goto L19b752;
  #L19b746.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19b74c.  v10:= temp;
  #L19b74e.  if v10 == 0 then goto L19b66a;
  #L19b752.  v0:= v1 @kind object;
  #L19b754.  goto L19b6ec;
  #L19b756.  v1:= v6 @kind object;
  #L19b758.  goto L19b742;
  #L19b75a.  v10:= 3I;
  #L19b75c.  call temp:= `group`(v3, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19b762.  v1:= temp @kind object;
  #L19b764.  goto L19b742;
  #L19b766.  v9:= new `okhttp3.MediaType`;
  #L19b76a.  call `<init>`(v9, v14, v7, v5, v0) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L19b770.  goto L19b66a;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b784.  v0:= 0I;
  #L19b786.  call temp:= `charset`(v1, v0) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L19b78c.  v0:= temp @kind object;
  #L19b78e.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v2 @kind this, `java.nio.charset.Charset` v3 @kind object @name `defaultValue`) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L19b7a0.  v1:= v2.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L19b7a4.  if v1 == 0 then goto L19b7b4;
  #L19b7a8.  v1:= v2.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L19b7ac.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #Try_end0.  
  #L19b7b2.  v3:= temp @kind object;
  #L19b7b4.  return v3 @kind object;
  #L19b7b6.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L19b7b8.  goto L19b7b4;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L19b7b6;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b7dc.  v0:= instanceof @variable v3 @type ^`okhttp3.MediaType` @kind boolean;
  #L19b7e0.  if v0 == 0 then goto L19b800;
  #L19b7e4.  v3:= (`okhttp3.MediaType`) v3 @kind object;
  #L19b7e8.  v0:= v3.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19b7ec.  v1:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19b7f0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b7f6.  v0:= temp;
  #L19b7f8.  if v0 == 0 then goto L19b800;
  #L19b7fc.  v0:= 1I;
  #L19b7fe.  return v0;
  #L19b800.  v0:= 0I;
  #L19b802.  goto L19b7fe;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b814.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19b818.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19b81e.  v0:= temp;
  #L19b820.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b834.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L19b838.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b84c.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19b850.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19b864.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L19b868.  return v0 @kind object;
}

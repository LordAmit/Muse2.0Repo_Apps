record `okhttp3.Request$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.RequestBody` `okhttp3.Request$Builder.body` @AccessFlag ;
  `okhttp3.Headers$Builder` `okhttp3.Request$Builder.headers` @AccessFlag ;
  `java.lang.String` `okhttp3.Request$Builder.method` @AccessFlag ;
  `java.lang.Object` `okhttp3.Request$Builder.tag` @AccessFlag ;
  `okhttp3.HttpUrl` `okhttp3.Request$Builder.url` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19c528.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19c52e.  v0:= "GET" @kind object;
  #L19c532.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L19c536.  v0:= new `okhttp3.Headers$Builder`;
  #L19c53a.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L19c540.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19c544.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L19c558.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19c55e.  v0:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19c562.  v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L19c566.  v0:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19c56a.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L19c56e.  v0:= v2.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19c572.  v1.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19c576.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19c57a.  v1.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L19c57e.  v0:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19c582.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c588.  v0:= temp @kind object;
  #L19c58a.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19c58e.  return @kind void;
}
procedure `okhttp3.Request$Builder` `addHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c5a0.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19c5a4.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c5aa.  return v1 @kind object;
}
procedure `okhttp3.Request` `build`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c5bc.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19c5c0.  if v0 != 0 then goto L19c5d4;
  #L19c5c4.  v0:= new `java.lang.IllegalStateException`;
  #L19c5c8.  v1:= "url == null" @kind object;
  #L19c5cc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c5d2.  throw v0;
  #L19c5d4.  v0:= new `okhttp3.Request`;
  #L19c5d8.  call `<init>`(v0, v2) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @kind direct;
  #L19c5de.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `cacheControl`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.CacheControl` v3 @kind object @name `cacheControl`) @signature `Lokhttp3/Request$Builder;.cacheControl:(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c5f0.  call temp:= `toString`(v3) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c5f6.  v0:= temp @kind object;
  #L19c5f8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19c5fe.  v1:= temp;
  #L19c600.  if v1 == 0 then goto L19c612;
  #L19c604.  v1:= "Cache-Control" @kind object;
  #L19c608.  call temp:= `removeHeader`(v2, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c60e.  v1:= temp @kind object;
  #L19c610.  return v1 @kind object;
  #L19c612.  v1:= "Cache-Control" @kind object;
  #L19c616.  call temp:= `header`(v2, v1, v0) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c61c.  v1:= temp @kind object;
  #L19c61e.  goto L19c610;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.delete:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c630.  v0:= `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` @kind object;
  #L19c634.  call temp:= `delete`(v1, v0) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c63a.  v0:= temp @kind object;
  #L19c63c.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c650.  v0:= "DELETE" @kind object;
  #L19c654.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c65a.  v0:= temp @kind object;
  #L19c65c.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `get`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.get:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c670.  v0:= "GET" @kind object;
  #L19c674.  v1:= 0I;
  #L19c676.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c67c.  v0:= temp @kind object;
  #L19c67e.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `head`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.head:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c690.  v0:= "HEAD" @kind object;
  #L19c694.  v1:= 0I;
  #L19c696.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c69c.  v0:= temp @kind object;
  #L19c69e.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `header`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c6b0.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19c6b4.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c6ba.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `headers`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object @name `headers`) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c6cc.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c6d2.  v0:= temp @kind object;
  #L19c6d4.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19c6d8.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `method`(`okhttp3.Request$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `method`, `okhttp3.RequestBody` v5 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19c6ec.  if v4 != 0 then goto L19c700;
  #L19c6f0.  v0:= new `java.lang.NullPointerException`;
  #L19c6f4.  v1:= "method == null" @kind object;
  #L19c6f8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c6fe.  throw v0;
  #L19c700.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c706.  v0:= temp;
  #L19c708.  if v0 != 0 then goto L19c71c;
  #L19c70c.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c710.  v1:= "method.length() == 0" @kind object;
  #L19c714.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c71a.  throw v0;
  #L19c71c.  if v5 == 0 then goto L19c76a;
  #L19c720.  call temp:= `permitsRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L19c726.  v0:= temp;
  #L19c728.  if v0 != 0 then goto L19c76a;
  #L19c72c.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c730.  v1:= new `java.lang.StringBuilder`;
  #L19c734.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c73a.  v2:= "method " @kind object;
  #L19c73e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c744.  v1:= temp @kind object;
  #L19c746.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c74c.  v1:= temp @kind object;
  #L19c74e.  v2:= " must not have a request body." @kind object;
  #L19c752.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c758.  v1:= temp @kind object;
  #L19c75a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c760.  v1:= temp @kind object;
  #L19c762.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c768.  throw v0;
  #L19c76a.  if v5 != 0 then goto L19c7b8;
  #L19c76e.  call temp:= `requiresRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L19c774.  v0:= temp;
  #L19c776.  if v0 == 0 then goto L19c7b8;
  #L19c77a.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c77e.  v1:= new `java.lang.StringBuilder`;
  #L19c782.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c788.  v2:= "method " @kind object;
  #L19c78c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c792.  v1:= temp @kind object;
  #L19c794.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c79a.  v1:= temp @kind object;
  #L19c79c.  v2:= " must have a request body." @kind object;
  #L19c7a0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c7a6.  v1:= temp @kind object;
  #L19c7a8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c7ae.  v1:= temp @kind object;
  #L19c7b0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c7b6.  throw v0;
  #L19c7b8.  v3.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v4 @kind object;
  #L19c7bc.  v3.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v5 @kind object;
  #L19c7c0.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `patch`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.patch:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c7d4.  v0:= "PATCH" @kind object;
  #L19c7d8.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c7de.  v0:= temp @kind object;
  #L19c7e0.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `post`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c7f4.  v0:= "POST" @kind object;
  #L19c7f8.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c7fe.  v0:= temp @kind object;
  #L19c800.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `put`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.put:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c814.  v0:= "PUT" @kind object;
  #L19c818.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c81e.  v0:= temp @kind object;
  #L19c820.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `removeHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c834.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19c838.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19c83e.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v0 @kind this, `java.lang.Object` v1 @kind object @name `tag`) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19c850.  v0.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v1 @kind object;
  #L19c854.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19c868.  v7:= 4I;
  #L19c86a.  v5:= 3I;
  #L19c86c.  v1:= 1I;
  #L19c86e.  v2:= 0I;
  #L19c870.  if v9 != 0 then goto L19c884;
  #L19c874.  v0:= new `java.lang.NullPointerException`;
  #L19c878.  v1:= "url == null" @kind object;
  #L19c87c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c882.  throw v0;
  #L19c884.  v3:= "ws:" @kind object;
  #L19c888.  v0:= v9 @kind object;
  #L19c88a.  v4:= v2;
  #L19c88c.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19c892.  v0:= temp;
  #L19c894.  if v0 == 0 then goto L19c904;
  #L19c898.  v0:= new `java.lang.StringBuilder`;
  #L19c89c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c8a2.  v1:= "http:" @kind object;
  #L19c8a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c8ac.  v0:= temp @kind object;
  #L19c8ae.  call temp:= `substring`(v9, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19c8b4.  v1:= temp @kind object;
  #L19c8b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c8bc.  v0:= temp @kind object;
  #L19c8be.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c8c4.  v9:= temp @kind object;
  #L19c8c6.  call temp:= `parse`(v9) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19c8cc.  v6:= temp @kind object;
  #L19c8ce.  if v6 != 0 then goto L19c94a;
  #L19c8d2.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c8d6.  v1:= new `java.lang.StringBuilder`;
  #L19c8da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c8e0.  v2:= "unexpected url: " @kind object;
  #L19c8e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c8ea.  v1:= temp @kind object;
  #L19c8ec.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c8f2.  v1:= temp @kind object;
  #L19c8f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c8fa.  v1:= temp @kind object;
  #L19c8fc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c902.  throw v0;
  #L19c904.  v3:= "wss:" @kind object;
  #L19c908.  v0:= v9 @kind object;
  #L19c90a.  v4:= v2;
  #L19c90c.  v5:= v7;
  #L19c90e.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19c914.  v0:= temp;
  #L19c916.  if v0 == 0 then goto L19c8c6;
  #L19c91a.  v0:= new `java.lang.StringBuilder`;
  #L19c91e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c924.  v1:= "https:" @kind object;
  #L19c928.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c92e.  v0:= temp @kind object;
  #L19c930.  call temp:= `substring`(v9, v7) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19c936.  v1:= temp @kind object;
  #L19c938.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c93e.  v0:= temp @kind object;
  #L19c940.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c946.  v9:= temp @kind object;
  #L19c948.  goto L19c8c6;
  #L19c94a.  call temp:= `url`(v8, v6) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c950.  v0:= temp @kind object;
  #L19c952.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v4 @kind this, `java.net.URL` v5 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Ljava/net/URL;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c964.  if v5 != 0 then goto L19c978;
  #L19c968.  v1:= new `java.lang.NullPointerException`;
  #L19c96c.  v2:= "url == null" @kind object;
  #L19c970.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c976.  throw v1;
  #L19c978.  call temp:= `get`(v5) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @kind static;
  #L19c97e.  v0:= temp @kind object;
  #L19c980.  if v0 != 0 then goto L19c9b6;
  #L19c984.  v1:= new `java.lang.IllegalArgumentException`;
  #L19c988.  v2:= new `java.lang.StringBuilder`;
  #L19c98c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c992.  v3:= "unexpected url: " @kind object;
  #L19c996.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c99c.  v2:= temp @kind object;
  #L19c99e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c9a4.  v2:= temp @kind object;
  #L19c9a6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c9ac.  v2:= temp @kind object;
  #L19c9ae.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c9b4.  throw v1;
  #L19c9b6.  call temp:= `url`(v4, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19c9bc.  v1:= temp @kind object;
  #L19c9be.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c9d0.  if v3 != 0 then goto L19c9e4;
  #L19c9d4.  v0:= new `java.lang.NullPointerException`;
  #L19c9d8.  v1:= "url == null" @kind object;
  #L19c9dc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c9e2.  throw v0;
  #L19c9e4.  v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L19c9e8.  return v2 @kind object;
}

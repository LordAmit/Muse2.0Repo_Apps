record `okhttp3.ResponseBody` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `java.io.Reader` `okhttp3.ResponseBody.reader` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.ResponseBody` v0 @kind this) @signature `Lokhttp3/ResponseBody;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L19d674.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19d67a.  return @kind void;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.ResponseBody` v2 @kind this) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L19d68c.  call temp:= `contentType`(v2) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L19d692.  v0:= temp @kind object;
  #L19d694.  if v0 == 0 then goto L19d6a6;
  #L19d698.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19d69c.  call temp:= `charset`(v0, v1) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L19d6a2.  v1:= temp @kind object;
  #L19d6a4.  return v1 @kind object;
  #L19d6a6.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19d6aa.  goto L19d6a4;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v3 @kind object @name `contentType`, `long` v4 @name `contentLength`, `okio.BufferedSource` v6 @kind object @name `content`) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19d6bc.  if v6 != 0 then goto L19d6d0;
  #L19d6c0.  v0:= new `java.lang.NullPointerException`;
  #L19d6c4.  v1:= "source == null" @kind object;
  #L19d6c8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d6ce.  throw v0;
  #L19d6d0.  v0:= new `okhttp3.ResponseBody$1`;
  #L19d6d4.  call `<init>`(v0, v3, v4, v6) @signature `Lokhttp3/ResponseBody$1;.<init>:(Lokhttp3/MediaType;JLokio/BufferedSource;)V` @kind direct;
  #L19d6da.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v4 @kind object @name `contentType`, `java.lang.String` v5 @kind object @name `content`) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19d6ec.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19d6f0.  if v4 == 0 then goto L19d732;
  #L19d6f4.  call temp:= `charset`(v4) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L19d6fa.  v1:= temp @kind object;
  #L19d6fc.  if v1 != 0 then goto L19d732;
  #L19d700.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19d704.  v2:= new `java.lang.StringBuilder`;
  #L19d708.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d70e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d714.  v2:= temp @kind object;
  #L19d716.  v3:= "; charset=utf-8" @kind object;
  #L19d71a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d720.  v2:= temp @kind object;
  #L19d722.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d728.  v2:= temp @kind object;
  #L19d72a.  call temp:= `parse`(v2) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L19d730.  v4:= temp @kind object;
  #L19d732.  v2:= new `okio.Buffer`;
  #L19d736.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19d73c.  call temp:= `writeString`(v2, v5, v1) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L19d742.  v0:= temp @kind object;
  #L19d744.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L19d74a.  v2:= temp @kind wide;
  #L19d74c.  call temp:= `create`(v4, v2, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L19d752.  v2:= temp @kind object;
  #L19d754.  return v2 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v4 @kind object @name `contentType`, `byte`[] v5 @kind object @name `content`) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19d768.  v1:= new `okio.Buffer`;
  #L19d76c.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19d772.  call temp:= `write`(v1, v5) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L19d778.  v0:= temp @kind object;
  #L19d77a.  v1:= length @variable v5;
  #L19d77c.  v2:= (`long`) v1 @kind i2l;
  #L19d77e.  call temp:= `create`(v4, v2, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L19d784.  v1:= temp @kind object;
  #L19d786.  return v1 @kind object;
}
procedure `java.io.InputStream` `byteStream`(`okhttp3.ResponseBody` v1 @kind this) @signature `Lokhttp3/ResponseBody;.byteStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19d798.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L19d79e.  v0:= temp @kind object;
  #L19d7a0.  call temp:= `inputStream`(v0) @signature `Lokio/BufferedSource;.inputStream:()Ljava/io/InputStream;` @kind interface;
  #L19d7a6.  v0:= temp @kind object;
  #L19d7a8.  return v0 @kind object;
}
procedure `byte`[] `bytes`(`okhttp3.ResponseBody` v7 @kind this) @signature `Lokhttp3/ResponseBody;.bytes:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19d7bc.  call temp:= `contentLength`(v7) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L19d7c2.  v2:= temp @kind wide;
  #L19d7c4.  v4:= 2147483647L;
  #L19d7ca.  v4:= lcmp(v2, v4);
  #L19d7ce.  if v4 <= 0 then goto L19d804;
  #L19d7d2.  v4:= new `java.io.IOException`;
  #L19d7d6.  v5:= new `java.lang.StringBuilder`;
  #L19d7da.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d7e0.  v6:= "Cannot buffer entire body for content length: " @kind object;
  #L19d7e4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d7ea.  v5:= temp @kind object;
  #L19d7ec.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d7f2.  v5:= temp @kind object;
  #L19d7f4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d7fa.  v5:= temp @kind object;
  #L19d7fc.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d802.  throw v4;
  #L19d804.  call temp:= `source`(v7) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L19d80a.  v1:= temp @kind object;
  #Try_start0.  
  #L19d80c.  call temp:= `readByteArray`(v1) @signature `Lokio/BufferedSource;.readByteArray:()[B` @kind interface;
  #Try_end0.  
  #L19d812.  v0:= temp @kind object;
  #L19d814.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19d81a.  v4:= -1L;
  #L19d81e.  v4:= lcmp(v2, v4);
  #L19d822.  if v4 == 0 then goto L19d890;
  #L19d826.  v4:= length @variable v0;
  #L19d828.  v4:= (`long`) v4 @kind i2l;
  #L19d82a.  v4:= lcmp(v2, v4);
  #L19d82e.  if v4 == 0 then goto L19d890;
  #L19d832.  v4:= new `java.io.IOException`;
  #L19d836.  v5:= new `java.lang.StringBuilder`;
  #L19d83a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d840.  v6:= "Content-Length (" @kind object;
  #L19d844.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d84a.  v5:= temp @kind object;
  #L19d84c.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d852.  v5:= temp @kind object;
  #L19d854.  v6:= ") and stream length (" @kind object;
  #L19d858.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d85e.  v5:= temp @kind object;
  #L19d860.  v6:= length @variable v0;
  #L19d862.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d868.  v5:= temp @kind object;
  #L19d86a.  v6:= ") disagree" @kind object;
  #L19d86e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d874.  v5:= temp @kind object;
  #L19d876.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d87c.  v5:= temp @kind object;
  #L19d87e.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d884.  throw v4;
  #L19d886.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19d888.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19d88e.  throw v4;
  #L19d890.  return v0 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19d886;
}
procedure `java.io.Reader` `charStream`(`okhttp3.ResponseBody` v3 @kind this) @signature `Lokhttp3/ResponseBody;.charStream:()Ljava/io/Reader;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19d8b0.  v0:= v3.`okhttp3.ResponseBody.reader` @type ^`java.io.Reader` @kind object;
  #L19d8b4.  if v0 == 0 then goto L19d8ba;
  #L19d8b8.  return v0 @kind object;
  #L19d8ba.  v0:= new `okhttp3.ResponseBody$BomAwareReader`;
  #L19d8be.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L19d8c4.  v1:= temp @kind object;
  #L19d8c6.  call temp:= `charset`(v3) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L19d8cc.  v2:= temp @kind object;
  #L19d8ce.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/ResponseBody$BomAwareReader;.<init>:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)V` @kind direct;
  #L19d8d4.  v3.`okhttp3.ResponseBody.reader` @type ^`java.io.Reader` := v0 @kind object;
  #L19d8d8.  goto L19d8b8;
}
procedure `void` `close`(`okhttp3.ResponseBody` v1 @kind this) @signature `Lokhttp3/ResponseBody;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d8ec.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L19d8f2.  v0:= temp @kind object;
  #L19d8f4.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19d8fa.  return @kind void;
}
procedure `long` `contentLength`() @signature `Lokhttp3/ResponseBody;.contentLength:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.MediaType` `contentType`() @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.BufferedSource` `source`() @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `string`(`okhttp3.ResponseBody` v3 @kind this) @signature `Lokhttp3/ResponseBody;.string:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19d90c.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L19d912.  v1:= temp @kind object;
  #Try_start0.  
  #L19d914.  call temp:= `charset`(v3) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L19d91a.  v2:= temp @kind object;
  #L19d91c.  call temp:= `bomAwareCharset`(v1, v2) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind static;
  #L19d922.  v0:= temp @kind object;
  #L19d924.  call temp:= `readString`(v1, v0) @signature `Lokio/BufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind interface;
  #Try_end0.  
  #L19d92a.  v2:= temp @kind object;
  #L19d92c.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19d932.  return v2 @kind object;
  #L19d934.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19d936.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L19d93c.  throw v2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19d934;
}

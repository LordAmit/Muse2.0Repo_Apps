record `okhttp3.HttpUrl$1` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L198f64.  call temp:= `values`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.values:()[Lokhttp3/HttpUrl$Builder$ParseResult;` @kind static;
  #L198f6a.  v0:= temp @kind object;
  #L198f6c.  v0:= length @variable v0;
  #L198f6e.  v0:= new `int`[v0];
  #L198f72.  `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] := v0 @kind object;
  #Try_start0.  
  #L198f76.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L198f7a.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L198f7e.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L198f84.  v1:= temp;
  #L198f86.  v2:= 1I;
  #L198f88.  v0[v1]:= v2;
  #Try_end0.  
  #Try_start1.  
  #L198f8c.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L198f90.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L198f94.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L198f9a.  v1:= temp;
  #L198f9c.  v2:= 2I;
  #L198f9e.  v0[v1]:= v2;
  #Try_end1.  
  #Try_start2.  
  #L198fa2.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L198fa6.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L198faa.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L198fb0.  v1:= temp;
  #L198fb2.  v2:= 3I;
  #L198fb4.  v0[v1]:= v2;
  #Try_end2.  
  #Try_start3.  
  #L198fb8.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L198fbc.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L198fc0.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L198fc6.  v1:= temp;
  #L198fc8.  v2:= 4I;
  #L198fca.  v0[v1]:= v2;
  #Try_end3.  
  #Try_start4.  
  #L198fce.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L198fd2.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L198fd6.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L198fdc.  v1:= temp;
  #L198fde.  v2:= 5I;
  #L198fe0.  v0[v1]:= v2;
  #Try_end4.  
  #L198fe4.  return @kind void;
  #L198fe6.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L198fe8.  goto L198fe4;
  #L198fea.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L198fec.  goto L198fce;
  #L198fee.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L198ff0.  goto L198fb8;
  #L198ff2.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L198ff4.  goto L198fa2;
  #L198ff6.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L198ff8.  goto L198f8c;
  catch `java.lang.NoSuchFieldError` @[Try_start0..Try_end0] goto L198ff6;
  catch `java.lang.NoSuchFieldError` @[Try_start1..Try_end1] goto L198ff2;
  catch `java.lang.NoSuchFieldError` @[Try_start2..Try_end2] goto L198fee;
  catch `java.lang.NoSuchFieldError` @[Try_start3..Try_end3] goto L198fea;
  catch `java.lang.NoSuchFieldError` @[Try_start4..Try_end4] goto L198fe6;
}

record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.domain` @AccessFlag ;
  `long` `okhttp3.Cookie$Builder.expiresAt` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.hostOnly` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.httpOnly` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.name` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.path` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.persistent` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.secure` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.value` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L196744.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19674a.  v0:= 253402300799999L;
  #L196754.  v2.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v0 @kind wide;
  #L196758.  v0:= "/" @kind object;
  #L19675c.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v0 @kind object;
  #L196760.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `domain`, `boolean` v6 @name `hostOnly`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L196774.  if v5 != 0 then goto L196788;
  #L196778.  v1:= new `java.lang.NullPointerException`;
  #L19677c.  v2:= "domain == null" @kind object;
  #L196780.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L196786.  throw v1;
  #L196788.  call temp:= `canonicalizeHost`(v5) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19678e.  v0:= temp @kind object;
  #L196790.  if v0 != 0 then goto L1967c6;
  #L196794.  v1:= new `java.lang.IllegalArgumentException`;
  #L196798.  v2:= new `java.lang.StringBuilder`;
  #L19679c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1967a2.  v3:= "unexpected domain: " @kind object;
  #L1967a6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1967ac.  v2:= temp @kind object;
  #L1967ae.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1967b4.  v2:= temp @kind object;
  #L1967b6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1967bc.  v2:= temp @kind object;
  #L1967be.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1967c4.  throw v1;
  #L1967c6.  v4.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` := v0 @kind object;
  #L1967ca.  v4.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` := v6 @kind boolean;
  #L1967ce.  return v4 @kind object;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1967e0.  v0:= new `okhttp3.Cookie`;
  #L1967e4.  call `<init>`(v0, v1) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @kind direct;
  #L1967ea.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1967fc.  v0:= 0I;
  #L1967fe.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L196804.  v0:= temp @kind object;
  #L196806.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 @name `expiresAt`) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L196818.  v0:= 0L;
  #L19681c.  v0:= lcmp(v4, v0);
  #L196820.  if v0 > 0 then goto L196828;
  #L196824.  v4:= -9223372036854775808L;
  #L196828.  v0:= 253402300799999L;
  #L196832.  v0:= lcmp(v4, v0);
  #L196836.  if v0 <= 0 then goto L196844;
  #L19683a.  v4:= 253402300799999L;
  #L196844.  v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v4 @kind wide;
  #L196848.  v0:= 1I;
  #L19684a.  v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` := v0 @kind boolean;
  #L19684e.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L196860.  v0:= 1I;
  #L196862.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L196868.  v0:= temp @kind object;
  #L19686a.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19687c.  v0:= 1I;
  #L19687e.  v1.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L196882.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `name`) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L196894.  if v3 != 0 then goto L1968a8;
  #L196898.  v0:= new `java.lang.NullPointerException`;
  #L19689c.  v1:= "name == null" @kind object;
  #L1968a0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1968a6.  throw v0;
  #L1968a8.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1968ae.  v0:= temp @kind object;
  #L1968b0.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1968b6.  v0:= temp;
  #L1968b8.  if v0 != 0 then goto L1968cc;
  #L1968bc.  v0:= new `java.lang.IllegalArgumentException`;
  #L1968c0.  v1:= "name is not trimmed" @kind object;
  #L1968c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1968ca.  throw v0;
  #L1968cc.  v2.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` := v3 @kind object;
  #L1968d0.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `path`) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1968e4.  v0:= "/" @kind object;
  #L1968e8.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1968ee.  v0:= temp;
  #L1968f0.  if v0 != 0 then goto L196904;
  #L1968f4.  v0:= new `java.lang.IllegalArgumentException`;
  #L1968f8.  v1:= "path must start with '/'" @kind object;
  #L1968fc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L196902.  throw v0;
  #L196904.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v3 @kind object;
  #L196908.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19691c.  v0:= 1I;
  #L19691e.  v1.`okhttp3.Cookie$Builder.secure` @type ^`boolean` := v0 @kind boolean;
  #L196922.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L196934.  if v3 != 0 then goto L196948;
  #L196938.  v0:= new `java.lang.NullPointerException`;
  #L19693c.  v1:= "value == null" @kind object;
  #L196940.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L196946.  throw v0;
  #L196948.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L19694e.  v0:= temp @kind object;
  #L196950.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L196956.  v0:= temp;
  #L196958.  if v0 != 0 then goto L19696c;
  #L19695c.  v0:= new `java.lang.IllegalArgumentException`;
  #L196960.  v1:= "value is not trimmed" @kind object;
  #L196964.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19696a.  throw v0;
  #L19696c.  v2.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` := v3 @kind object;
  #L196970.  return v2 @kind object;
}

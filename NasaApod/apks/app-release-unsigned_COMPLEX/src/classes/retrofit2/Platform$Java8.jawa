record `retrofit2.Platform$Java8` @kind class @AccessFlag  extends `retrofit2.Platform` @kind class {
}
procedure `void` `<init>`(`retrofit2.Platform$Java8` v0 @kind this) @signature `Lretrofit2/Platform$Java8;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2215a4.  call `<init>`(v0) @signature `Lretrofit2/Platform;.<init>:()V` @kind direct;
  #L2215aa.  return @kind void;
}
procedure `java.lang.Object` `invokeDefaultMethod`(`retrofit2.Platform$Java8` v7 @kind this, `java.lang.reflect.Method` v8 @kind object @name `method`, `java.lang.Class` v9 @kind object, `java.lang.Object` v10 @kind object @name `object`, `java.lang.Object`[] v11 @kind object @name `args`) @signature `Lretrofit2/Platform$Java8;.invokeDefaultMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2215bc.  v6:= 2I;
  #L2215be.  v5:= 0I;
  #L2215c0.  v4:= 1I;
  #L2215c2.  v1:= constclass @type ^`java.lang.invoke.MethodHandles$Lookup` @kind object;
  #L2215c6.  v2:= new `java.lang.Class`[v6];
  #L2215ca.  v3:= constclass @type ^`java.lang.Class` @kind object;
  #L2215ce.  v2[v5]:= v3 @kind object;
  #L2215d2.  v3:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L2215d6.  v2[v4]:= v3 @kind object;
  #L2215da.  call temp:= `getDeclaredConstructor`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L2215e0.  v0:= temp @kind object;
  #L2215e2.  call `setAccessible`(v0, v4) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L2215e8.  v1:= new `java.lang.Object`[v6];
  #L2215ec.  v1[v5]:= v9 @kind object;
  #L2215f0.  v2:= -1I;
  #L2215f2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2215f8.  v2:= temp @kind object;
  #L2215fa.  v1[v4]:= v2 @kind object;
  #L2215fe.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L221604.  v1:= temp @kind object;
  #L221606.  v1:= (`java.lang.invoke.MethodHandles$Lookup`) v1 @kind object;
  #L22160a.  call temp:= `unreflectSpecial`(v1, v8, v9) @signature `Ljava/lang/invoke/MethodHandles$Lookup;.unreflectSpecial:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;` @kind virtual;
  #L221610.  v1:= temp @kind object;
  #L221612.  call temp:= `bindTo`(v1, v10) @signature `Ljava/lang/invoke/MethodHandle;.bindTo:(Ljava/lang/Object;)Ljava/lang/invoke/MethodHandle;` @kind virtual;
  #L221618.  v1:= temp @kind object;
  #L22161a.  call temp:= `invokeWithArguments`(v1, v11) @signature `Ljava/lang/invoke/MethodHandle;.invokeWithArguments:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L221620.  v1:= temp @kind object;
  #L221622.  return v1 @kind object;
}
procedure `boolean` `isDefaultMethod`(`retrofit2.Platform$Java8` v1 @kind this, `java.lang.reflect.Method` v2 @kind object @name `method`) @signature `Lretrofit2/Platform$Java8;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @AccessFlag  {
    temp;
    v0;

  #L221634.  call temp:= `isDefault`(v2) @signature `Ljava/lang/reflect/Method;.isDefault:()Z` @kind virtual;
  #L22163a.  v0:= temp;
  #L22163c.  return v0;
}

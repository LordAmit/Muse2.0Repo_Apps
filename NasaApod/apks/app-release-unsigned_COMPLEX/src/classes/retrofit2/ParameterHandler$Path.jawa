record `retrofit2.ParameterHandler$Path` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$Path.encoded` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.ParameterHandler$Path.name` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$Path.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$Path` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `retrofit2.Converter` v3 @kind object, `boolean` v4 @name `encoded`) @signature `Lretrofit2/ParameterHandler$Path;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L221198.  call `<init>`(v1) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L22119e.  v0:= "name == null" @kind object;
  #L2211a2.  call temp:= `checkNotNull`(v2, v0) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2211a8.  v0:= temp @kind object;
  #L2211aa.  v0:= (`java.lang.String`) v0 @kind object;
  #L2211ae.  v1.`retrofit2.ParameterHandler$Path.name` @type ^`java.lang.String` := v0 @kind object;
  #L2211b2.  v1.`retrofit2.ParameterHandler$Path.valueConverter` @type ^`retrofit2.Converter` := v3 @kind object;
  #L2211b6.  v1.`retrofit2.ParameterHandler$Path.encoded` @type ^`boolean` := v4 @kind boolean;
  #L2211ba.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$Path` v3 @kind this, `retrofit2.RequestBuilder` v4 @kind object @name `builder`, `java.lang.Object` v5 @kind object) @signature `Lretrofit2/ParameterHandler$Path;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2211cc.  if v5 != 0 then goto L221212;
  #L2211d0.  v0:= new `java.lang.IllegalArgumentException`;
  #L2211d4.  v1:= new `java.lang.StringBuilder`;
  #L2211d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2211de.  v2:= "Path parameter \"" @kind object;
  #L2211e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2211e8.  v1:= temp @kind object;
  #L2211ea.  v2:= v3.`retrofit2.ParameterHandler$Path.name` @type ^`java.lang.String` @kind object;
  #L2211ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2211f4.  v1:= temp @kind object;
  #L2211f6.  v2:= "\" value must not be null." @kind object;
  #L2211fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221200.  v1:= temp @kind object;
  #L221202.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L221208.  v1:= temp @kind object;
  #L22120a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L221210.  throw v0;
  #L221212.  v1:= v3.`retrofit2.ParameterHandler$Path.name` @type ^`java.lang.String` @kind object;
  #L221216.  v0:= v3.`retrofit2.ParameterHandler$Path.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L22121a.  call temp:= `convert`(v0, v5) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L221220.  v0:= temp @kind object;
  #L221222.  v0:= (`java.lang.String`) v0 @kind object;
  #L221226.  v2:= v3.`retrofit2.ParameterHandler$Path.encoded` @type ^`boolean` @kind boolean;
  #L22122a.  call `addPathParam`(v4, v1, v0, v2) @signature `Lretrofit2/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L221230.  return @kind void;
}

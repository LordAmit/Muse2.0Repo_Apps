record `retrofit2.ParameterHandler$FieldMap` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$FieldMap.encoded` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$FieldMap.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$FieldMap` v0 @kind this, `retrofit2.Converter` v1 @kind object, `boolean` v2 @name `encoded`) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L220c84.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L220c8a.  v0.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` := v1 @kind object;
  #L220c8e.  v0.`retrofit2.ParameterHandler$FieldMap.encoded` @type ^`boolean` := v2 @kind boolean;
  #L220c92.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$FieldMap` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L220ca4.  v2:= (`java.util.Map`) v2 @kind object;
  #L220ca8.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @kind virtual;
  #L220cae.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$FieldMap` v7 @kind this, `retrofit2.RequestBuilder` v8 @kind object @name `builder`, `java.util.Map` v9 @kind object) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L220cc0.  if v9 != 0 then goto L220cd4;
  #L220cc4.  v4:= new `java.lang.IllegalArgumentException`;
  #L220cc8.  v5:= "Field map was null." @kind object;
  #L220ccc.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220cd2.  throw v4;
  #L220cd4.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L220cda.  v4:= temp @kind object;
  #L220cdc.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L220ce2.  v4:= temp @kind object;
  #L220ce4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L220cea.  v5:= temp;
  #L220cec.  if v5 == 0 then goto L220e02;
  #L220cf0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L220cf6.  v0:= temp @kind object;
  #L220cf8.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L220cfc.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L220d02.  v1:= temp @kind object;
  #L220d04.  v1:= (`java.lang.String`) v1 @kind object;
  #L220d08.  if v1 != 0 then goto L220d1c;
  #L220d0c.  v4:= new `java.lang.IllegalArgumentException`;
  #L220d10.  v5:= "Field map contained null key." @kind object;
  #L220d14.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220d1a.  throw v4;
  #L220d1c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L220d22.  v2:= temp @kind object;
  #L220d24.  if v2 != 0 then goto L220d66;
  #L220d28.  v4:= new `java.lang.IllegalArgumentException`;
  #L220d2c.  v5:= new `java.lang.StringBuilder`;
  #L220d30.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L220d36.  v6:= "Field map contained null value for key '" @kind object;
  #L220d3a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220d40.  v5:= temp @kind object;
  #L220d42.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220d48.  v5:= temp @kind object;
  #L220d4a.  v6:= "'." @kind object;
  #L220d4e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220d54.  v5:= temp @kind object;
  #L220d56.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L220d5c.  v5:= temp @kind object;
  #L220d5e.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220d64.  throw v4;
  #L220d66.  v5:= v7.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L220d6a.  call temp:= `convert`(v5, v2) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L220d70.  v3:= temp @kind object;
  #L220d72.  v3:= (`java.lang.String`) v3 @kind object;
  #L220d76.  if v3 != 0 then goto L220df4;
  #L220d7a.  v4:= new `java.lang.IllegalArgumentException`;
  #L220d7e.  v5:= new `java.lang.StringBuilder`;
  #L220d82.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L220d88.  v6:= "Field map value '" @kind object;
  #L220d8c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220d92.  v5:= temp @kind object;
  #L220d94.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220d9a.  v5:= temp @kind object;
  #L220d9c.  v6:= "' converted to null by " @kind object;
  #L220da0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220da6.  v5:= temp @kind object;
  #L220da8.  v6:= v7.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L220dac.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L220db2.  v6:= temp @kind object;
  #L220db4.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L220dba.  v6:= temp @kind object;
  #L220dbc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220dc2.  v5:= temp @kind object;
  #L220dc4.  v6:= " for key '" @kind object;
  #L220dc8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220dce.  v5:= temp @kind object;
  #L220dd0.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220dd6.  v5:= temp @kind object;
  #L220dd8.  v6:= "'." @kind object;
  #L220ddc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L220de2.  v5:= temp @kind object;
  #L220de4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L220dea.  v5:= temp @kind object;
  #L220dec.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220df2.  throw v4;
  #L220df4.  v5:= v7.`retrofit2.ParameterHandler$FieldMap.encoded` @type ^`boolean` @kind boolean;
  #L220df8.  call `addFormField`(v8, v1, v3, v5) @signature `Lretrofit2/RequestBuilder;.addFormField:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L220dfe.  goto L220ce4;
  #L220e02.  return @kind void;
}

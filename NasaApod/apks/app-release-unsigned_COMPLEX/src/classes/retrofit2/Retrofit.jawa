record `retrofit2.Retrofit` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.HttpUrl` `retrofit2.Retrofit.baseUrl` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.callAdapterFactories` @AccessFlag FINAL;
  `okhttp3.Call$Factory` `retrofit2.Retrofit.callFactory` @AccessFlag FINAL;
  `java.util.concurrent.Executor` `retrofit2.Retrofit.callbackExecutor` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.converterFactories` @AccessFlag FINAL;
  `java.util.Map` `retrofit2.Retrofit.serviceMethodCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.Retrofit.validateEagerly` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.Retrofit` v1 @kind this, `okhttp3.Call$Factory` v2 @kind object @name `callFactory`, `okhttp3.HttpUrl` v3 @kind object @name `baseUrl`, `java.util.List` v4 @kind object, `java.util.List` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object @name `callbackExecutor`, `boolean` v7 @name `validateEagerly`) @signature `Lretrofit2/Retrofit;.<init>:(Lokhttp3/Call$Factory;Lokhttp3/HttpUrl;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1afd98.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1afd9e.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L1afda2.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L1afda8.  v1.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` := v0 @kind object;
  #L1afdac.  v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` := v2 @kind object;
  #L1afdb0.  v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L1afdb4.  v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` := v4 @kind object;
  #L1afdb8.  v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` := v5 @kind object;
  #L1afdbc.  v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` := v6 @kind object;
  #L1afdc0.  v1.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` := v7 @kind boolean;
  #L1afdc4.  return @kind void;
}
procedure `void` `eagerlyValidateMethods`(`retrofit2.Retrofit` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1afdd8.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L1afdde.  v1:= temp @kind object;
  #L1afde0.  call temp:= `getDeclaredMethods`(v7) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L1afde6.  v3:= temp @kind object;
  #L1afde8.  v4:= length @variable v3;
  #L1afdea.  v2:= 0I;
  #L1afdec.  if v2 >= v4 then goto L1afe0c;
  #L1afdf0.  v0:= v3[v2] @kind object;
  #L1afdf4.  call temp:= `isDefaultMethod`(v1, v0) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @kind virtual;
  #L1afdfa.  v5:= temp;
  #L1afdfc.  if v5 != 0 then goto L1afe06;
  #L1afe00.  call temp:= `loadServiceMethod`(v6, v0) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind virtual;
  #L1afe06.  v2:= v2 + 1;
  #L1afe0a.  goto L1afdec;
  #L1afe0c.  return @kind void;
}
procedure `okhttp3.HttpUrl` `baseUrl`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.baseUrl:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afe20.  v0:= v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1afe24.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `callAdapter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afe38.  v0:= 0I;
  #L1afe3a.  call temp:= `nextCallAdapter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L1afe40.  v0:= temp @kind object;
  #L1afe42.  return v0 @kind object;
}
procedure `java.util.List` `callAdapterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callAdapterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afe54.  v0:= v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1afe58.  return v0 @kind object;
}
procedure `okhttp3.Call$Factory` `callFactory`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callFactory:()Lokhttp3/Call$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afe6c.  v0:= v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L1afe70.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `callbackExecutor`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afe84.  v0:= v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L1afe88.  return v0 @kind object;
}
procedure `java.util.List` `converterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.converterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afe9c.  v0:= v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1afea0.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`retrofit2.Retrofit` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1afeb4.  call `validateServiceInterface`(v4) @signature `Lretrofit2/Utils;.validateServiceInterface:(Ljava/lang/Class;)V` @kind static;
  #L1afeba.  v0:= v3.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` @kind boolean;
  #L1afebe.  if v0 == 0 then goto L1afec8;
  #L1afec2.  call `eagerlyValidateMethods`(v3, v4) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @kind direct;
  #L1afec8.  call temp:= `getClassLoader`(v4) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1afece.  v0:= temp @kind object;
  #L1afed0.  v1:= 1I;
  #L1afed2.  v1:= new `java.lang.Class`[v1];
  #L1afed6.  v2:= 0I;
  #L1afed8.  v1[v2]:= v4 @kind object;
  #L1afedc.  v2:= new `retrofit2.Retrofit$1`;
  #L1afee0.  call `<init>`(v2, v3, v4) @signature `Lretrofit2/Retrofit$1;.<init>:(Lretrofit2/Retrofit;Ljava/lang/Class;)V` @kind direct;
  #L1afee6.  call temp:= `newProxyInstance`(v0, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L1afeec.  v0:= temp @kind object;
  #L1afeee.  return v0 @kind object;
}
procedure `retrofit2.ServiceMethod` `loadServiceMethod`(`retrofit2.Retrofit` v5 @kind this, `java.lang.reflect.Method` v6 @kind object @name `method`) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1aff00.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1aff04.  call temp:= `get`(v3, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1aff0a.  v1:= temp @kind object;
  #L1aff0c.  v1:= (`retrofit2.ServiceMethod`) v1 @kind object;
  #L1aff10.  if v1 == 0 then goto L1aff18;
  #L1aff14.  v2:= v1 @kind object;
  #L1aff16.  return v2 @kind object;
  #L1aff18.  v4:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1aff1c.  @monitorenter v4
  #Try_start0.  
  #L1aff1e.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1aff22.  call temp:= `get`(v3, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1aff28.  v3:= temp @kind object;
  #L1aff2a.  v0:= v3 @kind object;
  #L1aff2c.  v0:= (`retrofit2.ServiceMethod`) v0 @kind object;
  #L1aff30.  v1:= v0 @kind object;
  #L1aff32.  if v1 != 0 then goto L1aff52;
  #L1aff36.  v3:= new `retrofit2.ServiceMethod$Builder`;
  #L1aff3a.  call `<init>`(v3, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @kind direct;
  #L1aff40.  call temp:= `build`(v3) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @kind virtual;
  #L1aff46.  v1:= temp @kind object;
  #L1aff48.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1aff4c.  call temp:= `put`(v3, v6, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1aff52.  @monitorexit v4
  #L1aff54.  v2:= v1 @kind object;
  #L1aff56.  goto L1aff16;
  #L1aff58.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1aff5a.  @monitorexit v4
  #Try_end0.  
  #L1aff5c.  throw v3;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1aff58;
}
procedure `retrofit2.Retrofit$Builder` `newBuilder`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.newBuilder:()Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aff7c.  v0:= new `retrofit2.Retrofit$Builder`;
  #L1aff80.  call `<init>`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Retrofit;)V` @kind direct;
  #L1aff86.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `nextCallAdapter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.CallAdapter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1aff98.  v5:= "returnType == null" @kind object;
  #L1aff9c.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1affa2.  v5:= "annotations == null" @kind object;
  #L1affa6.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1affac.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1affb0.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1affb6.  v5:= temp;
  #L1affb8.  v4:= v5 + 1;
  #L1affbc.  v3:= v4;
  #L1affbe.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1affc2.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1affc8.  v2:= temp;
  #L1affca.  if v3 >= v2 then goto L1afff2;
  #L1affce.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1affd2.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1affd8.  v5:= temp @kind object;
  #L1affda.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1affde.  call temp:= `get`(v5, v9, v10, v7) @signature `Lretrofit2/CallAdapter$Factory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @kind virtual;
  #L1affe4.  v0:= temp @kind object;
  #L1affe6.  if v0 == 0 then goto L1affec;
  #L1affea.  return v0 @kind object;
  #L1affec.  v3:= v3 + 1;
  #L1afff0.  goto L1affca;
  #L1afff2.  v5:= new `java.lang.StringBuilder`;
  #L1afff6.  v6:= "Could not locate call adapter for " @kind object;
  #L1afffa.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b0000.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0006.  v5:= temp @kind object;
  #L1b0008.  v6:= ".\n" @kind object;
  #L1b000c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0012.  v1:= temp @kind object;
  #L1b0014.  if v8 == 0 then goto L1b006a;
  #L1b0018.  v5:= "  Skipped:" @kind object;
  #L1b001c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0022.  v3:= 0I;
  #L1b0024.  if v3 >= v4 then goto L1b0060;
  #L1b0028.  v5:= "\n   * " @kind object;
  #L1b002c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0032.  v6:= temp @kind object;
  #L1b0034.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b0038.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b003e.  v5:= temp @kind object;
  #L1b0040.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1b0044.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b004a.  v5:= temp @kind object;
  #L1b004c.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b0052.  v5:= temp @kind object;
  #L1b0054.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b005a.  v3:= v3 + 1;
  #L1b005e.  goto L1b0024;
  #L1b0060.  v5:= 10I;
  #L1b0064.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b006a.  v5:= "  Tried:" @kind object;
  #L1b006e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0074.  v3:= v4;
  #L1b0076.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b007a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b0080.  v2:= temp;
  #L1b0082.  if v3 >= v2 then goto L1b00be;
  #L1b0086.  v5:= "\n   * " @kind object;
  #L1b008a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0090.  v6:= temp @kind object;
  #L1b0092.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b0096.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b009c.  v5:= temp @kind object;
  #L1b009e.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1b00a2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b00a8.  v5:= temp @kind object;
  #L1b00aa.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b00b0.  v5:= temp @kind object;
  #L1b00b2.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b00b8.  v3:= v3 + 1;
  #L1b00bc.  goto L1b0082;
  #L1b00be.  v5:= new `java.lang.IllegalArgumentException`;
  #L1b00c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b00c8.  v6:= temp @kind object;
  #L1b00ca.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b00d0.  throw v5;
}
procedure `retrofit2.Converter` `nextRequestBodyConverter`(`retrofit2.Retrofit` v8 @kind this, `retrofit2.Converter$Factory` v9 @kind object @name `skipPast`, `java.lang.reflect.Type` v10 @kind object @name `type`, `java.lang.annotation.Annotation`[] v11 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v12 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b00e4.  v6:= "type == null" @kind object;
  #L1b00e8.  call temp:= `checkNotNull`(v10, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b00ee.  v6:= "parameterAnnotations == null" @kind object;
  #L1b00f2.  call temp:= `checkNotNull`(v11, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b00f8.  v6:= "methodAnnotations == null" @kind object;
  #L1b00fc.  call temp:= `checkNotNull`(v12, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b0102.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b0106.  call temp:= `indexOf`(v6, v9) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1b010c.  v6:= temp;
  #L1b010e.  v5:= v6 + 1;
  #L1b0112.  v4:= v5;
  #L1b0114.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b0118.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b011e.  v2:= temp;
  #L1b0120.  if v4 >= v2 then goto L1b0148;
  #L1b0124.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b0128.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b012e.  v3:= temp @kind object;
  #L1b0130.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L1b0134.  call temp:= `requestBodyConverter`(v3, v10, v11, v12, v8) @signature `Lretrofit2/Converter$Factory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b013a.  v1:= temp @kind object;
  #L1b013c.  if v1 == 0 then goto L1b0142;
  #L1b0140.  return v1 @kind object;
  #L1b0142.  v4:= v4 + 1;
  #L1b0146.  goto L1b0120;
  #L1b0148.  v6:= new `java.lang.StringBuilder`;
  #L1b014c.  v7:= "Could not locate RequestBody converter for " @kind object;
  #L1b0150.  call `<init>`(v6, v7) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b0156.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b015c.  v6:= temp @kind object;
  #L1b015e.  v7:= ".\n" @kind object;
  #L1b0162.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0168.  v0:= temp @kind object;
  #L1b016a.  if v9 == 0 then goto L1b01c0;
  #L1b016e.  v6:= "  Skipped:" @kind object;
  #L1b0172.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0178.  v4:= 0I;
  #L1b017a.  if v4 >= v5 then goto L1b01b6;
  #L1b017e.  v6:= "\n   * " @kind object;
  #L1b0182.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0188.  v7:= temp @kind object;
  #L1b018a.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b018e.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b0194.  v6:= temp @kind object;
  #L1b0196.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L1b019a.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b01a0.  v6:= temp @kind object;
  #L1b01a2.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b01a8.  v6:= temp @kind object;
  #L1b01aa.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b01b0.  v4:= v4 + 1;
  #L1b01b4.  goto L1b017a;
  #L1b01b6.  v6:= 10I;
  #L1b01ba.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b01c0.  v6:= "  Tried:" @kind object;
  #L1b01c4.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b01ca.  v4:= v5;
  #L1b01cc.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b01d0.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b01d6.  v2:= temp;
  #L1b01d8.  if v4 >= v2 then goto L1b0214;
  #L1b01dc.  v6:= "\n   * " @kind object;
  #L1b01e0.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b01e6.  v7:= temp @kind object;
  #L1b01e8.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b01ec.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b01f2.  v6:= temp @kind object;
  #L1b01f4.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L1b01f8.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b01fe.  v6:= temp @kind object;
  #L1b0200.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b0206.  v6:= temp @kind object;
  #L1b0208.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b020e.  v4:= v4 + 1;
  #L1b0212.  goto L1b01d8;
  #L1b0214.  v6:= new `java.lang.IllegalArgumentException`;
  #L1b0218.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b021e.  v7:= temp @kind object;
  #L1b0220.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b0226.  throw v6;
}
procedure `retrofit2.Converter` `nextResponseBodyConverter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.Converter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `type`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b0238.  v5:= "type == null" @kind object;
  #L1b023c.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b0242.  v5:= "annotations == null" @kind object;
  #L1b0246.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b024c.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b0250.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1b0256.  v5:= temp;
  #L1b0258.  v4:= v5 + 1;
  #L1b025c.  v3:= v4;
  #L1b025e.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b0262.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b0268.  v2:= temp;
  #L1b026a.  if v3 >= v2 then goto L1b0292;
  #L1b026e.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b0272.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b0278.  v5:= temp @kind object;
  #L1b027a.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b027e.  call temp:= `responseBodyConverter`(v5, v9, v10, v7) @signature `Lretrofit2/Converter$Factory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b0284.  v1:= temp @kind object;
  #L1b0286.  if v1 == 0 then goto L1b028c;
  #L1b028a.  return v1 @kind object;
  #L1b028c.  v3:= v3 + 1;
  #L1b0290.  goto L1b026a;
  #L1b0292.  v5:= new `java.lang.StringBuilder`;
  #L1b0296.  v6:= "Could not locate ResponseBody converter for " @kind object;
  #L1b029a.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b02a0.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b02a6.  v5:= temp @kind object;
  #L1b02a8.  v6:= ".\n" @kind object;
  #L1b02ac.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b02b2.  v0:= temp @kind object;
  #L1b02b4.  if v8 == 0 then goto L1b030a;
  #L1b02b8.  v5:= "  Skipped:" @kind object;
  #L1b02bc.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b02c2.  v3:= 0I;
  #L1b02c4.  if v3 >= v4 then goto L1b0300;
  #L1b02c8.  v5:= "\n   * " @kind object;
  #L1b02cc.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b02d2.  v6:= temp @kind object;
  #L1b02d4.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b02d8.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b02de.  v5:= temp @kind object;
  #L1b02e0.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b02e4.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b02ea.  v5:= temp @kind object;
  #L1b02ec.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b02f2.  v5:= temp @kind object;
  #L1b02f4.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b02fa.  v3:= v3 + 1;
  #L1b02fe.  goto L1b02c4;
  #L1b0300.  v5:= 10I;
  #L1b0304.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b030a.  v5:= "  Tried:" @kind object;
  #L1b030e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0314.  v3:= v4;
  #L1b0316.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b031a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b0320.  v2:= temp;
  #L1b0322.  if v3 >= v2 then goto L1b035e;
  #L1b0326.  v5:= "\n   * " @kind object;
  #L1b032a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0330.  v6:= temp @kind object;
  #L1b0332.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b0336.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b033c.  v5:= temp @kind object;
  #L1b033e.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b0342.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b0348.  v5:= temp @kind object;
  #L1b034a.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b0350.  v5:= temp @kind object;
  #L1b0352.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0358.  v3:= v3 + 1;
  #L1b035c.  goto L1b0322;
  #L1b035e.  v5:= new `java.lang.IllegalArgumentException`;
  #L1b0362.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0368.  v6:= temp @kind object;
  #L1b036a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b0370.  throw v5;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v4 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b0384.  v0:= 0I;
  #L1b0386.  call temp:= `nextRequestBodyConverter`(v1, v0, v2, v3, v4) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b038c.  v0:= temp @kind object;
  #L1b038e.  return v0 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b03a0.  v0:= 0I;
  #L1b03a2.  call temp:= `nextResponseBodyConverter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b03a8.  v0:= temp @kind object;
  #L1b03aa.  return v0 @kind object;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.Retrofit` v4 @kind this, `java.lang.reflect.Type` v5 @kind object @name `type`, `java.lang.annotation.Annotation`[] v6 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b03bc.  v3:= "type == null" @kind object;
  #L1b03c0.  call temp:= `checkNotNull`(v5, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b03c6.  v3:= "annotations == null" @kind object;
  #L1b03ca.  call temp:= `checkNotNull`(v6, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b03d0.  v2:= 0I;
  #L1b03d2.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b03d6.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b03dc.  v1:= temp;
  #L1b03de.  if v2 >= v1 then goto L1b0406;
  #L1b03e2.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b03e6.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b03ec.  v3:= temp @kind object;
  #L1b03ee.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L1b03f2.  call temp:= `stringConverter`(v3, v5, v6, v4) @signature `Lretrofit2/Converter$Factory;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b03f8.  v0:= temp @kind object;
  #L1b03fa.  if v0 == 0 then goto L1b0400;
  #L1b03fe.  return v0 @kind object;
  #L1b0400.  v2:= v2 + 1;
  #L1b0404.  goto L1b03de;
  #L1b0406.  v0:= `@@retrofit2.BuiltInConverters$ToStringConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$ToStringConverter` @kind object;
  #L1b040a.  goto L1b03fe;
}

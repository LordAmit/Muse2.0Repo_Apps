record `retrofit2.Platform` @kind class @AccessFlag  {
}
global `retrofit2.Platform` `@@retrofit2.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1aef4c.  call temp:= `findPlatform`() @signature `Lretrofit2/Platform;.findPlatform:()Lretrofit2/Platform;` @kind static;
  #L1aef52.  v0:= temp @kind object;
  #L1aef54.  `@@retrofit2.Platform.PLATFORM` @type ^`retrofit2.Platform` := v0 @kind object;
  #L1aef58.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.Platform` v0 @kind this) @signature `Lretrofit2/Platform;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1aef6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aef72.  return @kind void;
}
procedure `retrofit2.Platform` `findPlatform`() @signature `Lretrofit2/Platform;.findPlatform:()Lretrofit2/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #Try_start0.  
  #L1aef84.  v0:= "android.os.Build" @kind object;
  #L1aef88.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1aef8e.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1aef92.  if v0 == 0 then goto L1aefa4;
  #L1aef96.  v0:= new `retrofit2.Platform$Android`;
  #L1aef9a.  call `<init>`(v0) @signature `Lretrofit2/Platform$Android;.<init>:()V` @kind direct;
  #Try_end0.  
  #L1aefa0.  return v0 @kind object;
  #L1aefa2.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #Try_start1.  
  #L1aefa4.  v0:= "java.util.Optional" @kind object;
  #L1aefa8.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1aefae.  v0:= new `retrofit2.Platform$Java8`;
  #L1aefb2.  call `<init>`(v0) @signature `Lretrofit2/Platform$Java8;.<init>:()V` @kind direct;
  #Try_end1.  
  #L1aefb8.  goto L1aefa0;
  #L1aefba.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L1aefbc.  v0:= new `retrofit2.Platform`;
  #L1aefc0.  call `<init>`(v0) @signature `Lretrofit2/Platform;.<init>:()V` @kind direct;
  #L1aefc6.  goto L1aefa0;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L1aefa2;
  catch `java.lang.ClassNotFoundException` @[Try_start1..Try_end1] goto L1aefba;
}
procedure `retrofit2.Platform` `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @AccessFlag STATIC {
    temp;
    v0;

  #L1aeff4.  v0:= `@@retrofit2.Platform.PLATFORM` @type ^`retrofit2.Platform` @kind object;
  #L1aeff8.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter$Factory` `defaultCallAdapterFactory`(`retrofit2.Platform` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object @name `callbackExecutor`) @signature `Lretrofit2/Platform;.defaultCallAdapterFactory:(Ljava/util/concurrent/Executor;)Lretrofit2/CallAdapter$Factory;` @AccessFlag  {
    temp;
    v0;

  #L1af00c.  if v2 == 0 then goto L1af01c;
  #L1af010.  v0:= new `retrofit2.ExecutorCallAdapterFactory`;
  #L1af014.  call `<init>`(v0, v2) @signature `Lretrofit2/ExecutorCallAdapterFactory;.<init>:(Ljava/util/concurrent/Executor;)V` @kind direct;
  #L1af01a.  return v0 @kind object;
  #L1af01c.  v0:= `@@retrofit2.DefaultCallAdapterFactory.INSTANCE` @type ^`retrofit2.CallAdapter$Factory` @kind object;
  #L1af020.  goto L1af01a;
}
procedure `java.util.concurrent.Executor` `defaultCallbackExecutor`(`retrofit2.Platform` v1 @kind this) @signature `Lretrofit2/Platform;.defaultCallbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag  {
    temp;
    v0;

  #L1af034.  v0:= 0I;
  #L1af036.  return v0 @kind object;
}
procedure `java.lang.Object` `invokeDefaultMethod`(`retrofit2.Platform` v1 @kind this, `java.lang.reflect.Method` v2 @kind object @name `method`, `java.lang.Class` v3 @kind object, `java.lang.Object` v4 @kind object @name `object`, `java.lang.Object`[] v5 @kind object @name `args`) @signature `Lretrofit2/Platform;.invokeDefaultMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L1af048.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1af04c.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L1af052.  throw v0;
}
procedure `boolean` `isDefaultMethod`(`retrofit2.Platform` v1 @kind this, `java.lang.reflect.Method` v2 @kind object @name `method`) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @AccessFlag  {
    temp;
    v0;

  #L1af064.  v0:= 0I;
  #L1af066.  return v0;
}

record `retrofit2.ServiceMethod$Builder` @kind class @AccessFlag FINAL {
  `retrofit2.CallAdapter` `retrofit2.ServiceMethod$Builder.callAdapter` @AccessFlag ;
  `okhttp3.MediaType` `retrofit2.ServiceMethod$Builder.contentType` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotBody` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotField` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPart` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPath` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotQuery` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotUrl` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.hasBody` @AccessFlag ;
  `okhttp3.Headers` `retrofit2.ServiceMethod$Builder.headers` @AccessFlag ;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.httpMethod` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isFormEncoded` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isMultipart` @AccessFlag ;
  `java.lang.reflect.Method` `retrofit2.ServiceMethod$Builder.method` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[] `retrofit2.ServiceMethod$Builder.methodAnnotations` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[][] `retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @AccessFlag FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.ServiceMethod$Builder.parameterHandlers` @AccessFlag ;
  `java.lang.reflect.Type`[] `retrofit2.ServiceMethod$Builder.parameterTypes` @AccessFlag FINAL;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.relativeUrl` @AccessFlag ;
  `java.util.Set` `retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @AccessFlag ;
  `retrofit2.Converter` `retrofit2.ServiceMethod$Builder.responseConverter` @AccessFlag ;
  `java.lang.reflect.Type` `retrofit2.ServiceMethod$Builder.responseType` @AccessFlag ;
  `retrofit2.Retrofit` `retrofit2.ServiceMethod$Builder.retrofit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `retrofit2.Retrofit` v2 @kind object @name `retrofit`, `java.lang.reflect.Method` v3 @kind object @name `method`) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1b041c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b0422.  v1.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` := v2 @kind object;
  #L1b0426.  v1.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L1b042a.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b0430.  v0:= temp @kind object;
  #L1b0432.  v1.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L1b0436.  call temp:= `getGenericParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L1b043c.  v0:= temp @kind object;
  #L1b043e.  v1.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L1b0442.  call temp:= `getParameterAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b0448.  v0:= temp @kind object;
  #L1b044a.  v1.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] := v0 @kind object;
  #L1b044e.  return @kind void;
}
procedure `retrofit2.CallAdapter` `createCallAdapter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b0460.  v4:= 1I;
  #L1b0462.  v5:= 0I;
  #L1b0464.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b0468.  call temp:= `getGenericReturnType`(v3) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1b046e.  v2:= temp @kind object;
  #L1b0470.  call temp:= `hasUnresolvableType`(v2) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1b0476.  v3:= temp;
  #L1b0478.  if v3 == 0 then goto L1b0492;
  #L1b047c.  v3:= "Method return type must not include a type variable or wildcard: %s" @kind object;
  #L1b0480.  v4:= new `java.lang.Object`[v4];
  #L1b0484.  v4[v5]:= v2 @kind object;
  #L1b0488.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b048e.  v3:= temp @kind object;
  #L1b0490.  throw v3;
  #L1b0492.  v3:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b0496.  if v2 != v3 then goto L1b04ac;
  #L1b049a.  v3:= "Service methods cannot return void." @kind object;
  #L1b049e.  v4:= new `java.lang.Object`[v5];
  #L1b04a2.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b04a8.  v3:= temp @kind object;
  #L1b04aa.  throw v3;
  #L1b04ac.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b04b0.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b04b6.  v0:= temp @kind object;
  #Try_start0.  
  #L1b04b8.  v3:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b04bc.  call temp:= `callAdapter`(v3, v2, v0) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #Try_end0.  
  #L1b04c2.  v3:= temp @kind object;
  #L1b04c4.  return v3 @kind object;
  #L1b04c6.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b04c8.  v3:= "Unable to create call adapter for %s" @kind object;
  #L1b04cc.  v4:= new `java.lang.Object`[v4];
  #L1b04d0.  v4[v5]:= v2 @kind object;
  #L1b04d4.  call temp:= `methodError`(v6, v1, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b04da.  v3:= temp @kind object;
  #L1b04dc.  throw v3;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b04c6;
}
procedure `retrofit2.Converter` `createResponseConverter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b0500.  v2:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b0504.  call temp:= `getAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b050a.  v0:= temp @kind object;
  #Try_start0.  
  #L1b050c.  v2:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0510.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b0514.  call temp:= `responseBodyConverter`(v2, v3, v0) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #Try_end0.  
  #L1b051a.  v2:= temp @kind object;
  #L1b051c.  return v2 @kind object;
  #L1b051e.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b0520.  v2:= "Unable to create converter for %s" @kind object;
  #L1b0524.  v3:= 1I;
  #L1b0526.  v3:= new `java.lang.Object`[v3];
  #L1b052a.  v4:= 0I;
  #L1b052c.  v5:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b0530.  v3[v4]:= v5 @kind object;
  #L1b0534.  call temp:= `methodError`(v6, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b053a.  v2:= temp @kind object;
  #L1b053c.  throw v2;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b051e;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b0560.  v0:= 0I;
  #L1b0562.  call temp:= `methodError`(v1, v0, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0568.  v0:= temp @kind object;
  #L1b056a.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v3 @kind this, `java.lang.Throwable` v4 @kind object @name `cause`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1b057c.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b0582.  v5:= temp @kind object;
  #L1b0584.  v0:= new `java.lang.IllegalArgumentException`;
  #L1b0588.  v1:= new `java.lang.StringBuilder`;
  #L1b058c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0592.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0598.  v1:= temp @kind object;
  #L1b059a.  v2:= "\n    for method " @kind object;
  #L1b059e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b05a4.  v1:= temp @kind object;
  #L1b05a6.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b05aa.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L1b05b0.  v2:= temp @kind object;
  #L1b05b2.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b05b8.  v2:= temp @kind object;
  #L1b05ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b05c0.  v1:= temp @kind object;
  #L1b05c2.  v2:= "." @kind object;
  #L1b05c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b05cc.  v1:= temp @kind object;
  #L1b05ce.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b05d2.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b05d8.  v2:= temp @kind object;
  #L1b05da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b05e0.  v1:= temp @kind object;
  #L1b05e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b05e8.  v1:= temp @kind object;
  #L1b05ea.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1b05f0.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `int` v3 @name `p`, `java.lang.String` v4 @kind object @name `message`, `java.lang.Object`[] v5 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b0604.  v0:= new `java.lang.StringBuilder`;
  #L1b0608.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b060e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0614.  v0:= temp @kind object;
  #L1b0616.  v1:= " (parameter #" @kind object;
  #L1b061a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0620.  v0:= temp @kind object;
  #L1b0622.  v1:= v3 + 1;
  #L1b0626.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b062c.  v0:= temp @kind object;
  #L1b062e.  v1:= ")" @kind object;
  #L1b0632.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0638.  v0:= temp @kind object;
  #L1b063a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0640.  v0:= temp @kind object;
  #L1b0642.  call temp:= `methodError`(v2, v0, v5) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0648.  v0:= temp @kind object;
  #L1b064a.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `java.lang.Throwable` v3 @kind object @name `cause`, `int` v4 @name `p`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b065c.  v0:= new `java.lang.StringBuilder`;
  #L1b0660.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0666.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b066c.  v0:= temp @kind object;
  #L1b066e.  v1:= " (parameter #" @kind object;
  #L1b0672.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0678.  v0:= temp @kind object;
  #L1b067a.  v1:= v4 + 1;
  #L1b067e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0684.  v0:= temp @kind object;
  #L1b0686.  v1:= ")" @kind object;
  #L1b068a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0690.  v0:= temp @kind object;
  #L1b0692.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0698.  v0:= temp @kind object;
  #L1b069a.  call temp:= `methodError`(v2, v3, v0, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b06a0.  v0:= temp @kind object;
  #L1b06a2.  return v0 @kind object;
}
procedure `okhttp3.Headers` `parseHeaders`(`retrofit2.ServiceMethod$Builder` v11 @kind this, `java.lang.String`[] v12 @kind object @name `headers`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b06b4.  v10:= 1I;
  #L1b06b6.  v7:= 0I;
  #L1b06b8.  v0:= new `okhttp3.Headers$Builder`;
  #L1b06bc.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1b06c2.  v8:= length @variable v12;
  #L1b06c4.  v6:= v7;
  #L1b06c6.  if v6 >= v8 then goto L1b076a;
  #L1b06ca.  v2:= v12[v6] @kind object;
  #L1b06ce.  v9:= 58I;
  #L1b06d2.  call temp:= `indexOf`(v2, v9) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b06d8.  v1:= temp;
  #L1b06da.  v9:= -1I;
  #L1b06dc.  if v1 == v9 then goto L1b06f4;
  #L1b06e0.  if v1 == 0 then goto L1b06f4;
  #L1b06e4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b06ea.  v9:= temp;
  #L1b06ec.  v9:= v9 + -1;
  #L1b06f0.  if v1 != v9 then goto L1b070a;
  #L1b06f4.  v6:= "@Headers value must be in the form \"Name: Value\". Found: \"%s\"" @kind object;
  #L1b06f8.  v8:= new `java.lang.Object`[v10];
  #L1b06fc.  v8[v7]:= v2 @kind object;
  #L1b0700.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0706.  v6:= temp @kind object;
  #L1b0708.  throw v6;
  #L1b070a.  call temp:= `substring`(v2, v7, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1b0710.  v3:= temp @kind object;
  #L1b0712.  v9:= v1 + 1;
  #L1b0716.  call temp:= `substring`(v2, v9) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b071c.  v9:= temp @kind object;
  #L1b071e.  call temp:= `trim`(v9) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1b0724.  v4:= temp @kind object;
  #L1b0726.  v9:= "Content-Type" @kind object;
  #L1b072a.  call temp:= `equalsIgnoreCase`(v9, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1b0730.  v9:= temp;
  #L1b0732.  if v9 == 0 then goto L1b0762;
  #L1b0736.  call temp:= `parse`(v4) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1b073c.  v5:= temp @kind object;
  #L1b073e.  if v5 != 0 then goto L1b0758;
  #L1b0742.  v6:= "Malformed content type: %s" @kind object;
  #L1b0746.  v8:= new `java.lang.Object`[v10];
  #L1b074a.  v8[v7]:= v4 @kind object;
  #L1b074e.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0754.  v6:= temp @kind object;
  #L1b0756.  throw v6;
  #L1b0758.  v11.`retrofit2.ServiceMethod$Builder.contentType` @type ^`okhttp3.MediaType` := v5 @kind object;
  #L1b075c.  v6:= v6 + 1;
  #L1b0760.  goto L1b06c6;
  #L1b0762.  call temp:= `add`(v0, v3, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1b0768.  goto L1b075c;
  #L1b076a.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1b0770.  v6:= temp @kind object;
  #L1b0772.  return v6 @kind object;
}
procedure `void` `parseHttpMethodAndPath`(`retrofit2.ServiceMethod$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `httpMethod`, `java.lang.String` v10 @kind object @name `value`, `boolean` v11 @name `hasBody`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b0784.  v7:= 1I;
  #L1b0786.  v6:= 0I;
  #L1b0788.  v3:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b078c.  if v3 == 0 then goto L1b07b0;
  #L1b0790.  v3:= "Only one HTTP method is allowed. Found: %s and %s." @kind object;
  #L1b0794.  v4:= 2I;
  #L1b0796.  v4:= new `java.lang.Object`[v4];
  #L1b079a.  v5:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b079e.  v4[v6]:= v5 @kind object;
  #L1b07a2.  v4[v7]:= v9 @kind object;
  #L1b07a6.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b07ac.  v3:= temp @kind object;
  #L1b07ae.  throw v3;
  #L1b07b0.  v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` := v9 @kind object;
  #L1b07b4.  v8.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` := v11 @kind boolean;
  #L1b07b8.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1b07be.  v3:= temp;
  #L1b07c0.  if v3 == 0 then goto L1b07c6;
  #L1b07c4.  return @kind void;
  #L1b07c6.  v3:= 63I;
  #L1b07ca.  call temp:= `indexOf`(v10, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b07d0.  v2:= temp;
  #L1b07d2.  v3:= -1I;
  #L1b07d4.  if v2 == v3 then goto L1b0822;
  #L1b07d8.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b07de.  v3:= temp;
  #L1b07e0.  v3:= v3 + -1;
  #L1b07e4.  if v2 >= v3 then goto L1b0822;
  #L1b07e8.  v3:= v2 + 1;
  #L1b07ec.  call temp:= `substring`(v10, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b07f2.  v1:= temp @kind object;
  #L1b07f4.  v3:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b07f8.  call temp:= `matcher`(v3, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b07fe.  v0:= temp @kind object;
  #L1b0800.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L1b0806.  v3:= temp;
  #L1b0808.  if v3 == 0 then goto L1b0822;
  #L1b080c.  v3:= "URL query string \"%s\" must not have replace block. For dynamic query parameters use @Query." @kind object;
  #L1b0810.  v4:= new `java.lang.Object`[v7];
  #L1b0814.  v4[v6]:= v1 @kind object;
  #L1b0818.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b081e.  v3:= temp @kind object;
  #L1b0820.  throw v3;
  #L1b0822.  v8.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` := v10 @kind object;
  #L1b0826.  call temp:= `parsePathParameters`(v10) @signature `Lretrofit2/ServiceMethod;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L1b082c.  v3:= temp @kind object;
  #L1b082e.  v8.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` := v3 @kind object;
  #L1b0832.  goto L1b07c4;
}
procedure `void` `parseMethodAnnotation`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `java.lang.annotation.Annotation` v7 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b0844.  v5:= 1I;
  #L1b0846.  v4:= 0I;
  #L1b0848.  v2:= instanceof @variable v7 @type ^`retrofit2.http.DELETE` @kind boolean;
  #L1b084c.  if v2 == 0 then goto L1b0868;
  #L1b0850.  v2:= "DELETE" @kind object;
  #L1b0854.  v7:= (`retrofit2.http.DELETE`) v7 @kind object;
  #L1b0858.  call temp:= `value`(v7) @signature `Lretrofit2/http/DELETE;.value:()Ljava/lang/String;` @kind interface;
  #L1b085e.  v3:= temp @kind object;
  #L1b0860.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b0866.  return @kind void;
  #L1b0868.  v2:= instanceof @variable v7 @type ^`retrofit2.http.GET` @kind boolean;
  #L1b086c.  if v2 == 0 then goto L1b0888;
  #L1b0870.  v2:= "GET" @kind object;
  #L1b0874.  v7:= (`retrofit2.http.GET`) v7 @kind object;
  #L1b0878.  call temp:= `value`(v7) @signature `Lretrofit2/http/GET;.value:()Ljava/lang/String;` @kind interface;
  #L1b087e.  v3:= temp @kind object;
  #L1b0880.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b0886.  goto L1b0866;
  #L1b0888.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HEAD` @kind boolean;
  #L1b088c.  if v2 == 0 then goto L1b08cc;
  #L1b0890.  v2:= "HEAD" @kind object;
  #L1b0894.  v7:= (`retrofit2.http.HEAD`) v7 @kind object;
  #L1b0898.  call temp:= `value`(v7) @signature `Lretrofit2/http/HEAD;.value:()Ljava/lang/String;` @kind interface;
  #L1b089e.  v3:= temp @kind object;
  #L1b08a0.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b08a6.  v2:= constclass @type ^`java.lang.Void` @kind object;
  #L1b08aa.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b08ae.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b08b4.  v2:= temp;
  #L1b08b6.  if v2 != 0 then goto L1b0866;
  #L1b08ba.  v2:= "HEAD method must use Void as response type." @kind object;
  #L1b08be.  v3:= new `java.lang.Object`[v4];
  #L1b08c2.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b08c8.  v2:= temp @kind object;
  #L1b08ca.  throw v2;
  #L1b08cc.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PATCH` @kind boolean;
  #L1b08d0.  if v2 == 0 then goto L1b08ec;
  #L1b08d4.  v2:= "PATCH" @kind object;
  #L1b08d8.  v7:= (`retrofit2.http.PATCH`) v7 @kind object;
  #L1b08dc.  call temp:= `value`(v7) @signature `Lretrofit2/http/PATCH;.value:()Ljava/lang/String;` @kind interface;
  #L1b08e2.  v3:= temp @kind object;
  #L1b08e4.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b08ea.  goto L1b0866;
  #L1b08ec.  v2:= instanceof @variable v7 @type ^`retrofit2.http.POST` @kind boolean;
  #L1b08f0.  if v2 == 0 then goto L1b090c;
  #L1b08f4.  v2:= "POST" @kind object;
  #L1b08f8.  v7:= (`retrofit2.http.POST`) v7 @kind object;
  #L1b08fc.  call temp:= `value`(v7) @signature `Lretrofit2/http/POST;.value:()Ljava/lang/String;` @kind interface;
  #L1b0902.  v3:= temp @kind object;
  #L1b0904.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b090a.  goto L1b0866;
  #L1b090c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PUT` @kind boolean;
  #L1b0910.  if v2 == 0 then goto L1b092c;
  #L1b0914.  v2:= "PUT" @kind object;
  #L1b0918.  v7:= (`retrofit2.http.PUT`) v7 @kind object;
  #L1b091c.  call temp:= `value`(v7) @signature `Lretrofit2/http/PUT;.value:()Ljava/lang/String;` @kind interface;
  #L1b0922.  v3:= temp @kind object;
  #L1b0924.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b092a.  goto L1b0866;
  #L1b092c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.OPTIONS` @kind boolean;
  #L1b0930.  if v2 == 0 then goto L1b094c;
  #L1b0934.  v2:= "OPTIONS" @kind object;
  #L1b0938.  v7:= (`retrofit2.http.OPTIONS`) v7 @kind object;
  #L1b093c.  call temp:= `value`(v7) @signature `Lretrofit2/http/OPTIONS;.value:()Ljava/lang/String;` @kind interface;
  #L1b0942.  v3:= temp @kind object;
  #L1b0944.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b094a.  goto L1b0866;
  #L1b094c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HTTP` @kind boolean;
  #L1b0950.  if v2 == 0 then goto L1b097c;
  #L1b0954.  v1:= v7 @kind object;
  #L1b0956.  v1:= (`retrofit2.http.HTTP`) v1 @kind object;
  #L1b095a.  call temp:= `method`(v1) @signature `Lretrofit2/http/HTTP;.method:()Ljava/lang/String;` @kind interface;
  #L1b0960.  v2:= temp @kind object;
  #L1b0962.  call temp:= `path`(v1) @signature `Lretrofit2/http/HTTP;.path:()Ljava/lang/String;` @kind interface;
  #L1b0968.  v3:= temp @kind object;
  #L1b096a.  call temp:= `hasBody`(v1) @signature `Lretrofit2/http/HTTP;.hasBody:()Z` @kind interface;
  #L1b0970.  v4:= temp;
  #L1b0972.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b0978.  goto L1b0866;
  #L1b097c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Headers` @kind boolean;
  #L1b0980.  if v2 == 0 then goto L1b09b8;
  #L1b0984.  v7:= (`retrofit2.http.Headers`) v7 @kind object;
  #L1b0988.  call temp:= `value`(v7) @signature `Lretrofit2/http/Headers;.value:()[Ljava/lang/String;` @kind interface;
  #L1b098e.  v0:= temp @kind object;
  #L1b0990.  v2:= length @variable v0;
  #L1b0992.  if v2 != 0 then goto L1b09a8;
  #L1b0996.  v2:= "@Headers annotation is empty." @kind object;
  #L1b099a.  v3:= new `java.lang.Object`[v4];
  #L1b099e.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b09a4.  v2:= temp @kind object;
  #L1b09a6.  throw v2;
  #L1b09a8.  call temp:= `parseHeaders`(v6, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @kind direct;
  #L1b09ae.  v2:= temp @kind object;
  #L1b09b0.  v6.`retrofit2.ServiceMethod$Builder.headers` @type ^`okhttp3.Headers` := v2 @kind object;
  #L1b09b4.  goto L1b0866;
  #L1b09b8.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Multipart` @kind boolean;
  #L1b09bc.  if v2 == 0 then goto L1b09e2;
  #L1b09c0.  v2:= v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b09c4.  if v2 == 0 then goto L1b09da;
  #L1b09c8.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L1b09cc.  v3:= new `java.lang.Object`[v4];
  #L1b09d0.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b09d6.  v2:= temp @kind object;
  #L1b09d8.  throw v2;
  #L1b09da.  v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` := v5 @kind boolean;
  #L1b09de.  goto L1b0866;
  #L1b09e2.  v2:= instanceof @variable v7 @type ^`retrofit2.http.FormUrlEncoded` @kind boolean;
  #L1b09e6.  if v2 == 0 then goto L1b0866;
  #L1b09ea.  v2:= v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b09ee.  if v2 == 0 then goto L1b0a04;
  #L1b09f2.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L1b09f6.  v3:= new `java.lang.Object`[v4];
  #L1b09fa.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0a00.  v2:= temp @kind object;
  #L1b0a02.  throw v2;
  #L1b0a04.  v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` := v5 @kind boolean;
  #L1b0a08.  goto L1b0866;
}
procedure `retrofit2.ParameterHandler` `parseParameter`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `int` v7 @name `p`, `java.lang.reflect.Type` v8 @kind object @name `parameterType`, `java.lang.annotation.Annotation`[] v9 @kind object @name `annotations`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b0a1c.  v4:= 0I;
  #L1b0a1e.  v2:= 0I;
  #L1b0a20.  v5:= length @variable v9;
  #L1b0a22.  v3:= v4;
  #L1b0a24.  if v3 >= v5 then goto L1b0a58;
  #L1b0a28.  v0:= v9[v3] @kind object;
  #L1b0a2c.  call temp:= `parseParameterAnnotation`(v6, v7, v8, v9, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L1b0a32.  v1:= temp @kind object;
  #L1b0a34.  if v1 != 0 then goto L1b0a3e;
  #L1b0a38.  v3:= v3 + 1;
  #L1b0a3c.  goto L1b0a24;
  #L1b0a3e.  if v2 == 0 then goto L1b0a54;
  #L1b0a42.  v3:= "Multiple Retrofit annotations found, only one allowed." @kind object;
  #L1b0a46.  v4:= new `java.lang.Object`[v4];
  #L1b0a4a.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0a50.  v3:= temp @kind object;
  #L1b0a52.  throw v3;
  #L1b0a54.  v2:= v1 @kind object;
  #L1b0a56.  goto L1b0a38;
  #L1b0a58.  if v2 != 0 then goto L1b0a6e;
  #L1b0a5c.  v3:= "No Retrofit annotation found." @kind object;
  #L1b0a60.  v4:= new `java.lang.Object`[v4];
  #L1b0a64.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0a6a.  v3:= temp @kind object;
  #L1b0a6c.  throw v3;
  #L1b0a6e.  return v2 @kind object;
}
procedure `retrofit2.ParameterHandler` `parseParameterAnnotation`(`retrofit2.ServiceMethod$Builder` v30 @kind this, `int` v31 @name `p`, `java.lang.reflect.Type` v32 @kind object @name `type`, `java.lang.annotation.Annotation`[] v33 @kind object @name `annotations`, `java.lang.annotation.Annotation` v34 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L1b0a80.  v0:= v34 @kind object;
  #L1b0a84.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Url` @kind boolean;
  #L1b0a88.  v26:= v0;
  #L1b0a8c.  if v26 == 0 then goto L1b0c42;
  #L1b0a90.  v0:= v30 @kind object;
  #L1b0a94.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b0a98.  v26:= v0;
  #L1b0a9c.  if v26 == 0 then goto L1b0ace;
  #L1b0aa0.  v26:= "Multiple @Url method annotations found." @kind object;
  #L1b0aa4.  v27:= 0I;
  #L1b0aa8.  v0:= v27;
  #L1b0aac.  v0:= new `java.lang.Object`[v0];
  #L1b0ab0.  v27:= v0 @kind object;
  #L1b0ab4.  v0:= v30 @kind object;
  #L1b0ab8.  v1:= v31;
  #L1b0abc.  v2:= v26 @kind object;
  #L1b0ac0.  v3:= v27 @kind object;
  #L1b0ac4.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0aca.  v26:= temp @kind object;
  #L1b0acc.  throw v26;
  #L1b0ace.  v0:= v30 @kind object;
  #L1b0ad2.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` @kind boolean;
  #L1b0ad6.  v26:= v0;
  #L1b0ada.  if v26 == 0 then goto L1b0b0c;
  #L1b0ade.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L1b0ae2.  v27:= 0I;
  #L1b0ae6.  v0:= v27;
  #L1b0aea.  v0:= new `java.lang.Object`[v0];
  #L1b0aee.  v27:= v0 @kind object;
  #L1b0af2.  v0:= v30 @kind object;
  #L1b0af6.  v1:= v31;
  #L1b0afa.  v2:= v26 @kind object;
  #L1b0afe.  v3:= v27 @kind object;
  #L1b0b02.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0b08.  v26:= temp @kind object;
  #L1b0b0a.  throw v26;
  #L1b0b0c.  v0:= v30 @kind object;
  #L1b0b10.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L1b0b14.  v26:= v0;
  #L1b0b18.  if v26 == 0 then goto L1b0b4a;
  #L1b0b1c.  v26:= "A @Url parameter must not come after a @Query" @kind object;
  #L1b0b20.  v27:= 0I;
  #L1b0b24.  v0:= v27;
  #L1b0b28.  v0:= new `java.lang.Object`[v0];
  #L1b0b2c.  v27:= v0 @kind object;
  #L1b0b30.  v0:= v30 @kind object;
  #L1b0b34.  v1:= v31;
  #L1b0b38.  v2:= v26 @kind object;
  #L1b0b3c.  v3:= v27 @kind object;
  #L1b0b40.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0b46.  v26:= temp @kind object;
  #L1b0b48.  throw v26;
  #L1b0b4a.  v0:= v30 @kind object;
  #L1b0b4e.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b0b52.  v26:= v0 @kind object;
  #L1b0b56.  if v26 == 0 then goto L1b0b9c;
  #L1b0b5a.  v26:= "@Url cannot be used with @%s URL" @kind object;
  #L1b0b5e.  v27:= 1I;
  #L1b0b62.  v0:= v27;
  #L1b0b66.  v0:= new `java.lang.Object`[v0];
  #L1b0b6a.  v27:= v0 @kind object;
  #L1b0b6e.  v28:= 0I;
  #L1b0b72.  v0:= v30 @kind object;
  #L1b0b76.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b0b7a.  v29:= v0 @kind object;
  #L1b0b7e.  v27[v28]:= v29 @kind object;
  #L1b0b82.  v0:= v30 @kind object;
  #L1b0b86.  v1:= v31;
  #L1b0b8a.  v2:= v26 @kind object;
  #L1b0b8e.  v3:= v27 @kind object;
  #L1b0b92.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0b98.  v26:= temp @kind object;
  #L1b0b9a.  throw v26;
  #L1b0b9c.  v26:= 1I;
  #L1b0ba0.  v0:= v26;
  #L1b0ba4.  v1:= v30 @kind object;
  #L1b0ba8.  v1.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` := v0 @kind boolean;
  #L1b0bac.  v26:= constclass @type ^`okhttp3.HttpUrl` @kind object;
  #L1b0bb0.  v0:= v32 @kind object;
  #L1b0bb4.  v1:= v26 @kind object;
  #L1b0bb8.  if v0 == v1 then goto L1b0c08;
  #L1b0bbc.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b0bc0.  v0:= v32 @kind object;
  #L1b0bc4.  v1:= v26 @kind object;
  #L1b0bc8.  if v0 == v1 then goto L1b0c08;
  #L1b0bcc.  v26:= constclass @type ^`java.net.URI` @kind object;
  #L1b0bd0.  v0:= v32 @kind object;
  #L1b0bd4.  v1:= v26 @kind object;
  #L1b0bd8.  if v0 == v1 then goto L1b0c08;
  #L1b0bdc.  v0:= v32 @kind object;
  #L1b0be0.  v0:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L1b0be4.  v26:= v0;
  #L1b0be8.  if v26 == 0 then goto L1b0c14;
  #L1b0bec.  v26:= "android.net.Uri" @kind object;
  #L1b0bf0.  v32:= (`java.lang.Class`) v32 @kind object;
  #L1b0bf4.  call temp:= `getName`(v32) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b0bfa.  v27:= temp @kind object;
  #L1b0bfc.  call temp:= `equals`(v26, v27) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b0c02.  v26:= temp;
  #L1b0c04.  if v26 == 0 then goto L1b0c14;
  #L1b0c08.  v26:= new `retrofit2.ParameterHandler$RelativeUrl`;
  #L1b0c0c.  call `<init>`(v26) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.<init>:()V` @kind direct;
  #L1b0c12.  return v26 @kind object;
  #L1b0c14.  v26:= "@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type." @kind object;
  #L1b0c18.  v27:= 0I;
  #L1b0c1c.  v0:= v27;
  #L1b0c20.  v0:= new `java.lang.Object`[v0];
  #L1b0c24.  v27:= v0 @kind object;
  #L1b0c28.  v0:= v30 @kind object;
  #L1b0c2c.  v1:= v31;
  #L1b0c30.  v2:= v26 @kind object;
  #L1b0c34.  v3:= v27 @kind object;
  #L1b0c38.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0c3e.  v26:= temp @kind object;
  #L1b0c40.  throw v26;
  #L1b0c42.  v0:= v34 @kind object;
  #L1b0c46.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Path` @kind boolean;
  #L1b0c4a.  v26:= v0;
  #L1b0c4e.  if v26 == 0 then goto L1b0d8c;
  #L1b0c52.  v0:= v30 @kind object;
  #L1b0c56.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L1b0c5a.  v26:= v0;
  #L1b0c5e.  if v26 == 0 then goto L1b0c90;
  #L1b0c62.  v26:= "A @Path parameter must not come after a @Query." @kind object;
  #L1b0c66.  v27:= 0I;
  #L1b0c6a.  v0:= v27;
  #L1b0c6e.  v0:= new `java.lang.Object`[v0];
  #L1b0c72.  v27:= v0 @kind object;
  #L1b0c76.  v0:= v30 @kind object;
  #L1b0c7a.  v1:= v31;
  #L1b0c7e.  v2:= v26 @kind object;
  #L1b0c82.  v3:= v27 @kind object;
  #L1b0c86.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0c8c.  v26:= temp @kind object;
  #L1b0c8e.  throw v26;
  #L1b0c90.  v0:= v30 @kind object;
  #L1b0c94.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b0c98.  v26:= v0;
  #L1b0c9c.  if v26 == 0 then goto L1b0cce;
  #L1b0ca0.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L1b0ca4.  v27:= 0I;
  #L1b0ca8.  v0:= v27;
  #L1b0cac.  v0:= new `java.lang.Object`[v0];
  #L1b0cb0.  v27:= v0 @kind object;
  #L1b0cb4.  v0:= v30 @kind object;
  #L1b0cb8.  v1:= v31;
  #L1b0cbc.  v2:= v26 @kind object;
  #L1b0cc0.  v3:= v27 @kind object;
  #L1b0cc4.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0cca.  v26:= temp @kind object;
  #L1b0ccc.  throw v26;
  #L1b0cce.  v0:= v30 @kind object;
  #L1b0cd2.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b0cd6.  v26:= v0 @kind object;
  #L1b0cda.  if v26 != 0 then goto L1b0d20;
  #L1b0cde.  v26:= "@Path can only be used with relative url on @%s" @kind object;
  #L1b0ce2.  v27:= 1I;
  #L1b0ce6.  v0:= v27;
  #L1b0cea.  v0:= new `java.lang.Object`[v0];
  #L1b0cee.  v27:= v0 @kind object;
  #L1b0cf2.  v28:= 0I;
  #L1b0cf6.  v0:= v30 @kind object;
  #L1b0cfa.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b0cfe.  v29:= v0 @kind object;
  #L1b0d02.  v27[v28]:= v29 @kind object;
  #L1b0d06.  v0:= v30 @kind object;
  #L1b0d0a.  v1:= v31;
  #L1b0d0e.  v2:= v26 @kind object;
  #L1b0d12.  v3:= v27 @kind object;
  #L1b0d16.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0d1c.  v26:= temp @kind object;
  #L1b0d1e.  throw v26;
  #L1b0d20.  v26:= 1I;
  #L1b0d24.  v0:= v26;
  #L1b0d28.  v1:= v30 @kind object;
  #L1b0d2c.  v1.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` := v0 @kind boolean;
  #L1b0d30.  v20:= v34 @kind object;
  #L1b0d34.  v20:= (`retrofit2.http.Path`) v20 @kind object;
  #L1b0d38.  call temp:= `value`(v20) @signature `Lretrofit2/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L1b0d3e.  v15:= temp @kind object;
  #L1b0d40.  v0:= v30 @kind object;
  #L1b0d44.  v1:= v31;
  #L1b0d48.  call `validatePathName`(v0, v1, v15) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @kind direct;
  #L1b0d4e.  v0:= v30 @kind object;
  #L1b0d52.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0d56.  v26:= v0 @kind object;
  #L1b0d5a.  v0:= v26 @kind object;
  #L1b0d5e.  v1:= v32 @kind object;
  #L1b0d62.  v2:= v33 @kind object;
  #L1b0d66.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0d6c.  v5:= temp @kind object;
  #L1b0d6e.  v26:= new `retrofit2.ParameterHandler$Path`;
  #L1b0d72.  call temp:= `encoded`(v20) @signature `Lretrofit2/http/Path;.encoded:()Z` @kind interface;
  #L1b0d78.  v27:= temp;
  #L1b0d7a.  v0:= v26 @kind object;
  #L1b0d7e.  v1:= v27;
  #L1b0d82.  call `<init>`(v0, v15, v5, v1) @signature `Lretrofit2/ParameterHandler$Path;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0d88.  goto L1b0c12;
  #L1b0d8c.  v0:= v34 @kind object;
  #L1b0d90.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Query` @kind boolean;
  #L1b0d94.  v26:= v0;
  #L1b0d98.  if v26 == 0 then goto L1b0f3e;
  #L1b0d9c.  v21:= v34 @kind object;
  #L1b0da0.  v21:= (`retrofit2.http.Query`) v21 @kind object;
  #L1b0da4.  call temp:= `value`(v21) @signature `Lretrofit2/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L1b0daa.  v15:= temp @kind object;
  #L1b0dac.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/Query;.encoded:()Z` @kind interface;
  #L1b0db2.  v8:= temp;
  #L1b0db4.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b0dba.  v22:= temp @kind object;
  #L1b0dbc.  v26:= 1I;
  #L1b0dc0.  v0:= v26;
  #L1b0dc4.  v1:= v30 @kind object;
  #L1b0dc8.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L1b0dcc.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b0dd0.  v0:= v26 @kind object;
  #L1b0dd4.  v1:= v22 @kind object;
  #L1b0dd8.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b0dde.  v26:= temp;
  #L1b0de0.  if v26 == 0 then goto L1b0eba;
  #L1b0de4.  v0:= v32 @kind object;
  #L1b0de8.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0dec.  v26:= v0;
  #L1b0df0.  if v26 != 0 then goto L1b0e68;
  #L1b0df4.  v26:= new `java.lang.StringBuilder`;
  #L1b0df8.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0dfe.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0e04.  v27:= temp @kind object;
  #L1b0e06.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0e0c.  v26:= temp @kind object;
  #L1b0e0e.  v27:= " must include generic type (e.g., " @kind object;
  #L1b0e12.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0e18.  v26:= temp @kind object;
  #L1b0e1a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0e20.  v27:= temp @kind object;
  #L1b0e22.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0e28.  v26:= temp @kind object;
  #L1b0e2a.  v27:= "<String>)" @kind object;
  #L1b0e2e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0e34.  v26:= temp @kind object;
  #L1b0e36.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0e3c.  v26:= temp @kind object;
  #L1b0e3e.  v27:= 0I;
  #L1b0e42.  v0:= v27;
  #L1b0e46.  v0:= new `java.lang.Object`[v0];
  #L1b0e4a.  v27:= v0 @kind object;
  #L1b0e4e.  v0:= v30 @kind object;
  #L1b0e52.  v1:= v31;
  #L1b0e56.  v2:= v26 @kind object;
  #L1b0e5a.  v3:= v27 @kind object;
  #L1b0e5e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b0e64.  v26:= temp @kind object;
  #L1b0e66.  throw v26;
  #L1b0e68.  v16:= v32 @kind object;
  #L1b0e6c.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b0e70.  v26:= 0I;
  #L1b0e74.  v0:= v26;
  #L1b0e78.  v1:= v16 @kind object;
  #L1b0e7c.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b0e82.  v12:= temp @kind object;
  #L1b0e84.  v0:= v30 @kind object;
  #L1b0e88.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0e8c.  v26:= v0 @kind object;
  #L1b0e90.  v0:= v26 @kind object;
  #L1b0e94.  v1:= v33 @kind object;
  #L1b0e98.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0e9e.  v5:= temp @kind object;
  #L1b0ea0.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b0ea4.  v0:= v26 @kind object;
  #L1b0ea8.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0eae.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Query;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b0eb4.  v26:= temp @kind object;
  #L1b0eb6.  goto L1b0c12;
  #L1b0eba.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b0ec0.  v26:= temp;
  #L1b0ec2.  if v26 == 0 then goto L1b0f0c;
  #L1b0ec6.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b0ecc.  v26:= temp @kind object;
  #L1b0ece.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b0ed4.  v4:= temp @kind object;
  #L1b0ed6.  v0:= v30 @kind object;
  #L1b0eda.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0ede.  v26:= v0 @kind object;
  #L1b0ee2.  v0:= v26 @kind object;
  #L1b0ee6.  v1:= v33 @kind object;
  #L1b0eea.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0ef0.  v5:= temp @kind object;
  #L1b0ef2.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b0ef6.  v0:= v26 @kind object;
  #L1b0efa.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0f00.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Query;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b0f06.  v26:= temp @kind object;
  #L1b0f08.  goto L1b0c12;
  #L1b0f0c.  v0:= v30 @kind object;
  #L1b0f10.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b0f14.  v26:= v0 @kind object;
  #L1b0f18.  v0:= v26 @kind object;
  #L1b0f1c.  v1:= v32 @kind object;
  #L1b0f20.  v2:= v33 @kind object;
  #L1b0f24.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b0f2a.  v5:= temp @kind object;
  #L1b0f2c.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b0f30.  v0:= v26 @kind object;
  #L1b0f34.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b0f3a.  goto L1b0c12;
  #L1b0f3e.  v0:= v34 @kind object;
  #L1b0f42.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryName` @kind boolean;
  #L1b0f46.  v26:= v0;
  #L1b0f4a.  if v26 == 0 then goto L1b10e8;
  #L1b0f4e.  v21:= v34 @kind object;
  #L1b0f52.  v21:= (`retrofit2.http.QueryName`) v21 @kind object;
  #L1b0f56.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/QueryName;.encoded:()Z` @kind interface;
  #L1b0f5c.  v8:= temp;
  #L1b0f5e.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b0f64.  v22:= temp @kind object;
  #L1b0f66.  v26:= 1I;
  #L1b0f6a.  v0:= v26;
  #L1b0f6e.  v1:= v30 @kind object;
  #L1b0f72.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L1b0f76.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b0f7a.  v0:= v26 @kind object;
  #L1b0f7e.  v1:= v22 @kind object;
  #L1b0f82.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b0f88.  v26:= temp;
  #L1b0f8a.  if v26 == 0 then goto L1b1064;
  #L1b0f8e.  v0:= v32 @kind object;
  #L1b0f92.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b0f96.  v26:= v0;
  #L1b0f9a.  if v26 != 0 then goto L1b1012;
  #L1b0f9e.  v26:= new `java.lang.StringBuilder`;
  #L1b0fa2.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0fa8.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0fae.  v27:= temp @kind object;
  #L1b0fb0.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0fb6.  v26:= temp @kind object;
  #L1b0fb8.  v27:= " must include generic type (e.g., " @kind object;
  #L1b0fbc.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0fc2.  v26:= temp @kind object;
  #L1b0fc4.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b0fca.  v27:= temp @kind object;
  #L1b0fcc.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0fd2.  v26:= temp @kind object;
  #L1b0fd4.  v27:= "<String>)" @kind object;
  #L1b0fd8.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0fde.  v26:= temp @kind object;
  #L1b0fe0.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0fe6.  v26:= temp @kind object;
  #L1b0fe8.  v27:= 0I;
  #L1b0fec.  v0:= v27;
  #L1b0ff0.  v0:= new `java.lang.Object`[v0];
  #L1b0ff4.  v27:= v0 @kind object;
  #L1b0ff8.  v0:= v30 @kind object;
  #L1b0ffc.  v1:= v31;
  #L1b1000.  v2:= v26 @kind object;
  #L1b1004.  v3:= v27 @kind object;
  #L1b1008.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b100e.  v26:= temp @kind object;
  #L1b1010.  throw v26;
  #L1b1012.  v16:= v32 @kind object;
  #L1b1016.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b101a.  v26:= 0I;
  #L1b101e.  v0:= v26;
  #L1b1022.  v1:= v16 @kind object;
  #L1b1026.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b102c.  v12:= temp @kind object;
  #L1b102e.  v0:= v30 @kind object;
  #L1b1032.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1036.  v26:= v0 @kind object;
  #L1b103a.  v0:= v26 @kind object;
  #L1b103e.  v1:= v33 @kind object;
  #L1b1042.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1048.  v5:= temp @kind object;
  #L1b104a.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b104e.  v0:= v26 @kind object;
  #L1b1052.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b1058.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$QueryName;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b105e.  v26:= temp @kind object;
  #L1b1060.  goto L1b0c12;
  #L1b1064.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b106a.  v26:= temp;
  #L1b106c.  if v26 == 0 then goto L1b10b6;
  #L1b1070.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b1076.  v26:= temp @kind object;
  #L1b1078.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b107e.  v4:= temp @kind object;
  #L1b1080.  v0:= v30 @kind object;
  #L1b1084.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1088.  v26:= v0 @kind object;
  #L1b108c.  v0:= v26 @kind object;
  #L1b1090.  v1:= v33 @kind object;
  #L1b1094.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b109a.  v5:= temp @kind object;
  #L1b109c.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b10a0.  v0:= v26 @kind object;
  #L1b10a4.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b10aa.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$QueryName;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b10b0.  v26:= temp @kind object;
  #L1b10b2.  goto L1b0c12;
  #L1b10b6.  v0:= v30 @kind object;
  #L1b10ba.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b10be.  v26:= v0 @kind object;
  #L1b10c2.  v0:= v26 @kind object;
  #L1b10c6.  v1:= v32 @kind object;
  #L1b10ca.  v2:= v33 @kind object;
  #L1b10ce.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b10d4.  v5:= temp @kind object;
  #L1b10d6.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b10da.  v0:= v26 @kind object;
  #L1b10de.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b10e4.  goto L1b0c12;
  #L1b10e8.  v0:= v34 @kind object;
  #L1b10ec.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryMap` @kind boolean;
  #L1b10f0.  v26:= v0;
  #L1b10f4.  if v26 == 0 then goto L1b126e;
  #L1b10f8.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b10fe.  v22:= temp @kind object;
  #L1b1100.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b1104.  v0:= v26 @kind object;
  #L1b1108.  v1:= v22 @kind object;
  #L1b110c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1112.  v26:= temp;
  #L1b1114.  if v26 != 0 then goto L1b1146;
  #L1b1118.  v26:= "@QueryMap parameter type must be Map." @kind object;
  #L1b111c.  v27:= 0I;
  #L1b1120.  v0:= v27;
  #L1b1124.  v0:= new `java.lang.Object`[v0];
  #L1b1128.  v27:= v0 @kind object;
  #L1b112c.  v0:= v30 @kind object;
  #L1b1130.  v1:= v31;
  #L1b1134.  v2:= v26 @kind object;
  #L1b1138.  v3:= v27 @kind object;
  #L1b113c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1142.  v26:= temp @kind object;
  #L1b1144.  throw v26;
  #L1b1146.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b114a.  v0:= v32 @kind object;
  #L1b114e.  v1:= v22 @kind object;
  #L1b1152.  v2:= v26 @kind object;
  #L1b1156.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b115c.  v14:= temp @kind object;
  #L1b115e.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1162.  v26:= v0;
  #L1b1166.  if v26 != 0 then goto L1b1198;
  #L1b116a.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b116e.  v27:= 0I;
  #L1b1172.  v0:= v27;
  #L1b1176.  v0:= new `java.lang.Object`[v0];
  #L1b117a.  v27:= v0 @kind object;
  #L1b117e.  v0:= v30 @kind object;
  #L1b1182.  v1:= v31;
  #L1b1186.  v2:= v26 @kind object;
  #L1b118a.  v3:= v27 @kind object;
  #L1b118e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1194.  v26:= temp @kind object;
  #L1b1196.  throw v26;
  #L1b1198.  v16:= v14 @kind object;
  #L1b119c.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b11a0.  v26:= 0I;
  #L1b11a4.  v0:= v26;
  #L1b11a8.  v1:= v16 @kind object;
  #L1b11ac.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b11b2.  v13:= temp @kind object;
  #L1b11b4.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b11b8.  v0:= v26 @kind object;
  #L1b11bc.  if v0 == v13 then goto L1b1214;
  #L1b11c0.  v26:= new `java.lang.StringBuilder`;
  #L1b11c4.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b11ca.  v27:= "@QueryMap keys must be of type String: " @kind object;
  #L1b11ce.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b11d4.  v26:= temp @kind object;
  #L1b11d6.  v0:= v26 @kind object;
  #L1b11da.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b11e0.  v26:= temp @kind object;
  #L1b11e2.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b11e8.  v26:= temp @kind object;
  #L1b11ea.  v27:= 0I;
  #L1b11ee.  v0:= v27;
  #L1b11f2.  v0:= new `java.lang.Object`[v0];
  #L1b11f6.  v27:= v0 @kind object;
  #L1b11fa.  v0:= v30 @kind object;
  #L1b11fe.  v1:= v31;
  #L1b1202.  v2:= v26 @kind object;
  #L1b1206.  v3:= v27 @kind object;
  #L1b120a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1210.  v26:= temp @kind object;
  #L1b1212.  throw v26;
  #L1b1214.  v26:= 1I;
  #L1b1218.  v0:= v26;
  #L1b121c.  v1:= v16 @kind object;
  #L1b1220.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1226.  v25:= temp @kind object;
  #L1b1228.  v0:= v30 @kind object;
  #L1b122c.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1230.  v26:= v0 @kind object;
  #L1b1234.  v0:= v26 @kind object;
  #L1b1238.  v1:= v25 @kind object;
  #L1b123c.  v2:= v33 @kind object;
  #L1b1240.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1246.  v23:= temp @kind object;
  #L1b1248.  v26:= new `retrofit2.ParameterHandler$QueryMap`;
  #L1b124c.  v34:= (`retrofit2.http.QueryMap`) v34 @kind object;
  #L1b1250.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/QueryMap;.encoded:()Z` @kind interface;
  #L1b1256.  v27:= temp;
  #L1b1258.  v0:= v26 @kind object;
  #L1b125c.  v1:= v23 @kind object;
  #L1b1260.  v2:= v27;
  #L1b1264.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b126a.  goto L1b0c12;
  #L1b126e.  v0:= v34 @kind object;
  #L1b1272.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Header` @kind boolean;
  #L1b1276.  v26:= v0;
  #L1b127a.  if v26 == 0 then goto L1b1408;
  #L1b127e.  v10:= v34 @kind object;
  #L1b1282.  v10:= (`retrofit2.http.Header`) v10 @kind object;
  #L1b1286.  call temp:= `value`(v10) @signature `Lretrofit2/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L1b128c.  v15:= temp @kind object;
  #L1b128e.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1294.  v22:= temp @kind object;
  #L1b1296.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b129a.  v0:= v26 @kind object;
  #L1b129e.  v1:= v22 @kind object;
  #L1b12a2.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b12a8.  v26:= temp;
  #L1b12aa.  if v26 == 0 then goto L1b1384;
  #L1b12ae.  v0:= v32 @kind object;
  #L1b12b2.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b12b6.  v26:= v0;
  #L1b12ba.  if v26 != 0 then goto L1b1332;
  #L1b12be.  v26:= new `java.lang.StringBuilder`;
  #L1b12c2.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b12c8.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b12ce.  v27:= temp @kind object;
  #L1b12d0.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12d6.  v26:= temp @kind object;
  #L1b12d8.  v27:= " must include generic type (e.g., " @kind object;
  #L1b12dc.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12e2.  v26:= temp @kind object;
  #L1b12e4.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b12ea.  v27:= temp @kind object;
  #L1b12ec.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12f2.  v26:= temp @kind object;
  #L1b12f4.  v27:= "<String>)" @kind object;
  #L1b12f8.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12fe.  v26:= temp @kind object;
  #L1b1300.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1306.  v26:= temp @kind object;
  #L1b1308.  v27:= 0I;
  #L1b130c.  v0:= v27;
  #L1b1310.  v0:= new `java.lang.Object`[v0];
  #L1b1314.  v27:= v0 @kind object;
  #L1b1318.  v0:= v30 @kind object;
  #L1b131c.  v1:= v31;
  #L1b1320.  v2:= v26 @kind object;
  #L1b1324.  v3:= v27 @kind object;
  #L1b1328.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b132e.  v26:= temp @kind object;
  #L1b1330.  throw v26;
  #L1b1332.  v16:= v32 @kind object;
  #L1b1336.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b133a.  v26:= 0I;
  #L1b133e.  v0:= v26;
  #L1b1342.  v1:= v16 @kind object;
  #L1b1346.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b134c.  v12:= temp @kind object;
  #L1b134e.  v0:= v30 @kind object;
  #L1b1352.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1356.  v26:= v0 @kind object;
  #L1b135a.  v0:= v26 @kind object;
  #L1b135e.  v1:= v33 @kind object;
  #L1b1362.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1368.  v5:= temp @kind object;
  #L1b136a.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b136e.  v0:= v26 @kind object;
  #L1b1372.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b1378.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Header;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b137e.  v26:= temp @kind object;
  #L1b1380.  goto L1b0c12;
  #L1b1384.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b138a.  v26:= temp;
  #L1b138c.  if v26 == 0 then goto L1b13d6;
  #L1b1390.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b1396.  v26:= temp @kind object;
  #L1b1398.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b139e.  v4:= temp @kind object;
  #L1b13a0.  v0:= v30 @kind object;
  #L1b13a4.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b13a8.  v26:= v0 @kind object;
  #L1b13ac.  v0:= v26 @kind object;
  #L1b13b0.  v1:= v33 @kind object;
  #L1b13b4.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b13ba.  v5:= temp @kind object;
  #L1b13bc.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b13c0.  v0:= v26 @kind object;
  #L1b13c4.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b13ca.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Header;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b13d0.  v26:= temp @kind object;
  #L1b13d2.  goto L1b0c12;
  #L1b13d6.  v0:= v30 @kind object;
  #L1b13da.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b13de.  v26:= v0 @kind object;
  #L1b13e2.  v0:= v26 @kind object;
  #L1b13e6.  v1:= v32 @kind object;
  #L1b13ea.  v2:= v33 @kind object;
  #L1b13ee.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b13f4.  v5:= temp @kind object;
  #L1b13f6.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b13fa.  v0:= v26 @kind object;
  #L1b13fe.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b1404.  goto L1b0c12;
  #L1b1408.  v0:= v34 @kind object;
  #L1b140c.  v0:= instanceof @variable v0 @type ^`retrofit2.http.HeaderMap` @kind boolean;
  #L1b1410.  v26:= v0;
  #L1b1414.  if v26 == 0 then goto L1b157e;
  #L1b1418.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b141e.  v22:= temp @kind object;
  #L1b1420.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b1424.  v0:= v26 @kind object;
  #L1b1428.  v1:= v22 @kind object;
  #L1b142c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1432.  v26:= temp;
  #L1b1434.  if v26 != 0 then goto L1b1466;
  #L1b1438.  v26:= "@HeaderMap parameter type must be Map." @kind object;
  #L1b143c.  v27:= 0I;
  #L1b1440.  v0:= v27;
  #L1b1444.  v0:= new `java.lang.Object`[v0];
  #L1b1448.  v27:= v0 @kind object;
  #L1b144c.  v0:= v30 @kind object;
  #L1b1450.  v1:= v31;
  #L1b1454.  v2:= v26 @kind object;
  #L1b1458.  v3:= v27 @kind object;
  #L1b145c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1462.  v26:= temp @kind object;
  #L1b1464.  throw v26;
  #L1b1466.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b146a.  v0:= v32 @kind object;
  #L1b146e.  v1:= v22 @kind object;
  #L1b1472.  v2:= v26 @kind object;
  #L1b1476.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b147c.  v14:= temp @kind object;
  #L1b147e.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1482.  v26:= v0;
  #L1b1486.  if v26 != 0 then goto L1b14b8;
  #L1b148a.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b148e.  v27:= 0I;
  #L1b1492.  v0:= v27;
  #L1b1496.  v0:= new `java.lang.Object`[v0];
  #L1b149a.  v27:= v0 @kind object;
  #L1b149e.  v0:= v30 @kind object;
  #L1b14a2.  v1:= v31;
  #L1b14a6.  v2:= v26 @kind object;
  #L1b14aa.  v3:= v27 @kind object;
  #L1b14ae.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b14b4.  v26:= temp @kind object;
  #L1b14b6.  throw v26;
  #L1b14b8.  v16:= v14 @kind object;
  #L1b14bc.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b14c0.  v26:= 0I;
  #L1b14c4.  v0:= v26;
  #L1b14c8.  v1:= v16 @kind object;
  #L1b14cc.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b14d2.  v13:= temp @kind object;
  #L1b14d4.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b14d8.  v0:= v26 @kind object;
  #L1b14dc.  if v0 == v13 then goto L1b1534;
  #L1b14e0.  v26:= new `java.lang.StringBuilder`;
  #L1b14e4.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b14ea.  v27:= "@HeaderMap keys must be of type String: " @kind object;
  #L1b14ee.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b14f4.  v26:= temp @kind object;
  #L1b14f6.  v0:= v26 @kind object;
  #L1b14fa.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1500.  v26:= temp @kind object;
  #L1b1502.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1508.  v26:= temp @kind object;
  #L1b150a.  v27:= 0I;
  #L1b150e.  v0:= v27;
  #L1b1512.  v0:= new `java.lang.Object`[v0];
  #L1b1516.  v27:= v0 @kind object;
  #L1b151a.  v0:= v30 @kind object;
  #L1b151e.  v1:= v31;
  #L1b1522.  v2:= v26 @kind object;
  #L1b1526.  v3:= v27 @kind object;
  #L1b152a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1530.  v26:= temp @kind object;
  #L1b1532.  throw v26;
  #L1b1534.  v26:= 1I;
  #L1b1538.  v0:= v26;
  #L1b153c.  v1:= v16 @kind object;
  #L1b1540.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1546.  v25:= temp @kind object;
  #L1b1548.  v0:= v30 @kind object;
  #L1b154c.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1550.  v26:= v0 @kind object;
  #L1b1554.  v0:= v26 @kind object;
  #L1b1558.  v1:= v25 @kind object;
  #L1b155c.  v2:= v33 @kind object;
  #L1b1560.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1566.  v23:= temp @kind object;
  #L1b1568.  v26:= new `retrofit2.ParameterHandler$HeaderMap`;
  #L1b156c.  v0:= v26 @kind object;
  #L1b1570.  v1:= v23 @kind object;
  #L1b1574.  call `<init>`(v0, v1) @signature `Lretrofit2/ParameterHandler$HeaderMap;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1b157a.  goto L1b0c12;
  #L1b157e.  v0:= v34 @kind object;
  #L1b1582.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Field` @kind boolean;
  #L1b1586.  v26:= v0;
  #L1b158a.  if v26 == 0 then goto L1b176e;
  #L1b158e.  v0:= v30 @kind object;
  #L1b1592.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b1596.  v26:= v0;
  #L1b159a.  if v26 != 0 then goto L1b15cc;
  #L1b159e.  v26:= "@Field parameters can only be used with form encoding." @kind object;
  #L1b15a2.  v27:= 0I;
  #L1b15a6.  v0:= v27;
  #L1b15aa.  v0:= new `java.lang.Object`[v0];
  #L1b15ae.  v27:= v0 @kind object;
  #L1b15b2.  v0:= v30 @kind object;
  #L1b15b6.  v1:= v31;
  #L1b15ba.  v2:= v26 @kind object;
  #L1b15be.  v3:= v27 @kind object;
  #L1b15c2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b15c8.  v26:= temp @kind object;
  #L1b15ca.  throw v26;
  #L1b15cc.  v9:= v34 @kind object;
  #L1b15d0.  v9:= (`retrofit2.http.Field`) v9 @kind object;
  #L1b15d4.  call temp:= `value`(v9) @signature `Lretrofit2/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L1b15da.  v15:= temp @kind object;
  #L1b15dc.  call temp:= `encoded`(v9) @signature `Lretrofit2/http/Field;.encoded:()Z` @kind interface;
  #L1b15e2.  v8:= temp;
  #L1b15e4.  v26:= 1I;
  #L1b15e8.  v0:= v26;
  #L1b15ec.  v1:= v30 @kind object;
  #L1b15f0.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L1b15f4.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b15fa.  v22:= temp @kind object;
  #L1b15fc.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b1600.  v0:= v26 @kind object;
  #L1b1604.  v1:= v22 @kind object;
  #L1b1608.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b160e.  v26:= temp;
  #L1b1610.  if v26 == 0 then goto L1b16ea;
  #L1b1614.  v0:= v32 @kind object;
  #L1b1618.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b161c.  v26:= v0;
  #L1b1620.  if v26 != 0 then goto L1b1698;
  #L1b1624.  v26:= new `java.lang.StringBuilder`;
  #L1b1628.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b162e.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1634.  v27:= temp @kind object;
  #L1b1636.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b163c.  v26:= temp @kind object;
  #L1b163e.  v27:= " must include generic type (e.g., " @kind object;
  #L1b1642.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1648.  v26:= temp @kind object;
  #L1b164a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1650.  v27:= temp @kind object;
  #L1b1652.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1658.  v26:= temp @kind object;
  #L1b165a.  v27:= "<String>)" @kind object;
  #L1b165e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1664.  v26:= temp @kind object;
  #L1b1666.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b166c.  v26:= temp @kind object;
  #L1b166e.  v27:= 0I;
  #L1b1672.  v0:= v27;
  #L1b1676.  v0:= new `java.lang.Object`[v0];
  #L1b167a.  v27:= v0 @kind object;
  #L1b167e.  v0:= v30 @kind object;
  #L1b1682.  v1:= v31;
  #L1b1686.  v2:= v26 @kind object;
  #L1b168a.  v3:= v27 @kind object;
  #L1b168e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1694.  v26:= temp @kind object;
  #L1b1696.  throw v26;
  #L1b1698.  v16:= v32 @kind object;
  #L1b169c.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b16a0.  v26:= 0I;
  #L1b16a4.  v0:= v26;
  #L1b16a8.  v1:= v16 @kind object;
  #L1b16ac.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b16b2.  v12:= temp @kind object;
  #L1b16b4.  v0:= v30 @kind object;
  #L1b16b8.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b16bc.  v26:= v0 @kind object;
  #L1b16c0.  v0:= v26 @kind object;
  #L1b16c4.  v1:= v33 @kind object;
  #L1b16c8.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b16ce.  v5:= temp @kind object;
  #L1b16d0.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b16d4.  v0:= v26 @kind object;
  #L1b16d8.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b16de.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Field;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b16e4.  v26:= temp @kind object;
  #L1b16e6.  goto L1b0c12;
  #L1b16ea.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b16f0.  v26:= temp;
  #L1b16f2.  if v26 == 0 then goto L1b173c;
  #L1b16f6.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b16fc.  v26:= temp @kind object;
  #L1b16fe.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b1704.  v4:= temp @kind object;
  #L1b1706.  v0:= v30 @kind object;
  #L1b170a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b170e.  v26:= v0 @kind object;
  #L1b1712.  v0:= v26 @kind object;
  #L1b1716.  v1:= v33 @kind object;
  #L1b171a.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1720.  v5:= temp @kind object;
  #L1b1722.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b1726.  v0:= v26 @kind object;
  #L1b172a.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b1730.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Field;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b1736.  v26:= temp @kind object;
  #L1b1738.  goto L1b0c12;
  #L1b173c.  v0:= v30 @kind object;
  #L1b1740.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1744.  v26:= v0 @kind object;
  #L1b1748.  v0:= v26 @kind object;
  #L1b174c.  v1:= v32 @kind object;
  #L1b1750.  v2:= v33 @kind object;
  #L1b1754.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b175a.  v5:= temp @kind object;
  #L1b175c.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b1760.  v0:= v26 @kind object;
  #L1b1764.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b176a.  goto L1b0c12;
  #L1b176e.  v0:= v34 @kind object;
  #L1b1772.  v0:= instanceof @variable v0 @type ^`retrofit2.http.FieldMap` @kind boolean;
  #L1b1776.  v26:= v0;
  #L1b177a.  if v26 == 0 then goto L1b1942;
  #L1b177e.  v0:= v30 @kind object;
  #L1b1782.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b1786.  v26:= v0;
  #L1b178a.  if v26 != 0 then goto L1b17bc;
  #L1b178e.  v26:= "@FieldMap parameters can only be used with form encoding." @kind object;
  #L1b1792.  v27:= 0I;
  #L1b1796.  v0:= v27;
  #L1b179a.  v0:= new `java.lang.Object`[v0];
  #L1b179e.  v27:= v0 @kind object;
  #L1b17a2.  v0:= v30 @kind object;
  #L1b17a6.  v1:= v31;
  #L1b17aa.  v2:= v26 @kind object;
  #L1b17ae.  v3:= v27 @kind object;
  #L1b17b2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b17b8.  v26:= temp @kind object;
  #L1b17ba.  throw v26;
  #L1b17bc.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b17c2.  v22:= temp @kind object;
  #L1b17c4.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b17c8.  v0:= v26 @kind object;
  #L1b17cc.  v1:= v22 @kind object;
  #L1b17d0.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b17d6.  v26:= temp;
  #L1b17d8.  if v26 != 0 then goto L1b180a;
  #L1b17dc.  v26:= "@FieldMap parameter type must be Map." @kind object;
  #L1b17e0.  v27:= 0I;
  #L1b17e4.  v0:= v27;
  #L1b17e8.  v0:= new `java.lang.Object`[v0];
  #L1b17ec.  v27:= v0 @kind object;
  #L1b17f0.  v0:= v30 @kind object;
  #L1b17f4.  v1:= v31;
  #L1b17f8.  v2:= v26 @kind object;
  #L1b17fc.  v3:= v27 @kind object;
  #L1b1800.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1806.  v26:= temp @kind object;
  #L1b1808.  throw v26;
  #L1b180a.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b180e.  v0:= v32 @kind object;
  #L1b1812.  v1:= v22 @kind object;
  #L1b1816.  v2:= v26 @kind object;
  #L1b181a.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1820.  v14:= temp @kind object;
  #L1b1822.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1826.  v26:= v0;
  #L1b182a.  if v26 != 0 then goto L1b185c;
  #L1b182e.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b1832.  v27:= 0I;
  #L1b1836.  v0:= v27;
  #L1b183a.  v0:= new `java.lang.Object`[v0];
  #L1b183e.  v27:= v0 @kind object;
  #L1b1842.  v0:= v30 @kind object;
  #L1b1846.  v1:= v31;
  #L1b184a.  v2:= v26 @kind object;
  #L1b184e.  v3:= v27 @kind object;
  #L1b1852.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1858.  v26:= temp @kind object;
  #L1b185a.  throw v26;
  #L1b185c.  v16:= v14 @kind object;
  #L1b1860.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b1864.  v26:= 0I;
  #L1b1868.  v0:= v26;
  #L1b186c.  v1:= v16 @kind object;
  #L1b1870.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1876.  v13:= temp @kind object;
  #L1b1878.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b187c.  v0:= v26 @kind object;
  #L1b1880.  if v0 == v13 then goto L1b18d8;
  #L1b1884.  v26:= new `java.lang.StringBuilder`;
  #L1b1888.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b188e.  v27:= "@FieldMap keys must be of type String: " @kind object;
  #L1b1892.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1898.  v26:= temp @kind object;
  #L1b189a.  v0:= v26 @kind object;
  #L1b189e.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b18a4.  v26:= temp @kind object;
  #L1b18a6.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b18ac.  v26:= temp @kind object;
  #L1b18ae.  v27:= 0I;
  #L1b18b2.  v0:= v27;
  #L1b18b6.  v0:= new `java.lang.Object`[v0];
  #L1b18ba.  v27:= v0 @kind object;
  #L1b18be.  v0:= v30 @kind object;
  #L1b18c2.  v1:= v31;
  #L1b18c6.  v2:= v26 @kind object;
  #L1b18ca.  v3:= v27 @kind object;
  #L1b18ce.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b18d4.  v26:= temp @kind object;
  #L1b18d6.  throw v26;
  #L1b18d8.  v26:= 1I;
  #L1b18dc.  v0:= v26;
  #L1b18e0.  v1:= v16 @kind object;
  #L1b18e4.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b18ea.  v25:= temp @kind object;
  #L1b18ec.  v0:= v30 @kind object;
  #L1b18f0.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b18f4.  v26:= v0 @kind object;
  #L1b18f8.  v0:= v26 @kind object;
  #L1b18fc.  v1:= v25 @kind object;
  #L1b1900.  v2:= v33 @kind object;
  #L1b1904.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b190a.  v23:= temp @kind object;
  #L1b190c.  v26:= 1I;
  #L1b1910.  v0:= v26;
  #L1b1914.  v1:= v30 @kind object;
  #L1b1918.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L1b191c.  v26:= new `retrofit2.ParameterHandler$FieldMap`;
  #L1b1920.  v34:= (`retrofit2.http.FieldMap`) v34 @kind object;
  #L1b1924.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/FieldMap;.encoded:()Z` @kind interface;
  #L1b192a.  v27:= temp;
  #L1b192c.  v0:= v26 @kind object;
  #L1b1930.  v1:= v23 @kind object;
  #L1b1934.  v2:= v27;
  #L1b1938.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b193e.  goto L1b0c12;
  #L1b1942.  v0:= v34 @kind object;
  #L1b1946.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Part` @kind boolean;
  #L1b194a.  v26:= v0;
  #L1b194e.  if v26 == 0 then goto L1b1e78;
  #L1b1952.  v0:= v30 @kind object;
  #L1b1956.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b195a.  v26:= v0;
  #L1b195e.  if v26 != 0 then goto L1b1990;
  #L1b1962.  v26:= "@Part parameters can only be used with multipart encoding." @kind object;
  #L1b1966.  v27:= 0I;
  #L1b196a.  v0:= v27;
  #L1b196e.  v0:= new `java.lang.Object`[v0];
  #L1b1972.  v27:= v0 @kind object;
  #L1b1976.  v0:= v30 @kind object;
  #L1b197a.  v1:= v31;
  #L1b197e.  v2:= v26 @kind object;
  #L1b1982.  v3:= v27 @kind object;
  #L1b1986.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b198c.  v26:= temp @kind object;
  #L1b198e.  throw v26;
  #L1b1990.  v17:= v34 @kind object;
  #L1b1994.  v17:= (`retrofit2.http.Part`) v17 @kind object;
  #L1b1998.  v26:= 1I;
  #L1b199c.  v0:= v26;
  #L1b19a0.  v1:= v30 @kind object;
  #L1b19a4.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L1b19a8.  call temp:= `value`(v17) @signature `Lretrofit2/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L1b19ae.  v19:= temp @kind object;
  #L1b19b0.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b19b6.  v22:= temp @kind object;
  #L1b19b8.  call temp:= `isEmpty`(v19) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1b19be.  v26:= temp;
  #L1b19c0.  if v26 == 0 then goto L1b1b86;
  #L1b19c4.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b19c8.  v0:= v26 @kind object;
  #L1b19cc.  v1:= v22 @kind object;
  #L1b19d0.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b19d6.  v26:= temp;
  #L1b19d8.  if v26 == 0 then goto L1b1ad2;
  #L1b19dc.  v0:= v32 @kind object;
  #L1b19e0.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b19e4.  v26:= v0;
  #L1b19e8.  if v26 != 0 then goto L1b1a60;
  #L1b19ec.  v26:= new `java.lang.StringBuilder`;
  #L1b19f0.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b19f6.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b19fc.  v27:= temp @kind object;
  #L1b19fe.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1a04.  v26:= temp @kind object;
  #L1b1a06.  v27:= " must include generic type (e.g., " @kind object;
  #L1b1a0a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1a10.  v26:= temp @kind object;
  #L1b1a12.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1a18.  v27:= temp @kind object;
  #L1b1a1a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1a20.  v26:= temp @kind object;
  #L1b1a22.  v27:= "<String>)" @kind object;
  #L1b1a26.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1a2c.  v26:= temp @kind object;
  #L1b1a2e.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1a34.  v26:= temp @kind object;
  #L1b1a36.  v27:= 0I;
  #L1b1a3a.  v0:= v27;
  #L1b1a3e.  v0:= new `java.lang.Object`[v0];
  #L1b1a42.  v27:= v0 @kind object;
  #L1b1a46.  v0:= v30 @kind object;
  #L1b1a4a.  v1:= v31;
  #L1b1a4e.  v2:= v26 @kind object;
  #L1b1a52.  v3:= v27 @kind object;
  #L1b1a56.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1a5c.  v26:= temp @kind object;
  #L1b1a5e.  throw v26;
  #L1b1a60.  v16:= v32 @kind object;
  #L1b1a64.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b1a68.  v26:= 0I;
  #L1b1a6c.  v0:= v26;
  #L1b1a70.  v1:= v16 @kind object;
  #L1b1a74.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1a7a.  v12:= temp @kind object;
  #L1b1a7c.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1a80.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1a86.  v27:= temp @kind object;
  #L1b1a88.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1a8e.  v26:= temp;
  #L1b1a90.  if v26 != 0 then goto L1b1ac2;
  #L1b1a94.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b1a98.  v27:= 0I;
  #L1b1a9c.  v0:= v27;
  #L1b1aa0.  v0:= new `java.lang.Object`[v0];
  #L1b1aa4.  v27:= v0 @kind object;
  #L1b1aa8.  v0:= v30 @kind object;
  #L1b1aac.  v1:= v31;
  #L1b1ab0.  v2:= v26 @kind object;
  #L1b1ab4.  v3:= v27 @kind object;
  #L1b1ab8.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1abe.  v26:= temp @kind object;
  #L1b1ac0.  throw v26;
  #L1b1ac2.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b1ac6.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b1acc.  v26:= temp @kind object;
  #L1b1ace.  goto L1b0c12;
  #L1b1ad2.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b1ad8.  v26:= temp;
  #L1b1ada.  if v26 == 0 then goto L1b1b38;
  #L1b1ade.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b1ae4.  v4:= temp @kind object;
  #L1b1ae6.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1aea.  v0:= v26 @kind object;
  #L1b1aee.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1af4.  v26:= temp;
  #L1b1af6.  if v26 != 0 then goto L1b1b28;
  #L1b1afa.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b1afe.  v27:= 0I;
  #L1b1b02.  v0:= v27;
  #L1b1b06.  v0:= new `java.lang.Object`[v0];
  #L1b1b0a.  v27:= v0 @kind object;
  #L1b1b0e.  v0:= v30 @kind object;
  #L1b1b12.  v1:= v31;
  #L1b1b16.  v2:= v26 @kind object;
  #L1b1b1a.  v3:= v27 @kind object;
  #L1b1b1e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1b24.  v26:= temp @kind object;
  #L1b1b26.  throw v26;
  #L1b1b28.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b1b2c.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b1b32.  v26:= temp @kind object;
  #L1b1b34.  goto L1b0c12;
  #L1b1b38.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1b3c.  v0:= v26 @kind object;
  #L1b1b40.  v1:= v22 @kind object;
  #L1b1b44.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1b4a.  v26:= temp;
  #L1b1b4c.  if v26 == 0 then goto L1b1b58;
  #L1b1b50.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b1b54.  goto L1b0c12;
  #L1b1b58.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b1b5c.  v27:= 0I;
  #L1b1b60.  v0:= v27;
  #L1b1b64.  v0:= new `java.lang.Object`[v0];
  #L1b1b68.  v27:= v0 @kind object;
  #L1b1b6c.  v0:= v30 @kind object;
  #L1b1b70.  v1:= v31;
  #L1b1b74.  v2:= v26 @kind object;
  #L1b1b78.  v3:= v27 @kind object;
  #L1b1b7c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1b82.  v26:= temp @kind object;
  #L1b1b84.  throw v26;
  #L1b1b86.  v26:= 4I;
  #L1b1b8a.  v0:= v26;
  #L1b1b8e.  v0:= new `java.lang.String`[v0];
  #L1b1b92.  v26:= v0 @kind object;
  #L1b1b96.  v27:= 0I;
  #L1b1b9a.  v28:= "Content-Disposition" @kind object;
  #L1b1b9e.  v26[v27]:= v28 @kind object;
  #L1b1ba2.  v27:= 1I;
  #L1b1ba6.  v28:= new `java.lang.StringBuilder`;
  #L1b1baa.  call `<init>`(v28) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1bb0.  v29:= "form-data; name=\"" @kind object;
  #L1b1bb4.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1bba.  v28:= temp @kind object;
  #L1b1bbc.  v0:= v28 @kind object;
  #L1b1bc0.  v1:= v19 @kind object;
  #L1b1bc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1bca.  v28:= temp @kind object;
  #L1b1bcc.  v29:= "\"" @kind object;
  #L1b1bd0.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1bd6.  v28:= temp @kind object;
  #L1b1bd8.  call temp:= `toString`(v28) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1bde.  v28:= temp @kind object;
  #L1b1be0.  v26[v27]:= v28 @kind object;
  #L1b1be4.  v27:= 2I;
  #L1b1be8.  v28:= "Content-Transfer-Encoding" @kind object;
  #L1b1bec.  v26[v27]:= v28 @kind object;
  #L1b1bf0.  v27:= 3I;
  #L1b1bf4.  call temp:= `encoding`(v17) @signature `Lretrofit2/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L1b1bfa.  v28:= temp @kind object;
  #L1b1bfc.  v26[v27]:= v28 @kind object;
  #L1b1c00.  call temp:= `of`(v26) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L1b1c06.  v11:= temp @kind object;
  #L1b1c08.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b1c0c.  v0:= v26 @kind object;
  #L1b1c10.  v1:= v22 @kind object;
  #L1b1c14.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1c1a.  v26:= temp;
  #L1b1c1c.  if v26 == 0 then goto L1b1d4c;
  #L1b1c20.  v0:= v32 @kind object;
  #L1b1c24.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1c28.  v26:= v0;
  #L1b1c2c.  if v26 != 0 then goto L1b1ca4;
  #L1b1c30.  v26:= new `java.lang.StringBuilder`;
  #L1b1c34.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1c3a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1c40.  v27:= temp @kind object;
  #L1b1c42.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1c48.  v26:= temp @kind object;
  #L1b1c4a.  v27:= " must include generic type (e.g., " @kind object;
  #L1b1c4e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1c54.  v26:= temp @kind object;
  #L1b1c56.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1c5c.  v27:= temp @kind object;
  #L1b1c5e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1c64.  v26:= temp @kind object;
  #L1b1c66.  v27:= "<String>)" @kind object;
  #L1b1c6a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1c70.  v26:= temp @kind object;
  #L1b1c72.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1c78.  v26:= temp @kind object;
  #L1b1c7a.  v27:= 0I;
  #L1b1c7e.  v0:= v27;
  #L1b1c82.  v0:= new `java.lang.Object`[v0];
  #L1b1c86.  v27:= v0 @kind object;
  #L1b1c8a.  v0:= v30 @kind object;
  #L1b1c8e.  v1:= v31;
  #L1b1c92.  v2:= v26 @kind object;
  #L1b1c96.  v3:= v27 @kind object;
  #L1b1c9a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1ca0.  v26:= temp @kind object;
  #L1b1ca2.  throw v26;
  #L1b1ca4.  v16:= v32 @kind object;
  #L1b1ca8.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b1cac.  v26:= 0I;
  #L1b1cb0.  v0:= v26;
  #L1b1cb4.  v1:= v16 @kind object;
  #L1b1cb8.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1cbe.  v12:= temp @kind object;
  #L1b1cc0.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1cc4.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1cca.  v27:= temp @kind object;
  #L1b1ccc.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1cd2.  v26:= temp;
  #L1b1cd4.  if v26 == 0 then goto L1b1d06;
  #L1b1cd8.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b1cdc.  v27:= 0I;
  #L1b1ce0.  v0:= v27;
  #L1b1ce4.  v0:= new `java.lang.Object`[v0];
  #L1b1ce8.  v27:= v0 @kind object;
  #L1b1cec.  v0:= v30 @kind object;
  #L1b1cf0.  v1:= v31;
  #L1b1cf4.  v2:= v26 @kind object;
  #L1b1cf8.  v3:= v27 @kind object;
  #L1b1cfc.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1d02.  v26:= temp @kind object;
  #L1b1d04.  throw v26;
  #L1b1d06.  v0:= v30 @kind object;
  #L1b1d0a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1d0e.  v26:= v0 @kind object;
  #L1b1d12.  v0:= v30 @kind object;
  #L1b1d16.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b1d1a.  v27:= v0 @kind object;
  #L1b1d1e.  v0:= v26 @kind object;
  #L1b1d22.  v1:= v33 @kind object;
  #L1b1d26.  v2:= v27 @kind object;
  #L1b1d2a.  call temp:= `requestBodyConverter`(v0, v12, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1d30.  v6:= temp @kind object;
  #L1b1d32.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b1d36.  v0:= v26 @kind object;
  #L1b1d3a.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b1d40.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Part;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b1d46.  v26:= temp @kind object;
  #L1b1d48.  goto L1b0c12;
  #L1b1d4c.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b1d52.  v26:= temp;
  #L1b1d54.  if v26 == 0 then goto L1b1df0;
  #L1b1d58.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b1d5e.  v26:= temp @kind object;
  #L1b1d60.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b1d66.  v4:= temp @kind object;
  #L1b1d68.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1d6c.  v0:= v26 @kind object;
  #L1b1d70.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1d76.  v26:= temp;
  #L1b1d78.  if v26 == 0 then goto L1b1daa;
  #L1b1d7c.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b1d80.  v27:= 0I;
  #L1b1d84.  v0:= v27;
  #L1b1d88.  v0:= new `java.lang.Object`[v0];
  #L1b1d8c.  v27:= v0 @kind object;
  #L1b1d90.  v0:= v30 @kind object;
  #L1b1d94.  v1:= v31;
  #L1b1d98.  v2:= v26 @kind object;
  #L1b1d9c.  v3:= v27 @kind object;
  #L1b1da0.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1da6.  v26:= temp @kind object;
  #L1b1da8.  throw v26;
  #L1b1daa.  v0:= v30 @kind object;
  #L1b1dae.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1db2.  v26:= v0 @kind object;
  #L1b1db6.  v0:= v30 @kind object;
  #L1b1dba.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b1dbe.  v27:= v0 @kind object;
  #L1b1dc2.  v0:= v26 @kind object;
  #L1b1dc6.  v1:= v33 @kind object;
  #L1b1dca.  v2:= v27 @kind object;
  #L1b1dce.  call temp:= `requestBodyConverter`(v0, v4, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1dd4.  v6:= temp @kind object;
  #L1b1dd6.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b1dda.  v0:= v26 @kind object;
  #L1b1dde.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b1de4.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Part;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b1dea.  v26:= temp @kind object;
  #L1b1dec.  goto L1b0c12;
  #L1b1df0.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b1df4.  v0:= v26 @kind object;
  #L1b1df8.  v1:= v22 @kind object;
  #L1b1dfc.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1e02.  v26:= temp;
  #L1b1e04.  if v26 == 0 then goto L1b1e36;
  #L1b1e08.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b1e0c.  v27:= 0I;
  #L1b1e10.  v0:= v27;
  #L1b1e14.  v0:= new `java.lang.Object`[v0];
  #L1b1e18.  v27:= v0 @kind object;
  #L1b1e1c.  v0:= v30 @kind object;
  #L1b1e20.  v1:= v31;
  #L1b1e24.  v2:= v26 @kind object;
  #L1b1e28.  v3:= v27 @kind object;
  #L1b1e2c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1e32.  v26:= temp @kind object;
  #L1b1e34.  throw v26;
  #L1b1e36.  v0:= v30 @kind object;
  #L1b1e3a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1e3e.  v26:= v0 @kind object;
  #L1b1e42.  v0:= v30 @kind object;
  #L1b1e46.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b1e4a.  v27:= v0 @kind object;
  #L1b1e4e.  v0:= v26 @kind object;
  #L1b1e52.  v1:= v32 @kind object;
  #L1b1e56.  v2:= v33 @kind object;
  #L1b1e5a.  v3:= v27 @kind object;
  #L1b1e5e.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1e64.  v6:= temp @kind object;
  #L1b1e66.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b1e6a.  v0:= v26 @kind object;
  #L1b1e6e.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b1e74.  goto L1b0c12;
  #L1b1e78.  v0:= v34 @kind object;
  #L1b1e7c.  v0:= instanceof @variable v0 @type ^`retrofit2.http.PartMap` @kind boolean;
  #L1b1e80.  v26:= v0;
  #L1b1e84.  if v26 == 0 then goto L1b20a6;
  #L1b1e88.  v0:= v30 @kind object;
  #L1b1e8c.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b1e90.  v26:= v0;
  #L1b1e94.  if v26 != 0 then goto L1b1ec6;
  #L1b1e98.  v26:= "@PartMap parameters can only be used with multipart encoding." @kind object;
  #L1b1e9c.  v27:= 0I;
  #L1b1ea0.  v0:= v27;
  #L1b1ea4.  v0:= new `java.lang.Object`[v0];
  #L1b1ea8.  v27:= v0 @kind object;
  #L1b1eac.  v0:= v30 @kind object;
  #L1b1eb0.  v1:= v31;
  #L1b1eb4.  v2:= v26 @kind object;
  #L1b1eb8.  v3:= v27 @kind object;
  #L1b1ebc.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1ec2.  v26:= temp @kind object;
  #L1b1ec4.  throw v26;
  #L1b1ec6.  v26:= 1I;
  #L1b1eca.  v0:= v26;
  #L1b1ece.  v1:= v30 @kind object;
  #L1b1ed2.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L1b1ed6.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1edc.  v22:= temp @kind object;
  #L1b1ede.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b1ee2.  v0:= v26 @kind object;
  #L1b1ee6.  v1:= v22 @kind object;
  #L1b1eea.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1ef0.  v26:= temp;
  #L1b1ef2.  if v26 != 0 then goto L1b1f24;
  #L1b1ef6.  v26:= "@PartMap parameter type must be Map." @kind object;
  #L1b1efa.  v27:= 0I;
  #L1b1efe.  v0:= v27;
  #L1b1f02.  v0:= new `java.lang.Object`[v0];
  #L1b1f06.  v27:= v0 @kind object;
  #L1b1f0a.  v0:= v30 @kind object;
  #L1b1f0e.  v1:= v31;
  #L1b1f12.  v2:= v26 @kind object;
  #L1b1f16.  v3:= v27 @kind object;
  #L1b1f1a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1f20.  v26:= temp @kind object;
  #L1b1f22.  throw v26;
  #L1b1f24.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b1f28.  v0:= v32 @kind object;
  #L1b1f2c.  v1:= v22 @kind object;
  #L1b1f30.  v2:= v26 @kind object;
  #L1b1f34.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1f3a.  v14:= temp @kind object;
  #L1b1f3c.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1f40.  v26:= v0;
  #L1b1f44.  if v26 != 0 then goto L1b1f76;
  #L1b1f48.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b1f4c.  v27:= 0I;
  #L1b1f50.  v0:= v27;
  #L1b1f54.  v0:= new `java.lang.Object`[v0];
  #L1b1f58.  v27:= v0 @kind object;
  #L1b1f5c.  v0:= v30 @kind object;
  #L1b1f60.  v1:= v31;
  #L1b1f64.  v2:= v26 @kind object;
  #L1b1f68.  v3:= v27 @kind object;
  #L1b1f6c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1f72.  v26:= temp @kind object;
  #L1b1f74.  throw v26;
  #L1b1f76.  v16:= v14 @kind object;
  #L1b1f7a.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b1f7e.  v26:= 0I;
  #L1b1f82.  v0:= v26;
  #L1b1f86.  v1:= v16 @kind object;
  #L1b1f8a.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1f90.  v13:= temp @kind object;
  #L1b1f92.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b1f96.  v0:= v26 @kind object;
  #L1b1f9a.  if v0 == v13 then goto L1b1ff2;
  #L1b1f9e.  v26:= new `java.lang.StringBuilder`;
  #L1b1fa2.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1fa8.  v27:= "@PartMap keys must be of type String: " @kind object;
  #L1b1fac.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1fb2.  v26:= temp @kind object;
  #L1b1fb4.  v0:= v26 @kind object;
  #L1b1fb8.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1fbe.  v26:= temp @kind object;
  #L1b1fc0.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1fc6.  v26:= temp @kind object;
  #L1b1fc8.  v27:= 0I;
  #L1b1fcc.  v0:= v27;
  #L1b1fd0.  v0:= new `java.lang.Object`[v0];
  #L1b1fd4.  v27:= v0 @kind object;
  #L1b1fd8.  v0:= v30 @kind object;
  #L1b1fdc.  v1:= v31;
  #L1b1fe0.  v2:= v26 @kind object;
  #L1b1fe4.  v3:= v27 @kind object;
  #L1b1fe8.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1fee.  v26:= temp @kind object;
  #L1b1ff0.  throw v26;
  #L1b1ff2.  v26:= 1I;
  #L1b1ff6.  v0:= v26;
  #L1b1ffa.  v1:= v16 @kind object;
  #L1b1ffe.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2004.  v25:= temp @kind object;
  #L1b2006.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b200a.  call temp:= `getRawType`(v25) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2010.  v27:= temp @kind object;
  #L1b2012.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2018.  v26:= temp;
  #L1b201a.  if v26 == 0 then goto L1b204c;
  #L1b201e.  v26:= "@PartMap values cannot be MultipartBody.Part. Use @Part List<Part> or a different value type instead." @kind object;
  #L1b2022.  v27:= 0I;
  #L1b2026.  v0:= v27;
  #L1b202a.  v0:= new `java.lang.Object`[v0];
  #L1b202e.  v27:= v0 @kind object;
  #L1b2032.  v0:= v30 @kind object;
  #L1b2036.  v1:= v31;
  #L1b203a.  v2:= v26 @kind object;
  #L1b203e.  v3:= v27 @kind object;
  #L1b2042.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2048.  v26:= temp @kind object;
  #L1b204a.  throw v26;
  #L1b204c.  v0:= v30 @kind object;
  #L1b2050.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2054.  v26:= v0 @kind object;
  #L1b2058.  v0:= v30 @kind object;
  #L1b205c.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b2060.  v27:= v0 @kind object;
  #L1b2064.  v0:= v26 @kind object;
  #L1b2068.  v1:= v25 @kind object;
  #L1b206c.  v2:= v33 @kind object;
  #L1b2070.  v3:= v27 @kind object;
  #L1b2074.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b207a.  v24:= temp @kind object;
  #L1b207c.  v18:= v34 @kind object;
  #L1b2080.  v18:= (`retrofit2.http.PartMap`) v18 @kind object;
  #L1b2084.  v26:= new `retrofit2.ParameterHandler$PartMap`;
  #L1b2088.  call temp:= `encoding`(v18) @signature `Lretrofit2/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L1b208e.  v27:= temp @kind object;
  #L1b2090.  v0:= v26 @kind object;
  #L1b2094.  v1:= v24 @kind object;
  #L1b2098.  v2:= v27 @kind object;
  #L1b209c.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$PartMap;.<init>:(Lretrofit2/Converter;Ljava/lang/String;)V` @kind direct;
  #L1b20a2.  goto L1b0c12;
  #L1b20a6.  v0:= v34 @kind object;
  #L1b20aa.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Body` @kind boolean;
  #L1b20ae.  v26:= v0;
  #L1b20b2.  if v26 == 0 then goto L1b21cc;
  #L1b20b6.  v0:= v30 @kind object;
  #L1b20ba.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b20be.  v26:= v0;
  #L1b20c2.  if v26 != 0 then goto L1b20d6;
  #L1b20c6.  v0:= v30 @kind object;
  #L1b20ca.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b20ce.  v26:= v0;
  #L1b20d2.  if v26 == 0 then goto L1b2104;
  #L1b20d6.  v26:= "@Body parameters cannot be used with form or multi-part encoding." @kind object;
  #L1b20da.  v27:= 0I;
  #L1b20de.  v0:= v27;
  #L1b20e2.  v0:= new `java.lang.Object`[v0];
  #L1b20e6.  v27:= v0 @kind object;
  #L1b20ea.  v0:= v30 @kind object;
  #L1b20ee.  v1:= v31;
  #L1b20f2.  v2:= v26 @kind object;
  #L1b20f6.  v3:= v27 @kind object;
  #L1b20fa.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2100.  v26:= temp @kind object;
  #L1b2102.  throw v26;
  #L1b2104.  v0:= v30 @kind object;
  #L1b2108.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L1b210c.  v26:= v0;
  #L1b2110.  if v26 == 0 then goto L1b2142;
  #L1b2114.  v26:= "Multiple @Body method annotations found." @kind object;
  #L1b2118.  v27:= 0I;
  #L1b211c.  v0:= v27;
  #L1b2120.  v0:= new `java.lang.Object`[v0];
  #L1b2124.  v27:= v0 @kind object;
  #L1b2128.  v0:= v30 @kind object;
  #L1b212c.  v1:= v31;
  #L1b2130.  v2:= v26 @kind object;
  #L1b2134.  v3:= v27 @kind object;
  #L1b2138.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b213e.  v26:= temp @kind object;
  #L1b2140.  throw v26;
  #Try_start0.  
  #L1b2142.  v0:= v30 @kind object;
  #L1b2146.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b214a.  v26:= v0 @kind object;
  #L1b214e.  v0:= v30 @kind object;
  #L1b2152.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b2156.  v27:= v0 @kind object;
  #L1b215a.  v0:= v26 @kind object;
  #L1b215e.  v1:= v32 @kind object;
  #L1b2162.  v2:= v33 @kind object;
  #L1b2166.  v3:= v27 @kind object;
  #L1b216a.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #Try_end0.  
  #L1b2170.  v6:= temp @kind object;
  #L1b2172.  v26:= 1I;
  #L1b2176.  v0:= v26;
  #L1b217a.  v1:= v30 @kind object;
  #L1b217e.  v1.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` := v0 @kind boolean;
  #L1b2182.  v26:= new `retrofit2.ParameterHandler$Body`;
  #L1b2186.  v0:= v26 @kind object;
  #L1b218a.  call `<init>`(v0, v6) @signature `Lretrofit2/ParameterHandler$Body;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1b2190.  goto L1b0c12;
  #L1b2194.  v7:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b2196.  v26:= "Unable to create @Body converter for %s" @kind object;
  #L1b219a.  v27:= 1I;
  #L1b219e.  v0:= v27;
  #L1b21a2.  v0:= new `java.lang.Object`[v0];
  #L1b21a6.  v27:= v0 @kind object;
  #L1b21aa.  v28:= 0I;
  #L1b21ae.  v27[v28]:= v32 @kind object;
  #L1b21b2.  v0:= v30 @kind object;
  #L1b21b6.  v1:= v31;
  #L1b21ba.  v2:= v26 @kind object;
  #L1b21be.  v3:= v27 @kind object;
  #L1b21c2.  call temp:= `parameterError`(v0, v7, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b21c8.  v26:= temp @kind object;
  #L1b21ca.  throw v26;
  #L1b21cc.  v26:= 0I;
  #L1b21d0.  goto L1b0c12;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b2194;
}
procedure `void` `validatePathName`(`retrofit2.ServiceMethod$Builder` v5 @kind this, `int` v6 @name `p`, `java.lang.String` v7 @kind object @name `name`) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b21f4.  v1:= 2I;
  #L1b21f6.  v4:= 1I;
  #L1b21f8.  v3:= 0I;
  #L1b21fa.  v0:= `@@retrofit2.ServiceMethod.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b21fe.  call temp:= `matcher`(v0, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b2204.  v0:= temp @kind object;
  #L1b2206.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L1b220c.  v0:= temp;
  #L1b220e.  if v0 != 0 then goto L1b2238;
  #L1b2212.  v0:= "@Path parameter name must match %s. Found: %s" @kind object;
  #L1b2216.  v1:= new `java.lang.Object`[v1];
  #L1b221a.  v2:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b221e.  call temp:= `pattern`(v2) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L1b2224.  v2:= temp @kind object;
  #L1b2226.  v1[v3]:= v2 @kind object;
  #L1b222a.  v1[v4]:= v7 @kind object;
  #L1b222e.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2234.  v0:= temp @kind object;
  #L1b2236.  throw v0;
  #L1b2238.  v0:= v5.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` @kind object;
  #L1b223c.  call temp:= `contains`(v0, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b2242.  v0:= temp;
  #L1b2244.  if v0 != 0 then goto L1b2266;
  #L1b2248.  v0:= "URL \"%s\" does not contain \"{%s}\"." @kind object;
  #L1b224c.  v1:= new `java.lang.Object`[v1];
  #L1b2250.  v2:= v5.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b2254.  v1[v3]:= v2 @kind object;
  #L1b2258.  v1[v4]:= v7 @kind object;
  #L1b225c.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2262.  v0:= temp @kind object;
  #L1b2264.  throw v0;
  #L1b2266.  return @kind void;
}
procedure `retrofit2.ServiceMethod` `build`(`retrofit2.ServiceMethod$Builder` v10 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1b2278.  v9:= 1I;
  #L1b227a.  v6:= 0I;
  #L1b227c.  call temp:= `createCallAdapter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @kind direct;
  #L1b2282.  v5:= temp @kind object;
  #L1b2284.  v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` := v5 @kind object;
  #L1b2288.  v5:= v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` @kind object;
  #L1b228c.  call temp:= `responseType`(v5) @signature `Lretrofit2/CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1b2292.  v5:= temp @kind object;
  #L1b2294.  v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` := v5 @kind object;
  #L1b2298.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b229c.  v7:= constclass @type ^`retrofit2.Response` @kind object;
  #L1b22a0.  if v5 == v7 then goto L1b22b0;
  #L1b22a4.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b22a8.  v7:= constclass @type ^`okhttp3.Response` @kind object;
  #L1b22ac.  if v5 != v7 then goto L1b2304;
  #L1b22b0.  v5:= new `java.lang.StringBuilder`;
  #L1b22b4.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b22ba.  v7:= "'" @kind object;
  #L1b22be.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b22c4.  v5:= temp @kind object;
  #L1b22c6.  v7:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b22ca.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b22d0.  v7:= temp @kind object;
  #L1b22d2.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b22d8.  v7:= temp @kind object;
  #L1b22da.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b22e0.  v5:= temp @kind object;
  #L1b22e2.  v7:= "' is not a valid response body type. Did you mean ResponseBody?" @kind object;
  #L1b22e6.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b22ec.  v5:= temp @kind object;
  #L1b22ee.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b22f4.  v5:= temp @kind object;
  #L1b22f6.  v6:= new `java.lang.Object`[v6];
  #L1b22fa.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2300.  v5:= temp @kind object;
  #L1b2302.  throw v5;
  #L1b2304.  call temp:= `createResponseConverter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @kind direct;
  #L1b230a.  v5:= temp @kind object;
  #L1b230c.  v10.`retrofit2.ServiceMethod$Builder.responseConverter` @type ^`retrofit2.Converter` := v5 @kind object;
  #L1b2310.  v7:= v10.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b2314.  v8:= length @variable v7;
  #L1b2316.  v5:= v6;
  #L1b2318.  if v5 >= v8 then goto L1b232c;
  #L1b231c.  v0:= v7[v5] @kind object;
  #L1b2320.  call `parseMethodAnnotation`(v10, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1b2326.  v5:= v5 + 1;
  #L1b232a.  goto L1b2318;
  #L1b232c.  v5:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b2330.  if v5 != 0 then goto L1b2346;
  #L1b2334.  v5:= "HTTP method annotation is required (e.g., @GET, @POST, etc.)." @kind object;
  #L1b2338.  v6:= new `java.lang.Object`[v6];
  #L1b233c.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2342.  v5:= temp @kind object;
  #L1b2344.  throw v5;
  #L1b2346.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L1b234a.  if v5 != 0 then goto L1b2382;
  #L1b234e.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b2352.  if v5 == 0 then goto L1b2368;
  #L1b2356.  v5:= "Multipart can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L1b235a.  v6:= new `java.lang.Object`[v6];
  #L1b235e.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2364.  v5:= temp @kind object;
  #L1b2366.  throw v5;
  #L1b2368.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b236c.  if v5 == 0 then goto L1b2382;
  #L1b2370.  v5:= "FormUrlEncoded can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L1b2374.  v6:= new `java.lang.Object`[v6];
  #L1b2378.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b237e.  v5:= temp @kind object;
  #L1b2380.  throw v5;
  #L1b2382.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L1b2386.  v3:= length @variable v5;
  #L1b2388.  v5:= new `retrofit2.ParameterHandler`[v3];
  #L1b238c.  v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v5 @kind object;
  #L1b2390.  v1:= 0I;
  #L1b2392.  if v1 >= v3 then goto L1b23f4;
  #L1b2396.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] @kind object;
  #L1b239a.  v4:= v5[v1] @kind object;
  #L1b239e.  call temp:= `hasUnresolvableType`(v4) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1b23a4.  v5:= temp;
  #L1b23a6.  if v5 == 0 then goto L1b23c0;
  #L1b23aa.  v5:= "Parameter type must not include a type variable or wildcard: %s" @kind object;
  #L1b23ae.  v7:= new `java.lang.Object`[v9];
  #L1b23b2.  v7[v6]:= v4 @kind object;
  #L1b23b6.  call temp:= `parameterError`(v10, v1, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b23bc.  v5:= temp @kind object;
  #L1b23be.  throw v5;
  #L1b23c0.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L1b23c4.  v2:= v5[v1] @kind object;
  #L1b23c8.  if v2 != 0 then goto L1b23de;
  #L1b23cc.  v5:= "No Retrofit annotation found." @kind object;
  #L1b23d0.  v6:= new `java.lang.Object`[v6];
  #L1b23d4.  call temp:= `parameterError`(v10, v1, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b23da.  v5:= temp @kind object;
  #L1b23dc.  throw v5;
  #L1b23de.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L1b23e2.  call temp:= `parseParameter`(v10, v1, v4, v2) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L1b23e8.  v7:= temp @kind object;
  #L1b23ea.  v5[v1]:= v7 @kind object;
  #L1b23ee.  v1:= v1 + 1;
  #L1b23f2.  goto L1b2392;
  #L1b23f4.  v5:= v10.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b23f8.  if v5 != 0 then goto L1b241e;
  #L1b23fc.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b2400.  if v5 != 0 then goto L1b241e;
  #L1b2404.  v5:= "Missing either @%s URL or @Url parameter." @kind object;
  #L1b2408.  v7:= new `java.lang.Object`[v9];
  #L1b240c.  v8:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b2410.  v7[v6]:= v8 @kind object;
  #L1b2414.  call temp:= `methodError`(v10, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b241a.  v5:= temp @kind object;
  #L1b241c.  throw v5;
  #L1b241e.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b2422.  if v5 != 0 then goto L1b2450;
  #L1b2426.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b242a.  if v5 != 0 then goto L1b2450;
  #L1b242e.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L1b2432.  if v5 != 0 then goto L1b2450;
  #L1b2436.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L1b243a.  if v5 == 0 then goto L1b2450;
  #L1b243e.  v5:= "Non-body HTTP method cannot contain @Body." @kind object;
  #L1b2442.  v6:= new `java.lang.Object`[v6];
  #L1b2446.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b244c.  v5:= temp @kind object;
  #L1b244e.  throw v5;
  #L1b2450.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b2454.  if v5 == 0 then goto L1b2472;
  #L1b2458.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` @kind boolean;
  #L1b245c.  if v5 != 0 then goto L1b2472;
  #L1b2460.  v5:= "Form-encoded method must contain at least one @Field." @kind object;
  #L1b2464.  v6:= new `java.lang.Object`[v6];
  #L1b2468.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b246e.  v5:= temp @kind object;
  #L1b2470.  throw v5;
  #L1b2472.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b2476.  if v5 == 0 then goto L1b2494;
  #L1b247a.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` @kind boolean;
  #L1b247e.  if v5 != 0 then goto L1b2494;
  #L1b2482.  v5:= "Multipart method must contain at least one @Part." @kind object;
  #L1b2486.  v6:= new `java.lang.Object`[v6];
  #L1b248a.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2490.  v5:= temp @kind object;
  #L1b2492.  throw v5;
  #L1b2494.  v5:= new `retrofit2.ServiceMethod`;
  #L1b2498.  call `<init>`(v5, v10) @signature `Lretrofit2/ServiceMethod;.<init>:(Lretrofit2/ServiceMethod$Builder;)V` @kind direct;
  #L1b249e.  return v5 @kind object;
}

record `retrofit2.HttpException` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
  `int` `retrofit2.HttpException.code` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.HttpException.message` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Response` `retrofit2.HttpException.response` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`retrofit2.HttpException` v1 @kind this, `retrofit2.Response` v2 @kind object) @signature `Lretrofit2/HttpException;.<init>:(Lretrofit2/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1aedc4.  call temp:= `getMessage`(v2) @signature `Lretrofit2/HttpException;.getMessage:(Lretrofit2/Response;)Ljava/lang/String;` @kind static;
  #L1aedca.  v0:= temp @kind object;
  #L1aedcc.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aedd2.  call temp:= `code`(v2) @signature `Lretrofit2/Response;.code:()I` @kind virtual;
  #L1aedd8.  v0:= temp;
  #L1aedda.  v1.`retrofit2.HttpException.code` @type ^`int` := v0;
  #L1aedde.  call temp:= `message`(v2) @signature `Lretrofit2/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L1aede4.  v0:= temp @kind object;
  #L1aede6.  v1.`retrofit2.HttpException.message` @type ^`java.lang.String` := v0 @kind object;
  #L1aedea.  v1.`retrofit2.HttpException.response` @type ^`retrofit2.Response` := v2 @kind object;
  #L1aedee.  return @kind void;
}
procedure `java.lang.String` `getMessage`(`retrofit2.Response` v2 @kind object) @signature `Lretrofit2/HttpException;.getMessage:(Lretrofit2/Response;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1aee00.  v0:= "response == null" @kind object;
  #L1aee04.  call temp:= `checkNotNull`(v2, v0) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1aee0a.  v0:= new `java.lang.StringBuilder`;
  #L1aee0e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aee14.  v1:= "HTTP " @kind object;
  #L1aee18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee1e.  v0:= temp @kind object;
  #L1aee20.  call temp:= `code`(v2) @signature `Lretrofit2/Response;.code:()I` @kind virtual;
  #L1aee26.  v1:= temp;
  #L1aee28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee2e.  v0:= temp @kind object;
  #L1aee30.  v1:= " " @kind object;
  #L1aee34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee3a.  v0:= temp @kind object;
  #L1aee3c.  call temp:= `message`(v2) @signature `Lretrofit2/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L1aee42.  v1:= temp @kind object;
  #L1aee44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aee4a.  v0:= temp @kind object;
  #L1aee4c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aee52.  v0:= temp @kind object;
  #L1aee54.  return v0 @kind object;
}
procedure `int` `code`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aee68.  v0:= v1.`retrofit2.HttpException.code` @type ^`int`;
  #L1aee6c.  return v0;
}
procedure `java.lang.String` `message`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aee80.  v0:= v1.`retrofit2.HttpException.message` @type ^`java.lang.String` @kind object;
  #L1aee84.  return v0 @kind object;
}
procedure `retrofit2.Response` `response`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.response:()Lretrofit2/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aee98.  v0:= v1.`retrofit2.HttpException.response` @type ^`retrofit2.Response` @kind object;
  #L1aee9c.  return v0 @kind object;
}

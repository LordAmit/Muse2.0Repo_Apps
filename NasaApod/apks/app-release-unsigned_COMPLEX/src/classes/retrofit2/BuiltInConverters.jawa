record `retrofit2.BuiltInConverters` @kind class @AccessFlag FINAL extends `retrofit2.Converter$Factory` @kind class {
}
procedure `void` `<init>`(`retrofit2.BuiltInConverters` v0 @kind this) @signature `Lretrofit2/BuiltInConverters;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21ff98.  call `<init>`(v0) @signature `Lretrofit2/Converter$Factory;.<init>:()V` @kind direct;
  #L21ff9e.  return @kind void;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.BuiltInConverters` v2 @kind this, `java.lang.reflect.Type` v3 @kind object @name `type`, `java.lang.annotation.Annotation`[] v4 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v5 @kind object @name `methodAnnotations`, `retrofit2.Retrofit` v6 @kind object @name `retrofit`) @signature `Lretrofit2/BuiltInConverters;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21ffb0.  v0:= constclass @type ^`okhttp3.RequestBody` @kind object;
  #L21ffb4.  call temp:= `getRawType`(v3) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L21ffba.  v1:= temp @kind object;
  #L21ffbc.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L21ffc2.  v0:= temp;
  #L21ffc4.  if v0 == 0 then goto L21ffce;
  #L21ffc8.  v0:= `@@retrofit2.BuiltInConverters$RequestBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$RequestBodyConverter` @kind object;
  #L21ffcc.  return v0 @kind object;
  #L21ffce.  v0:= 0I;
  #L21ffd0.  goto L21ffcc;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.BuiltInConverters` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`, `retrofit2.Retrofit` v4 @kind object @name `retrofit`) @signature `Lretrofit2/BuiltInConverters;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21ffe4.  v0:= constclass @type ^`okhttp3.ResponseBody` @kind object;
  #L21ffe8.  if v2 != v0 then goto L220008;
  #L21ffec.  v0:= constclass @type ^`retrofit2.http.Streaming` @kind object;
  #L21fff0.  call temp:= `isAnnotationPresent`(v3, v0) @signature `Lretrofit2/Utils;.isAnnotationPresent:([Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Z` @kind static;
  #L21fff6.  v0:= temp;
  #L21fff8.  if v0 == 0 then goto L220002;
  #L21fffc.  v0:= `@@retrofit2.BuiltInConverters$StreamingResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$StreamingResponseBodyConverter` @kind object;
  #L220000.  return v0 @kind object;
  #L220002.  v0:= `@@retrofit2.BuiltInConverters$BufferingResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$BufferingResponseBodyConverter` @kind object;
  #L220006.  goto L220000;
  #L220008.  v0:= constclass @type ^`java.lang.Void` @kind object;
  #L22000c.  if v2 != v0 then goto L220016;
  #L220010.  v0:= `@@retrofit2.BuiltInConverters$VoidResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$VoidResponseBodyConverter` @kind object;
  #L220014.  goto L220000;
  #L220016.  v0:= 0I;
  #L220018.  goto L220000;
}

record `okio.RealBufferedSink$1` @kind class @AccessFlag  extends `java.io.OutputStream` @kind class {
  `okio.RealBufferedSink` `okio.RealBufferedSink$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSink$1` v0 @kind this, `okio.RealBufferedSink` v1 @kind object @name `this$0`) @signature `Lokio/RealBufferedSink$1;.<init>:(Lokio/RealBufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1addc0.  v0.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` := v1 @kind object;
  #L1addc4.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L1addca.  return @kind void;
}
procedure `void` `close`(`okio.RealBufferedSink$1` v1 @kind this) @signature `Lokio/RealBufferedSink$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1adddc.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1adde0.  call `close`(v0) @signature `Lokio/RealBufferedSink;.close:()V` @kind virtual;
  #L1adde6.  return @kind void;
}
procedure `void` `flush`(`okio.RealBufferedSink$1` v1 @kind this) @signature `Lokio/RealBufferedSink$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1addf8.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1addfc.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1ade00.  if v0 != 0 then goto L1ade0e;
  #L1ade04.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1ade08.  call `flush`(v0) @signature `Lokio/RealBufferedSink;.flush:()V` @kind virtual;
  #L1ade0e.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSink$1` v2 @kind this) @signature `Lokio/RealBufferedSink$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ade20.  v0:= new `java.lang.StringBuilder`;
  #L1ade24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ade2a.  v1:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1ade2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ade34.  v0:= temp @kind object;
  #L1ade36.  v1:= ".outputStream()" @kind object;
  #L1ade3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ade40.  v0:= temp @kind object;
  #L1ade42.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ade48.  v0:= temp @kind object;
  #L1ade4a.  return v0 @kind object;
}
procedure `void` `write`(`okio.RealBufferedSink$1` v2 @kind this, `int` v3 @name `b`) @signature `Lokio/RealBufferedSink$1;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ade5c.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1ade60.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1ade64.  if v0 == 0 then goto L1ade78;
  #L1ade68.  v0:= new `java.io.IOException`;
  #L1ade6c.  v1:= "closed" @kind object;
  #L1ade70.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ade76.  throw v0;
  #L1ade78.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1ade7c.  v0:= v0.`okio.RealBufferedSink.buffer` @type ^`okio.Buffer` @kind object;
  #L1ade80.  v1:= (`byte`) v3 @kind i2b;
  #L1ade82.  call temp:= `writeByte`(v0, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ade88.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1ade8c.  call temp:= `emitCompleteSegments`(v0) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1ade92.  return @kind void;
}
procedure `void` `write`(`okio.RealBufferedSink$1` v2 @kind this, `byte`[] v3 @kind object @name `data`, `int` v4 @name `offset`, `int` v5 @name `byteCount`) @signature `Lokio/RealBufferedSink$1;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1adea4.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1adea8.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1adeac.  if v0 == 0 then goto L1adec0;
  #L1adeb0.  v0:= new `java.io.IOException`;
  #L1adeb4.  v1:= "closed" @kind object;
  #L1adeb8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1adebe.  throw v0;
  #L1adec0.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1adec4.  v0:= v0.`okio.RealBufferedSink.buffer` @type ^`okio.Buffer` @kind object;
  #L1adec8.  call temp:= `write`(v0, v3, v4, v5) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L1adece.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1aded2.  call temp:= `emitCompleteSegments`(v0) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1aded8.  return @kind void;
}

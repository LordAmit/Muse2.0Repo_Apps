record `okio.Okio$2` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `java.io.InputStream` `okio.Okio$2.val$in` @AccessFlag FINAL_SYNTHETIC;
  `okio.Timeout` `okio.Okio$2.val$timeout` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Okio$2` v0 @kind this, `okio.Timeout` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21ef8c.  v0.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` := v1 @kind object;
  #L21ef90.  v0.`okio.Okio$2.val$in` @type ^`java.io.InputStream` := v2 @kind object;
  #L21ef94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21ef9a.  return @kind void;
}
procedure `void` `close`(`okio.Okio$2` v1 @kind this) @signature `Lokio/Okio$2;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21efac.  v0:= v1.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L21efb0.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L21efb6.  return @kind void;
}
procedure `long` `read`(`okio.Okio$2` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokio/Okio$2;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21efc8.  v4:= 0L;
  #L21efcc.  v6:= lcmp(v10, v4);
  #L21efd0.  if v6 >= 0 then goto L21f006;
  #L21efd4.  v4:= new `java.lang.IllegalArgumentException`;
  #L21efd8.  v5:= new `java.lang.StringBuilder`;
  #L21efdc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21efe2.  v6:= "byteCount < 0: " @kind object;
  #L21efe6.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21efec.  v5:= temp @kind object;
  #L21efee.  call temp:= `append`(v5, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L21eff4.  v5:= temp @kind object;
  #L21eff6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21effc.  v5:= temp @kind object;
  #L21effe.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21f004.  throw v4;
  #L21f006.  v6:= lcmp(v10, v4);
  #L21f00a.  if v6 != 0 then goto L21f010;
  #L21f00e.  return v4 @kind wide;
  #Try_start0.  
  #L21f010.  v4:= v8.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` @kind object;
  #L21f014.  call `throwIfReached`(v4) @signature `Lokio/Timeout;.throwIfReached:()V` @kind virtual;
  #L21f01a.  v4:= 1I;
  #L21f01c.  call temp:= `writableSegment`(v9, v4) @signature `Lokio/Buffer;.writableSegment:(I)Lokio/Segment;` @kind virtual;
  #L21f022.  v3:= temp @kind object;
  #L21f024.  v4:= v3.`okio.Segment.limit` @type ^`int`;
  #L21f028.  v4:= v4 - 8192;
  #L21f02c.  v4:= (`long`) v4 @kind i2l;
  #L21f02e.  call temp:= `min`(v10, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L21f034.  v4:= temp @kind wide;
  #L21f036.  v2:= (`int`) v4 @kind l2i;
  #L21f038.  v4:= v8.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L21f03c.  v5:= v3.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L21f040.  v6:= v3.`okio.Segment.limit` @type ^`int`;
  #L21f044.  call temp:= `read`(v4, v5, v6, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L21f04a.  v0:= temp;
  #L21f04c.  v4:= -1I;
  #L21f04e.  if v0 != v4 then goto L21f058;
  #L21f052.  v4:= -1L;
  #L21f056.  goto L21f00e;
  #L21f058.  v4:= v3.`okio.Segment.limit` @type ^`int`;
  #L21f05c.  v4:= v4 + v0 @kind int;
  #L21f05e.  v3.`okio.Segment.limit` @type ^`int` := v4;
  #L21f062.  v4:= v9.`okio.Buffer.size` @type ^`long` @kind wide;
  #L21f066.  v6:= (`long`) v0 @kind i2l;
  #L21f068.  v4:= v4 + v6 @kind long;
  #L21f06a.  v9.`okio.Buffer.size` @type ^`long` := v4 @kind wide;
  #Try_end0.  
  #L21f06e.  v4:= (`long`) v0 @kind i2l;
  #L21f070.  goto L21f00e;
  #L21f072.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L21f074.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lokio/Okio;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L21f07a.  v4:= temp;
  #L21f07c.  if v4 == 0 then goto L21f08c;
  #L21f080.  v4:= new `java.io.IOException`;
  #L21f084.  call `<init>`(v4, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L21f08a.  throw v4;
  #L21f08c.  throw v1;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L21f072;
}
procedure `okio.Timeout` `timeout`(`okio.Okio$2` v1 @kind this) @signature `Lokio/Okio$2;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21f0b0.  v0:= v1.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` @kind object;
  #L21f0b4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.Okio$2` v2 @kind this) @signature `Lokio/Okio$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f0c8.  v0:= new `java.lang.StringBuilder`;
  #L21f0cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21f0d2.  v1:= "source(" @kind object;
  #L21f0d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f0dc.  v0:= temp @kind object;
  #L21f0de.  v1:= v2.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L21f0e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f0e8.  v0:= temp @kind object;
  #L21f0ea.  v1:= ")" @kind object;
  #L21f0ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f0f4.  v0:= temp @kind object;
  #L21f0f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21f0fc.  v0:= temp @kind object;
  #L21f0fe.  return v0 @kind object;
}

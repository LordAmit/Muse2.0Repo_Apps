record `okio.Utf8` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.Utf8` v0 @kind this) @signature `Lokio/Utf8;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1ae814.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ae81a.  return @kind void;
}
procedure `long` `size`(`java.lang.String` v2 @kind object @name `string`) @signature `Lokio/Utf8;.size:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1ae82c.  v0:= 0I;
  #L1ae82e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ae834.  v1:= temp;
  #L1ae836.  call temp:= `size`(v2, v0, v1) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @kind static;
  #L1ae83c.  v0:= temp @kind wide;
  #L1ae83e.  return v0 @kind wide;
}
procedure `long` `size`(`java.lang.String` v12 @kind object @name `string`, `int` v13 @name `beginIndex`, `int` v14 @name `endIndex`) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ae850.  v10:= 1L;
  #L1ae854.  v8:= 57343I;
  #L1ae85a.  if v12 != 0 then goto L1ae86e;
  #L1ae85e.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ae862.  v6:= "string == null" @kind object;
  #L1ae866.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae86c.  throw v3;
  #L1ae86e.  if v13 >= 0 then goto L1ae8a4;
  #L1ae872.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ae876.  v6:= new `java.lang.StringBuilder`;
  #L1ae87a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ae880.  v7:= "beginIndex < 0: " @kind object;
  #L1ae884.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae88a.  v6:= temp @kind object;
  #L1ae88c.  call temp:= `append`(v6, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae892.  v6:= temp @kind object;
  #L1ae894.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ae89a.  v6:= temp @kind object;
  #L1ae89c.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae8a2.  throw v3;
  #L1ae8a4.  if v14 >= v13 then goto L1ae8ee;
  #L1ae8a8.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ae8ac.  v6:= new `java.lang.StringBuilder`;
  #L1ae8b0.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ae8b6.  v7:= "endIndex < beginIndex: " @kind object;
  #L1ae8ba.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae8c0.  v6:= temp @kind object;
  #L1ae8c2.  call temp:= `append`(v6, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae8c8.  v6:= temp @kind object;
  #L1ae8ca.  v7:= " < " @kind object;
  #L1ae8ce.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae8d4.  v6:= temp @kind object;
  #L1ae8d6.  call temp:= `append`(v6, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae8dc.  v6:= temp @kind object;
  #L1ae8de.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ae8e4.  v6:= temp @kind object;
  #L1ae8e6.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae8ec.  throw v3;
  #L1ae8ee.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ae8f4.  v3:= temp;
  #L1ae8f6.  if v14 <= v3 then goto L1ae948;
  #L1ae8fa.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ae8fe.  v6:= new `java.lang.StringBuilder`;
  #L1ae902.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ae908.  v7:= "endIndex > string.length: " @kind object;
  #L1ae90c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae912.  v6:= temp @kind object;
  #L1ae914.  call temp:= `append`(v6, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae91a.  v6:= temp @kind object;
  #L1ae91c.  v7:= " > " @kind object;
  #L1ae920.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae926.  v6:= temp @kind object;
  #L1ae928.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ae92e.  v7:= temp;
  #L1ae930.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae936.  v6:= temp @kind object;
  #L1ae938.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ae93e.  v6:= temp @kind object;
  #L1ae940.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae946.  throw v3;
  #L1ae948.  v4:= 0L;
  #L1ae94c.  v1:= v13;
  #L1ae94e.  if v1 >= v14 then goto L1ae9dc;
  #L1ae952.  call temp:= `charAt`(v12, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1ae958.  v0:= temp;
  #L1ae95a.  v3:= 128I;
  #L1ae95e.  if v0 >= v3 then goto L1ae96a;
  #L1ae962.  v4:= v4 + v10 @kind long;
  #L1ae964.  v1:= v1 + 1;
  #L1ae968.  goto L1ae94e;
  #L1ae96a.  v3:= 2048I;
  #L1ae96e.  if v0 >= v3 then goto L1ae97e;
  #L1ae972.  v6:= 2L;
  #L1ae976.  v4:= v4 + v6 @kind long;
  #L1ae978.  v1:= v1 + 1;
  #L1ae97c.  goto L1ae94e;
  #L1ae97e.  v3:= 55296I;
  #L1ae984.  if v0 < v3 then goto L1ae98c;
  #L1ae988.  if v0 <= v8 then goto L1ae998;
  #L1ae98c.  v6:= 3L;
  #L1ae990.  v4:= v4 + v6 @kind long;
  #L1ae992.  v1:= v1 + 1;
  #L1ae996.  goto L1ae94e;
  #L1ae998.  v3:= v1 + 1;
  #L1ae99c.  if v3 >= v14 then goto L1ae9cc;
  #L1ae9a0.  v3:= v1 + 1;
  #L1ae9a4.  call temp:= `charAt`(v12, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1ae9aa.  v2:= temp;
  #L1ae9ac.  v3:= 56319I;
  #L1ae9b2.  if v0 > v3 then goto L1ae9c4;
  #L1ae9b6.  v3:= 56320I;
  #L1ae9bc.  if v2 < v3 then goto L1ae9c4;
  #L1ae9c0.  if v2 <= v8 then goto L1ae9d0;
  #L1ae9c4.  v4:= v4 + v10 @kind long;
  #L1ae9c6.  v1:= v1 + 1;
  #L1ae9ca.  goto L1ae94e;
  #L1ae9cc.  v2:= 0I;
  #L1ae9ce.  goto L1ae9ac;
  #L1ae9d0.  v6:= 4L;
  #L1ae9d4.  v4:= v4 + v6 @kind long;
  #L1ae9d6.  v1:= v1 + 2;
  #L1ae9da.  goto L1ae94e;
  #L1ae9dc.  return v4 @kind wide;
}

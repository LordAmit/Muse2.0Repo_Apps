record `okio.GzipSink` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Sink` @kind interface {
  `boolean` `okio.GzipSink.closed` @AccessFlag PRIVATE;
  `java.util.zip.CRC32` `okio.GzipSink.crc` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Deflater` `okio.GzipSink.deflater` @AccessFlag PRIVATE_FINAL;
  `okio.DeflaterSink` `okio.GzipSink.deflaterSink` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSink` `okio.GzipSink.sink` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.GzipSink` v3 @kind this, `okio.Sink` v4 @kind object @name `sink`) @signature `Lokio/GzipSink;.<init>:(Lokio/Sink;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L21e3cc.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21e3d2.  v0:= new `java.util.zip.CRC32`;
  #L21e3d6.  call `<init>`(v0) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L21e3dc.  v3.`okio.GzipSink.crc` @type ^`java.util.zip.CRC32` := v0 @kind object;
  #L21e3e0.  if v4 != 0 then goto L21e3f4;
  #L21e3e4.  v0:= new `java.lang.IllegalArgumentException`;
  #L21e3e8.  v1:= "sink == null" @kind object;
  #L21e3ec.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21e3f2.  throw v0;
  #L21e3f4.  v0:= new `java.util.zip.Deflater`;
  #L21e3f8.  v1:= -1I;
  #L21e3fa.  v2:= 1I;
  #L21e3fc.  call `<init>`(v0, v1, v2) @signature `Ljava/util/zip/Deflater;.<init>:(IZ)V` @kind direct;
  #L21e402.  v3.`okio.GzipSink.deflater` @type ^`java.util.zip.Deflater` := v0 @kind object;
  #L21e406.  call temp:= `buffer`(v4) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L21e40c.  v0:= temp @kind object;
  #L21e40e.  v3.`okio.GzipSink.sink` @type ^`okio.BufferedSink` := v0 @kind object;
  #L21e412.  v0:= new `okio.DeflaterSink`;
  #L21e416.  v1:= v3.`okio.GzipSink.sink` @type ^`okio.BufferedSink` @kind object;
  #L21e41a.  v2:= v3.`okio.GzipSink.deflater` @type ^`java.util.zip.Deflater` @kind object;
  #L21e41e.  call `<init>`(v0, v1, v2) @signature `Lokio/DeflaterSink;.<init>:(Lokio/BufferedSink;Ljava/util/zip/Deflater;)V` @kind direct;
  #L21e424.  v3.`okio.GzipSink.deflaterSink` @type ^`okio.DeflaterSink` := v0 @kind object;
  #L21e428.  call `writeHeader`(v3) @signature `Lokio/GzipSink;.writeHeader:()V` @kind direct;
  #L21e42e.  return @kind void;
}
procedure `void` `updateCrc`(`okio.GzipSink` v6 @kind this, `okio.Buffer` v7 @kind object @name `buffer`, `long` v8 @name `byteCount`) @signature `Lokio/GzipSink;.updateCrc:(Lokio/Buffer;J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21e440.  v0:= v7.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L21e444.  v2:= 0L;
  #L21e448.  v2:= lcmp(v8, v2);
  #L21e44c.  if v2 <= 0 then goto L21e482;
  #L21e450.  v2:= v0.`okio.Segment.limit` @type ^`int`;
  #L21e454.  v3:= v0.`okio.Segment.pos` @type ^`int`;
  #L21e458.  v2:= v2 - v3 @kind int;
  #L21e45a.  v2:= (`long`) v2 @kind i2l;
  #L21e45c.  call temp:= `min`(v8, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L21e462.  v2:= temp @kind wide;
  #L21e464.  v1:= (`int`) v2 @kind l2i;
  #L21e466.  v2:= v6.`okio.GzipSink.crc` @type ^`java.util.zip.CRC32` @kind object;
  #L21e46a.  v3:= v0.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L21e46e.  v4:= v0.`okio.Segment.pos` @type ^`int`;
  #L21e472.  call `update`(v2, v3, v4, v1) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L21e478.  v2:= (`long`) v1 @kind i2l;
  #L21e47a.  v8:= v8 - v2 @kind long;
  #L21e47c.  v0:= v0.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L21e480.  goto L21e444;
  #L21e482.  return @kind void;
}
procedure `void` `writeFooter`(`okio.GzipSink` v4 @kind this) @signature `Lokio/GzipSink;.writeFooter:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21e494.  v0:= v4.`okio.GzipSink.sink` @type ^`okio.BufferedSink` @kind object;
  #L21e498.  v1:= v4.`okio.GzipSink.crc` @type ^`java.util.zip.CRC32` @kind object;
  #L21e49c.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L21e4a2.  v2:= temp @kind wide;
  #L21e4a4.  v1:= (`int`) v2 @kind l2i;
  #L21e4a6.  call temp:= `writeIntLe`(v0, v1) @signature `Lokio/BufferedSink;.writeIntLe:(I)Lokio/BufferedSink;` @kind interface;
  #L21e4ac.  v0:= v4.`okio.GzipSink.sink` @type ^`okio.BufferedSink` @kind object;
  #L21e4b0.  v1:= v4.`okio.GzipSink.deflater` @type ^`java.util.zip.Deflater` @kind object;
  #L21e4b4.  call temp:= `getBytesRead`(v1) @signature `Ljava/util/zip/Deflater;.getBytesRead:()J` @kind virtual;
  #L21e4ba.  v2:= temp @kind wide;
  #L21e4bc.  v1:= (`int`) v2 @kind l2i;
  #L21e4be.  call temp:= `writeIntLe`(v0, v1) @signature `Lokio/BufferedSink;.writeIntLe:(I)Lokio/BufferedSink;` @kind interface;
  #L21e4c4.  return @kind void;
}
procedure `void` `writeHeader`(`okio.GzipSink` v3 @kind this) @signature `Lokio/GzipSink;.writeHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L21e4d8.  v2:= 0I;
  #L21e4da.  v1:= v3.`okio.GzipSink.sink` @type ^`okio.BufferedSink` @kind object;
  #L21e4de.  call temp:= `buffer`(v1) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L21e4e4.  v0:= temp @kind object;
  #L21e4e6.  v1:= 8075I;
  #L21e4ea.  call temp:= `writeShort`(v0, v1) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L21e4f0.  v1:= 8I;
  #L21e4f4.  call temp:= `writeByte`(v0, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L21e4fa.  call temp:= `writeByte`(v0, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L21e500.  call temp:= `writeInt`(v0, v2) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L21e506.  call temp:= `writeByte`(v0, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L21e50c.  call temp:= `writeByte`(v0, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L21e512.  return @kind void;
}
procedure `void` `close`(`okio.GzipSink` v3 @kind this) @signature `Lokio/GzipSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21e524.  v2:= v3.`okio.GzipSink.closed` @type ^`boolean` @kind boolean;
  #L21e528.  if v2 == 0 then goto L21e52e;
  #L21e52c.  return @kind void;
  #L21e52e.  v1:= 0I;
  #Try_start0.  
  #L21e530.  v2:= v3.`okio.GzipSink.deflaterSink` @type ^`okio.DeflaterSink` @kind object;
  #L21e534.  call `finishDeflate`(v2) @signature `Lokio/DeflaterSink;.finishDeflate:()V` @kind virtual;
  #L21e53a.  call `writeFooter`(v3) @signature `Lokio/GzipSink;.writeFooter:()V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L21e540.  v2:= v3.`okio.GzipSink.deflater` @type ^`java.util.zip.Deflater` @kind object;
  #L21e544.  call `end`(v2) @signature `Ljava/util/zip/Deflater;.end:()V` @kind virtual;
  #Try_end1.  
  #Try_start2.  
  #L21e54a.  v2:= v3.`okio.GzipSink.sink` @type ^`okio.BufferedSink` @kind object;
  #L21e54e.  call `close`(v2) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #Try_end2.  
  #L21e554.  v2:= 1I;
  #L21e556.  v3.`okio.GzipSink.closed` @type ^`boolean` := v2 @kind boolean;
  #L21e55a.  if v1 == 0 then goto L21e52c;
  #L21e55e.  call `sneakyRethrow`(v1) @signature `Lokio/Util;.sneakyRethrow:(Ljava/lang/Throwable;)V` @kind static;
  #L21e564.  goto L21e52c;
  #L21e566.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21e568.  v1:= v0 @kind object;
  #L21e56a.  goto L21e540;
  #L21e56c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21e56e.  if v1 != 0 then goto L21e54a;
  #L21e572.  v1:= v0 @kind object;
  #L21e574.  goto L21e54a;
  #L21e576.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21e578.  if v1 != 0 then goto L21e554;
  #L21e57c.  v1:= v0 @kind object;
  #L21e57e.  goto L21e554;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21e566;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21e56c;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21e576;
}
procedure `java.util.zip.Deflater` `deflater`(`okio.GzipSink` v1 @kind this) @signature `Lokio/GzipSink;.deflater:()Ljava/util/zip/Deflater;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21e5b8.  v0:= v1.`okio.GzipSink.deflater` @type ^`java.util.zip.Deflater` @kind object;
  #L21e5bc.  return v0 @kind object;
}
procedure `void` `flush`(`okio.GzipSink` v1 @kind this) @signature `Lokio/GzipSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21e5d0.  v0:= v1.`okio.GzipSink.deflaterSink` @type ^`okio.DeflaterSink` @kind object;
  #L21e5d4.  call `flush`(v0) @signature `Lokio/DeflaterSink;.flush:()V` @kind virtual;
  #L21e5da.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.GzipSink` v1 @kind this) @signature `Lokio/GzipSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21e5ec.  v0:= v1.`okio.GzipSink.sink` @type ^`okio.BufferedSink` @kind object;
  #L21e5f0.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L21e5f6.  v0:= temp @kind object;
  #L21e5f8.  return v0 @kind object;
}
procedure `void` `write`(`okio.GzipSink` v4 @kind this, `okio.Buffer` v5 @kind object @name `source`, `long` v6 @name `byteCount`) @signature `Lokio/GzipSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21e60c.  v2:= 0L;
  #L21e610.  v0:= lcmp(v6, v2);
  #L21e614.  if v0 >= 0 then goto L21e64a;
  #L21e618.  v0:= new `java.lang.IllegalArgumentException`;
  #L21e61c.  v1:= new `java.lang.StringBuilder`;
  #L21e620.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21e626.  v2:= "byteCount < 0: " @kind object;
  #L21e62a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21e630.  v1:= temp @kind object;
  #L21e632.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L21e638.  v1:= temp @kind object;
  #L21e63a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21e640.  v1:= temp @kind object;
  #L21e642.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21e648.  throw v0;
  #L21e64a.  v0:= lcmp(v6, v2);
  #L21e64e.  if v0 != 0 then goto L21e654;
  #L21e652.  return @kind void;
  #L21e654.  call `updateCrc`(v4, v5, v6) @signature `Lokio/GzipSink;.updateCrc:(Lokio/Buffer;J)V` @kind direct;
  #L21e65a.  v0:= v4.`okio.GzipSink.deflaterSink` @type ^`okio.DeflaterSink` @kind object;
  #L21e65e.  call `write`(v0, v5, v6) @signature `Lokio/DeflaterSink;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L21e664.  goto L21e652;
}

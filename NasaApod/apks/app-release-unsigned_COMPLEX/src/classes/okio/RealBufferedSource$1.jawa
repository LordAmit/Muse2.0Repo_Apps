record `okio.RealBufferedSource$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.RealBufferedSource` `okio.RealBufferedSource$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSource$1` v0 @kind this, `okio.RealBufferedSource` v1 @kind object @name `this$0`) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1adeec.  v0.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` := v1 @kind object;
  #L1adef0.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1adef6.  return @kind void;
}
procedure `int` `available`(`okio.RealBufferedSource$1` v4 @kind this) @signature `Lokio/RealBufferedSource$1;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1adf08.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adf0c.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1adf10.  if v0 == 0 then goto L1adf24;
  #L1adf14.  v0:= new `java.io.IOException`;
  #L1adf18.  v1:= "closed" @kind object;
  #L1adf1c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1adf22.  throw v0;
  #L1adf24.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adf28.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1adf2c.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1adf30.  v2:= 2147483647L;
  #L1adf36.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1adf3c.  v0:= temp @kind wide;
  #L1adf3e.  v0:= (`int`) v0 @kind l2i;
  #L1adf40.  return v0;
}
procedure `void` `close`(`okio.RealBufferedSource$1` v1 @kind this) @signature `Lokio/RealBufferedSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1adf54.  v0:= v1.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adf58.  call `close`(v0) @signature `Lokio/RealBufferedSource;.close:()V` @kind virtual;
  #L1adf5e.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v6 @kind this) @signature `Lokio/RealBufferedSource$1;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1adf70.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adf74.  v2:= v2.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1adf78.  if v2 == 0 then goto L1adf8c;
  #L1adf7c.  v2:= new `java.io.IOException`;
  #L1adf80.  v3:= "closed" @kind object;
  #L1adf84.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1adf8a.  throw v2;
  #L1adf8c.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adf90.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1adf94.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1adf98.  v4:= 0L;
  #L1adf9c.  v2:= lcmp(v2, v4);
  #L1adfa0.  if v2 != 0 then goto L1adfd0;
  #L1adfa4.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adfa8.  v2:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1adfac.  v3:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adfb0.  v3:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1adfb4.  v4:= 8192L;
  #L1adfb8.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1adfbe.  v0:= temp @kind wide;
  #L1adfc0.  v2:= -1L;
  #L1adfc4.  v2:= lcmp(v0, v2);
  #L1adfc8.  if v2 != 0 then goto L1adfd0;
  #L1adfcc.  v2:= -1I;
  #L1adfce.  return v2;
  #L1adfd0.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adfd4.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1adfd8.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1adfde.  v2:= temp;
  #L1adfe0.  v2:= v2 ^& 255;
  #L1adfe4.  goto L1adfce;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v8 @kind this, `byte`[] v9 @kind object @name `data`, `int` v10 @name `offset`, `int` v11 @name `byteCount`) @signature `Lokio/RealBufferedSource$1;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1adff8.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1adffc.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1ae000.  if v0 == 0 then goto L1ae014;
  #L1ae004.  v0:= new `java.io.IOException`;
  #L1ae008.  v1:= "closed" @kind object;
  #L1ae00c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae012.  throw v0;
  #L1ae014.  v0:= length @variable v9;
  #L1ae016.  v0:= (`long`) v0 @kind i2l;
  #L1ae018.  v2:= (`long`) v10 @kind i2l;
  #L1ae01a.  v4:= (`long`) v11 @kind i2l;
  #L1ae01c.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1ae022.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ae026.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1ae02a.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1ae02e.  v2:= 0L;
  #L1ae032.  v0:= lcmp(v0, v2);
  #L1ae036.  if v0 != 0 then goto L1ae066;
  #L1ae03a.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ae03e.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1ae042.  v1:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ae046.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1ae04a.  v2:= 8192L;
  #L1ae04e.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1ae054.  v6:= temp @kind wide;
  #L1ae056.  v0:= -1L;
  #L1ae05a.  v0:= lcmp(v6, v0);
  #L1ae05e.  if v0 != 0 then goto L1ae066;
  #L1ae062.  v0:= -1I;
  #L1ae064.  return v0;
  #L1ae066.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ae06a.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1ae06e.  call temp:= `read`(v0, v9, v10, v11) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L1ae074.  v0:= temp;
  #L1ae076.  goto L1ae064;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource$1` v2 @kind this) @signature `Lokio/RealBufferedSource$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ae088.  v0:= new `java.lang.StringBuilder`;
  #L1ae08c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ae092.  v1:= v2.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1ae096.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae09c.  v0:= temp @kind object;
  #L1ae09e.  v1:= ".inputStream()" @kind object;
  #L1ae0a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ae0a8.  v0:= temp @kind object;
  #L1ae0aa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ae0b0.  v0:= temp @kind object;
  #L1ae0b2.  return v0 @kind object;
}

record `okio.Buffer$2` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.Buffer` `okio.Buffer$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Buffer$2` v0 @kind this, `okio.Buffer` v1 @kind object @name `this$0`) @signature `Lokio/Buffer$2;.<init>:(Lokio/Buffer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ac140.  v0.`okio.Buffer$2.this$0` @type ^`okio.Buffer` := v1 @kind object;
  #L1ac144.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1ac14a.  return @kind void;
}
procedure `int` `available`(`okio.Buffer$2` v4 @kind this) @signature `Lokio/Buffer$2;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ac15c.  v0:= v4.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L1ac160.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1ac164.  v2:= 2147483647L;
  #L1ac16a.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1ac170.  v0:= temp @kind wide;
  #L1ac172.  v0:= (`int`) v0 @kind l2i;
  #L1ac174.  return v0;
}
procedure `void` `close`(`okio.Buffer$2` v0 @kind this) @signature `Lokio/Buffer$2;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L1ac188.  return @kind void;
}
procedure `int` `read`(`okio.Buffer$2` v4 @kind this) @signature `Lokio/Buffer$2;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ac19c.  v0:= v4.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L1ac1a0.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1ac1a4.  v2:= 0L;
  #L1ac1a8.  v0:= lcmp(v0, v2);
  #L1ac1ac.  if v0 <= 0 then goto L1ac1c2;
  #L1ac1b0.  v0:= v4.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L1ac1b4.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1ac1ba.  v0:= temp;
  #L1ac1bc.  v0:= v0 ^& 255;
  #L1ac1c0.  return v0;
  #L1ac1c2.  v0:= -1I;
  #L1ac1c4.  goto L1ac1c0;
}
procedure `int` `read`(`okio.Buffer$2` v1 @kind this, `byte`[] v2 @kind object @name `sink`, `int` v3 @name `offset`, `int` v4 @name `byteCount`) @signature `Lokio/Buffer$2;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ac1d8.  v0:= v1.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L1ac1dc.  call temp:= `read`(v0, v2, v3, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L1ac1e2.  v0:= temp;
  #L1ac1e4.  return v0;
}
procedure `java.lang.String` `toString`(`okio.Buffer$2` v2 @kind this) @signature `Lokio/Buffer$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ac1f8.  v0:= new `java.lang.StringBuilder`;
  #L1ac1fc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac202.  v1:= v2.`okio.Buffer$2.this$0` @type ^`okio.Buffer` @kind object;
  #L1ac206.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac20c.  v0:= temp @kind object;
  #L1ac20e.  v1:= ".inputStream()" @kind object;
  #L1ac212.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac218.  v0:= temp @kind object;
  #L1ac21a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac220.  v0:= temp @kind object;
  #L1ac222.  return v0 @kind object;
}

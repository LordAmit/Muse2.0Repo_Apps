record `retrofit2.ParameterHandler$QueryName` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$QueryName.encoded` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$QueryName.nameConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$QueryName` v0 @kind this, `retrofit2.Converter` v1 @kind object, `boolean` v2 @name `encoded`) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L222538.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L22253e.  v0.`retrofit2.ParameterHandler$QueryName.nameConverter` @type ^`retrofit2.Converter` := v1 @kind object;
  #L222542.  v0.`retrofit2.ParameterHandler$QueryName.encoded` @type ^`boolean` := v2 @kind boolean;
  #L222546.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$QueryName` v3 @kind this, `retrofit2.RequestBuilder` v4 @kind object @name `builder`, `java.lang.Object` v5 @kind object) @signature `Lretrofit2/ParameterHandler$QueryName;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L222558.  if v5 != 0 then goto L22255e;
  #L22255c.  return @kind void;
  #L22255e.  v0:= v3.`retrofit2.ParameterHandler$QueryName.nameConverter` @type ^`retrofit2.Converter` @kind object;
  #L222562.  call temp:= `convert`(v0, v5) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L222568.  v0:= temp @kind object;
  #L22256a.  v0:= (`java.lang.String`) v0 @kind object;
  #L22256e.  v1:= 0I;
  #L222570.  v2:= v3.`retrofit2.ParameterHandler$QueryName.encoded` @type ^`boolean` @kind boolean;
  #L222574.  call `addQueryParam`(v4, v0, v1, v2) @signature `Lretrofit2/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L22257a.  goto L22255c;
}

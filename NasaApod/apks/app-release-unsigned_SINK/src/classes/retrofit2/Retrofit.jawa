record `retrofit2.Retrofit` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.HttpUrl` `retrofit2.Retrofit.baseUrl` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.callAdapterFactories` @AccessFlag FINAL;
  `okhttp3.Call$Factory` `retrofit2.Retrofit.callFactory` @AccessFlag FINAL;
  `java.util.concurrent.Executor` `retrofit2.Retrofit.callbackExecutor` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.converterFactories` @AccessFlag FINAL;
  `java.util.Map` `retrofit2.Retrofit.serviceMethodCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.Retrofit.validateEagerly` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.Retrofit` v1 @kind this, `okhttp3.Call$Factory` v2 @kind object @name `callFactory`, `okhttp3.HttpUrl` v3 @kind object @name `baseUrl`, `java.util.List` v4 @kind object, `java.util.List` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object @name `callbackExecutor`, `boolean` v7 @name `validateEagerly`) @signature `Lretrofit2/Retrofit;.<init>:(Lokhttp3/Call$Factory;Lokhttp3/HttpUrl;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1b0ff8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b0ffe.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L1b1002.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L1b1008.  v1.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` := v0 @kind object;
  #L1b100c.  v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` := v2 @kind object;
  #L1b1010.  v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L1b1014.  v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` := v4 @kind object;
  #L1b1018.  v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` := v5 @kind object;
  #L1b101c.  v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` := v6 @kind object;
  #L1b1020.  v1.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` := v7 @kind boolean;
  #L1b1024.  return @kind void;
}
procedure `void` `eagerlyValidateMethods`(`retrofit2.Retrofit` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1038.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L1b103e.  v1:= temp @kind object;
  #L1b1040.  call temp:= `getDeclaredMethods`(v7) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L1b1046.  v3:= temp @kind object;
  #L1b1048.  v4:= length @variable v3;
  #L1b104a.  v2:= 0I;
  #L1b104c.  if v2 >= v4 then goto L1b106c;
  #L1b1050.  v0:= v3[v2] @kind object;
  #L1b1054.  call temp:= `isDefaultMethod`(v1, v0) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @kind virtual;
  #L1b105a.  v5:= temp;
  #L1b105c.  if v5 != 0 then goto L1b1066;
  #L1b1060.  call temp:= `loadServiceMethod`(v6, v0) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind virtual;
  #L1b1066.  v2:= v2 + 1;
  #L1b106a.  goto L1b104c;
  #L1b106c.  return @kind void;
}
procedure `okhttp3.HttpUrl` `baseUrl`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.baseUrl:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1080.  v0:= v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1b1084.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `callAdapter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1098.  v0:= 0I;
  #L1b109a.  call temp:= `nextCallAdapter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L1b10a0.  v0:= temp @kind object;
  #L1b10a2.  return v0 @kind object;
}
procedure `java.util.List` `callAdapterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callAdapterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b10b4.  v0:= v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b10b8.  return v0 @kind object;
}
procedure `okhttp3.Call$Factory` `callFactory`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callFactory:()Lokhttp3/Call$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b10cc.  v0:= v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L1b10d0.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `callbackExecutor`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b10e4.  v0:= v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L1b10e8.  return v0 @kind object;
}
procedure `java.util.List` `converterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.converterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b10fc.  v0:= v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1100.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`retrofit2.Retrofit` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b1114.  call `validateServiceInterface`(v4) @signature `Lretrofit2/Utils;.validateServiceInterface:(Ljava/lang/Class;)V` @kind static;
  #L1b111a.  v0:= v3.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` @kind boolean;
  #L1b111e.  if v0 == 0 then goto L1b1128;
  #L1b1122.  call `eagerlyValidateMethods`(v3, v4) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @kind direct;
  #L1b1128.  call temp:= `getClassLoader`(v4) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1b112e.  v0:= temp @kind object;
  #L1b1130.  v1:= 1I;
  #L1b1132.  v1:= new `java.lang.Class`[v1];
  #L1b1136.  v2:= 0I;
  #L1b1138.  v1[v2]:= v4 @kind object;
  #L1b113c.  v2:= new `retrofit2.Retrofit$1`;
  #L1b1140.  call `<init>`(v2, v3, v4) @signature `Lretrofit2/Retrofit$1;.<init>:(Lretrofit2/Retrofit;Ljava/lang/Class;)V` @kind direct;
  #L1b1146.  call temp:= `newProxyInstance`(v0, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L1b114c.  v0:= temp @kind object;
  #L1b114e.  return v0 @kind object;
}
procedure `retrofit2.ServiceMethod` `loadServiceMethod`(`retrofit2.Retrofit` v5 @kind this, `java.lang.reflect.Method` v6 @kind object @name `method`) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b1160.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1b1164.  call temp:= `get`(v3, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b116a.  v1:= temp @kind object;
  #L1b116c.  v1:= (`retrofit2.ServiceMethod`) v1 @kind object;
  #L1b1170.  if v1 == 0 then goto L1b1178;
  #L1b1174.  v2:= v1 @kind object;
  #L1b1176.  return v2 @kind object;
  #L1b1178.  v4:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1b117c.  @monitorenter v4
  #Try_start0.  
  #L1b117e.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1b1182.  call temp:= `get`(v3, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b1188.  v3:= temp @kind object;
  #L1b118a.  v0:= v3 @kind object;
  #L1b118c.  v0:= (`retrofit2.ServiceMethod`) v0 @kind object;
  #L1b1190.  v1:= v0 @kind object;
  #L1b1192.  if v1 != 0 then goto L1b11b2;
  #L1b1196.  v3:= new `retrofit2.ServiceMethod$Builder`;
  #L1b119a.  call `<init>`(v3, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @kind direct;
  #L1b11a0.  call temp:= `build`(v3) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @kind virtual;
  #L1b11a6.  v1:= temp @kind object;
  #L1b11a8.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1b11ac.  call temp:= `put`(v3, v6, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b11b2.  @monitorexit v4
  #L1b11b4.  v2:= v1 @kind object;
  #L1b11b6.  goto L1b1176;
  #L1b11b8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b11ba.  @monitorexit v4
  #Try_end0.  
  #L1b11bc.  throw v3;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1b11b8;
}
procedure `retrofit2.Retrofit$Builder` `newBuilder`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.newBuilder:()Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b11dc.  v0:= new `retrofit2.Retrofit$Builder`;
  #L1b11e0.  call `<init>`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Retrofit;)V` @kind direct;
  #L1b11e6.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `nextCallAdapter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.CallAdapter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b11f8.  v5:= "returnType == null" @kind object;
  #L1b11fc.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b1202.  v5:= "annotations == null" @kind object;
  #L1b1206.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b120c.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b1210.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1b1216.  v5:= temp;
  #L1b1218.  v4:= v5 + 1;
  #L1b121c.  v3:= v4;
  #L1b121e.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b1222.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b1228.  v2:= temp;
  #L1b122a.  if v3 >= v2 then goto L1b1252;
  #L1b122e.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b1232.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b1238.  v5:= temp @kind object;
  #L1b123a.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1b123e.  call temp:= `get`(v5, v9, v10, v7) @signature `Lretrofit2/CallAdapter$Factory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @kind virtual;
  #L1b1244.  v0:= temp @kind object;
  #L1b1246.  if v0 == 0 then goto L1b124c;
  #L1b124a.  return v0 @kind object;
  #L1b124c.  v3:= v3 + 1;
  #L1b1250.  goto L1b122a;
  #L1b1252.  v5:= new `java.lang.StringBuilder`;
  #L1b1256.  v6:= "Could not locate call adapter for " @kind object;
  #L1b125a.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1260.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1266.  v5:= temp @kind object;
  #L1b1268.  v6:= ".\n" @kind object;
  #L1b126c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1272.  v1:= temp @kind object;
  #L1b1274.  if v8 == 0 then goto L1b12ca;
  #L1b1278.  v5:= "  Skipped:" @kind object;
  #L1b127c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1282.  v3:= 0I;
  #L1b1284.  if v3 >= v4 then goto L1b12c0;
  #L1b1288.  v5:= "\n   * " @kind object;
  #L1b128c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1292.  v6:= temp @kind object;
  #L1b1294.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b1298.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b129e.  v5:= temp @kind object;
  #L1b12a0.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1b12a4.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b12aa.  v5:= temp @kind object;
  #L1b12ac.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b12b2.  v5:= temp @kind object;
  #L1b12b4.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12ba.  v3:= v3 + 1;
  #L1b12be.  goto L1b1284;
  #L1b12c0.  v5:= 10I;
  #L1b12c4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12ca.  v5:= "  Tried:" @kind object;
  #L1b12ce.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12d4.  v3:= v4;
  #L1b12d6.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b12da.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b12e0.  v2:= temp;
  #L1b12e2.  if v3 >= v2 then goto L1b131e;
  #L1b12e6.  v5:= "\n   * " @kind object;
  #L1b12ea.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12f0.  v6:= temp @kind object;
  #L1b12f2.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b12f6.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b12fc.  v5:= temp @kind object;
  #L1b12fe.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1b1302.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b1308.  v5:= temp @kind object;
  #L1b130a.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1310.  v5:= temp @kind object;
  #L1b1312.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1318.  v3:= v3 + 1;
  #L1b131c.  goto L1b12e2;
  #L1b131e.  v5:= new `java.lang.IllegalArgumentException`;
  #L1b1322.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1328.  v6:= temp @kind object;
  #L1b132a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1330.  throw v5;
}
procedure `retrofit2.Converter` `nextRequestBodyConverter`(`retrofit2.Retrofit` v8 @kind this, `retrofit2.Converter$Factory` v9 @kind object @name `skipPast`, `java.lang.reflect.Type` v10 @kind object @name `type`, `java.lang.annotation.Annotation`[] v11 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v12 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b1344.  v6:= "type == null" @kind object;
  #L1b1348.  call temp:= `checkNotNull`(v10, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b134e.  v6:= "parameterAnnotations == null" @kind object;
  #L1b1352.  call temp:= `checkNotNull`(v11, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b1358.  v6:= "methodAnnotations == null" @kind object;
  #L1b135c.  call temp:= `checkNotNull`(v12, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b1362.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1366.  call temp:= `indexOf`(v6, v9) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1b136c.  v6:= temp;
  #L1b136e.  v5:= v6 + 1;
  #L1b1372.  v4:= v5;
  #L1b1374.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1378.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b137e.  v2:= temp;
  #L1b1380.  if v4 >= v2 then goto L1b13a8;
  #L1b1384.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1388.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b138e.  v3:= temp @kind object;
  #L1b1390.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L1b1394.  call temp:= `requestBodyConverter`(v3, v10, v11, v12, v8) @signature `Lretrofit2/Converter$Factory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b139a.  v1:= temp @kind object;
  #L1b139c.  if v1 == 0 then goto L1b13a2;
  #L1b13a0.  return v1 @kind object;
  #L1b13a2.  v4:= v4 + 1;
  #L1b13a6.  goto L1b1380;
  #L1b13a8.  v6:= new `java.lang.StringBuilder`;
  #L1b13ac.  v7:= "Could not locate RequestBody converter for " @kind object;
  #L1b13b0.  call `<init>`(v6, v7) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b13b6.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13bc.  v6:= temp @kind object;
  #L1b13be.  v7:= ".\n" @kind object;
  #L1b13c2.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13c8.  v0:= temp @kind object;
  #L1b13ca.  if v9 == 0 then goto L1b1420;
  #L1b13ce.  v6:= "  Skipped:" @kind object;
  #L1b13d2.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13d8.  v4:= 0I;
  #L1b13da.  if v4 >= v5 then goto L1b1416;
  #L1b13de.  v6:= "\n   * " @kind object;
  #L1b13e2.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13e8.  v7:= temp @kind object;
  #L1b13ea.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b13ee.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b13f4.  v6:= temp @kind object;
  #L1b13f6.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L1b13fa.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b1400.  v6:= temp @kind object;
  #L1b1402.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1408.  v6:= temp @kind object;
  #L1b140a.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1410.  v4:= v4 + 1;
  #L1b1414.  goto L1b13da;
  #L1b1416.  v6:= 10I;
  #L1b141a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1420.  v6:= "  Tried:" @kind object;
  #L1b1424.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b142a.  v4:= v5;
  #L1b142c.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1430.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b1436.  v2:= temp;
  #L1b1438.  if v4 >= v2 then goto L1b1474;
  #L1b143c.  v6:= "\n   * " @kind object;
  #L1b1440.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1446.  v7:= temp @kind object;
  #L1b1448.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b144c.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b1452.  v6:= temp @kind object;
  #L1b1454.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L1b1458.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b145e.  v6:= temp @kind object;
  #L1b1460.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1466.  v6:= temp @kind object;
  #L1b1468.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b146e.  v4:= v4 + 1;
  #L1b1472.  goto L1b1438;
  #L1b1474.  v6:= new `java.lang.IllegalArgumentException`;
  #L1b1478.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b147e.  v7:= temp @kind object;
  #L1b1480.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1486.  throw v6;
}
procedure `retrofit2.Converter` `nextResponseBodyConverter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.Converter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `type`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b1498.  v5:= "type == null" @kind object;
  #L1b149c.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b14a2.  v5:= "annotations == null" @kind object;
  #L1b14a6.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b14ac.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b14b0.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1b14b6.  v5:= temp;
  #L1b14b8.  v4:= v5 + 1;
  #L1b14bc.  v3:= v4;
  #L1b14be.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b14c2.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b14c8.  v2:= temp;
  #L1b14ca.  if v3 >= v2 then goto L1b14f2;
  #L1b14ce.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b14d2.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b14d8.  v5:= temp @kind object;
  #L1b14da.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b14de.  call temp:= `responseBodyConverter`(v5, v9, v10, v7) @signature `Lretrofit2/Converter$Factory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b14e4.  v1:= temp @kind object;
  #L1b14e6.  if v1 == 0 then goto L1b14ec;
  #L1b14ea.  return v1 @kind object;
  #L1b14ec.  v3:= v3 + 1;
  #L1b14f0.  goto L1b14ca;
  #L1b14f2.  v5:= new `java.lang.StringBuilder`;
  #L1b14f6.  v6:= "Could not locate ResponseBody converter for " @kind object;
  #L1b14fa.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1500.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1506.  v5:= temp @kind object;
  #L1b1508.  v6:= ".\n" @kind object;
  #L1b150c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1512.  v0:= temp @kind object;
  #L1b1514.  if v8 == 0 then goto L1b156a;
  #L1b1518.  v5:= "  Skipped:" @kind object;
  #L1b151c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1522.  v3:= 0I;
  #L1b1524.  if v3 >= v4 then goto L1b1560;
  #L1b1528.  v5:= "\n   * " @kind object;
  #L1b152c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1532.  v6:= temp @kind object;
  #L1b1534.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1538.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b153e.  v5:= temp @kind object;
  #L1b1540.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b1544.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b154a.  v5:= temp @kind object;
  #L1b154c.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1552.  v5:= temp @kind object;
  #L1b1554.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b155a.  v3:= v3 + 1;
  #L1b155e.  goto L1b1524;
  #L1b1560.  v5:= 10I;
  #L1b1564.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b156a.  v5:= "  Tried:" @kind object;
  #L1b156e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1574.  v3:= v4;
  #L1b1576.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b157a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b1580.  v2:= temp;
  #L1b1582.  if v3 >= v2 then goto L1b15be;
  #L1b1586.  v5:= "\n   * " @kind object;
  #L1b158a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1590.  v6:= temp @kind object;
  #L1b1592.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1596.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b159c.  v5:= temp @kind object;
  #L1b159e.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b15a2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b15a8.  v5:= temp @kind object;
  #L1b15aa.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b15b0.  v5:= temp @kind object;
  #L1b15b2.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b15b8.  v3:= v3 + 1;
  #L1b15bc.  goto L1b1582;
  #L1b15be.  v5:= new `java.lang.IllegalArgumentException`;
  #L1b15c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b15c8.  v6:= temp @kind object;
  #L1b15ca.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b15d0.  throw v5;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v4 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b15e4.  v0:= 0I;
  #L1b15e6.  call temp:= `nextRequestBodyConverter`(v1, v0, v2, v3, v4) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b15ec.  v0:= temp @kind object;
  #L1b15ee.  return v0 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1600.  v0:= 0I;
  #L1b1602.  call temp:= `nextResponseBodyConverter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1608.  v0:= temp @kind object;
  #L1b160a.  return v0 @kind object;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.Retrofit` v4 @kind this, `java.lang.reflect.Type` v5 @kind object @name `type`, `java.lang.annotation.Annotation`[] v6 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b161c.  v3:= "type == null" @kind object;
  #L1b1620.  call temp:= `checkNotNull`(v5, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b1626.  v3:= "annotations == null" @kind object;
  #L1b162a.  call temp:= `checkNotNull`(v6, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b1630.  v2:= 0I;
  #L1b1632.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1636.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b163c.  v1:= temp;
  #L1b163e.  if v2 >= v1 then goto L1b1666;
  #L1b1642.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1646.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b164c.  v3:= temp @kind object;
  #L1b164e.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L1b1652.  call temp:= `stringConverter`(v3, v5, v6, v4) @signature `Lretrofit2/Converter$Factory;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b1658.  v0:= temp @kind object;
  #L1b165a.  if v0 == 0 then goto L1b1660;
  #L1b165e.  return v0 @kind object;
  #L1b1660.  v2:= v2 + 1;
  #L1b1664.  goto L1b163e;
  #L1b1666.  v0:= `@@retrofit2.BuiltInConverters$ToStringConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$ToStringConverter` @kind object;
  #L1b166a.  goto L1b165e;
}

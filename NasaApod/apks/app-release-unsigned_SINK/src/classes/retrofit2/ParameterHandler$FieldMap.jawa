record `retrofit2.ParameterHandler$FieldMap` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$FieldMap.encoded` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$FieldMap.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$FieldMap` v0 @kind this, `retrofit2.Converter` v1 @kind object, `boolean` v2 @name `encoded`) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L221d78.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L221d7e.  v0.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` := v1 @kind object;
  #L221d82.  v0.`retrofit2.ParameterHandler$FieldMap.encoded` @type ^`boolean` := v2 @kind boolean;
  #L221d86.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$FieldMap` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L221d98.  v2:= (`java.util.Map`) v2 @kind object;
  #L221d9c.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @kind virtual;
  #L221da2.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$FieldMap` v7 @kind this, `retrofit2.RequestBuilder` v8 @kind object @name `builder`, `java.util.Map` v9 @kind object) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L221db4.  if v9 != 0 then goto L221dc8;
  #L221db8.  v4:= new `java.lang.IllegalArgumentException`;
  #L221dbc.  v5:= "Field map was null." @kind object;
  #L221dc0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L221dc6.  throw v4;
  #L221dc8.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L221dce.  v4:= temp @kind object;
  #L221dd0.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L221dd6.  v4:= temp @kind object;
  #L221dd8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L221dde.  v5:= temp;
  #L221de0.  if v5 == 0 then goto L221ef6;
  #L221de4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L221dea.  v0:= temp @kind object;
  #L221dec.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L221df0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L221df6.  v1:= temp @kind object;
  #L221df8.  v1:= (`java.lang.String`) v1 @kind object;
  #L221dfc.  if v1 != 0 then goto L221e10;
  #L221e00.  v4:= new `java.lang.IllegalArgumentException`;
  #L221e04.  v5:= "Field map contained null key." @kind object;
  #L221e08.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L221e0e.  throw v4;
  #L221e10.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L221e16.  v2:= temp @kind object;
  #L221e18.  if v2 != 0 then goto L221e5a;
  #L221e1c.  v4:= new `java.lang.IllegalArgumentException`;
  #L221e20.  v5:= new `java.lang.StringBuilder`;
  #L221e24.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L221e2a.  v6:= "Field map contained null value for key '" @kind object;
  #L221e2e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221e34.  v5:= temp @kind object;
  #L221e36.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221e3c.  v5:= temp @kind object;
  #L221e3e.  v6:= "'." @kind object;
  #L221e42.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221e48.  v5:= temp @kind object;
  #L221e4a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L221e50.  v5:= temp @kind object;
  #L221e52.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L221e58.  throw v4;
  #L221e5a.  v5:= v7.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L221e5e.  call temp:= `convert`(v5, v2) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L221e64.  v3:= temp @kind object;
  #L221e66.  v3:= (`java.lang.String`) v3 @kind object;
  #L221e6a.  if v3 != 0 then goto L221ee8;
  #L221e6e.  v4:= new `java.lang.IllegalArgumentException`;
  #L221e72.  v5:= new `java.lang.StringBuilder`;
  #L221e76.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L221e7c.  v6:= "Field map value '" @kind object;
  #L221e80.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221e86.  v5:= temp @kind object;
  #L221e88.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221e8e.  v5:= temp @kind object;
  #L221e90.  v6:= "' converted to null by " @kind object;
  #L221e94.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221e9a.  v5:= temp @kind object;
  #L221e9c.  v6:= v7.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L221ea0.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L221ea6.  v6:= temp @kind object;
  #L221ea8.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L221eae.  v6:= temp @kind object;
  #L221eb0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221eb6.  v5:= temp @kind object;
  #L221eb8.  v6:= " for key '" @kind object;
  #L221ebc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221ec2.  v5:= temp @kind object;
  #L221ec4.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221eca.  v5:= temp @kind object;
  #L221ecc.  v6:= "'." @kind object;
  #L221ed0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L221ed6.  v5:= temp @kind object;
  #L221ed8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L221ede.  v5:= temp @kind object;
  #L221ee0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L221ee6.  throw v4;
  #L221ee8.  v5:= v7.`retrofit2.ParameterHandler$FieldMap.encoded` @type ^`boolean` @kind boolean;
  #L221eec.  call `addFormField`(v8, v1, v3, v5) @signature `Lretrofit2/RequestBuilder;.addFormField:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L221ef2.  goto L221dd8;
  #L221ef6.  return @kind void;
}

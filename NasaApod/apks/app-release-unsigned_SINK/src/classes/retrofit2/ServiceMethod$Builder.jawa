record `retrofit2.ServiceMethod$Builder` @kind class @AccessFlag FINAL {
  `retrofit2.CallAdapter` `retrofit2.ServiceMethod$Builder.callAdapter` @AccessFlag ;
  `okhttp3.MediaType` `retrofit2.ServiceMethod$Builder.contentType` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotBody` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotField` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPart` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPath` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotQuery` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotUrl` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.hasBody` @AccessFlag ;
  `okhttp3.Headers` `retrofit2.ServiceMethod$Builder.headers` @AccessFlag ;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.httpMethod` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isFormEncoded` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isMultipart` @AccessFlag ;
  `java.lang.reflect.Method` `retrofit2.ServiceMethod$Builder.method` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[] `retrofit2.ServiceMethod$Builder.methodAnnotations` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[][] `retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @AccessFlag FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.ServiceMethod$Builder.parameterHandlers` @AccessFlag ;
  `java.lang.reflect.Type`[] `retrofit2.ServiceMethod$Builder.parameterTypes` @AccessFlag FINAL;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.relativeUrl` @AccessFlag ;
  `java.util.Set` `retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @AccessFlag ;
  `retrofit2.Converter` `retrofit2.ServiceMethod$Builder.responseConverter` @AccessFlag ;
  `java.lang.reflect.Type` `retrofit2.ServiceMethod$Builder.responseType` @AccessFlag ;
  `retrofit2.Retrofit` `retrofit2.ServiceMethod$Builder.retrofit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `retrofit2.Retrofit` v2 @kind object @name `retrofit`, `java.lang.reflect.Method` v3 @kind object @name `method`) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1b167c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b1682.  v1.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` := v2 @kind object;
  #L1b1686.  v1.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L1b168a.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b1690.  v0:= temp @kind object;
  #L1b1692.  v1.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L1b1696.  call temp:= `getGenericParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L1b169c.  v0:= temp @kind object;
  #L1b169e.  v1.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L1b16a2.  call temp:= `getParameterAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b16a8.  v0:= temp @kind object;
  #L1b16aa.  v1.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] := v0 @kind object;
  #L1b16ae.  return @kind void;
}
procedure `retrofit2.CallAdapter` `createCallAdapter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b16c0.  v4:= 1I;
  #L1b16c2.  v5:= 0I;
  #L1b16c4.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b16c8.  call temp:= `getGenericReturnType`(v3) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1b16ce.  v2:= temp @kind object;
  #L1b16d0.  call temp:= `hasUnresolvableType`(v2) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1b16d6.  v3:= temp;
  #L1b16d8.  if v3 == 0 then goto L1b16f2;
  #L1b16dc.  v3:= "Method return type must not include a type variable or wildcard: %s" @kind object;
  #L1b16e0.  v4:= new `java.lang.Object`[v4];
  #L1b16e4.  v4[v5]:= v2 @kind object;
  #L1b16e8.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b16ee.  v3:= temp @kind object;
  #L1b16f0.  throw v3;
  #L1b16f2.  v3:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b16f6.  if v2 != v3 then goto L1b170c;
  #L1b16fa.  v3:= "Service methods cannot return void." @kind object;
  #L1b16fe.  v4:= new `java.lang.Object`[v5];
  #L1b1702.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1708.  v3:= temp @kind object;
  #L1b170a.  throw v3;
  #L1b170c.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b1710.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b1716.  v0:= temp @kind object;
  #Try_start0.  
  #L1b1718.  v3:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b171c.  call temp:= `callAdapter`(v3, v2, v0) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #Try_end0.  
  #L1b1722.  v3:= temp @kind object;
  #L1b1724.  return v3 @kind object;
  #L1b1726.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b1728.  v3:= "Unable to create call adapter for %s" @kind object;
  #L1b172c.  v4:= new `java.lang.Object`[v4];
  #L1b1730.  v4[v5]:= v2 @kind object;
  #L1b1734.  call temp:= `methodError`(v6, v1, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b173a.  v3:= temp @kind object;
  #L1b173c.  throw v3;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b1726;
}
procedure `retrofit2.Converter` `createResponseConverter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1760.  v2:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b1764.  call temp:= `getAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b176a.  v0:= temp @kind object;
  #Try_start0.  
  #L1b176c.  v2:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1770.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b1774.  call temp:= `responseBodyConverter`(v2, v3, v0) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #Try_end0.  
  #L1b177a.  v2:= temp @kind object;
  #L1b177c.  return v2 @kind object;
  #L1b177e.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b1780.  v2:= "Unable to create converter for %s" @kind object;
  #L1b1784.  v3:= 1I;
  #L1b1786.  v3:= new `java.lang.Object`[v3];
  #L1b178a.  v4:= 0I;
  #L1b178c.  v5:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b1790.  v3[v4]:= v5 @kind object;
  #L1b1794.  call temp:= `methodError`(v6, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b179a.  v2:= temp @kind object;
  #L1b179c.  throw v2;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b177e;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b17c0.  v0:= 0I;
  #L1b17c2.  call temp:= `methodError`(v1, v0, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b17c8.  v0:= temp @kind object;
  #L1b17ca.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v3 @kind this, `java.lang.Throwable` v4 @kind object @name `cause`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1b17dc.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b17e2.  v5:= temp @kind object;
  #L1b17e4.  v0:= new `java.lang.IllegalArgumentException`;
  #L1b17e8.  v1:= new `java.lang.StringBuilder`;
  #L1b17ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b17f2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b17f8.  v1:= temp @kind object;
  #L1b17fa.  v2:= "\n    for method " @kind object;
  #L1b17fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1804.  v1:= temp @kind object;
  #L1b1806.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b180a.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L1b1810.  v2:= temp @kind object;
  #L1b1812.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1818.  v2:= temp @kind object;
  #L1b181a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1820.  v1:= temp @kind object;
  #L1b1822.  v2:= "." @kind object;
  #L1b1826.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b182c.  v1:= temp @kind object;
  #L1b182e.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b1832.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1838.  v2:= temp @kind object;
  #L1b183a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1840.  v1:= temp @kind object;
  #L1b1842.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1848.  v1:= temp @kind object;
  #L1b184a.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1b1850.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `int` v3 @name `p`, `java.lang.String` v4 @kind object @name `message`, `java.lang.Object`[] v5 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b1864.  v0:= new `java.lang.StringBuilder`;
  #L1b1868.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b186e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1874.  v0:= temp @kind object;
  #L1b1876.  v1:= " (parameter #" @kind object;
  #L1b187a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1880.  v0:= temp @kind object;
  #L1b1882.  v1:= v3 + 1;
  #L1b1886.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b188c.  v0:= temp @kind object;
  #L1b188e.  v1:= ")" @kind object;
  #L1b1892.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1898.  v0:= temp @kind object;
  #L1b189a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b18a0.  v0:= temp @kind object;
  #L1b18a2.  call temp:= `methodError`(v2, v0, v5) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b18a8.  v0:= temp @kind object;
  #L1b18aa.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `java.lang.Throwable` v3 @kind object @name `cause`, `int` v4 @name `p`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b18bc.  v0:= new `java.lang.StringBuilder`;
  #L1b18c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b18c6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b18cc.  v0:= temp @kind object;
  #L1b18ce.  v1:= " (parameter #" @kind object;
  #L1b18d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b18d8.  v0:= temp @kind object;
  #L1b18da.  v1:= v4 + 1;
  #L1b18de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b18e4.  v0:= temp @kind object;
  #L1b18e6.  v1:= ")" @kind object;
  #L1b18ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b18f0.  v0:= temp @kind object;
  #L1b18f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b18f8.  v0:= temp @kind object;
  #L1b18fa.  call temp:= `methodError`(v2, v3, v0, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1900.  v0:= temp @kind object;
  #L1b1902.  return v0 @kind object;
}
procedure `okhttp3.Headers` `parseHeaders`(`retrofit2.ServiceMethod$Builder` v11 @kind this, `java.lang.String`[] v12 @kind object @name `headers`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b1914.  v10:= 1I;
  #L1b1916.  v7:= 0I;
  #L1b1918.  v0:= new `okhttp3.Headers$Builder`;
  #L1b191c.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1b1922.  v8:= length @variable v12;
  #L1b1924.  v6:= v7;
  #L1b1926.  if v6 >= v8 then goto L1b19ca;
  #L1b192a.  v2:= v12[v6] @kind object;
  #L1b192e.  v9:= 58I;
  #L1b1932.  call temp:= `indexOf`(v2, v9) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b1938.  v1:= temp;
  #L1b193a.  v9:= -1I;
  #L1b193c.  if v1 == v9 then goto L1b1954;
  #L1b1940.  if v1 == 0 then goto L1b1954;
  #L1b1944.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b194a.  v9:= temp;
  #L1b194c.  v9:= v9 + -1;
  #L1b1950.  if v1 != v9 then goto L1b196a;
  #L1b1954.  v6:= "@Headers value must be in the form \"Name: Value\". Found: \"%s\"" @kind object;
  #L1b1958.  v8:= new `java.lang.Object`[v10];
  #L1b195c.  v8[v7]:= v2 @kind object;
  #L1b1960.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1966.  v6:= temp @kind object;
  #L1b1968.  throw v6;
  #L1b196a.  call temp:= `substring`(v2, v7, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1b1970.  v3:= temp @kind object;
  #L1b1972.  v9:= v1 + 1;
  #L1b1976.  call temp:= `substring`(v2, v9) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b197c.  v9:= temp @kind object;
  #L1b197e.  call temp:= `trim`(v9) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1b1984.  v4:= temp @kind object;
  #L1b1986.  v9:= "Content-Type" @kind object;
  #L1b198a.  call temp:= `equalsIgnoreCase`(v9, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1b1990.  v9:= temp;
  #L1b1992.  if v9 == 0 then goto L1b19c2;
  #L1b1996.  call temp:= `parse`(v4) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1b199c.  v5:= temp @kind object;
  #L1b199e.  if v5 != 0 then goto L1b19b8;
  #L1b19a2.  v6:= "Malformed content type: %s" @kind object;
  #L1b19a6.  v8:= new `java.lang.Object`[v10];
  #L1b19aa.  v8[v7]:= v4 @kind object;
  #L1b19ae.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b19b4.  v6:= temp @kind object;
  #L1b19b6.  throw v6;
  #L1b19b8.  v11.`retrofit2.ServiceMethod$Builder.contentType` @type ^`okhttp3.MediaType` := v5 @kind object;
  #L1b19bc.  v6:= v6 + 1;
  #L1b19c0.  goto L1b1926;
  #L1b19c2.  call temp:= `add`(v0, v3, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1b19c8.  goto L1b19bc;
  #L1b19ca.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1b19d0.  v6:= temp @kind object;
  #L1b19d2.  return v6 @kind object;
}
procedure `void` `parseHttpMethodAndPath`(`retrofit2.ServiceMethod$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `httpMethod`, `java.lang.String` v10 @kind object @name `value`, `boolean` v11 @name `hasBody`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b19e4.  v7:= 1I;
  #L1b19e6.  v6:= 0I;
  #L1b19e8.  v3:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b19ec.  if v3 == 0 then goto L1b1a10;
  #L1b19f0.  v3:= "Only one HTTP method is allowed. Found: %s and %s." @kind object;
  #L1b19f4.  v4:= 2I;
  #L1b19f6.  v4:= new `java.lang.Object`[v4];
  #L1b19fa.  v5:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b19fe.  v4[v6]:= v5 @kind object;
  #L1b1a02.  v4[v7]:= v9 @kind object;
  #L1b1a06.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1a0c.  v3:= temp @kind object;
  #L1b1a0e.  throw v3;
  #L1b1a10.  v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` := v9 @kind object;
  #L1b1a14.  v8.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` := v11 @kind boolean;
  #L1b1a18.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1b1a1e.  v3:= temp;
  #L1b1a20.  if v3 == 0 then goto L1b1a26;
  #L1b1a24.  return @kind void;
  #L1b1a26.  v3:= 63I;
  #L1b1a2a.  call temp:= `indexOf`(v10, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b1a30.  v2:= temp;
  #L1b1a32.  v3:= -1I;
  #L1b1a34.  if v2 == v3 then goto L1b1a82;
  #L1b1a38.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b1a3e.  v3:= temp;
  #L1b1a40.  v3:= v3 + -1;
  #L1b1a44.  if v2 >= v3 then goto L1b1a82;
  #L1b1a48.  v3:= v2 + 1;
  #L1b1a4c.  call temp:= `substring`(v10, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b1a52.  v1:= temp @kind object;
  #L1b1a54.  v3:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b1a58.  call temp:= `matcher`(v3, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b1a5e.  v0:= temp @kind object;
  #L1b1a60.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L1b1a66.  v3:= temp;
  #L1b1a68.  if v3 == 0 then goto L1b1a82;
  #L1b1a6c.  v3:= "URL query string \"%s\" must not have replace block. For dynamic query parameters use @Query." @kind object;
  #L1b1a70.  v4:= new `java.lang.Object`[v7];
  #L1b1a74.  v4[v6]:= v1 @kind object;
  #L1b1a78.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1a7e.  v3:= temp @kind object;
  #L1b1a80.  throw v3;
  #L1b1a82.  v8.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` := v10 @kind object;
  #L1b1a86.  call temp:= `parsePathParameters`(v10) @signature `Lretrofit2/ServiceMethod;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L1b1a8c.  v3:= temp @kind object;
  #L1b1a8e.  v8.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` := v3 @kind object;
  #L1b1a92.  goto L1b1a24;
}
procedure `void` `parseMethodAnnotation`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `java.lang.annotation.Annotation` v7 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1aa4.  v5:= 1I;
  #L1b1aa6.  v4:= 0I;
  #L1b1aa8.  v2:= instanceof @variable v7 @type ^`retrofit2.http.DELETE` @kind boolean;
  #L1b1aac.  if v2 == 0 then goto L1b1ac8;
  #L1b1ab0.  v2:= "DELETE" @kind object;
  #L1b1ab4.  v7:= (`retrofit2.http.DELETE`) v7 @kind object;
  #L1b1ab8.  call temp:= `value`(v7) @signature `Lretrofit2/http/DELETE;.value:()Ljava/lang/String;` @kind interface;
  #L1b1abe.  v3:= temp @kind object;
  #L1b1ac0.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1ac6.  return @kind void;
  #L1b1ac8.  v2:= instanceof @variable v7 @type ^`retrofit2.http.GET` @kind boolean;
  #L1b1acc.  if v2 == 0 then goto L1b1ae8;
  #L1b1ad0.  v2:= "GET" @kind object;
  #L1b1ad4.  v7:= (`retrofit2.http.GET`) v7 @kind object;
  #L1b1ad8.  call temp:= `value`(v7) @signature `Lretrofit2/http/GET;.value:()Ljava/lang/String;` @kind interface;
  #L1b1ade.  v3:= temp @kind object;
  #L1b1ae0.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1ae6.  goto L1b1ac6;
  #L1b1ae8.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HEAD` @kind boolean;
  #L1b1aec.  if v2 == 0 then goto L1b1b2c;
  #L1b1af0.  v2:= "HEAD" @kind object;
  #L1b1af4.  v7:= (`retrofit2.http.HEAD`) v7 @kind object;
  #L1b1af8.  call temp:= `value`(v7) @signature `Lretrofit2/http/HEAD;.value:()Ljava/lang/String;` @kind interface;
  #L1b1afe.  v3:= temp @kind object;
  #L1b1b00.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1b06.  v2:= constclass @type ^`java.lang.Void` @kind object;
  #L1b1b0a.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b1b0e.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b1b14.  v2:= temp;
  #L1b1b16.  if v2 != 0 then goto L1b1ac6;
  #L1b1b1a.  v2:= "HEAD method must use Void as response type." @kind object;
  #L1b1b1e.  v3:= new `java.lang.Object`[v4];
  #L1b1b22.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1b28.  v2:= temp @kind object;
  #L1b1b2a.  throw v2;
  #L1b1b2c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PATCH` @kind boolean;
  #L1b1b30.  if v2 == 0 then goto L1b1b4c;
  #L1b1b34.  v2:= "PATCH" @kind object;
  #L1b1b38.  v7:= (`retrofit2.http.PATCH`) v7 @kind object;
  #L1b1b3c.  call temp:= `value`(v7) @signature `Lretrofit2/http/PATCH;.value:()Ljava/lang/String;` @kind interface;
  #L1b1b42.  v3:= temp @kind object;
  #L1b1b44.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1b4a.  goto L1b1ac6;
  #L1b1b4c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.POST` @kind boolean;
  #L1b1b50.  if v2 == 0 then goto L1b1b6c;
  #L1b1b54.  v2:= "POST" @kind object;
  #L1b1b58.  v7:= (`retrofit2.http.POST`) v7 @kind object;
  #L1b1b5c.  call temp:= `value`(v7) @signature `Lretrofit2/http/POST;.value:()Ljava/lang/String;` @kind interface;
  #L1b1b62.  v3:= temp @kind object;
  #L1b1b64.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1b6a.  goto L1b1ac6;
  #L1b1b6c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PUT` @kind boolean;
  #L1b1b70.  if v2 == 0 then goto L1b1b8c;
  #L1b1b74.  v2:= "PUT" @kind object;
  #L1b1b78.  v7:= (`retrofit2.http.PUT`) v7 @kind object;
  #L1b1b7c.  call temp:= `value`(v7) @signature `Lretrofit2/http/PUT;.value:()Ljava/lang/String;` @kind interface;
  #L1b1b82.  v3:= temp @kind object;
  #L1b1b84.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1b8a.  goto L1b1ac6;
  #L1b1b8c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.OPTIONS` @kind boolean;
  #L1b1b90.  if v2 == 0 then goto L1b1bac;
  #L1b1b94.  v2:= "OPTIONS" @kind object;
  #L1b1b98.  v7:= (`retrofit2.http.OPTIONS`) v7 @kind object;
  #L1b1b9c.  call temp:= `value`(v7) @signature `Lretrofit2/http/OPTIONS;.value:()Ljava/lang/String;` @kind interface;
  #L1b1ba2.  v3:= temp @kind object;
  #L1b1ba4.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1baa.  goto L1b1ac6;
  #L1b1bac.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HTTP` @kind boolean;
  #L1b1bb0.  if v2 == 0 then goto L1b1bdc;
  #L1b1bb4.  v1:= v7 @kind object;
  #L1b1bb6.  v1:= (`retrofit2.http.HTTP`) v1 @kind object;
  #L1b1bba.  call temp:= `method`(v1) @signature `Lretrofit2/http/HTTP;.method:()Ljava/lang/String;` @kind interface;
  #L1b1bc0.  v2:= temp @kind object;
  #L1b1bc2.  call temp:= `path`(v1) @signature `Lretrofit2/http/HTTP;.path:()Ljava/lang/String;` @kind interface;
  #L1b1bc8.  v3:= temp @kind object;
  #L1b1bca.  call temp:= `hasBody`(v1) @signature `Lretrofit2/http/HTTP;.hasBody:()Z` @kind interface;
  #L1b1bd0.  v4:= temp;
  #L1b1bd2.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1bd8.  goto L1b1ac6;
  #L1b1bdc.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Headers` @kind boolean;
  #L1b1be0.  if v2 == 0 then goto L1b1c18;
  #L1b1be4.  v7:= (`retrofit2.http.Headers`) v7 @kind object;
  #L1b1be8.  call temp:= `value`(v7) @signature `Lretrofit2/http/Headers;.value:()[Ljava/lang/String;` @kind interface;
  #L1b1bee.  v0:= temp @kind object;
  #L1b1bf0.  v2:= length @variable v0;
  #L1b1bf2.  if v2 != 0 then goto L1b1c08;
  #L1b1bf6.  v2:= "@Headers annotation is empty." @kind object;
  #L1b1bfa.  v3:= new `java.lang.Object`[v4];
  #L1b1bfe.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1c04.  v2:= temp @kind object;
  #L1b1c06.  throw v2;
  #L1b1c08.  call temp:= `parseHeaders`(v6, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @kind direct;
  #L1b1c0e.  v2:= temp @kind object;
  #L1b1c10.  v6.`retrofit2.ServiceMethod$Builder.headers` @type ^`okhttp3.Headers` := v2 @kind object;
  #L1b1c14.  goto L1b1ac6;
  #L1b1c18.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Multipart` @kind boolean;
  #L1b1c1c.  if v2 == 0 then goto L1b1c42;
  #L1b1c20.  v2:= v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b1c24.  if v2 == 0 then goto L1b1c3a;
  #L1b1c28.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L1b1c2c.  v3:= new `java.lang.Object`[v4];
  #L1b1c30.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1c36.  v2:= temp @kind object;
  #L1b1c38.  throw v2;
  #L1b1c3a.  v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` := v5 @kind boolean;
  #L1b1c3e.  goto L1b1ac6;
  #L1b1c42.  v2:= instanceof @variable v7 @type ^`retrofit2.http.FormUrlEncoded` @kind boolean;
  #L1b1c46.  if v2 == 0 then goto L1b1ac6;
  #L1b1c4a.  v2:= v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b1c4e.  if v2 == 0 then goto L1b1c64;
  #L1b1c52.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L1b1c56.  v3:= new `java.lang.Object`[v4];
  #L1b1c5a.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1c60.  v2:= temp @kind object;
  #L1b1c62.  throw v2;
  #L1b1c64.  v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` := v5 @kind boolean;
  #L1b1c68.  goto L1b1ac6;
}
procedure `retrofit2.ParameterHandler` `parseParameter`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `int` v7 @name `p`, `java.lang.reflect.Type` v8 @kind object @name `parameterType`, `java.lang.annotation.Annotation`[] v9 @kind object @name `annotations`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1c7c.  v4:= 0I;
  #L1b1c7e.  v2:= 0I;
  #L1b1c80.  v5:= length @variable v9;
  #L1b1c82.  v3:= v4;
  #L1b1c84.  if v3 >= v5 then goto L1b1cb8;
  #L1b1c88.  v0:= v9[v3] @kind object;
  #L1b1c8c.  call temp:= `parseParameterAnnotation`(v6, v7, v8, v9, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L1b1c92.  v1:= temp @kind object;
  #L1b1c94.  if v1 != 0 then goto L1b1c9e;
  #L1b1c98.  v3:= v3 + 1;
  #L1b1c9c.  goto L1b1c84;
  #L1b1c9e.  if v2 == 0 then goto L1b1cb4;
  #L1b1ca2.  v3:= "Multiple Retrofit annotations found, only one allowed." @kind object;
  #L1b1ca6.  v4:= new `java.lang.Object`[v4];
  #L1b1caa.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1cb0.  v3:= temp @kind object;
  #L1b1cb2.  throw v3;
  #L1b1cb4.  v2:= v1 @kind object;
  #L1b1cb6.  goto L1b1c98;
  #L1b1cb8.  if v2 != 0 then goto L1b1cce;
  #L1b1cbc.  v3:= "No Retrofit annotation found." @kind object;
  #L1b1cc0.  v4:= new `java.lang.Object`[v4];
  #L1b1cc4.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1cca.  v3:= temp @kind object;
  #L1b1ccc.  throw v3;
  #L1b1cce.  return v2 @kind object;
}
procedure `retrofit2.ParameterHandler` `parseParameterAnnotation`(`retrofit2.ServiceMethod$Builder` v30 @kind this, `int` v31 @name `p`, `java.lang.reflect.Type` v32 @kind object @name `type`, `java.lang.annotation.Annotation`[] v33 @kind object @name `annotations`, `java.lang.annotation.Annotation` v34 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L1b1ce0.  v0:= v34 @kind object;
  #L1b1ce4.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Url` @kind boolean;
  #L1b1ce8.  v26:= v0;
  #L1b1cec.  if v26 == 0 then goto L1b1ea2;
  #L1b1cf0.  v0:= v30 @kind object;
  #L1b1cf4.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b1cf8.  v26:= v0;
  #L1b1cfc.  if v26 == 0 then goto L1b1d2e;
  #L1b1d00.  v26:= "Multiple @Url method annotations found." @kind object;
  #L1b1d04.  v27:= 0I;
  #L1b1d08.  v0:= v27;
  #L1b1d0c.  v0:= new `java.lang.Object`[v0];
  #L1b1d10.  v27:= v0 @kind object;
  #L1b1d14.  v0:= v30 @kind object;
  #L1b1d18.  v1:= v31;
  #L1b1d1c.  v2:= v26 @kind object;
  #L1b1d20.  v3:= v27 @kind object;
  #L1b1d24.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1d2a.  v26:= temp @kind object;
  #L1b1d2c.  throw v26;
  #L1b1d2e.  v0:= v30 @kind object;
  #L1b1d32.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` @kind boolean;
  #L1b1d36.  v26:= v0;
  #L1b1d3a.  if v26 == 0 then goto L1b1d6c;
  #L1b1d3e.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L1b1d42.  v27:= 0I;
  #L1b1d46.  v0:= v27;
  #L1b1d4a.  v0:= new `java.lang.Object`[v0];
  #L1b1d4e.  v27:= v0 @kind object;
  #L1b1d52.  v0:= v30 @kind object;
  #L1b1d56.  v1:= v31;
  #L1b1d5a.  v2:= v26 @kind object;
  #L1b1d5e.  v3:= v27 @kind object;
  #L1b1d62.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1d68.  v26:= temp @kind object;
  #L1b1d6a.  throw v26;
  #L1b1d6c.  v0:= v30 @kind object;
  #L1b1d70.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L1b1d74.  v26:= v0;
  #L1b1d78.  if v26 == 0 then goto L1b1daa;
  #L1b1d7c.  v26:= "A @Url parameter must not come after a @Query" @kind object;
  #L1b1d80.  v27:= 0I;
  #L1b1d84.  v0:= v27;
  #L1b1d88.  v0:= new `java.lang.Object`[v0];
  #L1b1d8c.  v27:= v0 @kind object;
  #L1b1d90.  v0:= v30 @kind object;
  #L1b1d94.  v1:= v31;
  #L1b1d98.  v2:= v26 @kind object;
  #L1b1d9c.  v3:= v27 @kind object;
  #L1b1da0.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1da6.  v26:= temp @kind object;
  #L1b1da8.  throw v26;
  #L1b1daa.  v0:= v30 @kind object;
  #L1b1dae.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b1db2.  v26:= v0 @kind object;
  #L1b1db6.  if v26 == 0 then goto L1b1dfc;
  #L1b1dba.  v26:= "@Url cannot be used with @%s URL" @kind object;
  #L1b1dbe.  v27:= 1I;
  #L1b1dc2.  v0:= v27;
  #L1b1dc6.  v0:= new `java.lang.Object`[v0];
  #L1b1dca.  v27:= v0 @kind object;
  #L1b1dce.  v28:= 0I;
  #L1b1dd2.  v0:= v30 @kind object;
  #L1b1dd6.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b1dda.  v29:= v0 @kind object;
  #L1b1dde.  v27[v28]:= v29 @kind object;
  #L1b1de2.  v0:= v30 @kind object;
  #L1b1de6.  v1:= v31;
  #L1b1dea.  v2:= v26 @kind object;
  #L1b1dee.  v3:= v27 @kind object;
  #L1b1df2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1df8.  v26:= temp @kind object;
  #L1b1dfa.  throw v26;
  #L1b1dfc.  v26:= 1I;
  #L1b1e00.  v0:= v26;
  #L1b1e04.  v1:= v30 @kind object;
  #L1b1e08.  v1.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` := v0 @kind boolean;
  #L1b1e0c.  v26:= constclass @type ^`okhttp3.HttpUrl` @kind object;
  #L1b1e10.  v0:= v32 @kind object;
  #L1b1e14.  v1:= v26 @kind object;
  #L1b1e18.  if v0 == v1 then goto L1b1e68;
  #L1b1e1c.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b1e20.  v0:= v32 @kind object;
  #L1b1e24.  v1:= v26 @kind object;
  #L1b1e28.  if v0 == v1 then goto L1b1e68;
  #L1b1e2c.  v26:= constclass @type ^`java.net.URI` @kind object;
  #L1b1e30.  v0:= v32 @kind object;
  #L1b1e34.  v1:= v26 @kind object;
  #L1b1e38.  if v0 == v1 then goto L1b1e68;
  #L1b1e3c.  v0:= v32 @kind object;
  #L1b1e40.  v0:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L1b1e44.  v26:= v0;
  #L1b1e48.  if v26 == 0 then goto L1b1e74;
  #L1b1e4c.  v26:= "android.net.Uri" @kind object;
  #L1b1e50.  v32:= (`java.lang.Class`) v32 @kind object;
  #L1b1e54.  call temp:= `getName`(v32) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1e5a.  v27:= temp @kind object;
  #L1b1e5c.  call temp:= `equals`(v26, v27) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b1e62.  v26:= temp;
  #L1b1e64.  if v26 == 0 then goto L1b1e74;
  #L1b1e68.  v26:= new `retrofit2.ParameterHandler$RelativeUrl`;
  #L1b1e6c.  call `<init>`(v26) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.<init>:()V` @kind direct;
  #L1b1e72.  return v26 @kind object;
  #L1b1e74.  v26:= "@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type." @kind object;
  #L1b1e78.  v27:= 0I;
  #L1b1e7c.  v0:= v27;
  #L1b1e80.  v0:= new `java.lang.Object`[v0];
  #L1b1e84.  v27:= v0 @kind object;
  #L1b1e88.  v0:= v30 @kind object;
  #L1b1e8c.  v1:= v31;
  #L1b1e90.  v2:= v26 @kind object;
  #L1b1e94.  v3:= v27 @kind object;
  #L1b1e98.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1e9e.  v26:= temp @kind object;
  #L1b1ea0.  throw v26;
  #L1b1ea2.  v0:= v34 @kind object;
  #L1b1ea6.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Path` @kind boolean;
  #L1b1eaa.  v26:= v0;
  #L1b1eae.  if v26 == 0 then goto L1b1fec;
  #L1b1eb2.  v0:= v30 @kind object;
  #L1b1eb6.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L1b1eba.  v26:= v0;
  #L1b1ebe.  if v26 == 0 then goto L1b1ef0;
  #L1b1ec2.  v26:= "A @Path parameter must not come after a @Query." @kind object;
  #L1b1ec6.  v27:= 0I;
  #L1b1eca.  v0:= v27;
  #L1b1ece.  v0:= new `java.lang.Object`[v0];
  #L1b1ed2.  v27:= v0 @kind object;
  #L1b1ed6.  v0:= v30 @kind object;
  #L1b1eda.  v1:= v31;
  #L1b1ede.  v2:= v26 @kind object;
  #L1b1ee2.  v3:= v27 @kind object;
  #L1b1ee6.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1eec.  v26:= temp @kind object;
  #L1b1eee.  throw v26;
  #L1b1ef0.  v0:= v30 @kind object;
  #L1b1ef4.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b1ef8.  v26:= v0;
  #L1b1efc.  if v26 == 0 then goto L1b1f2e;
  #L1b1f00.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L1b1f04.  v27:= 0I;
  #L1b1f08.  v0:= v27;
  #L1b1f0c.  v0:= new `java.lang.Object`[v0];
  #L1b1f10.  v27:= v0 @kind object;
  #L1b1f14.  v0:= v30 @kind object;
  #L1b1f18.  v1:= v31;
  #L1b1f1c.  v2:= v26 @kind object;
  #L1b1f20.  v3:= v27 @kind object;
  #L1b1f24.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1f2a.  v26:= temp @kind object;
  #L1b1f2c.  throw v26;
  #L1b1f2e.  v0:= v30 @kind object;
  #L1b1f32.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b1f36.  v26:= v0 @kind object;
  #L1b1f3a.  if v26 != 0 then goto L1b1f80;
  #L1b1f3e.  v26:= "@Path can only be used with relative url on @%s" @kind object;
  #L1b1f42.  v27:= 1I;
  #L1b1f46.  v0:= v27;
  #L1b1f4a.  v0:= new `java.lang.Object`[v0];
  #L1b1f4e.  v27:= v0 @kind object;
  #L1b1f52.  v28:= 0I;
  #L1b1f56.  v0:= v30 @kind object;
  #L1b1f5a.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b1f5e.  v29:= v0 @kind object;
  #L1b1f62.  v27[v28]:= v29 @kind object;
  #L1b1f66.  v0:= v30 @kind object;
  #L1b1f6a.  v1:= v31;
  #L1b1f6e.  v2:= v26 @kind object;
  #L1b1f72.  v3:= v27 @kind object;
  #L1b1f76.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1f7c.  v26:= temp @kind object;
  #L1b1f7e.  throw v26;
  #L1b1f80.  v26:= 1I;
  #L1b1f84.  v0:= v26;
  #L1b1f88.  v1:= v30 @kind object;
  #L1b1f8c.  v1.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` := v0 @kind boolean;
  #L1b1f90.  v20:= v34 @kind object;
  #L1b1f94.  v20:= (`retrofit2.http.Path`) v20 @kind object;
  #L1b1f98.  call temp:= `value`(v20) @signature `Lretrofit2/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L1b1f9e.  v15:= temp @kind object;
  #L1b1fa0.  v0:= v30 @kind object;
  #L1b1fa4.  v1:= v31;
  #L1b1fa8.  call `validatePathName`(v0, v1, v15) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @kind direct;
  #L1b1fae.  v0:= v30 @kind object;
  #L1b1fb2.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1fb6.  v26:= v0 @kind object;
  #L1b1fba.  v0:= v26 @kind object;
  #L1b1fbe.  v1:= v32 @kind object;
  #L1b1fc2.  v2:= v33 @kind object;
  #L1b1fc6.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1fcc.  v5:= temp @kind object;
  #L1b1fce.  v26:= new `retrofit2.ParameterHandler$Path`;
  #L1b1fd2.  call temp:= `encoded`(v20) @signature `Lretrofit2/http/Path;.encoded:()Z` @kind interface;
  #L1b1fd8.  v27:= temp;
  #L1b1fda.  v0:= v26 @kind object;
  #L1b1fde.  v1:= v27;
  #L1b1fe2.  call `<init>`(v0, v15, v5, v1) @signature `Lretrofit2/ParameterHandler$Path;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b1fe8.  goto L1b1e72;
  #L1b1fec.  v0:= v34 @kind object;
  #L1b1ff0.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Query` @kind boolean;
  #L1b1ff4.  v26:= v0;
  #L1b1ff8.  if v26 == 0 then goto L1b219e;
  #L1b1ffc.  v21:= v34 @kind object;
  #L1b2000.  v21:= (`retrofit2.http.Query`) v21 @kind object;
  #L1b2004.  call temp:= `value`(v21) @signature `Lretrofit2/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L1b200a.  v15:= temp @kind object;
  #L1b200c.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/Query;.encoded:()Z` @kind interface;
  #L1b2012.  v8:= temp;
  #L1b2014.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b201a.  v22:= temp @kind object;
  #L1b201c.  v26:= 1I;
  #L1b2020.  v0:= v26;
  #L1b2024.  v1:= v30 @kind object;
  #L1b2028.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L1b202c.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b2030.  v0:= v26 @kind object;
  #L1b2034.  v1:= v22 @kind object;
  #L1b2038.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b203e.  v26:= temp;
  #L1b2040.  if v26 == 0 then goto L1b211a;
  #L1b2044.  v0:= v32 @kind object;
  #L1b2048.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b204c.  v26:= v0;
  #L1b2050.  if v26 != 0 then goto L1b20c8;
  #L1b2054.  v26:= new `java.lang.StringBuilder`;
  #L1b2058.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b205e.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2064.  v27:= temp @kind object;
  #L1b2066.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b206c.  v26:= temp @kind object;
  #L1b206e.  v27:= " must include generic type (e.g., " @kind object;
  #L1b2072.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2078.  v26:= temp @kind object;
  #L1b207a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2080.  v27:= temp @kind object;
  #L1b2082.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2088.  v26:= temp @kind object;
  #L1b208a.  v27:= "<String>)" @kind object;
  #L1b208e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2094.  v26:= temp @kind object;
  #L1b2096.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b209c.  v26:= temp @kind object;
  #L1b209e.  v27:= 0I;
  #L1b20a2.  v0:= v27;
  #L1b20a6.  v0:= new `java.lang.Object`[v0];
  #L1b20aa.  v27:= v0 @kind object;
  #L1b20ae.  v0:= v30 @kind object;
  #L1b20b2.  v1:= v31;
  #L1b20b6.  v2:= v26 @kind object;
  #L1b20ba.  v3:= v27 @kind object;
  #L1b20be.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b20c4.  v26:= temp @kind object;
  #L1b20c6.  throw v26;
  #L1b20c8.  v16:= v32 @kind object;
  #L1b20cc.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b20d0.  v26:= 0I;
  #L1b20d4.  v0:= v26;
  #L1b20d8.  v1:= v16 @kind object;
  #L1b20dc.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b20e2.  v12:= temp @kind object;
  #L1b20e4.  v0:= v30 @kind object;
  #L1b20e8.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b20ec.  v26:= v0 @kind object;
  #L1b20f0.  v0:= v26 @kind object;
  #L1b20f4.  v1:= v33 @kind object;
  #L1b20f8.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b20fe.  v5:= temp @kind object;
  #L1b2100.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b2104.  v0:= v26 @kind object;
  #L1b2108.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b210e.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Query;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2114.  v26:= temp @kind object;
  #L1b2116.  goto L1b1e72;
  #L1b211a.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2120.  v26:= temp;
  #L1b2122.  if v26 == 0 then goto L1b216c;
  #L1b2126.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b212c.  v26:= temp @kind object;
  #L1b212e.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b2134.  v4:= temp @kind object;
  #L1b2136.  v0:= v30 @kind object;
  #L1b213a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b213e.  v26:= v0 @kind object;
  #L1b2142.  v0:= v26 @kind object;
  #L1b2146.  v1:= v33 @kind object;
  #L1b214a.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2150.  v5:= temp @kind object;
  #L1b2152.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b2156.  v0:= v26 @kind object;
  #L1b215a.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b2160.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Query;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2166.  v26:= temp @kind object;
  #L1b2168.  goto L1b1e72;
  #L1b216c.  v0:= v30 @kind object;
  #L1b2170.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2174.  v26:= v0 @kind object;
  #L1b2178.  v0:= v26 @kind object;
  #L1b217c.  v1:= v32 @kind object;
  #L1b2180.  v2:= v33 @kind object;
  #L1b2184.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b218a.  v5:= temp @kind object;
  #L1b218c.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b2190.  v0:= v26 @kind object;
  #L1b2194.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b219a.  goto L1b1e72;
  #L1b219e.  v0:= v34 @kind object;
  #L1b21a2.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryName` @kind boolean;
  #L1b21a6.  v26:= v0;
  #L1b21aa.  if v26 == 0 then goto L1b2348;
  #L1b21ae.  v21:= v34 @kind object;
  #L1b21b2.  v21:= (`retrofit2.http.QueryName`) v21 @kind object;
  #L1b21b6.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/QueryName;.encoded:()Z` @kind interface;
  #L1b21bc.  v8:= temp;
  #L1b21be.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b21c4.  v22:= temp @kind object;
  #L1b21c6.  v26:= 1I;
  #L1b21ca.  v0:= v26;
  #L1b21ce.  v1:= v30 @kind object;
  #L1b21d2.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L1b21d6.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b21da.  v0:= v26 @kind object;
  #L1b21de.  v1:= v22 @kind object;
  #L1b21e2.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b21e8.  v26:= temp;
  #L1b21ea.  if v26 == 0 then goto L1b22c4;
  #L1b21ee.  v0:= v32 @kind object;
  #L1b21f2.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b21f6.  v26:= v0;
  #L1b21fa.  if v26 != 0 then goto L1b2272;
  #L1b21fe.  v26:= new `java.lang.StringBuilder`;
  #L1b2202.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2208.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b220e.  v27:= temp @kind object;
  #L1b2210.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2216.  v26:= temp @kind object;
  #L1b2218.  v27:= " must include generic type (e.g., " @kind object;
  #L1b221c.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2222.  v26:= temp @kind object;
  #L1b2224.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b222a.  v27:= temp @kind object;
  #L1b222c.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2232.  v26:= temp @kind object;
  #L1b2234.  v27:= "<String>)" @kind object;
  #L1b2238.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b223e.  v26:= temp @kind object;
  #L1b2240.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2246.  v26:= temp @kind object;
  #L1b2248.  v27:= 0I;
  #L1b224c.  v0:= v27;
  #L1b2250.  v0:= new `java.lang.Object`[v0];
  #L1b2254.  v27:= v0 @kind object;
  #L1b2258.  v0:= v30 @kind object;
  #L1b225c.  v1:= v31;
  #L1b2260.  v2:= v26 @kind object;
  #L1b2264.  v3:= v27 @kind object;
  #L1b2268.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b226e.  v26:= temp @kind object;
  #L1b2270.  throw v26;
  #L1b2272.  v16:= v32 @kind object;
  #L1b2276.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b227a.  v26:= 0I;
  #L1b227e.  v0:= v26;
  #L1b2282.  v1:= v16 @kind object;
  #L1b2286.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b228c.  v12:= temp @kind object;
  #L1b228e.  v0:= v30 @kind object;
  #L1b2292.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2296.  v26:= v0 @kind object;
  #L1b229a.  v0:= v26 @kind object;
  #L1b229e.  v1:= v33 @kind object;
  #L1b22a2.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b22a8.  v5:= temp @kind object;
  #L1b22aa.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b22ae.  v0:= v26 @kind object;
  #L1b22b2.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b22b8.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$QueryName;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b22be.  v26:= temp @kind object;
  #L1b22c0.  goto L1b1e72;
  #L1b22c4.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b22ca.  v26:= temp;
  #L1b22cc.  if v26 == 0 then goto L1b2316;
  #L1b22d0.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b22d6.  v26:= temp @kind object;
  #L1b22d8.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b22de.  v4:= temp @kind object;
  #L1b22e0.  v0:= v30 @kind object;
  #L1b22e4.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b22e8.  v26:= v0 @kind object;
  #L1b22ec.  v0:= v26 @kind object;
  #L1b22f0.  v1:= v33 @kind object;
  #L1b22f4.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b22fa.  v5:= temp @kind object;
  #L1b22fc.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b2300.  v0:= v26 @kind object;
  #L1b2304.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b230a.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$QueryName;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2310.  v26:= temp @kind object;
  #L1b2312.  goto L1b1e72;
  #L1b2316.  v0:= v30 @kind object;
  #L1b231a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b231e.  v26:= v0 @kind object;
  #L1b2322.  v0:= v26 @kind object;
  #L1b2326.  v1:= v32 @kind object;
  #L1b232a.  v2:= v33 @kind object;
  #L1b232e.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2334.  v5:= temp @kind object;
  #L1b2336.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b233a.  v0:= v26 @kind object;
  #L1b233e.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b2344.  goto L1b1e72;
  #L1b2348.  v0:= v34 @kind object;
  #L1b234c.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryMap` @kind boolean;
  #L1b2350.  v26:= v0;
  #L1b2354.  if v26 == 0 then goto L1b24ce;
  #L1b2358.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b235e.  v22:= temp @kind object;
  #L1b2360.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b2364.  v0:= v26 @kind object;
  #L1b2368.  v1:= v22 @kind object;
  #L1b236c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2372.  v26:= temp;
  #L1b2374.  if v26 != 0 then goto L1b23a6;
  #L1b2378.  v26:= "@QueryMap parameter type must be Map." @kind object;
  #L1b237c.  v27:= 0I;
  #L1b2380.  v0:= v27;
  #L1b2384.  v0:= new `java.lang.Object`[v0];
  #L1b2388.  v27:= v0 @kind object;
  #L1b238c.  v0:= v30 @kind object;
  #L1b2390.  v1:= v31;
  #L1b2394.  v2:= v26 @kind object;
  #L1b2398.  v3:= v27 @kind object;
  #L1b239c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b23a2.  v26:= temp @kind object;
  #L1b23a4.  throw v26;
  #L1b23a6.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b23aa.  v0:= v32 @kind object;
  #L1b23ae.  v1:= v22 @kind object;
  #L1b23b2.  v2:= v26 @kind object;
  #L1b23b6.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b23bc.  v14:= temp @kind object;
  #L1b23be.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b23c2.  v26:= v0;
  #L1b23c6.  if v26 != 0 then goto L1b23f8;
  #L1b23ca.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b23ce.  v27:= 0I;
  #L1b23d2.  v0:= v27;
  #L1b23d6.  v0:= new `java.lang.Object`[v0];
  #L1b23da.  v27:= v0 @kind object;
  #L1b23de.  v0:= v30 @kind object;
  #L1b23e2.  v1:= v31;
  #L1b23e6.  v2:= v26 @kind object;
  #L1b23ea.  v3:= v27 @kind object;
  #L1b23ee.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b23f4.  v26:= temp @kind object;
  #L1b23f6.  throw v26;
  #L1b23f8.  v16:= v14 @kind object;
  #L1b23fc.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2400.  v26:= 0I;
  #L1b2404.  v0:= v26;
  #L1b2408.  v1:= v16 @kind object;
  #L1b240c.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2412.  v13:= temp @kind object;
  #L1b2414.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b2418.  v0:= v26 @kind object;
  #L1b241c.  if v0 == v13 then goto L1b2474;
  #L1b2420.  v26:= new `java.lang.StringBuilder`;
  #L1b2424.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b242a.  v27:= "@QueryMap keys must be of type String: " @kind object;
  #L1b242e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2434.  v26:= temp @kind object;
  #L1b2436.  v0:= v26 @kind object;
  #L1b243a.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2440.  v26:= temp @kind object;
  #L1b2442.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2448.  v26:= temp @kind object;
  #L1b244a.  v27:= 0I;
  #L1b244e.  v0:= v27;
  #L1b2452.  v0:= new `java.lang.Object`[v0];
  #L1b2456.  v27:= v0 @kind object;
  #L1b245a.  v0:= v30 @kind object;
  #L1b245e.  v1:= v31;
  #L1b2462.  v2:= v26 @kind object;
  #L1b2466.  v3:= v27 @kind object;
  #L1b246a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2470.  v26:= temp @kind object;
  #L1b2472.  throw v26;
  #L1b2474.  v26:= 1I;
  #L1b2478.  v0:= v26;
  #L1b247c.  v1:= v16 @kind object;
  #L1b2480.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2486.  v25:= temp @kind object;
  #L1b2488.  v0:= v30 @kind object;
  #L1b248c.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2490.  v26:= v0 @kind object;
  #L1b2494.  v0:= v26 @kind object;
  #L1b2498.  v1:= v25 @kind object;
  #L1b249c.  v2:= v33 @kind object;
  #L1b24a0.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b24a6.  v23:= temp @kind object;
  #L1b24a8.  v26:= new `retrofit2.ParameterHandler$QueryMap`;
  #L1b24ac.  v34:= (`retrofit2.http.QueryMap`) v34 @kind object;
  #L1b24b0.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/QueryMap;.encoded:()Z` @kind interface;
  #L1b24b6.  v27:= temp;
  #L1b24b8.  v0:= v26 @kind object;
  #L1b24bc.  v1:= v23 @kind object;
  #L1b24c0.  v2:= v27;
  #L1b24c4.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b24ca.  goto L1b1e72;
  #L1b24ce.  v0:= v34 @kind object;
  #L1b24d2.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Header` @kind boolean;
  #L1b24d6.  v26:= v0;
  #L1b24da.  if v26 == 0 then goto L1b2668;
  #L1b24de.  v10:= v34 @kind object;
  #L1b24e2.  v10:= (`retrofit2.http.Header`) v10 @kind object;
  #L1b24e6.  call temp:= `value`(v10) @signature `Lretrofit2/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L1b24ec.  v15:= temp @kind object;
  #L1b24ee.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b24f4.  v22:= temp @kind object;
  #L1b24f6.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b24fa.  v0:= v26 @kind object;
  #L1b24fe.  v1:= v22 @kind object;
  #L1b2502.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2508.  v26:= temp;
  #L1b250a.  if v26 == 0 then goto L1b25e4;
  #L1b250e.  v0:= v32 @kind object;
  #L1b2512.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2516.  v26:= v0;
  #L1b251a.  if v26 != 0 then goto L1b2592;
  #L1b251e.  v26:= new `java.lang.StringBuilder`;
  #L1b2522.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2528.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b252e.  v27:= temp @kind object;
  #L1b2530.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2536.  v26:= temp @kind object;
  #L1b2538.  v27:= " must include generic type (e.g., " @kind object;
  #L1b253c.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2542.  v26:= temp @kind object;
  #L1b2544.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b254a.  v27:= temp @kind object;
  #L1b254c.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2552.  v26:= temp @kind object;
  #L1b2554.  v27:= "<String>)" @kind object;
  #L1b2558.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b255e.  v26:= temp @kind object;
  #L1b2560.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2566.  v26:= temp @kind object;
  #L1b2568.  v27:= 0I;
  #L1b256c.  v0:= v27;
  #L1b2570.  v0:= new `java.lang.Object`[v0];
  #L1b2574.  v27:= v0 @kind object;
  #L1b2578.  v0:= v30 @kind object;
  #L1b257c.  v1:= v31;
  #L1b2580.  v2:= v26 @kind object;
  #L1b2584.  v3:= v27 @kind object;
  #L1b2588.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b258e.  v26:= temp @kind object;
  #L1b2590.  throw v26;
  #L1b2592.  v16:= v32 @kind object;
  #L1b2596.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b259a.  v26:= 0I;
  #L1b259e.  v0:= v26;
  #L1b25a2.  v1:= v16 @kind object;
  #L1b25a6.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b25ac.  v12:= temp @kind object;
  #L1b25ae.  v0:= v30 @kind object;
  #L1b25b2.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b25b6.  v26:= v0 @kind object;
  #L1b25ba.  v0:= v26 @kind object;
  #L1b25be.  v1:= v33 @kind object;
  #L1b25c2.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b25c8.  v5:= temp @kind object;
  #L1b25ca.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b25ce.  v0:= v26 @kind object;
  #L1b25d2.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b25d8.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Header;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b25de.  v26:= temp @kind object;
  #L1b25e0.  goto L1b1e72;
  #L1b25e4.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b25ea.  v26:= temp;
  #L1b25ec.  if v26 == 0 then goto L1b2636;
  #L1b25f0.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b25f6.  v26:= temp @kind object;
  #L1b25f8.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b25fe.  v4:= temp @kind object;
  #L1b2600.  v0:= v30 @kind object;
  #L1b2604.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2608.  v26:= v0 @kind object;
  #L1b260c.  v0:= v26 @kind object;
  #L1b2610.  v1:= v33 @kind object;
  #L1b2614.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b261a.  v5:= temp @kind object;
  #L1b261c.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b2620.  v0:= v26 @kind object;
  #L1b2624.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b262a.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Header;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2630.  v26:= temp @kind object;
  #L1b2632.  goto L1b1e72;
  #L1b2636.  v0:= v30 @kind object;
  #L1b263a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b263e.  v26:= v0 @kind object;
  #L1b2642.  v0:= v26 @kind object;
  #L1b2646.  v1:= v32 @kind object;
  #L1b264a.  v2:= v33 @kind object;
  #L1b264e.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2654.  v5:= temp @kind object;
  #L1b2656.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b265a.  v0:= v26 @kind object;
  #L1b265e.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b2664.  goto L1b1e72;
  #L1b2668.  v0:= v34 @kind object;
  #L1b266c.  v0:= instanceof @variable v0 @type ^`retrofit2.http.HeaderMap` @kind boolean;
  #L1b2670.  v26:= v0;
  #L1b2674.  if v26 == 0 then goto L1b27de;
  #L1b2678.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b267e.  v22:= temp @kind object;
  #L1b2680.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b2684.  v0:= v26 @kind object;
  #L1b2688.  v1:= v22 @kind object;
  #L1b268c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2692.  v26:= temp;
  #L1b2694.  if v26 != 0 then goto L1b26c6;
  #L1b2698.  v26:= "@HeaderMap parameter type must be Map." @kind object;
  #L1b269c.  v27:= 0I;
  #L1b26a0.  v0:= v27;
  #L1b26a4.  v0:= new `java.lang.Object`[v0];
  #L1b26a8.  v27:= v0 @kind object;
  #L1b26ac.  v0:= v30 @kind object;
  #L1b26b0.  v1:= v31;
  #L1b26b4.  v2:= v26 @kind object;
  #L1b26b8.  v3:= v27 @kind object;
  #L1b26bc.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b26c2.  v26:= temp @kind object;
  #L1b26c4.  throw v26;
  #L1b26c6.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b26ca.  v0:= v32 @kind object;
  #L1b26ce.  v1:= v22 @kind object;
  #L1b26d2.  v2:= v26 @kind object;
  #L1b26d6.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b26dc.  v14:= temp @kind object;
  #L1b26de.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b26e2.  v26:= v0;
  #L1b26e6.  if v26 != 0 then goto L1b2718;
  #L1b26ea.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b26ee.  v27:= 0I;
  #L1b26f2.  v0:= v27;
  #L1b26f6.  v0:= new `java.lang.Object`[v0];
  #L1b26fa.  v27:= v0 @kind object;
  #L1b26fe.  v0:= v30 @kind object;
  #L1b2702.  v1:= v31;
  #L1b2706.  v2:= v26 @kind object;
  #L1b270a.  v3:= v27 @kind object;
  #L1b270e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2714.  v26:= temp @kind object;
  #L1b2716.  throw v26;
  #L1b2718.  v16:= v14 @kind object;
  #L1b271c.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2720.  v26:= 0I;
  #L1b2724.  v0:= v26;
  #L1b2728.  v1:= v16 @kind object;
  #L1b272c.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2732.  v13:= temp @kind object;
  #L1b2734.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b2738.  v0:= v26 @kind object;
  #L1b273c.  if v0 == v13 then goto L1b2794;
  #L1b2740.  v26:= new `java.lang.StringBuilder`;
  #L1b2744.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b274a.  v27:= "@HeaderMap keys must be of type String: " @kind object;
  #L1b274e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2754.  v26:= temp @kind object;
  #L1b2756.  v0:= v26 @kind object;
  #L1b275a.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2760.  v26:= temp @kind object;
  #L1b2762.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2768.  v26:= temp @kind object;
  #L1b276a.  v27:= 0I;
  #L1b276e.  v0:= v27;
  #L1b2772.  v0:= new `java.lang.Object`[v0];
  #L1b2776.  v27:= v0 @kind object;
  #L1b277a.  v0:= v30 @kind object;
  #L1b277e.  v1:= v31;
  #L1b2782.  v2:= v26 @kind object;
  #L1b2786.  v3:= v27 @kind object;
  #L1b278a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2790.  v26:= temp @kind object;
  #L1b2792.  throw v26;
  #L1b2794.  v26:= 1I;
  #L1b2798.  v0:= v26;
  #L1b279c.  v1:= v16 @kind object;
  #L1b27a0.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b27a6.  v25:= temp @kind object;
  #L1b27a8.  v0:= v30 @kind object;
  #L1b27ac.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b27b0.  v26:= v0 @kind object;
  #L1b27b4.  v0:= v26 @kind object;
  #L1b27b8.  v1:= v25 @kind object;
  #L1b27bc.  v2:= v33 @kind object;
  #L1b27c0.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b27c6.  v23:= temp @kind object;
  #L1b27c8.  v26:= new `retrofit2.ParameterHandler$HeaderMap`;
  #L1b27cc.  v0:= v26 @kind object;
  #L1b27d0.  v1:= v23 @kind object;
  #L1b27d4.  call `<init>`(v0, v1) @signature `Lretrofit2/ParameterHandler$HeaderMap;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1b27da.  goto L1b1e72;
  #L1b27de.  v0:= v34 @kind object;
  #L1b27e2.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Field` @kind boolean;
  #L1b27e6.  v26:= v0;
  #L1b27ea.  if v26 == 0 then goto L1b29ce;
  #L1b27ee.  v0:= v30 @kind object;
  #L1b27f2.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b27f6.  v26:= v0;
  #L1b27fa.  if v26 != 0 then goto L1b282c;
  #L1b27fe.  v26:= "@Field parameters can only be used with form encoding." @kind object;
  #L1b2802.  v27:= 0I;
  #L1b2806.  v0:= v27;
  #L1b280a.  v0:= new `java.lang.Object`[v0];
  #L1b280e.  v27:= v0 @kind object;
  #L1b2812.  v0:= v30 @kind object;
  #L1b2816.  v1:= v31;
  #L1b281a.  v2:= v26 @kind object;
  #L1b281e.  v3:= v27 @kind object;
  #L1b2822.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2828.  v26:= temp @kind object;
  #L1b282a.  throw v26;
  #L1b282c.  v9:= v34 @kind object;
  #L1b2830.  v9:= (`retrofit2.http.Field`) v9 @kind object;
  #L1b2834.  call temp:= `value`(v9) @signature `Lretrofit2/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L1b283a.  v15:= temp @kind object;
  #L1b283c.  call temp:= `encoded`(v9) @signature `Lretrofit2/http/Field;.encoded:()Z` @kind interface;
  #L1b2842.  v8:= temp;
  #L1b2844.  v26:= 1I;
  #L1b2848.  v0:= v26;
  #L1b284c.  v1:= v30 @kind object;
  #L1b2850.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L1b2854.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b285a.  v22:= temp @kind object;
  #L1b285c.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b2860.  v0:= v26 @kind object;
  #L1b2864.  v1:= v22 @kind object;
  #L1b2868.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b286e.  v26:= temp;
  #L1b2870.  if v26 == 0 then goto L1b294a;
  #L1b2874.  v0:= v32 @kind object;
  #L1b2878.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b287c.  v26:= v0;
  #L1b2880.  if v26 != 0 then goto L1b28f8;
  #L1b2884.  v26:= new `java.lang.StringBuilder`;
  #L1b2888.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b288e.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2894.  v27:= temp @kind object;
  #L1b2896.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b289c.  v26:= temp @kind object;
  #L1b289e.  v27:= " must include generic type (e.g., " @kind object;
  #L1b28a2.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b28a8.  v26:= temp @kind object;
  #L1b28aa.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b28b0.  v27:= temp @kind object;
  #L1b28b2.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b28b8.  v26:= temp @kind object;
  #L1b28ba.  v27:= "<String>)" @kind object;
  #L1b28be.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b28c4.  v26:= temp @kind object;
  #L1b28c6.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b28cc.  v26:= temp @kind object;
  #L1b28ce.  v27:= 0I;
  #L1b28d2.  v0:= v27;
  #L1b28d6.  v0:= new `java.lang.Object`[v0];
  #L1b28da.  v27:= v0 @kind object;
  #L1b28de.  v0:= v30 @kind object;
  #L1b28e2.  v1:= v31;
  #L1b28e6.  v2:= v26 @kind object;
  #L1b28ea.  v3:= v27 @kind object;
  #L1b28ee.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b28f4.  v26:= temp @kind object;
  #L1b28f6.  throw v26;
  #L1b28f8.  v16:= v32 @kind object;
  #L1b28fc.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2900.  v26:= 0I;
  #L1b2904.  v0:= v26;
  #L1b2908.  v1:= v16 @kind object;
  #L1b290c.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2912.  v12:= temp @kind object;
  #L1b2914.  v0:= v30 @kind object;
  #L1b2918.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b291c.  v26:= v0 @kind object;
  #L1b2920.  v0:= v26 @kind object;
  #L1b2924.  v1:= v33 @kind object;
  #L1b2928.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b292e.  v5:= temp @kind object;
  #L1b2930.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b2934.  v0:= v26 @kind object;
  #L1b2938.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b293e.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Field;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2944.  v26:= temp @kind object;
  #L1b2946.  goto L1b1e72;
  #L1b294a.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2950.  v26:= temp;
  #L1b2952.  if v26 == 0 then goto L1b299c;
  #L1b2956.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b295c.  v26:= temp @kind object;
  #L1b295e.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b2964.  v4:= temp @kind object;
  #L1b2966.  v0:= v30 @kind object;
  #L1b296a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b296e.  v26:= v0 @kind object;
  #L1b2972.  v0:= v26 @kind object;
  #L1b2976.  v1:= v33 @kind object;
  #L1b297a.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2980.  v5:= temp @kind object;
  #L1b2982.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b2986.  v0:= v26 @kind object;
  #L1b298a.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b2990.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Field;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2996.  v26:= temp @kind object;
  #L1b2998.  goto L1b1e72;
  #L1b299c.  v0:= v30 @kind object;
  #L1b29a0.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b29a4.  v26:= v0 @kind object;
  #L1b29a8.  v0:= v26 @kind object;
  #L1b29ac.  v1:= v32 @kind object;
  #L1b29b0.  v2:= v33 @kind object;
  #L1b29b4.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b29ba.  v5:= temp @kind object;
  #L1b29bc.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b29c0.  v0:= v26 @kind object;
  #L1b29c4.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b29ca.  goto L1b1e72;
  #L1b29ce.  v0:= v34 @kind object;
  #L1b29d2.  v0:= instanceof @variable v0 @type ^`retrofit2.http.FieldMap` @kind boolean;
  #L1b29d6.  v26:= v0;
  #L1b29da.  if v26 == 0 then goto L1b2ba2;
  #L1b29de.  v0:= v30 @kind object;
  #L1b29e2.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b29e6.  v26:= v0;
  #L1b29ea.  if v26 != 0 then goto L1b2a1c;
  #L1b29ee.  v26:= "@FieldMap parameters can only be used with form encoding." @kind object;
  #L1b29f2.  v27:= 0I;
  #L1b29f6.  v0:= v27;
  #L1b29fa.  v0:= new `java.lang.Object`[v0];
  #L1b29fe.  v27:= v0 @kind object;
  #L1b2a02.  v0:= v30 @kind object;
  #L1b2a06.  v1:= v31;
  #L1b2a0a.  v2:= v26 @kind object;
  #L1b2a0e.  v3:= v27 @kind object;
  #L1b2a12.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2a18.  v26:= temp @kind object;
  #L1b2a1a.  throw v26;
  #L1b2a1c.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2a22.  v22:= temp @kind object;
  #L1b2a24.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b2a28.  v0:= v26 @kind object;
  #L1b2a2c.  v1:= v22 @kind object;
  #L1b2a30.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2a36.  v26:= temp;
  #L1b2a38.  if v26 != 0 then goto L1b2a6a;
  #L1b2a3c.  v26:= "@FieldMap parameter type must be Map." @kind object;
  #L1b2a40.  v27:= 0I;
  #L1b2a44.  v0:= v27;
  #L1b2a48.  v0:= new `java.lang.Object`[v0];
  #L1b2a4c.  v27:= v0 @kind object;
  #L1b2a50.  v0:= v30 @kind object;
  #L1b2a54.  v1:= v31;
  #L1b2a58.  v2:= v26 @kind object;
  #L1b2a5c.  v3:= v27 @kind object;
  #L1b2a60.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2a66.  v26:= temp @kind object;
  #L1b2a68.  throw v26;
  #L1b2a6a.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b2a6e.  v0:= v32 @kind object;
  #L1b2a72.  v1:= v22 @kind object;
  #L1b2a76.  v2:= v26 @kind object;
  #L1b2a7a.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2a80.  v14:= temp @kind object;
  #L1b2a82.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2a86.  v26:= v0;
  #L1b2a8a.  if v26 != 0 then goto L1b2abc;
  #L1b2a8e.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b2a92.  v27:= 0I;
  #L1b2a96.  v0:= v27;
  #L1b2a9a.  v0:= new `java.lang.Object`[v0];
  #L1b2a9e.  v27:= v0 @kind object;
  #L1b2aa2.  v0:= v30 @kind object;
  #L1b2aa6.  v1:= v31;
  #L1b2aaa.  v2:= v26 @kind object;
  #L1b2aae.  v3:= v27 @kind object;
  #L1b2ab2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2ab8.  v26:= temp @kind object;
  #L1b2aba.  throw v26;
  #L1b2abc.  v16:= v14 @kind object;
  #L1b2ac0.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2ac4.  v26:= 0I;
  #L1b2ac8.  v0:= v26;
  #L1b2acc.  v1:= v16 @kind object;
  #L1b2ad0.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2ad6.  v13:= temp @kind object;
  #L1b2ad8.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b2adc.  v0:= v26 @kind object;
  #L1b2ae0.  if v0 == v13 then goto L1b2b38;
  #L1b2ae4.  v26:= new `java.lang.StringBuilder`;
  #L1b2ae8.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2aee.  v27:= "@FieldMap keys must be of type String: " @kind object;
  #L1b2af2.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2af8.  v26:= temp @kind object;
  #L1b2afa.  v0:= v26 @kind object;
  #L1b2afe.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2b04.  v26:= temp @kind object;
  #L1b2b06.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2b0c.  v26:= temp @kind object;
  #L1b2b0e.  v27:= 0I;
  #L1b2b12.  v0:= v27;
  #L1b2b16.  v0:= new `java.lang.Object`[v0];
  #L1b2b1a.  v27:= v0 @kind object;
  #L1b2b1e.  v0:= v30 @kind object;
  #L1b2b22.  v1:= v31;
  #L1b2b26.  v2:= v26 @kind object;
  #L1b2b2a.  v3:= v27 @kind object;
  #L1b2b2e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2b34.  v26:= temp @kind object;
  #L1b2b36.  throw v26;
  #L1b2b38.  v26:= 1I;
  #L1b2b3c.  v0:= v26;
  #L1b2b40.  v1:= v16 @kind object;
  #L1b2b44.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2b4a.  v25:= temp @kind object;
  #L1b2b4c.  v0:= v30 @kind object;
  #L1b2b50.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2b54.  v26:= v0 @kind object;
  #L1b2b58.  v0:= v26 @kind object;
  #L1b2b5c.  v1:= v25 @kind object;
  #L1b2b60.  v2:= v33 @kind object;
  #L1b2b64.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2b6a.  v23:= temp @kind object;
  #L1b2b6c.  v26:= 1I;
  #L1b2b70.  v0:= v26;
  #L1b2b74.  v1:= v30 @kind object;
  #L1b2b78.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L1b2b7c.  v26:= new `retrofit2.ParameterHandler$FieldMap`;
  #L1b2b80.  v34:= (`retrofit2.http.FieldMap`) v34 @kind object;
  #L1b2b84.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/FieldMap;.encoded:()Z` @kind interface;
  #L1b2b8a.  v27:= temp;
  #L1b2b8c.  v0:= v26 @kind object;
  #L1b2b90.  v1:= v23 @kind object;
  #L1b2b94.  v2:= v27;
  #L1b2b98.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b2b9e.  goto L1b1e72;
  #L1b2ba2.  v0:= v34 @kind object;
  #L1b2ba6.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Part` @kind boolean;
  #L1b2baa.  v26:= v0;
  #L1b2bae.  if v26 == 0 then goto L1b30d8;
  #L1b2bb2.  v0:= v30 @kind object;
  #L1b2bb6.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b2bba.  v26:= v0;
  #L1b2bbe.  if v26 != 0 then goto L1b2bf0;
  #L1b2bc2.  v26:= "@Part parameters can only be used with multipart encoding." @kind object;
  #L1b2bc6.  v27:= 0I;
  #L1b2bca.  v0:= v27;
  #L1b2bce.  v0:= new `java.lang.Object`[v0];
  #L1b2bd2.  v27:= v0 @kind object;
  #L1b2bd6.  v0:= v30 @kind object;
  #L1b2bda.  v1:= v31;
  #L1b2bde.  v2:= v26 @kind object;
  #L1b2be2.  v3:= v27 @kind object;
  #L1b2be6.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2bec.  v26:= temp @kind object;
  #L1b2bee.  throw v26;
  #L1b2bf0.  v17:= v34 @kind object;
  #L1b2bf4.  v17:= (`retrofit2.http.Part`) v17 @kind object;
  #L1b2bf8.  v26:= 1I;
  #L1b2bfc.  v0:= v26;
  #L1b2c00.  v1:= v30 @kind object;
  #L1b2c04.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L1b2c08.  call temp:= `value`(v17) @signature `Lretrofit2/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L1b2c0e.  v19:= temp @kind object;
  #L1b2c10.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2c16.  v22:= temp @kind object;
  #L1b2c18.  call temp:= `isEmpty`(v19) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1b2c1e.  v26:= temp;
  #L1b2c20.  if v26 == 0 then goto L1b2de6;
  #L1b2c24.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b2c28.  v0:= v26 @kind object;
  #L1b2c2c.  v1:= v22 @kind object;
  #L1b2c30.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2c36.  v26:= temp;
  #L1b2c38.  if v26 == 0 then goto L1b2d32;
  #L1b2c3c.  v0:= v32 @kind object;
  #L1b2c40.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2c44.  v26:= v0;
  #L1b2c48.  if v26 != 0 then goto L1b2cc0;
  #L1b2c4c.  v26:= new `java.lang.StringBuilder`;
  #L1b2c50.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2c56.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2c5c.  v27:= temp @kind object;
  #L1b2c5e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2c64.  v26:= temp @kind object;
  #L1b2c66.  v27:= " must include generic type (e.g., " @kind object;
  #L1b2c6a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2c70.  v26:= temp @kind object;
  #L1b2c72.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2c78.  v27:= temp @kind object;
  #L1b2c7a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2c80.  v26:= temp @kind object;
  #L1b2c82.  v27:= "<String>)" @kind object;
  #L1b2c86.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2c8c.  v26:= temp @kind object;
  #L1b2c8e.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2c94.  v26:= temp @kind object;
  #L1b2c96.  v27:= 0I;
  #L1b2c9a.  v0:= v27;
  #L1b2c9e.  v0:= new `java.lang.Object`[v0];
  #L1b2ca2.  v27:= v0 @kind object;
  #L1b2ca6.  v0:= v30 @kind object;
  #L1b2caa.  v1:= v31;
  #L1b2cae.  v2:= v26 @kind object;
  #L1b2cb2.  v3:= v27 @kind object;
  #L1b2cb6.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2cbc.  v26:= temp @kind object;
  #L1b2cbe.  throw v26;
  #L1b2cc0.  v16:= v32 @kind object;
  #L1b2cc4.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2cc8.  v26:= 0I;
  #L1b2ccc.  v0:= v26;
  #L1b2cd0.  v1:= v16 @kind object;
  #L1b2cd4.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2cda.  v12:= temp @kind object;
  #L1b2cdc.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2ce0.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2ce6.  v27:= temp @kind object;
  #L1b2ce8.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2cee.  v26:= temp;
  #L1b2cf0.  if v26 != 0 then goto L1b2d22;
  #L1b2cf4.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b2cf8.  v27:= 0I;
  #L1b2cfc.  v0:= v27;
  #L1b2d00.  v0:= new `java.lang.Object`[v0];
  #L1b2d04.  v27:= v0 @kind object;
  #L1b2d08.  v0:= v30 @kind object;
  #L1b2d0c.  v1:= v31;
  #L1b2d10.  v2:= v26 @kind object;
  #L1b2d14.  v3:= v27 @kind object;
  #L1b2d18.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2d1e.  v26:= temp @kind object;
  #L1b2d20.  throw v26;
  #L1b2d22.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b2d26.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2d2c.  v26:= temp @kind object;
  #L1b2d2e.  goto L1b1e72;
  #L1b2d32.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2d38.  v26:= temp;
  #L1b2d3a.  if v26 == 0 then goto L1b2d98;
  #L1b2d3e.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b2d44.  v4:= temp @kind object;
  #L1b2d46.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2d4a.  v0:= v26 @kind object;
  #L1b2d4e.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2d54.  v26:= temp;
  #L1b2d56.  if v26 != 0 then goto L1b2d88;
  #L1b2d5a.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b2d5e.  v27:= 0I;
  #L1b2d62.  v0:= v27;
  #L1b2d66.  v0:= new `java.lang.Object`[v0];
  #L1b2d6a.  v27:= v0 @kind object;
  #L1b2d6e.  v0:= v30 @kind object;
  #L1b2d72.  v1:= v31;
  #L1b2d76.  v2:= v26 @kind object;
  #L1b2d7a.  v3:= v27 @kind object;
  #L1b2d7e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2d84.  v26:= temp @kind object;
  #L1b2d86.  throw v26;
  #L1b2d88.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b2d8c.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2d92.  v26:= temp @kind object;
  #L1b2d94.  goto L1b1e72;
  #L1b2d98.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2d9c.  v0:= v26 @kind object;
  #L1b2da0.  v1:= v22 @kind object;
  #L1b2da4.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2daa.  v26:= temp;
  #L1b2dac.  if v26 == 0 then goto L1b2db8;
  #L1b2db0.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b2db4.  goto L1b1e72;
  #L1b2db8.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b2dbc.  v27:= 0I;
  #L1b2dc0.  v0:= v27;
  #L1b2dc4.  v0:= new `java.lang.Object`[v0];
  #L1b2dc8.  v27:= v0 @kind object;
  #L1b2dcc.  v0:= v30 @kind object;
  #L1b2dd0.  v1:= v31;
  #L1b2dd4.  v2:= v26 @kind object;
  #L1b2dd8.  v3:= v27 @kind object;
  #L1b2ddc.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2de2.  v26:= temp @kind object;
  #L1b2de4.  throw v26;
  #L1b2de6.  v26:= 4I;
  #L1b2dea.  v0:= v26;
  #L1b2dee.  v0:= new `java.lang.String`[v0];
  #L1b2df2.  v26:= v0 @kind object;
  #L1b2df6.  v27:= 0I;
  #L1b2dfa.  v28:= "Content-Disposition" @kind object;
  #L1b2dfe.  v26[v27]:= v28 @kind object;
  #L1b2e02.  v27:= 1I;
  #L1b2e06.  v28:= new `java.lang.StringBuilder`;
  #L1b2e0a.  call `<init>`(v28) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2e10.  v29:= "form-data; name=\"" @kind object;
  #L1b2e14.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2e1a.  v28:= temp @kind object;
  #L1b2e1c.  v0:= v28 @kind object;
  #L1b2e20.  v1:= v19 @kind object;
  #L1b2e24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2e2a.  v28:= temp @kind object;
  #L1b2e2c.  v29:= "\"" @kind object;
  #L1b2e30.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2e36.  v28:= temp @kind object;
  #L1b2e38.  call temp:= `toString`(v28) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2e3e.  v28:= temp @kind object;
  #L1b2e40.  v26[v27]:= v28 @kind object;
  #L1b2e44.  v27:= 2I;
  #L1b2e48.  v28:= "Content-Transfer-Encoding" @kind object;
  #L1b2e4c.  v26[v27]:= v28 @kind object;
  #L1b2e50.  v27:= 3I;
  #L1b2e54.  call temp:= `encoding`(v17) @signature `Lretrofit2/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L1b2e5a.  v28:= temp @kind object;
  #L1b2e5c.  v26[v27]:= v28 @kind object;
  #L1b2e60.  call temp:= `of`(v26) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L1b2e66.  v11:= temp @kind object;
  #L1b2e68.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b2e6c.  v0:= v26 @kind object;
  #L1b2e70.  v1:= v22 @kind object;
  #L1b2e74.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2e7a.  v26:= temp;
  #L1b2e7c.  if v26 == 0 then goto L1b2fac;
  #L1b2e80.  v0:= v32 @kind object;
  #L1b2e84.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2e88.  v26:= v0;
  #L1b2e8c.  if v26 != 0 then goto L1b2f04;
  #L1b2e90.  v26:= new `java.lang.StringBuilder`;
  #L1b2e94.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2e9a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2ea0.  v27:= temp @kind object;
  #L1b2ea2.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2ea8.  v26:= temp @kind object;
  #L1b2eaa.  v27:= " must include generic type (e.g., " @kind object;
  #L1b2eae.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2eb4.  v26:= temp @kind object;
  #L1b2eb6.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2ebc.  v27:= temp @kind object;
  #L1b2ebe.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2ec4.  v26:= temp @kind object;
  #L1b2ec6.  v27:= "<String>)" @kind object;
  #L1b2eca.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2ed0.  v26:= temp @kind object;
  #L1b2ed2.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2ed8.  v26:= temp @kind object;
  #L1b2eda.  v27:= 0I;
  #L1b2ede.  v0:= v27;
  #L1b2ee2.  v0:= new `java.lang.Object`[v0];
  #L1b2ee6.  v27:= v0 @kind object;
  #L1b2eea.  v0:= v30 @kind object;
  #L1b2eee.  v1:= v31;
  #L1b2ef2.  v2:= v26 @kind object;
  #L1b2ef6.  v3:= v27 @kind object;
  #L1b2efa.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2f00.  v26:= temp @kind object;
  #L1b2f02.  throw v26;
  #L1b2f04.  v16:= v32 @kind object;
  #L1b2f08.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2f0c.  v26:= 0I;
  #L1b2f10.  v0:= v26;
  #L1b2f14.  v1:= v16 @kind object;
  #L1b2f18.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2f1e.  v12:= temp @kind object;
  #L1b2f20.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2f24.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2f2a.  v27:= temp @kind object;
  #L1b2f2c.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2f32.  v26:= temp;
  #L1b2f34.  if v26 == 0 then goto L1b2f66;
  #L1b2f38.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b2f3c.  v27:= 0I;
  #L1b2f40.  v0:= v27;
  #L1b2f44.  v0:= new `java.lang.Object`[v0];
  #L1b2f48.  v27:= v0 @kind object;
  #L1b2f4c.  v0:= v30 @kind object;
  #L1b2f50.  v1:= v31;
  #L1b2f54.  v2:= v26 @kind object;
  #L1b2f58.  v3:= v27 @kind object;
  #L1b2f5c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2f62.  v26:= temp @kind object;
  #L1b2f64.  throw v26;
  #L1b2f66.  v0:= v30 @kind object;
  #L1b2f6a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2f6e.  v26:= v0 @kind object;
  #L1b2f72.  v0:= v30 @kind object;
  #L1b2f76.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b2f7a.  v27:= v0 @kind object;
  #L1b2f7e.  v0:= v26 @kind object;
  #L1b2f82.  v1:= v33 @kind object;
  #L1b2f86.  v2:= v27 @kind object;
  #L1b2f8a.  call temp:= `requestBodyConverter`(v0, v12, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2f90.  v6:= temp @kind object;
  #L1b2f92.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b2f96.  v0:= v26 @kind object;
  #L1b2f9a.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b2fa0.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Part;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2fa6.  v26:= temp @kind object;
  #L1b2fa8.  goto L1b1e72;
  #L1b2fac.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2fb2.  v26:= temp;
  #L1b2fb4.  if v26 == 0 then goto L1b3050;
  #L1b2fb8.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b2fbe.  v26:= temp @kind object;
  #L1b2fc0.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b2fc6.  v4:= temp @kind object;
  #L1b2fc8.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2fcc.  v0:= v26 @kind object;
  #L1b2fd0.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2fd6.  v26:= temp;
  #L1b2fd8.  if v26 == 0 then goto L1b300a;
  #L1b2fdc.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b2fe0.  v27:= 0I;
  #L1b2fe4.  v0:= v27;
  #L1b2fe8.  v0:= new `java.lang.Object`[v0];
  #L1b2fec.  v27:= v0 @kind object;
  #L1b2ff0.  v0:= v30 @kind object;
  #L1b2ff4.  v1:= v31;
  #L1b2ff8.  v2:= v26 @kind object;
  #L1b2ffc.  v3:= v27 @kind object;
  #L1b3000.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3006.  v26:= temp @kind object;
  #L1b3008.  throw v26;
  #L1b300a.  v0:= v30 @kind object;
  #L1b300e.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b3012.  v26:= v0 @kind object;
  #L1b3016.  v0:= v30 @kind object;
  #L1b301a.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b301e.  v27:= v0 @kind object;
  #L1b3022.  v0:= v26 @kind object;
  #L1b3026.  v1:= v33 @kind object;
  #L1b302a.  v2:= v27 @kind object;
  #L1b302e.  call temp:= `requestBodyConverter`(v0, v4, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b3034.  v6:= temp @kind object;
  #L1b3036.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b303a.  v0:= v26 @kind object;
  #L1b303e.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b3044.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Part;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b304a.  v26:= temp @kind object;
  #L1b304c.  goto L1b1e72;
  #L1b3050.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b3054.  v0:= v26 @kind object;
  #L1b3058.  v1:= v22 @kind object;
  #L1b305c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b3062.  v26:= temp;
  #L1b3064.  if v26 == 0 then goto L1b3096;
  #L1b3068.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b306c.  v27:= 0I;
  #L1b3070.  v0:= v27;
  #L1b3074.  v0:= new `java.lang.Object`[v0];
  #L1b3078.  v27:= v0 @kind object;
  #L1b307c.  v0:= v30 @kind object;
  #L1b3080.  v1:= v31;
  #L1b3084.  v2:= v26 @kind object;
  #L1b3088.  v3:= v27 @kind object;
  #L1b308c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3092.  v26:= temp @kind object;
  #L1b3094.  throw v26;
  #L1b3096.  v0:= v30 @kind object;
  #L1b309a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b309e.  v26:= v0 @kind object;
  #L1b30a2.  v0:= v30 @kind object;
  #L1b30a6.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b30aa.  v27:= v0 @kind object;
  #L1b30ae.  v0:= v26 @kind object;
  #L1b30b2.  v1:= v32 @kind object;
  #L1b30b6.  v2:= v33 @kind object;
  #L1b30ba.  v3:= v27 @kind object;
  #L1b30be.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b30c4.  v6:= temp @kind object;
  #L1b30c6.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b30ca.  v0:= v26 @kind object;
  #L1b30ce.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b30d4.  goto L1b1e72;
  #L1b30d8.  v0:= v34 @kind object;
  #L1b30dc.  v0:= instanceof @variable v0 @type ^`retrofit2.http.PartMap` @kind boolean;
  #L1b30e0.  v26:= v0;
  #L1b30e4.  if v26 == 0 then goto L1b3306;
  #L1b30e8.  v0:= v30 @kind object;
  #L1b30ec.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b30f0.  v26:= v0;
  #L1b30f4.  if v26 != 0 then goto L1b3126;
  #L1b30f8.  v26:= "@PartMap parameters can only be used with multipart encoding." @kind object;
  #L1b30fc.  v27:= 0I;
  #L1b3100.  v0:= v27;
  #L1b3104.  v0:= new `java.lang.Object`[v0];
  #L1b3108.  v27:= v0 @kind object;
  #L1b310c.  v0:= v30 @kind object;
  #L1b3110.  v1:= v31;
  #L1b3114.  v2:= v26 @kind object;
  #L1b3118.  v3:= v27 @kind object;
  #L1b311c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3122.  v26:= temp @kind object;
  #L1b3124.  throw v26;
  #L1b3126.  v26:= 1I;
  #L1b312a.  v0:= v26;
  #L1b312e.  v1:= v30 @kind object;
  #L1b3132.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L1b3136.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b313c.  v22:= temp @kind object;
  #L1b313e.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b3142.  v0:= v26 @kind object;
  #L1b3146.  v1:= v22 @kind object;
  #L1b314a.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b3150.  v26:= temp;
  #L1b3152.  if v26 != 0 then goto L1b3184;
  #L1b3156.  v26:= "@PartMap parameter type must be Map." @kind object;
  #L1b315a.  v27:= 0I;
  #L1b315e.  v0:= v27;
  #L1b3162.  v0:= new `java.lang.Object`[v0];
  #L1b3166.  v27:= v0 @kind object;
  #L1b316a.  v0:= v30 @kind object;
  #L1b316e.  v1:= v31;
  #L1b3172.  v2:= v26 @kind object;
  #L1b3176.  v3:= v27 @kind object;
  #L1b317a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3180.  v26:= temp @kind object;
  #L1b3182.  throw v26;
  #L1b3184.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b3188.  v0:= v32 @kind object;
  #L1b318c.  v1:= v22 @kind object;
  #L1b3190.  v2:= v26 @kind object;
  #L1b3194.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b319a.  v14:= temp @kind object;
  #L1b319c.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b31a0.  v26:= v0;
  #L1b31a4.  if v26 != 0 then goto L1b31d6;
  #L1b31a8.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b31ac.  v27:= 0I;
  #L1b31b0.  v0:= v27;
  #L1b31b4.  v0:= new `java.lang.Object`[v0];
  #L1b31b8.  v27:= v0 @kind object;
  #L1b31bc.  v0:= v30 @kind object;
  #L1b31c0.  v1:= v31;
  #L1b31c4.  v2:= v26 @kind object;
  #L1b31c8.  v3:= v27 @kind object;
  #L1b31cc.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b31d2.  v26:= temp @kind object;
  #L1b31d4.  throw v26;
  #L1b31d6.  v16:= v14 @kind object;
  #L1b31da.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b31de.  v26:= 0I;
  #L1b31e2.  v0:= v26;
  #L1b31e6.  v1:= v16 @kind object;
  #L1b31ea.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b31f0.  v13:= temp @kind object;
  #L1b31f2.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b31f6.  v0:= v26 @kind object;
  #L1b31fa.  if v0 == v13 then goto L1b3252;
  #L1b31fe.  v26:= new `java.lang.StringBuilder`;
  #L1b3202.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b3208.  v27:= "@PartMap keys must be of type String: " @kind object;
  #L1b320c.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3212.  v26:= temp @kind object;
  #L1b3214.  v0:= v26 @kind object;
  #L1b3218.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b321e.  v26:= temp @kind object;
  #L1b3220.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3226.  v26:= temp @kind object;
  #L1b3228.  v27:= 0I;
  #L1b322c.  v0:= v27;
  #L1b3230.  v0:= new `java.lang.Object`[v0];
  #L1b3234.  v27:= v0 @kind object;
  #L1b3238.  v0:= v30 @kind object;
  #L1b323c.  v1:= v31;
  #L1b3240.  v2:= v26 @kind object;
  #L1b3244.  v3:= v27 @kind object;
  #L1b3248.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b324e.  v26:= temp @kind object;
  #L1b3250.  throw v26;
  #L1b3252.  v26:= 1I;
  #L1b3256.  v0:= v26;
  #L1b325a.  v1:= v16 @kind object;
  #L1b325e.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b3264.  v25:= temp @kind object;
  #L1b3266.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b326a.  call temp:= `getRawType`(v25) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b3270.  v27:= temp @kind object;
  #L1b3272.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b3278.  v26:= temp;
  #L1b327a.  if v26 == 0 then goto L1b32ac;
  #L1b327e.  v26:= "@PartMap values cannot be MultipartBody.Part. Use @Part List<Part> or a different value type instead." @kind object;
  #L1b3282.  v27:= 0I;
  #L1b3286.  v0:= v27;
  #L1b328a.  v0:= new `java.lang.Object`[v0];
  #L1b328e.  v27:= v0 @kind object;
  #L1b3292.  v0:= v30 @kind object;
  #L1b3296.  v1:= v31;
  #L1b329a.  v2:= v26 @kind object;
  #L1b329e.  v3:= v27 @kind object;
  #L1b32a2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b32a8.  v26:= temp @kind object;
  #L1b32aa.  throw v26;
  #L1b32ac.  v0:= v30 @kind object;
  #L1b32b0.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b32b4.  v26:= v0 @kind object;
  #L1b32b8.  v0:= v30 @kind object;
  #L1b32bc.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b32c0.  v27:= v0 @kind object;
  #L1b32c4.  v0:= v26 @kind object;
  #L1b32c8.  v1:= v25 @kind object;
  #L1b32cc.  v2:= v33 @kind object;
  #L1b32d0.  v3:= v27 @kind object;
  #L1b32d4.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b32da.  v24:= temp @kind object;
  #L1b32dc.  v18:= v34 @kind object;
  #L1b32e0.  v18:= (`retrofit2.http.PartMap`) v18 @kind object;
  #L1b32e4.  v26:= new `retrofit2.ParameterHandler$PartMap`;
  #L1b32e8.  call temp:= `encoding`(v18) @signature `Lretrofit2/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L1b32ee.  v27:= temp @kind object;
  #L1b32f0.  v0:= v26 @kind object;
  #L1b32f4.  v1:= v24 @kind object;
  #L1b32f8.  v2:= v27 @kind object;
  #L1b32fc.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$PartMap;.<init>:(Lretrofit2/Converter;Ljava/lang/String;)V` @kind direct;
  #L1b3302.  goto L1b1e72;
  #L1b3306.  v0:= v34 @kind object;
  #L1b330a.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Body` @kind boolean;
  #L1b330e.  v26:= v0;
  #L1b3312.  if v26 == 0 then goto L1b342c;
  #L1b3316.  v0:= v30 @kind object;
  #L1b331a.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b331e.  v26:= v0;
  #L1b3322.  if v26 != 0 then goto L1b3336;
  #L1b3326.  v0:= v30 @kind object;
  #L1b332a.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b332e.  v26:= v0;
  #L1b3332.  if v26 == 0 then goto L1b3364;
  #L1b3336.  v26:= "@Body parameters cannot be used with form or multi-part encoding." @kind object;
  #L1b333a.  v27:= 0I;
  #L1b333e.  v0:= v27;
  #L1b3342.  v0:= new `java.lang.Object`[v0];
  #L1b3346.  v27:= v0 @kind object;
  #L1b334a.  v0:= v30 @kind object;
  #L1b334e.  v1:= v31;
  #L1b3352.  v2:= v26 @kind object;
  #L1b3356.  v3:= v27 @kind object;
  #L1b335a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3360.  v26:= temp @kind object;
  #L1b3362.  throw v26;
  #L1b3364.  v0:= v30 @kind object;
  #L1b3368.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L1b336c.  v26:= v0;
  #L1b3370.  if v26 == 0 then goto L1b33a2;
  #L1b3374.  v26:= "Multiple @Body method annotations found." @kind object;
  #L1b3378.  v27:= 0I;
  #L1b337c.  v0:= v27;
  #L1b3380.  v0:= new `java.lang.Object`[v0];
  #L1b3384.  v27:= v0 @kind object;
  #L1b3388.  v0:= v30 @kind object;
  #L1b338c.  v1:= v31;
  #L1b3390.  v2:= v26 @kind object;
  #L1b3394.  v3:= v27 @kind object;
  #L1b3398.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b339e.  v26:= temp @kind object;
  #L1b33a0.  throw v26;
  #Try_start0.  
  #L1b33a2.  v0:= v30 @kind object;
  #L1b33a6.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b33aa.  v26:= v0 @kind object;
  #L1b33ae.  v0:= v30 @kind object;
  #L1b33b2.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b33b6.  v27:= v0 @kind object;
  #L1b33ba.  v0:= v26 @kind object;
  #L1b33be.  v1:= v32 @kind object;
  #L1b33c2.  v2:= v33 @kind object;
  #L1b33c6.  v3:= v27 @kind object;
  #L1b33ca.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #Try_end0.  
  #L1b33d0.  v6:= temp @kind object;
  #L1b33d2.  v26:= 1I;
  #L1b33d6.  v0:= v26;
  #L1b33da.  v1:= v30 @kind object;
  #L1b33de.  v1.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` := v0 @kind boolean;
  #L1b33e2.  v26:= new `retrofit2.ParameterHandler$Body`;
  #L1b33e6.  v0:= v26 @kind object;
  #L1b33ea.  call `<init>`(v0, v6) @signature `Lretrofit2/ParameterHandler$Body;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1b33f0.  goto L1b1e72;
  #L1b33f4.  v7:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b33f6.  v26:= "Unable to create @Body converter for %s" @kind object;
  #L1b33fa.  v27:= 1I;
  #L1b33fe.  v0:= v27;
  #L1b3402.  v0:= new `java.lang.Object`[v0];
  #L1b3406.  v27:= v0 @kind object;
  #L1b340a.  v28:= 0I;
  #L1b340e.  v27[v28]:= v32 @kind object;
  #L1b3412.  v0:= v30 @kind object;
  #L1b3416.  v1:= v31;
  #L1b341a.  v2:= v26 @kind object;
  #L1b341e.  v3:= v27 @kind object;
  #L1b3422.  call temp:= `parameterError`(v0, v7, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3428.  v26:= temp @kind object;
  #L1b342a.  throw v26;
  #L1b342c.  v26:= 0I;
  #L1b3430.  goto L1b1e72;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b33f4;
}
procedure `void` `validatePathName`(`retrofit2.ServiceMethod$Builder` v5 @kind this, `int` v6 @name `p`, `java.lang.String` v7 @kind object @name `name`) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b3454.  v1:= 2I;
  #L1b3456.  v4:= 1I;
  #L1b3458.  v3:= 0I;
  #L1b345a.  v0:= `@@retrofit2.ServiceMethod.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b345e.  call temp:= `matcher`(v0, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b3464.  v0:= temp @kind object;
  #L1b3466.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L1b346c.  v0:= temp;
  #L1b346e.  if v0 != 0 then goto L1b3498;
  #L1b3472.  v0:= "@Path parameter name must match %s. Found: %s" @kind object;
  #L1b3476.  v1:= new `java.lang.Object`[v1];
  #L1b347a.  v2:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b347e.  call temp:= `pattern`(v2) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L1b3484.  v2:= temp @kind object;
  #L1b3486.  v1[v3]:= v2 @kind object;
  #L1b348a.  v1[v4]:= v7 @kind object;
  #L1b348e.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3494.  v0:= temp @kind object;
  #L1b3496.  throw v0;
  #L1b3498.  v0:= v5.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` @kind object;
  #L1b349c.  call temp:= `contains`(v0, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b34a2.  v0:= temp;
  #L1b34a4.  if v0 != 0 then goto L1b34c6;
  #L1b34a8.  v0:= "URL \"%s\" does not contain \"{%s}\"." @kind object;
  #L1b34ac.  v1:= new `java.lang.Object`[v1];
  #L1b34b0.  v2:= v5.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b34b4.  v1[v3]:= v2 @kind object;
  #L1b34b8.  v1[v4]:= v7 @kind object;
  #L1b34bc.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b34c2.  v0:= temp @kind object;
  #L1b34c4.  throw v0;
  #L1b34c6.  return @kind void;
}
procedure `retrofit2.ServiceMethod` `build`(`retrofit2.ServiceMethod$Builder` v10 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1b34d8.  v9:= 1I;
  #L1b34da.  v6:= 0I;
  #L1b34dc.  call temp:= `createCallAdapter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @kind direct;
  #L1b34e2.  v5:= temp @kind object;
  #L1b34e4.  v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` := v5 @kind object;
  #L1b34e8.  v5:= v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` @kind object;
  #L1b34ec.  call temp:= `responseType`(v5) @signature `Lretrofit2/CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1b34f2.  v5:= temp @kind object;
  #L1b34f4.  v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` := v5 @kind object;
  #L1b34f8.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b34fc.  v7:= constclass @type ^`retrofit2.Response` @kind object;
  #L1b3500.  if v5 == v7 then goto L1b3510;
  #L1b3504.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b3508.  v7:= constclass @type ^`okhttp3.Response` @kind object;
  #L1b350c.  if v5 != v7 then goto L1b3564;
  #L1b3510.  v5:= new `java.lang.StringBuilder`;
  #L1b3514.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b351a.  v7:= "'" @kind object;
  #L1b351e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3524.  v5:= temp @kind object;
  #L1b3526.  v7:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b352a.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b3530.  v7:= temp @kind object;
  #L1b3532.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b3538.  v7:= temp @kind object;
  #L1b353a.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3540.  v5:= temp @kind object;
  #L1b3542.  v7:= "' is not a valid response body type. Did you mean ResponseBody?" @kind object;
  #L1b3546.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b354c.  v5:= temp @kind object;
  #L1b354e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3554.  v5:= temp @kind object;
  #L1b3556.  v6:= new `java.lang.Object`[v6];
  #L1b355a.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3560.  v5:= temp @kind object;
  #L1b3562.  throw v5;
  #L1b3564.  call temp:= `createResponseConverter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @kind direct;
  #L1b356a.  v5:= temp @kind object;
  #L1b356c.  v10.`retrofit2.ServiceMethod$Builder.responseConverter` @type ^`retrofit2.Converter` := v5 @kind object;
  #L1b3570.  v7:= v10.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b3574.  v8:= length @variable v7;
  #L1b3576.  v5:= v6;
  #L1b3578.  if v5 >= v8 then goto L1b358c;
  #L1b357c.  v0:= v7[v5] @kind object;
  #L1b3580.  call `parseMethodAnnotation`(v10, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1b3586.  v5:= v5 + 1;
  #L1b358a.  goto L1b3578;
  #L1b358c.  v5:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b3590.  if v5 != 0 then goto L1b35a6;
  #L1b3594.  v5:= "HTTP method annotation is required (e.g., @GET, @POST, etc.)." @kind object;
  #L1b3598.  v6:= new `java.lang.Object`[v6];
  #L1b359c.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b35a2.  v5:= temp @kind object;
  #L1b35a4.  throw v5;
  #L1b35a6.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L1b35aa.  if v5 != 0 then goto L1b35e2;
  #L1b35ae.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b35b2.  if v5 == 0 then goto L1b35c8;
  #L1b35b6.  v5:= "Multipart can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L1b35ba.  v6:= new `java.lang.Object`[v6];
  #L1b35be.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b35c4.  v5:= temp @kind object;
  #L1b35c6.  throw v5;
  #L1b35c8.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b35cc.  if v5 == 0 then goto L1b35e2;
  #L1b35d0.  v5:= "FormUrlEncoded can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L1b35d4.  v6:= new `java.lang.Object`[v6];
  #L1b35d8.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b35de.  v5:= temp @kind object;
  #L1b35e0.  throw v5;
  #L1b35e2.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L1b35e6.  v3:= length @variable v5;
  #L1b35e8.  v5:= new `retrofit2.ParameterHandler`[v3];
  #L1b35ec.  v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v5 @kind object;
  #L1b35f0.  v1:= 0I;
  #L1b35f2.  if v1 >= v3 then goto L1b3654;
  #L1b35f6.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] @kind object;
  #L1b35fa.  v4:= v5[v1] @kind object;
  #L1b35fe.  call temp:= `hasUnresolvableType`(v4) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1b3604.  v5:= temp;
  #L1b3606.  if v5 == 0 then goto L1b3620;
  #L1b360a.  v5:= "Parameter type must not include a type variable or wildcard: %s" @kind object;
  #L1b360e.  v7:= new `java.lang.Object`[v9];
  #L1b3612.  v7[v6]:= v4 @kind object;
  #L1b3616.  call temp:= `parameterError`(v10, v1, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b361c.  v5:= temp @kind object;
  #L1b361e.  throw v5;
  #L1b3620.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L1b3624.  v2:= v5[v1] @kind object;
  #L1b3628.  if v2 != 0 then goto L1b363e;
  #L1b362c.  v5:= "No Retrofit annotation found." @kind object;
  #L1b3630.  v6:= new `java.lang.Object`[v6];
  #L1b3634.  call temp:= `parameterError`(v10, v1, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b363a.  v5:= temp @kind object;
  #L1b363c.  throw v5;
  #L1b363e.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L1b3642.  call temp:= `parseParameter`(v10, v1, v4, v2) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L1b3648.  v7:= temp @kind object;
  #L1b364a.  v5[v1]:= v7 @kind object;
  #L1b364e.  v1:= v1 + 1;
  #L1b3652.  goto L1b35f2;
  #L1b3654.  v5:= v10.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b3658.  if v5 != 0 then goto L1b367e;
  #L1b365c.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b3660.  if v5 != 0 then goto L1b367e;
  #L1b3664.  v5:= "Missing either @%s URL or @Url parameter." @kind object;
  #L1b3668.  v7:= new `java.lang.Object`[v9];
  #L1b366c.  v8:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b3670.  v7[v6]:= v8 @kind object;
  #L1b3674.  call temp:= `methodError`(v10, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b367a.  v5:= temp @kind object;
  #L1b367c.  throw v5;
  #L1b367e.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b3682.  if v5 != 0 then goto L1b36b0;
  #L1b3686.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b368a.  if v5 != 0 then goto L1b36b0;
  #L1b368e.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L1b3692.  if v5 != 0 then goto L1b36b0;
  #L1b3696.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L1b369a.  if v5 == 0 then goto L1b36b0;
  #L1b369e.  v5:= "Non-body HTTP method cannot contain @Body." @kind object;
  #L1b36a2.  v6:= new `java.lang.Object`[v6];
  #L1b36a6.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b36ac.  v5:= temp @kind object;
  #L1b36ae.  throw v5;
  #L1b36b0.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b36b4.  if v5 == 0 then goto L1b36d2;
  #L1b36b8.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` @kind boolean;
  #L1b36bc.  if v5 != 0 then goto L1b36d2;
  #L1b36c0.  v5:= "Form-encoded method must contain at least one @Field." @kind object;
  #L1b36c4.  v6:= new `java.lang.Object`[v6];
  #L1b36c8.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b36ce.  v5:= temp @kind object;
  #L1b36d0.  throw v5;
  #L1b36d2.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b36d6.  if v5 == 0 then goto L1b36f4;
  #L1b36da.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` @kind boolean;
  #L1b36de.  if v5 != 0 then goto L1b36f4;
  #L1b36e2.  v5:= "Multipart method must contain at least one @Part." @kind object;
  #L1b36e6.  v6:= new `java.lang.Object`[v6];
  #L1b36ea.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b36f0.  v5:= temp @kind object;
  #L1b36f2.  throw v5;
  #L1b36f4.  v5:= new `retrofit2.ServiceMethod`;
  #L1b36f8.  call `<init>`(v5, v10) @signature `Lretrofit2/ServiceMethod;.<init>:(Lretrofit2/ServiceMethod$Builder;)V` @kind direct;
  #L1b36fe.  return v5 @kind object;
}

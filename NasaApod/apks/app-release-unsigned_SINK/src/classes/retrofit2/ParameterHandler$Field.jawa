record `retrofit2.ParameterHandler$Field` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$Field.encoded` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.ParameterHandler$Field.name` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$Field.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$Field` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `retrofit2.Converter` v3 @kind object, `boolean` v4 @name `encoded`) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L221d08.  call `<init>`(v1) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L221d0e.  v0:= "name == null" @kind object;
  #L221d12.  call temp:= `checkNotNull`(v2, v0) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L221d18.  v0:= temp @kind object;
  #L221d1a.  v0:= (`java.lang.String`) v0 @kind object;
  #L221d1e.  v1.`retrofit2.ParameterHandler$Field.name` @type ^`java.lang.String` := v0 @kind object;
  #L221d22.  v1.`retrofit2.ParameterHandler$Field.valueConverter` @type ^`retrofit2.Converter` := v3 @kind object;
  #L221d26.  v1.`retrofit2.ParameterHandler$Field.encoded` @type ^`boolean` := v4 @kind boolean;
  #L221d2a.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$Field` v3 @kind this, `retrofit2.RequestBuilder` v4 @kind object @name `builder`, `java.lang.Object` v5 @kind object) @signature `Lretrofit2/ParameterHandler$Field;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L221d3c.  if v5 != 0 then goto L221d42;
  #L221d40.  return @kind void;
  #L221d42.  v1:= v3.`retrofit2.ParameterHandler$Field.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L221d46.  call temp:= `convert`(v1, v5) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L221d4c.  v0:= temp @kind object;
  #L221d4e.  v0:= (`java.lang.String`) v0 @kind object;
  #L221d52.  if v0 == 0 then goto L221d40;
  #L221d56.  v1:= v3.`retrofit2.ParameterHandler$Field.name` @type ^`java.lang.String` @kind object;
  #L221d5a.  v2:= v3.`retrofit2.ParameterHandler$Field.encoded` @type ^`boolean` @kind boolean;
  #L221d5e.  call `addFormField`(v4, v1, v0, v2) @signature `Lretrofit2/RequestBuilder;.addFormField:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L221d64.  goto L221d40;
}

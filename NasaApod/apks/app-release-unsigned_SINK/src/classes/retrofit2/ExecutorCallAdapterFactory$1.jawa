record `retrofit2.ExecutorCallAdapterFactory$1` @kind class @AccessFlag  extends `retrofit2.CallAdapter` @kind interface {
  `retrofit2.ExecutorCallAdapterFactory` `retrofit2.ExecutorCallAdapterFactory$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.reflect.Type` `retrofit2.ExecutorCallAdapterFactory$1.val$responseType` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.ExecutorCallAdapterFactory$1` v0 @kind this, `retrofit2.ExecutorCallAdapterFactory` v1 @kind object @name `this$0`, `java.lang.reflect.Type` v2 @kind object) @signature `Lretrofit2/ExecutorCallAdapterFactory$1;.<init>:(Lretrofit2/ExecutorCallAdapterFactory;Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2211f8.  v0.`retrofit2.ExecutorCallAdapterFactory$1.this$0` @type ^`retrofit2.ExecutorCallAdapterFactory` := v1 @kind object;
  #L2211fc.  v0.`retrofit2.ExecutorCallAdapterFactory$1.val$responseType` @type ^`java.lang.reflect.Type` := v2 @kind object;
  #L221200.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L221206.  return @kind void;
}
procedure `java.lang.Object` `adapt`(`retrofit2.ExecutorCallAdapterFactory$1` v1 @kind this, `retrofit2.Call` v2 @kind object) @signature `Lretrofit2/ExecutorCallAdapterFactory$1;.adapt:(Lretrofit2/Call;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L221218.  call temp:= `adapt`(v1, v2) @signature `Lretrofit2/ExecutorCallAdapterFactory$1;.adapt:(Lretrofit2/Call;)Lretrofit2/Call;` @kind virtual;
  #L22121e.  v0:= temp @kind object;
  #L221220.  return v0 @kind object;
}
procedure `retrofit2.Call` `adapt`(`retrofit2.ExecutorCallAdapterFactory$1` v2 @kind this, `retrofit2.Call` v3 @kind object) @signature `Lretrofit2/ExecutorCallAdapterFactory$1;.adapt:(Lretrofit2/Call;)Lretrofit2/Call;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L221234.  v0:= new `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall`;
  #L221238.  v1:= v2.`retrofit2.ExecutorCallAdapterFactory$1.this$0` @type ^`retrofit2.ExecutorCallAdapterFactory` @kind object;
  #L22123c.  v1:= v1.`retrofit2.ExecutorCallAdapterFactory.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L221240.  call `<init>`(v0, v1, v3) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.<init>:(Ljava/util/concurrent/Executor;Lretrofit2/Call;)V` @kind direct;
  #L221246.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `responseType`(`retrofit2.ExecutorCallAdapterFactory$1` v1 @kind this) @signature `Lretrofit2/ExecutorCallAdapterFactory$1;.responseType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L221258.  v0:= v1.`retrofit2.ExecutorCallAdapterFactory$1.val$responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L22125c.  return v0 @kind object;
}

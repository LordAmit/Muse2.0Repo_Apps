record `okhttp3.Headers$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.Headers$Builder.namesAndValues` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Headers$Builder` v2 @kind this) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1997f4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1997fa.  v0:= new `java.util.ArrayList`;
  #L1997fe.  v1:= 20I;
  #L199802.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L199808.  v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19980c.  return @kind void;
}
procedure `void` `checkNameAndValue`(`okhttp3.Headers$Builder` v11 @kind this, `java.lang.String` v12 @kind object @name `name`, `java.lang.String` v13 @kind object @name `value`) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L199820.  v4:= 127I;
  #L199824.  v10:= 3I;
  #L199826.  v9:= 2I;
  #L199828.  v8:= 1I;
  #L19982a.  v7:= 0I;
  #L19982c.  if v12 != 0 then goto L199840;
  #L199830.  v3:= new `java.lang.NullPointerException`;
  #L199834.  v4:= "name == null" @kind object;
  #L199838.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19983e.  throw v3;
  #L199840.  call temp:= `isEmpty`(v12) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L199846.  v3:= temp;
  #L199848.  if v3 == 0 then goto L19985c;
  #L19984c.  v3:= new `java.lang.IllegalArgumentException`;
  #L199850.  v4:= "name is empty" @kind object;
  #L199854.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19985a.  throw v3;
  #L19985c.  v1:= 0I;
  #L19985e.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199864.  v2:= temp;
  #L199866.  if v1 >= v2 then goto L1998bc;
  #L19986a.  call temp:= `charAt`(v12, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199870.  v0:= temp;
  #L199872.  v3:= 32I;
  #L199876.  if v0 <= v3 then goto L19987e;
  #L19987a.  if v0 < v4 then goto L1998b6;
  #L19987e.  v3:= new `java.lang.IllegalArgumentException`;
  #L199882.  v4:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L199886.  v5:= new `java.lang.Object`[v10];
  #L19988a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L199890.  v6:= temp @kind object;
  #L199892.  v5[v7]:= v6 @kind object;
  #L199896.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L19989c.  v6:= temp @kind object;
  #L19989e.  v5[v8]:= v6 @kind object;
  #L1998a2.  v5[v9]:= v12 @kind object;
  #L1998a6.  call temp:= `format`(v4, v5) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1998ac.  v4:= temp @kind object;
  #L1998ae.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1998b4.  throw v3;
  #L1998b6.  v1:= v1 + 1;
  #L1998ba.  goto L199866;
  #L1998bc.  if v13 != 0 then goto L1998fe;
  #L1998c0.  v3:= new `java.lang.NullPointerException`;
  #L1998c4.  v4:= new `java.lang.StringBuilder`;
  #L1998c8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1998ce.  v5:= "value for name " @kind object;
  #L1998d2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1998d8.  v4:= temp @kind object;
  #L1998da.  call temp:= `append`(v4, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1998e0.  v4:= temp @kind object;
  #L1998e2.  v5:= " == null" @kind object;
  #L1998e6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1998ec.  v4:= temp @kind object;
  #L1998ee.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1998f4.  v4:= temp @kind object;
  #L1998f6.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1998fc.  throw v3;
  #L1998fe.  v1:= 0I;
  #L199900.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199906.  v2:= temp;
  #L199908.  if v1 >= v2 then goto L19996c;
  #L19990c.  call temp:= `charAt`(v13, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L199912.  v0:= temp;
  #L199914.  v3:= 31I;
  #L199918.  if v0 > v3 then goto L199924;
  #L19991c.  v3:= 9I;
  #L199920.  if v0 != v3 then goto L199928;
  #L199924.  if v0 < v4 then goto L199966;
  #L199928.  v3:= new `java.lang.IllegalArgumentException`;
  #L19992c.  v4:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L199930.  v5:= 4I;
  #L199932.  v5:= new `java.lang.Object`[v5];
  #L199936.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L19993c.  v6:= temp @kind object;
  #L19993e.  v5[v7]:= v6 @kind object;
  #L199942.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L199948.  v6:= temp @kind object;
  #L19994a.  v5[v8]:= v6 @kind object;
  #L19994e.  v5[v9]:= v12 @kind object;
  #L199952.  v5[v10]:= v13 @kind object;
  #L199956.  call temp:= `format`(v4, v5) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19995c.  v4:= temp @kind object;
  #L19995e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199964.  throw v3;
  #L199966.  v1:= v1 + 1;
  #L19996a.  goto L199908;
  #L19996c.  return @kind void;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `line`) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L199980.  v1:= ":" @kind object;
  #L199984.  call temp:= `indexOf`(v5, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L19998a.  v0:= temp;
  #L19998c.  v1:= -1I;
  #L19998e.  if v0 != v1 then goto L1999c4;
  #L199992.  v1:= new `java.lang.IllegalArgumentException`;
  #L199996.  v2:= new `java.lang.StringBuilder`;
  #L19999a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1999a0.  v3:= "Unexpected header: " @kind object;
  #L1999a4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1999aa.  v2:= temp @kind object;
  #L1999ac.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1999b2.  v2:= temp @kind object;
  #L1999b4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1999ba.  v2:= temp @kind object;
  #L1999bc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1999c2.  throw v1;
  #L1999c4.  v1:= 0I;
  #L1999c6.  call temp:= `substring`(v5, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1999cc.  v1:= temp @kind object;
  #L1999ce.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1999d4.  v1:= temp @kind object;
  #L1999d6.  v2:= v0 + 1;
  #L1999da.  call temp:= `substring`(v5, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1999e0.  v2:= temp @kind object;
  #L1999e2.  call temp:= `add`(v4, v1, v2) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1999e8.  v1:= temp @kind object;
  #L1999ea.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1999fc.  call `checkNameAndValue`(v1, v2, v3) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L199a02.  call temp:= `addLenient`(v1, v2, v3) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L199a08.  v0:= temp @kind object;
  #L199a0a.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `line`) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L199a1c.  v2:= 1I;
  #L199a1e.  v1:= ":" @kind object;
  #L199a22.  call temp:= `indexOf`(v4, v1, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L199a28.  v0:= temp;
  #L199a2a.  v1:= -1I;
  #L199a2c.  if v0 == v1 then goto L199a50;
  #L199a30.  v1:= 0I;
  #L199a32.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L199a38.  v1:= temp @kind object;
  #L199a3a.  v2:= v0 + 1;
  #L199a3e.  call temp:= `substring`(v4, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L199a44.  v2:= temp @kind object;
  #L199a46.  call temp:= `addLenient`(v3, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L199a4c.  v1:= temp @kind object;
  #L199a4e.  return v1 @kind object;
  #L199a50.  v1:= ":" @kind object;
  #L199a54.  call temp:= `startsWith`(v4, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L199a5a.  v1:= temp;
  #L199a5c.  if v1 == 0 then goto L199a76;
  #L199a60.  v1:= "" @kind object;
  #L199a64.  call temp:= `substring`(v4, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L199a6a.  v2:= temp @kind object;
  #L199a6c.  call temp:= `addLenient`(v3, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L199a72.  v1:= temp @kind object;
  #L199a74.  goto L199a4e;
  #L199a76.  v1:= "" @kind object;
  #L199a7a.  call temp:= `addLenient`(v3, v1, v4) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L199a80.  v1:= temp @kind object;
  #L199a82.  goto L199a4e;
}
procedure `okhttp3.Headers$Builder` `addLenient`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `name`, `java.lang.String` v4 @kind object @name `value`) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L199a94.  v0:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199a98.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L199a9e.  v0:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199aa2.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L199aa8.  v1:= temp @kind object;
  #L199aaa.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L199ab0.  return v2 @kind object;
}
procedure `okhttp3.Headers` `build`(`okhttp3.Headers$Builder` v1 @kind this) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L199ac4.  v0:= new `okhttp3.Headers`;
  #L199ac8.  call `<init>`(v0, v1) @signature `Lokhttp3/Headers;.<init>:(Lokhttp3/Headers$Builder;)V` @kind direct;
  #L199ace.  return v0 @kind object;
}
procedure `java.lang.String` `get`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `name`) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L199ae0.  v1:= v3.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199ae4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L199aea.  v1:= temp;
  #L199aec.  v0:= v1 + -2;
  #L199af0.  if v0 < 0 then goto L199b2c;
  #L199af4.  v1:= v3.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199af8.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L199afe.  v1:= temp @kind object;
  #L199b00.  v1:= (`java.lang.String`) v1 @kind object;
  #L199b04.  call temp:= `equalsIgnoreCase`(v4, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L199b0a.  v1:= temp;
  #L199b0c.  if v1 == 0 then goto L199b26;
  #L199b10.  v1:= v3.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199b14.  v2:= v0 + 1;
  #L199b18.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L199b1e.  v1:= temp @kind object;
  #L199b20.  v1:= (`java.lang.String`) v1 @kind object;
  #L199b24.  return v1 @kind object;
  #L199b26.  v0:= v0 + -2;
  #L199b2a.  goto L199af0;
  #L199b2c.  v1:= 0I;
  #L199b2e.  goto L199b24;
}
procedure `okhttp3.Headers$Builder` `removeAll`(`okhttp3.Headers$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `name`) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L199b40.  v0:= 0I;
  #L199b42.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199b46.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L199b4c.  v1:= temp;
  #L199b4e.  if v0 >= v1 then goto L199b8c;
  #L199b52.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199b56.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L199b5c.  v1:= temp @kind object;
  #L199b5e.  v1:= (`java.lang.String`) v1 @kind object;
  #L199b62.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L199b68.  v1:= temp;
  #L199b6a.  if v1 == 0 then goto L199b86;
  #L199b6e.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199b72.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L199b78.  v1:= v2.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199b7c.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L199b82.  v0:= v0 + -2;
  #L199b86.  v0:= v0 + 2;
  #L199b8a.  goto L199b42;
  #L199b8c.  return v2 @kind object;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `name`, `java.lang.String` v2 @kind object @name `value`) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;

  #L199ba0.  call `checkNameAndValue`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.checkNameAndValue:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L199ba6.  call temp:= `removeAll`(v0, v1) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L199bac.  call temp:= `addLenient`(v0, v1, v2) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L199bb2.  return v0 @kind object;
}

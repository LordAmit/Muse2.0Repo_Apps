record `okhttp3.HttpUrl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedFragment` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedPassword` @AccessFlag ;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedPathSegments` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedUsername` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.host` @AccessFlag ;
  `int` `okhttp3.HttpUrl$Builder.port` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.scheme` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19a3b4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19a3ba.  v0:= "" @kind object;
  #L19a3be.  v2.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19a3c2.  v0:= "" @kind object;
  #L19a3c6.  v2.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L19a3ca.  v0:= -1I;
  #L19a3cc.  v2.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v0;
  #L19a3d0.  v0:= new `java.util.ArrayList`;
  #L19a3d4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19a3da.  v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` := v0 @kind object;
  #L19a3de.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a3e2.  v1:= "" @kind object;
  #L19a3e6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a3ec.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `pathSegments`, `boolean` v8 @name `alreadyEncoded`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a400.  v2:= 0I;
  #L19a402.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a408.  v0:= temp;
  #L19a40a.  v1:= "/\\" @kind object;
  #L19a40e.  call temp:= `delimiterOffset`(v7, v2, v0, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19a414.  v3:= temp;
  #L19a416.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a41c.  v0:= temp;
  #L19a41e.  if v3 >= v0 then goto L19a442;
  #L19a422.  v4:= 1I;
  #L19a424.  v0:= v6 @kind object;
  #L19a426.  v1:= v7 @kind object;
  #L19a428.  v5:= v8;
  #L19a42a.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19a430.  v2:= v3 + 1;
  #L19a434.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a43a.  v0:= temp;
  #L19a43c.  if v2 <= v0 then goto L19a402;
  #L19a440.  return v6 @kind object;
  #L19a442.  v4:= 0I;
  #L19a444.  goto L19a424;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L19a458.  v1:= 0I;
  #L19a45a.  call temp:= `percentDecode`(v2, v3, v4, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L19a460.  v0:= temp @kind object;
  #L19a462.  call temp:= `canonicalizeHost`(v0) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19a468.  v1:= temp @kind object;
  #L19a46a.  return v1 @kind object;
}
procedure `boolean` `isDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19a47c.  v0:= "." @kind object;
  #L19a480.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a486.  v0:= temp;
  #L19a488.  if v0 != 0 then goto L19a49c;
  #L19a48c.  v0:= "%2e" @kind object;
  #L19a490.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a496.  v0:= temp;
  #L19a498.  if v0 == 0 then goto L19a4a0;
  #L19a49c.  v0:= 1I;
  #L19a49e.  return v0;
  #L19a4a0.  v0:= 0I;
  #L19a4a2.  goto L19a49e;
}
procedure `boolean` `isDotDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19a4b4.  v0:= ".." @kind object;
  #L19a4b8.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a4be.  v0:= temp;
  #L19a4c0.  if v0 != 0 then goto L19a4f4;
  #L19a4c4.  v0:= "%2e." @kind object;
  #L19a4c8.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a4ce.  v0:= temp;
  #L19a4d0.  if v0 != 0 then goto L19a4f4;
  #L19a4d4.  v0:= ".%2e" @kind object;
  #L19a4d8.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a4de.  v0:= temp;
  #L19a4e0.  if v0 != 0 then goto L19a4f4;
  #L19a4e4.  v0:= "%2e%2e" @kind object;
  #L19a4e8.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a4ee.  v0:= temp;
  #L19a4f0.  if v0 == 0 then goto L19a4f8;
  #L19a4f4.  v0:= 1I;
  #L19a4f6.  return v0;
  #L19a4f8.  v0:= 0I;
  #L19a4fa.  goto L19a4f6;
}
procedure `int` `parsePort`(`java.lang.String` v13 @kind object @name `input`, `int` v14 @name `pos`, `int` v15 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L19a50c.  v12:= -1I;
  #Try_start0.  
  #L19a50e.  v3:= "" @kind object;
  #L19a512.  v4:= 0I;
  #L19a514.  v5:= 0I;
  #L19a516.  v6:= 0I;
  #L19a518.  v7:= 1I;
  #L19a51a.  v8:= 0I;
  #L19a51c.  v0:= v13 @kind object;
  #L19a51e.  v1:= v14;
  #L19a520.  v2:= v15;
  #L19a522.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a528.  v11:= temp @kind object;
  #L19a52a.  call temp:= `parseInt`(v11) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L19a530.  v10:= temp;
  #L19a532.  if v10 <= 0 then goto L19a542;
  #L19a536.  v0:= 65535I;
  #L19a53c.  if v10 > v0 then goto L19a542;
  #L19a540.  return v10;
  #L19a542.  v10:= v12;
  #L19a544.  goto L19a540;
  #L19a546.  v9:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L19a548.  v10:= v12;
  #L19a54a.  goto L19a540;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L19a546;
}
procedure `void` `pop`(`okhttp3.HttpUrl$Builder` v4 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19a56c.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a570.  v2:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a574.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a57a.  v2:= temp;
  #L19a57c.  v2:= v2 + -1;
  #L19a580.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19a586.  v0:= temp @kind object;
  #L19a588.  v0:= (`java.lang.String`) v0 @kind object;
  #L19a58c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19a592.  v1:= temp;
  #L19a594.  if v1 == 0 then goto L19a5c8;
  #L19a598.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a59c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19a5a2.  v1:= temp;
  #L19a5a4.  if v1 != 0 then goto L19a5c8;
  #L19a5a8.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a5ac.  v2:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a5b0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a5b6.  v2:= temp;
  #L19a5b8.  v2:= v2 + -1;
  #L19a5bc.  v3:= "" @kind object;
  #L19a5c0.  call temp:= `set`(v1, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a5c6.  return @kind void;
  #L19a5c8.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a5cc.  v2:= "" @kind object;
  #L19a5d0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a5d6.  goto L19a5c6;
}
procedure `int` `portColonOffset`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19a5e8.  v0:= v4;
  #L19a5ea.  if v0 >= v5 then goto L19a61c;
  #L19a5ee.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a5f4.  v1:= temp;
  #L19a5f6.  goto L19a620;
  #L19a5fc.  v0:= v0 + 1;
  #L19a600.  goto L19a5ea;
  #L19a602.  v0:= v0 + 1;
  #L19a606.  if v0 >= v5 then goto L19a5fc;
  #L19a60a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a610.  v1:= temp;
  #L19a612.  v2:= 93I;
  #L19a616.  if v1 != v2 then goto L19a602;
  #L19a61a.  goto L19a5fc;
  #L19a61c.  v0:= v5;
  #L19a61e.  return v0;
  #L19a620.  switch v1
                  | 58 => goto L19a61e
                  | 91 => goto L19a602
                  | else => goto L19a5fc;
}
procedure `void` `push`(`okhttp3.HttpUrl$Builder` v10 @kind this, `java.lang.String` v11 @kind object @name `input`, `int` v12 @name `pos`, `int` v13 @name `limit`, `boolean` v14 @name `addTrailingSlash`, `boolean` v15 @name `alreadyEncoded`) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19a644.  v5:= 0I;
  #L19a646.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L19a64a.  v7:= 1I;
  #L19a64c.  v8:= 0I;
  #L19a64e.  v0:= v11 @kind object;
  #L19a650.  v1:= v12;
  #L19a652.  v2:= v13;
  #L19a654.  v4:= v15;
  #L19a656.  v6:= v5;
  #L19a658.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a65e.  v9:= temp @kind object;
  #L19a660.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L19a666.  v0:= temp;
  #L19a668.  if v0 == 0 then goto L19a66e;
  #L19a66c.  return @kind void;
  #L19a66e.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L19a674.  v0:= temp;
  #L19a676.  if v0 == 0 then goto L19a682;
  #L19a67a.  call `pop`(v10) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @kind direct;
  #L19a680.  goto L19a66c;
  #L19a682.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a686.  v1:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a68a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a690.  v1:= temp;
  #L19a692.  v1:= v1 + -1;
  #L19a696.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a69c.  v0:= temp @kind object;
  #L19a69e.  v0:= (`java.lang.String`) v0 @kind object;
  #L19a6a2.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19a6a8.  v0:= temp;
  #L19a6aa.  if v0 == 0 then goto L19a6dc;
  #L19a6ae.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a6b2.  v1:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a6b6.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a6bc.  v1:= temp;
  #L19a6be.  v1:= v1 + -1;
  #L19a6c2.  call temp:= `set`(v0, v1, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a6c8.  if v14 == 0 then goto L19a66c;
  #L19a6cc.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a6d0.  v1:= "" @kind object;
  #L19a6d4.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a6da.  goto L19a66c;
  #L19a6dc.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a6e0.  call temp:= `add`(v0, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a6e6.  goto L19a6c8;
}
procedure `void` `removeAllCanonicalQueryParameters`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `canonicalName`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L19a6f8.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a6fc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a702.  v1:= temp;
  #L19a704.  v0:= v1 + -2;
  #L19a708.  if v0 < 0 then goto L19a752;
  #L19a70c.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a710.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a716.  v1:= temp @kind object;
  #L19a718.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a71e.  v1:= temp;
  #L19a720.  if v1 == 0 then goto L19a754;
  #L19a724.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a728.  v2:= v0 + 1;
  #L19a72c.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19a732.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a736.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19a73c.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a740.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19a746.  v1:= temp;
  #L19a748.  if v1 == 0 then goto L19a754;
  #L19a74c.  v1:= 0I;
  #L19a74e.  v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v1 @kind object;
  #L19a752.  return @kind void;
  #L19a754.  v0:= v0 + -2;
  #L19a758.  goto L19a708;
}
procedure `void` `resolvePath`(`okhttp3.HttpUrl$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `input`, `int` v10 @name `pos`, `int` v11 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19a76c.  v5:= 1I;
  #L19a76e.  if v10 != v11 then goto L19a774;
  #L19a772.  return @kind void;
  #L19a774.  call temp:= `charAt`(v9, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a77a.  v6:= temp;
  #L19a77c.  v0:= 47I;
  #L19a780.  if v6 == v0 then goto L19a78c;
  #L19a784.  v0:= 92I;
  #L19a788.  if v6 != v0 then goto L19a7d6;
  #L19a78c.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a790.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19a796.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a79a.  v1:= "" @kind object;
  #L19a79e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a7a4.  v10:= v10 + 1;
  #L19a7a8.  v2:= v10;
  #L19a7aa.  if v2 >= v11 then goto L19a772;
  #L19a7ae.  v0:= "/\\" @kind object;
  #L19a7b2.  call temp:= `delimiterOffset`(v9, v2, v11, v0) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19a7b8.  v3:= temp;
  #L19a7ba.  if v3 >= v11 then goto L19a7f6;
  #L19a7be.  v4:= v5;
  #L19a7c0.  v0:= v8 @kind object;
  #L19a7c2.  v1:= v9 @kind object;
  #L19a7c4.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19a7ca.  v2:= v3;
  #L19a7cc.  if v4 == 0 then goto L19a7aa;
  #L19a7d0.  v2:= v2 + 1;
  #L19a7d4.  goto L19a7aa;
  #L19a7d6.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a7da.  v1:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a7de.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a7e4.  v1:= temp;
  #L19a7e6.  v1:= v1 + -1;
  #L19a7ea.  v7:= "" @kind object;
  #L19a7ee.  call temp:= `set`(v0, v1, v7) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a7f4.  goto L19a7a8;
  #L19a7f6.  v4:= 0I;
  #L19a7f8.  goto L19a7c0;
}
procedure `int` `schemeDelimiterOffset`(`java.lang.String` v10 @kind object @name `input`, `int` v11 @name `pos`, `int` v12 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19a80c.  v9:= 122I;
  #L19a810.  v8:= 97I;
  #L19a814.  v7:= 90I;
  #L19a818.  v6:= 65I;
  #L19a81c.  v3:= -1I;
  #L19a81e.  v4:= v12 - v11 @kind int;
  #L19a822.  v5:= 2I;
  #L19a824.  if v4 >= v5 then goto L19a82c;
  #L19a828.  v2:= v3;
  #L19a82a.  return v2;
  #L19a82c.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a832.  v1:= temp;
  #L19a834.  if v1 < v8 then goto L19a83c;
  #L19a838.  if v1 <= v9 then goto L19a848;
  #L19a83c.  if v1 < v6 then goto L19a844;
  #L19a840.  if v1 <= v7 then goto L19a848;
  #L19a844.  v2:= v3;
  #L19a846.  goto L19a82a;
  #L19a848.  v2:= v11 + 1;
  #L19a84c.  if v2 >= v12 then goto L19a8a2;
  #L19a850.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a856.  v0:= temp;
  #L19a858.  if v0 < v8 then goto L19a860;
  #L19a85c.  if v0 <= v9 then goto L19a890;
  #L19a860.  if v0 < v6 then goto L19a868;
  #L19a864.  if v0 <= v7 then goto L19a890;
  #L19a868.  v4:= 48I;
  #L19a86c.  if v0 < v4 then goto L19a878;
  #L19a870.  v4:= 57I;
  #L19a874.  if v0 <= v4 then goto L19a890;
  #L19a878.  v4:= 43I;
  #L19a87c.  if v0 == v4 then goto L19a890;
  #L19a880.  v4:= 45I;
  #L19a884.  if v0 == v4 then goto L19a890;
  #L19a888.  v4:= 46I;
  #L19a88c.  if v0 != v4 then goto L19a896;
  #L19a890.  v2:= v2 + 1;
  #L19a894.  goto L19a84c;
  #L19a896.  v4:= 58I;
  #L19a89a.  if v0 == v4 then goto L19a82a;
  #L19a89e.  v2:= v3;
  #L19a8a0.  goto L19a82a;
  #L19a8a2.  v2:= v3;
  #L19a8a4.  goto L19a82a;
}
procedure `int` `slashCount`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19a8b8.  v1:= 0I;
  #L19a8ba.  if v4 >= v5 then goto L19a8e0;
  #L19a8be.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a8c4.  v0:= temp;
  #L19a8c6.  v2:= 92I;
  #L19a8ca.  if v0 == v2 then goto L19a8d6;
  #L19a8ce.  v2:= 47I;
  #L19a8d2.  if v0 != v2 then goto L19a8e0;
  #L19a8d6.  v1:= v1 + 1;
  #L19a8da.  v4:= v4 + 1;
  #L19a8de.  goto L19a8ba;
  #L19a8e0.  return v1;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedPathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a8f4.  v2:= 0I;
  #L19a8f6.  if v7 != 0 then goto L19a90a;
  #L19a8fa.  v0:= new `java.lang.NullPointerException`;
  #L19a8fe.  v1:= "encodedPathSegment == null" @kind object;
  #L19a902.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a908.  throw v0;
  #L19a90a.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a910.  v3:= temp;
  #L19a912.  v5:= 1I;
  #L19a914.  v0:= v6 @kind object;
  #L19a916.  v1:= v7 @kind object;
  #L19a918.  v4:= v2;
  #L19a91a.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19a920.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegments`(`okhttp3.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `encodedPathSegments`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19a934.  if v3 != 0 then goto L19a948;
  #L19a938.  v0:= new `java.lang.NullPointerException`;
  #L19a93c.  v1:= "encodedPathSegments == null" @kind object;
  #L19a940.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a946.  throw v0;
  #L19a948.  v0:= 1I;
  #L19a94a.  call temp:= `addPathSegments`(v2, v3, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L19a950.  v0:= temp @kind object;
  #L19a952.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `encodedName`, `java.lang.String` v9 @kind object @name `encodedValue`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19a964.  v3:= 0I;
  #L19a966.  v2:= 1I;
  #L19a968.  if v8 != 0 then goto L19a97c;
  #L19a96c.  v0:= new `java.lang.NullPointerException`;
  #L19a970.  v1:= "encodedName == null" @kind object;
  #L19a974.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a97a.  throw v0;
  #L19a97c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a980.  if v0 != 0 then goto L19a992;
  #L19a984.  v0:= new `java.util.ArrayList`;
  #L19a988.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19a98e.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19a992.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a996.  v1:= " \"'<>#&=" @kind object;
  #L19a99a.  v0:= v8 @kind object;
  #L19a99c.  v4:= v2;
  #L19a99e.  v5:= v2;
  #L19a9a0.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a9a6.  v0:= temp @kind object;
  #L19a9a8.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a9ae.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a9b2.  if v9 == 0 then goto L19a9d0;
  #L19a9b6.  v1:= " \"'<>#&=" @kind object;
  #L19a9ba.  v0:= v9 @kind object;
  #L19a9bc.  v4:= v2;
  #L19a9be.  v5:= v2;
  #L19a9c0.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a9c6.  v0:= temp @kind object;
  #L19a9c8.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a9ce.  return v7 @kind object;
  #L19a9d0.  v0:= 0I;
  #L19a9d2.  goto L19a9c8;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `pathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a9e4.  v2:= 0I;
  #L19a9e6.  if v7 != 0 then goto L19a9fa;
  #L19a9ea.  v0:= new `java.lang.NullPointerException`;
  #L19a9ee.  v1:= "pathSegment == null" @kind object;
  #L19a9f2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a9f8.  throw v0;
  #L19a9fa.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19aa00.  v3:= temp;
  #L19aa02.  v0:= v6 @kind object;
  #L19aa04.  v1:= v7 @kind object;
  #L19aa06.  v4:= v2;
  #L19aa08.  v5:= v2;
  #L19aa0a.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19aa10.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `pathSegments`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19aa24.  if v3 != 0 then goto L19aa38;
  #L19aa28.  v0:= new `java.lang.NullPointerException`;
  #L19aa2c.  v1:= "pathSegments == null" @kind object;
  #L19aa30.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19aa36.  throw v0;
  #L19aa38.  v0:= 0I;
  #L19aa3a.  call temp:= `addPathSegments`(v2, v3, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L19aa40.  v0:= temp @kind object;
  #L19aa42.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `name`, `java.lang.String` v9 @kind object @name `value`) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19aa54.  v4:= 1I;
  #L19aa56.  v2:= 0I;
  #L19aa58.  if v8 != 0 then goto L19aa6c;
  #L19aa5c.  v0:= new `java.lang.NullPointerException`;
  #L19aa60.  v1:= "name == null" @kind object;
  #L19aa64.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19aa6a.  throw v0;
  #L19aa6c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19aa70.  if v0 != 0 then goto L19aa82;
  #L19aa74.  v0:= new `java.util.ArrayList`;
  #L19aa78.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19aa7e.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19aa82.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19aa86.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19aa8a.  v0:= v8 @kind object;
  #L19aa8c.  v3:= v2;
  #L19aa8e.  v5:= v4;
  #L19aa90.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19aa96.  v0:= temp @kind object;
  #L19aa98.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19aa9e.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19aaa2.  if v9 == 0 then goto L19aac0;
  #L19aaa6.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19aaaa.  v0:= v9 @kind object;
  #L19aaac.  v3:= v2;
  #L19aaae.  v5:= v4;
  #L19aab0.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19aab6.  v0:= temp @kind object;
  #L19aab8.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19aabe.  return v7 @kind object;
  #L19aac0.  v0:= 0I;
  #L19aac2.  goto L19aab8;
}
procedure `okhttp3.HttpUrl` `build`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19aad4.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19aad8.  if v0 != 0 then goto L19aaec;
  #L19aadc.  v0:= new `java.lang.IllegalStateException`;
  #L19aae0.  v1:= "scheme == null" @kind object;
  #L19aae4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19aaea.  throw v0;
  #L19aaec.  v0:= v2.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19aaf0.  if v0 != 0 then goto L19ab04;
  #L19aaf4.  v0:= new `java.lang.IllegalStateException`;
  #L19aaf8.  v1:= "host == null" @kind object;
  #L19aafc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ab02.  throw v0;
  #L19ab04.  v0:= new `okhttp3.HttpUrl`;
  #L19ab08.  call `<init>`(v0, v2) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @kind direct;
  #L19ab0e.  return v0 @kind object;
}
procedure `int` `effectivePort`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L19ab20.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L19ab24.  v1:= -1I;
  #L19ab26.  if v0 == v1 then goto L19ab30;
  #L19ab2a.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L19ab2e.  return v0;
  #L19ab30.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19ab34.  call temp:= `defaultPort`(v0) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19ab3a.  v0:= temp;
  #L19ab3c.  goto L19ab2e;
}
procedure `okhttp3.HttpUrl$Builder` `encodedFragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedFragment`) @signature `Lokhttp3/HttpUrl$Builder;.encodedFragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ab50.  v3:= 0I;
  #L19ab52.  if v7 == 0 then goto L19ab70;
  #L19ab56.  v1:= "" @kind object;
  #L19ab5a.  v2:= 1I;
  #L19ab5c.  v0:= v7 @kind object;
  #L19ab5e.  v4:= v3;
  #L19ab60.  v5:= v3;
  #L19ab62.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19ab68.  v0:= temp @kind object;
  #L19ab6a.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L19ab6e.  return v6 @kind object;
  #L19ab70.  v0:= 0I;
  #L19ab72.  goto L19ab6a;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPassword`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedPassword`) @signature `Lokhttp3/HttpUrl$Builder;.encodedPassword:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ab84.  v2:= 1I;
  #L19ab86.  v3:= 0I;
  #L19ab88.  if v7 != 0 then goto L19ab9c;
  #L19ab8c.  v0:= new `java.lang.NullPointerException`;
  #L19ab90.  v1:= "encodedPassword == null" @kind object;
  #L19ab94.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ab9a.  throw v0;
  #L19ab9c.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19aba0.  v0:= v7 @kind object;
  #L19aba2.  v4:= v3;
  #L19aba4.  v5:= v2;
  #L19aba6.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19abac.  v0:= temp @kind object;
  #L19abae.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L19abb2.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPath`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `encodedPath`) @signature `Lokhttp3/HttpUrl$Builder;.encodedPath:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19abc4.  if v4 != 0 then goto L19abd8;
  #L19abc8.  v0:= new `java.lang.NullPointerException`;
  #L19abcc.  v1:= "encodedPath == null" @kind object;
  #L19abd0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19abd6.  throw v0;
  #L19abd8.  v0:= "/" @kind object;
  #L19abdc.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19abe2.  v0:= temp;
  #L19abe4.  if v0 != 0 then goto L19ac1a;
  #L19abe8.  v0:= new `java.lang.IllegalArgumentException`;
  #L19abec.  v1:= new `java.lang.StringBuilder`;
  #L19abf0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19abf6.  v2:= "unexpected encodedPath: " @kind object;
  #L19abfa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ac00.  v1:= temp @kind object;
  #L19ac02.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ac08.  v1:= temp @kind object;
  #L19ac0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ac10.  v1:= temp @kind object;
  #L19ac12.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ac18.  throw v0;
  #L19ac1a.  v0:= 0I;
  #L19ac1c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ac22.  v1:= temp;
  #L19ac24.  call `resolvePath`(v3, v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L19ac2a.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedQuery`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedQuery`) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ac3c.  v2:= 1I;
  #L19ac3e.  if v7 == 0 then goto L19ac64;
  #L19ac42.  v1:= " \"'<>#" @kind object;
  #L19ac46.  v3:= 0I;
  #L19ac48.  v0:= v7 @kind object;
  #L19ac4a.  v4:= v2;
  #L19ac4c.  v5:= v2;
  #L19ac4e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19ac54.  v0:= temp @kind object;
  #L19ac56.  call temp:= `queryStringToNamesAndValues`(v0) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19ac5c.  v0:= temp @kind object;
  #L19ac5e.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19ac62.  return v6 @kind object;
  #L19ac64.  v0:= 0I;
  #L19ac66.  goto L19ac5e;
}
procedure `okhttp3.HttpUrl$Builder` `encodedUsername`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedUsername`) @signature `Lokhttp3/HttpUrl$Builder;.encodedUsername:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ac78.  v2:= 1I;
  #L19ac7a.  v3:= 0I;
  #L19ac7c.  if v7 != 0 then goto L19ac90;
  #L19ac80.  v0:= new `java.lang.NullPointerException`;
  #L19ac84.  v1:= "encodedUsername == null" @kind object;
  #L19ac88.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ac8e.  throw v0;
  #L19ac90.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19ac94.  v0:= v7 @kind object;
  #L19ac96.  v4:= v3;
  #L19ac98.  v5:= v2;
  #L19ac9a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19aca0.  v0:= temp @kind object;
  #L19aca2.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19aca6.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `fragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `fragment`) @signature `Lokhttp3/HttpUrl$Builder;.fragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19acb8.  v2:= 0I;
  #L19acba.  if v7 == 0 then goto L19acd8;
  #L19acbe.  v1:= "" @kind object;
  #L19acc2.  v0:= v7 @kind object;
  #L19acc4.  v3:= v2;
  #L19acc6.  v4:= v2;
  #L19acc8.  v5:= v2;
  #L19acca.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19acd0.  v0:= temp @kind object;
  #L19acd2.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L19acd6.  return v6 @kind object;
  #L19acd8.  v0:= 0I;
  #L19acda.  goto L19acd2;
}
procedure `okhttp3.HttpUrl$Builder` `host`(`okhttp3.HttpUrl$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `host`) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19acec.  if v5 != 0 then goto L19ad00;
  #L19acf0.  v1:= new `java.lang.NullPointerException`;
  #L19acf4.  v2:= "host == null" @kind object;
  #L19acf8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19acfe.  throw v1;
  #L19ad00.  v1:= 0I;
  #L19ad02.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ad08.  v2:= temp;
  #L19ad0a.  call temp:= `canonicalizeHost`(v5, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L19ad10.  v0:= temp @kind object;
  #L19ad12.  if v0 != 0 then goto L19ad48;
  #L19ad16.  v1:= new `java.lang.IllegalArgumentException`;
  #L19ad1a.  v2:= new `java.lang.StringBuilder`;
  #L19ad1e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ad24.  v3:= "unexpected host: " @kind object;
  #L19ad28.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ad2e.  v2:= temp @kind object;
  #L19ad30.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ad36.  v2:= temp @kind object;
  #L19ad38.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ad3e.  v2:= temp @kind object;
  #L19ad40.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ad46.  throw v1;
  #L19ad48.  v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v0 @kind object;
  #L19ad4c.  return v4 @kind object;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `parse`(`okhttp3.HttpUrl$Builder` v29 @kind this, `okhttp3.HttpUrl` v30 @kind object @name `base`, `java.lang.String` v31 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;

  #L19ad60.  v3:= 0I;
  #L19ad62.  call temp:= `length`(v31) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ad68.  v4:= temp;
  #L19ad6a.  v0:= v31 @kind object;
  #L19ad6e.  call temp:= `skipLeadingAsciiWhitespace`(v0, v3, v4) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19ad74.  v5:= temp;
  #L19ad76.  call temp:= `length`(v31) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ad7c.  v3:= temp;
  #L19ad7e.  v0:= v31 @kind object;
  #L19ad82.  call temp:= `skipTrailingAsciiWhitespace`(v0, v5, v3) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19ad88.  v24:= temp;
  #L19ad8a.  v0:= v31 @kind object;
  #L19ad8e.  v1:= v24;
  #L19ad92.  call temp:= `schemeDelimiterOffset`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @kind static;
  #L19ad98.  v27:= temp;
  #L19ad9a.  v3:= -1I;
  #L19ad9c.  v0:= v27;
  #L19ada0.  if v0 == v3 then goto L19aef8;
  #L19ada4.  v4:= 1I;
  #L19ada6.  v6:= "https:" @kind object;
  #L19adaa.  v7:= 0I;
  #L19adac.  v8:= 6I;
  #L19adae.  v3:= v31 @kind object;
  #L19adb2.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19adb8.  v3:= temp;
  #L19adba.  if v3 == 0 then goto L19aeba;
  #L19adbe.  v3:= "https" @kind object;
  #L19adc2.  v0:= v29 @kind object;
  #L19adc6.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L19adca.  v3:= "https:" @kind object;
  #L19adce.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19add4.  v3:= temp;
  #L19add6.  v5:= v5 + v3 @kind int;
  #L19add8.  v23:= 0I;
  #L19addc.  v22:= 0I;
  #L19ade0.  v0:= v31 @kind object;
  #L19ade4.  v1:= v24;
  #L19ade8.  call temp:= `slashCount`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @kind static;
  #L19adee.  v28:= temp;
  #L19adf0.  v3:= 2I;
  #L19adf2.  v0:= v28;
  #L19adf6.  if v0 >= v3 then goto L19ae1a;
  #L19adfa.  if v30 == 0 then goto L19ae1a;
  #L19adfe.  v0:= v30 @kind object;
  #L19ae02.  v3:= v0.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19ae06.  v0:= v29 @kind object;
  #L19ae0a.  v4:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19ae0e.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ae14.  v3:= temp;
  #L19ae16.  if v3 != 0 then goto L19b160;
  #L19ae1a.  v5:= v5 + v28 @kind int;
  #L19ae1e.  v3:= "@/\\?#" @kind object;
  #L19ae22.  v0:= v31 @kind object;
  #L19ae26.  v1:= v24;
  #L19ae2a.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19ae30.  v21:= temp;
  #L19ae32.  v0:= v21;
  #L19ae36.  v1:= v24;
  #L19ae3a.  if v0 == v1 then goto L19af16;
  #L19ae3e.  v0:= v31 @kind object;
  #L19ae42.  v1:= v21;
  #L19ae46.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ae4c.  v19:= temp;
  #L19ae4e.  goto L19b1f8;
  #L19ae54.  goto L19ae1e;
  #L19ae56.  v0:= v31 @kind object;
  #L19ae5a.  v1:= v21;
  #L19ae5e.  call temp:= `portColonOffset`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @kind static;
  #L19ae64.  v26:= temp;
  #L19ae66.  v3:= v26 + 1;
  #L19ae6a.  v0:= v21;
  #L19ae6e.  if v3 >= v0 then goto L19b03a;
  #L19ae72.  v0:= v31 @kind object;
  #L19ae76.  v1:= v26;
  #L19ae7a.  call temp:= `canonicalizeHost`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L19ae80.  v3:= temp @kind object;
  #L19ae82.  v0:= v29 @kind object;
  #L19ae86.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L19ae8a.  v3:= v26 + 1;
  #L19ae8e.  v0:= v31 @kind object;
  #L19ae92.  v1:= v21;
  #L19ae96.  call temp:= `parsePort`(v0, v3, v1) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @kind static;
  #L19ae9c.  v3:= temp;
  #L19ae9e.  v0:= v29 @kind object;
  #L19aea2.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L19aea6.  v0:= v29 @kind object;
  #L19aeaa.  v3:= v0.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L19aeae.  v4:= -1I;
  #L19aeb0.  if v3 != v4 then goto L19b06a;
  #L19aeb4.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19aeb8.  return v3 @kind object;
  #L19aeba.  v4:= 1I;
  #L19aebc.  v6:= "http:" @kind object;
  #L19aec0.  v7:= 0I;
  #L19aec2.  v8:= 5I;
  #L19aec4.  v3:= v31 @kind object;
  #L19aec8.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19aece.  v3:= temp;
  #L19aed0.  if v3 == 0 then goto L19aef2;
  #L19aed4.  v3:= "http" @kind object;
  #L19aed8.  v0:= v29 @kind object;
  #L19aedc.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L19aee0.  v3:= "http:" @kind object;
  #L19aee4.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19aeea.  v3:= temp;
  #L19aeec.  v5:= v5 + v3 @kind int;
  #L19aeee.  goto L19add8;
  #L19aef2.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19aef6.  goto L19aeb8;
  #L19aef8.  if v30 == 0 then goto L19af10;
  #L19aefc.  v0:= v30 @kind object;
  #L19af00.  v3:= v0.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19af04.  v0:= v29 @kind object;
  #L19af08.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L19af0c.  goto L19add8;
  #L19af10.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19af14.  goto L19aeb8;
  #L19af16.  v19:= -1I;
  #L19af1a.  goto L19ae4e;
  #L19af1c.  if v22 != 0 then goto L19afda;
  #L19af20.  v3:= 58I;
  #L19af24.  v0:= v31 @kind object;
  #L19af28.  v1:= v21;
  #L19af2c.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19af32.  v6:= temp;
  #L19af34.  v7:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19af38.  v8:= 1I;
  #L19af3a.  v9:= 0I;
  #L19af3c.  v10:= 0I;
  #L19af3e.  v11:= 1I;
  #L19af40.  v12:= 0I;
  #L19af42.  v4:= v31 @kind object;
  #L19af46.  call temp:= `canonicalize`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19af4c.  v20:= temp @kind object;
  #L19af4e.  if v23 == 0 then goto L19af8c;
  #L19af52.  v3:= new `java.lang.StringBuilder`;
  #L19af56.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19af5c.  v0:= v29 @kind object;
  #L19af60.  v4:= v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19af64.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19af6a.  v3:= temp @kind object;
  #L19af6c.  v4:= "%40" @kind object;
  #L19af70.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19af76.  v3:= temp @kind object;
  #L19af78.  v0:= v20 @kind object;
  #L19af7c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19af82.  v3:= temp @kind object;
  #L19af84.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19af8a.  v20:= temp @kind object;
  #L19af8c.  v0:= v20 @kind object;
  #L19af90.  v1:= v29 @kind object;
  #L19af94.  v1.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19af98.  v0:= v21;
  #L19af9c.  if v6 == v0 then goto L19afce;
  #L19afa0.  v22:= 1I;
  #L19afa4.  v8:= v6 + 1;
  #L19afa8.  v10:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19afac.  v11:= 1I;
  #L19afae.  v12:= 0I;
  #L19afb0.  v13:= 0I;
  #L19afb2.  v14:= 1I;
  #L19afb4.  v15:= 0I;
  #L19afb6.  v7:= v31 @kind object;
  #L19afba.  v9:= v21;
  #L19afbe.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19afc4.  v3:= temp @kind object;
  #L19afc6.  v0:= v29 @kind object;
  #L19afca.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L19afce.  v23:= 1I;
  #L19afd2.  v5:= v21 + 1;
  #L19afd6.  goto L19ae1e;
  #L19afda.  v3:= new `java.lang.StringBuilder`;
  #L19afde.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19afe4.  v0:= v29 @kind object;
  #L19afe8.  v4:= v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19afec.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aff2.  v3:= temp @kind object;
  #L19aff4.  v4:= "%40" @kind object;
  #L19aff8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19affe.  v3:= temp @kind object;
  #L19b000.  v10:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19b004.  v11:= 1I;
  #L19b006.  v12:= 0I;
  #L19b008.  v13:= 0I;
  #L19b00a.  v14:= 1I;
  #L19b00c.  v15:= 0I;
  #L19b00e.  v7:= v31 @kind object;
  #L19b012.  v8:= v5;
  #L19b014.  v9:= v21;
  #L19b018.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b01e.  v4:= temp @kind object;
  #L19b020.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b026.  v3:= temp @kind object;
  #L19b028.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b02e.  v3:= temp @kind object;
  #L19b030.  v0:= v29 @kind object;
  #L19b034.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L19b038.  goto L19afd2;
  #L19b03a.  v0:= v31 @kind object;
  #L19b03e.  v1:= v26;
  #L19b042.  call temp:= `canonicalizeHost`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L19b048.  v3:= temp @kind object;
  #L19b04a.  v0:= v29 @kind object;
  #L19b04e.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L19b052.  v0:= v29 @kind object;
  #L19b056.  v3:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19b05a.  call temp:= `defaultPort`(v3) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19b060.  v3:= temp;
  #L19b062.  v0:= v29 @kind object;
  #L19b066.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L19b06a.  v0:= v29 @kind object;
  #L19b06e.  v3:= v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b072.  if v3 != 0 then goto L19b07e;
  #L19b076.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19b07a.  goto L19aeb8;
  #L19b07e.  v5:= v21;
  #L19b082.  v3:= "?#" @kind object;
  #L19b086.  v0:= v31 @kind object;
  #L19b08a.  v1:= v24;
  #L19b08e.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19b094.  v25:= temp;
  #L19b096.  v0:= v29 @kind object;
  #L19b09a.  v1:= v31 @kind object;
  #L19b09e.  v2:= v25;
  #L19b0a2.  call `resolvePath`(v0, v1, v5, v2) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L19b0a8.  v5:= v25;
  #L19b0ac.  v0:= v24;
  #L19b0b0.  if v5 >= v0 then goto L19b10c;
  #L19b0b4.  v0:= v31 @kind object;
  #L19b0b8.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19b0be.  v3:= temp;
  #L19b0c0.  v4:= 63I;
  #L19b0c4.  if v3 != v4 then goto L19b10c;
  #L19b0c8.  v3:= 35I;
  #L19b0cc.  v0:= v31 @kind object;
  #L19b0d0.  v1:= v24;
  #L19b0d4.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19b0da.  v9:= temp;
  #L19b0dc.  v8:= v5 + 1;
  #L19b0e0.  v10:= " \"'<>#" @kind object;
  #L19b0e4.  v11:= 1I;
  #L19b0e6.  v12:= 0I;
  #L19b0e8.  v13:= 1I;
  #L19b0ea.  v14:= 1I;
  #L19b0ec.  v15:= 0I;
  #L19b0ee.  v7:= v31 @kind object;
  #L19b0f2.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b0f8.  v3:= temp @kind object;
  #L19b0fa.  call temp:= `queryStringToNamesAndValues`(v3) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19b100.  v3:= temp @kind object;
  #L19b102.  v0:= v29 @kind object;
  #L19b106.  v0.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v3 @kind object;
  #L19b10a.  v5:= v9;
  #L19b10c.  v0:= v24;
  #L19b110.  if v5 >= v0 then goto L19b158;
  #L19b114.  v0:= v31 @kind object;
  #L19b118.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19b11e.  v3:= temp;
  #L19b120.  v4:= 35I;
  #L19b124.  if v3 != v4 then goto L19b158;
  #L19b128.  v11:= v5 + 1;
  #L19b12c.  v13:= "" @kind object;
  #L19b130.  v14:= 1I;
  #L19b132.  v15:= 0I;
  #L19b134.  v16:= 0I;
  #L19b138.  v17:= 0I;
  #L19b13c.  v18:= 0I;
  #L19b140.  v10:= v31 @kind object;
  #L19b144.  v12:= v24;
  #L19b148.  call temp:= `canonicalize`(v10, v11, v12, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b14e.  v3:= temp @kind object;
  #L19b150.  v0:= v29 @kind object;
  #L19b154.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v3 @kind object;
  #L19b158.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19b15c.  goto L19aeb8;
  #L19b160.  call temp:= `encodedUsername`(v30) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19b166.  v3:= temp @kind object;
  #L19b168.  v0:= v29 @kind object;
  #L19b16c.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v3 @kind object;
  #L19b170.  call temp:= `encodedPassword`(v30) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19b176.  v3:= temp @kind object;
  #L19b178.  v0:= v29 @kind object;
  #L19b17c.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L19b180.  v0:= v30 @kind object;
  #L19b184.  v3:= v0.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19b188.  v0:= v29 @kind object;
  #L19b18c.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L19b190.  v0:= v30 @kind object;
  #L19b194.  v3:= v0.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19b198.  v0:= v29 @kind object;
  #L19b19c.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L19b1a0.  v0:= v29 @kind object;
  #L19b1a4.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b1a8.  call `clear`(v3) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19b1ae.  v0:= v29 @kind object;
  #L19b1b2.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b1b6.  call temp:= `encodedPathSegments`(v30) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L19b1bc.  v4:= temp @kind object;
  #L19b1be.  call temp:= `addAll`(v3, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19b1c4.  v0:= v24;
  #L19b1c8.  if v5 == v0 then goto L19b1e0;
  #L19b1cc.  v0:= v31 @kind object;
  #L19b1d0.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19b1d6.  v3:= temp;
  #L19b1d8.  v4:= 35I;
  #L19b1dc.  if v3 != v4 then goto L19b082;
  #L19b1e0.  call temp:= `encodedQuery`(v30) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L19b1e6.  v3:= temp @kind object;
  #L19b1e8.  v0:= v29 @kind object;
  #L19b1ec.  call temp:= `encodedQuery`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b1f2.  goto L19b082;
  #L19b1f6.  
  #L19b1f8.  switch v19
                  | -1 => goto L19ae56
                  | 35 => goto L19ae56
                  | 47 => goto L19ae56
                  | 63 => goto L19ae56
                  | 64 => goto L19af1c
                  | 92 => goto L19ae56
                  | else => goto L19ae54;
}
procedure `okhttp3.HttpUrl$Builder` `password`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `password`) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b23c.  v2:= 0I;
  #L19b23e.  if v7 != 0 then goto L19b252;
  #L19b242.  v0:= new `java.lang.NullPointerException`;
  #L19b246.  v1:= "password == null" @kind object;
  #L19b24a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b250.  throw v0;
  #L19b252.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19b256.  v5:= 1I;
  #L19b258.  v0:= v7 @kind object;
  #L19b25a.  v3:= v2;
  #L19b25c.  v4:= v2;
  #L19b25e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b264.  v0:= temp @kind object;
  #L19b266.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L19b26a.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `port`(`okhttp3.HttpUrl$Builder` v3 @kind this, `int` v4 @name `port`) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19b27c.  if v4 <= 0 then goto L19b28a;
  #L19b280.  v0:= 65535I;
  #L19b286.  if v4 <= v0 then goto L19b2bc;
  #L19b28a.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b28e.  v1:= new `java.lang.StringBuilder`;
  #L19b292.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b298.  v2:= "unexpected port: " @kind object;
  #L19b29c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b2a2.  v1:= temp @kind object;
  #L19b2a4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b2aa.  v1:= temp @kind object;
  #L19b2ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b2b2.  v1:= temp @kind object;
  #L19b2b4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b2ba.  throw v0;
  #L19b2bc.  v3.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v4;
  #L19b2c0.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `query`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `query`) @signature `Lokhttp3/HttpUrl$Builder;.query:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b2d4.  v4:= 1I;
  #L19b2d6.  v2:= 0I;
  #L19b2d8.  if v7 == 0 then goto L19b2fc;
  #L19b2dc.  v1:= " \"'<>#" @kind object;
  #L19b2e0.  v0:= v7 @kind object;
  #L19b2e2.  v3:= v2;
  #L19b2e4.  v5:= v4;
  #L19b2e6.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b2ec.  v0:= temp @kind object;
  #L19b2ee.  call temp:= `queryStringToNamesAndValues`(v0) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19b2f4.  v0:= temp @kind object;
  #L19b2f6.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19b2fa.  return v6 @kind object;
  #L19b2fc.  v0:= 0I;
  #L19b2fe.  goto L19b2f6;
}
procedure `okhttp3.HttpUrl$Builder` `reencodeForUri`(`okhttp3.HttpUrl$Builder` v14 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L19b310.  v4:= 0I;
  #L19b312.  v2:= 1I;
  #L19b314.  v12:= 0I;
  #L19b316.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b31a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b320.  v13:= temp;
  #L19b322.  if v12 >= v13 then goto L19b356;
  #L19b326.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b32a.  call temp:= `get`(v1, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b330.  v0:= temp @kind object;
  #L19b332.  v0:= (`java.lang.String`) v0 @kind object;
  #L19b336.  v6:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b33a.  v1:= "[]" @kind object;
  #L19b33e.  v3:= v2;
  #L19b340.  v5:= v2;
  #L19b342.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b348.  v1:= temp @kind object;
  #L19b34a.  call temp:= `set`(v6, v12, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19b350.  v12:= v12 + 1;
  #L19b354.  goto L19b322;
  #L19b356.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b35a.  if v1 == 0 then goto L19b3a8;
  #L19b35e.  v12:= 0I;
  #L19b360.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b364.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b36a.  v13:= temp;
  #L19b36c.  if v12 >= v13 then goto L19b3a8;
  #L19b370.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b374.  call temp:= `get`(v1, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b37a.  v5:= temp @kind object;
  #L19b37c.  v5:= (`java.lang.String`) v5 @kind object;
  #L19b380.  if v5 == 0 then goto L19b3a2;
  #L19b384.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b388.  v6:= "\\^`{|}" @kind object;
  #L19b38c.  v7:= v2;
  #L19b38e.  v8:= v2;
  #L19b390.  v9:= v2;
  #L19b392.  v10:= v2;
  #L19b394.  call temp:= `canonicalize`(v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b39a.  v3:= temp @kind object;
  #L19b39c.  call temp:= `set`(v1, v12, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19b3a2.  v12:= v12 + 1;
  #L19b3a6.  goto L19b36c;
  #L19b3a8.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b3ac.  if v1 == 0 then goto L19b3cc;
  #L19b3b0.  v6:= v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b3b4.  v7:= " \"#<>\\^`{|}" @kind object;
  #L19b3b8.  v8:= v2;
  #L19b3ba.  v9:= v2;
  #L19b3bc.  v10:= v4;
  #L19b3be.  v11:= v4;
  #L19b3c0.  call temp:= `canonicalize`(v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b3c6.  v1:= temp @kind object;
  #L19b3c8.  v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L19b3cc.  return v14 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllEncodedQueryParameters`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedName`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b3e0.  v2:= 1I;
  #L19b3e2.  if v7 != 0 then goto L19b3f6;
  #L19b3e6.  v0:= new `java.lang.NullPointerException`;
  #L19b3ea.  v1:= "encodedName == null" @kind object;
  #L19b3ee.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b3f4.  throw v0;
  #L19b3f6.  v0:= v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b3fa.  if v0 != 0 then goto L19b400;
  #L19b3fe.  return v6 @kind object;
  #L19b400.  v1:= " \"'<>#&=" @kind object;
  #L19b404.  v3:= 0I;
  #L19b406.  v0:= v7 @kind object;
  #L19b408.  v4:= v2;
  #L19b40a.  v5:= v2;
  #L19b40c.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b412.  v0:= temp @kind object;
  #L19b414.  call `removeAllCanonicalQueryParameters`(v6, v0) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L19b41a.  goto L19b3fe;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `name`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19b42c.  v4:= 1I;
  #L19b42e.  v2:= 0I;
  #L19b430.  if v8 != 0 then goto L19b444;
  #L19b434.  v0:= new `java.lang.NullPointerException`;
  #L19b438.  v1:= "name == null" @kind object;
  #L19b43c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b442.  throw v0;
  #L19b444.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b448.  if v0 != 0 then goto L19b44e;
  #L19b44c.  return v7 @kind object;
  #L19b44e.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19b452.  v0:= v8 @kind object;
  #L19b454.  v3:= v2;
  #L19b456.  v5:= v4;
  #L19b458.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b45e.  v6:= temp @kind object;
  #L19b460.  call `removeAllCanonicalQueryParameters`(v7, v6) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L19b466.  goto L19b44c;
}
procedure `okhttp3.HttpUrl$Builder` `removePathSegment`(`okhttp3.HttpUrl$Builder` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl$Builder;.removePathSegment:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b478.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b47c.  call temp:= `remove`(v0, v3) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19b482.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b486.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19b48c.  v0:= temp;
  #L19b48e.  if v0 == 0 then goto L19b4a0;
  #L19b492.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b496.  v1:= "" @kind object;
  #L19b49a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19b4a0.  return v2 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `scheme`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `scheme`) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19b4b4.  if v4 != 0 then goto L19b4c8;
  #L19b4b8.  v0:= new `java.lang.NullPointerException`;
  #L19b4bc.  v1:= "scheme == null" @kind object;
  #L19b4c0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b4c6.  throw v0;
  #L19b4c8.  v0:= "http" @kind object;
  #L19b4cc.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19b4d2.  v0:= temp;
  #L19b4d4.  if v0 == 0 then goto L19b4e2;
  #L19b4d8.  v0:= "http" @kind object;
  #L19b4dc.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19b4e0.  return v3 @kind object;
  #L19b4e2.  v0:= "https" @kind object;
  #L19b4e6.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19b4ec.  v0:= temp;
  #L19b4ee.  if v0 == 0 then goto L19b4fc;
  #L19b4f2.  v0:= "https" @kind object;
  #L19b4f6.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19b4fa.  goto L19b4e0;
  #L19b4fc.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b500.  v1:= new `java.lang.StringBuilder`;
  #L19b504.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b50a.  v2:= "unexpected scheme: " @kind object;
  #L19b50e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b514.  v1:= temp @kind object;
  #L19b516.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b51c.  v1:= temp @kind object;
  #L19b51e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b524.  v1:= temp @kind object;
  #L19b526.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b52c.  throw v0;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v10 @kind this, `int` v11 @name `index`, `java.lang.String` v12 @kind object @name `encodedPathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19b540.  v4:= 1I;
  #L19b542.  v1:= 0I;
  #L19b544.  if v12 != 0 then goto L19b558;
  #L19b548.  v0:= new `java.lang.NullPointerException`;
  #L19b54c.  v1:= "encodedPathSegment == null" @kind object;
  #L19b550.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b556.  throw v0;
  #L19b558.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b55e.  v2:= temp;
  #L19b560.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L19b564.  v8:= 0I;
  #L19b566.  v0:= v12 @kind object;
  #L19b568.  v5:= v1;
  #L19b56a.  v6:= v1;
  #L19b56c.  v7:= v4;
  #L19b56e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b574.  v9:= temp @kind object;
  #L19b576.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b57a.  call temp:= `set`(v0, v11, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19b580.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L19b586.  v0:= temp;
  #L19b588.  if v0 != 0 then goto L19b598;
  #L19b58c.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L19b592.  v0:= temp;
  #L19b594.  if v0 == 0 then goto L19b5ca;
  #L19b598.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b59c.  v1:= new `java.lang.StringBuilder`;
  #L19b5a0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b5a6.  v2:= "unexpected path segment: " @kind object;
  #L19b5aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b5b0.  v1:= temp @kind object;
  #L19b5b2.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b5b8.  v1:= temp @kind object;
  #L19b5ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b5c0.  v1:= temp @kind object;
  #L19b5c2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b5c8.  throw v0;
  #L19b5ca.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `encodedName`, `java.lang.String` v2 @kind object @name `encodedValue`) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19b5dc.  call temp:= `removeAllEncodedQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b5e2.  call temp:= `addEncodedQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b5e8.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setPathSegment`(`okhttp3.HttpUrl$Builder` v10 @kind this, `int` v11 @name `index`, `java.lang.String` v12 @kind object @name `pathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.setPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19b5fc.  v1:= 0I;
  #L19b5fe.  if v12 != 0 then goto L19b612;
  #L19b602.  v0:= new `java.lang.NullPointerException`;
  #L19b606.  v1:= "pathSegment == null" @kind object;
  #L19b60a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b610.  throw v0;
  #L19b612.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b618.  v2:= temp;
  #L19b61a.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L19b61e.  v7:= 1I;
  #L19b620.  v8:= 0I;
  #L19b622.  v0:= v12 @kind object;
  #L19b624.  v4:= v1;
  #L19b626.  v5:= v1;
  #L19b628.  v6:= v1;
  #L19b62a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b630.  v9:= temp @kind object;
  #L19b632.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L19b638.  v0:= temp;
  #L19b63a.  if v0 != 0 then goto L19b64a;
  #L19b63e.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L19b644.  v0:= temp;
  #L19b646.  if v0 == 0 then goto L19b67c;
  #L19b64a.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b64e.  v1:= new `java.lang.StringBuilder`;
  #L19b652.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b658.  v2:= "unexpected path segment: " @kind object;
  #L19b65c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b662.  v1:= temp @kind object;
  #L19b664.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b66a.  v1:= temp @kind object;
  #L19b66c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b672.  v1:= temp @kind object;
  #L19b674.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b67a.  throw v0;
  #L19b67c.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b680.  call temp:= `set`(v0, v11, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19b686.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `name`, `java.lang.String` v2 @kind object @name `value`) @signature `Lokhttp3/HttpUrl$Builder;.setQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19b698.  call temp:= `removeAllQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b69e.  call temp:= `addQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b6a4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl$Builder` v5 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19b6b8.  v4:= 58I;
  #L19b6bc.  v1:= new `java.lang.StringBuilder`;
  #L19b6c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b6c6.  v2:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19b6ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b6d0.  v2:= "://" @kind object;
  #L19b6d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b6da.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19b6de.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19b6e4.  v2:= temp;
  #L19b6e6.  if v2 == 0 then goto L19b6fa;
  #L19b6ea.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19b6ee.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19b6f4.  v2:= temp;
  #L19b6f6.  if v2 != 0 then goto L19b72e;
  #L19b6fa.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19b6fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b704.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19b708.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19b70e.  v2:= temp;
  #L19b710.  if v2 != 0 then goto L19b724;
  #L19b714.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b71a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19b71e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b724.  v2:= 64I;
  #L19b728.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b72e.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b732.  call temp:= `indexOf`(v2, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19b738.  v2:= temp;
  #L19b73a.  v3:= -1I;
  #L19b73c.  if v2 == v3 then goto L19b7ce;
  #L19b740.  v2:= 91I;
  #L19b744.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b74a.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b74e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b754.  v2:= 93I;
  #L19b758.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b75e.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L19b764.  v0:= temp;
  #L19b766.  v2:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19b76a.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19b770.  v2:= temp;
  #L19b772.  if v0 == v2 then goto L19b782;
  #L19b776.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b77c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b782.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b786.  call `pathSegmentsToString`(v1, v2) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19b78c.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b790.  if v2 == 0 then goto L19b7a8;
  #L19b794.  v2:= 63I;
  #L19b798.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b79e.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b7a2.  call `namesAndValuesToQueryString`(v1, v2) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19b7a8.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b7ac.  if v2 == 0 then goto L19b7c4;
  #L19b7b0.  v2:= 35I;
  #L19b7b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b7ba.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b7be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b7c4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b7ca.  v2:= temp @kind object;
  #L19b7cc.  return v2 @kind object;
  #L19b7ce.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b7d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b7d8.  goto L19b75e;
}
procedure `okhttp3.HttpUrl$Builder` `username`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `username`) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b7ec.  v2:= 0I;
  #L19b7ee.  if v7 != 0 then goto L19b802;
  #L19b7f2.  v0:= new `java.lang.NullPointerException`;
  #L19b7f6.  v1:= "username == null" @kind object;
  #L19b7fa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b800.  throw v0;
  #L19b802.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19b806.  v5:= 1I;
  #L19b808.  v0:= v7 @kind object;
  #L19b80a.  v3:= v2;
  #L19b80c.  v4:= v2;
  #L19b80e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b814.  v0:= temp @kind object;
  #L19b816.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19b81a.  return v6 @kind object;
}

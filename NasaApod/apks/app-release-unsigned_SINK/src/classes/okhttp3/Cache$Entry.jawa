record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.SENT_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L193e80.  v0:= new `java.lang.StringBuilder`;
  #L193e84.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L193e8a.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L193e90.  v1:= temp @kind object;
  #L193e92.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L193e98.  v1:= temp @kind object;
  #L193e9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193ea0.  v0:= temp @kind object;
  #L193ea2.  v1:= "-Sent-Millis" @kind object;
  #L193ea6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193eac.  v0:= temp @kind object;
  #L193eae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L193eb4.  v0:= temp @kind object;
  #L193eb6.  `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L193eba.  v0:= new `java.lang.StringBuilder`;
  #L193ebe.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L193ec4.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L193eca.  v1:= temp @kind object;
  #L193ecc.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L193ed2.  v1:= temp @kind object;
  #L193ed4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193eda.  v0:= temp @kind object;
  #L193edc.  v1:= "-Received-Millis" @kind object;
  #L193ee0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193ee6.  v0:= temp @kind object;
  #L193ee8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L193eee.  v0:= temp @kind object;
  #L193ef0.  `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L193ef4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L193f08.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L193f0e.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L193f14.  v0:= temp @kind object;
  #L193f16.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193f1c.  v0:= temp @kind object;
  #L193f1e.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L193f24.  v0:= temp @kind object;
  #L193f26.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L193f2a.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L193f30.  v0:= temp @kind object;
  #L193f32.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L193f36.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L193f3c.  v0:= temp @kind object;
  #L193f3e.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L193f44.  v0:= temp @kind object;
  #L193f46.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L193f4a.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L193f50.  v0:= temp @kind object;
  #L193f52.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L193f56.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L193f5c.  v0:= temp;
  #L193f5e.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L193f62.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L193f68.  v0:= temp @kind object;
  #L193f6a.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L193f6e.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L193f74.  v0:= temp @kind object;
  #L193f76.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L193f7a.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L193f80.  v0:= temp @kind object;
  #L193f82.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L193f86.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L193f8c.  v0:= temp @kind wide;
  #L193f8e.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L193f92.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L193f98.  v0:= temp @kind wide;
  #L193f9a.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L193f9e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v22 @kind this, `okio.Source` v23 @kind object @name `in`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L193fb0.  call `<init>`(v22) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #Try_start0.  
  #L193fb6.  call temp:= `buffer`(v23) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L193fbc.  v14:= temp @kind object;
  #L193fbe.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193fc4.  v19:= temp @kind object;
  #L193fc6.  v0:= v19 @kind object;
  #L193fca.  v1:= v22 @kind object;
  #L193fce.  v1.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L193fd2.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193fd8.  v19:= temp @kind object;
  #L193fda.  v0:= v19 @kind object;
  #L193fde.  v1:= v22 @kind object;
  #L193fe2.  v1.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L193fe6.  v17:= new `okhttp3.Headers$Builder`;
  #L193fea.  call `<init>`(v17) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L193ff0.  call temp:= `readInt`(v14) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L193ff6.  v18:= temp;
  #L193ff8.  v7:= 0I;
  #L193ffa.  v0:= v18;
  #L193ffe.  if v7 >= v0 then goto L19401e;
  #L194002.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194008.  v19:= temp @kind object;
  #L19400a.  v0:= v17 @kind object;
  #L19400e.  v1:= v19 @kind object;
  #L194012.  call temp:= `addLenient`(v0, v1) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L194018.  v7:= v7 + 1;
  #L19401c.  goto L193ffa;
  #L19401e.  call temp:= `build`(v17) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L194024.  v19:= temp @kind object;
  #L194026.  v0:= v19 @kind object;
  #L19402a.  v1:= v22 @kind object;
  #L19402e.  v1.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L194032.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194038.  v19:= temp @kind object;
  #L19403a.  call temp:= `parse`(v19) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L194040.  v15:= temp @kind object;
  #L194042.  v0:= v15.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L194046.  v19:= v0 @kind object;
  #L19404a.  v0:= v19 @kind object;
  #L19404e.  v1:= v22 @kind object;
  #L194052.  v1.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L194056.  v0:= v15.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L19405a.  v19:= v0;
  #L19405e.  v0:= v19;
  #L194062.  v1:= v22 @kind object;
  #L194066.  v1.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L19406a.  v0:= v15.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L19406e.  v19:= v0 @kind object;
  #L194072.  v0:= v19 @kind object;
  #L194076.  v1:= v22 @kind object;
  #L19407a.  v1.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L19407e.  v12:= new `okhttp3.Headers$Builder`;
  #L194082.  call `<init>`(v12) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L194088.  call temp:= `readInt`(v14) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L19408e.  v11:= temp;
  #L194090.  v7:= 0I;
  #L194092.  if v7 >= v11 then goto L1940ae;
  #L194096.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L19409c.  v19:= temp @kind object;
  #L19409e.  v0:= v19 @kind object;
  #L1940a2.  call temp:= `addLenient`(v12, v0) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1940a8.  v7:= v7 + 1;
  #L1940ac.  goto L194092;
  #L1940ae.  v19:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L1940b2.  v0:= v19 @kind object;
  #L1940b6.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1940bc.  v13:= temp @kind object;
  #L1940be.  v19:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L1940c2.  v0:= v19 @kind object;
  #L1940c6.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1940cc.  v10:= temp @kind object;
  #L1940ce.  v19:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L1940d2.  v0:= v19 @kind object;
  #L1940d6.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1940dc.  v19:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L1940e0.  v0:= v19 @kind object;
  #L1940e4.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1940ea.  if v13 == 0 then goto L19419a;
  #L1940ee.  call temp:= `parseLong`(v13) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1940f4.  v20:= temp @kind wide;
  #L1940f6.  v0:= v20 @kind wide;
  #L1940fa.  v2:= v22 @kind object;
  #L1940fe.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L194102.  if v10 == 0 then goto L1941a0;
  #L194106.  call temp:= `parseLong`(v10) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L19410c.  v20:= temp @kind wide;
  #L19410e.  v0:= v20 @kind wide;
  #L194112.  v2:= v22 @kind object;
  #L194116.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L19411a.  call temp:= `build`(v12) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L194120.  v19:= temp @kind object;
  #L194122.  v0:= v19 @kind object;
  #L194126.  v1:= v22 @kind object;
  #L19412a.  v1.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19412e.  call temp:= `isHttps`(v22) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L194134.  v19:= temp;
  #L194136.  if v19 == 0 then goto L194210;
  #L19413a.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194140.  v4:= temp @kind object;
  #L194142.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L194148.  v19:= temp;
  #L19414a.  if v19 <= 0 then goto L1941a6;
  #L19414e.  v19:= new `java.io.IOException`;
  #L194152.  v20:= new `java.lang.StringBuilder`;
  #L194156.  call `<init>`(v20) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19415c.  v21:= "expected \"\" but was \"" @kind object;
  #L194160.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L194166.  v20:= temp @kind object;
  #L194168.  v0:= v20 @kind object;
  #L19416c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L194172.  v20:= temp @kind object;
  #L194174.  v21:= "\"" @kind object;
  #L194178.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19417e.  v20:= temp @kind object;
  #L194180.  call temp:= `toString`(v20) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L194186.  v20:= temp @kind object;
  #L194188.  call `<init>`(v19, v20) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19418e.  throw v19;
  #Try_end0.  
  #L194190.  v19:= Exception @type ^`java.lang.Throwable` @kind object;
  #L194192.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L194198.  throw v19;
  #L19419a.  v20:= 0L;
  #L19419e.  goto L1940f6;
  #L1941a0.  v20:= 0L;
  #L1941a4.  goto L19410e;
  #Try_start1.  
  #L1941a6.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1941ac.  v6:= temp @kind object;
  #L1941ae.  call temp:= `forJavaName`(v6) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L1941b4.  v5:= temp @kind object;
  #L1941b6.  v0:= v22 @kind object;
  #L1941ba.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L1941c0.  v9:= temp @kind object;
  #L1941c2.  v0:= v22 @kind object;
  #L1941c6.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L1941cc.  v8:= temp @kind object;
  #L1941ce.  call temp:= `exhausted`(v14) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L1941d4.  v19:= temp;
  #L1941d6.  if v19 != 0 then goto L19420a;
  #L1941da.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1941e0.  v19:= temp @kind object;
  #L1941e2.  call temp:= `forJavaName`(v19) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L1941e8.  v16:= temp @kind object;
  #L1941ea.  v0:= v16 @kind object;
  #L1941ee.  call temp:= `get`(v0, v5, v9, v8) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L1941f4.  v19:= temp @kind object;
  #L1941f6.  v0:= v19 @kind object;
  #L1941fa.  v1:= v22 @kind object;
  #L1941fe.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #Try_end1.  
  #L194202.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L194208.  return @kind void;
  #Try_start2.  
  #L19420a.  v16:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19420e.  goto L1941ea;
  #L194210.  v19:= 0I;
  #L194214.  v0:= v19 @kind object;
  #L194218.  v1:= v22 @kind object;
  #L19421c.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #Try_end2.  
  #L194220.  goto L194202;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L194190;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L194190;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L194190;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L194250.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L194254.  v1:= "https://" @kind object;
  #L194258.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19425e.  v0:= temp;
  #L194260.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v9 @kind this, `okio.BufferedSource` v10 @kind object @name `source`) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L194274.  call temp:= `readInt`(v10) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L19427a.  v4:= temp;
  #L19427c.  v7:= -1I;
  #L19427e.  if v4 != v7 then goto L19428c;
  #L194282.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L194288.  v6:= temp @kind object;
  #L19428a.  return v6 @kind object;
  #Try_start0.  
  #L19428c.  v7:= "X.509" @kind object;
  #L194290.  call temp:= `getInstance`(v7) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L194296.  v1:= temp @kind object;
  #L194298.  v6:= new `java.util.ArrayList`;
  #L19429c.  call `<init>`(v6, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1942a2.  v3:= 0I;
  #L1942a4.  if v3 >= v4 then goto L19428a;
  #L1942a8.  call temp:= `readUtf8LineStrict`(v10) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1942ae.  v5:= temp @kind object;
  #L1942b0.  v0:= new `okio.Buffer`;
  #L1942b4.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1942ba.  call temp:= `decodeBase64`(v5) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1942c0.  v7:= temp @kind object;
  #L1942c2.  call temp:= `write`(v0, v7) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1942c8.  call temp:= `inputStream`(v0) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L1942ce.  v7:= temp @kind object;
  #L1942d0.  call temp:= `generateCertificate`(v1, v7) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L1942d6.  v7:= temp @kind object;
  #L1942d8.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1942de.  v3:= v3 + 1;
  #L1942e2.  goto L1942a4;
  #L1942e4.  v2:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L1942e6.  v7:= new `java.io.IOException`;
  #L1942ea.  call temp:= `getMessage`(v2) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1942f0.  v8:= temp @kind object;
  #L1942f2.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1942f8.  throw v7;
  catch `java.security.cert.CertificateException` @[Try_start0..Try_end0] goto L1942e4;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v8 @kind this, `okio.BufferedSink` v9 @kind object @name `sink`, `java.util.List` v10 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #Try_start0.  
  #L19431c.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L194322.  v5:= temp;
  #L194324.  v6:= (`long`) v5 @kind i2l;
  #L194326.  call temp:= `writeDecimalLong`(v9, v6) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L19432c.  v5:= temp @kind object;
  #L19432e.  v6:= 10I;
  #L194332.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194338.  v2:= 0I;
  #L19433a.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L194340.  v4:= temp;
  #L194342.  if v2 >= v4 then goto L194398;
  #L194346.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19434c.  v5:= temp @kind object;
  #L19434e.  v5:= (`java.security.cert.Certificate`) v5 @kind object;
  #L194352.  call temp:= `getEncoded`(v5) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L194358.  v0:= temp @kind object;
  #L19435a.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L194360.  v5:= temp @kind object;
  #L194362.  call temp:= `base64`(v5) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L194368.  v3:= temp @kind object;
  #L19436a.  call temp:= `writeUtf8`(v9, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194370.  v5:= temp @kind object;
  #L194372.  v6:= 10I;
  #L194376.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #Try_end0.  
  #L19437c.  v2:= v2 + 1;
  #L194380.  goto L194342;
  #L194382.  v1:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L194384.  v5:= new `java.io.IOException`;
  #L194388.  call temp:= `getMessage`(v1) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19438e.  v6:= temp @kind object;
  #L194390.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L194396.  throw v5;
  #L194398.  return @kind void;
  catch `java.security.cert.CertificateEncodingException` @[Try_start0..Try_end0] goto L194382;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object @name `request`, `okhttp3.Response` v4 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1943bc.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L1943c0.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1943c6.  v1:= temp @kind object;
  #L1943c8.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L1943ce.  v1:= temp @kind object;
  #L1943d0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1943d6.  v0:= temp;
  #L1943d8.  if v0 == 0 then goto L194408;
  #L1943dc.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L1943e0.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1943e6.  v1:= temp @kind object;
  #L1943e8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1943ee.  v0:= temp;
  #L1943f0.  if v0 == 0 then goto L194408;
  #L1943f4.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1943f8.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L1943fe.  v0:= temp;
  #L194400.  if v0 == 0 then goto L194408;
  #L194404.  v0:= 1I;
  #L194406.  return v0;
  #L194408.  v0:= 0I;
  #L19440a.  goto L194406;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v6 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v7 @kind object @name `snapshot`) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19441c.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194420.  v4:= "Content-Type" @kind object;
  #L194424.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19442a.  v2:= temp @kind object;
  #L19442c.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194430.  v4:= "Content-Length" @kind object;
  #L194434.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19443a.  v1:= temp @kind object;
  #L19443c.  v3:= new `okhttp3.Request$Builder`;
  #L194440.  call `<init>`(v3) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L194446.  v4:= v6.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L19444a.  call temp:= `url`(v3, v4) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L194450.  v3:= temp @kind object;
  #L194452.  v4:= v6.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L194456.  v5:= 0I;
  #L194458.  call temp:= `method`(v3, v4, v5) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19445e.  v3:= temp @kind object;
  #L194460.  v4:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194464.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19446a.  v3:= temp @kind object;
  #L19446c.  call temp:= `build`(v3) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L194472.  v0:= temp @kind object;
  #L194474.  v3:= new `okhttp3.Response$Builder`;
  #L194478.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L19447e.  call temp:= `request`(v3, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194484.  v3:= temp @kind object;
  #L194486.  v4:= v6.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19448a.  call temp:= `protocol`(v3, v4) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194490.  v3:= temp @kind object;
  #L194492.  v4:= v6.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L194496.  call temp:= `code`(v3, v4) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L19449c.  v3:= temp @kind object;
  #L19449e.  v4:= v6.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L1944a2.  call temp:= `message`(v3, v4) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1944a8.  v3:= temp @kind object;
  #L1944aa.  v4:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1944ae.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1944b4.  v3:= temp @kind object;
  #L1944b6.  v4:= new `okhttp3.Cache$CacheResponseBody`;
  #L1944ba.  call `<init>`(v4, v7, v2, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1944c0.  call temp:= `body`(v3, v4) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1944c6.  v3:= temp @kind object;
  #L1944c8.  v4:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L1944cc.  call temp:= `handshake`(v3, v4) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1944d2.  v3:= temp @kind object;
  #L1944d4.  v4:= v6.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L1944d8.  call temp:= `sentRequestAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L1944de.  v3:= temp @kind object;
  #L1944e0.  v4:= v6.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L1944e4.  call temp:= `receivedResponseAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L1944ea.  v3:= temp @kind object;
  #L1944ec.  call temp:= `build`(v3) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1944f2.  v3:= temp @kind object;
  #L1944f4.  return v3 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v8 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v9 @kind object @name `editor`) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L194508.  v7:= 10I;
  #L19450c.  v3:= 0I;
  #L19450e.  call temp:= `newSink`(v9, v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L194514.  v3:= temp @kind object;
  #L194516.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L19451c.  v1:= temp @kind object;
  #L19451e.  v3:= v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L194522.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194528.  v3:= temp @kind object;
  #L19452a.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194530.  v3:= v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L194534.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19453a.  v3:= temp @kind object;
  #L19453c.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194542.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194546.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19454c.  v3:= temp;
  #L19454e.  v4:= (`long`) v3 @kind i2l;
  #L194550.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L194556.  v3:= temp @kind object;
  #L194558.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19455e.  v0:= 0I;
  #L194560.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194564.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19456a.  v2:= temp;
  #L19456c.  if v0 >= v2 then goto L1945b0;
  #L194570.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194574.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19457a.  v3:= temp @kind object;
  #L19457c.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194582.  v3:= temp @kind object;
  #L194584.  v4:= ": " @kind object;
  #L194588.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19458e.  v3:= temp @kind object;
  #L194590.  v4:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194594.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19459a.  v4:= temp @kind object;
  #L19459c.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1945a2.  v3:= temp @kind object;
  #L1945a4.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1945aa.  v0:= v0 + 1;
  #L1945ae.  goto L19456c;
  #L1945b0.  v3:= new `okhttp3.internal.http.StatusLine`;
  #L1945b4.  v4:= v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L1945b8.  v5:= v8.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L1945bc.  v6:= v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L1945c0.  call `<init>`(v3, v4, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L1945c6.  call temp:= `toString`(v3) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L1945cc.  v3:= temp @kind object;
  #L1945ce.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1945d4.  v3:= temp @kind object;
  #L1945d6.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1945dc.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1945e0.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1945e6.  v3:= temp;
  #L1945e8.  v3:= v3 + 2;
  #L1945ec.  v4:= (`long`) v3 @kind i2l;
  #L1945ee.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1945f4.  v3:= temp @kind object;
  #L1945f6.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1945fc.  v0:= 0I;
  #L1945fe.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194602.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L194608.  v2:= temp;
  #L19460a.  if v0 >= v2 then goto L19464e;
  #L19460e.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194612.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L194618.  v3:= temp @kind object;
  #L19461a.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194620.  v3:= temp @kind object;
  #L194622.  v4:= ": " @kind object;
  #L194626.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19462c.  v3:= temp @kind object;
  #L19462e.  v4:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194632.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L194638.  v4:= temp @kind object;
  #L19463a.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194640.  v3:= temp @kind object;
  #L194642.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194648.  v0:= v0 + 1;
  #L19464c.  goto L19460a;
  #L19464e.  v3:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L194652.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194658.  v3:= temp @kind object;
  #L19465a.  v4:= ": " @kind object;
  #L19465e.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194664.  v3:= temp @kind object;
  #L194666.  v4:= v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L19466a.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L194670.  v3:= temp @kind object;
  #L194672.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194678.  v3:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L19467c.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194682.  v3:= temp @kind object;
  #L194684.  v4:= ": " @kind object;
  #L194688.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19468e.  v3:= temp @kind object;
  #L194690.  v4:= v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L194694.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L19469a.  v3:= temp @kind object;
  #L19469c.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1946a2.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L1946a8.  v3:= temp;
  #L1946aa.  if v3 == 0 then goto L19471c;
  #L1946ae.  call temp:= `writeByte`(v1, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1946b4.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L1946b8.  call temp:= `cipherSuite`(v3) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L1946be.  v3:= temp @kind object;
  #L1946c0.  call temp:= `javaName`(v3) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L1946c6.  v3:= temp @kind object;
  #L1946c8.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1946ce.  v3:= temp @kind object;
  #L1946d0.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1946d6.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L1946da.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L1946e0.  v3:= temp @kind object;
  #L1946e2.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L1946e8.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L1946ec.  call temp:= `localCertificates`(v3) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L1946f2.  v3:= temp @kind object;
  #L1946f4.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L1946fa.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L1946fe.  call temp:= `tlsVersion`(v3) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L194704.  v3:= temp @kind object;
  #L194706.  call temp:= `javaName`(v3) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L19470c.  v3:= temp @kind object;
  #L19470e.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194714.  v3:= temp @kind object;
  #L194716.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19471c.  call `close`(v1) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L194722.  return @kind void;
}

record `okhttp3.internal.platform.JdkWithJettyBootPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object @name `putMethod`, `java.lang.reflect.Method` v2 @kind object @name `getMethod`, `java.lang.reflect.Method` v3 @kind object @name `removeMethod`, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21cfec.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21cff2.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L21cff6.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L21cffa.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L21cffe.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` := v4 @kind object;
  #L21d002.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` := v5 @kind object;
  #L21d006.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #Try_start0.  
  #L21d018.  v7:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L21d01c.  call temp:= `forName`(v7) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21d022.  v6:= temp @kind object;
  #L21d024.  v0:= new `java.lang.StringBuilder`;
  #L21d028.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21d02e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d034.  v0:= temp @kind object;
  #L21d036.  v9:= "$Provider" @kind object;
  #L21d03a.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d040.  v0:= temp @kind object;
  #L21d042.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21d048.  v0:= temp @kind object;
  #L21d04a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21d050.  v8:= temp @kind object;
  #L21d052.  v0:= new `java.lang.StringBuilder`;
  #L21d056.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21d05c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d062.  v0:= temp @kind object;
  #L21d064.  v9:= "$ClientProvider" @kind object;
  #L21d068.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d06e.  v0:= temp @kind object;
  #L21d070.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21d076.  v0:= temp @kind object;
  #L21d078.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21d07e.  v4:= temp @kind object;
  #L21d080.  v0:= new `java.lang.StringBuilder`;
  #L21d084.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21d08a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d090.  v0:= temp @kind object;
  #L21d092.  v9:= "$ServerProvider" @kind object;
  #L21d096.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d09c.  v0:= temp @kind object;
  #L21d09e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21d0a4.  v0:= temp @kind object;
  #L21d0a6.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21d0ac.  v5:= temp @kind object;
  #L21d0ae.  v0:= "put" @kind object;
  #L21d0b2.  v9:= 2I;
  #L21d0b4.  v9:= new `java.lang.Class`[v9];
  #L21d0b8.  v10:= 0I;
  #L21d0ba.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21d0be.  v9[v10]:= v11 @kind object;
  #L21d0c2.  v10:= 1I;
  #L21d0c4.  v9[v10]:= v8 @kind object;
  #L21d0c8.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21d0ce.  v1:= temp @kind object;
  #L21d0d0.  v0:= "get" @kind object;
  #L21d0d4.  v9:= 1I;
  #L21d0d6.  v9:= new `java.lang.Class`[v9];
  #L21d0da.  v10:= 0I;
  #L21d0dc.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21d0e0.  v9[v10]:= v11 @kind object;
  #L21d0e4.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21d0ea.  v2:= temp @kind object;
  #L21d0ec.  v0:= "remove" @kind object;
  #L21d0f0.  v9:= 1I;
  #L21d0f2.  v9:= new `java.lang.Class`[v9];
  #L21d0f6.  v10:= 0I;
  #L21d0f8.  v11:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21d0fc.  v9[v10]:= v11 @kind object;
  #L21d100.  call temp:= `getMethod`(v6, v0, v9) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21d106.  v3:= temp @kind object;
  #L21d108.  v0:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform`;
  #L21d10c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #Try_end0.  
  #L21d112.  return v0 @kind object;
  #L21d114.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21d116.  v0:= 0I;
  #L21d118.  goto L21d112;
  #L21d11a.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21d11c.  goto L21d116;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21d114;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21d11a;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object @name `sslSocket`) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L21d144.  v1:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21d148.  v2:= 0I;
  #L21d14a.  v3:= 1I;
  #L21d14c.  v3:= new `java.lang.Object`[v3];
  #L21d150.  v4:= 0I;
  #L21d152.  v3[v4]:= v6 @kind object;
  #L21d156.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L21d15c.  return @kind void;
  #L21d15e.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21d160.  v1:= "unable to remove alpn" @kind object;
  #L21d164.  call temp:= `assertionError`(v1, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21d16a.  v1:= temp @kind object;
  #L21d16c.  throw v1;
  #L21d16e.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21d170.  goto L21d160;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21d15e;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21d16e;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `sslSocket`, `java.lang.String` v9 @kind object @name `hostname`, `java.util.List` v10 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21d194.  call temp:= `alpnProtocolNames`(v10) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L21d19a.  v1:= temp @kind object;
  #Try_start0.  
  #L21d19c.  v3:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L21d1a0.  call temp:= `getClassLoader`(v3) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L21d1a6.  v3:= temp @kind object;
  #L21d1a8.  v4:= 2I;
  #L21d1aa.  v4:= new `java.lang.Class`[v4];
  #L21d1ae.  v5:= 0I;
  #L21d1b0.  v6:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` @kind object;
  #L21d1b4.  v4[v5]:= v6 @kind object;
  #L21d1b8.  v5:= 1I;
  #L21d1ba.  v6:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` @kind object;
  #L21d1be.  v4[v5]:= v6 @kind object;
  #L21d1c2.  v5:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`;
  #L21d1c6.  call `<init>`(v5, v1) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform$JettyNegoProvider;.<init>:(Ljava/util/List;)V` @kind direct;
  #L21d1cc.  call temp:= `newProxyInstance`(v3, v4, v5) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L21d1d2.  v2:= temp @kind object;
  #L21d1d4.  v3:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21d1d8.  v4:= 0I;
  #L21d1da.  v5:= 2I;
  #L21d1dc.  v5:= new `java.lang.Object`[v5];
  #L21d1e0.  v6:= 0I;
  #L21d1e2.  v5[v6]:= v8 @kind object;
  #L21d1e6.  v6:= 1I;
  #L21d1e8.  v5[v6]:= v2 @kind object;
  #L21d1ec.  call temp:= `invoke`(v3, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L21d1f2.  return @kind void;
  #L21d1f4.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21d1f6.  v3:= "unable to set alpn" @kind object;
  #L21d1fa.  call temp:= `assertionError`(v3, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21d200.  v3:= temp @kind object;
  #L21d202.  throw v3;
  #L21d204.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21d206.  goto L21d1f6;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21d204;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21d1f4;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21d228.  v2:= 0I;
  #Try_start0.  
  #L21d22a.  v3:= v7.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21d22e.  v4:= 0I;
  #L21d230.  v5:= 1I;
  #L21d232.  v5:= new `java.lang.Object`[v5];
  #L21d236.  v6:= 0I;
  #L21d238.  v5[v6]:= v8 @kind object;
  #L21d23c.  call temp:= `invoke`(v3, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21d242.  v3:= temp @kind object;
  #L21d244.  call temp:= `getInvocationHandler`(v3) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L21d24a.  v1:= temp @kind object;
  #L21d24c.  v1:= (`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`) v1 @kind object;
  #L21d250.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L21d254.  if v3 != 0 then goto L21d278;
  #L21d258.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #L21d25c.  if v3 != 0 then goto L21d278;
  #L21d260.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L21d266.  v3:= temp @kind object;
  #L21d268.  v4:= 4I;
  #L21d26a.  v5:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L21d26e.  v6:= 0I;
  #L21d270.  call `log`(v3, v4, v5, v6) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21d276.  return v2 @kind object;
  #L21d278.  v3:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.unsupported` @type ^`boolean` @kind boolean;
  #L21d27c.  if v3 != 0 then goto L21d276;
  #L21d280.  v2:= v1.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.selected` @type ^`java.lang.String` @kind object;
  #Try_end0.  
  #L21d284.  goto L21d276;
  #L21d286.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21d288.  v2:= "unable to get selected protocol" @kind object;
  #L21d28c.  call temp:= `assertionError`(v2, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21d292.  v2:= temp @kind object;
  #L21d294.  throw v2;
  #L21d296.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21d298.  goto L21d288;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21d296;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21d286;
}

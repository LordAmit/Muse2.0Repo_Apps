record `okhttp3.internal.platform.Jdk9Platform` @kind class @AccessFlag FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @AccessFlag FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Jdk9Platform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object @name `setProtocolMethod`, `java.lang.reflect.Method` v2 @kind object @name `getProtocolMethod`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21ce68.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21ce6e.  v0.`okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L21ce72.  v0.`okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L21ce76.  return @kind void;
}
procedure `okhttp3.internal.platform.Jdk9Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21ce88.  v2:= constclass @type ^`javax.net.ssl.SSLParameters` @kind object;
  #L21ce8c.  v3:= "setApplicationProtocols" @kind object;
  #L21ce90.  v4:= 1I;
  #L21ce92.  v4:= new `java.lang.Class`[v4];
  #L21ce96.  v5:= 0I;
  #L21ce98.  v6:= constclass @type ^`java.lang.String`[] @kind object;
  #L21ce9c.  v4[v5]:= v6 @kind object;
  #L21cea0.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21cea6.  v1:= temp @kind object;
  #L21cea8.  v2:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21ceac.  v3:= "getApplicationProtocol" @kind object;
  #L21ceb0.  v4:= 0I;
  #L21ceb2.  v4:= new `java.lang.Class`[v4];
  #L21ceb6.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21cebc.  v0:= temp @kind object;
  #L21cebe.  v2:= new `okhttp3.internal.platform.Jdk9Platform`;
  #L21cec2.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/platform/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21cec8.  return v2 @kind object;
  #L21ceca.  v2:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21cecc.  v2:= 0I;
  #L21cece.  goto L21cec8;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21ceca;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Jdk9Platform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `sslSocket`, `java.lang.String` v9 @kind object @name `hostname`, `java.util.List` v10 @kind object) @signature `Lokhttp3/internal/platform/Jdk9Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21cef0.  call temp:= `getSSLParameters`(v8) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L21cef6.  v2:= temp @kind object;
  #L21cef8.  call temp:= `alpnProtocolNames`(v10) @signature `Lokhttp3/internal/platform/Jdk9Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L21cefe.  v1:= temp @kind object;
  #L21cf00.  v3:= v7.`okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21cf04.  v4:= 1I;
  #L21cf06.  v4:= new `java.lang.Object`[v4];
  #L21cf0a.  v5:= 0I;
  #L21cf0c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L21cf12.  v6:= temp;
  #L21cf14.  v6:= new `java.lang.String`[v6];
  #L21cf18.  call temp:= `toArray`(v1, v6) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L21cf1e.  v6:= temp @kind object;
  #L21cf20.  v4[v5]:= v6 @kind object;
  #L21cf24.  call temp:= `invoke`(v3, v2, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21cf2a.  call `setSSLParameters`(v8, v2) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #Try_end0.  
  #L21cf30.  return @kind void;
  #L21cf32.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21cf34.  v3:= "unable to set ssl parameters" @kind object;
  #L21cf38.  call temp:= `assertionError`(v3, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21cf3e.  v3:= temp @kind object;
  #L21cf40.  throw v3;
  #L21cf42.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21cf44.  goto L21cf34;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21cf32;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21cf42;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Jdk9Platform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21cf68.  v2:= v4.`okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21cf6c.  v3:= 0I;
  #L21cf6e.  v3:= new `java.lang.Object`[v3];
  #L21cf72.  call temp:= `invoke`(v2, v5, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21cf78.  v1:= temp @kind object;
  #L21cf7a.  v1:= (`java.lang.String`) v1 @kind object;
  #L21cf7e.  if v1 == 0 then goto L21cf92;
  #L21cf82.  v2:= "" @kind object;
  #L21cf86.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #Try_end0.  
  #L21cf8c.  v2:= temp;
  #L21cf8e.  if v2 == 0 then goto L21cf94;
  #L21cf92.  v1:= 0I;
  #L21cf94.  return v1 @kind object;
  #L21cf96.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21cf98.  v2:= "unable to get selected protocols" @kind object;
  #L21cf9c.  call temp:= `assertionError`(v2, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21cfa2.  v2:= temp @kind object;
  #L21cfa4.  throw v2;
  #L21cfa6.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21cfa8.  goto L21cf98;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21cf96;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21cfa6;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Jdk9Platform` v2 @kind this, `javax.net.ssl.SSLSocketFactory` v3 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21cfcc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L21cfd0.  v1:= "clientBuilder.sslSocketFactory(SSLSocketFactory) not supported on JDK 9+" @kind object;
  #L21cfd4.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21cfda.  throw v0;
}

record `okhttp3.internal.platform.AndroidPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `okhttp3.internal.platform.AndroidPlatform$CloseGuard` `okhttp3.internal.platform.AndroidPlatform.closeGuard` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setHostname` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.platform.AndroidPlatform.MAX_LOG_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.Class` v2 @kind object, `okhttp3.internal.platform.OptionalMethod` v3 @kind object, `okhttp3.internal.platform.OptionalMethod` v4 @kind object, `okhttp3.internal.platform.OptionalMethod` v5 @kind object, `okhttp3.internal.platform.OptionalMethod` v6 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L21c5fc.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21c602.  call temp:= `get`() @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.get:()Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;` @kind static;
  #L21c608.  v0:= temp @kind object;
  #L21c60a.  v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` := v0 @kind object;
  #L21c60e.  v1.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` := v2 @kind object;
  #L21c612.  v1.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` := v3 @kind object;
  #L21c616.  v1.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` := v4 @kind object;
  #L21c61a.  v1.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` := v5 @kind object;
  #L21c61e.  v1.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` := v6 @kind object;
  #L21c622.  return @kind void;
}
procedure `boolean` `api23IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.lang.String` v5 @kind object @name `hostname`, `java.lang.Class` v6 @kind object, `java.lang.Object` v7 @kind object @name `networkSecurityPolicy`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21c634.  v2:= "isCleartextTrafficPermitted" @kind object;
  #L21c638.  v3:= 0I;
  #L21c63a.  v3:= new `java.lang.Class`[v3];
  #L21c63e.  call temp:= `getMethod`(v6, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21c644.  v1:= temp @kind object;
  #L21c646.  v2:= 0I;
  #L21c648.  v2:= new `java.lang.Object`[v2];
  #L21c64c.  call temp:= `invoke`(v1, v7, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21c652.  v2:= temp @kind object;
  #L21c654.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L21c658.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #Try_end0.  
  #L21c65e.  v2:= temp;
  #L21c660.  return v2;
  #L21c662.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21c664.  call temp:= `isCleartextTrafficPermitted`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L21c66a.  v2:= temp;
  #L21c66c.  goto L21c660;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21c662;
}
procedure `boolean` `api24IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `java.lang.String` v7 @kind object @name `hostname`, `java.lang.Class` v8 @kind object, `java.lang.Object` v9 @kind object @name `networkSecurityPolicy`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L21c690.  v2:= "isCleartextTrafficPermitted" @kind object;
  #L21c694.  v3:= 1I;
  #L21c696.  v3:= new `java.lang.Class`[v3];
  #L21c69a.  v4:= 0I;
  #L21c69c.  v5:= constclass @type ^`java.lang.String` @kind object;
  #L21c6a0.  v3[v4]:= v5 @kind object;
  #L21c6a4.  call temp:= `getMethod`(v8, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21c6aa.  v1:= temp @kind object;
  #L21c6ac.  v2:= 1I;
  #L21c6ae.  v2:= new `java.lang.Object`[v2];
  #L21c6b2.  v3:= 0I;
  #L21c6b4.  v2[v3]:= v7 @kind object;
  #L21c6b8.  call temp:= `invoke`(v1, v9, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21c6be.  v2:= temp @kind object;
  #L21c6c0.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L21c6c4.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #Try_end0.  
  #L21c6ca.  v2:= temp;
  #L21c6cc.  return v2;
  #L21c6ce.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21c6d0.  call temp:= `api23IsCleartextTrafficPermitted`(v6, v7, v8, v9) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L21c6d6.  v2:= temp;
  #L21c6d8.  goto L21c6cc;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21c6ce;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L21c6fc.  v7:= 0I;
  #Try_start0.  
  #L21c6fe.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L21c702.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L21c708.  v1:= temp @kind object;
  #Try_start1.  
  #L21c70a.  v2:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21c70e.  v0:= 0I;
  #L21c710.  v8:= "setUseSessionTickets" @kind object;
  #L21c714.  v9:= 1I;
  #L21c716.  v9:= new `java.lang.Class`[v9];
  #L21c71a.  v10:= 0I;
  #L21c71c.  v11:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L21c720.  v9[v10]:= v11 @kind object;
  #L21c724.  call `<init>`(v2, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21c72a.  v3:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21c72e.  v0:= 0I;
  #L21c730.  v8:= "setHostname" @kind object;
  #L21c734.  v9:= 1I;
  #L21c736.  v9:= new `java.lang.Class`[v9];
  #L21c73a.  v10:= 0I;
  #L21c73c.  v11:= constclass @type ^`java.lang.String` @kind object;
  #L21c740.  v9[v10]:= v11 @kind object;
  #L21c744.  call `<init>`(v3, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21c74a.  v4:= 0I;
  #L21c74c.  v5:= 0I;
  #L21c74e.  call temp:= `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @kind static;
  #L21c754.  v0:= temp;
  #L21c756.  if v0 == 0 then goto L21c792;
  #L21c75a.  v4:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21c75e.  v0:= constclass @type ^`byte`[] @kind object;
  #L21c762.  v8:= "getAlpnSelectedProtocol" @kind object;
  #L21c766.  v9:= 0I;
  #L21c768.  v9:= new `java.lang.Class`[v9];
  #L21c76c.  call `<init>`(v4, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21c772.  v5:= new `okhttp3.internal.platform.OptionalMethod`;
  #L21c776.  v0:= 0I;
  #L21c778.  v8:= "setAlpnProtocols" @kind object;
  #L21c77c.  v9:= 1I;
  #L21c77e.  v9:= new `java.lang.Class`[v9];
  #L21c782.  v10:= 0I;
  #L21c784.  v11:= constclass @type ^`byte`[] @kind object;
  #L21c788.  v9[v10]:= v11 @kind object;
  #L21c78c.  call `<init>`(v5, v0, v8, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L21c792.  v0:= new `okhttp3.internal.platform.AndroidPlatform`;
  #L21c796.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @kind direct;
  #L21c79c.  return v0 @kind object;
  #L21c79e.  v6:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21c7a0.  v0:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L21c7a4.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end1.  
  #L21c7aa.  v1:= temp @kind object;
  #L21c7ac.  goto L21c70a;
  #L21c7ae.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21c7b0.  v0:= v7 @kind object;
  #L21c7b2.  goto L21c79c;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21c79e;
  catch `java.lang.ClassNotFoundException` @[Try_start1..Try_end1] goto L21c7ae;
}
procedure `boolean` `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L21c7e0.  v0:= 1I;
  #L21c7e2.  v1:= "GMSCore_OpenSSL" @kind object;
  #L21c7e6.  call temp:= `getProvider`(v1) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L21c7ec.  v1:= temp @kind object;
  #L21c7ee.  if v1 == 0 then goto L21c7f4;
  #L21c7f2.  return v0;
  #Try_start0.  
  #L21c7f4.  v1:= "android.net.Network" @kind object;
  #L21c7f8.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L21c7fe.  goto L21c7f2;
  #L21c800.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21c802.  v0:= 0I;
  #L21c804.  goto L21c7f2;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21c800;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.AndroidPlatform` v9 @kind this, `javax.net.ssl.X509TrustManager` v10 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #Try_start0.  
  #L21c828.  v5:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L21c82c.  call temp:= `forName`(v5) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21c832.  v4:= temp @kind object;
  #L21c834.  v5:= 1I;
  #L21c836.  v5:= new `java.lang.Class`[v5];
  #L21c83a.  v6:= 0I;
  #L21c83c.  v7:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21c840.  v5[v6]:= v7 @kind object;
  #L21c844.  call temp:= `getConstructor`(v4, v5) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L21c84a.  v1:= temp @kind object;
  #L21c84c.  v5:= 1I;
  #L21c84e.  v5:= new `java.lang.Object`[v5];
  #L21c852.  v6:= 0I;
  #L21c854.  v5[v6]:= v10 @kind object;
  #L21c858.  call temp:= `newInstance`(v1, v5) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21c85e.  v3:= temp @kind object;
  #L21c860.  v5:= "checkServerTrusted" @kind object;
  #L21c864.  v6:= 3I;
  #L21c866.  v6:= new `java.lang.Class`[v6];
  #L21c86a.  v7:= 0I;
  #L21c86c.  v8:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L21c870.  v6[v7]:= v8 @kind object;
  #L21c874.  v7:= 1I;
  #L21c876.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L21c87a.  v6[v7]:= v8 @kind object;
  #L21c87e.  v7:= 2I;
  #L21c880.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L21c884.  v6[v7]:= v8 @kind object;
  #L21c888.  call temp:= `getMethod`(v4, v5, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21c88e.  v0:= temp @kind object;
  #L21c890.  v5:= new `okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner`;
  #L21c894.  call `<init>`(v5, v3, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidCertificateChainCleaner;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21c89a.  return v5 @kind object;
  #L21c89c.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L21c89e.  call temp:= `buildCertificateChainCleaner`(v9, v10) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind super;
  #L21c8a4.  v5:= temp @kind object;
  #L21c8a6.  goto L21c89a;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L21c89c;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.AndroidPlatform` v7 @kind this, `javax.net.ssl.X509TrustManager` v8 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21c8c8.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21c8ce.  v2:= temp @kind object;
  #L21c8d0.  v3:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L21c8d4.  v4:= 1I;
  #L21c8d6.  v4:= new `java.lang.Class`[v4];
  #L21c8da.  v5:= 0I;
  #L21c8dc.  v6:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L21c8e0.  v4[v5]:= v6 @kind object;
  #L21c8e4.  call temp:= `getDeclaredMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21c8ea.  v1:= temp @kind object;
  #L21c8ec.  v2:= 1I;
  #L21c8ee.  call `setAccessible`(v1, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L21c8f4.  v2:= new `okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex`;
  #L21c8f8.  call `<init>`(v2, v8, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidTrustRootIndex;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21c8fe.  return v2 @kind object;
  #L21c900.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21c902.  call temp:= `buildTrustRootIndex`(v7, v8) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind super;
  #L21c908.  v2:= temp @kind object;
  #L21c90a.  goto L21c8fe;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21c900;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `javax.net.ssl.SSLSocket` v7 @kind object @name `sslSocket`, `java.lang.String` v8 @kind object @name `hostname`, `java.util.List` v9 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21c92c.  v5:= 0I;
  #L21c92e.  v4:= 1I;
  #L21c930.  if v8 == 0 then goto L21c960;
  #L21c934.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21c938.  v2:= new `java.lang.Object`[v4];
  #L21c93c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L21c942.  v3:= temp @kind object;
  #L21c944.  v2[v5]:= v3 @kind object;
  #L21c948.  call temp:= `invokeOptionalWithoutCheckedException`(v1, v7, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21c94e.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21c952.  v2:= new `java.lang.Object`[v4];
  #L21c956.  v2[v5]:= v8 @kind object;
  #L21c95a.  call temp:= `invokeOptionalWithoutCheckedException`(v1, v7, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21c960.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21c964.  if v1 == 0 then goto L21c992;
  #L21c968.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21c96c.  call temp:= `isSupported`(v1, v7) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L21c972.  v1:= temp;
  #L21c974.  if v1 == 0 then goto L21c992;
  #L21c978.  v0:= new `java.lang.Object`[v4];
  #L21c97c.  call temp:= `concatLengthPrefixed`(v9) @signature `Lokhttp3/internal/platform/AndroidPlatform;.concatLengthPrefixed:(Ljava/util/List;)[B` @kind static;
  #L21c982.  v1:= temp @kind object;
  #L21c984.  v0[v5]:= v1 @kind object;
  #L21c988.  v1:= v6.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21c98c.  call temp:= `invokeWithoutCheckedException`(v1, v7, v0) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21c992.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.net.Socket` v5 @kind object @name `socket`, `java.net.InetSocketAddress` v6 @kind object @name `address`, `int` v7 @name `connectTimeout`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21c9a4.  call `connect`(v5, v6, v7) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #Try_end0.  
  #L21c9aa.  return @kind void;
  #L21c9ac.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L21c9ae.  call temp:= `isAndroidGetsocknameError`(v0) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L21c9b4.  v2:= temp;
  #L21c9b6.  if v2 == 0 then goto L21c9c6;
  #L21c9ba.  v2:= new `java.io.IOException`;
  #L21c9be.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L21c9c4.  throw v2;
  #L21c9c6.  throw v0;
  #L21c9c8.  v0:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L21c9ca.  v1:= new `java.io.IOException`;
  #L21c9ce.  v2:= "Exception in connect" @kind object;
  #L21c9d2.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c9d8.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L21c9de.  throw v1;
  #L21c9e0.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L21c9e2.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L21c9e6.  v3:= 26I;
  #L21c9ea.  if v2 != v3 then goto L21ca04;
  #L21c9ee.  v1:= new `java.io.IOException`;
  #L21c9f2.  v2:= "Exception in connect" @kind object;
  #L21c9f6.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21c9fc.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L21ca02.  throw v1;
  #L21ca04.  throw v0;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L21c9ac;
  catch `java.lang.SecurityException` @[Try_start0..Try_end0] goto L21c9c8;
  catch `java.lang.ClassCastException` @[Try_start0..Try_end0] goto L21c9e0;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21ca2c.  v1:= 0I;
  #L21ca2e.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21ca32.  if v2 != 0 then goto L21ca38;
  #L21ca36.  return v1 @kind object;
  #L21ca38.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21ca3c.  call temp:= `isSupported`(v2, v5) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L21ca42.  v2:= temp;
  #L21ca44.  if v2 == 0 then goto L21ca36;
  #L21ca48.  v2:= v4.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L21ca4c.  v3:= 0I;
  #L21ca4e.  v3:= new `java.lang.Object`[v3];
  #L21ca52.  call temp:= `invokeWithoutCheckedException`(v2, v5, v3) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21ca58.  v0:= temp @kind object;
  #L21ca5a.  v0:= (`byte`[]) v0 @kind object;
  #L21ca5e.  if v0 == 0 then goto L21ca36;
  #L21ca62.  v1:= new `java.lang.String`;
  #L21ca66.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L21ca6a.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L21ca70.  goto L21ca36;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object @name `closer`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21ca84.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L21ca88.  call temp:= `createAndOpen`(v0, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.createAndOpen:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L21ca8e.  v0:= temp @kind object;
  #L21ca90.  return v0 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `java.lang.String` v7 @kind object @name `hostname`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L21caa4.  v4:= "android.security.NetworkSecurityPolicy" @kind object;
  #L21caa8.  call temp:= `forName`(v4) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L21caae.  v2:= temp @kind object;
  #L21cab0.  v4:= "getInstance" @kind object;
  #L21cab4.  v5:= 0I;
  #L21cab6.  v5:= new `java.lang.Class`[v5];
  #L21caba.  call temp:= `getMethod`(v2, v4, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21cac0.  v1:= temp @kind object;
  #L21cac2.  v4:= 0I;
  #L21cac4.  v5:= 0I;
  #L21cac6.  v5:= new `java.lang.Object`[v5];
  #L21caca.  call temp:= `invoke`(v1, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21cad0.  v3:= temp @kind object;
  #L21cad2.  call temp:= `api24IsCleartextTrafficPermitted`(v6, v7, v2, v3) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L21cad8.  v4:= temp;
  #L21cada.  return v4;
  #L21cadc.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21cade.  call temp:= `isCleartextTrafficPermitted`(v6, v7) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L21cae4.  v4:= temp;
  #L21cae6.  goto L21cada;
  #L21cae8.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21caea.  v4:= "unable to determine cleartext support" @kind object;
  #L21caee.  call temp:= `assertionError`(v4, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21caf4.  v4:= temp @kind object;
  #L21caf6.  throw v4;
  #L21caf8.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L21cafa.  goto L21caea;
  #L21cafc.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21cafe.  goto L21caea;
  #L21cb00.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21cb02.  goto L21cade;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21cadc;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21cb00;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21cae8;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L21caf8;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21cafc;
}
procedure `void` `log`(`okhttp3.internal.platform.AndroidPlatform` v8 @kind this, `int` v9 @name `level`, `java.lang.String` v10 @kind object @name `message`, `java.lang.Throwable` v11 @kind object @name `t`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21cb30.  v7:= 10I;
  #L21cb34.  v3:= 5I;
  #L21cb36.  if v9 != v3 then goto L21cbb6;
  #L21cb3a.  if v11 == 0 then goto L21cb70;
  #L21cb3e.  v5:= new `java.lang.StringBuilder`;
  #L21cb42.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21cb48.  call temp:= `append`(v5, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21cb4e.  v5:= temp @kind object;
  #L21cb50.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21cb56.  v5:= temp @kind object;
  #L21cb58.  call temp:= `getStackTraceString`(v11) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L21cb5e.  v6:= temp @kind object;
  #L21cb60.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21cb66.  v5:= temp @kind object;
  #L21cb68.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21cb6e.  v10:= temp @kind object;
  #L21cb70.  v1:= 0I;
  #L21cb72.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L21cb78.  v2:= temp;
  #L21cb7a.  if v1 >= v2 then goto L21cbbe;
  #L21cb7e.  call temp:= `indexOf`(v10, v7, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L21cb84.  v4:= temp;
  #L21cb86.  v5:= -1I;
  #L21cb88.  if v4 == v5 then goto L21cbba;
  #L21cb8c.  v5:= v1 + 4000;
  #L21cb90.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L21cb96.  v0:= temp;
  #L21cb98.  v5:= "OkHttp" @kind object;
  #L21cb9c.  call temp:= `substring`(v10, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L21cba2.  v6:= temp @kind object;
  #L21cba4.  call temp:= `println`(v3, v5, v6) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L21cbaa.  v1:= v0;
  #L21cbac.  if v1 < v4 then goto L21cb8c;
  #L21cbb0.  v1:= v1 + 1;
  #L21cbb4.  goto L21cb7a;
  #L21cbb6.  v3:= 3I;
  #L21cbb8.  goto L21cb3a;
  #L21cbba.  v4:= v2;
  #L21cbbc.  goto L21cb8c;
  #L21cbbe.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `java.lang.String` v4 @kind object @name `message`, `java.lang.Object` v5 @kind object @name `stackTrace`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21cbd0.  v1:= v3.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L21cbd4.  call temp:= `warnIfOpen`(v1, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.warnIfOpen:(Ljava/lang/Object;)Z` @kind virtual;
  #L21cbda.  v0:= temp;
  #L21cbdc.  if v0 != 0 then goto L21cbea;
  #L21cbe0.  v1:= 5I;
  #L21cbe2.  v2:= 0I;
  #L21cbe4.  call `log`(v3, v1, v4, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L21cbea.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.AndroidPlatform` v7 @kind this, `javax.net.ssl.SSLSocketFactory` v8 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/AndroidPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21cbfc.  v4:= v7.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` @kind object;
  #L21cc00.  v5:= "sslParameters" @kind object;
  #L21cc04.  call temp:= `readFieldOrNull`(v8, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21cc0a.  v0:= temp @kind object;
  #L21cc0c.  if v0 != 0 then goto L21cc3a;
  #Try_start0.  
  #L21cc10.  v4:= "com.google.android.gms.org.conscrypt.SSLParametersImpl" @kind object;
  #L21cc14.  v5:= 0I;
  #L21cc16.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21cc1c.  v6:= temp @kind object;
  #L21cc1e.  call temp:= `getClassLoader`(v6) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L21cc24.  v6:= temp @kind object;
  #L21cc26.  call temp:= `forName`(v4, v5, v6) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L21cc2c.  v2:= temp @kind object;
  #L21cc2e.  v4:= "sslParameters" @kind object;
  #L21cc32.  call temp:= `readFieldOrNull`(v8, v2, v4) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #Try_end0.  
  #L21cc38.  v0:= temp @kind object;
  #L21cc3a.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21cc3e.  v5:= "x509TrustManager" @kind object;
  #L21cc42.  call temp:= `readFieldOrNull`(v0, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21cc48.  v3:= temp @kind object;
  #L21cc4a.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #L21cc4e.  if v3 == 0 then goto L21cc60;
  #L21cc52.  return v3 @kind object;
  #L21cc54.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L21cc56.  call temp:= `trustManager`(v7, v8) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind super;
  #L21cc5c.  v3:= temp @kind object;
  #L21cc5e.  goto L21cc52;
  #L21cc60.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L21cc64.  v5:= "trustManager" @kind object;
  #L21cc68.  call temp:= `readFieldOrNull`(v0, v4, v5) @signature `Lokhttp3/internal/platform/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L21cc6e.  v4:= temp @kind object;
  #L21cc70.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L21cc74.  v3:= v4 @kind object;
  #L21cc76.  goto L21cc52;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L21cc54;
}

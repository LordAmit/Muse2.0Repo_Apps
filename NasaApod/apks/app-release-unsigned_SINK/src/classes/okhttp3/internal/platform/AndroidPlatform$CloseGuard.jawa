record `okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind class @AccessFlag FINAL {
  `java.lang.reflect.Method` `okhttp3.internal.platform.AndroidPlatform$CloseGuard.getMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.AndroidPlatform$CloseGuard.openMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.AndroidPlatform$CloseGuard.warnIfOpenMethod` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.AndroidPlatform$CloseGuard` v0 @kind this, `java.lang.reflect.Method` v1 @kind object @name `getMethod`, `java.lang.reflect.Method` v2 @kind object @name `openMethod`, `java.lang.reflect.Method` v3 @kind object @name `warnIfOpenMethod`) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1a9eec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a9ef2.  v0.`okhttp3.internal.platform.AndroidPlatform$CloseGuard.getMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1a9ef6.  v0.`okhttp3.internal.platform.AndroidPlatform$CloseGuard.openMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L1a9efa.  v0.`okhttp3.internal.platform.AndroidPlatform$CloseGuard.warnIfOpenMethod` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L1a9efe.  return @kind void;
}
procedure `okhttp3.internal.platform.AndroidPlatform$CloseGuard` `get`() @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.get:()Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #Try_start0.  
  #L1a9f10.  v5:= "dalvik.system.CloseGuard" @kind object;
  #L1a9f14.  call temp:= `forName`(v5) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1a9f1a.  v0:= temp @kind object;
  #L1a9f1c.  v5:= "get" @kind object;
  #L1a9f20.  v6:= 0I;
  #L1a9f22.  v6:= new `java.lang.Class`[v6];
  #L1a9f26.  call temp:= `getMethod`(v0, v5, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1a9f2c.  v1:= temp @kind object;
  #L1a9f2e.  v5:= "open" @kind object;
  #L1a9f32.  v6:= 1I;
  #L1a9f34.  v6:= new `java.lang.Class`[v6];
  #L1a9f38.  v7:= 0I;
  #L1a9f3a.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L1a9f3e.  v6[v7]:= v8 @kind object;
  #L1a9f42.  call temp:= `getMethod`(v0, v5, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1a9f48.  v3:= temp @kind object;
  #L1a9f4a.  v5:= "warnIfOpen" @kind object;
  #L1a9f4e.  v6:= 0I;
  #L1a9f50.  v6:= new `java.lang.Class`[v6];
  #L1a9f54.  call temp:= `getMethod`(v0, v5, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #Try_end0.  
  #L1a9f5a.  v4:= temp @kind object;
  #L1a9f5c.  v5:= new `okhttp3.internal.platform.AndroidPlatform$CloseGuard`;
  #L1a9f60.  call `<init>`(v5, v1, v3, v4) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L1a9f66.  return v5 @kind object;
  #L1a9f68.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L1a9f6a.  v1:= 0I;
  #L1a9f6c.  v3:= 0I;
  #L1a9f6e.  v4:= 0I;
  #L1a9f70.  goto L1a9f5c;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L1a9f68;
}
procedure `java.lang.Object` `createAndOpen`(`okhttp3.internal.platform.AndroidPlatform$CloseGuard` v5 @kind this, `java.lang.String` v6 @kind object @name `closer`) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.createAndOpen:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a9f94.  v1:= 0I;
  #L1a9f96.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform$CloseGuard.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L1a9f9a.  if v2 == 0 then goto L1a9fcc;
  #Try_start0.  
  #L1a9f9e.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform$CloseGuard.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L1a9fa2.  v3:= 0I;
  #L1a9fa4.  v4:= 0I;
  #L1a9fa6.  v4:= new `java.lang.Object`[v4];
  #L1a9faa.  call temp:= `invoke`(v2, v3, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a9fb0.  v0:= temp @kind object;
  #L1a9fb2.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform$CloseGuard.openMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L1a9fb6.  v3:= 1I;
  #L1a9fb8.  v3:= new `java.lang.Object`[v3];
  #L1a9fbc.  v4:= 0I;
  #L1a9fbe.  v3[v4]:= v6 @kind object;
  #L1a9fc2.  call temp:= `invoke`(v2, v0, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L1a9fc8.  return v0 @kind object;
  #L1a9fca.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L1a9fcc.  v0:= v1 @kind object;
  #L1a9fce.  goto L1a9fc8;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L1a9fca;
}
procedure `boolean` `warnIfOpen`(`okhttp3.internal.platform.AndroidPlatform$CloseGuard` v3 @kind this, `java.lang.Object` v4 @kind object @name `closeGuardInstance`) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.warnIfOpen:(Ljava/lang/Object;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1a9ff0.  v0:= 0I;
  #L1a9ff2.  if v4 == 0 then goto L1aa008;
  #Try_start0.  
  #L1a9ff6.  v1:= v3.`okhttp3.internal.platform.AndroidPlatform$CloseGuard.warnIfOpenMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L1a9ffa.  v2:= 0I;
  #L1a9ffc.  v2:= new `java.lang.Object`[v2];
  #L1aa000.  call temp:= `invoke`(v1, v4, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L1aa006.  v0:= 1I;
  #L1aa008.  return v0;
  #L1aa00a.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L1aa00c.  goto L1aa008;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L1aa00a;
}

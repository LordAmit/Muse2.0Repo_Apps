record `okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @AccessFlag ;
  `long` `okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @AccessFlag ;
  `int` `okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @AccessFlag ;
  `okhttp3.internal.ws.WebSocketWriter` `okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v0 @kind this, `okhttp3.internal.ws.WebSocketWriter` v1 @kind object @name `this$0`) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21e54c.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` := v1 @kind object;
  #L21e550.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21e556.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21e568.  v5:= 1I;
  #L21e56a.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21e56e.  if v0 == 0 then goto L21e582;
  #L21e572.  v0:= new `java.io.IOException`;
  #L21e576.  v1:= "closed" @kind object;
  #L21e57a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21e580.  throw v0;
  #L21e582.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e586.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21e58a.  v2:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e58e.  v2:= v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21e592.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21e598.  v2:= temp @kind wide;
  #L21e59a.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21e59e.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21e5a4.  v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v5 @kind boolean;
  #L21e5a8.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e5ac.  v1:= 0I;
  #L21e5ae.  v0.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v1 @kind boolean;
  #L21e5b2.  return @kind void;
}
procedure `void` `flush`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21e5c4.  v5:= 0I;
  #L21e5c6.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21e5ca.  if v0 == 0 then goto L21e5de;
  #L21e5ce.  v0:= new `java.io.IOException`;
  #L21e5d2.  v1:= "closed" @kind object;
  #L21e5d6.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21e5dc.  throw v0;
  #L21e5de.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e5e2.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21e5e6.  v2:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e5ea.  v2:= v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21e5ee.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21e5f4.  v2:= temp @kind wide;
  #L21e5f6.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21e5fa.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21e600.  v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v5 @kind boolean;
  #L21e604.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21e618.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e61c.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L21e620.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L21e626.  v0:= temp @kind object;
  #L21e628.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v12 @kind this, `okio.Buffer` v13 @kind object @name `source`, `long` v14 @name `byteCount`) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L21e63c.  v5:= 0I;
  #L21e63e.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` @kind boolean;
  #L21e642.  if v0 == 0 then goto L21e656;
  #L21e646.  v0:= new `java.io.IOException`;
  #L21e64a.  v1:= "closed" @kind object;
  #L21e64e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21e654.  throw v0;
  #L21e656.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e65a.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21e65e.  call `write`(v0, v13, v14) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L21e664.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21e668.  if v0 == 0 then goto L21e6d8;
  #L21e66c.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` @kind wide;
  #L21e670.  v8:= -1L;
  #L21e674.  v0:= lcmp(v0, v8);
  #L21e678.  if v0 == 0 then goto L21e6d8;
  #L21e67c.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e680.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21e684.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21e68a.  v0:= temp @kind wide;
  #L21e68c.  v8:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` @kind wide;
  #L21e690.  v10:= 8192L;
  #L21e694.  v8:= v8 - v10 @kind long;
  #L21e696.  v0:= lcmp(v0, v8);
  #L21e69a.  if v0 <= 0 then goto L21e6d8;
  #L21e69e.  v6:= 1I;
  #L21e6a0.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e6a4.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L21e6a8.  call temp:= `completeSegmentByteCount`(v0) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L21e6ae.  v2:= temp @kind wide;
  #L21e6b0.  v0:= 0L;
  #L21e6b4.  v0:= lcmp(v2, v0);
  #L21e6b8.  if v0 <= 0 then goto L21e6d6;
  #L21e6bc.  if v6 != 0 then goto L21e6d6;
  #L21e6c0.  v0:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.this$0` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L21e6c4.  v1:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int`;
  #L21e6c8.  v4:= v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` @kind boolean;
  #L21e6cc.  call `writeMessageFrame`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @kind virtual;
  #L21e6d2.  v12.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v5 @kind boolean;
  #L21e6d6.  return @kind void;
  #L21e6d8.  v6:= v5;
  #L21e6da.  goto L21e6a0;
}

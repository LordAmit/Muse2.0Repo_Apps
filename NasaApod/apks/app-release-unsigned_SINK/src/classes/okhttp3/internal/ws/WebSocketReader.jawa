record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketReader.closed` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.frameCallback` @AccessFlag FINAL;
  `long` `okhttp3.internal.ws.WebSocketReader.frameLength` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isClient` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isControlFrame` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isFinalFrame` @AccessFlag ;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketReader.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskKey` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.ws.WebSocketReader.opcode` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v2 @kind this, `boolean` v3 @name `isClient`, `okio.BufferedSource` v4 @kind object @name `source`, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v5 @kind object @name `frameCallback`) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ac370.  v1:= 0I;
  #L1ac372.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ac378.  v0:= new `okio.Buffer`;
  #L1ac37c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ac382.  v2.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ac386.  v0:= new `okio.Buffer`;
  #L1ac38a.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ac390.  v2.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ac394.  if v4 != 0 then goto L1ac3a8;
  #L1ac398.  v0:= new `java.lang.NullPointerException`;
  #L1ac39c.  v1:= "source == null" @kind object;
  #L1ac3a0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac3a6.  throw v0;
  #L1ac3a8.  if v5 != 0 then goto L1ac3bc;
  #L1ac3ac.  v0:= new `java.lang.NullPointerException`;
  #L1ac3b0.  v1:= "frameCallback == null" @kind object;
  #L1ac3b4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac3ba.  throw v0;
  #L1ac3bc.  v2.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` := v3 @kind boolean;
  #L1ac3c0.  v2.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` := v4 @kind object;
  #L1ac3c4.  v2.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v5 @kind object;
  #L1ac3c8.  if v3 == 0 then goto L1ac3dc;
  #L1ac3cc.  v0:= v1 @kind object;
  #L1ac3ce.  v2.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] := v0 @kind object;
  #L1ac3d2.  if v3 == 0 then goto L1ac3e4;
  #L1ac3d6.  v2.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v1 @kind object;
  #L1ac3da.  return @kind void;
  #L1ac3dc.  v0:= 4I;
  #L1ac3de.  v0:= new `byte`[v0];
  #L1ac3e2.  goto L1ac3ce;
  #L1ac3e4.  v1:= new `okio.Buffer$UnsafeCursor`;
  #L1ac3e8.  call `<init>`(v1) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1ac3ee.  goto L1ac3d6;
}
procedure `void` `readControlFrame`(`okhttp3.internal.ws.WebSocketReader` v12 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ac400.  v10:= 0L;
  #L1ac404.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac408.  v5:= lcmp(v6, v10);
  #L1ac40c.  if v5 <= 0 then goto L1ac45a;
  #L1ac410.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac414.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac418.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac41c.  call `readFully`(v5, v6, v8) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1ac422.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ac426.  if v5 != 0 then goto L1ac45a;
  #L1ac42a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac42e.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac432.  call temp:= `readAndWriteUnsafe`(v5, v6) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ac438.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac43c.  call temp:= `seek`(v5, v10) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ac442.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac446.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ac44a.  call `toggleMask`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ac450.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac454.  call `close`(v5) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ac45a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac45e.  goto L1ac54c;
  #L1ac464.  v5:= new `java.net.ProtocolException`;
  #L1ac468.  v6:= new `java.lang.StringBuilder`;
  #L1ac46c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac472.  v7:= "Unknown control opcode: " @kind object;
  #L1ac476.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac47c.  v6:= temp @kind object;
  #L1ac47e.  v7:= v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac482.  call temp:= `toHexString`(v7) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ac488.  v7:= temp @kind object;
  #L1ac48a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac490.  v6:= temp @kind object;
  #L1ac492.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac498.  v6:= temp @kind object;
  #L1ac49a.  call `<init>`(v5, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac4a0.  throw v5;
  #L1ac4a2.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac4a6.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac4aa.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ac4b0.  v6:= temp @kind object;
  #L1ac4b2.  call `onReadPing`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L1ac4b8.  return @kind void;
  #L1ac4ba.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac4be.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac4c2.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ac4c8.  v6:= temp @kind object;
  #L1ac4ca.  call `onReadPong`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L1ac4d0.  goto L1ac4b8;
  #L1ac4d2.  v2:= 1005I;
  #L1ac4d6.  v4:= "" @kind object;
  #L1ac4da.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac4de.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ac4e4.  v0:= temp @kind wide;
  #L1ac4e6.  v6:= 1L;
  #L1ac4ea.  v5:= lcmp(v0, v6);
  #L1ac4ee.  if v5 != 0 then goto L1ac502;
  #L1ac4f2.  v5:= new `java.net.ProtocolException`;
  #L1ac4f6.  v6:= "Malformed close payload length of 1." @kind object;
  #L1ac4fa.  call `<init>`(v5, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac500.  throw v5;
  #L1ac502.  v5:= lcmp(v0, v10);
  #L1ac506.  if v5 == 0 then goto L1ac53a;
  #L1ac50a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac50e.  call temp:= `readShort`(v5) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L1ac514.  v2:= temp;
  #L1ac516.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac51a.  call temp:= `readUtf8`(v5) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1ac520.  v4:= temp @kind object;
  #L1ac522.  call temp:= `closeCodeExceptionMessage`(v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L1ac528.  v3:= temp @kind object;
  #L1ac52a.  if v3 == 0 then goto L1ac53a;
  #L1ac52e.  v5:= new `java.net.ProtocolException`;
  #L1ac532.  call `<init>`(v5, v3) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac538.  throw v5;
  #L1ac53a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac53e.  call `onReadClose`(v5, v2, v4) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L1ac544.  v5:= 1I;
  #L1ac546.  v12.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` := v5 @kind boolean;
  #L1ac54a.  goto L1ac4b8;
  #L1ac54c.  switch v5
                  | 8 => goto L1ac4d2
                  | 9 => goto L1ac4a2
                  | 10 => goto L1ac4ba
                  | else => goto L1ac464;
}
procedure `void` `readHeader`(`okhttp3.internal.ws.WebSocketReader` v12 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ac570.  v9:= 1I;
  #L1ac572.  v10:= 0I;
  #L1ac574.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ac578.  if v8 == 0 then goto L1ac58c;
  #L1ac57c.  v8:= new `java.io.IOException`;
  #L1ac580.  v9:= "closed" @kind object;
  #L1ac584.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac58a.  throw v8;
  #L1ac58c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac590.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ac596.  v8:= temp @kind object;
  #L1ac598.  call temp:= `timeoutNanos`(v8) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1ac59e.  v6:= temp @kind wide;
  #L1ac5a0.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac5a4.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ac5aa.  v8:= temp @kind object;
  #L1ac5ac.  call temp:= `clearTimeout`(v8) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #Try_start0.  
  #L1ac5b2.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac5b6.  call temp:= `readByte`(v8) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #Try_end0.  
  #L1ac5bc.  v8:= temp;
  #L1ac5be.  v0:= v8 ^& 255;
  #L1ac5c2.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac5c6.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ac5cc.  v8:= temp @kind object;
  #L1ac5ce.  v11:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ac5d2.  call temp:= `timeout`(v8, v6, v11) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1ac5d8.  v8:= v0 ^& 15;
  #L1ac5dc.  v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int` := v8;
  #L1ac5e0.  v8:= v0 ^& 128;
  #L1ac5e4.  if v8 == 0 then goto L1ac636;
  #L1ac5e8.  v8:= v9;
  #L1ac5ea.  v12.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` := v8 @kind boolean;
  #L1ac5ee.  v8:= v0 ^& 8;
  #L1ac5f2.  if v8 == 0 then goto L1ac63a;
  #L1ac5f6.  v8:= v9;
  #L1ac5f8.  v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` := v8 @kind boolean;
  #L1ac5fc.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ac600.  if v8 == 0 then goto L1ac63e;
  #L1ac604.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L1ac608.  if v8 != 0 then goto L1ac63e;
  #L1ac60c.  v8:= new `java.net.ProtocolException`;
  #L1ac610.  v9:= "Control frames must be final." @kind object;
  #L1ac614.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac61a.  throw v8;
  #L1ac61c.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ac61e.  v9:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac622.  call temp:= `timeout`(v9) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ac628.  v9:= temp @kind object;
  #L1ac62a.  v10:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ac62e.  call temp:= `timeout`(v9, v6, v10) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1ac634.  throw v8;
  #L1ac636.  v8:= v10;
  #L1ac638.  goto L1ac5ea;
  #L1ac63a.  v8:= v10;
  #L1ac63c.  goto L1ac5f8;
  #L1ac63e.  v8:= v0 ^& 64;
  #L1ac642.  if v8 == 0 then goto L1ac678;
  #L1ac646.  v3:= v9;
  #L1ac648.  v8:= v0 ^& 32;
  #L1ac64c.  if v8 == 0 then goto L1ac67c;
  #L1ac650.  v4:= v9;
  #L1ac652.  v8:= v0 ^& 16;
  #L1ac656.  if v8 == 0 then goto L1ac680;
  #L1ac65a.  v5:= v9;
  #L1ac65c.  if v3 != 0 then goto L1ac668;
  #L1ac660.  if v4 != 0 then goto L1ac668;
  #L1ac664.  if v5 == 0 then goto L1ac684;
  #L1ac668.  v8:= new `java.net.ProtocolException`;
  #L1ac66c.  v9:= "Reserved flags are unsupported." @kind object;
  #L1ac670.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac676.  throw v8;
  #L1ac678.  v3:= v10;
  #L1ac67a.  goto L1ac648;
  #L1ac67c.  v4:= v10;
  #L1ac67e.  goto L1ac652;
  #L1ac680.  v5:= v10;
  #L1ac682.  goto L1ac65c;
  #L1ac684.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac688.  call temp:= `readByte`(v8) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1ac68e.  v8:= temp;
  #L1ac690.  v1:= v8 ^& 255;
  #L1ac694.  v8:= v1 ^& 128;
  #L1ac698.  if v8 == 0 then goto L1ac6be;
  #L1ac69c.  v2:= v9;
  #L1ac69e.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ac6a2.  if v2 != v8 then goto L1ac6c8;
  #L1ac6a6.  v9:= new `java.net.ProtocolException`;
  #L1ac6aa.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ac6ae.  if v8 == 0 then goto L1ac6c2;
  #L1ac6b2.  v8:= "Server-sent frames must not be masked." @kind object;
  #L1ac6b6.  call `<init>`(v9, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac6bc.  throw v9;
  #L1ac6be.  v2:= v10;
  #L1ac6c0.  goto L1ac69e;
  #L1ac6c2.  v8:= "Client-sent frames must be masked." @kind object;
  #L1ac6c6.  goto L1ac6b6;
  #L1ac6c8.  v8:= v1 ^& 127;
  #L1ac6cc.  v8:= (`long`) v8 @kind i2l;
  #L1ac6ce.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ac6d2.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac6d6.  v10:= 126L;
  #L1ac6da.  v8:= lcmp(v8, v10);
  #L1ac6de.  if v8 != 0 then goto L1ac724;
  #L1ac6e2.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac6e6.  call temp:= `readShort`(v8) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L1ac6ec.  v8:= temp;
  #L1ac6ee.  v8:= (`long`) v8 @kind i2l;
  #L1ac6f0.  v10:= 65535L;
  #L1ac6f6.  v8:= v8 ^& v10 @kind long;
  #L1ac6f8.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ac6fc.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ac700.  if v8 == 0 then goto L1ac79e;
  #L1ac704.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac708.  v10:= 125L;
  #L1ac70c.  v8:= lcmp(v8, v10);
  #L1ac710.  if v8 <= 0 then goto L1ac79e;
  #L1ac714.  v8:= new `java.net.ProtocolException`;
  #L1ac718.  v9:= "Control frame must be less than 125B." @kind object;
  #L1ac71c.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac722.  throw v8;
  #L1ac724.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac728.  v10:= 127L;
  #L1ac72c.  v8:= lcmp(v8, v10);
  #L1ac730.  if v8 != 0 then goto L1ac6fc;
  #L1ac734.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac738.  call temp:= `readLong`(v8) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L1ac73e.  v8:= temp @kind wide;
  #L1ac740.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ac744.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac748.  v10:= 0L;
  #L1ac74c.  v8:= lcmp(v8, v10);
  #L1ac750.  if v8 >= 0 then goto L1ac6fc;
  #L1ac754.  v8:= new `java.net.ProtocolException`;
  #L1ac758.  v9:= new `java.lang.StringBuilder`;
  #L1ac75c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac762.  v10:= "Frame length 0x" @kind object;
  #L1ac766.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac76c.  v9:= temp @kind object;
  #L1ac76e.  v10:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac772.  call temp:= `toHexString`(v10) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L1ac778.  v10:= temp @kind object;
  #L1ac77a.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac780.  v9:= temp @kind object;
  #L1ac782.  v10:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L1ac786.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac78c.  v9:= temp @kind object;
  #L1ac78e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac794.  v9:= temp @kind object;
  #L1ac796.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac79c.  throw v8;
  #L1ac79e.  if v2 == 0 then goto L1ac7b0;
  #L1ac7a2.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac7a6.  v9:= v12.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ac7aa.  call `readFully`(v8, v9) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L1ac7b0.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1ac61c;
}
procedure `void` `readMessage`(`okhttp3.internal.ws.WebSocketReader` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ac7d0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ac7d4.  if v0 == 0 then goto L1ac7e8;
  #L1ac7d8.  v0:= new `java.io.IOException`;
  #L1ac7dc.  v1:= "closed" @kind object;
  #L1ac7e0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac7e6.  throw v0;
  #L1ac7e8.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac7ec.  v2:= 0L;
  #L1ac7f0.  v0:= lcmp(v0, v2);
  #L1ac7f4.  if v0 <= 0 then goto L1ac854;
  #L1ac7f8.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac7fc.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac800.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac804.  call `readFully`(v0, v1, v2) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1ac80a.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ac80e.  if v0 != 0 then goto L1ac854;
  #L1ac812.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac816.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac81a.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ac820.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac824.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac828.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ac82e.  v2:= temp @kind wide;
  #L1ac830.  v4:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac834.  v2:= v2 - v4 @kind long;
  #L1ac836.  call temp:= `seek`(v0, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ac83c.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac840.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ac844.  call `toggleMask`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ac84a.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac84e.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ac854.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L1ac858.  if v0 == 0 then goto L1ac85e;
  #L1ac85c.  return @kind void;
  #L1ac85e.  call `readUntilNonControlFrame`(v6) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @kind direct;
  #L1ac864.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac868.  if v0 == 0 then goto L1ac7d0;
  #L1ac86c.  v0:= new `java.net.ProtocolException`;
  #L1ac870.  v1:= new `java.lang.StringBuilder`;
  #L1ac874.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac87a.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L1ac87e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac884.  v1:= temp @kind object;
  #L1ac886.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac88a.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ac890.  v2:= temp @kind object;
  #L1ac892.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac898.  v1:= temp @kind object;
  #L1ac89a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac8a0.  v1:= temp @kind object;
  #L1ac8a2.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac8a8.  throw v0;
}
procedure `void` `readMessageFrame`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ac8bc.  v2:= 1I;
  #L1ac8be.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac8c2.  if v0 == v2 then goto L1ac906;
  #L1ac8c6.  v1:= 2I;
  #L1ac8c8.  if v0 == v1 then goto L1ac906;
  #L1ac8cc.  v1:= new `java.net.ProtocolException`;
  #L1ac8d0.  v2:= new `java.lang.StringBuilder`;
  #L1ac8d4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac8da.  v3:= "Unknown opcode: " @kind object;
  #L1ac8de.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac8e4.  v2:= temp @kind object;
  #L1ac8e6.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ac8ec.  v3:= temp @kind object;
  #L1ac8ee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac8f4.  v2:= temp @kind object;
  #L1ac8f6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac8fc.  v2:= temp @kind object;
  #L1ac8fe.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac904.  throw v1;
  #L1ac906.  call `readMessage`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @kind direct;
  #L1ac90c.  if v0 != v2 then goto L1ac928;
  #L1ac910.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac914.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac918.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1ac91e.  v2:= temp @kind object;
  #L1ac920.  call `onReadMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L1ac926.  return @kind void;
  #L1ac928.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac92c.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac930.  call temp:= `readByteString`(v2) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ac936.  v2:= temp @kind object;
  #L1ac938.  call `onReadMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L1ac93e.  goto L1ac926;
}
procedure `void` `readUntilNonControlFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ac950.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ac954.  if v0 != 0 then goto L1ac966;
  #L1ac958.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L1ac95e.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ac962.  if v0 != 0 then goto L1ac968;
  #L1ac966.  return @kind void;
  #L1ac968.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L1ac96e.  goto L1ac950;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag  {
    temp;
    v0;

  #L1ac980.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L1ac986.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ac98a.  if v0 == 0 then goto L1ac996;
  #L1ac98e.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L1ac994.  return @kind void;
  #L1ac996.  call `readMessageFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @kind direct;
  #L1ac99c.  goto L1ac994;
}

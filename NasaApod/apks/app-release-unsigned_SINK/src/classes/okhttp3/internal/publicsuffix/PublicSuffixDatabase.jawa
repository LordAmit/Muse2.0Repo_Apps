record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @AccessFlag PRIVATE;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EXCEPTION_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PUBLIC_SUFFIX_RESOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aa988.  v3:= 1I;
  #L1aa98a.  v2:= 0I;
  #L1aa98c.  v0:= new `byte`[v3];
  #L1aa990.  v1:= 42I;
  #L1aa994.  v0[v2]:= v1 @kind byte;
  #L1aa998.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] := v0 @kind object;
  #L1aa99c.  v0:= new `java.lang.String`[v2];
  #L1aa9a0.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L1aa9a4.  v0:= new `java.lang.String`[v3];
  #L1aa9a8.  v1:= "*" @kind object;
  #L1aa9ac.  v0[v2]:= v1 @kind object;
  #L1aa9b0.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L1aa9b4.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L1aa9b8.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L1aa9be.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L1aa9c2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1aa9d4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aa9da.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L1aa9de.  v1:= 0I;
  #L1aa9e0.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L1aa9e6.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L1aa9ea.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L1aa9ee.  v1:= 1I;
  #L1aa9f0.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L1aa9f6.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L1aa9fa.  return @kind void;
}
procedure `java.lang.String` `binarySearchBytes`(`byte`[] v21 @kind object @name `bytesToSearch`, `byte`[][] v22 @kind object @name `labels`, `int` v23 @name `labelIndex`) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L1aaa0c.  v13:= 0I;
  #L1aaa0e.  v0:= v21 @kind object;
  #L1aaa12.  v10:= length @variable v0;
  #L1aaa14.  v14:= 0I;
  #L1aaa16.  if v13 >= v10 then goto L1aab98;
  #L1aaa1a.  v19:= v13 + v10 @kind int;
  #L1aaa1e.  v15:= v19 / 2;
  #L1aaa22.  v19:= -1I;
  #L1aaa26.  v0:= v19;
  #L1aaa2a.  if v15 <= v0 then goto L1aaa48;
  #L1aaa2e.  v19:= v21[v15] @kind byte;
  #L1aaa32.  v20:= 10I;
  #L1aaa36.  v0:= v19;
  #L1aaa3a.  v1:= v20;
  #L1aaa3e.  if v0 == v1 then goto L1aaa48;
  #L1aaa42.  v15:= v15 + -1;
  #L1aaa46.  goto L1aaa22;
  #L1aaa48.  v15:= v15 + 1;
  #L1aaa4c.  v8:= 1I;
  #L1aaa4e.  v19:= v15 + v8 @kind int;
  #L1aaa52.  v19:= v21[v19] @kind byte;
  #L1aaa56.  v20:= 10I;
  #L1aaa5a.  v0:= v19;
  #L1aaa5e.  v1:= v20;
  #L1aaa62.  if v0 == v1 then goto L1aaa6c;
  #L1aaa66.  v8:= v8 + 1;
  #L1aaa6a.  goto L1aaa4e;
  #L1aaa6c.  v19:= v15 + v8 @kind int;
  #L1aaa70.  v18:= v19 - v15 @kind int;
  #L1aaa74.  v7:= v23;
  #L1aaa78.  v6:= 0I;
  #L1aaa7a.  v16:= 0I;
  #L1aaa7e.  v9:= 0I;
  #L1aaa80.  if v9 == 0 then goto L1aaaac;
  #L1aaa84.  v3:= 46I;
  #L1aaa88.  v9:= 0I;
  #L1aaa8a.  v19:= v15 + v16 @kind int;
  #L1aaa8e.  v19:= v21[v19] @kind byte;
  #L1aaa92.  v0:= v19;
  #L1aaa96.  v4:= v0 ^& 255;
  #L1aaa9a.  v5:= v3 - v4 @kind int;
  #L1aaa9e.  if v5 == 0 then goto L1aaabe;
  #L1aaaa2.  if v5 >= 0 then goto L1aab08;
  #L1aaaa6.  v10:= v15 + -1;
  #L1aaaaa.  goto L1aaa16;
  #L1aaaac.  v19:= v22[v7] @kind object;
  #L1aaab0.  v19:= v19[v6] @kind byte;
  #L1aaab4.  v0:= v19;
  #L1aaab8.  v3:= v0 ^& 255;
  #L1aaabc.  goto L1aaa8a;
  #L1aaabe.  v16:= v16 + 1;
  #L1aaac2.  v6:= v6 + 1;
  #L1aaac6.  v0:= v16;
  #L1aaaca.  v1:= v18;
  #L1aaace.  if v0 == v1 then goto L1aaaa2;
  #L1aaad2.  v19:= v22[v7] @kind object;
  #L1aaad6.  v0:= v19 @kind object;
  #L1aaada.  v0:= length @variable v0;
  #L1aaadc.  v19:= v0;
  #L1aaae0.  v0:= v19;
  #L1aaae4.  if v0 != v6 then goto L1aaa80;
  #L1aaae8.  v0:= v22 @kind object;
  #L1aaaec.  v0:= length @variable v0;
  #L1aaaee.  v19:= v0;
  #L1aaaf2.  v19:= v19 + -1;
  #L1aaaf6.  v0:= v19;
  #L1aaafa.  if v7 == v0 then goto L1aaaa2;
  #L1aaafe.  v7:= v7 + 1;
  #L1aab02.  v6:= -1I;
  #L1aab04.  v9:= 1I;
  #L1aab06.  goto L1aaa80;
  #L1aab08.  if v5 <= 0 then goto L1aab16;
  #L1aab0c.  v19:= v15 + v8 @kind int;
  #L1aab10.  v13:= v19 + 1;
  #L1aab14.  goto L1aaa16;
  #L1aab16.  v17:= v18 - v16 @kind int;
  #L1aab1a.  v19:= v22[v7] @kind object;
  #L1aab1e.  v0:= v19 @kind object;
  #L1aab22.  v0:= length @variable v0;
  #L1aab24.  v19:= v0;
  #L1aab28.  v12:= v19 - v6 @kind int;
  #L1aab2c.  v11:= v7 + 1;
  #L1aab30.  v0:= v22 @kind object;
  #L1aab34.  v0:= length @variable v0;
  #L1aab36.  v19:= v0;
  #L1aab3a.  v0:= v19;
  #L1aab3e.  if v11 >= v0 then goto L1aab5a;
  #L1aab42.  v19:= v22[v11] @kind object;
  #L1aab46.  v0:= v19 @kind object;
  #L1aab4a.  v0:= length @variable v0;
  #L1aab4c.  v19:= v0;
  #L1aab50.  v12:= v12 + v19 @kind int;
  #L1aab54.  v11:= v11 + 1;
  #L1aab58.  goto L1aab30;
  #L1aab5a.  v0:= v17;
  #L1aab5e.  if v12 >= v0 then goto L1aab6a;
  #L1aab62.  v10:= v15 + -1;
  #L1aab66.  goto L1aaa16;
  #L1aab6a.  v0:= v17;
  #L1aab6e.  if v12 <= v0 then goto L1aab7e;
  #L1aab72.  v19:= v15 + v8 @kind int;
  #L1aab76.  v13:= v19 + 1;
  #L1aab7a.  goto L1aaa16;
  #L1aab7e.  v14:= new `java.lang.String`;
  #L1aab82.  v19:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1aab86.  v0:= v21 @kind object;
  #L1aab8a.  v1:= v18;
  #L1aab8e.  v2:= v19 @kind object;
  #L1aab92.  call `<init>`(v14, v0, v15, v1, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L1aab98.  return v14 @kind object;
}
procedure `java.lang.String`[] `findMatchingRule`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v13 @kind this, `java.lang.String`[] v14 @kind object @name `domainLabels`) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1aabac.  v12:= 1I;
  #L1aabae.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1aabb2.  call temp:= `get`(v10) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L1aabb8.  v10:= temp;
  #L1aabba.  if v10 != 0 then goto L1aabf6;
  #L1aabbe.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1aabc2.  v11:= 0I;
  #L1aabc4.  call temp:= `compareAndSet`(v10, v11, v12) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L1aabca.  v10:= temp;
  #L1aabcc.  if v10 == 0 then goto L1aabf6;
  #L1aabd0.  call `readTheListUninterruptibly`(v13) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @kind direct;
  #L1aabd6.  @monitorenter v13
  #Try_start0.  
  #L1aabd8.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L1aabdc.  if v10 != 0 then goto L1aac06;
  #L1aabe0.  v10:= new `java.lang.IllegalStateException`;
  #L1aabe4.  v11:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L1aabe8.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aabee.  throw v10;
  #L1aabf0.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1aabf2.  @monitorexit v13
  #Try_end0.  
  #L1aabf4.  throw v10;
  #Try_start1.  
  #L1aabf6.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L1aabfa.  call `await`(v10) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #Try_end1.  
  #L1aac00.  goto L1aabd6;
  #L1aac02.  v10:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L1aac04.  goto L1aabd6;
  #Try_start2.  
  #L1aac06.  @monitorexit v13
  #Try_end2.  
  #L1aac08.  v10:= length @variable v14;
  #L1aac0a.  v0:= new `byte`[][v10];
  #L1aac0e.  v4:= 0I;
  #L1aac10.  v10:= length @variable v14;
  #L1aac12.  if v4 >= v10 then goto L1aac30;
  #L1aac16.  v10:= v14[v4] @kind object;
  #L1aac1a.  v11:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1aac1e.  call temp:= `getBytes`(v10, v11) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1aac24.  v10:= temp @kind object;
  #L1aac26.  v0[v4]:= v10 @kind object;
  #L1aac2a.  v4:= v4 + 1;
  #L1aac2e.  goto L1aac10;
  #L1aac30.  v1:= 0I;
  #L1aac32.  v4:= 0I;
  #L1aac34.  v10:= length @variable v0;
  #L1aac36.  if v4 >= v10 then goto L1aac4c;
  #L1aac3a.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L1aac3e.  call temp:= `binarySearchBytes`(v10, v0, v4) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L1aac44.  v7:= temp @kind object;
  #L1aac46.  if v7 == 0 then goto L1aace2;
  #L1aac4a.  v1:= v7 @kind object;
  #L1aac4c.  v8:= 0I;
  #L1aac4e.  v10:= length @variable v0;
  #L1aac50.  if v10 <= v12 then goto L1aac86;
  #L1aac54.  call temp:= `clone`(v0) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L1aac5a.  v6:= temp @kind object;
  #L1aac5c.  v6:= (`byte`[][]) v6 @kind object;
  #L1aac60.  v5:= 0I;
  #L1aac62.  v10:= length @variable v6;
  #L1aac64.  v10:= v10 + -1;
  #L1aac68.  if v5 >= v10 then goto L1aac86;
  #L1aac6c.  v10:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] @kind object;
  #L1aac70.  v6[v5]:= v10 @kind object;
  #L1aac74.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L1aac78.  call temp:= `binarySearchBytes`(v10, v6, v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L1aac7e.  v7:= temp @kind object;
  #L1aac80.  if v7 == 0 then goto L1aace8;
  #L1aac84.  v8:= v7 @kind object;
  #L1aac86.  v3:= 0I;
  #L1aac88.  if v8 == 0 then goto L1aacaa;
  #L1aac8c.  v5:= 0I;
  #L1aac8e.  v10:= length @variable v0;
  #L1aac90.  v10:= v10 + -1;
  #L1aac94.  if v5 >= v10 then goto L1aacaa;
  #L1aac98.  v10:= v13.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] @kind object;
  #L1aac9c.  call temp:= `binarySearchBytes`(v10, v0, v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L1aaca2.  v7:= temp @kind object;
  #L1aaca4.  if v7 == 0 then goto L1aacee;
  #L1aaca8.  v3:= v7 @kind object;
  #L1aacaa.  if v3 == 0 then goto L1aacf4;
  #L1aacae.  v10:= new `java.lang.StringBuilder`;
  #L1aacb2.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aacb8.  v11:= "!" @kind object;
  #L1aacbc.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aacc2.  v10:= temp @kind object;
  #L1aacc4.  call temp:= `append`(v10, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aacca.  v10:= temp @kind object;
  #L1aaccc.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aacd2.  v3:= temp @kind object;
  #L1aacd4.  v10:= "\\." @kind object;
  #L1aacd8.  call temp:= `split`(v3, v10) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1aacde.  v2:= temp @kind object;
  #L1aace0.  return v2 @kind object;
  #L1aace2.  v4:= v4 + 1;
  #L1aace6.  goto L1aac34;
  #L1aace8.  v5:= v5 + 1;
  #L1aacec.  goto L1aac62;
  #L1aacee.  v5:= v5 + 1;
  #L1aacf2.  goto L1aac8e;
  #L1aacf4.  if v1 != 0 then goto L1aad02;
  #L1aacf8.  if v8 != 0 then goto L1aad02;
  #L1aacfc.  v2:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] @kind object;
  #L1aad00.  goto L1aace0;
  #L1aad02.  if v1 == 0 then goto L1aad2e;
  #L1aad06.  v10:= "\\." @kind object;
  #L1aad0a.  call temp:= `split`(v1, v10) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1aad10.  v2:= temp @kind object;
  #L1aad12.  if v8 == 0 then goto L1aad34;
  #L1aad16.  v10:= "\\." @kind object;
  #L1aad1a.  call temp:= `split`(v8, v10) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1aad20.  v9:= temp @kind object;
  #L1aad22.  v10:= length @variable v2;
  #L1aad24.  v11:= length @variable v9;
  #L1aad26.  if v10 > v11 then goto L1aace0;
  #L1aad2a.  v2:= v9 @kind object;
  #L1aad2c.  goto L1aace0;
  #L1aad2e.  v2:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L1aad32.  goto L1aad12;
  #L1aad34.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L1aad38.  goto L1aad22;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1aabf0;
  catch `java.lang.InterruptedException` @[Try_start1..Try_end1] goto L1aac02;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1aabf0;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1aad6c.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L1aad70.  return v0 @kind object;
}
procedure `void` `readTheList`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v8 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1aad84.  v6:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L1aad88.  v7:= "publicsuffixes.gz" @kind object;
  #L1aad8c.  call temp:= `getResourceAsStream`(v6, v7) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L1aad92.  v3:= temp @kind object;
  #L1aad94.  if v3 != 0 then goto L1aad9a;
  #L1aad98.  return @kind void;
  #L1aad9a.  v6:= new `okio.GzipSource`;
  #L1aad9e.  call temp:= `source`(v3) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L1aada4.  v7:= temp @kind object;
  #L1aada6.  call `<init>`(v6, v7) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L1aadac.  call temp:= `buffer`(v6) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1aadb2.  v0:= temp @kind object;
  #Try_start0.  
  #L1aadb4.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1aadba.  v4:= temp;
  #L1aadbc.  v2:= new `byte`[v4];
  #L1aadc0.  call `readFully`(v0, v2) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L1aadc6.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1aadcc.  v5:= temp;
  #L1aadce.  v1:= new `byte`[v5];
  #L1aadd2.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #Try_end0.  
  #L1aadd8.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1aadde.  @monitorenter v8
  #Try_start1.  
  #L1aade0.  v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v2 @kind object;
  #L1aade4.  v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v1 @kind object;
  #L1aade8.  @monitorexit v8
  #Try_end1.  
  #L1aadea.  v6:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L1aadee.  call `countDown`(v6) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L1aadf4.  goto L1aad98;
  #L1aadf6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1aadf8.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1aadfe.  throw v6;
  #L1aae00.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L1aae02.  @monitorexit v8
  #Try_end2.  
  #L1aae04.  throw v6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1aadf6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1aae00;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1aae00;
}
procedure `void` `readTheListUninterruptibly`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1aae38.  v1:= 0I;
  #Try_start0.  
  #L1aae3a.  call `readTheList`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @kind direct;
  #Try_end0.  
  #L1aae40.  if v1 == 0 then goto L1aae52;
  #L1aae44.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1aae4a.  v2:= temp @kind object;
  #L1aae4c.  call `interrupt`(v2) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1aae52.  return @kind void;
  #L1aae54.  v0:= Exception @type ^`java.io.InterruptedIOException` @kind object;
  #L1aae56.  v1:= 1I;
  #L1aae58.  goto L1aae3a;
  #L1aae5a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L1aae5c.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1aae62.  v2:= temp @kind object;
  #L1aae64.  v3:= 5I;
  #L1aae66.  v4:= "Failed to read public suffix list" @kind object;
  #L1aae6a.  call `log`(v2, v3, v4, v0) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #Try_end1.  
  #L1aae70.  if v1 == 0 then goto L1aae52;
  #L1aae74.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1aae7a.  v2:= temp @kind object;
  #L1aae7c.  call `interrupt`(v2) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1aae82.  goto L1aae52;
  #L1aae84.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1aae86.  if v1 == 0 then goto L1aae98;
  #L1aae8a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1aae90.  v3:= temp @kind object;
  #L1aae92.  call `interrupt`(v3) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1aae98.  throw v2;
  catch `java.io.InterruptedIOException` @[Try_start0..Try_end0] goto L1aae54;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1aae5a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1aae84;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1aae84;
}
procedure `java.lang.String` `getEffectiveTldPlusOne`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v11 @kind this, `java.lang.String` v12 @kind object @name `domain`) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1aaec8.  v10:= 33I;
  #L1aaecc.  v9:= 0I;
  #L1aaece.  if v12 != 0 then goto L1aaee2;
  #L1aaed2.  v7:= new `java.lang.NullPointerException`;
  #L1aaed6.  v8:= "domain == null" @kind object;
  #L1aaeda.  call `<init>`(v7, v8) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aaee0.  throw v7;
  #L1aaee2.  call temp:= `toUnicode`(v12) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1aaee8.  v6:= temp @kind object;
  #L1aaeea.  v7:= "\\." @kind object;
  #L1aaeee.  call temp:= `split`(v6, v7) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1aaef4.  v0:= temp @kind object;
  #L1aaef6.  call temp:= `findMatchingRule`(v11, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L1aaefc.  v5:= temp @kind object;
  #L1aaefe.  v7:= length @variable v0;
  #L1aaf00.  v8:= length @variable v5;
  #L1aaf02.  if v7 != v8 then goto L1aaf1a;
  #L1aaf06.  v7:= v5[v9] @kind object;
  #L1aaf0a.  call temp:= `charAt`(v7, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1aaf10.  v7:= temp;
  #L1aaf12.  if v7 == v10 then goto L1aaf1a;
  #L1aaf16.  v7:= 0I;
  #L1aaf18.  return v7 @kind object;
  #L1aaf1a.  v7:= v5[v9] @kind object;
  #L1aaf1e.  call temp:= `charAt`(v7, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1aaf24.  v7:= temp;
  #L1aaf26.  if v7 != v10 then goto L1aaf6c;
  #L1aaf2a.  v7:= length @variable v0;
  #L1aaf2c.  v8:= length @variable v5;
  #L1aaf2e.  v2:= v7 - v8 @kind int;
  #L1aaf32.  v1:= new `java.lang.StringBuilder`;
  #L1aaf36.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aaf3c.  v7:= "\\." @kind object;
  #L1aaf40.  call temp:= `split`(v12, v7) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1aaf46.  v4:= temp @kind object;
  #L1aaf48.  v3:= v2;
  #L1aaf4a.  v7:= length @variable v4;
  #L1aaf4c.  if v3 >= v7 then goto L1aaf7a;
  #L1aaf50.  v7:= v4[v3] @kind object;
  #L1aaf54.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aaf5a.  v7:= temp @kind object;
  #L1aaf5c.  v8:= 46I;
  #L1aaf60.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aaf66.  v3:= v3 + 1;
  #L1aaf6a.  goto L1aaf4a;
  #L1aaf6c.  v7:= length @variable v0;
  #L1aaf6e.  v8:= length @variable v5;
  #L1aaf70.  v8:= v8 + 1;
  #L1aaf74.  v2:= v7 - v8 @kind int;
  #L1aaf78.  goto L1aaf32;
  #L1aaf7a.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L1aaf80.  v7:= temp;
  #L1aaf82.  v7:= v7 + -1;
  #L1aaf86.  call temp:= `deleteCharAt`(v1, v7) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aaf8c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aaf92.  v7:= temp @kind object;
  #L1aaf94.  goto L1aaf18;
}
procedure `void` `setListBytes`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this, `byte`[] v3 @kind object @name `publicSuffixListBytes`, `byte`[] v4 @kind object @name `publicSuffixExceptionListBytes`) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.setListBytes:([B[B)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1aafa8.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v3 @kind object;
  #L1aafac.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v4 @kind object;
  #L1aafb0.  v0:= v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1aafb4.  v1:= 1I;
  #L1aafb6.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L1aafbc.  v0:= v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L1aafc0.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L1aafc6.  return @kind void;
}

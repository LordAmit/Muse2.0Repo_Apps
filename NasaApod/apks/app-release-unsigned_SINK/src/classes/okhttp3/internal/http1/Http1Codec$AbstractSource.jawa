record `okhttp3.internal.http1.Http1Codec$AbstractSource` @kind class @AccessFlag ABSTRACT extends `okio.Source` @kind interface {
  `long` `okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @AccessFlag PROTECTED;
  `boolean` `okhttp3.internal.http1.Http1Codec$AbstractSource.closed` @AccessFlag PROTECTED;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.ForwardingTimeout` `okhttp3.internal.http1.Http1Codec$AbstractSource.timeout` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v2 @kind this, `okhttp3.internal.http1.Http1Codec` v3 @kind object) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L219990.  v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v3 @kind object;
  #L219994.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21999a.  v0:= new `okio.ForwardingTimeout`;
  #L21999e.  v1:= v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2199a2.  v1:= v1.`okhttp3.internal.http1.Http1Codec.source` @type ^`okio.BufferedSource` @kind object;
  #L2199a6.  call temp:= `timeout`(v1) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L2199ac.  v1:= temp @kind object;
  #L2199ae.  call `<init>`(v0, v1) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L2199b4.  v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L2199b8.  v0:= 0L;
  #L2199bc.  v2.`okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @type ^`long` := v0 @kind wide;
  #L2199c0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v0 @kind this, `okhttp3.internal.http1.Http1Codec` v1 @kind object @name `x0`, `okhttp3.internal.http1.Http1Codec$1` v2 @kind object @name `x1`) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/internal/http1/Http1Codec$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2199d4.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;)V` @kind direct;
  #L2199da.  return @kind void;
}
procedure `void` `endOfInput`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v7 @kind this, `boolean` v8 @name `reuseConnection`, `java.io.IOException` v9 @kind object @name `e`) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.endOfInput:(ZLjava/io/IOException;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2199ec.  v2:= 6I;
  #L2199ee.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2199f2.  v0:= v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int`;
  #L2199f6.  if v0 != v2 then goto L2199fc;
  #L2199fa.  return @kind void;
  #L2199fc.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219a00.  v0:= v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int`;
  #L219a04.  v1:= 5I;
  #L219a06.  if v0 == v1 then goto L219a44;
  #L219a0a.  v0:= new `java.lang.IllegalStateException`;
  #L219a0e.  v1:= new `java.lang.StringBuilder`;
  #L219a12.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L219a18.  v2:= "state: " @kind object;
  #L219a1c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L219a22.  v1:= temp @kind object;
  #L219a24.  v2:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219a28.  v2:= v2.`okhttp3.internal.http1.Http1Codec.state` @type ^`int`;
  #L219a2c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L219a32.  v1:= temp @kind object;
  #L219a34.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L219a3a.  v1:= temp @kind object;
  #L219a3c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L219a42.  throw v0;
  #L219a44.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219a48.  v1:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L219a4c.  call `detachTimeout`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.detachTimeout:(Lokio/ForwardingTimeout;)V` @kind virtual;
  #L219a52.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219a56.  v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int` := v2;
  #L219a5a.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219a5e.  v0:= v0.`okhttp3.internal.http1.Http1Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L219a62.  if v0 == 0 then goto L2199fa;
  #L219a66.  v0:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219a6a.  v1:= v0.`okhttp3.internal.http1.Http1Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L219a6e.  if v8 != 0 then goto L219a86;
  #L219a72.  v2:= 1I;
  #L219a74.  v3:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219a78.  v4:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @type ^`long` @kind wide;
  #L219a7c.  v6:= v9 @kind object;
  #L219a7e.  call `streamFinished`(v1, v2, v3, v4, v6) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFinished:(ZLokhttp3/internal/http/HttpCodec;JLjava/io/IOException;)V` @kind virtual;
  #L219a84.  goto L2199fa;
  #L219a86.  v2:= 0I;
  #L219a88.  goto L219a74;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v6 @kind this, `okio.Buffer` v7 @kind object @name `sink`, `long` v8 @name `byteCount`) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L219a9c.  v1:= v6.`okhttp3.internal.http1.Http1Codec$AbstractSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219aa0.  v1:= v1.`okhttp3.internal.http1.Http1Codec.source` @type ^`okio.BufferedSource` @kind object;
  #L219aa4.  call temp:= `read`(v1, v7, v8) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L219aaa.  v2:= temp @kind wide;
  #L219aac.  v4:= 0L;
  #L219ab0.  v1:= lcmp(v2, v4);
  #L219ab4.  if v1 <= 0 then goto L219ac2;
  #L219ab8.  v4:= v6.`okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @type ^`long` @kind wide;
  #L219abc.  v4:= v4 + v2 @kind long;
  #L219abe.  v6.`okhttp3.internal.http1.Http1Codec$AbstractSource.bytesRead` @type ^`long` := v4 @kind wide;
  #Try_end0.  
  #L219ac2.  return v2 @kind wide;
  #L219ac4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L219ac6.  v1:= 0I;
  #L219ac8.  call `endOfInput`(v6, v1, v0) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L219ace.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L219ac4;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http1.Http1Codec$AbstractSource` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L219af0.  v0:= v1.`okhttp3.internal.http1.Http1Codec$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L219af4.  return v0 @kind object;
}

record `okhttp3.internal.http1.Http1Codec$FixedLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http1.Http1Codec$AbstractSource` @kind class {
  `long` `okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$FixedLengthSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v6 @kind this, `okhttp3.internal.http1.Http1Codec` v7 @kind object, `long` v8 @name `length`) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L246afc.  v4:= 0I;
  #L246afe.  v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v7 @kind object;
  #L246b02.  call `<init>`(v6, v7, v4) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/internal/http1/Http1Codec$1;)V` @kind direct;
  #L246b08.  v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` := v8 @kind wide;
  #L246b0c.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246b10.  v2:= 0L;
  #L246b14.  v0:= lcmp(v0, v2);
  #L246b18.  if v0 != 0 then goto L246b24;
  #L246b1c.  v0:= 1I;
  #L246b1e.  call `endOfInput`(v6, v0, v4) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L246b24.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v4 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L246b38.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` @kind boolean;
  #L246b3c.  if v0 == 0 then goto L246b42;
  #L246b40.  return @kind void;
  #L246b42.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246b46.  v2:= 0L;
  #L246b4a.  v0:= lcmp(v0, v2);
  #L246b4e.  if v0 == 0 then goto L246b70;
  #L246b52.  v0:= 100I;
  #L246b56.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L246b5a.  call temp:= `discard`(v4, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L246b60.  v0:= temp;
  #L246b62.  if v0 != 0 then goto L246b70;
  #L246b66.  v0:= 0I;
  #L246b68.  v1:= 0I;
  #L246b6a.  call `endOfInput`(v4, v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L246b70.  v0:= 1I;
  #L246b72.  v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L246b76.  goto L246b40;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v10 @kind this, `okio.Buffer` v11 @kind object @name `sink`, `long` v12 @name `byteCount`) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L246b88.  v4:= -1L;
  #L246b8c.  v8:= 0L;
  #L246b90.  v1:= lcmp(v12, v8);
  #L246b94.  if v1 >= 0 then goto L246bca;
  #L246b98.  v1:= new `java.lang.IllegalArgumentException`;
  #L246b9c.  v4:= new `java.lang.StringBuilder`;
  #L246ba0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L246ba6.  v5:= "byteCount < 0: " @kind object;
  #L246baa.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L246bb0.  v4:= temp @kind object;
  #L246bb2.  call temp:= `append`(v4, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L246bb8.  v4:= temp @kind object;
  #L246bba.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L246bc0.  v4:= temp @kind object;
  #L246bc2.  call `<init>`(v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246bc8.  throw v1;
  #L246bca.  v1:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` @kind boolean;
  #L246bce.  if v1 == 0 then goto L246be2;
  #L246bd2.  v1:= new `java.lang.IllegalStateException`;
  #L246bd6.  v4:= "closed" @kind object;
  #L246bda.  call `<init>`(v1, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246be0.  throw v1;
  #L246be2.  v6:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246be6.  v1:= lcmp(v6, v8);
  #L246bea.  if v1 != 0 then goto L246bf2;
  #L246bee.  v2:= v4 @kind wide;
  #L246bf0.  return v2 @kind wide;
  #L246bf2.  v6:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246bf6.  call temp:= `min`(v6, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L246bfc.  v6:= temp @kind wide;
  #L246bfe.  call temp:= `read`(v10, v11, v6) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L246c04.  v2:= temp @kind wide;
  #L246c06.  v1:= lcmp(v2, v4);
  #L246c0a.  if v1 != 0 then goto L246c26;
  #L246c0e.  v0:= new `java.net.ProtocolException`;
  #L246c12.  v1:= "unexpected end of stream" @kind object;
  #L246c16.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246c1c.  v1:= 0I;
  #L246c1e.  call `endOfInput`(v10, v1, v0) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L246c24.  throw v0;
  #L246c26.  v4:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246c2a.  v4:= v4 - v2 @kind long;
  #L246c2c.  v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` := v4 @kind wide;
  #L246c30.  v4:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246c34.  v1:= lcmp(v4, v8);
  #L246c38.  if v1 != 0 then goto L246bf0;
  #L246c3c.  v1:= 1I;
  #L246c3e.  v4:= 0I;
  #L246c40.  call `endOfInput`(v10, v1, v4) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L246c46.  goto L246bf0;
}

record `okhttp3.internal.http2.Http2Connection$3` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$3.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.internal.http2.Http2Connection$3.val$requestHeaders` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$3.val$streamId` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$3` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object @name `this$0`, `java.lang.String` v2 @kind object @name `format`, `java.lang.Object`[] v3 @kind object @name `args`, `int` v4 , `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$3;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21ab8c.  v0.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L21ab90.  v0.`okhttp3.internal.http2.Http2Connection$3.val$streamId` @type ^`int` := v4;
  #L21ab94.  v0.`okhttp3.internal.http2.Http2Connection$3.val$requestHeaders` @type ^`java.util.List` := v5 @kind object;
  #L21ab98.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L21ab9e.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$3` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$3;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21abb0.  v1:= v4.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21abb4.  v1:= v1.`okhttp3.internal.http2.Http2Connection.pushObserver` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L21abb8.  v2:= v4.`okhttp3.internal.http2.Http2Connection$3.val$streamId` @type ^`int`;
  #L21abbc.  v3:= v4.`okhttp3.internal.http2.Http2Connection$3.val$requestHeaders` @type ^`java.util.List` @kind object;
  #L21abc0.  call temp:= `onRequest`(v1, v2, v3) @signature `Lokhttp3/internal/http2/PushObserver;.onRequest:(ILjava/util/List;)Z` @kind interface;
  #L21abc6.  v0:= temp;
  #L21abc8.  if v0 == 0 then goto L21ac04;
  #Try_start0.  
  #L21abcc.  v1:= v4.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21abd0.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L21abd4.  v2:= v4.`okhttp3.internal.http2.Http2Connection$3.val$streamId` @type ^`int`;
  #L21abd8.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L21abdc.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L21abe2.  v2:= v4.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21abe6.  @monitorenter v2
  #Try_end0.  
  #Try_start1.  
  #L21abe8.  v1:= v4.`okhttp3.internal.http2.Http2Connection$3.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21abec.  v1:= v1.`okhttp3.internal.http2.Http2Connection.currentPushRequests` @type ^`java.util.Set` @kind object;
  #L21abf0.  v3:= v4.`okhttp3.internal.http2.Http2Connection$3.val$streamId` @type ^`int`;
  #L21abf4.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L21abfa.  v3:= temp @kind object;
  #L21abfc.  call temp:= `remove`(v1, v3) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L21ac02.  @monitorexit v2
  #L21ac04.  return @kind void;
  #L21ac06.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21ac08.  @monitorexit v2
  #Try_end1.  
  #Try_start2.  
  #L21ac0a.  throw v1;
  #Try_end2.  
  #L21ac0c.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L21ac0e.  goto L21ac04;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L21ac0c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21ac06;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L21ac0c;
}

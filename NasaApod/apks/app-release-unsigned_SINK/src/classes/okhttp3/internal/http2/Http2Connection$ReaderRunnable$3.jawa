record `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Settings` `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` v0 @kind this, `okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind object @name `this$1`, `java.lang.String` v2 @kind object @name `format`, `java.lang.Object`[] v3 @kind object @name `args`, `okhttp3.internal.http2.Settings` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Settings;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21b010.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` := v1 @kind object;
  #L21b014.  v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @type ^`okhttp3.internal.http2.Settings` := v4 @kind object;
  #L21b018.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L21b01e.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3` v3 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L21b030.  v1:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L21b034.  v1:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21b038.  v1:= v1.`okhttp3.internal.http2.Http2Connection.writer` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L21b03c.  v2:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.val$peerSettings` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L21b040.  call `applyAndAckSettings`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Writer;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #Try_end0.  
  #L21b046.  return @kind void;
  #L21b048.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L21b04a.  v1:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable$3.this$1` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L21b04e.  v1:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.this$0` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21b052.  call `access$000`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$000:(Lokhttp3/internal/http2/Http2Connection;)V` @kind static;
  #L21b058.  goto L21b046;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L21b048;
}

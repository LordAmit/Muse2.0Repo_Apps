record `okhttp3.internal.http2.Http2Stream$FramingSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.closed` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.finished` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@okhttp3.internal.http2.Http2Stream$FramingSink.EMIT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L21b8e0.  v0:= constclass @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b8e4.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L21b8ea.  v0:= temp;
  #L21b8ec.  if v0 != 0 then goto L21b8f8;
  #L21b8f0.  v0:= 1I;
  #L21b8f2.  `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` := v0 @kind boolean;
  #L21b8f6.  return @kind void;
  #L21b8f8.  v0:= 0I;
  #L21b8fa.  goto L21b8f2;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this, `okhttp3.internal.http2.Http2Stream` v2 @kind object @name `this$0`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L21b90c.  v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` := v2 @kind object;
  #L21b910.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21b916.  v0:= new `okio.Buffer`;
  #L21b91a.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L21b920.  v1.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L21b924.  return @kind void;
}
procedure `void` `emitFrame`(`okhttp3.internal.http2.Http2Stream$FramingSink` v8 @kind this, `boolean` v9 @name `outFinished`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21b938.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b93c.  @monitorenter v1
  #Try_start0.  
  #L21b93e.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b942.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b946.  call `enter`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #Try_end0.  
  #Try_start1.  
  #L21b94c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b950.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L21b954.  v6:= 0L;
  #L21b958.  v0:= lcmp(v2, v6);
  #L21b95c.  if v0 > 0 then goto L21b9a0;
  #L21b960.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L21b964.  if v0 != 0 then goto L21b9a0;
  #L21b968.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L21b96c.  if v0 != 0 then goto L21b9a0;
  #L21b970.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b974.  v0:= v0.`okhttp3.internal.http2.Http2Stream.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L21b978.  if v0 != 0 then goto L21b9a0;
  #L21b97c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b980.  call `waitForIo`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.waitForIo:()V` @kind virtual;
  #Try_end1.  
  #L21b986.  goto L21b94c;
  #L21b988.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L21b98a.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b98e.  v2:= v2.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b992.  call `exitAndThrowIfTimedOut`(v2) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21b998.  throw v0;
  #L21b99a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21b99c.  @monitorexit v1
  #Try_end2.  
  #L21b99e.  throw v0;
  #Try_start3.  
  #L21b9a0.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9a4.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b9a8.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21b9ae.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9b2.  call `checkOutNotClosed`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L21b9b8.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9bc.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L21b9c0.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21b9c4.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21b9ca.  v6:= temp @kind wide;
  #L21b9cc.  call temp:= `min`(v2, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L21b9d2.  v4:= temp @kind wide;
  #L21b9d4.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9d8.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L21b9dc.  v2:= v2 - v4 @kind long;
  #L21b9de.  v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` := v2 @kind wide;
  #L21b9e2.  @monitorexit v1
  #Try_end3.  
  #L21b9e4.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9e8.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b9ec.  call `enter`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #Try_start4.  
  #L21b9f2.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9f6.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21b9fa.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9fe.  v1:= v1.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L21ba02.  if v9 == 0 then goto L21ba36;
  #L21ba06.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21ba0a.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21ba10.  v2:= temp @kind wide;
  #L21ba12.  v2:= lcmp(v4, v2);
  #L21ba16.  if v2 != 0 then goto L21ba36;
  #L21ba1a.  v2:= 1I;
  #L21ba1c.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21ba20.  call `writeData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #Try_end4.  
  #L21ba26.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba2a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21ba2e.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21ba34.  return @kind void;
  #L21ba36.  v2:= 0I;
  #L21ba38.  goto L21ba1c;
  #L21ba3a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21ba3c.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba40.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21ba44.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21ba4a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21b99a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21b988;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21b99a;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L21b99a;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L21ba3a;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSink` v6 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21ba8c.  v4:= 0L;
  #L21ba90.  v2:= 1I;
  #L21ba92.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21ba96.  if v0 != 0 then goto L21bab6;
  #L21ba9a.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba9e.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21baa4.  v0:= temp;
  #L21baa6.  if v0 == 0 then goto L21bab6;
  #L21baaa.  v0:= new `java.lang.AssertionError`;
  #L21baae.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21bab4.  throw v0;
  #L21bab6.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21baba.  @monitorenter v1
  #Try_start0.  
  #L21babc.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L21bac0.  if v0 == 0 then goto L21bac8;
  #L21bac4.  @monitorexit v1
  #L21bac6.  return @kind void;
  #L21bac8.  @monitorexit v1
  #Try_end0.  
  #L21baca.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bace.  v0:= v0.`okhttp3.internal.http2.Http2Stream.sink` @type ^`okhttp3.internal.http2.Http2Stream$FramingSink` @kind object;
  #L21bad2.  v0:= v0.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L21bad6.  if v0 != 0 then goto L21bb28;
  #L21bada.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21bade.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21bae4.  v0:= temp @kind wide;
  #L21bae6.  v0:= lcmp(v0, v4);
  #L21baea.  if v0 <= 0 then goto L21bb10;
  #L21baee.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21baf2.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21baf8.  v0:= temp @kind wide;
  #L21bafa.  v0:= lcmp(v0, v4);
  #L21bafe.  if v0 <= 0 then goto L21bb28;
  #L21bb02.  call `emitFrame`(v6, v2) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21bb08.  goto L21baee;
  #L21bb0a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L21bb0c.  @monitorexit v1
  #Try_end1.  
  #L21bb0e.  throw v0;
  #L21bb10.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bb14.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21bb18.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bb1c.  v1:= v1.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L21bb20.  v3:= 0I;
  #L21bb22.  call `writeData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L21bb28.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bb2c.  @monitorenter v1
  #L21bb2e.  v0:= 1I;
  #Try_start2.  
  #L21bb30.  v6.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L21bb34.  @monitorexit v1
  #Try_end2.  
  #L21bb36.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bb3a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21bb3e.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L21bb44.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bb48.  call `cancelStreamIfNecessary`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.cancelStreamIfNecessary:()V` @kind virtual;
  #L21bb4e.  goto L21bac6;
  #L21bb50.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L21bb52.  @monitorexit v1
  #Try_end3.  
  #L21bb54.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21bb0a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21bb0a;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21bb50;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L21bb50;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Stream$FramingSink` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21bb90.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21bb94.  if v0 != 0 then goto L21bbb4;
  #L21bb98.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bb9c.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21bba2.  v0:= temp;
  #L21bba4.  if v0 == 0 then goto L21bbb4;
  #L21bba8.  v0:= new `java.lang.AssertionError`;
  #L21bbac.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21bbb2.  throw v0;
  #L21bbb4.  v1:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bbb8.  @monitorenter v1
  #Try_start0.  
  #L21bbba.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bbbe.  call `checkOutNotClosed`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L21bbc4.  @monitorexit v1
  #Try_end0.  
  #L21bbc6.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21bbca.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21bbd0.  v0:= temp @kind wide;
  #L21bbd2.  v2:= 0L;
  #L21bbd6.  v0:= lcmp(v0, v2);
  #L21bbda.  if v0 <= 0 then goto L21bbfc;
  #L21bbde.  v0:= 0I;
  #L21bbe0.  call `emitFrame`(v4, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21bbe6.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bbea.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21bbee.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L21bbf4.  goto L21bbc6;
  #L21bbf6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L21bbf8.  @monitorexit v1
  #Try_end1.  
  #L21bbfa.  throw v0;
  #L21bbfc.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21bbf6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21bbf6;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21bc24.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bc28.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21bc2c.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http2.Http2Stream$FramingSink` v4 @kind this, `okio.Buffer` v5 @kind object @name `source`, `long` v6 @name `byteCount`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21bc40.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21bc44.  if v0 != 0 then goto L21bc64;
  #L21bc48.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bc4c.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21bc52.  v0:= temp;
  #L21bc54.  if v0 == 0 then goto L21bc64;
  #L21bc58.  v0:= new `java.lang.AssertionError`;
  #L21bc5c.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21bc62.  throw v0;
  #L21bc64.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21bc68.  call `write`(v0, v5, v6) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L21bc6e.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21bc72.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21bc78.  v0:= temp @kind wide;
  #L21bc7a.  v2:= 16384L;
  #L21bc7e.  v0:= lcmp(v0, v2);
  #L21bc82.  if v0 < 0 then goto L21bc90;
  #L21bc86.  v0:= 0I;
  #L21bc88.  call `emitFrame`(v4, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21bc8e.  goto L21bc6e;
  #L21bc90.  return @kind void;
}

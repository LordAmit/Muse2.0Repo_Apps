record `okhttp3.internal.http2.Http2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.BINARY` @AccessFlag STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FLAGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_ACK` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_COMPRESSED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_NONE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PADDED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PRIORITY` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.INITIAL_MAX_FRAME_SIZE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_DATA` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_GOAWAY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PING` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PRIORITY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_RST_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_SETTINGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_WINDOW_UPDATE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1a64b4.  v11:= 8I;
  #L1a64b8.  v13:= 4I;
  #L1a64ba.  v12:= 3I;
  #L1a64bc.  v10:= 1I;
  #L1a64be.  v6:= 0I;
  #L1a64c0.  v5:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L1a64c4.  call temp:= `encodeUtf8`(v5) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a64ca.  v5:= temp @kind object;
  #L1a64cc.  `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` := v5 @kind object;
  #L1a64d0.  v5:= 10I;
  #L1a64d4.  v5:= new `java.lang.String`[v5];
  #L1a64d8.  v7:= "DATA" @kind object;
  #L1a64dc.  v5[v6]:= v7 @kind object;
  #L1a64e0.  v7:= "HEADERS" @kind object;
  #L1a64e4.  v5[v10]:= v7 @kind object;
  #L1a64e8.  v7:= 2I;
  #L1a64ea.  v8:= "PRIORITY" @kind object;
  #L1a64ee.  v5[v7]:= v8 @kind object;
  #L1a64f2.  v7:= "RST_STREAM" @kind object;
  #L1a64f6.  v5[v12]:= v7 @kind object;
  #L1a64fa.  v7:= "SETTINGS" @kind object;
  #L1a64fe.  v5[v13]:= v7 @kind object;
  #L1a6502.  v7:= 5I;
  #L1a6504.  v8:= "PUSH_PROMISE" @kind object;
  #L1a6508.  v5[v7]:= v8 @kind object;
  #L1a650c.  v7:= 6I;
  #L1a650e.  v8:= "PING" @kind object;
  #L1a6512.  v5[v7]:= v8 @kind object;
  #L1a6516.  v7:= 7I;
  #L1a6518.  v8:= "GOAWAY" @kind object;
  #L1a651c.  v5[v7]:= v8 @kind object;
  #L1a6520.  v7:= "WINDOW_UPDATE" @kind object;
  #L1a6524.  v5[v11]:= v7 @kind object;
  #L1a6528.  v7:= 9I;
  #L1a652c.  v8:= "CONTINUATION" @kind object;
  #L1a6530.  v5[v7]:= v8 @kind object;
  #L1a6534.  `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a6538.  v5:= 64I;
  #L1a653c.  v5:= new `java.lang.String`[v5];
  #L1a6540.  `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a6544.  v5:= 256I;
  #L1a6548.  v5:= new `java.lang.String`[v5];
  #L1a654c.  `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a6550.  v2:= 0I;
  #L1a6552.  v5:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a6556.  v5:= length @variable v5;
  #L1a6558.  if v2 >= v5 then goto L1a6596;
  #L1a655c.  v5:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a6560.  v7:= "%8s" @kind object;
  #L1a6564.  v8:= new `java.lang.Object`[v10];
  #L1a6568.  call temp:= `toBinaryString`(v2) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L1a656e.  v9:= temp @kind object;
  #L1a6570.  v8[v6]:= v9 @kind object;
  #L1a6574.  call temp:= `format`(v7, v8) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a657a.  v7:= temp @kind object;
  #L1a657c.  v8:= 32I;
  #L1a6580.  v9:= 48I;
  #L1a6584.  call temp:= `replace`(v7, v8, v9) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L1a658a.  v7:= temp @kind object;
  #L1a658c.  v5[v2]:= v7 @kind object;
  #L1a6590.  v2:= v2 + 1;
  #L1a6594.  goto L1a6552;
  #L1a6596.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a659a.  v7:= "" @kind object;
  #L1a659e.  v5[v6]:= v7 @kind object;
  #L1a65a2.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a65a6.  v7:= "END_STREAM" @kind object;
  #L1a65aa.  v5[v10]:= v7 @kind object;
  #L1a65ae.  v4:= new `int`[v10];
  #L1a65b2.  v4[v6]:= v10;
  #L1a65b6.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a65ba.  v7:= "PADDED" @kind object;
  #L1a65be.  v5[v11]:= v7 @kind object;
  #L1a65c2.  v7:= length @variable v4;
  #L1a65c4.  v5:= v6;
  #L1a65c6.  if v5 >= v7 then goto L1a660e;
  #L1a65ca.  v3:= v4[v5];
  #L1a65ce.  v8:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a65d2.  v9:= v3 ^| 8;
  #L1a65d6.  v10:= new `java.lang.StringBuilder`;
  #L1a65da.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a65e0.  v11:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a65e4.  v11:= v11[v3] @kind object;
  #L1a65e8.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a65ee.  v10:= temp @kind object;
  #L1a65f0.  v11:= "|PADDED" @kind object;
  #L1a65f4.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a65fa.  v10:= temp @kind object;
  #L1a65fc.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6602.  v10:= temp @kind object;
  #L1a6604.  v8[v9]:= v10 @kind object;
  #L1a6608.  v5:= v5 + 1;
  #L1a660c.  goto L1a65c6;
  #L1a660e.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6612.  v7:= "END_HEADERS" @kind object;
  #L1a6616.  v5[v13]:= v7 @kind object;
  #L1a661a.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a661e.  v7:= 32I;
  #L1a6622.  v8:= "PRIORITY" @kind object;
  #L1a6626.  v5[v7]:= v8 @kind object;
  #L1a662a.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a662e.  v7:= 36I;
  #L1a6632.  v8:= "END_HEADERS|PRIORITY" @kind object;
  #L1a6636.  v5[v7]:= v8 @kind object;
  #L1a663a.  v1:= new `int`[v12];
  #L1a663e.  goto L1a6740;
  #L1a6644.  v8:= length @variable v1;
  #L1a6646.  v7:= v6;
  #L1a6648.  if v7 >= v8 then goto L1a670e;
  #L1a664c.  v0:= v1[v7];
  #L1a6650.  v9:= length @variable v4;
  #L1a6652.  v5:= v6;
  #L1a6654.  if v5 >= v9 then goto L1a6706;
  #L1a6658.  v3:= v4[v5];
  #L1a665c.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6660.  v11:= v3 ^| v0 @kind int;
  #L1a6664.  v12:= new `java.lang.StringBuilder`;
  #L1a6668.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a666e.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6672.  v13:= v13[v3] @kind object;
  #L1a6676.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a667c.  v12:= temp @kind object;
  #L1a667e.  v13:= 124I;
  #L1a6682.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6688.  v12:= temp @kind object;
  #L1a668a.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a668e.  v13:= v13[v0] @kind object;
  #L1a6692.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6698.  v12:= temp @kind object;
  #L1a669a.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a66a0.  v12:= temp @kind object;
  #L1a66a2.  v10[v11]:= v12 @kind object;
  #L1a66a6.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a66aa.  v11:= v3 ^| v0 @kind int;
  #L1a66ae.  v11:= v11 ^| 8;
  #L1a66b2.  v12:= new `java.lang.StringBuilder`;
  #L1a66b6.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a66bc.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a66c0.  v13:= v13[v3] @kind object;
  #L1a66c4.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a66ca.  v12:= temp @kind object;
  #L1a66cc.  v13:= 124I;
  #L1a66d0.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a66d6.  v12:= temp @kind object;
  #L1a66d8.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a66dc.  v13:= v13[v0] @kind object;
  #L1a66e0.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a66e6.  v12:= temp @kind object;
  #L1a66e8.  v13:= "|PADDED" @kind object;
  #L1a66ec.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a66f2.  v12:= temp @kind object;
  #L1a66f4.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a66fa.  v12:= temp @kind object;
  #L1a66fc.  v10[v11]:= v12 @kind object;
  #L1a6700.  v5:= v5 + 1;
  #L1a6704.  goto L1a6654;
  #L1a6706.  v5:= v7 + 1;
  #L1a670a.  v7:= v5;
  #L1a670c.  goto L1a6648;
  #L1a670e.  v2:= 0I;
  #L1a6710.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6714.  v5:= length @variable v5;
  #L1a6716.  if v2 >= v5 then goto L1a673c;
  #L1a671a.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a671e.  v5:= v5[v2] @kind object;
  #L1a6722.  if v5 != 0 then goto L1a6736;
  #L1a6726.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a672a.  v6:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a672e.  v6:= v6[v2] @kind object;
  #L1a6732.  v5[v2]:= v6 @kind object;
  #L1a6736.  v2:= v2 + 1;
  #L1a673a.  goto L1a6710;
  #L1a673c.  return @kind void;
  #L1a673e.  
  #L1a6740.  v1:= (4I, 32I, 36I) @kind object;
  #L1a6753.  goto L1a6644;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a6764.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a676a.  return @kind void;
}
procedure `java.lang.String` `formatFlags`(`byte` v3 @name `type`, `byte` v4 @name `flags`) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1a677c.  if v4 != 0 then goto L1a6786;
  #L1a6780.  v1:= "" @kind object;
  #L1a6784.  return v1 @kind object;
  #L1a6786.  goto L1a680c;
  #L1a678c.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6790.  v1:= length @variable v1;
  #L1a6792.  if v4 >= v1 then goto L1a67de;
  #L1a6796.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a679a.  v0:= v1[v4] @kind object;
  #L1a679e.  v1:= 5I;
  #L1a67a0.  if v3 != v1 then goto L1a67e8;
  #L1a67a4.  v1:= v4 ^& 4;
  #L1a67a8.  if v1 == 0 then goto L1a67e8;
  #L1a67ac.  v1:= "HEADERS" @kind object;
  #L1a67b0.  v2:= "PUSH_PROMISE" @kind object;
  #L1a67b4.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1a67ba.  v1:= temp @kind object;
  #L1a67bc.  goto L1a6784;
  #L1a67be.  v1:= 1I;
  #L1a67c0.  if v4 != v1 then goto L1a67ca;
  #L1a67c4.  v1:= "ACK" @kind object;
  #L1a67c8.  goto L1a6784;
  #L1a67ca.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a67ce.  v1:= v1[v4] @kind object;
  #L1a67d2.  goto L1a6784;
  #L1a67d4.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a67d8.  v1:= v1[v4] @kind object;
  #L1a67dc.  goto L1a6784;
  #L1a67de.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a67e2.  v0:= v1[v4] @kind object;
  #L1a67e6.  goto L1a679e;
  #L1a67e8.  if v3 != 0 then goto L1a6806;
  #L1a67ec.  v1:= v4 ^& 32;
  #L1a67f0.  if v1 == 0 then goto L1a6806;
  #L1a67f4.  v1:= "PRIORITY" @kind object;
  #L1a67f8.  v2:= "COMPRESSED" @kind object;
  #L1a67fc.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1a6802.  v1:= temp @kind object;
  #L1a6804.  goto L1a6784;
  #L1a6806.  v1:= v0 @kind object;
  #L1a6808.  goto L1a6784;
  #L1a680a.  
  #L1a680c.  switch v3
                  | 2 => goto L1a67d4
                  | 3 => goto L1a67d4
                  | 4 => goto L1a67be
                  | 5 => goto L1a678c
                  | 6 => goto L1a67be
                  | 7 => goto L1a67d4
                  | 8 => goto L1a67d4
                  | else => goto L1a678c;
}
procedure `java.lang.String` `frameLog`(`boolean` v7 @name `inbound`, `int` v8 @name `streamId`, `int` v9 @name `length`, `byte` v10 @name `type`, `byte` v11 @name `flags`) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a6840.  v6:= 1I;
  #L1a6842.  v5:= 0I;
  #L1a6844.  v2:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L1a6848.  v2:= length @variable v2;
  #L1a684a.  if v10 >= v2 then goto L1a68a4;
  #L1a684e.  v2:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L1a6852.  v1:= v2[v10] @kind object;
  #L1a6856.  call temp:= `formatFlags`(v10, v11) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @kind static;
  #L1a685c.  v0:= temp @kind object;
  #L1a685e.  v3:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L1a6862.  v2:= 5I;
  #L1a6864.  v4:= new `java.lang.Object`[v2];
  #L1a6868.  if v7 == 0 then goto L1a68c2;
  #L1a686c.  v2:= "<<" @kind object;
  #L1a6870.  v4[v5]:= v2 @kind object;
  #L1a6874.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1a687a.  v2:= temp @kind object;
  #L1a687c.  v4[v6]:= v2 @kind object;
  #L1a6880.  v2:= 2I;
  #L1a6882.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1a6888.  v5:= temp @kind object;
  #L1a688a.  v4[v2]:= v5 @kind object;
  #L1a688e.  v2:= 3I;
  #L1a6890.  v4[v2]:= v1 @kind object;
  #L1a6894.  v2:= 4I;
  #L1a6896.  v4[v2]:= v0 @kind object;
  #L1a689a.  call temp:= `format`(v3, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a68a0.  v2:= temp @kind object;
  #L1a68a2.  return v2 @kind object;
  #L1a68a4.  v2:= "0x%02x" @kind object;
  #L1a68a8.  v3:= new `java.lang.Object`[v6];
  #L1a68ac.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1a68b2.  v4:= temp @kind object;
  #L1a68b4.  v3[v5]:= v4 @kind object;
  #L1a68b8.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a68be.  v1:= temp @kind object;
  #L1a68c0.  goto L1a6856;
  #L1a68c2.  v2:= ">>" @kind object;
  #L1a68c6.  goto L1a6870;
}
procedure `java.lang.IllegalArgumentException` `illegalArgument`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/http2/Http2;.illegalArgument:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a68d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L1a68dc.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a68e2.  v1:= temp @kind object;
  #L1a68e4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a68ea.  throw v0;
}
procedure `java.io.IOException` `ioException`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a68fc.  v0:= new `java.io.IOException`;
  #L1a6900.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a6906.  v1:= temp @kind object;
  #L1a6908.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a690e.  throw v0;
}

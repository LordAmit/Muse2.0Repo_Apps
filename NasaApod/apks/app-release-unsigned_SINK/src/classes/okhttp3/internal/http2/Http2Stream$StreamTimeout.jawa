record `okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind class @AccessFlag  extends `okio.AsyncTimeout` @kind class {
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$StreamTimeout.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$StreamTimeout` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object @name `this$0`) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.<init>:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L246e20.  v0.`okhttp3.internal.http2.Http2Stream$StreamTimeout.this$0` @type ^`okhttp3.internal.http2.Http2Stream` := v1 @kind object;
  #L246e24.  call `<init>`(v0) @signature `Lokio/AsyncTimeout;.<init>:()V` @kind direct;
  #L246e2a.  return @kind void;
}
procedure `void` `exitAndThrowIfTimedOut`(`okhttp3.internal.http2.Http2Stream$StreamTimeout` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L246e3c.  call temp:= `exit`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exit:()Z` @kind virtual;
  #L246e42.  v0:= temp;
  #L246e44.  if v0 == 0 then goto L246e54;
  #L246e48.  v0:= 0I;
  #L246e4a.  call temp:= `newTimeoutException`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L246e50.  v0:= temp @kind object;
  #L246e52.  throw v0;
  #L246e54.  return @kind void;
}
procedure `java.io.IOException` `newTimeoutException`(`okhttp3.internal.http2.Http2Stream$StreamTimeout` v2 @kind this, `java.io.IOException` v3 @kind object @name `cause`) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L246e68.  v0:= new `java.net.SocketTimeoutException`;
  #L246e6c.  v1:= "timeout" @kind object;
  #L246e70.  call `<init>`(v0, v1) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246e76.  if v3 == 0 then goto L246e80;
  #L246e7a.  call temp:= `initCause`(v0, v3) @signature `Ljava/net/SocketTimeoutException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L246e80.  return v0 @kind object;
}
procedure `void` `timedOut`(`okhttp3.internal.http2.Http2Stream$StreamTimeout` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.timedOut:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L246e94.  v0:= v2.`okhttp3.internal.http2.Http2Stream$StreamTimeout.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L246e98.  v1:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L246e9c.  call `closeLater`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Stream;.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L246ea2.  return @kind void;
}

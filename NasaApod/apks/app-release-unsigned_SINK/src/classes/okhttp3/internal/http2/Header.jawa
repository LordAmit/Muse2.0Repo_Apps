record `okhttp3.internal.http2.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Header.hpackSize` @AccessFlag FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.name` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.value` @AccessFlag PUBLIC_FINAL;
}
global `okio.ByteString` `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_METHOD` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_PATH` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Header;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a4ed8.  v0:= ":" @kind object;
  #L1a4edc.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4ee2.  v0:= temp @kind object;
  #L1a4ee4.  `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` := v0 @kind object;
  #L1a4ee8.  v0:= ":status" @kind object;
  #L1a4eec.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4ef2.  v0:= temp @kind object;
  #L1a4ef4.  `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` := v0 @kind object;
  #L1a4ef8.  v0:= ":method" @kind object;
  #L1a4efc.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4f02.  v0:= temp @kind object;
  #L1a4f04.  `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` := v0 @kind object;
  #L1a4f08.  v0:= ":path" @kind object;
  #L1a4f0c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4f12.  v0:= temp @kind object;
  #L1a4f14.  `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` := v0 @kind object;
  #L1a4f18.  v0:= ":scheme" @kind object;
  #L1a4f1c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4f22.  v0:= temp @kind object;
  #L1a4f24.  `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` := v0 @kind object;
  #L1a4f28.  v0:= ":authority" @kind object;
  #L1a4f2c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4f32.  v0:= temp @kind object;
  #L1a4f34.  `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` := v0 @kind object;
  #L1a4f38.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v2 @kind this, `java.lang.String` v3 @kind object @name `name`, `java.lang.String` v4 @kind object @name `value`) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a4f4c.  call temp:= `encodeUtf8`(v3) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4f52.  v0:= temp @kind object;
  #L1a4f54.  call temp:= `encodeUtf8`(v4) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4f5a.  v1:= temp @kind object;
  #L1a4f5c.  call `<init>`(v2, v0, v1) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L1a4f62.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v1 @kind this, `okio.ByteString` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a4f74.  call temp:= `encodeUtf8`(v3) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a4f7a.  v0:= temp @kind object;
  #L1a4f7c.  call `<init>`(v1, v2, v0) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L1a4f82.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v2 @kind this, `okio.ByteString` v3 @kind object @name `name`, `okio.ByteString` v4 @kind object @name `value`) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a4f94.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a4f9a.  v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` := v3 @kind object;
  #L1a4f9e.  v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` := v4 @kind object;
  #L1a4fa2.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1a4fa8.  v0:= temp;
  #L1a4faa.  v0:= v0 + 32;
  #L1a4fae.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1a4fb4.  v1:= temp;
  #L1a4fb6.  v0:= v0 + v1 @kind int;
  #L1a4fb8.  v2.`okhttp3.internal.http2.Header.hpackSize` @type ^`int` := v0;
  #L1a4fbc.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.Header` v4 @kind this, `java.lang.Object` v5 @kind object @name `other`) @signature `Lokhttp3/internal/http2/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a4fd0.  v1:= 0I;
  #L1a4fd2.  v2:= instanceof @variable v5 @type ^`okhttp3.internal.http2.Header` @kind boolean;
  #L1a4fd6.  if v2 == 0 then goto L1a500a;
  #L1a4fda.  v0:= v5 @kind object;
  #L1a4fdc.  v0:= (`okhttp3.internal.http2.Header`) v0 @kind object;
  #L1a4fe0.  v2:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1a4fe4.  v3:= v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1a4fe8.  call temp:= `equals`(v2, v3) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a4fee.  v2:= temp;
  #L1a4ff0.  if v2 == 0 then goto L1a500a;
  #L1a4ff4.  v2:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1a4ff8.  v3:= v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1a4ffc.  call temp:= `equals`(v2, v3) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a5002.  v2:= temp;
  #L1a5004.  if v2 == 0 then goto L1a500a;
  #L1a5008.  v1:= 1I;
  #L1a500a.  return v1;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.Header` v3 @kind this) @signature `Lokhttp3/internal/http2/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a501c.  v0:= 17I;
  #L1a5020.  v1:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1a5024.  call temp:= `hashCode`(v1) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L1a502a.  v1:= temp;
  #L1a502c.  v0:= v1 + 527;
  #L1a5030.  v1:= v0 * 31;
  #L1a5034.  v2:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1a5038.  call temp:= `hashCode`(v2) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L1a503e.  v2:= temp;
  #L1a5040.  v0:= v1 + v2 @kind int;
  #L1a5044.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.Header` v4 @kind this) @signature `Lokhttp3/internal/http2/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a5058.  v0:= "%s: %s" @kind object;
  #L1a505c.  v1:= 2I;
  #L1a505e.  v1:= new `java.lang.Object`[v1];
  #L1a5062.  v2:= 0I;
  #L1a5064.  v3:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1a5068.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1a506e.  v3:= temp @kind object;
  #L1a5070.  v1[v2]:= v3 @kind object;
  #L1a5074.  v2:= 1I;
  #L1a5076.  v3:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1a507a.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1a5080.  v3:= temp @kind object;
  #L1a5082.  v1[v2]:= v3 @kind object;
  #L1a5086.  call temp:= `format`(v0, v1) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a508c.  v0:= temp @kind object;
  #L1a508e.  return v0 @kind object;
}

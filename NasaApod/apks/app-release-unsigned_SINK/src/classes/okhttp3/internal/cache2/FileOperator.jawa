record `okhttp3.internal.cache2.FileOperator` @kind class @AccessFlag FINAL {
  `java.nio.channels.FileChannel` `okhttp3.internal.cache2.FileOperator.fileChannel` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache2.FileOperator` v0 @kind this, `java.nio.channels.FileChannel` v1 @kind object @name `fileChannel`) @signature `Lokhttp3/internal/cache2/FileOperator;.<init>:(Ljava/nio/channels/FileChannel;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1a2544.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a254a.  v0.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` := v1 @kind object;
  #L1a254e.  return @kind void;
}
procedure `void` `read`(`okhttp3.internal.cache2.FileOperator` v10 @kind this, `long` v11 @name `pos`, `okio.Buffer` v13 @kind object @name `sink`, `long` v14 @name `byteCount`) @signature `Lokhttp3/internal/cache2/FileOperator;.read:(JLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1a2560.  v0:= 0L;
  #L1a2564.  v0:= lcmp(v14, v0);
  #L1a2568.  if v0 >= 0 then goto L1a2578;
  #L1a256c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L1a2570.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L1a2576.  throw v0;
  #L1a2578.  v0:= 0L;
  #L1a257c.  v0:= lcmp(v14, v0);
  #L1a2580.  if v0 <= 0 then goto L1a259c;
  #L1a2584.  v1:= v10.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L1a2588.  v2:= v11 @kind wide;
  #L1a258a.  v4:= v14 @kind wide;
  #L1a258c.  v6:= v13 @kind object;
  #L1a258e.  call temp:= `transferTo`(v1, v2, v4, v6) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L1a2594.  v8:= temp @kind wide;
  #L1a2596.  v11:= v11 + v8 @kind long;
  #L1a2598.  v14:= v14 - v8 @kind long;
  #L1a259a.  goto L1a2578;
  #L1a259c.  return @kind void;
}
procedure `void` `write`(`okhttp3.internal.cache2.FileOperator` v10 @kind this, `long` v11 @name `pos`, `okio.Buffer` v13 @kind object @name `source`, `long` v14 @name `byteCount`) @signature `Lokhttp3/internal/cache2/FileOperator;.write:(JLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1a25b0.  v8:= 0L;
  #L1a25b4.  v0:= lcmp(v14, v8);
  #L1a25b8.  if v0 < 0 then goto L1a25cc;
  #L1a25bc.  call temp:= `size`(v13) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1a25c2.  v0:= temp @kind wide;
  #L1a25c4.  v0:= lcmp(v14, v0);
  #L1a25c8.  if v0 <= 0 then goto L1a25d8;
  #L1a25cc.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L1a25d0.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L1a25d6.  throw v0;
  #L1a25d8.  v0:= lcmp(v14, v8);
  #L1a25dc.  if v0 <= 0 then goto L1a25f8;
  #L1a25e0.  v0:= v10.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L1a25e4.  v1:= v13 @kind object;
  #L1a25e6.  v2:= v11 @kind wide;
  #L1a25e8.  v4:= v14 @kind wide;
  #L1a25ea.  call temp:= `transferFrom`(v0, v1, v2, v4) @signature `Ljava/nio/channels/FileChannel;.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J` @kind virtual;
  #L1a25f0.  v6:= temp @kind wide;
  #L1a25f2.  v11:= v11 + v6 @kind long;
  #L1a25f4.  v14:= v14 - v6 @kind long;
  #L1a25f6.  goto L1a25d8;
  #L1a25f8.  return @kind void;
}

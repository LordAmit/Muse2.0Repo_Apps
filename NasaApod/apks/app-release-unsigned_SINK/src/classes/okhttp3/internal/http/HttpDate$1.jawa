record `okhttp3.internal.http.HttpDate$1` @kind class @AccessFlag FINAL extends `java.lang.ThreadLocal` @kind class {
}
procedure `void` `<init>`(`okhttp3.internal.http.HttpDate$1` v0 @kind this) @signature `Lokhttp3/internal/http/HttpDate$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1a3f2c.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L1a3f32.  return @kind void;
}
procedure `java.lang.Object` `initialValue`(`okhttp3.internal.http.HttpDate$1` v1 @kind this) @signature `Lokhttp3/internal/http/HttpDate$1;.initialValue:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L1a3f44.  call temp:= `initialValue`(v1) @signature `Lokhttp3/internal/http/HttpDate$1;.initialValue:()Ljava/text/DateFormat;` @kind virtual;
  #L1a3f4a.  v0:= temp @kind object;
  #L1a3f4c.  return v0 @kind object;
}
procedure `java.text.DateFormat` `initialValue`(`okhttp3.internal.http.HttpDate$1` v3 @kind this) @signature `Lokhttp3/internal/http/HttpDate$1;.initialValue:()Ljava/text/DateFormat;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1a3f60.  v0:= new `java.text.SimpleDateFormat`;
  #L1a3f64.  v1:= "EEE, dd MMM yyyy HH:mm:ss 'GMT'" @kind object;
  #L1a3f68.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1a3f6c.  call `<init>`(v0, v1, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L1a3f72.  v1:= 0I;
  #L1a3f74.  call `setLenient`(v0, v1) @signature `Ljava/text/DateFormat;.setLenient:(Z)V` @kind virtual;
  #L1a3f7a.  v1:= `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` @kind object;
  #L1a3f7e.  call `setTimeZone`(v0, v1) @signature `Ljava/text/DateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L1a3f84.  return v0 @kind object;
}

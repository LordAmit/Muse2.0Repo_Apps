record `okhttp3.internal.cache.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC {
  `int` `okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.etag` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.expires` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy$Factory.request` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy$Factory` v9 @kind this, `long` v10 @name `nowMillis`, `okhttp3.Request` v12 @kind object @name `request`, `okhttp3.Response` v13 @kind object @name `cacheResponse`) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a0184.  v8:= -1I;
  #L1a0186.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a018c.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v8;
  #L1a0190.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` := v10 @kind wide;
  #L1a0194.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` := v12 @kind object;
  #L1a0198.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` := v13 @kind object;
  #L1a019c.  if v13 == 0 then goto L1a0278;
  #L1a01a0.  call temp:= `sentRequestAtMillis`(v13) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L1a01a6.  v6:= temp @kind wide;
  #L1a01a8.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` := v6 @kind wide;
  #L1a01ac.  call temp:= `receivedResponseAtMillis`(v13) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L1a01b2.  v6:= temp @kind wide;
  #L1a01b4.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` := v6 @kind wide;
  #L1a01b8.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a01be.  v1:= temp @kind object;
  #L1a01c0.  v2:= 0I;
  #L1a01c2.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1a01c8.  v3:= temp;
  #L1a01ca.  if v2 >= v3 then goto L1a0278;
  #L1a01ce.  call temp:= `name`(v1, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1a01d4.  v0:= temp @kind object;
  #L1a01d6.  call temp:= `value`(v1, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1a01dc.  v4:= temp @kind object;
  #L1a01de.  v5:= "Date" @kind object;
  #L1a01e2.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a01e8.  v5:= temp;
  #L1a01ea.  if v5 == 0 then goto L1a0204;
  #L1a01ee.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a01f4.  v5:= temp @kind object;
  #L1a01f6.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` := v5 @kind object;
  #L1a01fa.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` := v4 @kind object;
  #L1a01fe.  v2:= v2 + 1;
  #L1a0202.  goto L1a01ca;
  #L1a0204.  v5:= "Expires" @kind object;
  #L1a0208.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a020e.  v5:= temp;
  #L1a0210.  if v5 == 0 then goto L1a0222;
  #L1a0214.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a021a.  v5:= temp @kind object;
  #L1a021c.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` := v5 @kind object;
  #L1a0220.  goto L1a01fe;
  #L1a0222.  v5:= "Last-Modified" @kind object;
  #L1a0226.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a022c.  v5:= temp;
  #L1a022e.  if v5 == 0 then goto L1a0244;
  #L1a0232.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a0238.  v5:= temp @kind object;
  #L1a023a.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` := v5 @kind object;
  #L1a023e.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` := v4 @kind object;
  #L1a0242.  goto L1a01fe;
  #L1a0244.  v5:= "ETag" @kind object;
  #L1a0248.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a024e.  v5:= temp;
  #L1a0250.  if v5 == 0 then goto L1a025a;
  #L1a0254.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` := v4 @kind object;
  #L1a0258.  goto L1a01fe;
  #L1a025a.  v5:= "Age" @kind object;
  #L1a025e.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a0264.  v5:= temp;
  #L1a0266.  if v5 == 0 then goto L1a01fe;
  #L1a026a.  call temp:= `parseSeconds`(v4, v8) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L1a0270.  v5:= temp;
  #L1a0272.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v5;
  #L1a0276.  goto L1a01fe;
  #L1a0278.  return @kind void;
}
procedure `long` `cacheResponseAge`(`okhttp3.internal.cache.CacheStrategy$Factory` v12 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1a028c.  v0:= 0L;
  #L1a0290.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a0294.  if v8 == 0 then goto L1a02b2;
  #L1a0298.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L1a029c.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a02a0.  call temp:= `getTime`(v10) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a02a6.  v10:= temp @kind wide;
  #L1a02a8.  v8:= v8 - v10 @kind long;
  #L1a02aa.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1a02b0.  v0:= temp @kind wide;
  #L1a02b2.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L1a02b6.  v9:= -1I;
  #L1a02b8.  if v8 == v9 then goto L1a02f6;
  #L1a02bc.  v8:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a02c0.  v9:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L1a02c4.  v10:= (`long`) v9 @kind i2l;
  #L1a02c6.  call temp:= `toMillis`(v8, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a02cc.  v8:= temp @kind wide;
  #L1a02ce.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1a02d4.  v2:= temp @kind wide;
  #L1a02d6.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L1a02da.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L1a02de.  v6:= v8 - v10 @kind long;
  #L1a02e2.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` @kind wide;
  #L1a02e6.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L1a02ea.  v4:= v8 - v10 @kind long;
  #L1a02ee.  v8:= v2 + v6 @kind long;
  #L1a02f2.  v8:= v8 + v4 @kind long;
  #L1a02f4.  return v8 @kind wide;
  #L1a02f6.  v2:= v0 @kind wide;
  #L1a02f8.  goto L1a02d6;
}
procedure `long` `computeFreshnessLifetime`(`okhttp3.internal.cache.CacheStrategy$Factory` v10 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1a030c.  v6:= 0L;
  #L1a0310.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0314.  call temp:= `cacheControl`(v3) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a031a.  v2:= temp @kind object;
  #L1a031c.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a0322.  v3:= temp;
  #L1a0324.  v8:= -1I;
  #L1a0326.  if v3 == v8 then goto L1a0342;
  #L1a032a.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a032e.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a0334.  v6:= temp;
  #L1a0336.  v6:= (`long`) v6 @kind i2l;
  #L1a0338.  call temp:= `toMillis`(v3, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a033e.  v6:= temp @kind wide;
  #L1a0340.  return v6 @kind wide;
  #L1a0342.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L1a0346.  if v3 == 0 then goto L1a0384;
  #L1a034a.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a034e.  if v3 == 0 then goto L1a037a;
  #L1a0352.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a0356.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a035c.  v4:= temp @kind wide;
  #L1a035e.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L1a0362.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a0368.  v8:= temp @kind wide;
  #L1a036a.  v0:= v8 - v4 @kind long;
  #L1a036e.  v3:= lcmp(v0, v6);
  #L1a0372.  if v3 <= 0 then goto L1a0380;
  #L1a0376.  v6:= v0 @kind wide;
  #L1a0378.  goto L1a0340;
  #L1a037a.  v4:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L1a037e.  goto L1a035e;
  #L1a0380.  v0:= v6 @kind wide;
  #L1a0382.  goto L1a0376;
  #L1a0384.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L1a0388.  if v3 == 0 then goto L1a0340;
  #L1a038c.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0390.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1a0396.  v3:= temp @kind object;
  #L1a0398.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a039e.  v3:= temp @kind object;
  #L1a03a0.  call temp:= `query`(v3) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L1a03a6.  v3:= temp @kind object;
  #L1a03a8.  if v3 != 0 then goto L1a0340;
  #L1a03ac.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a03b0.  if v3 == 0 then goto L1a03e2;
  #L1a03b4.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a03b8.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a03be.  v4:= temp @kind wide;
  #L1a03c0.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L1a03c4.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a03ca.  v8:= temp @kind wide;
  #L1a03cc.  v0:= v4 - v8 @kind long;
  #L1a03d0.  v3:= lcmp(v0, v6);
  #L1a03d4.  if v3 <= 0 then goto L1a0340;
  #L1a03d8.  v6:= 10L;
  #L1a03dc.  v6:= v0 / v6 @kind long;
  #L1a03e0.  goto L1a0340;
  #L1a03e2.  v4:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L1a03e6.  goto L1a03c0;
}
procedure `okhttp3.internal.cache.CacheStrategy` `getCandidate`(`okhttp3.internal.cache.CacheStrategy$Factory` v24 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L1a03f8.  v0:= v24 @kind object;
  #L1a03fc.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0400.  v19:= v0 @kind object;
  #L1a0404.  if v19 != 0 then goto L1a0424;
  #L1a0408.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a040c.  v0:= v24 @kind object;
  #L1a0410.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0414.  v20:= v0 @kind object;
  #L1a0418.  v21:= 0I;
  #L1a041c.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a0422.  return v19 @kind object;
  #L1a0424.  v0:= v24 @kind object;
  #L1a0428.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a042c.  v19:= v0 @kind object;
  #L1a0430.  call temp:= `isHttps`(v19) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L1a0436.  v19:= temp;
  #L1a0438.  if v19 == 0 then goto L1a0470;
  #L1a043c.  v0:= v24 @kind object;
  #L1a0440.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0444.  v19:= v0 @kind object;
  #L1a0448.  call temp:= `handshake`(v19) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L1a044e.  v19:= temp @kind object;
  #L1a0450.  if v19 != 0 then goto L1a0470;
  #L1a0454.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0458.  v0:= v24 @kind object;
  #L1a045c.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0460.  v20:= v0 @kind object;
  #L1a0464.  v21:= 0I;
  #L1a0468.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a046e.  goto L1a0422;
  #L1a0470.  v0:= v24 @kind object;
  #L1a0474.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0478.  v19:= v0 @kind object;
  #L1a047c.  v0:= v24 @kind object;
  #L1a0480.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0484.  v20:= v0 @kind object;
  #L1a0488.  call temp:= `isCacheable`(v19, v20) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L1a048e.  v19:= temp;
  #L1a0490.  if v19 != 0 then goto L1a04b0;
  #L1a0494.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0498.  v0:= v24 @kind object;
  #L1a049c.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a04a0.  v20:= v0 @kind object;
  #L1a04a4.  v21:= 0I;
  #L1a04a8.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a04ae.  goto L1a0422;
  #L1a04b0.  v0:= v24 @kind object;
  #L1a04b4.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a04b8.  v19:= v0 @kind object;
  #L1a04bc.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a04c2.  v9:= temp @kind object;
  #L1a04c4.  call temp:= `noCache`(v9) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L1a04ca.  v19:= temp;
  #L1a04cc.  if v19 != 0 then goto L1a04e8;
  #L1a04d0.  v0:= v24 @kind object;
  #L1a04d4.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a04d8.  v19:= v0 @kind object;
  #L1a04dc.  call temp:= `hasConditions`(v19) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @kind static;
  #L1a04e2.  v19:= temp;
  #L1a04e4.  if v19 == 0 then goto L1a0504;
  #L1a04e8.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a04ec.  v0:= v24 @kind object;
  #L1a04f0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a04f4.  v20:= v0 @kind object;
  #L1a04f8.  v21:= 0I;
  #L1a04fc.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a0502.  goto L1a0422;
  #L1a0504.  v0:= v24 @kind object;
  #L1a0508.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a050c.  v19:= v0 @kind object;
  #L1a0510.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a0516.  v18:= temp @kind object;
  #L1a0518.  call temp:= `immutable`(v18) @signature `Lokhttp3/CacheControl;.immutable:()Z` @kind virtual;
  #L1a051e.  v19:= temp;
  #L1a0520.  if v19 == 0 then goto L1a0542;
  #L1a0524.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0528.  v20:= 0I;
  #L1a052c.  v0:= v24 @kind object;
  #L1a0530.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0534.  v21:= v0 @kind object;
  #L1a0538.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a053e.  goto L1a0422;
  #L1a0542.  call temp:= `cacheResponseAge`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @kind direct;
  #L1a0548.  v2:= temp @kind wide;
  #L1a054a.  call temp:= `computeFreshnessLifetime`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @kind direct;
  #L1a0550.  v10:= temp @kind wide;
  #L1a0552.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a0558.  v19:= temp;
  #L1a055a.  v20:= -1I;
  #L1a055e.  v0:= v19;
  #L1a0562.  v1:= v20;
  #L1a0566.  if v0 == v1 then goto L1a0594;
  #L1a056a.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a056e.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a0574.  v20:= temp;
  #L1a0576.  v0:= v20;
  #L1a057a.  v0:= (`long`) v0 @kind i2l;
  #L1a057c.  v20:= v0 @kind wide;
  #L1a0580.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a0586.  v20:= temp @kind wide;
  #L1a0588.  v0:= v20 @kind wide;
  #L1a058c.  call temp:= `min`(v10, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1a0592.  v10:= temp @kind wide;
  #L1a0594.  v14:= 0L;
  #L1a0598.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L1a059e.  v19:= temp;
  #L1a05a0.  v20:= -1I;
  #L1a05a4.  v0:= v19;
  #L1a05a8.  v1:= v20;
  #L1a05ac.  if v0 == v1 then goto L1a05ce;
  #L1a05b0.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a05b4.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L1a05ba.  v20:= temp;
  #L1a05bc.  v0:= v20;
  #L1a05c0.  v0:= (`long`) v0 @kind i2l;
  #L1a05c2.  v20:= v0 @kind wide;
  #L1a05c6.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a05cc.  v14:= temp @kind wide;
  #L1a05ce.  v12:= 0L;
  #L1a05d2.  call temp:= `mustRevalidate`(v18) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L1a05d8.  v19:= temp;
  #L1a05da.  if v19 != 0 then goto L1a0614;
  #L1a05de.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L1a05e4.  v19:= temp;
  #L1a05e6.  v20:= -1I;
  #L1a05ea.  v0:= v19;
  #L1a05ee.  v1:= v20;
  #L1a05f2.  if v0 == v1 then goto L1a0614;
  #L1a05f6.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a05fa.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L1a0600.  v20:= temp;
  #L1a0602.  v0:= v20;
  #L1a0606.  v0:= (`long`) v0 @kind i2l;
  #L1a0608.  v20:= v0 @kind wide;
  #L1a060c.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a0612.  v12:= temp @kind wide;
  #L1a0614.  call temp:= `noCache`(v18) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L1a061a.  v19:= temp;
  #L1a061c.  if v19 != 0 then goto L1a06b0;
  #L1a0620.  v20:= v2 + v14 @kind long;
  #L1a0624.  v22:= v10 + v12 @kind long;
  #L1a0628.  v19:= lcmp(v20, v22);
  #L1a062c.  if v19 >= 0 then goto L1a06b0;
  #L1a0630.  v0:= v24 @kind object;
  #L1a0634.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0638.  v19:= v0 @kind object;
  #L1a063c.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1a0642.  v4:= temp @kind object;
  #L1a0644.  v20:= v2 + v14 @kind long;
  #L1a0648.  v19:= lcmp(v20, v10);
  #L1a064c.  if v19 < 0 then goto L1a0666;
  #L1a0650.  v19:= "Warning" @kind object;
  #L1a0654.  v20:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L1a0658.  v0:= v19 @kind object;
  #L1a065c.  v1:= v20 @kind object;
  #L1a0660.  call temp:= `addHeader`(v4, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1a0666.  v16:= 86400000L;
  #L1a066c.  v19:= lcmp(v2, v16);
  #L1a0670.  if v19 <= 0 then goto L1a0696;
  #L1a0674.  call temp:= `isFreshnessLifetimeHeuristic`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @kind direct;
  #L1a067a.  v19:= temp;
  #L1a067c.  if v19 == 0 then goto L1a0696;
  #L1a0680.  v19:= "Warning" @kind object;
  #L1a0684.  v20:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L1a0688.  v0:= v19 @kind object;
  #L1a068c.  v1:= v20 @kind object;
  #L1a0690.  call temp:= `addHeader`(v4, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1a0696.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a069a.  v20:= 0I;
  #L1a069e.  call temp:= `build`(v4) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1a06a4.  v21:= temp @kind object;
  #L1a06a6.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a06ac.  goto L1a0422;
  #L1a06b0.  v0:= v24 @kind object;
  #L1a06b4.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L1a06b8.  v19:= v0 @kind object;
  #L1a06bc.  if v19 == 0 then goto L1a0744;
  #L1a06c0.  v5:= "If-None-Match" @kind object;
  #L1a06c4.  v0:= v24 @kind object;
  #L1a06c8.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L1a06cc.  v0:= v24 @kind object;
  #L1a06d0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a06d4.  v19:= v0 @kind object;
  #L1a06d8.  call temp:= `headers`(v19) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a06de.  v19:= temp @kind object;
  #L1a06e0.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a06e6.  v8:= temp @kind object;
  #L1a06e8.  v19:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L1a06ec.  v0:= v19 @kind object;
  #L1a06f0.  call `addLenient`(v0, v8, v5, v6) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1a06f6.  v0:= v24 @kind object;
  #L1a06fa.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a06fe.  v19:= v0 @kind object;
  #L1a0702.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L1a0708.  v19:= temp @kind object;
  #L1a070a.  call temp:= `build`(v8) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1a0710.  v20:= temp @kind object;
  #L1a0712.  call temp:= `headers`(v19, v20) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a0718.  v19:= temp @kind object;
  #L1a071a.  call temp:= `build`(v19) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1a0720.  v7:= temp @kind object;
  #L1a0722.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0726.  v0:= v24 @kind object;
  #L1a072a.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a072e.  v20:= v0 @kind object;
  #L1a0732.  v0:= v19 @kind object;
  #L1a0736.  v1:= v20 @kind object;
  #L1a073a.  call `<init>`(v0, v7, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a0740.  goto L1a0422;
  #L1a0744.  v0:= v24 @kind object;
  #L1a0748.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L1a074c.  v19:= v0 @kind object;
  #L1a0750.  if v19 == 0 then goto L1a0762;
  #L1a0754.  v5:= "If-Modified-Since" @kind object;
  #L1a0758.  v0:= v24 @kind object;
  #L1a075c.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` @kind object;
  #L1a0760.  goto L1a06cc;
  #L1a0762.  v0:= v24 @kind object;
  #L1a0766.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a076a.  v19:= v0 @kind object;
  #L1a076e.  if v19 == 0 then goto L1a0780;
  #L1a0772.  v5:= "If-Modified-Since" @kind object;
  #L1a0776.  v0:= v24 @kind object;
  #L1a077a.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` @kind object;
  #L1a077e.  goto L1a06cc;
  #L1a0780.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0784.  v0:= v24 @kind object;
  #L1a0788.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a078c.  v20:= v0 @kind object;
  #L1a0790.  v21:= 0I;
  #L1a0794.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a079a.  goto L1a0422;
}
procedure `boolean` `hasConditions`(`okhttp3.Request` v1 @kind object @name `request`) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1a07b0.  v0:= "If-Modified-Since" @kind object;
  #L1a07b4.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a07ba.  v0:= temp @kind object;
  #L1a07bc.  if v0 != 0 then goto L1a07d0;
  #L1a07c0.  v0:= "If-None-Match" @kind object;
  #L1a07c4.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a07ca.  v0:= temp @kind object;
  #L1a07cc.  if v0 == 0 then goto L1a07d4;
  #L1a07d0.  v0:= 1I;
  #L1a07d2.  return v0;
  #L1a07d4.  v0:= 0I;
  #L1a07d6.  goto L1a07d2;
}
procedure `boolean` `isFreshnessLifetimeHeuristic`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a07e8.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a07ec.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a07f2.  v0:= temp @kind object;
  #L1a07f4.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a07fa.  v0:= temp;
  #L1a07fc.  v1:= -1I;
  #L1a07fe.  if v0 != v1 then goto L1a080e;
  #L1a0802.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L1a0806.  if v0 != 0 then goto L1a080e;
  #L1a080a.  v0:= 1I;
  #L1a080c.  return v0;
  #L1a080e.  v0:= 0I;
  #L1a0810.  goto L1a080c;
}
procedure `okhttp3.internal.cache.CacheStrategy` `get`(`okhttp3.internal.cache.CacheStrategy$Factory` v3 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0824.  v2:= 0I;
  #L1a0826.  call temp:= `getCandidate`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @kind direct;
  #L1a082c.  v0:= temp @kind object;
  #L1a082e.  v1:= v0.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L1a0832.  if v1 == 0 then goto L1a0858;
  #L1a0836.  v1:= v3.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a083a.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a0840.  v1:= temp @kind object;
  #L1a0842.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L1a0848.  v1:= temp;
  #L1a084a.  if v1 == 0 then goto L1a0858;
  #L1a084e.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0852.  call `<init>`(v0, v2, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a0858.  return v0 @kind object;
}

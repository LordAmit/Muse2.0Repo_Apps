record `okhttp3.internal.cache.DiskLruCache$Editor` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.internal.cache.DiskLruCache$Editor.done` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.DiskLruCache$Entry` `okhttp3.internal.cache.DiskLruCache$Editor.entry` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Editor.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean`[] `okhttp3.internal.cache.DiskLruCache$Editor.written` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Editor` v1 @kind this, `okhttp3.internal.cache.DiskLruCache` v2 @kind object @name `this$0`, `okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind object @name `entry`) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Lokhttp3/internal/cache/DiskLruCache$Entry;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1a0c20.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v2 @kind object;
  #L1a0c24.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a0c2a.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` := v3 @kind object;
  #L1a0c2e.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L1a0c32.  if v0 == 0 then goto L1a0c3e;
  #L1a0c36.  v0:= 0I;
  #L1a0c38.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.written` @type ^`boolean`[] := v0 @kind object;
  #L1a0c3c.  return @kind void;
  #L1a0c3e.  v0:= v2.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0c42.  v0:= new `boolean`[v0];
  #L1a0c46.  goto L1a0c38;
}
procedure `void` `abort`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0c58.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0c5c.  @monitorenter v1
  #Try_start0.  
  #L1a0c5e.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0c62.  if v0 == 0 then goto L1a0c78;
  #L1a0c66.  v0:= new `java.lang.IllegalStateException`;
  #L1a0c6a.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1a0c70.  throw v0;
  #L1a0c72.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0c74.  @monitorexit v1
  #Try_end0.  
  #L1a0c76.  throw v0;
  #Try_start1.  
  #L1a0c78.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0c7c.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0c80.  if v0 != v3 then goto L1a0c90;
  #L1a0c84.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0c88.  v2:= 0I;
  #L1a0c8a.  call `completeEdit`(v0, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L1a0c90.  v0:= 1I;
  #L1a0c92.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` := v0 @kind boolean;
  #L1a0c96.  @monitorexit v1
  #Try_end1.  
  #L1a0c98.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0c72;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0c72;
}
procedure `void` `abortUnlessCommitted`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abortUnlessCommitted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0cc0.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0cc4.  @monitorenter v1
  #Try_start0.  
  #L1a0cc6.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0cca.  if v0 != 0 then goto L1a0ce6;
  #L1a0cce.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0cd2.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #Try_end0.  
  #L1a0cd6.  if v0 != v3 then goto L1a0ce6;
  #Try_start1.  
  #L1a0cda.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0cde.  v2:= 0I;
  #L1a0ce0.  call `completeEdit`(v0, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #Try_end1.  
  #Try_start2.  
  #L1a0ce6.  @monitorexit v1
  #L1a0ce8.  return @kind void;
  #L1a0cea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0cec.  @monitorexit v1
  #Try_end2.  
  #L1a0cee.  throw v0;
  #L1a0cf0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1a0cf2.  goto L1a0ce6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0cea;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L1a0cf0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0cea;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1a0cea;
}
procedure `void` `commit`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0d24.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0d28.  @monitorenter v1
  #Try_start0.  
  #L1a0d2a.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0d2e.  if v0 == 0 then goto L1a0d44;
  #L1a0d32.  v0:= new `java.lang.IllegalStateException`;
  #L1a0d36.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1a0d3c.  throw v0;
  #L1a0d3e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0d40.  @monitorexit v1
  #Try_end0.  
  #L1a0d42.  throw v0;
  #Try_start1.  
  #L1a0d44.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0d48.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0d4c.  if v0 != v3 then goto L1a0d5c;
  #L1a0d50.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0d54.  v2:= 1I;
  #L1a0d56.  call `completeEdit`(v0, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L1a0d5c.  v0:= 1I;
  #L1a0d5e.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` := v0 @kind boolean;
  #L1a0d62.  @monitorexit v1
  #Try_end1.  
  #L1a0d64.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0d3e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0d3e;
}
procedure `void` `detach`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.detach:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1a0d8c.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0d90.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0d94.  if v1 != v3 then goto L1a0dd0;
  #L1a0d98.  v0:= 0I;
  #L1a0d9a.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0d9e.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0da2.  if v0 >= v1 then goto L1a0dc6;
  #Try_start0.  
  #L1a0da6.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0daa.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1a0dae.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0db2.  v2:= v2.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L1a0db6.  v2:= v2[v0] @kind object;
  #L1a0dba.  call `delete`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #Try_end0.  
  #L1a0dc0.  v0:= v0 + 1;
  #L1a0dc4.  goto L1a0d9a;
  #L1a0dc6.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0dca.  v2:= 0I;
  #L1a0dcc.  v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` := v2 @kind object;
  #L1a0dd0.  return @kind void;
  #L1a0dd2.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1a0dd4.  goto L1a0dc0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1a0dd2;
}
procedure `okio.Sink` `newSink`(`okhttp3.internal.cache.DiskLruCache$Editor` v6 @kind this, `int` v7 @name `index`) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a0df8.  v4:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0dfc.  @monitorenter v4
  #Try_start0.  
  #L1a0dfe.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0e02.  if v3 == 0 then goto L1a0e18;
  #L1a0e06.  v3:= new `java.lang.IllegalStateException`;
  #L1a0e0a.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1a0e10.  throw v3;
  #L1a0e12.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0e14.  @monitorexit v4
  #Try_end0.  
  #L1a0e16.  throw v3;
  #Try_start1.  
  #L1a0e18.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0e1c.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0e20.  if v3 == v6 then goto L1a0e30;
  #L1a0e24.  call temp:= `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @kind static;
  #L1a0e2a.  v3:= temp @kind object;
  #L1a0e2c.  @monitorexit v4
  #L1a0e2e.  return v3 @kind object;
  #L1a0e30.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0e34.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L1a0e38.  if v3 != 0 then goto L1a0e46;
  #L1a0e3c.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.written` @type ^`boolean`[] @kind object;
  #L1a0e40.  v5:= 1I;
  #L1a0e42.  v3[v7]:= v5 @kind boolean;
  #L1a0e46.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0e4a.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L1a0e4e.  v0:= v3[v7] @kind object;
  #Try_end1.  
  #Try_start2.  
  #L1a0e52.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0e56.  v3:= v3.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1a0e5a.  call temp:= `sink`(v3, v0) @signature `Lokhttp3/internal/io/FileSystem;.sink:(Ljava/io/File;)Lokio/Sink;` @kind interface;
  #Try_end2.  
  #L1a0e60.  v2:= temp @kind object;
  #Try_start3.  
  #L1a0e62.  v3:= new `okhttp3.internal.cache.DiskLruCache$Editor$1`;
  #L1a0e66.  call `<init>`(v3, v6, v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor$1;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Editor;Lokio/Sink;)V` @kind direct;
  #L1a0e6c.  @monitorexit v4
  #L1a0e6e.  goto L1a0e2e;
  #L1a0e70.  v1:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L1a0e72.  call temp:= `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @kind static;
  #L1a0e78.  v3:= temp @kind object;
  #L1a0e7a.  @monitorexit v4
  #Try_end3.  
  #L1a0e7c.  goto L1a0e2e;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0e12;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0e12;
  catch `java.io.FileNotFoundException` @[Try_start2..Try_end2] goto L1a0e70;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1a0e12;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L1a0e12;
}
procedure `okio.Source` `newSource`(`okhttp3.internal.cache.DiskLruCache$Editor` v5 @kind this, `int` v6 @name `index`) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSource:(I)Lokio/Source;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a0eb8.  v1:= 0I;
  #L1a0eba.  v2:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0ebe.  @monitorenter v2
  #Try_start0.  
  #L1a0ec0.  v3:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0ec4.  if v3 == 0 then goto L1a0eda;
  #L1a0ec8.  v1:= new `java.lang.IllegalStateException`;
  #L1a0ecc.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1a0ed2.  throw v1;
  #L1a0ed4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0ed6.  @monitorexit v2
  #Try_end0.  
  #L1a0ed8.  throw v1;
  #Try_start1.  
  #L1a0eda.  v3:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0ede.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L1a0ee2.  if v3 == 0 then goto L1a0ef2;
  #L1a0ee6.  v3:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0eea.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0eee.  if v3 == v5 then goto L1a0ef6;
  #L1a0ef2.  @monitorexit v2
  #Try_end1.  
  #L1a0ef4.  return v1 @kind object;
  #Try_start2.  
  #L1a0ef6.  v3:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0efa.  v3:= v3.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1a0efe.  v4:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0f02.  v4:= v4.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L1a0f06.  v4:= v4[v6] @kind object;
  #L1a0f0a.  call temp:= `source`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #Try_end2.  
  #L1a0f10.  v1:= temp @kind object;
  #Try_start3.  
  #L1a0f12.  @monitorexit v2
  #L1a0f14.  goto L1a0ef4;
  #L1a0f16.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L1a0f18.  @monitorexit v2
  #Try_end3.  
  #L1a0f1a.  goto L1a0ef4;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0ed4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0ed4;
  catch `java.io.FileNotFoundException` @[Try_start2..Try_end2] goto L1a0f16;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1a0ed4;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L1a0ed4;
}

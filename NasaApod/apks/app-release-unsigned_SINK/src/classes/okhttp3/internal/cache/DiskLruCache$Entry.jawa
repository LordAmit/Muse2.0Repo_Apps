record `okhttp3.internal.cache.DiskLruCache$Entry` @kind class @AccessFlag FINAL {
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @AccessFlag ;
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.DiskLruCache$Entry.key` @AccessFlag FINAL;
  `long`[] `okhttp3.internal.cache.DiskLruCache$Entry.lengths` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.cache.DiskLruCache$Entry.readable` @AccessFlag ;
  `long` `okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Entry.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache` v8 @kind object, `java.lang.String` v9 @kind object @name `key`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a0f54.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v8 @kind object;
  #L1a0f58.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a0f5e.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` := v9 @kind object;
  #L1a0f62.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0f66.  v3:= new `long`[v3];
  #L1a0f6a.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] := v3 @kind object;
  #L1a0f6e.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0f72.  v3:= new `java.io.File`[v3];
  #L1a0f76.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] := v3 @kind object;
  #L1a0f7a.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0f7e.  v3:= new `java.io.File`[v3];
  #L1a0f82.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] := v3 @kind object;
  #L1a0f86.  v3:= new `java.lang.StringBuilder`;
  #L1a0f8a.  call `<init>`(v3, v9) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a0f90.  v4:= 46I;
  #L1a0f94.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0f9a.  v0:= temp @kind object;
  #L1a0f9c.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L1a0fa2.  v2:= temp;
  #L1a0fa4.  v1:= 0I;
  #L1a0fa6.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0faa.  if v1 >= v3 then goto L1a1006;
  #L1a0fae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0fb4.  v3:= v7.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L1a0fb8.  v4:= new `java.io.File`;
  #L1a0fbc.  v5:= v8.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L1a0fc0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0fc6.  v6:= temp @kind object;
  #L1a0fc8.  call `<init>`(v4, v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L1a0fce.  v3[v1]:= v4 @kind object;
  #L1a0fd2.  v3:= ".tmp" @kind object;
  #L1a0fd6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0fdc.  v3:= v7.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L1a0fe0.  v4:= new `java.io.File`;
  #L1a0fe4.  v5:= v8.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L1a0fe8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0fee.  v6:= temp @kind object;
  #L1a0ff0.  call `<init>`(v4, v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L1a0ff6.  v3[v1]:= v4 @kind object;
  #L1a0ffa.  call `setLength`(v0, v2) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L1a1000.  v1:= v1 + 1;
  #L1a1004.  goto L1a0fa6;
  #L1a1006.  return @kind void;
}
procedure `java.io.IOException` `invalidLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind this, `java.lang.String`[] v4 @kind object @name `strings`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a1018.  v0:= new `java.io.IOException`;
  #L1a101c.  v1:= new `java.lang.StringBuilder`;
  #L1a1020.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a1026.  v2:= "unexpected journal line: " @kind object;
  #L1a102a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1030.  v1:= temp @kind object;
  #L1a1032.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a1038.  v2:= temp @kind object;
  #L1a103a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a1040.  v1:= temp @kind object;
  #L1a1042.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a1048.  v1:= temp @kind object;
  #L1a104a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a1050.  throw v0;
}
procedure `void` `setLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `java.lang.String`[] v7 @kind object @name `strings`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.setLengths:([Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a1064.  v2:= length @variable v7;
  #L1a1066.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a106a.  v3:= v3.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a106e.  if v2 == v3 then goto L1a107c;
  #L1a1072.  call temp:= `invalidLengths`(v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L1a1078.  v2:= temp @kind object;
  #L1a107a.  throw v2;
  #L1a107c.  v1:= 0I;
  #Try_start0.  
  #L1a107e.  v2:= length @variable v7;
  #L1a1080.  if v1 >= v2 then goto L1a10aa;
  #L1a1084.  v2:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L1a1088.  v3:= v7[v1] @kind object;
  #L1a108c.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1a1092.  v4:= temp @kind wide;
  #L1a1094.  v2[v1]:= v4 @kind wide;
  #Try_end0.  
  #L1a1098.  v1:= v1 + 1;
  #L1a109c.  goto L1a107e;
  #L1a109e.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L1a10a0.  call temp:= `invalidLengths`(v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L1a10a6.  v2:= temp @kind object;
  #L1a10a8.  throw v2;
  #L1a10aa.  return @kind void;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L1a109e;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `snapshot`(`okhttp3.internal.cache.DiskLruCache$Entry` v9 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a10cc.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a10d0.  call temp:= `holdsLock`(v1) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1a10d6.  v1:= temp;
  #L1a10d8.  if v1 != 0 then goto L1a10e8;
  #L1a10dc.  v1:= new `java.lang.AssertionError`;
  #L1a10e0.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1a10e6.  throw v1;
  #L1a10e8.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a10ec.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a10f0.  v6:= new `okio.Source`[v1];
  #L1a10f4.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L1a10f8.  call temp:= `clone`(v1) @signature `[J.clone:()Ljava/lang/Object;` @kind virtual;
  #L1a10fe.  v7:= temp @kind object;
  #L1a1100.  v7:= (`long`[]) v7 @kind object;
  #L1a1104.  v8:= 0I;
  #Try_start0.  
  #L1a1106.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a110a.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a110e.  if v8 >= v1 then goto L1a1134;
  #L1a1112.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a1116.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1a111a.  v2:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L1a111e.  v2:= v2[v8] @kind object;
  #L1a1122.  call temp:= `source`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L1a1128.  v1:= temp @kind object;
  #L1a112a.  v6[v8]:= v1 @kind object;
  #L1a112e.  v8:= v8 + 1;
  #L1a1132.  goto L1a1106;
  #L1a1134.  v1:= new `okhttp3.internal.cache.DiskLruCache$Snapshot`;
  #L1a1138.  v2:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a113c.  v3:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` @kind object;
  #L1a1140.  v4:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @type ^`long` @kind wide;
  #L1a1144.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;J[Lokio/Source;[J)V` @kind direct;
  #Try_end0.  
  #L1a114a.  return v1 @kind object;
  #L1a114c.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L1a114e.  v8:= 0I;
  #L1a1150.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a1154.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a1158.  if v8 >= v1 then goto L1a1174;
  #L1a115c.  v1:= v6[v8] @kind object;
  #L1a1160.  if v1 == 0 then goto L1a1174;
  #L1a1164.  v1:= v6[v8] @kind object;
  #L1a1168.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1a116e.  v8:= v8 + 1;
  #L1a1172.  goto L1a1150;
  #Try_start1.  
  #L1a1174.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a1178.  call temp:= `removeEntry`(v1, v9) @signature `Lokhttp3/internal/cache/DiskLruCache;.removeEntry:(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z` @kind virtual;
  #Try_end1.  
  #L1a117e.  v1:= 0I;
  #L1a1180.  goto L1a114a;
  #L1a1182.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1a1184.  goto L1a117e;
  catch `java.io.FileNotFoundException` @[Try_start0..Try_end0] goto L1a114c;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L1a1182;
}
procedure `void` `writeLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `okio.BufferedSink` v7 @kind object @name `writer`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.writeLengths:(Lokio/BufferedSink;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a11b4.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L1a11b8.  v4:= length @variable v3;
  #L1a11ba.  v2:= 0I;
  #L1a11bc.  if v2 >= v4 then goto L1a11dc;
  #L1a11c0.  v0:= v3[v2] @kind wide;
  #L1a11c4.  v5:= 32I;
  #L1a11c8.  call temp:= `writeByte`(v7, v5) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1a11ce.  v5:= temp @kind object;
  #L1a11d0.  call temp:= `writeDecimalLong`(v5, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1a11d6.  v2:= v2 + 1;
  #L1a11da.  goto L1a11bc;
  #L1a11dc.  return @kind void;
}

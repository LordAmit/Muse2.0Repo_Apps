record `okhttp3.internal.connection.RouteDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.internal.connection.RouteDatabase.failedRoutes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a2b58.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a2b5e.  v0:= new `java.util.LinkedHashSet`;
  #L1a2b62.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L1a2b68.  v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` := v0 @kind object;
  #L1a2b6c.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `route`) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a2b80.  @monitorenter v1
  #Try_start0.  
  #L1a2b82.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a2b86.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a2b8c.  @monitorexit v1
  #L1a2b8e.  return @kind void;
  #L1a2b90.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a2b92.  @monitorexit v1
  #L1a2b94.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a2b90;
}
procedure `void` `failed`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `failedRoute`) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a2bb4.  @monitorenter v1
  #Try_start0.  
  #L1a2bb6.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a2bba.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a2bc0.  @monitorexit v1
  #L1a2bc2.  return @kind void;
  #L1a2bc4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a2bc6.  @monitorexit v1
  #L1a2bc8.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a2bc4;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `route`) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a2be8.  @monitorenter v1
  #Try_start0.  
  #L1a2bea.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a2bee.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a2bf4.  v0:= temp;
  #L1a2bf6.  @monitorexit v1
  #L1a2bf8.  return v0;
  #L1a2bfa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a2bfc.  @monitorexit v1
  #L1a2bfe.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a2bfa;
}

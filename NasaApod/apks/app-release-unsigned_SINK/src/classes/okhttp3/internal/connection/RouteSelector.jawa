record `okhttp3.internal.connection.RouteSelector` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.internal.connection.RouteSelector.address` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call` `okhttp3.internal.connection.RouteSelector.call` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.RouteSelector.eventListener` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RouteSelector.nextProxyIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.postponedRoutes` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.proxies` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteDatabase` `okhttp3.internal.connection.RouteSelector.routeDatabase` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector` v2 @kind this, `okhttp3.Address` v3 @kind object @name `address`, `okhttp3.internal.connection.RouteDatabase` v4 @kind object @name `routeDatabase`, `okhttp3.Call` v5 @kind object @name `call`, `okhttp3.EventListener` v6 @kind object @name `eventListener`) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a2dbc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a2dc2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1a2dc8.  v0:= temp @kind object;
  #L1a2dca.  v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v0 @kind object;
  #L1a2dce.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1a2dd4.  v0:= temp @kind object;
  #L1a2dd6.  v2.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L1a2dda.  v0:= new `java.util.ArrayList`;
  #L1a2dde.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a2de4.  v2.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` := v0 @kind object;
  #L1a2de8.  v2.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L1a2dec.  v2.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` := v4 @kind object;
  #L1a2df0.  v2.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` := v5 @kind object;
  #L1a2df4.  v2.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` := v6 @kind object;
  #L1a2df8.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a2dfe.  v0:= temp @kind object;
  #L1a2e00.  call temp:= `proxy`(v3) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a2e06.  v1:= temp @kind object;
  #L1a2e08.  call `resetNextProxy`(v2, v0, v1) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @kind direct;
  #L1a2e0e.  return @kind void;
}
procedure `java.lang.String` `getHostString`(`java.net.InetSocketAddress` v2 @kind object @name `socketAddress`) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a2e20.  call temp:= `getAddress`(v2) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L1a2e26.  v0:= temp @kind object;
  #L1a2e28.  if v0 != 0 then goto L1a2e36;
  #L1a2e2c.  call temp:= `getHostName`(v2) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L1a2e32.  v1:= temp @kind object;
  #L1a2e34.  return v1 @kind object;
  #L1a2e36.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L1a2e3c.  v1:= temp @kind object;
  #L1a2e3e.  goto L1a2e34;
}
procedure `boolean` `hasNextProxy`(`okhttp3.internal.connection.RouteSelector` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a2e50.  v0:= v2.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L1a2e54.  v1:= v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a2e58.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a2e5e.  v1:= temp;
  #L1a2e60.  if v0 >= v1 then goto L1a2e68;
  #L1a2e64.  v0:= 1I;
  #L1a2e66.  return v0;
  #L1a2e68.  v0:= 0I;
  #L1a2e6a.  goto L1a2e66;
}
procedure `java.net.Proxy` `nextProxy`(`okhttp3.internal.connection.RouteSelector` v4 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a2e7c.  call temp:= `hasNextProxy`(v4) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a2e82.  v1:= temp;
  #L1a2e84.  if v1 != 0 then goto L1a2ee6;
  #L1a2e88.  v1:= new `java.net.SocketException`;
  #L1a2e8c.  v2:= new `java.lang.StringBuilder`;
  #L1a2e90.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a2e96.  v3:= "No route to " @kind object;
  #L1a2e9a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2ea0.  v2:= temp @kind object;
  #L1a2ea2.  v3:= v4.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2ea6.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a2eac.  v3:= temp @kind object;
  #L1a2eae.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a2eb4.  v3:= temp @kind object;
  #L1a2eb6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2ebc.  v2:= temp @kind object;
  #L1a2ebe.  v3:= "; exhausted proxy configurations: " @kind object;
  #L1a2ec2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2ec8.  v2:= temp @kind object;
  #L1a2eca.  v3:= v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a2ece.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2ed4.  v2:= temp @kind object;
  #L1a2ed6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a2edc.  v2:= temp @kind object;
  #L1a2ede.  call `<init>`(v1, v2) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a2ee4.  throw v1;
  #L1a2ee6.  v1:= v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a2eea.  v2:= v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L1a2eee.  v3:= v2 + 1;
  #L1a2ef2.  v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v3;
  #L1a2ef6.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a2efc.  v0:= temp @kind object;
  #L1a2efe.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L1a2f02.  call `resetNextInetSocketAddress`(v4, v0) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @kind direct;
  #L1a2f08.  return v0 @kind object;
}
procedure `void` `resetNextInetSocketAddress`(`okhttp3.internal.connection.RouteSelector` v11 @kind this, `java.net.Proxy` v12 @kind object @name `proxy`) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1a2f1c.  v8:= new `java.util.ArrayList`;
  #L1a2f20.  call `<init>`(v8) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a2f26.  v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v8 @kind object;
  #L1a2f2a.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a2f30.  v8:= temp @kind object;
  #L1a2f32.  v9:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1a2f36.  if v8 == v9 then goto L1a2f4a;
  #L1a2f3a.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a2f40.  v8:= temp @kind object;
  #L1a2f42.  v9:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L1a2f46.  if v8 != v9 then goto L1a2fd4;
  #L1a2f4a.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2f4e.  call temp:= `url`(v8) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a2f54.  v8:= temp @kind object;
  #L1a2f56.  call temp:= `host`(v8) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a2f5c.  v6:= temp @kind object;
  #L1a2f5e.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2f62.  call temp:= `url`(v8) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a2f68.  v8:= temp @kind object;
  #L1a2f6a.  call temp:= `port`(v8) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1a2f70.  v7:= temp;
  #L1a2f72.  v8:= 1I;
  #L1a2f74.  if v7 < v8 then goto L1a2f82;
  #L1a2f78.  v8:= 65535I;
  #L1a2f7e.  if v7 <= v8 then goto L1a3036;
  #L1a2f82.  v8:= new `java.net.SocketException`;
  #L1a2f86.  v9:= new `java.lang.StringBuilder`;
  #L1a2f8a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a2f90.  v10:= "No route to " @kind object;
  #L1a2f94.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2f9a.  v9:= temp @kind object;
  #L1a2f9c.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2fa2.  v9:= temp @kind object;
  #L1a2fa4.  v10:= ":" @kind object;
  #L1a2fa8.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2fae.  v9:= temp @kind object;
  #L1a2fb0.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2fb6.  v9:= temp @kind object;
  #L1a2fb8.  v10:= "; port is out of range" @kind object;
  #L1a2fbc.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2fc2.  v9:= temp @kind object;
  #L1a2fc4.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a2fca.  v9:= temp @kind object;
  #L1a2fcc.  call `<init>`(v8, v9) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a2fd2.  throw v8;
  #L1a2fd4.  call temp:= `address`(v12) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L1a2fda.  v3:= temp @kind object;
  #L1a2fdc.  v8:= instanceof @variable v3 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L1a2fe0.  if v8 != 0 then goto L1a301e;
  #L1a2fe4.  v8:= new `java.lang.IllegalArgumentException`;
  #L1a2fe8.  v9:= new `java.lang.StringBuilder`;
  #L1a2fec.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a2ff2.  v10:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L1a2ff6.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2ffc.  v9:= temp @kind object;
  #L1a2ffe.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a3004.  v10:= temp @kind object;
  #L1a3006.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a300c.  v9:= temp @kind object;
  #L1a300e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a3014.  v9:= temp @kind object;
  #L1a3016.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a301c.  throw v8;
  #L1a301e.  v4:= v3 @kind object;
  #L1a3020.  v4:= (`java.net.InetSocketAddress`) v4 @kind object;
  #L1a3024.  call temp:= `getHostString`(v4) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L1a302a.  v6:= temp @kind object;
  #L1a302c.  call temp:= `getPort`(v4) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L1a3032.  v7:= temp;
  #L1a3034.  goto L1a2f72;
  #L1a3036.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a303c.  v8:= temp @kind object;
  #L1a303e.  v9:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L1a3042.  if v8 != v9 then goto L1a305a;
  #L1a3046.  v8:= v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a304a.  call temp:= `createUnresolved`(v6, v7) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L1a3050.  v9:= temp @kind object;
  #L1a3052.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a3058.  return @kind void;
  #L1a305a.  v8:= v11.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L1a305e.  v9:= v11.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L1a3062.  call `dnsStart`(v8, v9, v6) @signature `Lokhttp3/EventListener;.dnsStart:(Lokhttp3/Call;Ljava/lang/String;)V` @kind virtual;
  #L1a3068.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a306c.  call temp:= `dns`(v8) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L1a3072.  v8:= temp @kind object;
  #L1a3074.  call temp:= `lookup`(v8, v6) @signature `Lokhttp3/Dns;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L1a307a.  v0:= temp @kind object;
  #L1a307c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a3082.  v8:= temp;
  #L1a3084.  if v8 == 0 then goto L1a30ce;
  #L1a3088.  v8:= new `java.net.UnknownHostException`;
  #L1a308c.  v9:= new `java.lang.StringBuilder`;
  #L1a3090.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a3096.  v10:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a309a.  call temp:= `dns`(v10) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L1a30a0.  v10:= temp @kind object;
  #L1a30a2.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a30a8.  v9:= temp @kind object;
  #L1a30aa.  v10:= " returned no addresses for " @kind object;
  #L1a30ae.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a30b4.  v9:= temp @kind object;
  #L1a30b6.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a30bc.  v9:= temp @kind object;
  #L1a30be.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a30c4.  v9:= temp @kind object;
  #L1a30c6.  call `<init>`(v8, v9) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a30cc.  throw v8;
  #L1a30ce.  v8:= v11.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L1a30d2.  v9:= v11.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L1a30d6.  call `dnsEnd`(v8, v9, v6, v0) @signature `Lokhttp3/EventListener;.dnsEnd:(Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L1a30dc.  v1:= 0I;
  #L1a30de.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a30e4.  v5:= temp;
  #L1a30e6.  if v1 >= v5 then goto L1a3058;
  #L1a30ea.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a30f0.  v2:= temp @kind object;
  #L1a30f2.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L1a30f6.  v8:= v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a30fa.  v9:= new `java.net.InetSocketAddress`;
  #L1a30fe.  call `<init>`(v9, v2, v7) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L1a3104.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a310a.  v1:= v1 + 1;
  #L1a310e.  goto L1a30e6;
}
procedure `void` `resetNextProxy`(`okhttp3.internal.connection.RouteSelector` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object @name `url`, `java.net.Proxy` v6 @kind object @name `proxy`) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a3120.  v3:= 0I;
  #L1a3122.  if v6 == 0 then goto L1a3138;
  #L1a3126.  call temp:= `singletonList`(v6) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1a312c.  v1:= temp @kind object;
  #L1a312e.  v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v1 @kind object;
  #L1a3132.  v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v3;
  #L1a3136.  return @kind void;
  #L1a3138.  v1:= v4.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a313c.  call temp:= `proxySelector`(v1) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a3142.  v1:= temp @kind object;
  #L1a3144.  call temp:= `uri`(v5) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L1a314a.  v2:= temp @kind object;
  #L1a314c.  call temp:= `select`(v1, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L1a3152.  v0:= temp @kind object;
  #L1a3154.  if v0 == 0 then goto L1a3172;
  #L1a3158.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a315e.  v1:= temp;
  #L1a3160.  if v1 != 0 then goto L1a3172;
  #L1a3164.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1a316a.  v1:= temp @kind object;
  #L1a316c.  v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v1 @kind object;
  #L1a3170.  goto L1a3132;
  #L1a3172.  v1:= 1I;
  #L1a3174.  v1:= new `java.net.Proxy`[v1];
  #L1a3178.  v2:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L1a317c.  v1[v3]:= v2 @kind object;
  #L1a3180.  call temp:= `immutableList`(v1) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1a3186.  v1:= temp @kind object;
  #L1a3188.  goto L1a316c;
}
procedure `void` `connectFailed`(`okhttp3.internal.connection.RouteSelector` v3 @kind this, `okhttp3.Route` v4 @kind object @name `failedRoute`, `java.io.IOException` v5 @kind object @name `failure`) @signature `Lokhttp3/internal/connection/RouteSelector;.connectFailed:(Lokhttp3/Route;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a319c.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a31a2.  v0:= temp @kind object;
  #L1a31a4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a31aa.  v0:= temp @kind object;
  #L1a31ac.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1a31b0.  if v0 == v1 then goto L1a31fa;
  #L1a31b4.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a31b8.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a31be.  v0:= temp @kind object;
  #L1a31c0.  if v0 == 0 then goto L1a31fa;
  #L1a31c4.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a31c8.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a31ce.  v0:= temp @kind object;
  #L1a31d0.  v1:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a31d4.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a31da.  v1:= temp @kind object;
  #L1a31dc.  call temp:= `uri`(v1) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L1a31e2.  v1:= temp @kind object;
  #L1a31e4.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a31ea.  v2:= temp @kind object;
  #L1a31ec.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L1a31f2.  v2:= temp @kind object;
  #L1a31f4.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L1a31fa.  v0:= v3.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L1a31fe.  call `failed`(v0, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @kind virtual;
  #L1a3204.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a3218.  call temp:= `hasNextProxy`(v1) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a321e.  v0:= temp;
  #L1a3220.  if v0 != 0 then goto L1a3234;
  #L1a3224.  v0:= v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a3228.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a322e.  v0:= temp;
  #L1a3230.  if v0 != 0 then goto L1a3238;
  #L1a3234.  v0:= 1I;
  #L1a3236.  return v0;
  #L1a3238.  v0:= 0I;
  #L1a323a.  goto L1a3236;
}
procedure `okhttp3.internal.connection.RouteSelector$Selection` `next`(`okhttp3.internal.connection.RouteSelector` v7 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a324c.  call temp:= `hasNext`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L1a3252.  v5:= temp;
  #L1a3254.  if v5 != 0 then goto L1a3264;
  #L1a3258.  v5:= new `java.util.NoSuchElementException`;
  #L1a325c.  call `<init>`(v5) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1a3262.  throw v5;
  #L1a3264.  v3:= new `java.util.ArrayList`;
  #L1a3268.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a326e.  call temp:= `hasNextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a3274.  v5:= temp;
  #L1a3276.  if v5 == 0 then goto L1a32e6;
  #L1a327a.  call temp:= `nextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @kind direct;
  #L1a3280.  v1:= temp @kind object;
  #L1a3282.  v0:= 0I;
  #L1a3284.  v5:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a3288.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a328e.  v4:= temp;
  #L1a3290.  if v0 >= v4 then goto L1a32da;
  #L1a3294.  v2:= new `okhttp3.Route`;
  #L1a3298.  v6:= v7.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a329c.  v5:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a32a0.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a32a6.  v5:= temp @kind object;
  #L1a32a8.  v5:= (`java.net.InetSocketAddress`) v5 @kind object;
  #L1a32ac.  call `<init>`(v2, v6, v1, v5) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L1a32b2.  v5:= v7.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L1a32b6.  call temp:= `shouldPostpone`(v5, v2) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @kind virtual;
  #L1a32bc.  v5:= temp;
  #L1a32be.  if v5 == 0 then goto L1a32d2;
  #L1a32c2.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a32c6.  call temp:= `add`(v5, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a32cc.  v0:= v0 + 1;
  #L1a32d0.  goto L1a3290;
  #L1a32d2.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a32d8.  goto L1a32cc;
  #L1a32da.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a32e0.  v5:= temp;
  #L1a32e2.  if v5 != 0 then goto L1a326e;
  #L1a32e6.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a32ec.  v5:= temp;
  #L1a32ee.  if v5 == 0 then goto L1a3306;
  #L1a32f2.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a32f6.  call temp:= `addAll`(v3, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1a32fc.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a3300.  call `clear`(v5) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1a3306.  v5:= new `okhttp3.internal.connection.RouteSelector$Selection`;
  #L1a330a.  call `<init>`(v5, v3) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @kind direct;
  #L1a3310.  return v5 @kind object;
}

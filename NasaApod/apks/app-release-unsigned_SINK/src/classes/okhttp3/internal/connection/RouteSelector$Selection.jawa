record `okhttp3.internal.connection.RouteSelector$Selection` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector$Selection.routes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector$Selection` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1a2d04.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a2d0a.  v0:= 0I;
  #L1a2d0c.  v1.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int` := v0;
  #L1a2d10.  v1.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` := v2 @kind object;
  #L1a2d14.  return @kind void;
}
procedure `java.util.List` `getAll`(`okhttp3.internal.connection.RouteSelector$Selection` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a2d28.  v0:= new `java.util.ArrayList`;
  #L1a2d2c.  v1:= v2.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L1a2d30.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1a2d36.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector$Selection` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a2d48.  v0:= v2.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int`;
  #L1a2d4c.  v1:= v2.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L1a2d50.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a2d56.  v1:= temp;
  #L1a2d58.  if v0 >= v1 then goto L1a2d60;
  #L1a2d5c.  v0:= 1I;
  #L1a2d5e.  return v0;
  #L1a2d60.  v0:= 0I;
  #L1a2d62.  goto L1a2d5e;
}
procedure `okhttp3.Route` `next`(`okhttp3.internal.connection.RouteSelector$Selection` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a2d74.  call temp:= `hasNext`(v3) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L1a2d7a.  v0:= temp;
  #L1a2d7c.  if v0 != 0 then goto L1a2d8c;
  #L1a2d80.  v0:= new `java.util.NoSuchElementException`;
  #L1a2d84.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1a2d8a.  throw v0;
  #L1a2d8c.  v0:= v3.`okhttp3.internal.connection.RouteSelector$Selection.routes` @type ^`java.util.List` @kind object;
  #L1a2d90.  v1:= v3.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int`;
  #L1a2d94.  v2:= v1 + 1;
  #L1a2d98.  v3.`okhttp3.internal.connection.RouteSelector$Selection.nextRouteIndex` @type ^`int` := v2;
  #L1a2d9c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a2da2.  v0:= temp @kind object;
  #L1a2da4.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L1a2da8.  return v0 @kind object;
}

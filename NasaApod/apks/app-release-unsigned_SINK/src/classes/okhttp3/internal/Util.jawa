record `okhttp3.internal.Util` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.RequestBody` `@@okhttp3.internal.Util.EMPTY_REQUEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ResponseBody` `@@okhttp3.internal.Util.EMPTY_RESPONSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.ISO_8859_1` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@okhttp3.internal.Util.NATURAL_ORDER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@okhttp3.internal.Util.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_8_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L19f238.  v2:= 0I;
  #L19f23a.  v1:= 0I;
  #L19f23c.  v0:= new `byte`[v1];
  #L19f240.  `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v0 @kind object;
  #L19f244.  v0:= new `java.lang.String`[v1];
  #L19f248.  `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @type ^`java.lang.String`[] := v0 @kind object;
  #L19f24c.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L19f250.  call temp:= `create`(v2, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @kind static;
  #L19f256.  v0:= temp @kind object;
  #L19f258.  `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L19f25c.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L19f260.  call temp:= `create`(v2, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L19f266.  v0:= temp @kind object;
  #L19f268.  `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19f26c.  v0:= "efbbbf" @kind object;
  #L19f270.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f276.  v0:= temp @kind object;
  #L19f278.  `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f27c.  v0:= "feff" @kind object;
  #L19f280.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f286.  v0:= temp @kind object;
  #L19f288.  `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f28c.  v0:= "fffe" @kind object;
  #L19f290.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f296.  v0:= temp @kind object;
  #L19f298.  `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f29c.  v0:= "0000ffff" @kind object;
  #L19f2a0.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f2a6.  v0:= temp @kind object;
  #L19f2a8.  `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f2ac.  v0:= "ffff0000" @kind object;
  #L19f2b0.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f2b6.  v0:= temp @kind object;
  #L19f2b8.  `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f2bc.  v0:= "UTF-8" @kind object;
  #L19f2c0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f2c6.  v0:= temp @kind object;
  #L19f2c8.  `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f2cc.  v0:= "ISO-8859-1" @kind object;
  #L19f2d0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f2d6.  v0:= temp @kind object;
  #L19f2d8.  `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f2dc.  v0:= "UTF-16BE" @kind object;
  #L19f2e0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f2e6.  v0:= temp @kind object;
  #L19f2e8.  `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f2ec.  v0:= "UTF-16LE" @kind object;
  #L19f2f0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f2f6.  v0:= temp @kind object;
  #L19f2f8.  `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f2fc.  v0:= "UTF-32BE" @kind object;
  #L19f300.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f306.  v0:= temp @kind object;
  #L19f308.  `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f30c.  v0:= "UTF-32LE" @kind object;
  #L19f310.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f316.  v0:= temp @kind object;
  #L19f318.  `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f31c.  v0:= "GMT" @kind object;
  #L19f320.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L19f326.  v0:= temp @kind object;
  #L19f328.  `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` := v0 @kind object;
  #L19f32c.  v0:= new `okhttp3.internal.Util$1`;
  #L19f330.  call `<init>`(v0) @signature `Lokhttp3/internal/Util$1;.<init>:()V` @kind direct;
  #L19f336.  `@@okhttp3.internal.Util.NATURAL_ORDER` @type ^`java.util.Comparator` := v0 @kind object;
  #L19f33a.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L19f33e.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19f344.  v0:= temp @kind object;
  #L19f346.  `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19f34a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.Util` v0 @kind this) @signature `Lokhttp3/internal/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19f35c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19f362.  return @kind void;
}
procedure `java.lang.AssertionError` `assertionError`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Exception` v3 @kind object @name `e`) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19f374.  v0:= new `java.lang.AssertionError`;
  #L19f378.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #Try_start0.  
  #L19f37e.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #Try_end0.  
  #L19f384.  return v0 @kind object;
  #L19f386.  v1:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #L19f388.  goto L19f384;
  catch `java.lang.IllegalStateException` @[Try_start0..Try_end0] goto L19f386;
}
procedure `java.nio.charset.Charset` `bomAwareCharset`(`okio.BufferedSource` v4 @kind object @name `source`, `java.nio.charset.Charset` v5 @kind object @name `charset`) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19f3ac.  v2:= 0L;
  #L19f3b0.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L19f3b4.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f3ba.  v0:= temp;
  #L19f3bc.  if v0 == 0 then goto L19f3da;
  #L19f3c0.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L19f3c4.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f3ca.  v0:= temp;
  #L19f3cc.  v0:= (`long`) v0 @kind i2l;
  #L19f3ce.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f3d4.  v5:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19f3d8.  return v5 @kind object;
  #L19f3da.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f3de.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f3e4.  v0:= temp;
  #L19f3e6.  if v0 == 0 then goto L19f404;
  #L19f3ea.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f3ee.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f3f4.  v0:= temp;
  #L19f3f6.  v0:= (`long`) v0 @kind i2l;
  #L19f3f8.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f3fe.  v5:= `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L19f402.  goto L19f3d8;
  #L19f404.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f408.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f40e.  v0:= temp;
  #L19f410.  if v0 == 0 then goto L19f42e;
  #L19f414.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f418.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f41e.  v0:= temp;
  #L19f420.  v0:= (`long`) v0 @kind i2l;
  #L19f422.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f428.  v5:= `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L19f42c.  goto L19f3d8;
  #L19f42e.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f432.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f438.  v0:= temp;
  #L19f43a.  if v0 == 0 then goto L19f458;
  #L19f43e.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f442.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f448.  v0:= temp;
  #L19f44a.  v0:= (`long`) v0 @kind i2l;
  #L19f44c.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f452.  v5:= `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L19f456.  goto L19f3d8;
  #L19f458.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f45c.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f462.  v0:= temp;
  #L19f464.  if v0 == 0 then goto L19f3d8;
  #L19f468.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f46c.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f472.  v0:= temp;
  #L19f474.  v0:= (`long`) v0 @kind i2l;
  #L19f476.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f47c.  v5:= `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L19f480.  goto L19f3d8;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v7 @kind object @name `host`) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19f494.  v4:= 0I;
  #L19f496.  v5:= ":" @kind object;
  #L19f49a.  call temp:= `contains`(v7, v5) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19f4a0.  v5:= temp;
  #L19f4a2.  if v5 == 0 then goto L19f552;
  #L19f4a6.  v5:= "[" @kind object;
  #L19f4aa.  call temp:= `startsWith`(v7, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19f4b0.  v5:= temp;
  #L19f4b2.  if v5 == 0 then goto L19f4e4;
  #L19f4b6.  v5:= "]" @kind object;
  #L19f4ba.  call temp:= `endsWith`(v7, v5) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19f4c0.  v5:= temp;
  #L19f4c2.  if v5 == 0 then goto L19f4e4;
  #L19f4c6.  v5:= 1I;
  #L19f4c8.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19f4ce.  v6:= temp;
  #L19f4d0.  v6:= v6 + -1;
  #L19f4d4.  call temp:= `decodeIpv6`(v7, v5, v6) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L19f4da.  v2:= temp @kind object;
  #L19f4dc.  if v2 != 0 then goto L19f4f8;
  #L19f4e0.  v3:= v4 @kind object;
  #L19f4e2.  return v3 @kind object;
  #L19f4e4.  v5:= 0I;
  #L19f4e6.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19f4ec.  v6:= temp;
  #L19f4ee.  call temp:= `decodeIpv6`(v7, v5, v6) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L19f4f4.  v2:= temp @kind object;
  #L19f4f6.  goto L19f4dc;
  #L19f4f8.  call temp:= `getAddress`(v2) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L19f4fe.  v0:= temp @kind object;
  #L19f500.  v4:= length @variable v0;
  #L19f502.  v5:= 16I;
  #L19f506.  if v4 != v5 then goto L19f514;
  #L19f50a.  call temp:= `inet6AddressToAscii`(v0) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @kind static;
  #L19f510.  v3:= temp @kind object;
  #L19f512.  goto L19f4e2;
  #L19f514.  v4:= new `java.lang.AssertionError`;
  #L19f518.  v5:= new `java.lang.StringBuilder`;
  #L19f51c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f522.  v6:= "Invalid IPv6 address: '" @kind object;
  #L19f526.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f52c.  v5:= temp @kind object;
  #L19f52e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f534.  v5:= temp @kind object;
  #L19f536.  v6:= "'" @kind object;
  #L19f53a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f540.  v5:= temp @kind object;
  #L19f542.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f548.  v5:= temp @kind object;
  #L19f54a.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L19f550.  throw v4;
  #Try_start0.  
  #L19f552.  call temp:= `toASCII`(v7) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19f558.  v5:= temp @kind object;
  #L19f55a.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19f55e.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19f564.  v3:= temp @kind object;
  #L19f566.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19f56c.  v5:= temp;
  #L19f56e.  if v5 == 0 then goto L19f576;
  #L19f572.  v3:= v4 @kind object;
  #L19f574.  goto L19f4e2;
  #L19f576.  call temp:= `containsInvalidHostnameAsciiCodes`(v3) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @kind static;
  #Try_end0.  
  #L19f57c.  v5:= temp;
  #L19f57e.  if v5 == 0 then goto L19f4e2;
  #L19f582.  v3:= v4 @kind object;
  #L19f584.  goto L19f4e2;
  #L19f586.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L19f588.  v3:= v4 @kind object;
  #L19f58a.  goto L19f4e2;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L19f586;
}
procedure `int` `checkDuration`(`java.lang.String` v7 @kind object @name `name`, `long` v8 @name `duration`, `java.util.concurrent.TimeUnit` v10 @kind object @name `unit`) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19f5ac.  v4:= 0L;
  #L19f5b0.  v2:= lcmp(v8, v4);
  #L19f5b4.  if v2 >= 0 then goto L19f5ea;
  #L19f5b8.  v2:= new `java.lang.IllegalArgumentException`;
  #L19f5bc.  v3:= new `java.lang.StringBuilder`;
  #L19f5c0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f5c6.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f5cc.  v3:= temp @kind object;
  #L19f5ce.  v4:= " < 0" @kind object;
  #L19f5d2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f5d8.  v3:= temp @kind object;
  #L19f5da.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f5e0.  v3:= temp @kind object;
  #L19f5e2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f5e8.  throw v2;
  #L19f5ea.  if v10 != 0 then goto L19f5fe;
  #L19f5ee.  v2:= new `java.lang.NullPointerException`;
  #L19f5f2.  v3:= "unit == null" @kind object;
  #L19f5f6.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f5fc.  throw v2;
  #L19f5fe.  call temp:= `toMillis`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19f604.  v0:= temp @kind wide;
  #L19f606.  v2:= 2147483647L;
  #L19f60c.  v2:= lcmp(v0, v2);
  #L19f610.  if v2 <= 0 then goto L19f646;
  #L19f614.  v2:= new `java.lang.IllegalArgumentException`;
  #L19f618.  v3:= new `java.lang.StringBuilder`;
  #L19f61c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f622.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f628.  v3:= temp @kind object;
  #L19f62a.  v4:= " too large." @kind object;
  #L19f62e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f634.  v3:= temp @kind object;
  #L19f636.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f63c.  v3:= temp @kind object;
  #L19f63e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f644.  throw v2;
  #L19f646.  v2:= lcmp(v0, v4);
  #L19f64a.  if v2 != 0 then goto L19f688;
  #L19f64e.  v2:= lcmp(v8, v4);
  #L19f652.  if v2 <= 0 then goto L19f688;
  #L19f656.  v2:= new `java.lang.IllegalArgumentException`;
  #L19f65a.  v3:= new `java.lang.StringBuilder`;
  #L19f65e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f664.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f66a.  v3:= temp @kind object;
  #L19f66c.  v4:= " too small." @kind object;
  #L19f670.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f676.  v3:= temp @kind object;
  #L19f678.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f67e.  v3:= temp @kind object;
  #L19f680.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f686.  throw v2;
  #L19f688.  v2:= (`int`) v0 @kind l2i;
  #L19f68a.  return v2;
}
procedure `void` `checkOffsetAndCount`(`long` v4 @name `arrayLength`, `long` v6 @name `offset`, `long` v8 @name `count`) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19f69c.  v0:= v6 ^| v8 @kind long;
  #L19f6a0.  v2:= 0L;
  #L19f6a4.  v0:= lcmp(v0, v2);
  #L19f6a8.  if v0 < 0 then goto L19f6c0;
  #L19f6ac.  v0:= lcmp(v6, v4);
  #L19f6b0.  if v0 > 0 then goto L19f6c0;
  #L19f6b4.  v0:= v4 - v6 @kind long;
  #L19f6b8.  v0:= lcmp(v0, v8);
  #L19f6bc.  if v0 >= 0 then goto L19f6cc;
  #L19f6c0.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L19f6c4.  call `<init>`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19f6ca.  throw v0;
  #L19f6cc.  return @kind void;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v2 @kind object @name `closeable`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19f6e0.  if v2 == 0 then goto L19f6ea;
  #Try_start0.  
  #L19f6e4.  call `close`(v2) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #Try_end0.  
  #L19f6ea.  return @kind void;
  #L19f6ec.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19f6ee.  throw v0;
  #L19f6f0.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19f6f2.  goto L19f6ea;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19f6ec;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19f6f0;
}
procedure `void` `closeQuietly`(`java.net.ServerSocket` v2 @kind object @name `serverSocket`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/ServerSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19f714.  if v2 == 0 then goto L19f71e;
  #Try_start0.  
  #L19f718.  call `close`(v2) @signature `Ljava/net/ServerSocket;.close:()V` @kind virtual;
  #Try_end0.  
  #L19f71e.  return @kind void;
  #L19f720.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19f722.  throw v0;
  #L19f724.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19f726.  goto L19f71e;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19f720;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19f724;
}
procedure `void` `closeQuietly`(`java.net.Socket` v3 @kind object @name `socket`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19f748.  if v3 == 0 then goto L19f752;
  #Try_start0.  
  #L19f74c.  call `close`(v3) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end0.  
  #L19f752.  return @kind void;
  #L19f754.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L19f756.  call temp:= `isAndroidGetsocknameError`(v0) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L19f75c.  v2:= temp;
  #L19f75e.  if v2 != 0 then goto L19f752;
  #L19f762.  throw v0;
  #L19f764.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19f766.  throw v1;
  #L19f768.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L19f76a.  goto L19f752;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L19f754;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19f764;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19f768;
}
procedure `java.lang.String`[] `concat`(`java.lang.String`[] v3 @kind object @name `array`, `java.lang.String` v4 @kind object @name `value`) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19f790.  v2:= 0I;
  #L19f792.  v1:= length @variable v3;
  #L19f794.  v1:= v1 + 1;
  #L19f798.  v0:= new `java.lang.String`[v1];
  #L19f79c.  v1:= length @variable v3;
  #L19f79e.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19f7a4.  v1:= length @variable v0;
  #L19f7a6.  v1:= v1 + -1;
  #L19f7aa.  v0[v1]:= v4 @kind object;
  #L19f7ae.  return v0 @kind object;
}
procedure `boolean` `containsInvalidHostnameAsciiCodes`(`java.lang.String` v5 @kind object @name `hostnameAscii`) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19f7c0.  v2:= 1I;
  #L19f7c2.  v1:= 0I;
  #L19f7c4.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19f7ca.  v3:= temp;
  #L19f7cc.  if v1 >= v3 then goto L19f802;
  #L19f7d0.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f7d6.  v0:= temp;
  #L19f7d8.  v3:= 31I;
  #L19f7dc.  if v0 <= v3 then goto L19f7e8;
  #L19f7e0.  v3:= 127I;
  #L19f7e4.  if v0 < v3 then goto L19f7ea;
  #L19f7e8.  return v2;
  #L19f7ea.  v3:= " #%/:?@[\\]" @kind object;
  #L19f7ee.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19f7f4.  v3:= temp;
  #L19f7f6.  v4:= -1I;
  #L19f7f8.  if v3 != v4 then goto L19f7e8;
  #L19f7fc.  v1:= v1 + 1;
  #L19f800.  goto L19f7c4;
  #L19f802.  v2:= 0I;
  #L19f804.  goto L19f7e8;
}
procedure `int` `decodeHexDigit`(`char` v1 @name `c`) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19f818.  v0:= 48I;
  #L19f81c.  if v1 < v0 then goto L19f82e;
  #L19f820.  v0:= 57I;
  #L19f824.  if v1 > v0 then goto L19f82e;
  #L19f828.  v0:= v1 + -48;
  #L19f82c.  return v0;
  #L19f82e.  v0:= 97I;
  #L19f832.  if v1 < v0 then goto L19f848;
  #L19f836.  v0:= 102I;
  #L19f83a.  if v1 > v0 then goto L19f848;
  #L19f83e.  v0:= v1 + -97;
  #L19f842.  v0:= v0 + 10;
  #L19f846.  goto L19f82c;
  #L19f848.  v0:= 65I;
  #L19f84c.  if v1 < v0 then goto L19f862;
  #L19f850.  v0:= 70I;
  #L19f854.  if v1 > v0 then goto L19f862;
  #L19f858.  v0:= v1 + -65;
  #L19f85c.  v0:= v0 + 10;
  #L19f860.  goto L19f82c;
  #L19f862.  v0:= -1I;
  #L19f864.  goto L19f82c;
}
procedure `boolean` `decodeIpv4Suffix`(`java.lang.String` v10 @kind object @name `input`, `int` v11 @name `pos`, `int` v12 @name `limit`, `byte`[] v13 @kind object @name `address`, `int` v14 @name `addressOffset`) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19f878.  v7:= 0I;
  #L19f87a.  v0:= v14;
  #L19f87c.  v5:= v11;
  #L19f87e.  v1:= v0;
  #L19f880.  if v5 >= v12 then goto L19f8fa;
  #L19f884.  v8:= length @variable v13;
  #L19f886.  if v1 != v8 then goto L19f88c;
  #L19f88a.  return v7;
  #L19f88c.  if v1 == v14 then goto L19f8a4;
  #L19f890.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f896.  v8:= temp;
  #L19f898.  v9:= 46I;
  #L19f89c.  if v8 != v9 then goto L19f88a;
  #L19f8a0.  v5:= v5 + 1;
  #L19f8a4.  v6:= 0I;
  #L19f8a6.  v4:= v5;
  #L19f8a8.  if v5 >= v12 then goto L19f8c4;
  #L19f8ac.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f8b2.  v2:= temp;
  #L19f8b4.  v8:= 48I;
  #L19f8b8.  if v2 < v8 then goto L19f8c4;
  #L19f8bc.  v8:= 57I;
  #L19f8c0.  if v2 <= v8 then goto L19f8da;
  #L19f8c4.  v3:= v5 - v4 @kind int;
  #L19f8c8.  if v3 == 0 then goto L19f88a;
  #L19f8cc.  v0:= v1 + 1;
  #L19f8d0.  v8:= (`byte`) v6 @kind i2b;
  #L19f8d2.  v13[v1]:= v8 @kind byte;
  #L19f8d6.  v1:= v0;
  #L19f8d8.  goto L19f880;
  #L19f8da.  if v6 != 0 then goto L19f8e2;
  #L19f8de.  if v4 != v5 then goto L19f88a;
  #L19f8e2.  v8:= v6 * 10;
  #L19f8e6.  v8:= v8 + v2 @kind int;
  #L19f8e8.  v6:= v8 + -48;
  #L19f8ec.  v8:= 255I;
  #L19f8f0.  if v6 > v8 then goto L19f88a;
  #L19f8f4.  v5:= v5 + 1;
  #L19f8f8.  goto L19f8a8;
  #L19f8fa.  v8:= v14 + 4;
  #L19f8fe.  if v1 != v8 then goto L19f88a;
  #L19f902.  v7:= 1I;
  #L19f904.  goto L19f88a;
}
procedure `java.net.InetAddress` `decodeIpv6`(`java.lang.String` v15 @kind object @name `input`, `int` v16 @name `pos`, `int` v17 @name `limit`) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L19f918.  v12:= 16I;
  #L19f91c.  v1:= new `byte`[v12];
  #L19f920.  v2:= 0I;
  #L19f922.  v5:= -1I;
  #L19f924.  v8:= -1I;
  #L19f926.  v10:= v16;
  #L19f92a.  v0:= v17;
  #L19f92e.  if v10 >= v0 then goto L19f978;
  #L19f932.  v12:= length @variable v1;
  #L19f934.  if v2 != v12 then goto L19f93c;
  #L19f938.  v12:= 0I;
  #L19f93a.  return v12 @kind object;
  #L19f93c.  v12:= v10 + 2;
  #L19f940.  v0:= v17;
  #L19f944.  if v12 > v0 then goto L19f988;
  #L19f948.  v12:= "::" @kind object;
  #L19f94c.  v13:= 0I;
  #L19f94e.  v14:= 2I;
  #L19f950.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19f956.  v12:= temp;
  #L19f958.  if v12 == 0 then goto L19f988;
  #L19f95c.  v12:= -1I;
  #L19f95e.  if v5 == v12 then goto L19f966;
  #L19f962.  v12:= 0I;
  #L19f964.  goto L19f93a;
  #L19f966.  v10:= v10 + 2;
  #L19f96a.  v2:= v2 + 2;
  #L19f96e.  v5:= v2;
  #L19f970.  v0:= v17;
  #L19f974.  if v10 != v0 then goto L19f9a4;
  #L19f978.  v12:= length @variable v1;
  #L19f97a.  if v2 == v12 then goto L19fa60;
  #L19f97e.  v12:= -1I;
  #L19f980.  if v5 != v12 then goto L19fa40;
  #L19f984.  v12:= 0I;
  #L19f986.  goto L19f93a;
  #L19f988.  if v2 == 0 then goto L19f9a4;
  #L19f98c.  v12:= ":" @kind object;
  #L19f990.  v13:= 0I;
  #L19f992.  v14:= 1I;
  #L19f994.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19f99a.  v12:= temp;
  #L19f99c.  if v12 == 0 then goto L19f9d8;
  #L19f9a0.  v10:= v10 + 1;
  #L19f9a4.  v11:= 0I;
  #L19f9a6.  v8:= v10;
  #L19f9a8.  v0:= v17;
  #L19f9ac.  if v10 >= v0 then goto L19f9c6;
  #L19f9b0.  call temp:= `charAt`(v15, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f9b6.  v4:= temp;
  #L19f9b8.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19f9be.  v9:= temp;
  #L19f9c0.  v12:= -1I;
  #L19f9c2.  if v9 != v12 then goto L19fa0e;
  #L19f9c6.  v7:= v10 - v8 @kind int;
  #L19f9ca.  if v7 == 0 then goto L19f9d4;
  #L19f9ce.  v12:= 4I;
  #L19f9d0.  if v7 <= v12 then goto L19fa1c;
  #L19f9d4.  v12:= 0I;
  #L19f9d6.  goto L19f93a;
  #L19f9d8.  v12:= "." @kind object;
  #L19f9dc.  v13:= 0I;
  #L19f9de.  v14:= 1I;
  #L19f9e0.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19f9e6.  v12:= temp;
  #L19f9e8.  if v12 == 0 then goto L19fa0a;
  #L19f9ec.  v12:= v2 + -2;
  #L19f9f0.  v0:= v17;
  #L19f9f4.  call temp:= `decodeIpv4Suffix`(v15, v8, v0, v1, v12) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @kind static;
  #L19f9fa.  v12:= temp;
  #L19f9fc.  if v12 != 0 then goto L19fa04;
  #L19fa00.  v12:= 0I;
  #L19fa02.  goto L19f93a;
  #L19fa04.  v2:= v2 + 2;
  #L19fa08.  goto L19f978;
  #L19fa0a.  v12:= 0I;
  #L19fa0c.  goto L19f93a;
  #L19fa0e.  v12:= v11 ^< 4;
  #L19fa12.  v11:= v12 + v9 @kind int;
  #L19fa16.  v10:= v10 + 1;
  #L19fa1a.  goto L19f9a8;
  #L19fa1c.  v3:= v2 + 1;
  #L19fa20.  v12:= v11 ^>> 8;
  #L19fa24.  v12:= v12 ^& 255;
  #L19fa28.  v12:= (`byte`) v12 @kind i2b;
  #L19fa2a.  v1[v2]:= v12 @kind byte;
  #L19fa2e.  v2:= v3 + 1;
  #L19fa32.  v12:= v11 ^& 255;
  #L19fa36.  v12:= (`byte`) v12 @kind i2b;
  #L19fa38.  v1[v3]:= v12 @kind byte;
  #L19fa3c.  goto L19f92a;
  #L19fa40.  v12:= length @variable v1;
  #L19fa42.  v13:= v2 - v5 @kind int;
  #L19fa46.  v12:= v12 - v13 @kind int;
  #L19fa48.  v13:= v2 - v5 @kind int;
  #L19fa4c.  call `arraycopy`(v1, v5, v1, v12, v13) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19fa52.  v12:= length @variable v1;
  #L19fa54.  v12:= v12 - v2 @kind int;
  #L19fa56.  v12:= v12 + v5 @kind int;
  #L19fa58.  v13:= 0I;
  #L19fa5a.  call `fill`(v1, v5, v12, v13) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #Try_start0.  
  #L19fa60.  call temp:= `getByAddress`(v1) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #Try_end0.  
  #L19fa66.  v12:= temp @kind object;
  #L19fa68.  goto L19f93a;
  #L19fa6c.  v6:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L19fa6e.  v12:= new `java.lang.AssertionError`;
  #L19fa72.  call `<init>`(v12) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L19fa78.  throw v12;
  catch `java.net.UnknownHostException` @[Try_start0..Try_end0] goto L19fa6c;
}
procedure `int` `delimiterOffset`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`, `char` v5 @name `delimiter`) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19fa9c.  v0:= v3;
  #L19fa9e.  if v0 >= v4 then goto L19fab6;
  #L19faa2.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19faa8.  v1:= temp;
  #L19faaa.  if v1 != v5 then goto L19fab0;
  #L19faae.  return v0;
  #L19fab0.  v0:= v0 + 1;
  #L19fab4.  goto L19fa9e;
  #L19fab6.  v0:= v4;
  #L19fab8.  goto L19faae;
}
procedure `int` `delimiterOffset`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`, `java.lang.String` v6 @kind object @name `delimiters`) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19facc.  v0:= v4;
  #L19face.  if v0 >= v5 then goto L19faf0;
  #L19fad2.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19fad8.  v1:= temp;
  #L19fada.  call temp:= `indexOf`(v6, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19fae0.  v1:= temp;
  #L19fae2.  v2:= -1I;
  #L19fae4.  if v1 == v2 then goto L19faea;
  #L19fae8.  return v0;
  #L19faea.  v0:= v0 + 1;
  #L19faee.  goto L19face;
  #L19faf0.  v0:= v5;
  #L19faf2.  goto L19fae8;
}
procedure `boolean` `discard`(`okio.Source` v2 @kind object @name `source`, `int` v3 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L19fb04.  call temp:= `skipAll`(v2, v3, v4) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #Try_end0.  
  #L19fb0a.  v1:= temp;
  #L19fb0c.  return v1;
  #L19fb0e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L19fb10.  v1:= 0I;
  #L19fb12.  goto L19fb0c;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L19fb0e;
}
procedure `boolean` `equal`(`java.lang.Object` v1 @kind object @name `a`, `java.lang.Object` v2 @kind object @name `b`) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19fb34.  if v1 == v2 then goto L19fb48;
  #L19fb38.  if v1 == 0 then goto L19fb4c;
  #L19fb3c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19fb42.  v0:= temp;
  #L19fb44.  if v0 == 0 then goto L19fb4c;
  #L19fb48.  v0:= 1I;
  #L19fb4a.  return v0;
  #L19fb4c.  v0:= 0I;
  #L19fb4e.  goto L19fb4a;
}
procedure `java.lang.String` `format`(`java.lang.String` v1 @kind object @name `format`, `java.lang.Object`[] v2 @kind object @name `args`) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19fb60.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19fb64.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19fb6a.  v0:= temp @kind object;
  #L19fb6c.  return v0 @kind object;
}
procedure `java.lang.String` `hostHeader`(`okhttp3.HttpUrl` v3 @kind object @name `url`, `boolean` v4 @name `includeDefaultPort`) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19fb80.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19fb86.  v1:= temp @kind object;
  #L19fb88.  v2:= ":" @kind object;
  #L19fb8c.  call temp:= `contains`(v1, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19fb92.  v1:= temp;
  #L19fb94.  if v1 == 0 then goto L19fc2a;
  #L19fb98.  v1:= new `java.lang.StringBuilder`;
  #L19fb9c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19fba2.  v2:= "[" @kind object;
  #L19fba6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fbac.  v1:= temp @kind object;
  #L19fbae.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19fbb4.  v2:= temp @kind object;
  #L19fbb6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fbbc.  v1:= temp @kind object;
  #L19fbbe.  v2:= "]" @kind object;
  #L19fbc2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fbc8.  v1:= temp @kind object;
  #L19fbca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19fbd0.  v0:= temp @kind object;
  #L19fbd2.  if v4 != 0 then goto L19fbf2;
  #L19fbd6.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19fbdc.  v1:= temp;
  #L19fbde.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L19fbe4.  v2:= temp @kind object;
  #L19fbe6.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19fbec.  v2:= temp;
  #L19fbee.  if v1 == v2 then goto L19fc28;
  #L19fbf2.  v1:= new `java.lang.StringBuilder`;
  #L19fbf6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19fbfc.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fc02.  v1:= temp @kind object;
  #L19fc04.  v2:= ":" @kind object;
  #L19fc08.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fc0e.  v1:= temp @kind object;
  #L19fc10.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19fc16.  v2:= temp;
  #L19fc18.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fc1e.  v1:= temp @kind object;
  #L19fc20.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19fc26.  v0:= temp @kind object;
  #L19fc28.  return v0 @kind object;
  #L19fc2a.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19fc30.  v0:= temp @kind object;
  #L19fc32.  goto L19fbd2;
}
procedure `java.util.List` `immutableList`(`java.util.List` v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19fc44.  v0:= new `java.util.ArrayList`;
  #L19fc48.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L19fc4e.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19fc54.  v0:= temp @kind object;
  #L19fc56.  return v0 @kind object;
}
procedure `java.util.List` `immutableList`(`java.lang.Object`[] v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19fc68.  call temp:= `clone`(v1) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L19fc6e.  v0:= temp @kind object;
  #L19fc70.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L19fc74.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L19fc7a.  v0:= temp @kind object;
  #L19fc7c.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19fc82.  v0:= temp @kind object;
  #L19fc84.  return v0 @kind object;
}
procedure `int` `indexOf`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object @name `array`, `java.lang.String` v5 @kind object @name `value`) @signature `Lokhttp3/internal/Util;.indexOf:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19fc98.  v0:= 0I;
  #L19fc9a.  v1:= length @variable v4;
  #L19fc9c.  if v0 >= v1 then goto L19fcb8;
  #L19fca0.  v2:= v4[v0] @kind object;
  #L19fca4.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19fcaa.  v2:= temp;
  #L19fcac.  if v2 != 0 then goto L19fcb2;
  #L19fcb0.  return v0;
  #L19fcb2.  v0:= v0 + 1;
  #L19fcb6.  goto L19fc9c;
  #L19fcb8.  v0:= -1I;
  #L19fcba.  goto L19fcb0;
}
procedure `int` `indexOfControlOrNonAscii`(`java.lang.String` v4 @kind object @name `input`) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19fccc.  v1:= 0I;
  #L19fcce.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19fcd4.  v2:= temp;
  #L19fcd6.  if v1 >= v2 then goto L19fcfa;
  #L19fcda.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19fce0.  v0:= temp;
  #L19fce2.  v3:= 31I;
  #L19fce6.  if v0 <= v3 then goto L19fcf2;
  #L19fcea.  v3:= 127I;
  #L19fcee.  if v0 < v3 then goto L19fcf4;
  #L19fcf2.  return v1;
  #L19fcf4.  v1:= v1 + 1;
  #L19fcf8.  goto L19fcd6;
  #L19fcfa.  v1:= -1I;
  #L19fcfc.  goto L19fcf2;
}
procedure `java.lang.String` `inet6AddressToAscii`(`byte`[] v12 @kind object @name `address`) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19fd10.  v11:= 16I;
  #L19fd14.  v10:= 58I;
  #L19fd18.  v5:= -1I;
  #L19fd1a.  v4:= 0I;
  #L19fd1c.  v3:= 0I;
  #L19fd1e.  v7:= length @variable v12;
  #L19fd20.  if v3 >= v7 then goto L19fd5c;
  #L19fd24.  v1:= v3;
  #L19fd26.  if v3 >= v11 then goto L19fd44;
  #L19fd2a.  v7:= v12[v3] @kind byte;
  #L19fd2e.  if v7 != 0 then goto L19fd44;
  #L19fd32.  v7:= v3 + 1;
  #L19fd36.  v7:= v12[v7] @kind byte;
  #L19fd3a.  if v7 != 0 then goto L19fd44;
  #L19fd3e.  v3:= v3 + 2;
  #L19fd42.  goto L19fd26;
  #L19fd44.  v0:= v3 - v1 @kind int;
  #L19fd48.  if v0 <= v4 then goto L19fd56;
  #L19fd4c.  v7:= 4I;
  #L19fd4e.  if v0 < v7 then goto L19fd56;
  #L19fd52.  v5:= v1;
  #L19fd54.  v4:= v0;
  #L19fd56.  v3:= v3 + 2;
  #L19fd5a.  goto L19fd1e;
  #L19fd5c.  v6:= new `okio.Buffer`;
  #L19fd60.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19fd66.  v3:= 0I;
  #L19fd68.  v7:= length @variable v12;
  #L19fd6a.  if v3 >= v7 then goto L19fdba;
  #L19fd6e.  if v3 != v5 then goto L19fd86;
  #L19fd72.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19fd78.  v3:= v3 + v4 @kind int;
  #L19fd7a.  if v3 != v11 then goto L19fd68;
  #L19fd7e.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19fd84.  goto L19fd68;
  #L19fd86.  if v3 <= 0 then goto L19fd90;
  #L19fd8a.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19fd90.  v7:= v12[v3] @kind byte;
  #L19fd94.  v7:= v7 ^& 255;
  #L19fd98.  v7:= v7 ^< 8;
  #L19fd9c.  v8:= v3 + 1;
  #L19fda0.  v8:= v12[v8] @kind byte;
  #L19fda4.  v8:= v8 ^& 255;
  #L19fda8.  v2:= v7 ^| v8 @kind int;
  #L19fdac.  v8:= (`long`) v2 @kind i2l;
  #L19fdae.  call temp:= `writeHexadecimalUnsignedLong`(v6, v8) @signature `Lokio/Buffer;.writeHexadecimalUnsignedLong:(J)Lokio/Buffer;` @kind virtual;
  #L19fdb4.  v3:= v3 + 2;
  #L19fdb8.  goto L19fd68;
  #L19fdba.  call temp:= `readUtf8`(v6) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19fdc0.  v7:= temp @kind object;
  #L19fdc2.  return v7 @kind object;
}
procedure `java.lang.String`[] `intersect`(`java.util.Comparator` v9 @kind object, `java.lang.String`[] v10 @kind object @name `first`, `java.lang.String`[] v11 @kind object @name `second`) @signature `Lokhttp3/internal/Util;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19fdd4.  v4:= 0I;
  #L19fdd6.  v2:= new `java.util.ArrayList`;
  #L19fdda.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19fde0.  v6:= length @variable v10;
  #L19fde2.  v5:= v4;
  #L19fde4.  if v5 >= v6 then goto L19fe18;
  #L19fde8.  v0:= v10[v5] @kind object;
  #L19fdec.  v7:= length @variable v11;
  #L19fdee.  v3:= v4;
  #L19fdf0.  if v3 >= v7 then goto L19fe0a;
  #L19fdf4.  v1:= v11[v3] @kind object;
  #L19fdf8.  call temp:= `compare`(v9, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19fdfe.  v8:= temp;
  #L19fe00.  if v8 != 0 then goto L19fe12;
  #L19fe04.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19fe0a.  v3:= v5 + 1;
  #L19fe0e.  v5:= v3;
  #L19fe10.  goto L19fde4;
  #L19fe12.  v3:= v3 + 1;
  #L19fe16.  goto L19fdf0;
  #L19fe18.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19fe1e.  v3:= temp;
  #L19fe20.  v3:= new `java.lang.String`[v3];
  #L19fe24.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L19fe2a.  v3:= temp @kind object;
  #L19fe2c.  v3:= (`java.lang.String`[]) v3 @kind object;
  #L19fe30.  return v3 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v2 @kind object @name `e`) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19fe44.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L19fe4a.  v0:= temp @kind object;
  #L19fe4c.  if v0 == 0 then goto L19fe78;
  #L19fe50.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19fe56.  v0:= temp @kind object;
  #L19fe58.  if v0 == 0 then goto L19fe78;
  #L19fe5c.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19fe62.  v0:= temp @kind object;
  #L19fe64.  v1:= "getsockname failed" @kind object;
  #L19fe68.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19fe6e.  v0:= temp;
  #L19fe70.  if v0 == 0 then goto L19fe78;
  #L19fe74.  v0:= 1I;
  #L19fe76.  return v0;
  #L19fe78.  v0:= 0I;
  #L19fe7a.  goto L19fe76;
}
procedure `boolean` `nonEmptyIntersection`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object @name `first`, `java.lang.String`[] v10 @kind object @name `second`) @signature `Lokhttp3/internal/Util;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19fe8c.  v2:= 0I;
  #L19fe8e.  if v9 == 0 then goto L19fea2;
  #L19fe92.  if v10 == 0 then goto L19fea2;
  #L19fe96.  v3:= length @variable v9;
  #L19fe98.  if v3 == 0 then goto L19fea2;
  #L19fe9c.  v3:= length @variable v10;
  #L19fe9e.  if v3 != 0 then goto L19fea4;
  #L19fea2.  return v2;
  #L19fea4.  v5:= length @variable v9;
  #L19fea6.  v4:= v2;
  #L19fea8.  if v4 >= v5 then goto L19fea2;
  #L19feac.  v0:= v9[v4] @kind object;
  #L19feb0.  v6:= length @variable v10;
  #L19feb2.  v3:= v2;
  #L19feb4.  if v3 >= v6 then goto L19fed2;
  #L19feb8.  v1:= v10[v3] @kind object;
  #L19febc.  call temp:= `compare`(v8, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19fec2.  v7:= temp;
  #L19fec4.  if v7 != 0 then goto L19fecc;
  #L19fec8.  v2:= 1I;
  #L19feca.  goto L19fea2;
  #L19fecc.  v3:= v3 + 1;
  #L19fed0.  goto L19feb4;
  #L19fed2.  v3:= v4 + 1;
  #L19fed6.  v4:= v3;
  #L19fed8.  goto L19fea8;
}
procedure `boolean` `skipAll`(`okio.Source` v12 @kind object @name `source`, `int` v13 @name `duration`, `java.util.concurrent.TimeUnit` v14 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19feec.  v6:= 9223372036854775807L;
  #L19fef6.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L19fefc.  v2:= temp @kind wide;
  #L19fefe.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ff04.  v8:= temp @kind object;
  #L19ff06.  call temp:= `hasDeadline`(v8) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L19ff0c.  v8:= temp;
  #L19ff0e.  if v8 == 0 then goto L19ff90;
  #L19ff12.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ff18.  v8:= temp @kind object;
  #L19ff1a.  call temp:= `deadlineNanoTime`(v8) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L19ff20.  v8:= temp @kind wide;
  #L19ff22.  v4:= v8 - v2 @kind long;
  #L19ff26.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ff2c.  v8:= temp @kind object;
  #L19ff2e.  v10:= (`long`) v13 @kind i2l;
  #L19ff30.  call temp:= `toNanos`(v14, v10) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L19ff36.  v10:= temp @kind wide;
  #L19ff38.  call temp:= `min`(v4, v10) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L19ff3e.  v10:= temp @kind wide;
  #L19ff40.  v10:= v10 + v2 @kind long;
  #L19ff42.  call temp:= `deadlineNanoTime`(v8, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #Try_start0.  
  #L19ff48.  v1:= new `okio.Buffer`;
  #L19ff4c.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19ff52.  v8:= 8192L;
  #L19ff56.  call temp:= `read`(v12, v1, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L19ff5c.  v8:= temp @kind wide;
  #L19ff5e.  v10:= -1L;
  #L19ff62.  v8:= lcmp(v8, v10);
  #L19ff66.  if v8 == 0 then goto L19ff94;
  #L19ff6a.  call `clear`(v1) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #Try_end0.  
  #L19ff70.  goto L19ff52;
  #L19ff72.  v0:= Exception @type ^`java.io.InterruptedIOException` @kind object;
  #L19ff74.  v8:= 0I;
  #L19ff76.  v6:= lcmp(v4, v6);
  #L19ff7a.  if v6 != 0 then goto L19ffc4;
  #L19ff7e.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ff84.  v6:= temp @kind object;
  #L19ff86.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19ff8c.  v6:= v8;
  #L19ff8e.  return v6;
  #L19ff90.  v4:= v6 @kind wide;
  #L19ff92.  goto L19ff26;
  #L19ff94.  v8:= 1I;
  #L19ff96.  v6:= lcmp(v4, v6);
  #L19ff9a.  if v6 != 0 then goto L19ffb0;
  #L19ff9e.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ffa4.  v6:= temp @kind object;
  #L19ffa6.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19ffac.  v6:= v8;
  #L19ffae.  goto L19ff8e;
  #L19ffb0.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ffb6.  v6:= temp @kind object;
  #L19ffb8.  v10:= v2 + v4 @kind long;
  #L19ffbc.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19ffc2.  goto L19ffac;
  #L19ffc4.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ffca.  v6:= temp @kind object;
  #L19ffcc.  v10:= v2 + v4 @kind long;
  #L19ffd0.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19ffd6.  goto L19ff8c;
  #L19ffd8.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19ffda.  v6:= lcmp(v4, v6);
  #L19ffde.  if v6 != 0 then goto L19fff2;
  #L19ffe2.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19ffe8.  v6:= temp @kind object;
  #L19ffea.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19fff0.  throw v8;
  #L19fff2.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fff8.  v6:= temp @kind object;
  #L19fffa.  v10:= v2 + v4 @kind long;
  #L19fffe.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1a0004.  goto L19fff0;
  catch `java.io.InterruptedIOException` @[Try_start0..Try_end0] goto L19ff72;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19ffd8;
}
procedure `int` `skipLeadingAsciiWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1a0028.  v0:= v3;
  #L1a002a.  if v0 >= v4 then goto L1a0044;
  #L1a002e.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a0034.  v1:= temp;
  #L1a0036.  goto L1a0048;
  #L1a003c.  return v0;
  #L1a003e.  v0:= v0 + 1;
  #L1a0042.  goto L1a002a;
  #L1a0044.  v0:= v4;
  #L1a0046.  goto L1a003c;
  #L1a0048.  switch v1
                  | 9 => goto L1a003e
                  | 10 => goto L1a003e
                  | 12 => goto L1a003e
                  | 13 => goto L1a003e
                  | 32 => goto L1a003e
                  | else => goto L1a003c;
}
procedure `int` `skipTrailingAsciiWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1a0084.  v0:= v4 + -1;
  #L1a0088.  if v0 < v3 then goto L1a009e;
  #L1a008c.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a0092.  v1:= temp;
  #L1a0094.  goto L1a00a8;
  #L1a009a.  v3:= v0 + 1;
  #L1a009e.  return v3;
  #L1a00a0.  v0:= v0 + -1;
  #L1a00a4.  goto L1a0088;
  #L1a00a6.  
  #L1a00a8.  switch v1
                  | 9 => goto L1a00a0
                  | 10 => goto L1a00a0
                  | 12 => goto L1a00a0
                  | 13 => goto L1a00a0
                  | 32 => goto L1a00a0
                  | else => goto L1a009a;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`(`java.lang.String` v1 @kind object @name `name`, `boolean` v2 @name `daemon`) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a00e4.  v0:= new `okhttp3.internal.Util$2`;
  #L1a00e8.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/Util$2;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L1a00ee.  return v0 @kind object;
}
procedure `java.lang.String` `trimSubstring`(`java.lang.String` v3 @kind object @name `string`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0100.  call temp:= `skipLeadingAsciiWhitespace`(v3, v4, v5) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L1a0106.  v1:= temp;
  #L1a0108.  call temp:= `skipTrailingAsciiWhitespace`(v3, v1, v5) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L1a010e.  v0:= temp;
  #L1a0110.  call temp:= `substring`(v3, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1a0116.  v2:= temp @kind object;
  #L1a0118.  return v2 @kind object;
}
procedure `boolean` `verifyAsIpAddress`(`java.lang.String` v1 @kind object @name `host`) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a012c.  v0:= `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` @kind object;
  #L1a0130.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1a0136.  v0:= temp @kind object;
  #L1a0138.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L1a013e.  v0:= temp;
  #L1a0140.  return v0;
}

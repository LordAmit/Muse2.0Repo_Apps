record `okhttp3.Response` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.ResponseBody` `okhttp3.Response.body` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Response.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Response` `okhttp3.Response.cacheResponse` @AccessFlag FINAL;
  `int` `okhttp3.Response.code` @AccessFlag FINAL;
  `okhttp3.Handshake` `okhttp3.Response.handshake` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.Response.headers` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Response.message` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.networkResponse` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.priorResponse` @AccessFlag FINAL;
  `okhttp3.Protocol` `okhttp3.Response.protocol` @AccessFlag FINAL;
  `long` `okhttp3.Response.receivedResponseAtMillis` @AccessFlag FINAL;
  `okhttp3.Request` `okhttp3.Response.request` @AccessFlag FINAL;
  `long` `okhttp3.Response.sentRequestAtMillis` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Response` v2 @kind this, `okhttp3.Response$Builder` v3 @kind object @name `builder`) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Response$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19e3b4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19e3ba.  v0:= v3.`okhttp3.Response$Builder.request` @type ^`okhttp3.Request` @kind object;
  #L19e3be.  v2.`okhttp3.Response.request` @type ^`okhttp3.Request` := v0 @kind object;
  #L19e3c2.  v0:= v3.`okhttp3.Response$Builder.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19e3c6.  v2.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L19e3ca.  v0:= v3.`okhttp3.Response$Builder.code` @type ^`int`;
  #L19e3ce.  v2.`okhttp3.Response.code` @type ^`int` := v0;
  #L19e3d2.  v0:= v3.`okhttp3.Response$Builder.message` @type ^`java.lang.String` @kind object;
  #L19e3d6.  v2.`okhttp3.Response.message` @type ^`java.lang.String` := v0 @kind object;
  #L19e3da.  v0:= v3.`okhttp3.Response$Builder.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19e3de.  v2.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L19e3e2.  v0:= v3.`okhttp3.Response$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19e3e6.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19e3ec.  v0:= temp @kind object;
  #L19e3ee.  v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19e3f2.  v0:= v3.`okhttp3.Response$Builder.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e3f6.  v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L19e3fa.  v0:= v3.`okhttp3.Response$Builder.networkResponse` @type ^`okhttp3.Response` @kind object;
  #L19e3fe.  v2.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19e402.  v0:= v3.`okhttp3.Response$Builder.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19e406.  v2.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19e40a.  v0:= v3.`okhttp3.Response$Builder.priorResponse` @type ^`okhttp3.Response` @kind object;
  #L19e40e.  v2.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19e412.  v0:= v3.`okhttp3.Response$Builder.sentRequestAtMillis` @type ^`long` @kind wide;
  #L19e416.  v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` := v0 @kind wide;
  #L19e41a.  v0:= v3.`okhttp3.Response$Builder.receivedResponseAtMillis` @type ^`long` @kind wide;
  #L19e41e.  v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` := v0 @kind wide;
  #L19e422.  return @kind void;
}
procedure `okhttp3.ResponseBody` `body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e434.  v0:= v1.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e438.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e44c.  v0:= v2.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L19e450.  if v0 == 0 then goto L19e456;
  #L19e454.  return v0 @kind object;
  #L19e456.  v1:= v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19e45a.  call temp:= `parse`(v1) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L19e460.  v0:= temp @kind object;
  #L19e462.  v2.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L19e466.  goto L19e454;
}
procedure `okhttp3.Response` `cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e478.  v0:= v1.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19e47c.  return v0 @kind object;
}
procedure `java.util.List` `challenges`(`okhttp3.Response` v3 @kind this) @signature `Lokhttp3/Response;.challenges:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19e490.  v1:= v3.`okhttp3.Response.code` @type ^`int`;
  #L19e494.  v2:= 401I;
  #L19e498.  if v1 != v2 then goto L19e4b2;
  #L19e49c.  v0:= "WWW-Authenticate" @kind object;
  #L19e4a0.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L19e4a6.  v1:= temp @kind object;
  #L19e4a8.  call temp:= `parseChallenges`(v1, v0) @signature `Lokhttp3/internal/http/HttpHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19e4ae.  v1:= temp @kind object;
  #L19e4b0.  return v1 @kind object;
  #L19e4b2.  v1:= v3.`okhttp3.Response.code` @type ^`int`;
  #L19e4b6.  v2:= 407I;
  #L19e4ba.  if v1 != v2 then goto L19e4c4;
  #L19e4be.  v0:= "Proxy-Authenticate" @kind object;
  #L19e4c2.  goto L19e4a0;
  #L19e4c4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L19e4ca.  v1:= temp @kind object;
  #L19e4cc.  goto L19e4b0;
}
procedure `void` `close`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e4e0.  v0:= v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e4e4.  if v0 != 0 then goto L19e4f8;
  #L19e4e8.  v0:= new `java.lang.IllegalStateException`;
  #L19e4ec.  v1:= "response is not eligible for a body and must not be closed" @kind object;
  #L19e4f0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19e4f6.  throw v0;
  #L19e4f8.  v0:= v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e4fc.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L19e502.  return @kind void;
}
procedure `int` `code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e514.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L19e518.  return v0;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e52c.  v0:= v1.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19e530.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e544.  v0:= 0I;
  #L19e546.  call temp:= `header`(v1, v2, v0) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19e54c.  v0:= temp @kind object;
  #L19e54e.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v2 @kind this, `java.lang.String` v3 @kind object @name `name`, `java.lang.String` v4 @kind object @name `defaultValue`) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e560.  v1:= v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19e564.  call temp:= `get`(v1, v3) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19e56a.  v0:= temp @kind object;
  #L19e56c.  if v0 == 0 then goto L19e572;
  #L19e570.  return v0 @kind object;
  #L19e572.  v0:= v4 @kind object;
  #L19e574.  goto L19e570;
}
procedure `java.util.List` `headers`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Response;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e588.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19e58c.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L19e592.  v0:= temp @kind object;
  #L19e594.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e5a8.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19e5ac.  return v0 @kind object;
}
procedure `boolean` `isRedirect`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.isRedirect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e5c0.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L19e5c4.  goto L19e5d4;
  #L19e5ca.  v0:= 0I;
  #L19e5cc.  return v0;
  #L19e5ce.  v0:= 1I;
  #L19e5d0.  goto L19e5cc;
  #L19e5d2.  
  #L19e5d4.  switch v0
                  | 300 => goto L19e5ce
                  | 301 => goto L19e5ce
                  | 302 => goto L19e5ce
                  | 303 => goto L19e5ce
                  | 304 => goto L19e5ca
                  | 305 => goto L19e5ca
                  | 306 => goto L19e5ca
                  | 307 => goto L19e5ce
                  | 308 => goto L19e5ce
                  | else => goto L19e5ca;
}
procedure `boolean` `isSuccessful`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e610.  v0:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19e614.  v1:= 200I;
  #L19e618.  if v0 < v1 then goto L19e62c;
  #L19e61c.  v0:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19e620.  v1:= 300I;
  #L19e624.  if v0 >= v1 then goto L19e62c;
  #L19e628.  v0:= 1I;
  #L19e62a.  return v0;
  #L19e62c.  v0:= 0I;
  #L19e62e.  goto L19e62a;
}
procedure `java.lang.String` `message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e640.  v0:= v1.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L19e644.  return v0 @kind object;
}
procedure `okhttp3.Response` `networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e658.  v0:= v1.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` @kind object;
  #L19e65c.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `newBuilder`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e670.  v0:= new `okhttp3.Response$Builder`;
  #L19e674.  call `<init>`(v0, v1) @signature `Lokhttp3/Response$Builder;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L19e67a.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `peekBody`(`okhttp3.Response` v7 @kind this, `long` v8 @name `byteCount`) @signature `Lokhttp3/Response;.peekBody:(J)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19e68c.  v3:= v7.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e690.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L19e696.  v2:= temp @kind object;
  #L19e698.  call temp:= `request`(v2, v8) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L19e69e.  call temp:= `buffer`(v2) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L19e6a4.  v3:= temp @kind object;
  #L19e6a6.  call temp:= `clone`(v3) @signature `Lokio/Buffer;.clone:()Lokio/Buffer;` @kind virtual;
  #L19e6ac.  v0:= temp @kind object;
  #L19e6ae.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L19e6b4.  v4:= temp @kind wide;
  #L19e6b6.  v3:= lcmp(v4, v8);
  #L19e6ba.  if v3 <= 0 then goto L19e6f2;
  #L19e6be.  v1:= new `okio.Buffer`;
  #L19e6c2.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19e6c8.  call `write`(v1, v0, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L19e6ce.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L19e6d4.  v3:= v7.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e6d8.  call temp:= `contentType`(v3) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L19e6de.  v3:= temp @kind object;
  #L19e6e0.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L19e6e6.  v4:= temp @kind wide;
  #L19e6e8.  call temp:= `create`(v3, v4, v1) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L19e6ee.  v3:= temp @kind object;
  #L19e6f0.  return v3 @kind object;
  #L19e6f2.  v1:= v0 @kind object;
  #L19e6f4.  goto L19e6d4;
}
procedure `okhttp3.Response` `priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e708.  v0:= v1.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` @kind object;
  #L19e70c.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e720.  v0:= v1.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19e724.  return v0 @kind object;
}
procedure `long` `receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e738.  v0:= v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` @kind wide;
  #L19e73c.  return v0 @kind wide;
}
procedure `okhttp3.Request` `request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e750.  v0:= v1.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L19e754.  return v0 @kind object;
}
procedure `long` `sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e768.  v0:= v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` @kind wide;
  #L19e76c.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e780.  v0:= new `java.lang.StringBuilder`;
  #L19e784.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e78a.  v1:= "Response{protocol=" @kind object;
  #L19e78e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e794.  v0:= temp @kind object;
  #L19e796.  v1:= v2.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19e79a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e7a0.  v0:= temp @kind object;
  #L19e7a2.  v1:= ", code=" @kind object;
  #L19e7a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e7ac.  v0:= temp @kind object;
  #L19e7ae.  v1:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19e7b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e7b8.  v0:= temp @kind object;
  #L19e7ba.  v1:= ", message=" @kind object;
  #L19e7be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e7c4.  v0:= temp @kind object;
  #L19e7c6.  v1:= v2.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L19e7ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e7d0.  v0:= temp @kind object;
  #L19e7d2.  v1:= ", url=" @kind object;
  #L19e7d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e7dc.  v0:= temp @kind object;
  #L19e7de.  v1:= v2.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L19e7e2.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19e7e8.  v1:= temp @kind object;
  #L19e7ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e7f0.  v0:= temp @kind object;
  #L19e7f2.  v1:= 125I;
  #L19e7f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e7fc.  v0:= temp @kind object;
  #L19e7fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e804.  v0:= temp @kind object;
  #L19e806.  return v0 @kind object;
}

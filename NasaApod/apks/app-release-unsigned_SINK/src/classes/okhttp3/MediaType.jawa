record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19c850.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L19c854.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19c85a.  v0:= temp @kind object;
  #L19c85c.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19c860.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L19c864.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19c86a.  v0:= temp @kind object;
  #L19c86c.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19c870.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object @name `mediaType`, `java.lang.String` v2 @kind object @name `type`, `java.lang.String` v3 @kind object @name `subtype`, `java.lang.String` v4 @kind object @name `charset`) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19c884.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19c88a.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L19c88e.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L19c892.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L19c896.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L19c89a.  return @kind void;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v14 @kind object @name `string`) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L19c8ac.  v9:= 0I;
  #L19c8ae.  v13:= 2I;
  #L19c8b0.  v12:= 1I;
  #L19c8b2.  v10:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L19c8b6.  call temp:= `matcher`(v10, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19c8bc.  v8:= temp @kind object;
  #L19c8be.  call temp:= `lookingAt`(v8) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L19c8c4.  v10:= temp;
  #L19c8c6.  if v10 != 0 then goto L19c8cc;
  #L19c8ca.  return v9 @kind object;
  #L19c8cc.  call temp:= `group`(v8, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c8d2.  v10:= temp @kind object;
  #L19c8d4.  v11:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19c8d8.  call temp:= `toLowerCase`(v10, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19c8de.  v7:= temp @kind object;
  #L19c8e0.  call temp:= `group`(v8, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c8e6.  v10:= temp @kind object;
  #L19c8e8.  v11:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19c8ec.  call temp:= `toLowerCase`(v10, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19c8f2.  v5:= temp @kind object;
  #L19c8f4.  v0:= 0I;
  #L19c8f6.  v10:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L19c8fa.  call temp:= `matcher`(v10, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19c900.  v3:= temp @kind object;
  #L19c902.  call temp:= `end`(v8) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L19c908.  v4:= temp;
  #L19c90a.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c910.  v10:= temp;
  #L19c912.  if v4 >= v10 then goto L19c9c6;
  #L19c916.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c91c.  v10:= temp;
  #L19c91e.  call temp:= `region`(v3, v4, v10) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L19c924.  call temp:= `lookingAt`(v3) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L19c92a.  v10:= temp;
  #L19c92c.  if v10 == 0 then goto L19c8ca;
  #L19c930.  call temp:= `group`(v3, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c936.  v2:= temp @kind object;
  #L19c938.  if v2 == 0 then goto L19c94c;
  #L19c93c.  v10:= "charset" @kind object;
  #L19c940.  call temp:= `equalsIgnoreCase`(v2, v10) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19c946.  v10:= temp;
  #L19c948.  if v10 != 0 then goto L19c956;
  #L19c94c.  call temp:= `end`(v3) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L19c952.  v4:= temp;
  #L19c954.  goto L19c90a;
  #L19c956.  call temp:= `group`(v3, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c95c.  v6:= temp @kind object;
  #L19c95e.  if v6 == 0 then goto L19c9ba;
  #L19c962.  v10:= "'" @kind object;
  #L19c966.  call temp:= `startsWith`(v6, v10) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19c96c.  v10:= temp;
  #L19c96e.  if v10 == 0 then goto L19c9b6;
  #L19c972.  v10:= "'" @kind object;
  #L19c976.  call temp:= `endsWith`(v6, v10) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19c97c.  v10:= temp;
  #L19c97e.  if v10 == 0 then goto L19c9b6;
  #L19c982.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c988.  v10:= temp;
  #L19c98a.  if v10 <= v13 then goto L19c9b6;
  #L19c98e.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c994.  v10:= temp;
  #L19c996.  v10:= v10 + -1;
  #L19c99a.  call temp:= `substring`(v6, v12, v10) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c9a0.  v1:= temp @kind object;
  #L19c9a2.  if v0 == 0 then goto L19c9b2;
  #L19c9a6.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19c9ac.  v10:= temp;
  #L19c9ae.  if v10 == 0 then goto L19c8ca;
  #L19c9b2.  v0:= v1 @kind object;
  #L19c9b4.  goto L19c94c;
  #L19c9b6.  v1:= v6 @kind object;
  #L19c9b8.  goto L19c9a2;
  #L19c9ba.  v10:= 3I;
  #L19c9bc.  call temp:= `group`(v3, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c9c2.  v1:= temp @kind object;
  #L19c9c4.  goto L19c9a2;
  #L19c9c6.  v9:= new `okhttp3.MediaType`;
  #L19c9ca.  call `<init>`(v9, v14, v7, v5, v0) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L19c9d0.  goto L19c8ca;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c9e4.  v0:= 0I;
  #L19c9e6.  call temp:= `charset`(v1, v0) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L19c9ec.  v0:= temp @kind object;
  #L19c9ee.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v2 @kind this, `java.nio.charset.Charset` v3 @kind object @name `defaultValue`) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L19ca00.  v1:= v2.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L19ca04.  if v1 == 0 then goto L19ca14;
  #L19ca08.  v1:= v2.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L19ca0c.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #Try_end0.  
  #L19ca12.  v3:= temp @kind object;
  #L19ca14.  return v3 @kind object;
  #L19ca16.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L19ca18.  goto L19ca14;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L19ca16;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ca3c.  v0:= instanceof @variable v3 @type ^`okhttp3.MediaType` @kind boolean;
  #L19ca40.  if v0 == 0 then goto L19ca60;
  #L19ca44.  v3:= (`okhttp3.MediaType`) v3 @kind object;
  #L19ca48.  v0:= v3.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19ca4c.  v1:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19ca50.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ca56.  v0:= temp;
  #L19ca58.  if v0 == 0 then goto L19ca60;
  #L19ca5c.  v0:= 1I;
  #L19ca5e.  return v0;
  #L19ca60.  v0:= 0I;
  #L19ca62.  goto L19ca5e;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ca74.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19ca78.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19ca7e.  v0:= temp;
  #L19ca80.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ca94.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L19ca98.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19caac.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19cab0.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19cac4.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L19cac8.  return v0 @kind object;
}

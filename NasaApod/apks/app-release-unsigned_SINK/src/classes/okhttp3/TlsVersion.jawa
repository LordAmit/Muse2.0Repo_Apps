record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.javaName` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19eda0.  v7:= 4I;
  #L19eda2.  v6:= 3I;
  #L19eda4.  v5:= 2I;
  #L19eda6.  v4:= 1I;
  #L19eda8.  v3:= 0I;
  #L19edaa.  v0:= new `okhttp3.TlsVersion`;
  #L19edae.  v1:= "TLS_1_3" @kind object;
  #L19edb2.  v2:= "TLSv1.3" @kind object;
  #L19edb6.  call `<init>`(v0, v1, v3, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19edbc.  `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19edc0.  v0:= new `okhttp3.TlsVersion`;
  #L19edc4.  v1:= "TLS_1_2" @kind object;
  #L19edc8.  v2:= "TLSv1.2" @kind object;
  #L19edcc.  call `<init>`(v0, v1, v4, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19edd2.  `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19edd6.  v0:= new `okhttp3.TlsVersion`;
  #L19edda.  v1:= "TLS_1_1" @kind object;
  #L19edde.  v2:= "TLSv1.1" @kind object;
  #L19ede2.  call `<init>`(v0, v1, v5, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19ede8.  `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19edec.  v0:= new `okhttp3.TlsVersion`;
  #L19edf0.  v1:= "TLS_1_0" @kind object;
  #L19edf4.  v2:= "TLSv1" @kind object;
  #L19edf8.  call `<init>`(v0, v1, v6, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19edfe.  `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19ee02.  v0:= new `okhttp3.TlsVersion`;
  #L19ee06.  v1:= "SSL_3_0" @kind object;
  #L19ee0a.  v2:= "SSLv3" @kind object;
  #L19ee0e.  call `<init>`(v0, v1, v7, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19ee14.  `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19ee18.  v0:= 5I;
  #L19ee1a.  v0:= new `okhttp3.TlsVersion`[v0];
  #L19ee1e.  v1:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ee22.  v0[v3]:= v1 @kind object;
  #L19ee26.  v1:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ee2a.  v0[v4]:= v1 @kind object;
  #L19ee2e.  v1:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ee32.  v0[v5]:= v1 @kind object;
  #L19ee36.  v1:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ee3a.  v0[v6]:= v1 @kind object;
  #L19ee3e.  v1:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ee42.  v0[v7]:= v1 @kind object;
  #L19ee46.  `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] := v0 @kind object;
  #L19ee4a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object @name `javaName`) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19ee5c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L19ee62.  v0.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L19ee66.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`java.lang.String` v3 @kind object @name `javaName`) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19ee78.  v0:= -1I;
  #L19ee7a.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19ee80.  v1:= temp;
  #L19ee82.  goto L19ef44;
  #L19ee88.  goto L19ef70;
  #L19ee8e.  v0:= new `java.lang.IllegalArgumentException`;
  #L19ee92.  v1:= new `java.lang.StringBuilder`;
  #L19ee96.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ee9c.  v2:= "Unexpected TLS version: " @kind object;
  #L19eea0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19eea6.  v1:= temp @kind object;
  #L19eea8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19eeae.  v1:= temp @kind object;
  #L19eeb0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19eeb6.  v1:= temp @kind object;
  #L19eeb8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19eebe.  throw v0;
  #L19eec0.  v1:= "TLSv1.3" @kind object;
  #L19eec4.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19eeca.  v1:= temp;
  #L19eecc.  if v1 == 0 then goto L19ee88;
  #L19eed0.  v0:= 0I;
  #L19eed2.  goto L19ee88;
  #L19eed4.  v1:= "TLSv1.2" @kind object;
  #L19eed8.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19eede.  v1:= temp;
  #L19eee0.  if v1 == 0 then goto L19ee88;
  #L19eee4.  v0:= 1I;
  #L19eee6.  goto L19ee88;
  #L19eee8.  v1:= "TLSv1.1" @kind object;
  #L19eeec.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19eef2.  v1:= temp;
  #L19eef4.  if v1 == 0 then goto L19ee88;
  #L19eef8.  v0:= 2I;
  #L19eefa.  goto L19ee88;
  #L19eefc.  v1:= "TLSv1" @kind object;
  #L19ef00.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ef06.  v1:= temp;
  #L19ef08.  if v1 == 0 then goto L19ee88;
  #L19ef0c.  v0:= 3I;
  #L19ef0e.  goto L19ee88;
  #L19ef10.  v1:= "SSLv3" @kind object;
  #L19ef14.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ef1a.  v1:= temp;
  #L19ef1c.  if v1 == 0 then goto L19ee88;
  #L19ef20.  v0:= 4I;
  #L19ef22.  goto L19ee88;
  #L19ef24.  v0:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ef28.  return v0 @kind object;
  #L19ef2a.  v0:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ef2e.  goto L19ef28;
  #L19ef30.  v0:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ef34.  goto L19ef28;
  #L19ef36.  v0:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ef3a.  goto L19ef28;
  #L19ef3c.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ef40.  goto L19ef28;
  #L19ef42.  
  #L19ef44.  switch v1
                  | -503070503 => goto L19eee8
                  | -503070502 => goto L19eed4
                  | -503070501 => goto L19eec0
                  | 79201641 => goto L19ef10
                  | 79923350 => goto L19eefc
                  | else => goto L19ee88;
  #L19ef70.  switch v0
                  | 0 => goto L19ef24
                  | 1 => goto L19ef2a
                  | 2 => goto L19ef30
                  | 3 => goto L19ef36
                  | 4 => goto L19ef3c
                  | else => goto L19ee8e;
}
procedure `java.util.List` `forJavaNames`(`java.lang.String`[] v5 @kind object @name `tlsVersions`) @signature `Lokhttp3/TlsVersion;.forJavaNames:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19ef9c.  v0:= new `java.util.ArrayList`;
  #L19efa0.  v2:= length @variable v5;
  #L19efa2.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19efa8.  v3:= length @variable v5;
  #L19efaa.  v2:= 0I;
  #L19efac.  if v2 >= v3 then goto L19efc8;
  #L19efb0.  v1:= v5[v2] @kind object;
  #L19efb4.  call temp:= `forJavaName`(v1) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L19efba.  v4:= temp @kind object;
  #L19efbc.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19efc2.  v2:= v2 + 1;
  #L19efc6.  goto L19efac;
  #L19efc8.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19efce.  v2:= temp @kind object;
  #L19efd0.  return v2 @kind object;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19efe4.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L19efe8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L19efee.  v0:= temp @kind object;
  #L19eff0.  v0:= (`okhttp3.TlsVersion`) v0 @kind object;
  #L19eff4.  return v0 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19f008.  v0:= `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L19f00c.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L19f012.  v0:= temp @kind object;
  #L19f014.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L19f018.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.TlsVersion` v1 @kind this) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19f02c.  v0:= v1.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` @kind object;
  #L19f030.  return v0 @kind object;
}

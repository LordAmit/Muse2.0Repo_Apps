record `okhttp3.ResponseBody$BomAwareReader` @kind class @AccessFlag FINAL extends `java.io.Reader` @kind class {
  `java.nio.charset.Charset` `okhttp3.ResponseBody$BomAwareReader.charset` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.ResponseBody$BomAwareReader.closed` @AccessFlag PRIVATE;
  `java.io.Reader` `okhttp3.ResponseBody$BomAwareReader.delegate` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.ResponseBody$BomAwareReader.source` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.ResponseBody$BomAwareReader` v0 @kind this, `okio.BufferedSource` v1 @kind object @name `source`, `java.nio.charset.Charset` v2 @kind object @name `charset`) @signature `Lokhttp3/ResponseBody$BomAwareReader;.<init>:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L19e818.  call `<init>`(v0) @signature `Ljava/io/Reader;.<init>:()V` @kind direct;
  #L19e81e.  v0.`okhttp3.ResponseBody$BomAwareReader.source` @type ^`okio.BufferedSource` := v1 @kind object;
  #L19e822.  v0.`okhttp3.ResponseBody$BomAwareReader.charset` @type ^`java.nio.charset.Charset` := v2 @kind object;
  #L19e826.  return @kind void;
}
procedure `void` `close`(`okhttp3.ResponseBody$BomAwareReader` v1 @kind this) @signature `Lokhttp3/ResponseBody$BomAwareReader;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e838.  v0:= 1I;
  #L19e83a.  v1.`okhttp3.ResponseBody$BomAwareReader.closed` @type ^`boolean` := v0 @kind boolean;
  #L19e83e.  v0:= v1.`okhttp3.ResponseBody$BomAwareReader.delegate` @type ^`java.io.Reader` @kind object;
  #L19e842.  if v0 == 0 then goto L19e852;
  #L19e846.  v0:= v1.`okhttp3.ResponseBody$BomAwareReader.delegate` @type ^`java.io.Reader` @kind object;
  #L19e84a.  call `close`(v0) @signature `Ljava/io/Reader;.close:()V` @kind virtual;
  #L19e850.  return @kind void;
  #L19e852.  v0:= v1.`okhttp3.ResponseBody$BomAwareReader.source` @type ^`okio.BufferedSource` @kind object;
  #L19e856.  call `close`(v0) @signature `Lokio/BufferedSource;.close:()V` @kind interface;
  #L19e85c.  goto L19e850;
}
procedure `int` `read`(`okhttp3.ResponseBody$BomAwareReader` v4 @kind this, `char`[] v5 @kind object @name `cbuf`, `int` v6 @name `off`, `int` v7 @name `len`) @signature `Lokhttp3/ResponseBody$BomAwareReader;.read:([CII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19e870.  v2:= v4.`okhttp3.ResponseBody$BomAwareReader.closed` @type ^`boolean` @kind boolean;
  #L19e874.  if v2 == 0 then goto L19e888;
  #L19e878.  v2:= new `java.io.IOException`;
  #L19e87c.  v3:= "Stream closed" @kind object;
  #L19e880.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19e886.  throw v2;
  #L19e888.  v1:= v4.`okhttp3.ResponseBody$BomAwareReader.delegate` @type ^`java.io.Reader` @kind object;
  #L19e88c.  if v1 != 0 then goto L19e8ba;
  #L19e890.  v2:= v4.`okhttp3.ResponseBody$BomAwareReader.source` @type ^`okio.BufferedSource` @kind object;
  #L19e894.  v3:= v4.`okhttp3.ResponseBody$BomAwareReader.charset` @type ^`java.nio.charset.Charset` @kind object;
  #L19e898.  call temp:= `bomAwareCharset`(v2, v3) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind static;
  #L19e89e.  v0:= temp @kind object;
  #L19e8a0.  v1:= new `java.io.InputStreamReader`;
  #L19e8a4.  v2:= v4.`okhttp3.ResponseBody$BomAwareReader.source` @type ^`okio.BufferedSource` @kind object;
  #L19e8a8.  call temp:= `inputStream`(v2) @signature `Lokio/BufferedSource;.inputStream:()Ljava/io/InputStream;` @kind interface;
  #L19e8ae.  v2:= temp @kind object;
  #L19e8b0.  call `<init>`(v1, v2, v0) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L19e8b6.  v4.`okhttp3.ResponseBody$BomAwareReader.delegate` @type ^`java.io.Reader` := v1 @kind object;
  #L19e8ba.  call temp:= `read`(v1, v5, v6, v7) @signature `Ljava/io/Reader;.read:([CII)I` @kind virtual;
  #L19e8c0.  v2:= temp;
  #L19e8c2.  return v2;
}

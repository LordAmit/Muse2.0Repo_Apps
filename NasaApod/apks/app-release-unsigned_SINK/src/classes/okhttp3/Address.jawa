record `okhttp3.Address` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.CertificatePinner` `okhttp3.Address.certificatePinner` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.Address.dns` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.Address.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Address.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.Address.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.Address.proxySelector` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.Address.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.Address.sslSocketFactory` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Address.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Address` v2 @kind this, `java.lang.String` v3 @kind object @name `uriHost`, `int` v4 @name `uriPort`, `okhttp3.Dns` v5 @kind object @name `dns`, `javax.net.SocketFactory` v6 @kind object @name `socketFactory`, `javax.net.ssl.SSLSocketFactory` v7 @kind object @name `sslSocketFactory`, `javax.net.ssl.HostnameVerifier` v8 @kind object @name `hostnameVerifier`, `okhttp3.CertificatePinner` v9 @kind object @name `certificatePinner`, `okhttp3.Authenticator` v10 @kind object @name `proxyAuthenticator`, `java.net.Proxy` v11 @kind object @name `proxy`, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object @name `proxySelector`) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L193820.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L193826.  v1:= new `okhttp3.HttpUrl$Builder`;
  #L19382a.  call `<init>`(v1) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L193830.  if v7 == 0 then goto L193870;
  #L193834.  v0:= "https" @kind object;
  #L193838.  call temp:= `scheme`(v1, v0) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19383e.  v0:= temp @kind object;
  #L193840.  call temp:= `host`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L193846.  v0:= temp @kind object;
  #L193848.  call temp:= `port`(v0, v4) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19384e.  v0:= temp @kind object;
  #L193850.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193856.  v0:= temp @kind object;
  #L193858.  v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L19385c.  if v5 != 0 then goto L193876;
  #L193860.  v0:= new `java.lang.NullPointerException`;
  #L193864.  v1:= "dns == null" @kind object;
  #L193868.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19386e.  throw v0;
  #L193870.  v0:= "http" @kind object;
  #L193874.  goto L193838;
  #L193876.  v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` := v5 @kind object;
  #L19387a.  if v6 != 0 then goto L19388e;
  #L19387e.  v0:= new `java.lang.NullPointerException`;
  #L193882.  v1:= "socketFactory == null" @kind object;
  #L193886.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19388c.  throw v0;
  #L19388e.  v2.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L193892.  if v10 != 0 then goto L1938a6;
  #L193896.  v0:= new `java.lang.NullPointerException`;
  #L19389a.  v1:= "proxyAuthenticator == null" @kind object;
  #L19389e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1938a4.  throw v0;
  #L1938a6.  v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v10 @kind object;
  #L1938aa.  if v12 != 0 then goto L1938be;
  #L1938ae.  v0:= new `java.lang.NullPointerException`;
  #L1938b2.  v1:= "protocols == null" @kind object;
  #L1938b6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1938bc.  throw v0;
  #L1938be.  call temp:= `immutableList`(v12) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1938c4.  v0:= temp @kind object;
  #L1938c6.  v2.`okhttp3.Address.protocols` @type ^`java.util.List` := v0 @kind object;
  #L1938ca.  if v13 != 0 then goto L1938de;
  #L1938ce.  v0:= new `java.lang.NullPointerException`;
  #L1938d2.  v1:= "connectionSpecs == null" @kind object;
  #L1938d6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1938dc.  throw v0;
  #L1938de.  call temp:= `immutableList`(v13) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1938e4.  v0:= temp @kind object;
  #L1938e6.  v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L1938ea.  if v14 != 0 then goto L1938fe;
  #L1938ee.  v0:= new `java.lang.NullPointerException`;
  #L1938f2.  v1:= "proxySelector == null" @kind object;
  #L1938f6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1938fc.  throw v0;
  #L1938fe.  v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L193902.  v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` := v11 @kind object;
  #L193906.  v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L19390a.  v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L19390e.  v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` := v9 @kind object;
  #L193912.  return @kind void;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193924.  v0:= v1.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L193928.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19393c.  v0:= v1.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L193940.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193954.  v0:= v1.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L193958.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Address` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19396c.  v0:= instanceof @variable v3 @type ^`okhttp3.Address` @kind boolean;
  #L193970.  if v0 == 0 then goto L1939a2;
  #L193974.  v1:= v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193978.  v0:= v3 @kind object;
  #L19397a.  v0:= (`okhttp3.Address`) v0 @kind object;
  #L19397e.  v0:= v0.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193982.  call temp:= `equals`(v1, v0) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L193988.  v0:= temp;
  #L19398a.  if v0 == 0 then goto L1939a2;
  #L19398e.  v3:= (`okhttp3.Address`) v3 @kind object;
  #L193992.  call temp:= `equalsNonHost`(v2, v3) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @kind virtual;
  #L193998.  v0:= temp;
  #L19399a.  if v0 == 0 then goto L1939a2;
  #L19399e.  v0:= 1I;
  #L1939a0.  return v0;
  #L1939a2.  v0:= 0I;
  #L1939a4.  goto L1939a0;
}
procedure `boolean` `equalsNonHost`(`okhttp3.Address` v2 @kind this, `okhttp3.Address` v3 @kind object @name `that`) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1939b8.  v0:= v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L1939bc.  v1:= v3.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L1939c0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1939c6.  v0:= temp;
  #L1939c8.  if v0 == 0 then goto L193a94;
  #L1939cc.  v0:= v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L1939d0.  v1:= v3.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L1939d4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1939da.  v0:= temp;
  #L1939dc.  if v0 == 0 then goto L193a94;
  #L1939e0.  v0:= v2.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L1939e4.  v1:= v3.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L1939e8.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L1939ee.  v0:= temp;
  #L1939f0.  if v0 == 0 then goto L193a94;
  #L1939f4.  v0:= v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1939f8.  v1:= v3.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1939fc.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L193a02.  v0:= temp;
  #L193a04.  if v0 == 0 then goto L193a94;
  #L193a08.  v0:= v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L193a0c.  v1:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L193a10.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L193a16.  v0:= temp;
  #L193a18.  if v0 == 0 then goto L193a94;
  #L193a1c.  v0:= v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193a20.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193a24.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193a2a.  v0:= temp;
  #L193a2c.  if v0 == 0 then goto L193a94;
  #L193a30.  v0:= v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L193a34.  v1:= v3.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L193a38.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193a3e.  v0:= temp;
  #L193a40.  if v0 == 0 then goto L193a94;
  #L193a44.  v0:= v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L193a48.  v1:= v3.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L193a4c.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193a52.  v0:= temp;
  #L193a54.  if v0 == 0 then goto L193a94;
  #L193a58.  v0:= v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L193a5c.  v1:= v3.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L193a60.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193a66.  v0:= temp;
  #L193a68.  if v0 == 0 then goto L193a94;
  #L193a6c.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193a72.  v0:= temp @kind object;
  #L193a74.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L193a7a.  v0:= temp;
  #L193a7c.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193a82.  v1:= temp @kind object;
  #L193a84.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L193a8a.  v1:= temp;
  #L193a8c.  if v0 != v1 then goto L193a94;
  #L193a90.  v0:= 1I;
  #L193a92.  return v0;
  #L193a94.  v0:= 0I;
  #L193a96.  goto L193a92;
}
procedure `int` `hashCode`(`okhttp3.Address` v4 @kind this) @signature `Lokhttp3/Address;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L193aa8.  v2:= 0I;
  #L193aaa.  v0:= 17I;
  #L193aae.  v1:= v4.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193ab2.  call temp:= `hashCode`(v1) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @kind virtual;
  #L193ab8.  v1:= temp;
  #L193aba.  v0:= v1 + 527;
  #L193abe.  v1:= v0 * 31;
  #L193ac2.  v3:= v4.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L193ac6.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L193acc.  v3:= temp;
  #L193ace.  v0:= v1 + v3 @kind int;
  #L193ad2.  v1:= v0 * 31;
  #L193ad6.  v3:= v4.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L193ada.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L193ae0.  v3:= temp;
  #L193ae2.  v0:= v1 + v3 @kind int;
  #L193ae6.  v1:= v0 * 31;
  #L193aea.  v3:= v4.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L193aee.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L193af4.  v3:= temp;
  #L193af6.  v0:= v1 + v3 @kind int;
  #L193afa.  v1:= v0 * 31;
  #L193afe.  v3:= v4.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L193b02.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L193b08.  v3:= temp;
  #L193b0a.  v0:= v1 + v3 @kind int;
  #L193b0e.  v1:= v0 * 31;
  #L193b12.  v3:= v4.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L193b16.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L193b1c.  v3:= temp;
  #L193b1e.  v0:= v1 + v3 @kind int;
  #L193b22.  v3:= v0 * 31;
  #L193b26.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193b2a.  if v1 == 0 then goto L193b94;
  #L193b2e.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193b32.  call temp:= `hashCode`(v1) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L193b38.  v1:= temp;
  #L193b3a.  v0:= v3 + v1 @kind int;
  #L193b3e.  v3:= v0 * 31;
  #L193b42.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L193b46.  if v1 == 0 then goto L193b98;
  #L193b4a.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L193b4e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L193b54.  v1:= temp;
  #L193b56.  v0:= v3 + v1 @kind int;
  #L193b5a.  v3:= v0 * 31;
  #L193b5e.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L193b62.  if v1 == 0 then goto L193b9c;
  #L193b66.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L193b6a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L193b70.  v1:= temp;
  #L193b72.  v0:= v3 + v1 @kind int;
  #L193b76.  v1:= v0 * 31;
  #L193b7a.  v3:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L193b7e.  if v3 == 0 then goto L193b8e;
  #L193b82.  v2:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L193b86.  call temp:= `hashCode`(v2) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @kind virtual;
  #L193b8c.  v2:= temp;
  #L193b8e.  v0:= v1 + v2 @kind int;
  #L193b92.  return v0;
  #L193b94.  v1:= v2;
  #L193b96.  goto L193b3a;
  #L193b98.  v1:= v2;
  #L193b9a.  goto L193b56;
  #L193b9c.  v1:= v2;
  #L193b9e.  goto L193b72;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193bb0.  v0:= v1.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L193bb4.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193bc8.  v0:= v1.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L193bcc.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193be0.  v0:= v1.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193be4.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193bf8.  v0:= v1.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L193bfc.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193c10.  v0:= v1.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L193c14.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193c28.  v0:= v1.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L193c2c.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193c40.  v0:= v1.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L193c44.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Address` v3 @kind this) @signature `Lokhttp3/Address;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L193c58.  v1:= new `java.lang.StringBuilder`;
  #L193c5c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L193c62.  v2:= "Address{" @kind object;
  #L193c66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193c6c.  v1:= temp @kind object;
  #L193c6e.  v2:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193c72.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L193c78.  v2:= temp @kind object;
  #L193c7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193c80.  v1:= temp @kind object;
  #L193c82.  v2:= ":" @kind object;
  #L193c86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193c8c.  v1:= temp @kind object;
  #L193c8e.  v2:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193c92.  call temp:= `port`(v2) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L193c98.  v2:= temp;
  #L193c9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L193ca0.  v0:= temp @kind object;
  #L193ca2.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193ca6.  if v1 == 0 then goto L193cd4;
  #L193caa.  v1:= ", proxy=" @kind object;
  #L193cae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193cb4.  v1:= temp @kind object;
  #L193cb6.  v2:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193cba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193cc0.  v1:= "}" @kind object;
  #L193cc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193cca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L193cd0.  v1:= temp @kind object;
  #L193cd2.  return v1 @kind object;
  #L193cd4.  v1:= ", proxySelector=" @kind object;
  #L193cd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193cde.  v1:= temp @kind object;
  #L193ce0.  v2:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L193ce4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193cea.  goto L193cc0;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193cfc.  v0:= v1.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193d00.  return v0 @kind object;
}

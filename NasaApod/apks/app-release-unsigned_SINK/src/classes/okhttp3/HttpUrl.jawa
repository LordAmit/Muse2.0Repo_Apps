record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl.fragment` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.host` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.password` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.pathSegments` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.HttpUrl.port` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl.queryNamesAndValues` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.scheme` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.url` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.username` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.HttpUrl.FORM_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `char`[] `@@okhttp3.HttpUrl.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_REENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19b82c.  v0:= 16I;
  #L19b830.  v0:= new `char`[v0];
  #L19b834.  goto L19b840;
  #L19b83a.  `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L19b83e.  return @kind void;
  #L19b840.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L19b867.  goto L19b83a;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v4 @kind this, `okhttp3.HttpUrl$Builder` v5 @kind object @name `builder`) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19b878.  v1:= 0I;
  #L19b87a.  v3:= 0I;
  #L19b87c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b882.  v0:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19b886.  v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19b88a.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19b88e.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19b894.  v0:= temp @kind object;
  #L19b896.  v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` := v0 @kind object;
  #L19b89a.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19b89e.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19b8a4.  v0:= temp @kind object;
  #L19b8a6.  v4.`okhttp3.HttpUrl.password` @type ^`java.lang.String` := v0 @kind object;
  #L19b8aa.  v0:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b8ae.  v4.`okhttp3.HttpUrl.host` @type ^`java.lang.String` := v0 @kind object;
  #L19b8b2.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L19b8b8.  v0:= temp;
  #L19b8ba.  v4.`okhttp3.HttpUrl.port` @type ^`int` := v0;
  #L19b8be.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b8c2.  call temp:= `percentDecode`(v4, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L19b8c8.  v0:= temp @kind object;
  #L19b8ca.  v4.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` := v0 @kind object;
  #L19b8ce.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b8d2.  if v0 == 0 then goto L19b90e;
  #L19b8d6.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b8da.  v2:= 1I;
  #L19b8dc.  call temp:= `percentDecode`(v4, v0, v2) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L19b8e2.  v0:= temp @kind object;
  #L19b8e4.  v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19b8e8.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b8ec.  if v0 == 0 then goto L19b8fc;
  #L19b8f0.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b8f4.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19b8fa.  v1:= temp @kind object;
  #L19b8fc.  v4.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` := v1 @kind object;
  #L19b900.  call temp:= `toString`(v5) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b906.  v0:= temp @kind object;
  #L19b908.  v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` := v0 @kind object;
  #L19b90c.  return @kind void;
  #L19b90e.  v0:= v1 @kind object;
  #L19b910.  goto L19b8e4;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v11 @kind object @name `input`, `int` v12 @name `pos`, `int` v13 @name `limit`, `java.lang.String` v14 @kind object @name `encodeSet`, `boolean` v15 @name `alreadyEncoded`, `boolean` v16 @name `strict`, `boolean` v17 @name `plusIsSpace`, `boolean` v18 @name `asciiOnly`, `java.nio.charset.Charset` v19 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L19b924.  v2:= v12;
  #L19b926.  if v2 >= v13 then goto L19b9c8;
  #L19b92a.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19b930.  v10:= temp;
  #L19b932.  v1:= 32I;
  #L19b936.  if v10 < v1 then goto L19b984;
  #L19b93a.  v1:= 127I;
  #L19b93e.  if v10 == v1 then goto L19b984;
  #L19b942.  v1:= 128I;
  #L19b946.  if v10 < v1 then goto L19b94e;
  #L19b94a.  if v18 != 0 then goto L19b984;
  #L19b94e.  call temp:= `indexOf`(v14, v10) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19b954.  v1:= temp;
  #L19b956.  v3:= -1I;
  #L19b958.  if v1 != v3 then goto L19b984;
  #L19b95c.  v1:= 37I;
  #L19b960.  if v10 != v1 then goto L19b978;
  #L19b964.  if v15 == 0 then goto L19b984;
  #L19b968.  if v16 == 0 then goto L19b978;
  #L19b96c.  call temp:= `percentEncoded`(v11, v2, v13) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L19b972.  v1:= temp;
  #L19b974.  if v1 == 0 then goto L19b984;
  #L19b978.  v1:= 43I;
  #L19b97c.  if v10 != v1 then goto L19b9bc;
  #L19b980.  if v17 == 0 then goto L19b9bc;
  #L19b984.  v0:= new `okio.Buffer`;
  #L19b988.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19b98e.  call temp:= `writeUtf8`(v0, v11, v12, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L19b994.  v1:= v11 @kind object;
  #L19b996.  v3:= v13;
  #L19b998.  v4:= v14 @kind object;
  #L19b99a.  v5:= v15;
  #L19b99c.  v6:= v16;
  #L19b9a0.  v7:= v17;
  #L19b9a4.  v8:= v18;
  #L19b9a8.  v9:= v19 @kind object;
  #L19b9ac.  call `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L19b9b2.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19b9b8.  v1:= temp @kind object;
  #L19b9ba.  return v1 @kind object;
  #L19b9bc.  call temp:= `charCount`(v10) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19b9c2.  v1:= temp;
  #L19b9c4.  v2:= v2 + v1 @kind int;
  #L19b9c6.  goto L19b926;
  #L19b9c8.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19b9ce.  v1:= temp @kind object;
  #L19b9d0.  goto L19b9ba;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object @name `input`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19b9e4.  v1:= 0I;
  #L19b9e6.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b9ec.  v2:= temp;
  #L19b9ee.  v8:= 0I;
  #L19b9f0.  v0:= v9 @kind object;
  #L19b9f2.  v3:= v10 @kind object;
  #L19b9f4.  v4:= v11;
  #L19b9f6.  v5:= v12;
  #L19b9f8.  v6:= v13;
  #L19b9fa.  v7:= v14;
  #L19b9fc.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19ba02.  v0:= temp @kind object;
  #L19ba04.  return v0 @kind object;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object @name `input`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`, `java.nio.charset.Charset` v15 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19ba18.  v1:= 0I;
  #L19ba1a.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ba20.  v2:= temp;
  #L19ba22.  v0:= v9 @kind object;
  #L19ba24.  v3:= v10 @kind object;
  #L19ba26.  v4:= v11;
  #L19ba28.  v5:= v12;
  #L19ba2a.  v6:= v13;
  #L19ba2c.  v7:= v14;
  #L19ba2e.  v8:= v15 @kind object;
  #L19ba30.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19ba36.  v0:= temp @kind object;
  #L19ba38.  return v0 @kind object;
}
procedure `void` `canonicalize`(`okio.Buffer` v6 @kind object @name `out`, `java.lang.String` v7 @kind object @name `input`, `int` v8 @name `pos`, `int` v9 @name `limit`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`, `java.nio.charset.Charset` v15 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ba4c.  v2:= 0I;
  #L19ba4e.  v3:= v8;
  #L19ba50.  if v3 >= v9 then goto L19bb82;
  #L19ba54.  call temp:= `codePointAt`(v7, v3) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19ba5a.  v1:= temp;
  #L19ba5c.  if v11 == 0 then goto L19ba8c;
  #L19ba60.  v4:= 9I;
  #L19ba64.  if v1 == v4 then goto L19ba80;
  #L19ba68.  v4:= 10I;
  #L19ba6c.  if v1 == v4 then goto L19ba80;
  #L19ba70.  v4:= 12I;
  #L19ba74.  if v1 == v4 then goto L19ba80;
  #L19ba78.  v4:= 13I;
  #L19ba7c.  if v1 != v4 then goto L19ba8c;
  #L19ba80.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19ba86.  v4:= temp;
  #L19ba88.  v3:= v3 + v4 @kind int;
  #L19ba8a.  goto L19ba50;
  #L19ba8c.  v4:= 43I;
  #L19ba90.  if v1 != v4 then goto L19baae;
  #L19ba94.  if v13 == 0 then goto L19baae;
  #L19ba98.  if v11 == 0 then goto L19baa8;
  #L19ba9c.  v4:= "+" @kind object;
  #L19baa0.  call temp:= `writeUtf8`(v6, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L19baa6.  goto L19ba80;
  #L19baa8.  v4:= "%2B" @kind object;
  #L19baac.  goto L19baa0;
  #L19baae.  v4:= 32I;
  #L19bab2.  if v1 < v4 then goto L19baf4;
  #L19bab6.  v4:= 127I;
  #L19baba.  if v1 == v4 then goto L19baf4;
  #L19babe.  v4:= 128I;
  #L19bac2.  if v1 < v4 then goto L19baca;
  #L19bac6.  if v14 != 0 then goto L19baf4;
  #L19baca.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19bad0.  v4:= temp;
  #L19bad2.  v5:= -1I;
  #L19bad4.  if v4 != v5 then goto L19baf4;
  #L19bad8.  v4:= 37I;
  #L19badc.  if v1 != v4 then goto L19bb7a;
  #L19bae0.  if v11 == 0 then goto L19baf4;
  #L19bae4.  if v12 == 0 then goto L19bb7a;
  #L19bae8.  call temp:= `percentEncoded`(v7, v3, v9) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L19baee.  v4:= temp;
  #L19baf0.  if v4 != 0 then goto L19bb7a;
  #L19baf4.  if v2 != 0 then goto L19bb02;
  #L19baf8.  v2:= new `okio.Buffer`;
  #L19bafc.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19bb02.  if v15 == 0 then goto L19bb16;
  #L19bb06.  v4:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19bb0a.  call temp:= `equals`(v15, v4) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19bb10.  v4:= temp;
  #L19bb12.  if v4 == 0 then goto L19bb68;
  #L19bb16.  call temp:= `writeUtf8CodePoint`(v2, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19bb1c.  call temp:= `exhausted`(v2) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L19bb22.  v4:= temp;
  #L19bb24.  if v4 != 0 then goto L19ba80;
  #L19bb28.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L19bb2e.  v4:= temp;
  #L19bb30.  v0:= v4 ^& 255;
  #L19bb34.  v4:= 37I;
  #L19bb38.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19bb3e.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L19bb42.  v5:= v0 ^> 4;
  #L19bb46.  v5:= v5 ^& 15;
  #L19bb4a.  v4:= v4[v5] @kind char;
  #L19bb4e.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19bb54.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L19bb58.  v5:= v0 ^& 15;
  #L19bb5c.  v4:= v4[v5] @kind char;
  #L19bb60.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19bb66.  goto L19bb1c;
  #L19bb68.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19bb6e.  v4:= temp;
  #L19bb70.  v4:= v4 + v3 @kind int;
  #L19bb72.  call temp:= `writeString`(v2, v7, v3, v4, v15) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L19bb78.  goto L19bb1c;
  #L19bb7a.  call temp:= `writeUtf8CodePoint`(v6, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19bb80.  goto L19ba80;
  #L19bb82.  return @kind void;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object @name `scheme`) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19bb94.  v0:= "http" @kind object;
  #L19bb98.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19bb9e.  v0:= temp;
  #L19bba0.  if v0 == 0 then goto L19bbaa;
  #L19bba4.  v0:= 80I;
  #L19bba8.  return v0;
  #L19bbaa.  v0:= "https" @kind object;
  #L19bbae.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19bbb4.  v0:= temp;
  #L19bbb6.  if v0 == 0 then goto L19bbc0;
  #L19bbba.  v0:= 443I;
  #L19bbbe.  goto L19bba8;
  #L19bbc0.  v0:= -1I;
  #L19bbc2.  goto L19bba8;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v1 @kind object @name `uri`) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19bbd4.  call temp:= `toString`(v1) @signature `Ljava/net/URI;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bbda.  v0:= temp @kind object;
  #L19bbdc.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19bbe2.  v0:= temp @kind object;
  #L19bbe4.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v1 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19bbf8.  call temp:= `toString`(v1) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bbfe.  v0:= temp @kind object;
  #L19bc00.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19bc06.  v0:= temp @kind object;
  #L19bc08.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `getChecked`(`java.lang.String` v5 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.getChecked:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bc1c.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19bc20.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19bc26.  v2:= 0I;
  #L19bc28.  call temp:= `parse`(v0, v2, v5) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19bc2e.  v1:= temp @kind object;
  #L19bc30.  v2:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L19bc34.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L19bc3a.  v3:= temp;
  #L19bc3c.  v2:= v2[v3];
  #L19bc40.  goto L19bcc8;
  #L19bc46.  v2:= new `java.net.MalformedURLException`;
  #L19bc4a.  v3:= new `java.lang.StringBuilder`;
  #L19bc4e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19bc54.  v4:= "Invalid URL: " @kind object;
  #L19bc58.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bc5e.  v3:= temp @kind object;
  #L19bc60.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bc66.  v3:= temp @kind object;
  #L19bc68.  v4:= " for " @kind object;
  #L19bc6c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bc72.  v3:= temp @kind object;
  #L19bc74.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bc7a.  v3:= temp @kind object;
  #L19bc7c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bc82.  v3:= temp @kind object;
  #L19bc84.  call `<init>`(v2, v3) @signature `Ljava/net/MalformedURLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bc8a.  throw v2;
  #L19bc8c.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19bc92.  v2:= temp @kind object;
  #L19bc94.  return v2 @kind object;
  #L19bc96.  v2:= new `java.net.UnknownHostException`;
  #L19bc9a.  v3:= new `java.lang.StringBuilder`;
  #L19bc9e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19bca4.  v4:= "Invalid host: " @kind object;
  #L19bca8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bcae.  v3:= temp @kind object;
  #L19bcb0.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bcb6.  v3:= temp @kind object;
  #L19bcb8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bcbe.  v3:= temp @kind object;
  #L19bcc0.  call `<init>`(v2, v3) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bcc6.  throw v2;
  #L19bcc8.  switch v2
                  | 1 => goto L19bc8c
                  | 2 => goto L19bc96
                  | else => goto L19bc46;
}
procedure `void` `namesAndValuesToQueryString`(`java.lang.StringBuilder` v5 @kind object @name `out`, `java.util.List` v6 @kind object) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bce8.  v0:= 0I;
  #L19bcea.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19bcf0.  v2:= temp;
  #L19bcf2.  if v0 >= v2 then goto L19bd40;
  #L19bcf6.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19bcfc.  v1:= temp @kind object;
  #L19bcfe.  v1:= (`java.lang.String`) v1 @kind object;
  #L19bd02.  v4:= v0 + 1;
  #L19bd06.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19bd0c.  v3:= temp @kind object;
  #L19bd0e.  v3:= (`java.lang.String`) v3 @kind object;
  #L19bd12.  if v0 <= 0 then goto L19bd20;
  #L19bd16.  v4:= 38I;
  #L19bd1a.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bd20.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bd26.  if v3 == 0 then goto L19bd3a;
  #L19bd2a.  v4:= 61I;
  #L19bd2e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bd34.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bd3a.  v0:= v0 + 2;
  #L19bd3e.  goto L19bcf2;
  #L19bd40.  return @kind void;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v4 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19bd54.  v2:= 0I;
  #L19bd56.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19bd5a.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19bd60.  call temp:= `parse`(v0, v2, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19bd66.  v1:= temp @kind object;
  #L19bd68.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19bd6c.  if v1 != v3 then goto L19bd78;
  #L19bd70.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19bd76.  v2:= temp @kind object;
  #L19bd78.  return v2 @kind object;
}
procedure `void` `pathSegmentsToString`(`java.lang.StringBuilder` v3 @kind object @name `out`, `java.util.List` v4 @kind object) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19bd8c.  v0:= 0I;
  #L19bd8e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19bd94.  v1:= temp;
  #L19bd96.  if v0 >= v1 then goto L19bdbc;
  #L19bd9a.  v2:= 47I;
  #L19bd9e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bda4.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19bdaa.  v2:= temp @kind object;
  #L19bdac.  v2:= (`java.lang.String`) v2 @kind object;
  #L19bdb0.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bdb6.  v0:= v0 + 1;
  #L19bdba.  goto L19bd96;
  #L19bdbc.  return @kind void;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v4 @kind object @name `encoded`, `int` v5 @name `pos`, `int` v6 @name `limit`, `boolean` v7 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19bdd0.  v1:= v5;
  #L19bdd2.  if v1 >= v6 then goto L19be18;
  #L19bdd6.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bddc.  v0:= temp;
  #L19bdde.  v3:= 37I;
  #L19bde2.  if v0 == v3 then goto L19bdf2;
  #L19bde6.  v3:= 43I;
  #L19bdea.  if v0 != v3 then goto L19be12;
  #L19bdee.  if v7 == 0 then goto L19be12;
  #L19bdf2.  v2:= new `okio.Buffer`;
  #L19bdf6.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19bdfc.  call temp:= `writeUtf8`(v2, v4, v5, v1) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L19be02.  call `percentDecode`(v2, v4, v1, v6, v7) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L19be08.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19be0e.  v3:= temp @kind object;
  #L19be10.  return v3 @kind object;
  #L19be12.  v1:= v1 + 1;
  #L19be16.  goto L19bdd2;
  #L19be18.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19be1e.  v3:= temp @kind object;
  #L19be20.  goto L19be10;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v2 @kind object @name `encoded`, `boolean` v3 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L19be34.  v0:= 0I;
  #L19be36.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19be3c.  v1:= temp;
  #L19be3e.  call temp:= `percentDecode`(v2, v0, v1, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L19be44.  v0:= temp @kind object;
  #L19be46.  return v0 @kind object;
}
procedure `java.util.List` `percentDecode`(`okhttp3.HttpUrl` v5 @kind this, `java.util.List` v6 @kind object, `boolean` v7 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19be58.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19be5e.  v3:= temp;
  #L19be60.  v1:= new `java.util.ArrayList`;
  #L19be64.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19be6a.  v0:= 0I;
  #L19be6c.  if v0 >= v3 then goto L19be98;
  #L19be70.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19be76.  v2:= temp @kind object;
  #L19be78.  v2:= (`java.lang.String`) v2 @kind object;
  #L19be7c.  if v2 == 0 then goto L19be94;
  #L19be80.  call temp:= `percentDecode`(v2, v7) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19be86.  v4:= temp @kind object;
  #L19be88.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19be8e.  v0:= v0 + 1;
  #L19be92.  goto L19be6c;
  #L19be94.  v4:= 0I;
  #L19be96.  goto L19be88;
  #L19be98.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19be9e.  v4:= temp @kind object;
  #L19bea0.  return v4 @kind object;
}
procedure `void` `percentDecode`(`okio.Buffer` v6 @kind object @name `out`, `java.lang.String` v7 @kind object @name `encoded`, `int` v8 @name `pos`, `int` v9 @name `limit`, `boolean` v10 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19beb4.  v5:= -1I;
  #L19beb6.  v3:= v8;
  #L19beb8.  if v3 >= v9 then goto L19bf40;
  #L19bebc.  call temp:= `codePointAt`(v7, v3) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19bec2.  v0:= temp;
  #L19bec4.  v4:= 37I;
  #L19bec8.  if v0 != v4 then goto L19bf20;
  #L19becc.  v4:= v3 + 2;
  #L19bed0.  if v4 >= v9 then goto L19bf20;
  #L19bed4.  v4:= v3 + 1;
  #L19bed8.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bede.  v4:= temp;
  #L19bee0.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19bee6.  v1:= temp;
  #L19bee8.  v4:= v3 + 2;
  #L19beec.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bef2.  v4:= temp;
  #L19bef4.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19befa.  v2:= temp;
  #L19befc.  if v1 == v5 then goto L19bf38;
  #L19bf00.  if v2 == v5 then goto L19bf38;
  #L19bf04.  v4:= v1 ^< 4;
  #L19bf08.  v4:= v4 + v2 @kind int;
  #L19bf0a.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19bf10.  v3:= v3 + 2;
  #L19bf14.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19bf1a.  v4:= temp;
  #L19bf1c.  v3:= v3 + v4 @kind int;
  #L19bf1e.  goto L19beb8;
  #L19bf20.  v4:= 43I;
  #L19bf24.  if v0 != v4 then goto L19bf38;
  #L19bf28.  if v10 == 0 then goto L19bf38;
  #L19bf2c.  v4:= 32I;
  #L19bf30.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19bf36.  goto L19bf14;
  #L19bf38.  call temp:= `writeUtf8CodePoint`(v6, v0) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19bf3e.  goto L19bf14;
  #L19bf40.  return @kind void;
}
procedure `boolean` `percentEncoded`(`java.lang.String` v3 @kind object @name `encoded`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19bf54.  v2:= -1I;
  #L19bf56.  v0:= v4 + 2;
  #L19bf5a.  if v0 >= v5 then goto L19bfa2;
  #L19bf5e.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bf64.  v0:= temp;
  #L19bf66.  v1:= 37I;
  #L19bf6a.  if v0 != v1 then goto L19bfa2;
  #L19bf6e.  v0:= v4 + 1;
  #L19bf72.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bf78.  v0:= temp;
  #L19bf7a.  call temp:= `decodeHexDigit`(v0) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19bf80.  v0:= temp;
  #L19bf82.  if v0 == v2 then goto L19bfa2;
  #L19bf86.  v0:= v4 + 2;
  #L19bf8a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bf90.  v0:= temp;
  #L19bf92.  call temp:= `decodeHexDigit`(v0) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19bf98.  v0:= temp;
  #L19bf9a.  if v0 == v2 then goto L19bfa2;
  #L19bf9e.  v0:= 1I;
  #L19bfa0.  return v0;
  #L19bfa2.  v0:= 0I;
  #L19bfa4.  goto L19bfa0;
}
procedure `java.util.List` `queryStringToNamesAndValues`(`java.lang.String` v6 @kind object @name `encodedQuery`) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19bfb8.  v5:= -1I;
  #L19bfba.  v3:= new `java.util.ArrayList`;
  #L19bfbe.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19bfc4.  v2:= 0I;
  #L19bfc6.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19bfcc.  v4:= temp;
  #L19bfce.  if v2 > v4 then goto L19c03c;
  #L19bfd2.  v4:= 38I;
  #L19bfd6.  call temp:= `indexOf`(v6, v4, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19bfdc.  v0:= temp;
  #L19bfde.  if v0 != v5 then goto L19bfea;
  #L19bfe2.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19bfe8.  v0:= temp;
  #L19bfea.  v4:= 61I;
  #L19bfee.  call temp:= `indexOf`(v6, v4, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19bff4.  v1:= temp;
  #L19bff6.  if v1 == v5 then goto L19bffe;
  #L19bffa.  if v1 <= v0 then goto L19c01a;
  #L19bffe.  call temp:= `substring`(v6, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c004.  v4:= temp @kind object;
  #L19c006.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c00c.  v4:= 0I;
  #L19c00e.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c014.  v2:= v0 + 1;
  #L19c018.  goto L19bfc6;
  #L19c01a.  call temp:= `substring`(v6, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c020.  v4:= temp @kind object;
  #L19c022.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c028.  v4:= v1 + 1;
  #L19c02c.  call temp:= `substring`(v6, v4, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c032.  v4:= temp @kind object;
  #L19c034.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c03a.  goto L19c014;
  #L19c03c.  return v3 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19c050.  v1:= v3.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L19c054.  if v1 != 0 then goto L19c05c;
  #L19c058.  v1:= 0I;
  #L19c05a.  return v1 @kind object;
  #L19c05c.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c060.  v2:= 35I;
  #L19c064.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19c06a.  v1:= temp;
  #L19c06c.  v0:= v1 + 1;
  #L19c070.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c074.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19c07a.  v1:= temp @kind object;
  #L19c07c.  goto L19c05a;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c090.  v2:= v5.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L19c094.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19c09a.  v2:= temp;
  #L19c09c.  if v2 == 0 then goto L19c0a6;
  #L19c0a0.  v2:= "" @kind object;
  #L19c0a4.  return v2 @kind object;
  #L19c0a6.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c0aa.  v3:= 58I;
  #L19c0ae.  v4:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c0b2.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c0b8.  v4:= temp;
  #L19c0ba.  v4:= v4 + 3;
  #L19c0be.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19c0c4.  v2:= temp;
  #L19c0c6.  v1:= v2 + 1;
  #L19c0ca.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c0ce.  v3:= 64I;
  #L19c0d2.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19c0d8.  v0:= temp;
  #L19c0da.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c0de.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c0e4.  v2:= temp @kind object;
  #L19c0e6.  goto L19c0a4;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c0f8.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c0fc.  v3:= 47I;
  #L19c100.  v4:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c104.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c10a.  v4:= temp;
  #L19c10c.  v4:= v4 + 3;
  #L19c110.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19c116.  v1:= temp;
  #L19c118.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c11c.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c120.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c126.  v3:= temp;
  #L19c128.  v4:= "?#" @kind object;
  #L19c12c.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19c132.  v0:= temp;
  #L19c134.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c138.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c13e.  v2:= temp @kind object;
  #L19c140.  return v2 @kind object;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v9 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19c154.  v8:= 47I;
  #L19c158.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c15c.  v6:= v9.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c160.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c166.  v6:= temp;
  #L19c168.  v6:= v6 + 3;
  #L19c16c.  call temp:= `indexOf`(v5, v8, v6) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19c172.  v2:= temp;
  #L19c174.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c178.  v6:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c17c.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c182.  v6:= temp;
  #L19c184.  v7:= "?#" @kind object;
  #L19c188.  call temp:= `delimiterOffset`(v5, v2, v6, v7) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19c18e.  v1:= temp;
  #L19c190.  v3:= new `java.util.ArrayList`;
  #L19c194.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19c19a.  v0:= v2;
  #L19c19c.  if v0 >= v1 then goto L19c1c6;
  #L19c1a0.  v0:= v0 + 1;
  #L19c1a4.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c1a8.  call temp:= `delimiterOffset`(v5, v0, v1, v8) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19c1ae.  v4:= temp;
  #L19c1b0.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c1b4.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c1ba.  v5:= temp @kind object;
  #L19c1bc.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c1c2.  v0:= v4;
  #L19c1c4.  goto L19c19c;
  #L19c1c6.  return v3 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c1d8.  v2:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c1dc.  if v2 != 0 then goto L19c1e4;
  #L19c1e0.  v2:= 0I;
  #L19c1e2.  return v2 @kind object;
  #L19c1e4.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c1e8.  v3:= 63I;
  #L19c1ec.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19c1f2.  v2:= temp;
  #L19c1f4.  v1:= v2 + 1;
  #L19c1f8.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c1fc.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c200.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c206.  v3:= temp;
  #L19c208.  v4:= 35I;
  #L19c20c.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19c212.  v0:= temp;
  #L19c214.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c218.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c21e.  v2:= temp @kind object;
  #L19c220.  goto L19c1e2;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c234.  v2:= v5.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L19c238.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19c23e.  v2:= temp;
  #L19c240.  if v2 == 0 then goto L19c24a;
  #L19c244.  v2:= "" @kind object;
  #L19c248.  return v2 @kind object;
  #L19c24a.  v2:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c24e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c254.  v2:= temp;
  #L19c256.  v1:= v2 + 3;
  #L19c25a.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c25e.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c262.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c268.  v3:= temp;
  #L19c26a.  v4:= ":@" @kind object;
  #L19c26e.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19c274.  v0:= temp;
  #L19c276.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c27a.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c280.  v2:= temp @kind object;
  #L19c282.  goto L19c248;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c294.  v0:= instanceof @variable v3 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L19c298.  if v0 == 0 then goto L19c2b8;
  #L19c29c.  v3:= (`okhttp3.HttpUrl`) v3 @kind object;
  #L19c2a0.  v0:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c2a4.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c2a8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c2ae.  v0:= temp;
  #L19c2b0.  if v0 == 0 then goto L19c2b8;
  #L19c2b4.  v0:= 1I;
  #L19c2b6.  return v0;
  #L19c2b8.  v0:= 0I;
  #L19c2ba.  goto L19c2b6;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c2cc.  v0:= v1.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L19c2d0.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c2e4.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c2e8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19c2ee.  v0:= temp;
  #L19c2f0.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c304.  v0:= v1.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19c308.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c31c.  v0:= v2.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c320.  v1:= "https" @kind object;
  #L19c324.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c32a.  v0:= temp;
  #L19c32c.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19c340.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19c344.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19c34a.  v1:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c34e.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v1 @kind object;
  #L19c352.  call temp:= `encodedUsername`(v3) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19c358.  v1:= temp @kind object;
  #L19c35a.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v1 @kind object;
  #L19c35e.  call temp:= `encodedPassword`(v3) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19c364.  v1:= temp @kind object;
  #L19c366.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L19c36a.  v1:= v3.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19c36e.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L19c372.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19c376.  v2:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c37a.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19c380.  v2:= temp;
  #L19c382.  if v1 == v2 then goto L19c3c6;
  #L19c386.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19c38a.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L19c38e.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19c392.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19c398.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19c39c.  call temp:= `encodedPathSegments`(v3) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L19c3a2.  v2:= temp @kind object;
  #L19c3a4.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19c3aa.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L19c3b0.  v1:= temp @kind object;
  #L19c3b2.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c3b8.  call temp:= `encodedFragment`(v3) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L19c3be.  v1:= temp @kind object;
  #L19c3c0.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L19c3c4.  return v0 @kind object;
  #L19c3c6.  v1:= -1I;
  #L19c3c8.  goto L19c38a;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this, `java.lang.String` v4 @kind object @name `link`) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19c3dc.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19c3e0.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19c3e6.  call temp:= `parse`(v0, v3, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19c3ec.  v1:= temp @kind object;
  #L19c3ee.  v2:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19c3f2.  if v1 != v2 then goto L19c3f8;
  #L19c3f6.  return v0 @kind object;
  #L19c3f8.  v0:= 0I;
  #L19c3fa.  goto L19c3f6;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c40c.  v0:= v1.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L19c410.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c424.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L19c428.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c43c.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L19c440.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c446.  v0:= temp;
  #L19c448.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c45c.  v0:= v1.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19c460.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c474.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c478.  if v1 != 0 then goto L19c480;
  #L19c47c.  v1:= 0I;
  #L19c47e.  return v1 @kind object;
  #L19c480.  v0:= new `java.lang.StringBuilder`;
  #L19c484.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c48a.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c48e.  call `namesAndValuesToQueryString`(v0, v1) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19c494.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c49a.  v1:= temp @kind object;
  #L19c49c.  goto L19c47e;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v4 @kind this, `java.lang.String` v5 @kind object @name `name`) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c4b0.  v2:= 0I;
  #L19c4b2.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c4b6.  if v3 != 0 then goto L19c4bc;
  #L19c4ba.  return v2 @kind object;
  #L19c4bc.  v0:= 0I;
  #L19c4be.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c4c2.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c4c8.  v1:= temp;
  #L19c4ca.  if v0 >= v1 then goto L19c4ba;
  #L19c4ce.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c4d2.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c4d8.  v3:= temp @kind object;
  #L19c4da.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c4e0.  v3:= temp;
  #L19c4e2.  if v3 == 0 then goto L19c4fc;
  #L19c4e6.  v2:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c4ea.  v3:= v0 + 1;
  #L19c4ee.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c4f4.  v2:= temp @kind object;
  #L19c4f6.  v2:= (`java.lang.String`) v2 @kind object;
  #L19c4fa.  goto L19c4ba;
  #L19c4fc.  v0:= v0 + 2;
  #L19c500.  goto L19c4ca;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c514.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c518.  if v0 != 0 then goto L19c528;
  #L19c51c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L19c520.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19c526.  throw v0;
  #L19c528.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c52c.  v1:= v3 * 2;
  #L19c530.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c536.  v0:= temp @kind object;
  #L19c538.  v0:= (`java.lang.String`) v0 @kind object;
  #L19c53c.  return v0 @kind object;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c550.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c554.  if v3 != 0 then goto L19c562;
  #L19c558.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L19c55e.  v3:= temp @kind object;
  #L19c560.  return v3 @kind object;
  #L19c562.  v1:= new `java.util.LinkedHashSet`;
  #L19c566.  call `<init>`(v1) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L19c56c.  v0:= 0I;
  #L19c56e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c572.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c578.  v2:= temp;
  #L19c57a.  if v0 >= v2 then goto L19c596;
  #L19c57e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c582.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c588.  v3:= temp @kind object;
  #L19c58a.  call temp:= `add`(v1, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c590.  v0:= v0 + 2;
  #L19c594.  goto L19c57a;
  #L19c596.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L19c59c.  v3:= temp @kind object;
  #L19c59e.  goto L19c560;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c5b0.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c5b4.  if v0 != 0 then goto L19c5c4;
  #L19c5b8.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L19c5bc.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19c5c2.  throw v0;
  #L19c5c4.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c5c8.  v1:= v3 * 2;
  #L19c5cc.  v1:= v1 + 1;
  #L19c5d0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c5d6.  v0:= temp @kind object;
  #L19c5d8.  v0:= (`java.lang.String`) v0 @kind object;
  #L19c5dc.  return v0 @kind object;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object @name `name`) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c5f0.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c5f4.  if v3 != 0 then goto L19c602;
  #L19c5f8.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L19c5fe.  v3:= temp @kind object;
  #L19c600.  return v3 @kind object;
  #L19c602.  v1:= new `java.util.ArrayList`;
  #L19c606.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19c60c.  v0:= 0I;
  #L19c60e.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c612.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c618.  v2:= temp;
  #L19c61a.  if v0 >= v2 then goto L19c652;
  #L19c61e.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c622.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c628.  v3:= temp @kind object;
  #L19c62a.  call temp:= `equals`(v6, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c630.  v3:= temp;
  #L19c632.  if v3 == 0 then goto L19c64c;
  #L19c636.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c63a.  v4:= v0 + 1;
  #L19c63e.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c644.  v3:= temp @kind object;
  #L19c646.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c64c.  v0:= v0 + 2;
  #L19c650.  goto L19c61a;
  #L19c652.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19c658.  v3:= temp @kind object;
  #L19c65a.  goto L19c600;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c66c.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c670.  if v0 == 0 then goto L19c686;
  #L19c674.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c678.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c67e.  v0:= temp;
  #L19c680.  v0:= v0 / 2;
  #L19c684.  return v0;
  #L19c686.  v0:= 0I;
  #L19c688.  goto L19c684;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c69c.  v0:= "/..." @kind object;
  #L19c6a0.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c6a6.  v0:= temp @kind object;
  #L19c6a8.  v1:= "" @kind object;
  #L19c6ac.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c6b2.  v0:= temp @kind object;
  #L19c6b4.  v1:= "" @kind object;
  #L19c6b8.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c6be.  v0:= temp @kind object;
  #L19c6c0.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19c6c6.  v0:= temp @kind object;
  #L19c6c8.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c6ce.  v0:= temp @kind object;
  #L19c6d0.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.String` v3 @kind object @name `link`) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c6e4.  call temp:= `newBuilder`(v2, v3) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c6ea.  v0:= temp @kind object;
  #L19c6ec.  if v0 == 0 then goto L19c6fa;
  #L19c6f0.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19c6f6.  v1:= temp @kind object;
  #L19c6f8.  return v1 @kind object;
  #L19c6fa.  v1:= 0I;
  #L19c6fc.  goto L19c6f8;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c710.  v0:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c714.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c728.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c72c.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c740.  v0:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19c744.  call temp:= `verifyAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L19c74a.  v0:= temp;
  #L19c74c.  if v0 == 0 then goto L19c754;
  #L19c750.  v0:= 0I;
  #L19c752.  return v0 @kind object;
  #L19c754.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L19c75a.  v0:= temp @kind object;
  #L19c75c.  v1:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19c760.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19c766.  v0:= temp @kind object;
  #L19c768.  goto L19c752;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19c77c.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c782.  v4:= temp @kind object;
  #L19c784.  call temp:= `reencodeForUri`(v4) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c78a.  v4:= temp @kind object;
  #L19c78c.  call temp:= `toString`(v4) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c792.  v3:= temp @kind object;
  #Try_start0.  
  #L19c794.  v4:= new `java.net.URI`;
  #L19c798.  call `<init>`(v4, v3) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L19c79e.  return v4 @kind object;
  #L19c7a0.  v0:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #Try_start1.  
  #L19c7a2.  v4:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L19c7a6.  v5:= "" @kind object;
  #L19c7aa.  call temp:= `replaceAll`(v3, v4, v5) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19c7b0.  v2:= temp @kind object;
  #L19c7b2.  call temp:= `create`(v2) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #Try_end1.  
  #L19c7b8.  v4:= temp @kind object;
  #L19c7ba.  goto L19c79e;
  #L19c7bc.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19c7be.  v4:= new `java.lang.RuntimeException`;
  #L19c7c2.  call `<init>`(v4, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19c7c8.  throw v4;
  catch `java.net.URISyntaxException` @[Try_start0..Try_end0] goto L19c7a0;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L19c7bc;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L19c7f8.  v1:= new `java.net.URL`;
  #L19c7fc.  v2:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c800.  call `<init>`(v1, v2) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L19c806.  return v1 @kind object;
  #L19c808.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L19c80a.  v1:= new `java.lang.RuntimeException`;
  #L19c80e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19c814.  throw v1;
  catch `java.net.MalformedURLException` @[Try_start0..Try_end0] goto L19c808;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c838.  v0:= v1.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L19c83c.  return v0 @kind object;
}

record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.domain` @AccessFlag ;
  `long` `okhttp3.Cookie$Builder.expiresAt` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.hostOnly` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.httpOnly` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.name` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.path` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.persistent` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.secure` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.value` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1979a4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1979aa.  v0:= 253402300799999L;
  #L1979b4.  v2.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v0 @kind wide;
  #L1979b8.  v0:= "/" @kind object;
  #L1979bc.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v0 @kind object;
  #L1979c0.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `domain`, `boolean` v6 @name `hostOnly`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1979d4.  if v5 != 0 then goto L1979e8;
  #L1979d8.  v1:= new `java.lang.NullPointerException`;
  #L1979dc.  v2:= "domain == null" @kind object;
  #L1979e0.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1979e6.  throw v1;
  #L1979e8.  call temp:= `canonicalizeHost`(v5) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1979ee.  v0:= temp @kind object;
  #L1979f0.  if v0 != 0 then goto L197a26;
  #L1979f4.  v1:= new `java.lang.IllegalArgumentException`;
  #L1979f8.  v2:= new `java.lang.StringBuilder`;
  #L1979fc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L197a02.  v3:= "unexpected domain: " @kind object;
  #L197a06.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L197a0c.  v2:= temp @kind object;
  #L197a0e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L197a14.  v2:= temp @kind object;
  #L197a16.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L197a1c.  v2:= temp @kind object;
  #L197a1e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197a24.  throw v1;
  #L197a26.  v4.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` := v0 @kind object;
  #L197a2a.  v4.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` := v6 @kind boolean;
  #L197a2e.  return v4 @kind object;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L197a40.  v0:= new `okhttp3.Cookie`;
  #L197a44.  call `<init>`(v0, v1) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @kind direct;
  #L197a4a.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L197a5c.  v0:= 0I;
  #L197a5e.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L197a64.  v0:= temp @kind object;
  #L197a66.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 @name `expiresAt`) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L197a78.  v0:= 0L;
  #L197a7c.  v0:= lcmp(v4, v0);
  #L197a80.  if v0 > 0 then goto L197a88;
  #L197a84.  v4:= -9223372036854775808L;
  #L197a88.  v0:= 253402300799999L;
  #L197a92.  v0:= lcmp(v4, v0);
  #L197a96.  if v0 <= 0 then goto L197aa4;
  #L197a9a.  v4:= 253402300799999L;
  #L197aa4.  v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v4 @kind wide;
  #L197aa8.  v0:= 1I;
  #L197aaa.  v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` := v0 @kind boolean;
  #L197aae.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L197ac0.  v0:= 1I;
  #L197ac2.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L197ac8.  v0:= temp @kind object;
  #L197aca.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L197adc.  v0:= 1I;
  #L197ade.  v1.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L197ae2.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `name`) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L197af4.  if v3 != 0 then goto L197b08;
  #L197af8.  v0:= new `java.lang.NullPointerException`;
  #L197afc.  v1:= "name == null" @kind object;
  #L197b00.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197b06.  throw v0;
  #L197b08.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L197b0e.  v0:= temp @kind object;
  #L197b10.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L197b16.  v0:= temp;
  #L197b18.  if v0 != 0 then goto L197b2c;
  #L197b1c.  v0:= new `java.lang.IllegalArgumentException`;
  #L197b20.  v1:= "name is not trimmed" @kind object;
  #L197b24.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197b2a.  throw v0;
  #L197b2c.  v2.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` := v3 @kind object;
  #L197b30.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `path`) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L197b44.  v0:= "/" @kind object;
  #L197b48.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L197b4e.  v0:= temp;
  #L197b50.  if v0 != 0 then goto L197b64;
  #L197b54.  v0:= new `java.lang.IllegalArgumentException`;
  #L197b58.  v1:= "path must start with '/'" @kind object;
  #L197b5c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197b62.  throw v0;
  #L197b64.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v3 @kind object;
  #L197b68.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L197b7c.  v0:= 1I;
  #L197b7e.  v1.`okhttp3.Cookie$Builder.secure` @type ^`boolean` := v0 @kind boolean;
  #L197b82.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L197b94.  if v3 != 0 then goto L197ba8;
  #L197b98.  v0:= new `java.lang.NullPointerException`;
  #L197b9c.  v1:= "value == null" @kind object;
  #L197ba0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197ba6.  throw v0;
  #L197ba8.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L197bae.  v0:= temp @kind object;
  #L197bb0.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L197bb6.  v0:= temp;
  #L197bb8.  if v0 != 0 then goto L197bcc;
  #L197bbc.  v0:= new `java.lang.IllegalArgumentException`;
  #L197bc0.  v1:= "value is not trimmed" @kind object;
  #L197bc4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197bca.  throw v0;
  #L197bcc.  v2.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` := v3 @kind object;
  #L197bd0.  return v2 @kind object;
}

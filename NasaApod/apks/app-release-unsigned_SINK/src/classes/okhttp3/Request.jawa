record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.Request.body` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Request.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Headers` `okhttp3.Request.headers` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Request.method` @AccessFlag FINAL;
  `java.lang.Object` `okhttp3.Request.tag` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Request.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.Request$Builder` v2 @kind object @name `builder`) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L19dc5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19dc62.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19dc66.  v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L19dc6a.  v0:= v2.`okhttp3.Request$Builder.method` @type ^`java.lang.String` @kind object;
  #L19dc6e.  v1.`okhttp3.Request.method` @type ^`java.lang.String` := v0 @kind object;
  #L19dc72.  v0:= v2.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19dc76.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19dc7c.  v0:= temp @kind object;
  #L19dc7e.  v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19dc82.  v0:= v2.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19dc86.  v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19dc8a.  v0:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L19dc8e.  if v0 == 0 then goto L19dc9c;
  #L19dc92.  v0:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L19dc96.  v1.`okhttp3.Request.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L19dc9a.  return @kind void;
  #L19dc9c.  v0:= v1 @kind object;
  #L19dc9e.  goto L19dc96;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dcb0.  v0:= v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19dcb4.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19dcc8.  v0:= v2.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L19dccc.  if v0 == 0 then goto L19dcd2;
  #L19dcd0.  return v0 @kind object;
  #L19dcd2.  v1:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19dcd6.  call temp:= `parse`(v1) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L19dcdc.  v0:= temp @kind object;
  #L19dcde.  v2.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L19dce2.  goto L19dcd0;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dcf4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19dcf8.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19dcfe.  v0:= temp @kind object;
  #L19dd00.  return v0 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dd14.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19dd18.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L19dd1e.  v0:= temp @kind object;
  #L19dd20.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dd34.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19dd38.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dd4c.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19dd50.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L19dd56.  v0:= temp;
  #L19dd58.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dd6c.  v0:= v1.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19dd70.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dd84.  v0:= new `okhttp3.Request$Builder`;
  #L19dd88.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L19dd8e.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dda0.  v0:= v1.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19dda4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ddb8.  v0:= new `java.lang.StringBuilder`;
  #L19ddbc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ddc2.  v1:= "Request{method=" @kind object;
  #L19ddc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ddcc.  v0:= temp @kind object;
  #L19ddce.  v1:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19ddd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ddd8.  v0:= temp @kind object;
  #L19ddda.  v1:= ", url=" @kind object;
  #L19ddde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dde4.  v0:= temp @kind object;
  #L19dde6.  v1:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19ddea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ddf0.  v0:= temp @kind object;
  #L19ddf2.  v1:= ", tag=" @kind object;
  #L19ddf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ddfc.  v1:= temp @kind object;
  #L19ddfe.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19de02.  if v0 == v2 then goto L19de28;
  #L19de06.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19de0a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19de10.  v0:= temp @kind object;
  #L19de12.  v1:= 125I;
  #L19de16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19de1c.  v0:= temp @kind object;
  #L19de1e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19de24.  v0:= temp @kind object;
  #L19de26.  return v0 @kind object;
  #L19de28.  v0:= 0I;
  #L19de2a.  goto L19de0a;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19de3c.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19de40.  return v0 @kind object;
}

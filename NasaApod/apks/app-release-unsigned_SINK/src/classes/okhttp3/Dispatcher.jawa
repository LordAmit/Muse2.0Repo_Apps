record `okhttp3.Dispatcher` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.ExecutorService` `okhttp3.Dispatcher.executorService` @AccessFlag PRIVATE;
  `java.lang.Runnable` `okhttp3.Dispatcher.idleCallback` @AccessFlag PRIVATE;
  `int` `okhttp3.Dispatcher.maxRequests` @AccessFlag PRIVATE;
  `int` `okhttp3.Dispatcher.maxRequestsPerHost` @AccessFlag PRIVATE;
  `java.util.Deque` `okhttp3.Dispatcher.readyAsyncCalls` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.Dispatcher.runningAsyncCalls` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.Dispatcher.runningSyncCalls` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Dispatcher` v1 @kind this) @signature `Lokhttp3/Dispatcher;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L198a70.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L198a76.  v0:= 64I;
  #L198a7a.  v1.`okhttp3.Dispatcher.maxRequests` @type ^`int` := v0;
  #L198a7e.  v0:= 5I;
  #L198a80.  v1.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int` := v0;
  #L198a84.  v0:= new `java.util.ArrayDeque`;
  #L198a88.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L198a8e.  v1.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198a92.  v0:= new `java.util.ArrayDeque`;
  #L198a96.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L198a9c.  v1.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198aa0.  v0:= new `java.util.ArrayDeque`;
  #L198aa4.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L198aaa.  v1.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198aae.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Dispatcher` v1 @kind this, `java.util.concurrent.ExecutorService` v2 @kind object @name `executorService`) @signature `Lokhttp3/Dispatcher;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L198ac0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L198ac6.  v0:= 64I;
  #L198aca.  v1.`okhttp3.Dispatcher.maxRequests` @type ^`int` := v0;
  #L198ace.  v0:= 5I;
  #L198ad0.  v1.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int` := v0;
  #L198ad4.  v0:= new `java.util.ArrayDeque`;
  #L198ad8.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L198ade.  v1.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198ae2.  v0:= new `java.util.ArrayDeque`;
  #L198ae6.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L198aec.  v1.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198af0.  v0:= new `java.util.ArrayDeque`;
  #L198af4.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L198afa.  v1.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198afe.  v1.`okhttp3.Dispatcher.executorService` @type ^`java.util.concurrent.ExecutorService` := v2 @kind object;
  #L198b02.  return @kind void;
}
procedure `void` `finished`(`okhttp3.Dispatcher` v4 @kind this, `java.util.Deque` v5 @kind object, `java.lang.Object` v6 @kind object, `boolean` v7 @name `promoteCalls`) @signature `Lokhttp3/Dispatcher;.finished:(Ljava/util/Deque;Ljava/lang/Object;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198b14.  @monitorenter v4
  #Try_start0.  
  #L198b16.  call temp:= `remove`(v5, v6) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L198b1c.  v2:= temp;
  #L198b1e.  if v2 != 0 then goto L198b38;
  #L198b22.  v2:= new `java.lang.AssertionError`;
  #L198b26.  v3:= "Call wasn't in-flight!" @kind object;
  #L198b2a.  call `<init>`(v2, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L198b30.  throw v2;
  #L198b32.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198b34.  @monitorexit v4
  #Try_end0.  
  #L198b36.  throw v2;
  #L198b38.  if v7 == 0 then goto L198b42;
  #Try_start1.  
  #L198b3c.  call `promoteCalls`(v4) @signature `Lokhttp3/Dispatcher;.promoteCalls:()V` @kind direct;
  #L198b42.  call temp:= `runningCallsCount`(v4) @signature `Lokhttp3/Dispatcher;.runningCallsCount:()I` @kind virtual;
  #L198b48.  v1:= temp;
  #L198b4a.  v0:= v4.`okhttp3.Dispatcher.idleCallback` @type ^`java.lang.Runnable` @kind object;
  #L198b4e.  @monitorexit v4
  #Try_end1.  
  #L198b50.  if v1 != 0 then goto L198b5e;
  #L198b54.  if v0 == 0 then goto L198b5e;
  #L198b58.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L198b5e.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198b32;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198b32;
}
procedure `void` `promoteCalls`(`okhttp3.Dispatcher` v4 @kind this) @signature `Lokhttp3/Dispatcher;.promoteCalls:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198b84.  v2:= v4.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198b88.  call temp:= `size`(v2) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L198b8e.  v2:= temp;
  #L198b90.  v3:= v4.`okhttp3.Dispatcher.maxRequests` @type ^`int`;
  #L198b94.  if v2 < v3 then goto L198b9a;
  #L198b98.  return @kind void;
  #L198b9a.  v2:= v4.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198b9e.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L198ba4.  v2:= temp;
  #L198ba6.  if v2 != 0 then goto L198b98;
  #L198baa.  v2:= v4.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198bae.  call temp:= `iterator`(v2) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198bb4.  v1:= temp @kind object;
  #L198bb6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198bbc.  v2:= temp;
  #L198bbe.  if v2 == 0 then goto L198b98;
  #L198bc2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198bc8.  v0:= temp @kind object;
  #L198bca.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198bce.  call temp:= `runningCallsForHost`(v4, v0) @signature `Lokhttp3/Dispatcher;.runningCallsForHost:(Lokhttp3/RealCall$AsyncCall;)I` @kind direct;
  #L198bd4.  v2:= temp;
  #L198bd6.  v3:= v4.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int`;
  #L198bda.  if v2 >= v3 then goto L198bfc;
  #L198bde.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L198be4.  v2:= v4.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198be8.  call temp:= `add`(v2, v0) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198bee.  call temp:= `executorService`(v4) @signature `Lokhttp3/Dispatcher;.executorService:()Ljava/util/concurrent/ExecutorService;` @kind virtual;
  #L198bf4.  v2:= temp @kind object;
  #L198bf6.  call `execute`(v2, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L198bfc.  v2:= v4.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198c00.  call temp:= `size`(v2) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L198c06.  v2:= temp;
  #L198c08.  v3:= v4.`okhttp3.Dispatcher.maxRequests` @type ^`int`;
  #L198c0c.  if v2 < v3 then goto L198bb6;
  #L198c10.  goto L198b98;
}
procedure `int` `runningCallsForHost`(`okhttp3.Dispatcher` v5 @kind this, `okhttp3.RealCall$AsyncCall` v6 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.runningCallsForHost:(Lokhttp3/RealCall$AsyncCall;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L198c24.  v1:= 0I;
  #L198c26.  v2:= v5.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198c2a.  call temp:= `iterator`(v2) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198c30.  v2:= temp @kind object;
  #L198c32.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198c38.  v3:= temp;
  #L198c3a.  if v3 == 0 then goto L198c7c;
  #L198c3e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198c44.  v0:= temp @kind object;
  #L198c46.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198c4a.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198c50.  v3:= temp @kind object;
  #L198c52.  v3:= v3.`okhttp3.RealCall.forWebSocket` @type ^`boolean` @kind boolean;
  #L198c56.  if v3 != 0 then goto L198c32;
  #L198c5a.  call temp:= `host`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @kind virtual;
  #L198c60.  v3:= temp @kind object;
  #L198c62.  call temp:= `host`(v6) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @kind virtual;
  #L198c68.  v4:= temp @kind object;
  #L198c6a.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L198c70.  v3:= temp;
  #L198c72.  if v3 == 0 then goto L198c32;
  #L198c76.  v1:= v1 + 1;
  #L198c7a.  goto L198c32;
  #L198c7c.  return v1;
}
procedure `void` `cancelAll`(`okhttp3.Dispatcher` v3 @kind this) @signature `Lokhttp3/Dispatcher;.cancelAll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L198c90.  @monitorenter v3
  #Try_start0.  
  #L198c92.  v1:= v3.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198c96.  call temp:= `iterator`(v1) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198c9c.  v1:= temp @kind object;
  #L198c9e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198ca4.  v2:= temp;
  #L198ca6.  if v2 == 0 then goto L198ccc;
  #L198caa.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198cb0.  v0:= temp @kind object;
  #L198cb2.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198cb6.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198cbc.  v2:= temp @kind object;
  #L198cbe.  call `cancel`(v2) @signature `Lokhttp3/RealCall;.cancel:()V` @kind virtual;
  #Try_end0.  
  #L198cc4.  goto L198c9e;
  #L198cc6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198cc8.  @monitorexit v3
  #L198cca.  throw v1;
  #Try_start1.  
  #L198ccc.  v1:= v3.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198cd0.  call temp:= `iterator`(v1) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198cd6.  v1:= temp @kind object;
  #L198cd8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198cde.  v2:= temp;
  #L198ce0.  if v2 == 0 then goto L198d00;
  #L198ce4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198cea.  v0:= temp @kind object;
  #L198cec.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198cf0.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198cf6.  v2:= temp @kind object;
  #L198cf8.  call `cancel`(v2) @signature `Lokhttp3/RealCall;.cancel:()V` @kind virtual;
  #L198cfe.  goto L198cd8;
  #L198d00.  v1:= v3.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198d04.  call temp:= `iterator`(v1) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198d0a.  v1:= temp @kind object;
  #L198d0c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198d12.  v2:= temp;
  #L198d14.  if v2 == 0 then goto L198d2c;
  #L198d18.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198d1e.  v0:= temp @kind object;
  #L198d20.  v0:= (`okhttp3.RealCall`) v0 @kind object;
  #L198d24.  call `cancel`(v0) @signature `Lokhttp3/RealCall;.cancel:()V` @kind virtual;
  #Try_end1.  
  #L198d2a.  goto L198d0c;
  #L198d2c.  @monitorexit v3
  #L198d2e.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198cc6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198cc6;
}
procedure `void` `enqueue`(`okhttp3.Dispatcher` v2 @kind this, `okhttp3.RealCall$AsyncCall` v3 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.enqueue:(Lokhttp3/RealCall$AsyncCall;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L198d54.  @monitorenter v2
  #Try_start0.  
  #L198d56.  v0:= v2.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198d5a.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L198d60.  v0:= temp;
  #L198d62.  v1:= v2.`okhttp3.Dispatcher.maxRequests` @type ^`int`;
  #L198d66.  if v0 >= v1 then goto L198d96;
  #L198d6a.  call temp:= `runningCallsForHost`(v2, v3) @signature `Lokhttp3/Dispatcher;.runningCallsForHost:(Lokhttp3/RealCall$AsyncCall;)I` @kind direct;
  #L198d70.  v0:= temp;
  #L198d72.  v1:= v2.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int`;
  #L198d76.  if v0 >= v1 then goto L198d96;
  #L198d7a.  v0:= v2.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198d7e.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198d84.  call temp:= `executorService`(v2) @signature `Lokhttp3/Dispatcher;.executorService:()Ljava/util/concurrent/ExecutorService;` @kind virtual;
  #L198d8a.  v0:= temp @kind object;
  #L198d8c.  call `execute`(v0, v3) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #Try_end0.  
  #L198d92.  @monitorexit v2
  #L198d94.  return @kind void;
  #Try_start1.  
  #L198d96.  v0:= v2.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198d9a.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end1.  
  #L198da0.  goto L198d92;
  #L198da2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198da4.  @monitorexit v2
  #L198da6.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198da2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198da2;
}
procedure `void` `executed`(`okhttp3.Dispatcher` v1 @kind this, `okhttp3.RealCall` v2 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.executed:(Lokhttp3/RealCall;)V` @AccessFlag  {
    temp;
    v0;

  #L198dcc.  @monitorenter v1
  #Try_start0.  
  #L198dce.  v0:= v1.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198dd2.  call temp:= `add`(v0, v2) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L198dd8.  @monitorexit v1
  #L198dda.  return @kind void;
  #L198ddc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198dde.  @monitorexit v1
  #L198de0.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198ddc;
}
procedure `java.util.concurrent.ExecutorService` `executorService`(`okhttp3.Dispatcher` v9 @kind this) @signature `Lokhttp3/Dispatcher;.executorService:()Ljava/util/concurrent/ExecutorService;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L198e00.  @monitorenter v9
  #Try_start0.  
  #L198e02.  v0:= v9.`okhttp3.Dispatcher.executorService` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L198e06.  if v0 != 0 then goto L198e40;
  #L198e0a.  v1:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L198e0e.  v2:= 0I;
  #L198e10.  v3:= 2147483647I;
  #L198e16.  v4:= 60L;
  #L198e1a.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L198e1e.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L198e22.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L198e28.  v0:= "OkHttp Dispatcher" @kind object;
  #L198e2c.  v8:= 0I;
  #L198e2e.  call temp:= `threadFactory`(v0, v8) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L198e34.  v8:= temp @kind object;
  #L198e36.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L198e3c.  v9.`okhttp3.Dispatcher.executorService` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L198e40.  v0:= v9.`okhttp3.Dispatcher.executorService` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #Try_end0.  
  #L198e44.  @monitorexit v9
  #L198e46.  return v0 @kind object;
  #L198e48.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198e4a.  @monitorexit v9
  #L198e4c.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198e48;
}
procedure `void` `finished`(`okhttp3.Dispatcher` v2 @kind this, `okhttp3.RealCall$AsyncCall` v3 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L198e6c.  v0:= v2.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198e70.  v1:= 1I;
  #L198e72.  call `finished`(v2, v0, v3, v1) @signature `Lokhttp3/Dispatcher;.finished:(Ljava/util/Deque;Ljava/lang/Object;Z)V` @kind direct;
  #L198e78.  return @kind void;
}
procedure `void` `finished`(`okhttp3.Dispatcher` v2 @kind this, `okhttp3.RealCall` v3 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L198e8c.  v0:= v2.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198e90.  v1:= 0I;
  #L198e92.  call `finished`(v2, v0, v3, v1) @signature `Lokhttp3/Dispatcher;.finished:(Ljava/util/Deque;Ljava/lang/Object;Z)V` @kind direct;
  #L198e98.  return @kind void;
}
procedure `int` `getMaxRequests`(`okhttp3.Dispatcher` v1 @kind this) @signature `Lokhttp3/Dispatcher;.getMaxRequests:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L198eac.  @monitorenter v1
  #Try_start0.  
  #L198eae.  v0:= v1.`okhttp3.Dispatcher.maxRequests` @type ^`int`;
  #Try_end0.  
  #L198eb2.  @monitorexit v1
  #L198eb4.  return v0;
  #L198eb6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198eb8.  @monitorexit v1
  #L198eba.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198eb6;
}
procedure `int` `getMaxRequestsPerHost`(`okhttp3.Dispatcher` v1 @kind this) @signature `Lokhttp3/Dispatcher;.getMaxRequestsPerHost:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L198ed8.  @monitorenter v1
  #Try_start0.  
  #L198eda.  v0:= v1.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int`;
  #Try_end0.  
  #L198ede.  @monitorexit v1
  #L198ee0.  return v0;
  #L198ee2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198ee4.  @monitorexit v1
  #L198ee6.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198ee2;
}
procedure `java.util.List` `queuedCalls`(`okhttp3.Dispatcher` v4 @kind this) @signature `Lokhttp3/Dispatcher;.queuedCalls:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198f04.  @monitorenter v4
  #Try_start0.  
  #L198f06.  v1:= new `java.util.ArrayList`;
  #L198f0a.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L198f10.  v2:= v4.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198f14.  call temp:= `iterator`(v2) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198f1a.  v2:= temp @kind object;
  #L198f1c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198f22.  v3:= temp;
  #L198f24.  if v3 == 0 then goto L198f4a;
  #L198f28.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198f2e.  v0:= temp @kind object;
  #L198f30.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198f34.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198f3a.  v3:= temp @kind object;
  #L198f3c.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L198f42.  goto L198f1c;
  #L198f44.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198f46.  @monitorexit v4
  #L198f48.  throw v2;
  #Try_start1.  
  #L198f4a.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #Try_end1.  
  #L198f50.  v2:= temp @kind object;
  #L198f52.  @monitorexit v4
  #L198f54.  return v2 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198f44;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198f44;
}
procedure `int` `queuedCallsCount`(`okhttp3.Dispatcher` v1 @kind this) @signature `Lokhttp3/Dispatcher;.queuedCallsCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L198f7c.  @monitorenter v1
  #Try_start0.  
  #L198f7e.  v0:= v1.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198f82.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #Try_end0.  
  #L198f88.  v0:= temp;
  #L198f8a.  @monitorexit v1
  #L198f8c.  return v0;
  #L198f8e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198f90.  @monitorexit v1
  #L198f92.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198f8e;
}
procedure `java.util.List` `runningCalls`(`okhttp3.Dispatcher` v4 @kind this) @signature `Lokhttp3/Dispatcher;.runningCalls:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198fb0.  @monitorenter v4
  #Try_start0.  
  #L198fb2.  v1:= new `java.util.ArrayList`;
  #L198fb6.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L198fbc.  v2:= v4.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198fc0.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L198fc6.  v2:= v4.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198fca.  call temp:= `iterator`(v2) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198fd0.  v2:= temp @kind object;
  #L198fd2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198fd8.  v3:= temp;
  #L198fda.  if v3 == 0 then goto L199000;
  #L198fde.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198fe4.  v0:= temp @kind object;
  #L198fe6.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198fea.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198ff0.  v3:= temp @kind object;
  #L198ff2.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L198ff8.  goto L198fd2;
  #L198ffa.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198ffc.  @monitorexit v4
  #L198ffe.  throw v2;
  #Try_start1.  
  #L199000.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #Try_end1.  
  #L199006.  v2:= temp @kind object;
  #L199008.  @monitorexit v4
  #L19900a.  return v2 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198ffa;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198ffa;
}
procedure `int` `runningCallsCount`(`okhttp3.Dispatcher` v2 @kind this) @signature `Lokhttp3/Dispatcher;.runningCallsCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L199030.  @monitorenter v2
  #Try_start0.  
  #L199032.  v0:= v2.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L199036.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L19903c.  v0:= temp;
  #L19903e.  v1:= v2.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L199042.  call temp:= `size`(v1) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #Try_end0.  
  #L199048.  v1:= temp;
  #L19904a.  v0:= v0 + v1 @kind int;
  #L19904c.  @monitorexit v2
  #L19904e.  return v0;
  #L199050.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L199052.  @monitorexit v2
  #L199054.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L199050;
}
procedure `void` `setIdleCallback`(`okhttp3.Dispatcher` v1 @kind this, `java.lang.Runnable` v2 @kind object @name `idleCallback`) @signature `Lokhttp3/Dispatcher;.setIdleCallback:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L199074.  @monitorenter v1
  #Try_start0.  
  #L199076.  v1.`okhttp3.Dispatcher.idleCallback` @type ^`java.lang.Runnable` := v2 @kind object;
  #Try_end0.  
  #L19907a.  @monitorexit v1
  #L19907c.  return @kind void;
  #L19907e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L199080.  @monitorexit v1
  #L199082.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19907e;
}
procedure `void` `setMaxRequests`(`okhttp3.Dispatcher` v3 @kind this, `int` v4 @name `maxRequests`) @signature `Lokhttp3/Dispatcher;.setMaxRequests:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1990a0.  @monitorenter v3
  #L1990a2.  v0:= 1I;
  #L1990a4.  if v4 >= v0 then goto L1990e0;
  #Try_start0.  
  #L1990a8.  v0:= new `java.lang.IllegalArgumentException`;
  #L1990ac.  v1:= new `java.lang.StringBuilder`;
  #L1990b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1990b6.  v2:= "max < 1: " @kind object;
  #L1990ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1990c0.  v1:= temp @kind object;
  #L1990c2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1990c8.  v1:= temp @kind object;
  #L1990ca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1990d0.  v1:= temp @kind object;
  #L1990d2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1990d8.  throw v0;
  #Try_end0.  
  #L1990da.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1990dc.  @monitorexit v3
  #L1990de.  throw v0;
  #Try_start1.  
  #L1990e0.  v3.`okhttp3.Dispatcher.maxRequests` @type ^`int` := v4;
  #L1990e4.  call `promoteCalls`(v3) @signature `Lokhttp3/Dispatcher;.promoteCalls:()V` @kind direct;
  #Try_end1.  
  #L1990ea.  @monitorexit v3
  #L1990ec.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1990da;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1990da;
}
procedure `void` `setMaxRequestsPerHost`(`okhttp3.Dispatcher` v3 @kind this, `int` v4 @name `maxRequestsPerHost`) @signature `Lokhttp3/Dispatcher;.setMaxRequestsPerHost:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L199114.  @monitorenter v3
  #L199116.  v0:= 1I;
  #L199118.  if v4 >= v0 then goto L199154;
  #Try_start0.  
  #L19911c.  v0:= new `java.lang.IllegalArgumentException`;
  #L199120.  v1:= new `java.lang.StringBuilder`;
  #L199124.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19912a.  v2:= "max < 1: " @kind object;
  #L19912e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199134.  v1:= temp @kind object;
  #L199136.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19913c.  v1:= temp @kind object;
  #L19913e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199144.  v1:= temp @kind object;
  #L199146.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19914c.  throw v0;
  #Try_end0.  
  #L19914e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L199150.  @monitorexit v3
  #L199152.  throw v0;
  #Try_start1.  
  #L199154.  v3.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int` := v4;
  #L199158.  call `promoteCalls`(v3) @signature `Lokhttp3/Dispatcher;.promoteCalls:()V` @kind direct;
  #Try_end1.  
  #L19915e.  @monitorexit v3
  #L199160.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19914e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L19914e;
}

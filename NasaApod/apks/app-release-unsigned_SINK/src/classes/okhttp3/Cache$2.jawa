record `okhttp3.Cache$2` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `boolean` `okhttp3.Cache$2.canRemove` @AccessFlag ;
  `java.util.Iterator` `okhttp3.Cache$2.delegate` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Cache$2.nextUrl` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.Cache$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$2` v1 @kind this, `okhttp3.Cache` v2 @kind object @name `this$0`) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L193d34.  v1.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` := v2 @kind object;
  #L193d38.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L193d3e.  v0:= v1.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` @kind object;
  #L193d42.  v0:= v0.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L193d46.  call temp:= `snapshots`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L193d4c.  v0:= temp @kind object;
  #L193d4e.  v1.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` := v0 @kind object;
  #L193d52.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$2` v5 @kind this) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L193d64.  v2:= 1I;
  #L193d66.  v3:= 0I;
  #L193d68.  v4:= v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L193d6c.  if v4 == 0 then goto L193d72;
  #L193d70.  return v2;
  #L193d72.  v5.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v3 @kind boolean;
  #L193d76.  v4:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L193d7a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L193d80.  v4:= temp;
  #L193d82.  if v4 == 0 then goto L193dd0;
  #L193d86.  v4:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L193d8a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L193d90.  v1:= temp @kind object;
  #L193d92.  v1:= (`okhttp3.internal.cache.DiskLruCache$Snapshot`) v1 @kind object;
  #L193d96.  v4:= 0I;
  #Try_start0.  
  #L193d98.  call temp:= `getSource`(v1, v4) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L193d9e.  v4:= temp @kind object;
  #L193da0.  call temp:= `buffer`(v4) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L193da6.  v0:= temp @kind object;
  #L193da8.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193dae.  v4:= temp @kind object;
  #L193db0.  v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v4 @kind object;
  #Try_end0.  
  #L193db4.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L193dba.  goto L193d70;
  #L193dbc.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L193dbe.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L193dc4.  goto L193d76;
  #L193dc6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L193dc8.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L193dce.  throw v2;
  #L193dd0.  v2:= v3;
  #L193dd2.  goto L193d70;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L193dbc;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L193dc6;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$2` v1 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L193df4.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @kind virtual;
  #L193dfa.  v0:= temp @kind object;
  #L193dfc.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L193e10.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @kind virtual;
  #L193e16.  v1:= temp;
  #L193e18.  if v1 != 0 then goto L193e28;
  #L193e1c.  v1:= new `java.util.NoSuchElementException`;
  #L193e20.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L193e26.  throw v1;
  #L193e28.  v0:= v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L193e2c.  v1:= 0I;
  #L193e2e.  v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v1 @kind object;
  #L193e32.  v1:= 1I;
  #L193e34.  v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v1 @kind boolean;
  #L193e38.  return v0 @kind object;
}
procedure `void` `remove`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L193e4c.  v0:= v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` @kind boolean;
  #L193e50.  if v0 != 0 then goto L193e64;
  #L193e54.  v0:= new `java.lang.IllegalStateException`;
  #L193e58.  v1:= "remove() before next()" @kind object;
  #L193e5c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193e62.  throw v0;
  #L193e64.  v0:= v2.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L193e68.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L193e6e.  return @kind void;
}

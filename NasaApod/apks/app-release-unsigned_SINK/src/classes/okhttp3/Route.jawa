record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.address` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.inetSocketAddress` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.proxy` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v2 @kind this, `okhttp3.Address` v3 @kind object @name `address`, `java.net.Proxy` v4 @kind object @name `proxy`, `java.net.InetSocketAddress` v5 @kind object @name `inetSocketAddress`) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19ebbc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19ebc2.  if v3 != 0 then goto L19ebd6;
  #L19ebc6.  v0:= new `java.lang.NullPointerException`;
  #L19ebca.  v1:= "address == null" @kind object;
  #L19ebce.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ebd4.  throw v0;
  #L19ebd6.  if v4 != 0 then goto L19ebea;
  #L19ebda.  v0:= new `java.lang.NullPointerException`;
  #L19ebde.  v1:= "proxy == null" @kind object;
  #L19ebe2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ebe8.  throw v0;
  #L19ebea.  if v5 != 0 then goto L19ebfe;
  #L19ebee.  v0:= new `java.lang.NullPointerException`;
  #L19ebf2.  v1:= "inetSocketAddress == null" @kind object;
  #L19ebf6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ebfc.  throw v0;
  #L19ebfe.  v2.`okhttp3.Route.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L19ec02.  v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` := v4 @kind object;
  #L19ec06.  v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` := v5 @kind object;
  #L19ec0a.  return @kind void;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ec1c.  v0:= v1.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19ec20.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ec34.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L19ec38.  if v0 == 0 then goto L19ec8c;
  #L19ec3c.  v0:= v3 @kind object;
  #L19ec3e.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L19ec42.  v0:= v0.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19ec46.  v1:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19ec4a.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ec50.  v0:= temp;
  #L19ec52.  if v0 == 0 then goto L19ec8c;
  #L19ec56.  v0:= v3 @kind object;
  #L19ec58.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L19ec5c.  v0:= v0.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19ec60.  v1:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19ec64.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ec6a.  v0:= temp;
  #L19ec6c.  if v0 == 0 then goto L19ec8c;
  #L19ec70.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L19ec74.  v0:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19ec78.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19ec7c.  call temp:= `equals`(v0, v1) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ec82.  v0:= temp;
  #L19ec84.  if v0 == 0 then goto L19ec8c;
  #L19ec88.  v0:= 1I;
  #L19ec8a.  return v0;
  #L19ec8c.  v0:= 0I;
  #L19ec8e.  goto L19ec8a;
}
procedure `int` `hashCode`(`okhttp3.Route` v3 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19eca0.  v0:= 17I;
  #L19eca4.  v1:= v3.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19eca8.  call temp:= `hashCode`(v1) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L19ecae.  v1:= temp;
  #L19ecb0.  v0:= v1 + 527;
  #L19ecb4.  v1:= v0 * 31;
  #L19ecb8.  v2:= v3.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19ecbc.  call temp:= `hashCode`(v2) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L19ecc2.  v2:= temp;
  #L19ecc4.  v0:= v1 + v2 @kind int;
  #L19ecc8.  v1:= v0 * 31;
  #L19eccc.  v2:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19ecd0.  call temp:= `hashCode`(v2) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L19ecd6.  v2:= temp;
  #L19ecd8.  v0:= v1 + v2 @kind int;
  #L19ecdc.  return v0;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ecf0.  v0:= v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19ecf4.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ed08.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19ed0c.  v0:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19ed10.  if v0 == 0 then goto L19ed2c;
  #L19ed14.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19ed18.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L19ed1e.  v0:= temp @kind object;
  #L19ed20.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L19ed24.  if v0 != v1 then goto L19ed2c;
  #L19ed28.  v0:= 1I;
  #L19ed2a.  return v0;
  #L19ed2c.  v0:= 0I;
  #L19ed2e.  goto L19ed2a;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ed40.  v0:= v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19ed44.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ed58.  v0:= new `java.lang.StringBuilder`;
  #L19ed5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ed62.  v1:= "Route{" @kind object;
  #L19ed66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ed6c.  v0:= temp @kind object;
  #L19ed6e.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19ed72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ed78.  v0:= temp @kind object;
  #L19ed7a.  v1:= "}" @kind object;
  #L19ed7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ed84.  v0:= temp @kind object;
  #L19ed86.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ed8c.  v0:= temp @kind object;
  #L19ed8e.  return v0 @kind object;
}

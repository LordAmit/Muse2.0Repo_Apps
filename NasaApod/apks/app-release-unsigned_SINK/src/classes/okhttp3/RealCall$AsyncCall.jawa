record `okhttp3.RealCall$AsyncCall` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.Callback` `okhttp3.RealCall$AsyncCall.responseCallback` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RealCall` `okhttp3.RealCall$AsyncCall.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RealCall$AsyncCall` v4 @kind this, `okhttp3.RealCall` v5 @kind object @name `this$0`, `okhttp3.Callback` v6 @kind object @name `responseCallback`) @signature `Lokhttp3/RealCall$AsyncCall;.<init>:(Lokhttp3/RealCall;Lokhttp3/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L215f90.  v4.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` := v5 @kind object;
  #L215f94.  v0:= "OkHttp %s" @kind object;
  #L215f98.  v1:= 1I;
  #L215f9a.  v1:= new `java.lang.Object`[v1];
  #L215f9e.  v2:= 0I;
  #L215fa0.  call temp:= `redactedUrl`(v5) @signature `Lokhttp3/RealCall;.redactedUrl:()Ljava/lang/String;` @kind virtual;
  #L215fa6.  v3:= temp @kind object;
  #L215fa8.  v1[v2]:= v3 @kind object;
  #L215fac.  call `<init>`(v4, v0, v1) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L215fb2.  v4.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` := v6 @kind object;
  #L215fb6.  return @kind void;
}
procedure `void` `execute`(`okhttp3.RealCall$AsyncCall` v7 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L215fc8.  v2:= 0I;
  #Try_start0.  
  #L215fca.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215fce.  call temp:= `getResponseWithInterceptorChain`(v3) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:()Lokhttp3/Response;` @kind virtual;
  #L215fd4.  v1:= temp @kind object;
  #L215fd6.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215fda.  v3:= v3.`okhttp3.RealCall.retryAndFollowUpInterceptor` @type ^`okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind object;
  #L215fde.  call temp:= `isCanceled`(v3) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isCanceled:()Z` @kind virtual;
  #L215fe4.  v3:= temp;
  #L215fe6.  if v3 == 0 then goto L216020;
  #L215fea.  v2:= 1I;
  #L215fec.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L215ff0.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215ff4.  v5:= new `java.io.IOException`;
  #L215ff8.  v6:= "Canceled" @kind object;
  #L215ffc.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L216002.  call `onFailure`(v3, v4, v5) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #Try_end0.  
  #L216008.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L21600c.  v3:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L216010.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L216016.  v3:= temp @kind object;
  #L216018.  call `finished`(v3, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L21601e.  return @kind void;
  #L216020.  v2:= 1I;
  #Try_start1.  
  #L216022.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L216026.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L21602a.  call `onResponse`(v3, v4, v1) @signature `Lokhttp3/Callback;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind interface;
  #Try_end1.  
  #L216030.  goto L216008;
  #L216032.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L216034.  if v2 == 0 then goto L216092;
  #Try_start2.  
  #L216038.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L21603e.  v3:= temp @kind object;
  #L216040.  v4:= 4I;
  #L216042.  v5:= new `java.lang.StringBuilder`;
  #L216046.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21604c.  v6:= "Callback failure for " @kind object;
  #L216050.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L216056.  v5:= temp @kind object;
  #L216058.  v6:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L21605c.  call temp:= `toLoggableString`(v6) @signature `Lokhttp3/RealCall;.toLoggableString:()Ljava/lang/String;` @kind virtual;
  #L216062.  v6:= temp @kind object;
  #L216064.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21606a.  v5:= temp @kind object;
  #L21606c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L216072.  v5:= temp @kind object;
  #L216074.  call `log`(v3, v4, v5, v0) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #Try_end2.  
  #L21607a.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L21607e.  v3:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L216082.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L216088.  v3:= temp @kind object;
  #L21608a.  call `finished`(v3, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L216090.  goto L21601e;
  #Try_start3.  
  #L216092.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L216096.  call temp:= `access$000`(v3) @signature `Lokhttp3/RealCall;.access$000:(Lokhttp3/RealCall;)Lokhttp3/EventListener;` @kind static;
  #L21609c.  v3:= temp @kind object;
  #L21609e.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2160a2.  call `callFailed`(v3, v4, v0) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L2160a8.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2160ac.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2160b0.  call `onFailure`(v3, v4, v0) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #Try_end3.  
  #L2160b6.  goto L21607a;
  #L2160b8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2160ba.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L2160be.  v4:= v4.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2160c2.  call temp:= `dispatcher`(v4) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2160c8.  v4:= temp @kind object;
  #L2160ca.  call `finished`(v4, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2160d0.  throw v3;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L216032;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L2160b8;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L216032;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L2160b8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L2160b8;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L2160b8;
}
procedure `okhttp3.RealCall` `get`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @AccessFlag  {
    temp;
    v0;

  #L21610c.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L216110.  return v0 @kind object;
}
procedure `java.lang.String` `host`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L216124.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L216128.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L21612c.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L216132.  v0:= temp @kind object;
  #L216134.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L21613a.  v0:= temp @kind object;
  #L21613c.  return v0 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.request:()Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;

  #L216150.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L216154.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L216158.  return v0 @kind object;
}

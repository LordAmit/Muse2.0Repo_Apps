record `okhttp3.MultipartBody$Part` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.MultipartBody$Part.body` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.MultipartBody$Part.headers` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Part` v0 @kind this, `okhttp3.Headers` v1 @kind object @name `headers`, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19ccbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19ccc2.  v0.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` := v1 @kind object;
  #L19ccc6.  v0.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L19ccca.  return @kind void;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.Headers` v2 @kind object @name `headers`, `okhttp3.RequestBody` v3 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19ccdc.  if v3 != 0 then goto L19ccf0;
  #L19cce0.  v0:= new `java.lang.NullPointerException`;
  #L19cce4.  v1:= "body == null" @kind object;
  #L19cce8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ccee.  throw v0;
  #L19ccf0.  if v2 == 0 then goto L19cd14;
  #L19ccf4.  v0:= "Content-Type" @kind object;
  #L19ccf8.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19ccfe.  v0:= temp @kind object;
  #L19cd00.  if v0 == 0 then goto L19cd14;
  #L19cd04.  v0:= new `java.lang.IllegalArgumentException`;
  #L19cd08.  v1:= "Unexpected header: Content-Type" @kind object;
  #L19cd0c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cd12.  throw v0;
  #L19cd14.  if v2 == 0 then goto L19cd38;
  #L19cd18.  v0:= "Content-Length" @kind object;
  #L19cd1c.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19cd22.  v0:= temp @kind object;
  #L19cd24.  if v0 == 0 then goto L19cd38;
  #L19cd28.  v0:= new `java.lang.IllegalArgumentException`;
  #L19cd2c.  v1:= "Unexpected header: Content-Length" @kind object;
  #L19cd30.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cd36.  throw v0;
  #L19cd38.  v0:= new `okhttp3.MultipartBody$Part`;
  #L19cd3c.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind direct;
  #L19cd42.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.RequestBody` v1 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19cd54.  v0:= 0I;
  #L19cd56.  call temp:= `create`(v0, v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19cd5c.  v0:= temp @kind object;
  #L19cd5e.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19cd70.  v1:= 0I;
  #L19cd72.  call temp:= `create`(v1, v3) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L19cd78.  v0:= temp @kind object;
  #L19cd7a.  call temp:= `createFormData`(v2, v1, v0) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19cd80.  v0:= temp @kind object;
  #L19cd82.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v4 @kind object @name `name`, `java.lang.String` v5 @kind object @name `filename`, `okhttp3.RequestBody` v6 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19cd94.  if v4 != 0 then goto L19cda8;
  #L19cd98.  v1:= new `java.lang.NullPointerException`;
  #L19cd9c.  v2:= "name == null" @kind object;
  #L19cda0.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cda6.  throw v1;
  #L19cda8.  v0:= new `java.lang.StringBuilder`;
  #L19cdac.  v1:= "form-data; name=" @kind object;
  #L19cdb0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cdb6.  call temp:= `appendQuotedString`(v0, v4) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L19cdbc.  if v5 == 0 then goto L19cdd0;
  #L19cdc0.  v1:= "; filename=" @kind object;
  #L19cdc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cdca.  call temp:= `appendQuotedString`(v0, v5) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L19cdd0.  v1:= 2I;
  #L19cdd2.  v1:= new `java.lang.String`[v1];
  #L19cdd6.  v2:= 0I;
  #L19cdd8.  v3:= "Content-Disposition" @kind object;
  #L19cddc.  v1[v2]:= v3 @kind object;
  #L19cde0.  v2:= 1I;
  #L19cde2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19cde8.  v3:= temp @kind object;
  #L19cdea.  v1[v2]:= v3 @kind object;
  #L19cdee.  call temp:= `of`(v1) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L19cdf4.  v1:= temp @kind object;
  #L19cdf6.  call temp:= `create`(v1, v6) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19cdfc.  v1:= temp @kind object;
  #L19cdfe.  return v1 @kind object;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ce10.  v0:= v1.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19ce14.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ce28.  v0:= v1.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L19ce2c.  return v0 @kind object;
}

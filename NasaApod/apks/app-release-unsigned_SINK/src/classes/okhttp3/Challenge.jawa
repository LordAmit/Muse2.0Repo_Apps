record `okhttp3.Challenge` @kind class @AccessFlag PUBLIC_FINAL {
  `java.nio.charset.Charset` `okhttp3.Challenge.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Challenge.realm` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Challenge.scheme` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Challenge` v1 @kind this, `java.lang.String` v2 @kind object @name `scheme`, `java.lang.String` v3 @kind object @name `realm`) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L195edc.  v0:= `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` @kind object;
  #L195ee0.  call `<init>`(v1, v2, v3, v0) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V` @kind direct;
  #L195ee6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Challenge` v2 @kind this, `java.lang.String` v3 @kind object @name `scheme`, `java.lang.String` v4 @kind object @name `realm`, `java.nio.charset.Charset` v5 @kind object @name `charset`) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L195ef8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L195efe.  if v3 != 0 then goto L195f12;
  #L195f02.  v0:= new `java.lang.NullPointerException`;
  #L195f06.  v1:= "scheme == null" @kind object;
  #L195f0a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L195f10.  throw v0;
  #L195f12.  if v4 != 0 then goto L195f26;
  #L195f16.  v0:= new `java.lang.NullPointerException`;
  #L195f1a.  v1:= "realm == null" @kind object;
  #L195f1e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L195f24.  throw v0;
  #L195f26.  if v5 != 0 then goto L195f3a;
  #L195f2a.  v0:= new `java.lang.NullPointerException`;
  #L195f2e.  v1:= "charset == null" @kind object;
  #L195f32.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L195f38.  throw v0;
  #L195f3a.  v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L195f3e.  v2.`okhttp3.Challenge.realm` @type ^`java.lang.String` := v4 @kind object;
  #L195f42.  v2.`okhttp3.Challenge.charset` @type ^`java.nio.charset.Charset` := v5 @kind object;
  #L195f46.  return @kind void;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L195f58.  v0:= v1.`okhttp3.Challenge.charset` @type ^`java.nio.charset.Charset` @kind object;
  #L195f5c.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Challenge` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Challenge;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L195f70.  v0:= instanceof @variable v3 @type ^`okhttp3.Challenge` @kind boolean;
  #L195f74.  if v0 == 0 then goto L195fc8;
  #L195f78.  v0:= v3 @kind object;
  #L195f7a.  v0:= (`okhttp3.Challenge`) v0 @kind object;
  #L195f7e.  v0:= v0.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L195f82.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L195f86.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195f8c.  v0:= temp;
  #L195f8e.  if v0 == 0 then goto L195fc8;
  #L195f92.  v0:= v3 @kind object;
  #L195f94.  v0:= (`okhttp3.Challenge`) v0 @kind object;
  #L195f98.  v0:= v0.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L195f9c.  v1:= v2.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L195fa0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195fa6.  v0:= temp;
  #L195fa8.  if v0 == 0 then goto L195fc8;
  #L195fac.  v3:= (`okhttp3.Challenge`) v3 @kind object;
  #L195fb0.  v0:= v3.`okhttp3.Challenge.charset` @type ^`java.nio.charset.Charset` @kind object;
  #L195fb4.  v1:= v2.`okhttp3.Challenge.charset` @type ^`java.nio.charset.Charset` @kind object;
  #L195fb8.  call temp:= `equals`(v0, v1) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195fbe.  v0:= temp;
  #L195fc0.  if v0 == 0 then goto L195fc8;
  #L195fc4.  v0:= 1I;
  #L195fc6.  return v0;
  #L195fc8.  v0:= 0I;
  #L195fca.  goto L195fc6;
}
procedure `int` `hashCode`(`okhttp3.Challenge` v3 @kind this) @signature `Lokhttp3/Challenge;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L195fdc.  v0:= 29I;
  #L195fe0.  v1:= v3.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L195fe4.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L195fea.  v1:= temp;
  #L195fec.  v0:= v1 + 899;
  #L195ff0.  v1:= v0 * 31;
  #L195ff4.  v2:= v3.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L195ff8.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L195ffe.  v2:= temp;
  #L196000.  v0:= v1 + v2 @kind int;
  #L196004.  v1:= v0 * 31;
  #L196008.  v2:= v3.`okhttp3.Challenge.charset` @type ^`java.nio.charset.Charset` @kind object;
  #L19600c.  call temp:= `hashCode`(v2) @signature `Ljava/nio/charset/Charset;.hashCode:()I` @kind virtual;
  #L196012.  v2:= temp;
  #L196014.  v0:= v1 + v2 @kind int;
  #L196018.  return v0;
}
procedure `java.lang.String` `realm`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.realm:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19602c.  v0:= v1.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L196030.  return v0 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L196044.  v0:= v1.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L196048.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19605c.  v0:= new `java.lang.StringBuilder`;
  #L196060.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L196066.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L19606a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196070.  v0:= temp @kind object;
  #L196072.  v1:= " realm=\"" @kind object;
  #L196076.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19607c.  v0:= temp @kind object;
  #L19607e.  v1:= v2.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L196082.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196088.  v0:= temp @kind object;
  #L19608a.  v1:= "\" charset=\"" @kind object;
  #L19608e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196094.  v0:= temp @kind object;
  #L196096.  v1:= v2.`okhttp3.Challenge.charset` @type ^`java.nio.charset.Charset` @kind object;
  #L19609a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1960a0.  v0:= temp @kind object;
  #L1960a2.  v1:= "\"" @kind object;
  #L1960a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1960ac.  v0:= temp @kind object;
  #L1960ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1960b4.  v0:= temp @kind object;
  #L1960b6.  return v0 @kind object;
}
procedure `okhttp3.Challenge` `withCharset`(`okhttp3.Challenge` v3 @kind this, `java.nio.charset.Charset` v4 @kind object @name `charset`) @signature `Lokhttp3/Challenge;.withCharset:(Ljava/nio/charset/Charset;)Lokhttp3/Challenge;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1960c8.  v0:= new `okhttp3.Challenge`;
  #L1960cc.  v1:= v3.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L1960d0.  v2:= v3.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L1960d4.  call `<init>`(v0, v1, v2, v4) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V` @kind direct;
  #L1960da.  return v0 @kind object;
}

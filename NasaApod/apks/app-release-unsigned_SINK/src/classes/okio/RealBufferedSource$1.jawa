record `okio.RealBufferedSource$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.RealBufferedSource` `okio.RealBufferedSource$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSource$1` v0 @kind this, `okio.RealBufferedSource` v1 @kind object @name `this$0`) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1af14c.  v0.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` := v1 @kind object;
  #L1af150.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1af156.  return @kind void;
}
procedure `int` `available`(`okio.RealBufferedSource$1` v4 @kind this) @signature `Lokio/RealBufferedSource$1;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1af168.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af16c.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1af170.  if v0 == 0 then goto L1af184;
  #L1af174.  v0:= new `java.io.IOException`;
  #L1af178.  v1:= "closed" @kind object;
  #L1af17c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af182.  throw v0;
  #L1af184.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af188.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af18c.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1af190.  v2:= 2147483647L;
  #L1af196.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1af19c.  v0:= temp @kind wide;
  #L1af19e.  v0:= (`int`) v0 @kind l2i;
  #L1af1a0.  return v0;
}
procedure `void` `close`(`okio.RealBufferedSource$1` v1 @kind this) @signature `Lokio/RealBufferedSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af1b4.  v0:= v1.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af1b8.  call `close`(v0) @signature `Lokio/RealBufferedSource;.close:()V` @kind virtual;
  #L1af1be.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v6 @kind this) @signature `Lokio/RealBufferedSource$1;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1af1d0.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af1d4.  v2:= v2.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1af1d8.  if v2 == 0 then goto L1af1ec;
  #L1af1dc.  v2:= new `java.io.IOException`;
  #L1af1e0.  v3:= "closed" @kind object;
  #L1af1e4.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af1ea.  throw v2;
  #L1af1ec.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af1f0.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af1f4.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1af1f8.  v4:= 0L;
  #L1af1fc.  v2:= lcmp(v2, v4);
  #L1af200.  if v2 != 0 then goto L1af230;
  #L1af204.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af208.  v2:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1af20c.  v3:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af210.  v3:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af214.  v4:= 8192L;
  #L1af218.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1af21e.  v0:= temp @kind wide;
  #L1af220.  v2:= -1L;
  #L1af224.  v2:= lcmp(v0, v2);
  #L1af228.  if v2 != 0 then goto L1af230;
  #L1af22c.  v2:= -1I;
  #L1af22e.  return v2;
  #L1af230.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af234.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af238.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1af23e.  v2:= temp;
  #L1af240.  v2:= v2 ^& 255;
  #L1af244.  goto L1af22e;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v8 @kind this, `byte`[] v9 @kind object @name `data`, `int` v10 @name `offset`, `int` v11 @name `byteCount`) @signature `Lokio/RealBufferedSource$1;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1af258.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af25c.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1af260.  if v0 == 0 then goto L1af274;
  #L1af264.  v0:= new `java.io.IOException`;
  #L1af268.  v1:= "closed" @kind object;
  #L1af26c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af272.  throw v0;
  #L1af274.  v0:= length @variable v9;
  #L1af276.  v0:= (`long`) v0 @kind i2l;
  #L1af278.  v2:= (`long`) v10 @kind i2l;
  #L1af27a.  v4:= (`long`) v11 @kind i2l;
  #L1af27c.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1af282.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af286.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af28a.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1af28e.  v2:= 0L;
  #L1af292.  v0:= lcmp(v0, v2);
  #L1af296.  if v0 != 0 then goto L1af2c6;
  #L1af29a.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af29e.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1af2a2.  v1:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af2a6.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af2aa.  v2:= 8192L;
  #L1af2ae.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1af2b4.  v6:= temp @kind wide;
  #L1af2b6.  v0:= -1L;
  #L1af2ba.  v0:= lcmp(v6, v0);
  #L1af2be.  if v0 != 0 then goto L1af2c6;
  #L1af2c2.  v0:= -1I;
  #L1af2c4.  return v0;
  #L1af2c6.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af2ca.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af2ce.  call temp:= `read`(v0, v9, v10, v11) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L1af2d4.  v0:= temp;
  #L1af2d6.  goto L1af2c4;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource$1` v2 @kind this) @signature `Lokio/RealBufferedSource$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1af2e8.  v0:= new `java.lang.StringBuilder`;
  #L1af2ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af2f2.  v1:= v2.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af2f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af2fc.  v0:= temp @kind object;
  #L1af2fe.  v1:= ".inputStream()" @kind object;
  #L1af302.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af308.  v0:= temp @kind object;
  #L1af30a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af310.  v0:= temp @kind object;
  #L1af312.  return v0 @kind object;
}

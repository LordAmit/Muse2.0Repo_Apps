record `okio.RealBufferedSink$1` @kind class @AccessFlag  extends `java.io.OutputStream` @kind class {
  `okio.RealBufferedSink` `okio.RealBufferedSink$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSink$1` v0 @kind this, `okio.RealBufferedSink` v1 @kind object @name `this$0`) @signature `Lokio/RealBufferedSink$1;.<init>:(Lokio/RealBufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1af020.  v0.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` := v1 @kind object;
  #L1af024.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L1af02a.  return @kind void;
}
procedure `void` `close`(`okio.RealBufferedSink$1` v1 @kind this) @signature `Lokio/RealBufferedSink$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af03c.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af040.  call `close`(v0) @signature `Lokio/RealBufferedSink;.close:()V` @kind virtual;
  #L1af046.  return @kind void;
}
procedure `void` `flush`(`okio.RealBufferedSink$1` v1 @kind this) @signature `Lokio/RealBufferedSink$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af058.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af05c.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1af060.  if v0 != 0 then goto L1af06e;
  #L1af064.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af068.  call `flush`(v0) @signature `Lokio/RealBufferedSink;.flush:()V` @kind virtual;
  #L1af06e.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSink$1` v2 @kind this) @signature `Lokio/RealBufferedSink$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1af080.  v0:= new `java.lang.StringBuilder`;
  #L1af084.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af08a.  v1:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af08e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af094.  v0:= temp @kind object;
  #L1af096.  v1:= ".outputStream()" @kind object;
  #L1af09a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af0a0.  v0:= temp @kind object;
  #L1af0a2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af0a8.  v0:= temp @kind object;
  #L1af0aa.  return v0 @kind object;
}
procedure `void` `write`(`okio.RealBufferedSink$1` v2 @kind this, `int` v3 @name `b`) @signature `Lokio/RealBufferedSink$1;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1af0bc.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af0c0.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1af0c4.  if v0 == 0 then goto L1af0d8;
  #L1af0c8.  v0:= new `java.io.IOException`;
  #L1af0cc.  v1:= "closed" @kind object;
  #L1af0d0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af0d6.  throw v0;
  #L1af0d8.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af0dc.  v0:= v0.`okio.RealBufferedSink.buffer` @type ^`okio.Buffer` @kind object;
  #L1af0e0.  v1:= (`byte`) v3 @kind i2b;
  #L1af0e2.  call temp:= `writeByte`(v0, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1af0e8.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af0ec.  call temp:= `emitCompleteSegments`(v0) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1af0f2.  return @kind void;
}
procedure `void` `write`(`okio.RealBufferedSink$1` v2 @kind this, `byte`[] v3 @kind object @name `data`, `int` v4 @name `offset`, `int` v5 @name `byteCount`) @signature `Lokio/RealBufferedSink$1;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1af104.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af108.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1af10c.  if v0 == 0 then goto L1af120;
  #L1af110.  v0:= new `java.io.IOException`;
  #L1af114.  v1:= "closed" @kind object;
  #L1af118.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af11e.  throw v0;
  #L1af120.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af124.  v0:= v0.`okio.RealBufferedSink.buffer` @type ^`okio.Buffer` @kind object;
  #L1af128.  call temp:= `write`(v0, v3, v4, v5) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L1af12e.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L1af132.  call temp:= `emitCompleteSegments`(v0) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1af138.  return @kind void;
}

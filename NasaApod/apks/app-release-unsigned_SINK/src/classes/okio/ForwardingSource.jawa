record `okio.ForwardingSource` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.Source` @kind interface {
  `okio.Source` `okio.ForwardingSource.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.ForwardingSource` v2 @kind this, `okio.Source` v3 @kind object @name `delegate`) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L21f244.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21f24a.  if v3 != 0 then goto L21f25e;
  #L21f24e.  v0:= new `java.lang.IllegalArgumentException`;
  #L21f252.  v1:= "delegate == null" @kind object;
  #L21f256.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21f25c.  throw v0;
  #L21f25e.  v2.`okio.ForwardingSource.delegate` @type ^`okio.Source` := v3 @kind object;
  #L21f262.  return @kind void;
}
procedure `void` `close`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21f274.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f278.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L21f27e.  return @kind void;
}
procedure `okio.Source` `delegate`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.delegate:()Lokio/Source;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21f290.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f294.  return v0 @kind object;
}
procedure `long` `read`(`okio.ForwardingSource` v2 @kind this, `okio.Buffer` v3 @kind object @name `sink`, `long` v4 @name `byteCount`) @signature `Lokio/ForwardingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f2a8.  v0:= v2.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f2ac.  call temp:= `read`(v0, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L21f2b2.  v0:= temp @kind wide;
  #L21f2b4.  return v0 @kind wide;
}
procedure `okio.Timeout` `timeout`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21f2c8.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f2cc.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L21f2d2.  v0:= temp @kind object;
  #L21f2d4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ForwardingSource` v2 @kind this) @signature `Lokio/ForwardingSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f2e8.  v0:= new `java.lang.StringBuilder`;
  #L21f2ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21f2f2.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21f2f8.  v1:= temp @kind object;
  #L21f2fa.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L21f300.  v1:= temp @kind object;
  #L21f302.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f308.  v0:= temp @kind object;
  #L21f30a.  v1:= "(" @kind object;
  #L21f30e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f314.  v0:= temp @kind object;
  #L21f316.  v1:= v2.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f31a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L21f320.  v1:= temp @kind object;
  #L21f322.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f328.  v0:= temp @kind object;
  #L21f32a.  v1:= ")" @kind object;
  #L21f32e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f334.  v0:= temp @kind object;
  #L21f336.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21f33c.  v0:= temp @kind object;
  #L21f33e.  return v0 @kind object;
}

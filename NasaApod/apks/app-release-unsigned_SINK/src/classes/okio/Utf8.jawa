record `okio.Utf8` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.Utf8` v0 @kind this) @signature `Lokio/Utf8;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1afa74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1afa7a.  return @kind void;
}
procedure `long` `size`(`java.lang.String` v2 @kind object @name `string`) @signature `Lokio/Utf8;.size:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1afa8c.  v0:= 0I;
  #L1afa8e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1afa94.  v1:= temp;
  #L1afa96.  call temp:= `size`(v2, v0, v1) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @kind static;
  #L1afa9c.  v0:= temp @kind wide;
  #L1afa9e.  return v0 @kind wide;
}
procedure `long` `size`(`java.lang.String` v12 @kind object @name `string`, `int` v13 @name `beginIndex`, `int` v14 @name `endIndex`) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1afab0.  v10:= 1L;
  #L1afab4.  v8:= 57343I;
  #L1afaba.  if v12 != 0 then goto L1aface;
  #L1afabe.  v3:= new `java.lang.IllegalArgumentException`;
  #L1afac2.  v6:= "string == null" @kind object;
  #L1afac6.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afacc.  throw v3;
  #L1aface.  if v13 >= 0 then goto L1afb04;
  #L1afad2.  v3:= new `java.lang.IllegalArgumentException`;
  #L1afad6.  v6:= new `java.lang.StringBuilder`;
  #L1afada.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1afae0.  v7:= "beginIndex < 0: " @kind object;
  #L1afae4.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afaea.  v6:= temp @kind object;
  #L1afaec.  call temp:= `append`(v6, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afaf2.  v6:= temp @kind object;
  #L1afaf4.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afafa.  v6:= temp @kind object;
  #L1afafc.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afb02.  throw v3;
  #L1afb04.  if v14 >= v13 then goto L1afb4e;
  #L1afb08.  v3:= new `java.lang.IllegalArgumentException`;
  #L1afb0c.  v6:= new `java.lang.StringBuilder`;
  #L1afb10.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1afb16.  v7:= "endIndex < beginIndex: " @kind object;
  #L1afb1a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb20.  v6:= temp @kind object;
  #L1afb22.  call temp:= `append`(v6, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb28.  v6:= temp @kind object;
  #L1afb2a.  v7:= " < " @kind object;
  #L1afb2e.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb34.  v6:= temp @kind object;
  #L1afb36.  call temp:= `append`(v6, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb3c.  v6:= temp @kind object;
  #L1afb3e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afb44.  v6:= temp @kind object;
  #L1afb46.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afb4c.  throw v3;
  #L1afb4e.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1afb54.  v3:= temp;
  #L1afb56.  if v14 <= v3 then goto L1afba8;
  #L1afb5a.  v3:= new `java.lang.IllegalArgumentException`;
  #L1afb5e.  v6:= new `java.lang.StringBuilder`;
  #L1afb62.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1afb68.  v7:= "endIndex > string.length: " @kind object;
  #L1afb6c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb72.  v6:= temp @kind object;
  #L1afb74.  call temp:= `append`(v6, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb7a.  v6:= temp @kind object;
  #L1afb7c.  v7:= " > " @kind object;
  #L1afb80.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb86.  v6:= temp @kind object;
  #L1afb88.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1afb8e.  v7:= temp;
  #L1afb90.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afb96.  v6:= temp @kind object;
  #L1afb98.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afb9e.  v6:= temp @kind object;
  #L1afba0.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afba6.  throw v3;
  #L1afba8.  v4:= 0L;
  #L1afbac.  v1:= v13;
  #L1afbae.  if v1 >= v14 then goto L1afc3c;
  #L1afbb2.  call temp:= `charAt`(v12, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1afbb8.  v0:= temp;
  #L1afbba.  v3:= 128I;
  #L1afbbe.  if v0 >= v3 then goto L1afbca;
  #L1afbc2.  v4:= v4 + v10 @kind long;
  #L1afbc4.  v1:= v1 + 1;
  #L1afbc8.  goto L1afbae;
  #L1afbca.  v3:= 2048I;
  #L1afbce.  if v0 >= v3 then goto L1afbde;
  #L1afbd2.  v6:= 2L;
  #L1afbd6.  v4:= v4 + v6 @kind long;
  #L1afbd8.  v1:= v1 + 1;
  #L1afbdc.  goto L1afbae;
  #L1afbde.  v3:= 55296I;
  #L1afbe4.  if v0 < v3 then goto L1afbec;
  #L1afbe8.  if v0 <= v8 then goto L1afbf8;
  #L1afbec.  v6:= 3L;
  #L1afbf0.  v4:= v4 + v6 @kind long;
  #L1afbf2.  v1:= v1 + 1;
  #L1afbf6.  goto L1afbae;
  #L1afbf8.  v3:= v1 + 1;
  #L1afbfc.  if v3 >= v14 then goto L1afc2c;
  #L1afc00.  v3:= v1 + 1;
  #L1afc04.  call temp:= `charAt`(v12, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1afc0a.  v2:= temp;
  #L1afc0c.  v3:= 56319I;
  #L1afc12.  if v0 > v3 then goto L1afc24;
  #L1afc16.  v3:= 56320I;
  #L1afc1c.  if v2 < v3 then goto L1afc24;
  #L1afc20.  if v2 <= v8 then goto L1afc30;
  #L1afc24.  v4:= v4 + v10 @kind long;
  #L1afc26.  v1:= v1 + 1;
  #L1afc2a.  goto L1afbae;
  #L1afc2c.  v2:= 0I;
  #L1afc2e.  goto L1afc0c;
  #L1afc30.  v6:= 4L;
  #L1afc34.  v4:= v4 + v6 @kind long;
  #L1afc36.  v1:= v1 + 2;
  #L1afc3a.  goto L1afbae;
  #L1afc3c.  return v4 @kind wide;
}

record `okio.Pipe$PipeSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `okio.Pipe` `okio.Pipe$PipeSink.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.Timeout` `okio.Pipe$PipeSink.timeout` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okio.Pipe$PipeSink` v1 @kind this, `okio.Pipe` v2 @kind object @name `this$0`) @signature `Lokio/Pipe$PipeSink;.<init>:(Lokio/Pipe;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L220274.  v1.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` := v2 @kind object;
  #L220278.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22027e.  v0:= new `okio.Timeout`;
  #L220282.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L220288.  v1.`okio.Pipe$PipeSink.timeout` @type ^`okio.Timeout` := v0 @kind object;
  #L22028c.  return @kind void;
}
procedure `void` `close`(`okio.Pipe$PipeSink` v6 @kind this) @signature `Lokio/Pipe$PipeSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2202a0.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2202a4.  v1:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L2202a8.  @monitorenter v1
  #Try_start0.  
  #L2202aa.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2202ae.  v0:= v0.`okio.Pipe.sinkClosed` @type ^`boolean` @kind boolean;
  #L2202b2.  if v0 == 0 then goto L2202ba;
  #L2202b6.  @monitorexit v1
  #L2202b8.  return @kind void;
  #L2202ba.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2202be.  v0:= v0.`okio.Pipe.sourceClosed` @type ^`boolean` @kind boolean;
  #L2202c2.  if v0 == 0 then goto L2202f8;
  #L2202c6.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2202ca.  v0:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L2202ce.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2202d4.  v2:= temp @kind wide;
  #L2202d6.  v4:= 0L;
  #L2202da.  v0:= lcmp(v2, v4);
  #L2202de.  if v0 <= 0 then goto L2202f8;
  #L2202e2.  v0:= new `java.io.IOException`;
  #L2202e6.  v2:= "source is closed" @kind object;
  #L2202ea.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2202f0.  throw v0;
  #L2202f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2202f4.  @monitorexit v1
  #Try_end0.  
  #L2202f6.  throw v0;
  #Try_start1.  
  #L2202f8.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2202fc.  v2:= 1I;
  #L2202fe.  v0.`okio.Pipe.sinkClosed` @type ^`boolean` := v2 @kind boolean;
  #L220302.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220306.  v0:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L22030a.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L220310.  @monitorexit v1
  #Try_end1.  
  #L220312.  goto L2202b8;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L2202f2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L2202f2;
}
procedure `void` `flush`(`okio.Pipe$PipeSink` v6 @kind this) @signature `Lokio/Pipe$PipeSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L220338.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L22033c.  v1:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220340.  @monitorenter v1
  #Try_start0.  
  #L220342.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220346.  v0:= v0.`okio.Pipe.sinkClosed` @type ^`boolean` @kind boolean;
  #L22034a.  if v0 == 0 then goto L220364;
  #L22034e.  v0:= new `java.lang.IllegalStateException`;
  #L220352.  v2:= "closed" @kind object;
  #L220356.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22035c.  throw v0;
  #L22035e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L220360.  @monitorexit v1
  #Try_end0.  
  #L220362.  throw v0;
  #Try_start1.  
  #L220364.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220368.  v0:= v0.`okio.Pipe.sourceClosed` @type ^`boolean` @kind boolean;
  #L22036c.  if v0 == 0 then goto L22039c;
  #L220370.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220374.  v0:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220378.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L22037e.  v2:= temp @kind wide;
  #L220380.  v4:= 0L;
  #L220384.  v0:= lcmp(v2, v4);
  #L220388.  if v0 <= 0 then goto L22039c;
  #L22038c.  v0:= new `java.io.IOException`;
  #L220390.  v2:= "source is closed" @kind object;
  #L220394.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22039a.  throw v0;
  #L22039c.  @monitorexit v1
  #Try_end1.  
  #L22039e.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L22035e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L22035e;
}
procedure `okio.Timeout` `timeout`(`okio.Pipe$PipeSink` v1 @kind this) @signature `Lokio/Pipe$PipeSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2203c4.  v0:= v1.`okio.Pipe$PipeSink.timeout` @type ^`okio.Timeout` @kind object;
  #L2203c8.  return v0 @kind object;
}
procedure `void` `write`(`okio.Pipe$PipeSink` v12 @kind this, `okio.Buffer` v13 @kind object @name `source`, `long` v14 @name `byteCount`) @signature `Lokio/Pipe$PipeSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2203dc.  v10:= 0L;
  #L2203e0.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2203e4.  v5:= v4.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L2203e8.  @monitorenter v5
  #Try_start0.  
  #L2203ea.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2203ee.  v4:= v4.`okio.Pipe.sinkClosed` @type ^`boolean` @kind boolean;
  #L2203f2.  if v4 == 0 then goto L220442;
  #L2203f6.  v4:= new `java.lang.IllegalStateException`;
  #L2203fa.  v6:= "closed" @kind object;
  #L2203fe.  call `<init>`(v4, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220404.  throw v4;
  #L220406.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L220408.  @monitorexit v5
  #Try_end0.  
  #L22040a.  throw v4;
  #Try_start1.  
  #L22040c.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220410.  v6:= v4.`okio.Pipe.maxBufferSize` @type ^`long` @kind wide;
  #L220414.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220418.  v4:= v4.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L22041c.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L220422.  v8:= temp @kind wide;
  #L220424.  v0:= v6 - v8 @kind long;
  #L220428.  v4:= lcmp(v0, v10);
  #L22042c.  if v4 != 0 then goto L220466;
  #L220430.  v4:= v12.`okio.Pipe$PipeSink.timeout` @type ^`okio.Timeout` @kind object;
  #L220434.  v6:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220438.  v6:= v6.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L22043c.  call `waitUntilNotified`(v4, v6) @signature `Lokio/Timeout;.waitUntilNotified:(Ljava/lang/Object;)V` @kind virtual;
  #L220442.  v4:= lcmp(v14, v10);
  #L220446.  if v4 <= 0 then goto L22048e;
  #L22044a.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L22044e.  v4:= v4.`okio.Pipe.sourceClosed` @type ^`boolean` @kind boolean;
  #L220452.  if v4 == 0 then goto L22040c;
  #L220456.  v4:= new `java.io.IOException`;
  #L22045a.  v6:= "source is closed" @kind object;
  #L22045e.  call `<init>`(v4, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220464.  throw v4;
  #L220466.  call temp:= `min`(v0, v14) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L22046c.  v2:= temp @kind wide;
  #L22046e.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220472.  v4:= v4.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220476.  call `write`(v4, v13, v2) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L22047c.  v14:= v14 - v2 @kind long;
  #L22047e.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220482.  v4:= v4.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220486.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L22048c.  goto L220442;
  #L22048e.  @monitorexit v5
  #Try_end1.  
  #L220490.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L220406;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L220406;
}

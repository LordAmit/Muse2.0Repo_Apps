record `okio.Base64` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@okio.Base64.MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.Base64.URL_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ace30.  v1:= 64I;
  #L1ace34.  v0:= new `byte`[v1];
  #L1ace38.  goto L1ace54;
  #L1ace3e.  `@@okio.Base64.MAP` @type ^`byte`[] := v0 @kind object;
  #L1ace42.  v0:= new `byte`[v1];
  #L1ace46.  goto L1ace9c;
  #L1ace4c.  `@@okio.Base64.URL_MAP` @type ^`byte`[] := v0 @kind object;
  #L1ace50.  return @kind void;
  #L1ace52.  
  #L1ace54.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L1ace9b.  goto L1ace3e;
  #L1ace9c.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L1acee3.  goto L1ace4c;
}
procedure `void` `<init>`(`okio.Base64` v0 @kind this) @signature `Lokio/Base64;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1acef4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1acefa.  return @kind void;
}
procedure `byte`[] `decode`(`java.lang.String` v18 @kind object @name `in`) @signature `Lokio/Base64;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L1acf0c.  call temp:= `length`(v18) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1acf12.  v6:= temp;
  #L1acf14.  if v6 <= 0 then goto L1acf50;
  #L1acf18.  v13:= v6 + -1;
  #L1acf1c.  v0:= v18 @kind object;
  #L1acf20.  call temp:= `charAt`(v0, v13) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1acf26.  v3:= temp;
  #L1acf28.  v13:= 61I;
  #L1acf2c.  if v3 == v13 then goto L1acfda;
  #L1acf30.  v13:= 10I;
  #L1acf34.  if v3 == v13 then goto L1acfda;
  #L1acf38.  v13:= 13I;
  #L1acf3c.  if v3 == v13 then goto L1acfda;
  #L1acf40.  v13:= 32I;
  #L1acf44.  if v3 == v13 then goto L1acfda;
  #L1acf48.  v13:= 9I;
  #L1acf4c.  if v3 == v13 then goto L1acfda;
  #L1acf50.  v14:= (`long`) v6 @kind i2l;
  #L1acf52.  v16:= 6L;
  #L1acf56.  v14:= v14 * v16 @kind long;
  #L1acf5a.  v16:= 8L;
  #L1acf5e.  v14:= v14 / v16 @kind long;
  #L1acf62.  v13:= (`int`) v14 @kind l2i;
  #L1acf64.  v7:= new `byte`[v13];
  #L1acf68.  v8:= 0I;
  #L1acf6a.  v4:= 0I;
  #L1acf6c.  v12:= 0I;
  #L1acf6e.  v10:= 0I;
  #L1acf70.  v9:= v8;
  #L1acf72.  if v10 >= v6 then goto L1ad062;
  #L1acf76.  v0:= v18 @kind object;
  #L1acf7a.  call temp:= `charAt`(v0, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1acf80.  v3:= temp;
  #L1acf82.  v13:= 65I;
  #L1acf86.  if v3 < v13 then goto L1acfe0;
  #L1acf8a.  v13:= 90I;
  #L1acf8e.  if v3 > v13 then goto L1acfe0;
  #L1acf92.  v2:= v3 + -65;
  #L1acf96.  v13:= v12 ^< 6;
  #L1acf9a.  v14:= (`byte`) v2 @kind i2b;
  #L1acf9c.  v12:= v13 ^| v14 @kind int;
  #L1acfa0.  v4:= v4 + 1;
  #L1acfa4.  v13:= v4 %% 4;
  #L1acfa8.  if v13 != 0 then goto L1ad0cc;
  #L1acfac.  v8:= v9 + 1;
  #L1acfb0.  v13:= v12 ^> 16;
  #L1acfb4.  v13:= (`byte`) v13 @kind i2b;
  #L1acfb6.  v7[v9]:= v13 @kind byte;
  #L1acfba.  v9:= v8 + 1;
  #L1acfbe.  v13:= v12 ^> 8;
  #L1acfc2.  v13:= (`byte`) v13 @kind i2b;
  #L1acfc4.  v7[v8]:= v13 @kind byte;
  #L1acfc8.  v8:= v9 + 1;
  #L1acfcc.  v13:= (`byte`) v12 @kind i2b;
  #L1acfce.  v7[v9]:= v13 @kind byte;
  #L1acfd2.  v10:= v10 + 1;
  #L1acfd6.  v9:= v8;
  #L1acfd8.  goto L1acf72;
  #L1acfda.  v6:= v6 + -1;
  #L1acfde.  goto L1acf14;
  #L1acfe0.  v13:= 97I;
  #L1acfe4.  if v3 < v13 then goto L1acff6;
  #L1acfe8.  v13:= 122I;
  #L1acfec.  if v3 > v13 then goto L1acff6;
  #L1acff0.  v2:= v3 + -71;
  #L1acff4.  goto L1acf96;
  #L1acff6.  v13:= 48I;
  #L1acffa.  if v3 < v13 then goto L1ad00c;
  #L1acffe.  v13:= 57I;
  #L1ad002.  if v3 > v13 then goto L1ad00c;
  #L1ad006.  v2:= v3 + 4;
  #L1ad00a.  goto L1acf96;
  #L1ad00c.  v13:= 43I;
  #L1ad010.  if v3 == v13 then goto L1ad01c;
  #L1ad014.  v13:= 45I;
  #L1ad018.  if v3 != v13 then goto L1ad022;
  #L1ad01c.  v2:= 62I;
  #L1ad020.  goto L1acf96;
  #L1ad022.  v13:= 47I;
  #L1ad026.  if v3 == v13 then goto L1ad032;
  #L1ad02a.  v13:= 95I;
  #L1ad02e.  if v3 != v13 then goto L1ad038;
  #L1ad032.  v2:= 63I;
  #L1ad036.  goto L1acf96;
  #L1ad038.  v13:= 10I;
  #L1ad03c.  if v3 == v13 then goto L1ad0cc;
  #L1ad040.  v13:= 13I;
  #L1ad044.  if v3 == v13 then goto L1ad0cc;
  #L1ad048.  v13:= 32I;
  #L1ad04c.  if v3 == v13 then goto L1ad0cc;
  #L1ad050.  v13:= 9I;
  #L1ad054.  if v3 != v13 then goto L1ad05c;
  #L1ad058.  v8:= v9;
  #L1ad05a.  goto L1acfd2;
  #L1ad05c.  v7:= 0I;
  #L1ad05e.  v8:= v9;
  #L1ad060.  return v7 @kind object;
  #L1ad062.  v5:= v4 %% 4;
  #L1ad066.  v13:= 1I;
  #L1ad068.  if v5 != v13 then goto L1ad072;
  #L1ad06c.  v7:= 0I;
  #L1ad06e.  v8:= v9;
  #L1ad070.  goto L1ad060;
  #L1ad072.  v13:= 2I;
  #L1ad074.  if v5 != v13 then goto L1ad0a2;
  #L1ad078.  v12:= v12 ^< 12;
  #L1ad07c.  v8:= v9 + 1;
  #L1ad080.  v13:= v12 ^> 16;
  #L1ad084.  v13:= (`byte`) v13 @kind i2b;
  #L1ad086.  v7[v9]:= v13 @kind byte;
  #L1ad08a.  v13:= length @variable v7;
  #L1ad08c.  if v8 == v13 then goto L1ad060;
  #L1ad090.  v11:= new `byte`[v8];
  #L1ad094.  v13:= 0I;
  #L1ad096.  v14:= 0I;
  #L1ad098.  call `arraycopy`(v7, v13, v11, v14, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1ad09e.  v7:= v11 @kind object;
  #L1ad0a0.  goto L1ad060;
  #L1ad0a2.  v13:= 3I;
  #L1ad0a4.  if v5 != v13 then goto L1ad0c8;
  #L1ad0a8.  v12:= v12 ^< 6;
  #L1ad0ac.  v8:= v9 + 1;
  #L1ad0b0.  v13:= v12 ^> 16;
  #L1ad0b4.  v13:= (`byte`) v13 @kind i2b;
  #L1ad0b6.  v7[v9]:= v13 @kind byte;
  #L1ad0ba.  v9:= v8 + 1;
  #L1ad0be.  v13:= v12 ^> 8;
  #L1ad0c2.  v13:= (`byte`) v13 @kind i2b;
  #L1ad0c4.  v7[v8]:= v13 @kind byte;
  #L1ad0c8.  v8:= v9;
  #L1ad0ca.  goto L1ad08a;
  #L1ad0cc.  v8:= v9;
  #L1ad0ce.  goto L1acfd2;
}
procedure `java.lang.String` `encode`(`byte`[] v1 @kind object @name `in`) @signature `Lokio/Base64;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ad0e0.  v0:= `@@okio.Base64.MAP` @type ^`byte`[] @kind object;
  #L1ad0e4.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L1ad0ea.  v0:= temp @kind object;
  #L1ad0ec.  return v0 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v10 @kind object @name `in`, `byte`[] v11 @kind object @name `map`) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ad100.  v9:= 61I;
  #L1ad104.  v7:= length @variable v10;
  #L1ad106.  v7:= v7 + 2;
  #L1ad10a.  v7:= v7 / 3;
  #L1ad10e.  v5:= v7 * 4;
  #L1ad112.  v6:= new `byte`[v5];
  #L1ad116.  v3:= 0I;
  #L1ad118.  v7:= length @variable v10;
  #L1ad11a.  v8:= length @variable v10;
  #L1ad11c.  v8:= v8 %% 3;
  #L1ad120.  v1:= v7 - v8 @kind int;
  #L1ad124.  v2:= 0I;
  #L1ad126.  v4:= v3;
  #L1ad128.  if v2 >= v1 then goto L1ad1ba;
  #L1ad12c.  v3:= v4 + 1;
  #L1ad130.  v7:= v10[v2] @kind byte;
  #L1ad134.  v7:= v7 ^& 255;
  #L1ad138.  v7:= v7 ^> 2;
  #L1ad13c.  v7:= v11[v7] @kind byte;
  #L1ad140.  v6[v4]:= v7 @kind byte;
  #L1ad144.  v4:= v3 + 1;
  #L1ad148.  v7:= v10[v2] @kind byte;
  #L1ad14c.  v7:= v7 ^& 3;
  #L1ad150.  v7:= v7 ^< 4;
  #L1ad154.  v8:= v2 + 1;
  #L1ad158.  v8:= v10[v8] @kind byte;
  #L1ad15c.  v8:= v8 ^& 255;
  #L1ad160.  v8:= v8 ^> 4;
  #L1ad164.  v7:= v7 ^| v8 @kind int;
  #L1ad166.  v7:= v11[v7] @kind byte;
  #L1ad16a.  v6[v3]:= v7 @kind byte;
  #L1ad16e.  v3:= v4 + 1;
  #L1ad172.  v7:= v2 + 1;
  #L1ad176.  v7:= v10[v7] @kind byte;
  #L1ad17a.  v7:= v7 ^& 15;
  #L1ad17e.  v7:= v7 ^< 2;
  #L1ad182.  v8:= v2 + 2;
  #L1ad186.  v8:= v10[v8] @kind byte;
  #L1ad18a.  v8:= v8 ^& 255;
  #L1ad18e.  v8:= v8 ^> 6;
  #L1ad192.  v7:= v7 ^| v8 @kind int;
  #L1ad194.  v7:= v11[v7] @kind byte;
  #L1ad198.  v6[v4]:= v7 @kind byte;
  #L1ad19c.  v4:= v3 + 1;
  #L1ad1a0.  v7:= v2 + 2;
  #L1ad1a4.  v7:= v10[v7] @kind byte;
  #L1ad1a8.  v7:= v7 ^& 63;
  #L1ad1ac.  v7:= v11[v7] @kind byte;
  #L1ad1b0.  v6[v3]:= v7 @kind byte;
  #L1ad1b4.  v2:= v2 + 3;
  #L1ad1b8.  goto L1ad128;
  #L1ad1ba.  v7:= length @variable v10;
  #L1ad1bc.  v7:= v7 %% 3;
  #L1ad1c0.  goto L1ad294;
  #L1ad1c6.  v3:= v4;
  #Try_start0.  
  #L1ad1c8.  v7:= new `java.lang.String`;
  #L1ad1cc.  v8:= "US-ASCII" @kind object;
  #L1ad1d0.  call `<init>`(v7, v6, v8) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L1ad1d6.  return v7 @kind object;
  #L1ad1d8.  v3:= v4 + 1;
  #L1ad1dc.  v7:= v10[v1] @kind byte;
  #L1ad1e0.  v7:= v7 ^& 255;
  #L1ad1e4.  v7:= v7 ^> 2;
  #L1ad1e8.  v7:= v11[v7] @kind byte;
  #L1ad1ec.  v6[v4]:= v7 @kind byte;
  #L1ad1f0.  v4:= v3 + 1;
  #L1ad1f4.  v7:= v10[v1] @kind byte;
  #L1ad1f8.  v7:= v7 ^& 3;
  #L1ad1fc.  v7:= v7 ^< 4;
  #L1ad200.  v7:= v11[v7] @kind byte;
  #L1ad204.  v6[v3]:= v7 @kind byte;
  #L1ad208.  v3:= v4 + 1;
  #L1ad20c.  v6[v4]:= v9 @kind byte;
  #L1ad210.  v4:= v3 + 1;
  #L1ad214.  v6[v3]:= v9 @kind byte;
  #L1ad218.  v3:= v4;
  #L1ad21a.  goto L1ad1c8;
  #L1ad21c.  v3:= v4 + 1;
  #L1ad220.  v7:= v10[v1] @kind byte;
  #L1ad224.  v7:= v7 ^& 255;
  #L1ad228.  v7:= v7 ^> 2;
  #L1ad22c.  v7:= v11[v7] @kind byte;
  #L1ad230.  v6[v4]:= v7 @kind byte;
  #L1ad234.  v4:= v3 + 1;
  #L1ad238.  v7:= v10[v1] @kind byte;
  #L1ad23c.  v7:= v7 ^& 3;
  #L1ad240.  v7:= v7 ^< 4;
  #L1ad244.  v8:= v1 + 1;
  #L1ad248.  v8:= v10[v8] @kind byte;
  #L1ad24c.  v8:= v8 ^& 255;
  #L1ad250.  v8:= v8 ^> 4;
  #L1ad254.  v7:= v7 ^| v8 @kind int;
  #L1ad256.  v7:= v11[v7] @kind byte;
  #L1ad25a.  v6[v3]:= v7 @kind byte;
  #L1ad25e.  v3:= v4 + 1;
  #L1ad262.  v7:= v1 + 1;
  #L1ad266.  v7:= v10[v7] @kind byte;
  #L1ad26a.  v7:= v7 ^& 15;
  #L1ad26e.  v7:= v7 ^< 2;
  #L1ad272.  v7:= v11[v7] @kind byte;
  #L1ad276.  v6[v4]:= v7 @kind byte;
  #L1ad27a.  v4:= v3 + 1;
  #L1ad27e.  v6[v3]:= v9 @kind byte;
  #L1ad282.  goto L1ad1c6;
  #L1ad284.  v0:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L1ad286.  v7:= new `java.lang.AssertionError`;
  #L1ad28a.  call `<init>`(v7, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1ad290.  throw v7;
  #L1ad292.  
  #L1ad294.  switch v7
                  | 1 => goto L1ad1d8
                  | 2 => goto L1ad21c
                  | else => goto L1ad1c6;
  catch `java.io.UnsupportedEncodingException` @[Try_start0..Try_end0] goto L1ad284;
}
procedure `java.lang.String` `encodeUrl`(`byte`[] v1 @kind object @name `in`) @signature `Lokio/Base64;.encodeUrl:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ad2c4.  v0:= `@@okio.Base64.URL_MAP` @type ^`byte`[] @kind object;
  #L1ad2c8.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L1ad2ce.  v0:= temp @kind object;
  #L1ad2d0.  return v0 @kind object;
}

record `retrofit2.RequestBuilder` @kind class @AccessFlag FINAL {
  `okhttp3.HttpUrl` `retrofit2.RequestBuilder.baseUrl` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RequestBody` `retrofit2.RequestBuilder.body` @AccessFlag PRIVATE;
  `okhttp3.MediaType` `retrofit2.RequestBuilder.contentType` @AccessFlag PRIVATE;
  `okhttp3.FormBody$Builder` `retrofit2.RequestBuilder.formBuilder` @AccessFlag PRIVATE;
  `boolean` `retrofit2.RequestBuilder.hasBody` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.RequestBuilder.method` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MultipartBody$Builder` `retrofit2.RequestBuilder.multipartBuilder` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit2.RequestBuilder.relativeUrl` @AccessFlag PRIVATE;
  `okhttp3.Request$Builder` `retrofit2.RequestBuilder.requestBuilder` @AccessFlag PRIVATE_FINAL;
  `okhttp3.HttpUrl$Builder` `retrofit2.RequestBuilder.urlBuilder` @AccessFlag PRIVATE;
}
global `char`[] `@@retrofit2.RequestBuilder.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@retrofit2.RequestBuilder.PATH_SEGMENT_ALWAYS_ENCODE_SET` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/RequestBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b0188.  v0:= 16I;
  #L1b018c.  v0:= new `char`[v0];
  #L1b0190.  goto L1b019c;
  #L1b0196.  `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L1b019a.  return @kind void;
  #L1b019c.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L1b01c3.  goto L1b0196;
}
procedure `void` `<init>`(`retrofit2.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object @name `method`, `okhttp3.HttpUrl` v4 @kind object @name `baseUrl`, `java.lang.String` v5 @kind object @name `relativeUrl`, `okhttp3.Headers` v6 @kind object @name `headers`, `okhttp3.MediaType` v7 @kind object @name `contentType`, `boolean` v8 @name `hasBody`, `boolean` v9 @name `isFormEncoded`, `boolean` v10 @name `isMultipart`) @signature `Lretrofit2/RequestBuilder;.<init>:(Ljava/lang/String;Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/MediaType;ZZZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b01d4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b01da.  v2.`retrofit2.RequestBuilder.method` @type ^`java.lang.String` := v3 @kind object;
  #L1b01de.  v2.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` := v4 @kind object;
  #L1b01e2.  v2.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v5 @kind object;
  #L1b01e6.  v0:= new `okhttp3.Request$Builder`;
  #L1b01ea.  call `<init>`(v0) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L1b01f0.  v2.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` := v0 @kind object;
  #L1b01f4.  v2.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` := v7 @kind object;
  #L1b01f8.  v2.`retrofit2.RequestBuilder.hasBody` @type ^`boolean` := v8 @kind boolean;
  #L1b01fc.  if v6 == 0 then goto L1b020a;
  #L1b0200.  v0:= v2.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L1b0204.  call temp:= `headers`(v0, v6) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b020a.  if v9 == 0 then goto L1b021e;
  #L1b020e.  v0:= new `okhttp3.FormBody$Builder`;
  #L1b0212.  call `<init>`(v0) @signature `Lokhttp3/FormBody$Builder;.<init>:()V` @kind direct;
  #L1b0218.  v2.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` := v0 @kind object;
  #L1b021c.  return @kind void;
  #L1b021e.  if v10 == 0 then goto L1b021c;
  #L1b0222.  v0:= new `okhttp3.MultipartBody$Builder`;
  #L1b0226.  call `<init>`(v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @kind direct;
  #L1b022c.  v2.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` := v0 @kind object;
  #L1b0230.  v0:= v2.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1b0234.  v1:= `@@okhttp3.MultipartBody.FORM` @type ^`okhttp3.MediaType` @kind object;
  #L1b0238.  call temp:= `setType`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L1b023e.  goto L1b021c;
}
procedure `java.lang.String` `canonicalizeForPath`(`java.lang.String` v6 @kind object @name `input`, `boolean` v7 @name `alreadyEncoded`) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b0250.  v1:= 0I;
  #L1b0252.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b0258.  v2:= temp;
  #L1b025a.  if v1 >= v2 then goto L1b02bc;
  #L1b025e.  call temp:= `codePointAt`(v6, v1) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L1b0264.  v0:= temp;
  #L1b0266.  v4:= 32I;
  #L1b026a.  if v0 < v4 then goto L1b029c;
  #L1b026e.  v4:= 127I;
  #L1b0272.  if v0 >= v4 then goto L1b029c;
  #L1b0276.  v4:= " \"<>^`{}|\\?#" @kind object;
  #L1b027a.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b0280.  v4:= temp;
  #L1b0282.  v5:= -1I;
  #L1b0284.  if v4 != v5 then goto L1b029c;
  #L1b0288.  if v7 != 0 then goto L1b02be;
  #L1b028c.  v4:= 47I;
  #L1b0290.  if v0 == v4 then goto L1b029c;
  #L1b0294.  v4:= 37I;
  #L1b0298.  if v0 != v4 then goto L1b02be;
  #L1b029c.  v3:= new `okio.Buffer`;
  #L1b02a0.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1b02a6.  v4:= 0I;
  #L1b02a8.  call temp:= `writeUtf8`(v3, v6, v4, v1) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L1b02ae.  call `canonicalizeForPath`(v3, v6, v1, v2, v7) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L1b02b4.  call temp:= `readUtf8`(v3) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1b02ba.  v6:= temp @kind object;
  #L1b02bc.  return v6 @kind object;
  #L1b02be.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L1b02c4.  v4:= temp;
  #L1b02c6.  v1:= v1 + v4 @kind int;
  #L1b02c8.  goto L1b025a;
}
procedure `void` `canonicalizeForPath`(`okio.Buffer` v7 @kind object @name `out`, `java.lang.String` v8 @kind object @name `input`, `int` v9 @name `pos`, `int` v10 @name `limit`, `boolean` v11 @name `alreadyEncoded`) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b02dc.  v6:= 37I;
  #L1b02e0.  v3:= 0I;
  #L1b02e2.  v2:= v9;
  #L1b02e4.  if v2 >= v10 then goto L1b03b6;
  #L1b02e8.  call temp:= `codePointAt`(v8, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L1b02ee.  v1:= temp;
  #L1b02f0.  if v11 == 0 then goto L1b0320;
  #L1b02f4.  v4:= 9I;
  #L1b02f8.  if v1 == v4 then goto L1b0314;
  #L1b02fc.  v4:= 10I;
  #L1b0300.  if v1 == v4 then goto L1b0314;
  #L1b0304.  v4:= 12I;
  #L1b0308.  if v1 == v4 then goto L1b0314;
  #L1b030c.  v4:= 13I;
  #L1b0310.  if v1 != v4 then goto L1b0320;
  #L1b0314.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L1b031a.  v4:= temp;
  #L1b031c.  v2:= v2 + v4 @kind int;
  #L1b031e.  goto L1b02e4;
  #L1b0320.  v4:= 32I;
  #L1b0324.  if v1 < v4 then goto L1b0352;
  #L1b0328.  v4:= 127I;
  #L1b032c.  if v1 >= v4 then goto L1b0352;
  #L1b0330.  v4:= " \"<>^`{}|\\?#" @kind object;
  #L1b0334.  call temp:= `indexOf`(v4, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b033a.  v4:= temp;
  #L1b033c.  v5:= -1I;
  #L1b033e.  if v4 != v5 then goto L1b0352;
  #L1b0342.  if v11 != 0 then goto L1b03ae;
  #L1b0346.  v4:= 47I;
  #L1b034a.  if v1 == v4 then goto L1b0352;
  #L1b034e.  if v1 != v6 then goto L1b03ae;
  #L1b0352.  if v3 != 0 then goto L1b0360;
  #L1b0356.  v3:= new `okio.Buffer`;
  #L1b035a.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1b0360.  call temp:= `writeUtf8CodePoint`(v3, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L1b0366.  call temp:= `exhausted`(v3) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1b036c.  v4:= temp;
  #L1b036e.  if v4 != 0 then goto L1b0314;
  #L1b0372.  call temp:= `readByte`(v3) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1b0378.  v4:= temp;
  #L1b037a.  v0:= v4 ^& 255;
  #L1b037e.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1b0384.  v4:= `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] @kind object;
  #L1b0388.  v5:= v0 ^> 4;
  #L1b038c.  v5:= v5 ^& 15;
  #L1b0390.  v4:= v4[v5] @kind char;
  #L1b0394.  call temp:= `writeByte`(v7, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1b039a.  v4:= `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] @kind object;
  #L1b039e.  v5:= v0 ^& 15;
  #L1b03a2.  v4:= v4[v5] @kind char;
  #L1b03a6.  call temp:= `writeByte`(v7, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1b03ac.  goto L1b0366;
  #L1b03ae.  call temp:= `writeUtf8CodePoint`(v7, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L1b03b4.  goto L1b0314;
  #L1b03b6.  return @kind void;
}
procedure `void` `addFormField`(`retrofit2.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`, `boolean` v4 @name `encoded`) @signature `Lretrofit2/RequestBuilder;.addFormField:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;

  #L1b03c8.  if v4 == 0 then goto L1b03d8;
  #L1b03cc.  v0:= v1.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L1b03d0.  call temp:= `addEncoded`(v0, v2, v3) @signature `Lokhttp3/FormBody$Builder;.addEncoded:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;` @kind virtual;
  #L1b03d6.  return @kind void;
  #L1b03d8.  v0:= v1.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L1b03dc.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/FormBody$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;` @kind virtual;
  #L1b03e2.  goto L1b03d6;
}
procedure `void` `addHeader`(`retrofit2.RequestBuilder` v4 @kind this, `java.lang.String` v5 @kind object @name `name`, `java.lang.String` v6 @kind object @name `value`) @signature `Lretrofit2/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b03f4.  v1:= "Content-Type" @kind object;
  #L1b03f8.  call temp:= `equalsIgnoreCase`(v1, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1b03fe.  v1:= temp;
  #L1b0400.  if v1 == 0 then goto L1b0448;
  #L1b0404.  call temp:= `parse`(v6) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1b040a.  v0:= temp @kind object;
  #L1b040c.  if v0 != 0 then goto L1b0442;
  #L1b0410.  v1:= new `java.lang.IllegalArgumentException`;
  #L1b0414.  v2:= new `java.lang.StringBuilder`;
  #L1b0418.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b041e.  v3:= "Malformed content type: " @kind object;
  #L1b0422.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0428.  v2:= temp @kind object;
  #L1b042a.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0430.  v2:= temp @kind object;
  #L1b0432.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0438.  v2:= temp @kind object;
  #L1b043a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b0440.  throw v1;
  #L1b0442.  v4.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1b0446.  return @kind void;
  #L1b0448.  v1:= v4.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L1b044c.  call temp:= `addHeader`(v1, v5, v6) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b0452.  goto L1b0446;
}
procedure `void` `addPart`(`retrofit2.RequestBuilder` v1 @kind this, `okhttp3.Headers` v2 @kind object @name `headers`, `okhttp3.RequestBody` v3 @kind object @name `body`) @signature `Lretrofit2/RequestBuilder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag  {
    temp;
    v0;

  #L1b0464.  v0:= v1.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1b0468.  call temp:= `addPart`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L1b046e.  return @kind void;
}
procedure `void` `addPart`(`retrofit2.RequestBuilder` v1 @kind this, `okhttp3.MultipartBody$Part` v2 @kind object @name `part`) @signature `Lretrofit2/RequestBuilder;.addPart:(Lokhttp3/MultipartBody$Part;)V` @AccessFlag  {
    temp;
    v0;

  #L1b0480.  v0:= v1.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1b0484.  call temp:= `addPart`(v0, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L1b048a.  return @kind void;
}
procedure `void` `addPathParam`(`retrofit2.RequestBuilder` v3 @kind this, `java.lang.String` v4 @kind object @name `name`, `java.lang.String` v5 @kind object @name `value`, `boolean` v6 @name `encoded`) @signature `Lretrofit2/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1b049c.  v0:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b04a0.  if v0 != 0 then goto L1b04b0;
  #L1b04a4.  v0:= new `java.lang.AssertionError`;
  #L1b04a8.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1b04ae.  throw v0;
  #L1b04b0.  v0:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b04b4.  v1:= new `java.lang.StringBuilder`;
  #L1b04b8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b04be.  v2:= "{" @kind object;
  #L1b04c2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b04c8.  v1:= temp @kind object;
  #L1b04ca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b04d0.  v1:= temp @kind object;
  #L1b04d2.  v2:= "}" @kind object;
  #L1b04d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b04dc.  v1:= temp @kind object;
  #L1b04de.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b04e4.  v1:= temp @kind object;
  #L1b04e6.  call temp:= `canonicalizeForPath`(v5, v6) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L1b04ec.  v2:= temp @kind object;
  #L1b04ee.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1b04f4.  v0:= temp @kind object;
  #L1b04f6.  v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L1b04fa.  return @kind void;
}
procedure `void` `addQueryParam`(`retrofit2.RequestBuilder` v3 @kind this, `java.lang.String` v4 @kind object @name `name`, `java.lang.String` v5 @kind object @name `value`, `boolean` v6 @name `encoded`) @signature `Lretrofit2/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1b050c.  v0:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b0510.  if v0 == 0 then goto L1b0584;
  #L1b0514.  v0:= v3.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1b0518.  v1:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b051c.  call temp:= `newBuilder`(v0, v1) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1b0522.  v0:= temp @kind object;
  #L1b0524.  v3.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` := v0 @kind object;
  #L1b0528.  v0:= v3.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L1b052c.  if v0 != 0 then goto L1b057e;
  #L1b0530.  v0:= new `java.lang.IllegalArgumentException`;
  #L1b0534.  v1:= new `java.lang.StringBuilder`;
  #L1b0538.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b053e.  v2:= "Malformed URL. Base: " @kind object;
  #L1b0542.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0548.  v1:= temp @kind object;
  #L1b054a.  v2:= v3.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1b054e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0554.  v1:= temp @kind object;
  #L1b0556.  v2:= ", Relative: " @kind object;
  #L1b055a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0560.  v1:= temp @kind object;
  #L1b0562.  v2:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b0566.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b056c.  v1:= temp @kind object;
  #L1b056e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b0574.  v1:= temp @kind object;
  #L1b0576.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b057c.  throw v0;
  #L1b057e.  v0:= 0I;
  #L1b0580.  v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L1b0584.  if v6 == 0 then goto L1b0594;
  #L1b0588.  v0:= v3.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L1b058c.  call temp:= `addEncodedQueryParameter`(v0, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1b0592.  return @kind void;
  #L1b0594.  v0:= v3.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L1b0598.  call temp:= `addQueryParameter`(v0, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1b059e.  goto L1b0592;
}
procedure `okhttp3.Request` `build`(`retrofit2.RequestBuilder` v8 @kind this) @signature `Lretrofit2/RequestBuilder;.build:()Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b05b0.  v4:= v8.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L1b05b4.  if v4 == 0 then goto L1b0616;
  #L1b05b8.  call temp:= `build`(v4) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b05be.  v3:= temp @kind object;
  #L1b05c0.  v0:= v8.`retrofit2.RequestBuilder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L1b05c4.  if v0 != 0 then goto L1b05dc;
  #L1b05c8.  v5:= v8.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L1b05cc.  if v5 == 0 then goto L1b0678;
  #L1b05d0.  v5:= v8.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L1b05d4.  call temp:= `build`(v5) @signature `Lokhttp3/FormBody$Builder;.build:()Lokhttp3/FormBody;` @kind virtual;
  #L1b05da.  v0:= temp @kind object;
  #L1b05dc.  v2:= v8.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L1b05e0.  if v2 == 0 then goto L1b05f4;
  #L1b05e4.  if v0 == 0 then goto L1b06a8;
  #L1b05e8.  v1:= new `retrofit2.RequestBuilder$ContentTypeOverridingRequestBody`;
  #L1b05ec.  call `<init>`(v1, v0, v2) @signature `Lretrofit2/RequestBuilder$ContentTypeOverridingRequestBody;.<init>:(Lokhttp3/RequestBody;Lokhttp3/MediaType;)V` @kind direct;
  #L1b05f2.  v0:= v1 @kind object;
  #L1b05f4.  v5:= v8.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L1b05f8.  call temp:= `url`(v5, v3) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b05fe.  v5:= temp @kind object;
  #L1b0600.  v6:= v8.`retrofit2.RequestBuilder.method` @type ^`java.lang.String` @kind object;
  #L1b0604.  call temp:= `method`(v5, v6, v0) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b060a.  v5:= temp @kind object;
  #L1b060c.  call temp:= `build`(v5) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1b0612.  v5:= temp @kind object;
  #L1b0614.  return v5 @kind object;
  #L1b0616.  v5:= v8.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1b061a.  v6:= v8.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b061e.  call temp:= `resolve`(v5, v6) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L1b0624.  v3:= temp @kind object;
  #L1b0626.  if v3 != 0 then goto L1b05c0;
  #L1b062a.  v5:= new `java.lang.IllegalArgumentException`;
  #L1b062e.  v6:= new `java.lang.StringBuilder`;
  #L1b0632.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b0638.  v7:= "Malformed URL. Base: " @kind object;
  #L1b063c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0642.  v6:= temp @kind object;
  #L1b0644.  v7:= v8.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1b0648.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b064e.  v6:= temp @kind object;
  #L1b0650.  v7:= ", Relative: " @kind object;
  #L1b0654.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b065a.  v6:= temp @kind object;
  #L1b065c.  v7:= v8.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b0660.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b0666.  v6:= temp @kind object;
  #L1b0668.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b066e.  v6:= temp @kind object;
  #L1b0670.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b0676.  throw v5;
  #L1b0678.  v5:= v8.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1b067c.  if v5 == 0 then goto L1b068e;
  #L1b0680.  v5:= v8.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L1b0684.  call temp:= `build`(v5) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @kind virtual;
  #L1b068a.  v0:= temp @kind object;
  #L1b068c.  goto L1b05dc;
  #L1b068e.  v5:= v8.`retrofit2.RequestBuilder.hasBody` @type ^`boolean` @kind boolean;
  #L1b0692.  if v5 == 0 then goto L1b05dc;
  #L1b0696.  v5:= 0I;
  #L1b0698.  v6:= 0I;
  #L1b069a.  v6:= new `byte`[v6];
  #L1b069e.  call temp:= `create`(v5, v6) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L1b06a4.  v0:= temp @kind object;
  #L1b06a6.  goto L1b05dc;
  #L1b06a8.  v5:= v8.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L1b06ac.  v6:= "Content-Type" @kind object;
  #L1b06b0.  call temp:= `toString`(v2) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b06b6.  v7:= temp @kind object;
  #L1b06b8.  call temp:= `addHeader`(v5, v6, v7) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b06be.  goto L1b05f4;
}
procedure `void` `setBody`(`retrofit2.RequestBuilder` v0 @kind this, `okhttp3.RequestBody` v1 @kind object @name `body`) @signature `Lretrofit2/RequestBuilder;.setBody:(Lokhttp3/RequestBody;)V` @AccessFlag  {
    temp;

  #L1b06d0.  v0.`retrofit2.RequestBuilder.body` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L1b06d4.  return @kind void;
}
procedure `void` `setRelativeUrl`(`retrofit2.RequestBuilder` v1 @kind this, `java.lang.Object` v2 @kind object @name `relativeUrl`) @signature `Lretrofit2/RequestBuilder;.setRelativeUrl:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L1b06e8.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b06ee.  v0:= temp @kind object;
  #L1b06f0.  v1.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L1b06f4.  return @kind void;
}

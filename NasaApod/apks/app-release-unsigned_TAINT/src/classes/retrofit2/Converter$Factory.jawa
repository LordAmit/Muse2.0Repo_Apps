record `retrofit2.Converter$Factory` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`retrofit2.Converter$Factory` v0 @kind this) @signature `Lretrofit2/Converter$Factory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1afd70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1afd76.  return @kind void;
}
procedure `java.lang.reflect.Type` `getParameterUpperBound`(`int` v1 @name `index`, `java.lang.reflect.ParameterizedType` v2 @kind object @name `type`) @signature `Lretrofit2/Converter$Factory;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;

  #L1afd88.  call temp:= `getParameterUpperBound`(v1, v2) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1afd8e.  v0:= temp @kind object;
  #L1afd90.  return v0 @kind object;
}
procedure `java.lang.Class` `getRawType`(`java.lang.reflect.Type` v1 @kind object @name `type`) @signature `Lretrofit2/Converter$Factory;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;

  #L1afda4.  call temp:= `getRawType`(v1) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1afdaa.  v0:= temp @kind object;
  #L1afdac.  return v0 @kind object;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.Converter$Factory` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v4 @kind object @name `methodAnnotations`, `retrofit2.Retrofit` v5 @kind object @name `retrofit`) @signature `Lretrofit2/Converter$Factory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afdc0.  v0:= 0I;
  #L1afdc2.  return v0 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.Converter$Factory` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`, `retrofit2.Retrofit` v4 @kind object @name `retrofit`) @signature `Lretrofit2/Converter$Factory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afdd4.  v0:= 0I;
  #L1afdd6.  return v0 @kind object;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.Converter$Factory` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`, `retrofit2.Retrofit` v4 @kind object @name `retrofit`) @signature `Lretrofit2/Converter$Factory;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1afde8.  v0:= 0I;
  #L1afdea.  return v0 @kind object;
}

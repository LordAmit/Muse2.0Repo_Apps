record `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1` @kind class @AccessFlag  extends `retrofit2.Callback` @kind interface {
  `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `retrofit2.Callback` `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1.val$callback` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1` v0 @kind this, `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v1 @kind object @name `this$0`, `retrofit2.Callback` v2 @kind object) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall$1;.<init>:(Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;Lretrofit2/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L221160.  v0.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1.this$0` @type ^`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` := v1 @kind object;
  #L221164.  v0.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1.val$callback` @type ^`retrofit2.Callback` := v2 @kind object;
  #L221168.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22116e.  return @kind void;
}
procedure `void` `onFailure`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1` v2 @kind this, `retrofit2.Call` v3 @kind object, `java.lang.Throwable` v4 @kind object @name `t`) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall$1;.onFailure:(Lretrofit2/Call;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L221180.  v0:= v2.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1.this$0` @type ^`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` @kind object;
  #L221184.  v0:= v0.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L221188.  v1:= new `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1$2`;
  #L22118c.  call `<init>`(v1, v2, v4) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall$1$2;.<init>:(Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall$1;Ljava/lang/Throwable;)V` @kind direct;
  #L221192.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L221198.  return @kind void;
}
procedure `void` `onResponse`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1` v2 @kind this, `retrofit2.Call` v3 @kind object, `retrofit2.Response` v4 @kind object) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall$1;.onResponse:(Lretrofit2/Call;Lretrofit2/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2211ac.  v0:= v2.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1.this$0` @type ^`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` @kind object;
  #L2211b0.  v0:= v0.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L2211b4.  v1:= new `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1$1`;
  #L2211b8.  call `<init>`(v1, v2, v4) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall$1$1;.<init>:(Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall$1;Lretrofit2/Response;)V` @kind direct;
  #L2211be.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2211c4.  return @kind void;
}

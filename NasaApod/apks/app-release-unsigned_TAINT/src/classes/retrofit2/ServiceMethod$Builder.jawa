record `retrofit2.ServiceMethod$Builder` @kind class @AccessFlag FINAL {
  `retrofit2.CallAdapter` `retrofit2.ServiceMethod$Builder.callAdapter` @AccessFlag ;
  `okhttp3.MediaType` `retrofit2.ServiceMethod$Builder.contentType` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotBody` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotField` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPart` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPath` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotQuery` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotUrl` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.hasBody` @AccessFlag ;
  `okhttp3.Headers` `retrofit2.ServiceMethod$Builder.headers` @AccessFlag ;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.httpMethod` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isFormEncoded` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isMultipart` @AccessFlag ;
  `java.lang.reflect.Method` `retrofit2.ServiceMethod$Builder.method` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[] `retrofit2.ServiceMethod$Builder.methodAnnotations` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[][] `retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @AccessFlag FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.ServiceMethod$Builder.parameterHandlers` @AccessFlag ;
  `java.lang.reflect.Type`[] `retrofit2.ServiceMethod$Builder.parameterTypes` @AccessFlag FINAL;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.relativeUrl` @AccessFlag ;
  `java.util.Set` `retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @AccessFlag ;
  `retrofit2.Converter` `retrofit2.ServiceMethod$Builder.responseConverter` @AccessFlag ;
  `java.lang.reflect.Type` `retrofit2.ServiceMethod$Builder.responseType` @AccessFlag ;
  `retrofit2.Retrofit` `retrofit2.ServiceMethod$Builder.retrofit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `retrofit2.Retrofit` v2 @kind object @name `retrofit`, `java.lang.reflect.Method` v3 @kind object @name `method`) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1b152c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b1532.  v1.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` := v2 @kind object;
  #L1b1536.  v1.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L1b153a.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b1540.  v0:= temp @kind object;
  #L1b1542.  v1.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L1b1546.  call temp:= `getGenericParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L1b154c.  v0:= temp @kind object;
  #L1b154e.  v1.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L1b1552.  call temp:= `getParameterAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b1558.  v0:= temp @kind object;
  #L1b155a.  v1.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] := v0 @kind object;
  #L1b155e.  return @kind void;
}
procedure `retrofit2.CallAdapter` `createCallAdapter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1570.  v4:= 1I;
  #L1b1572.  v5:= 0I;
  #L1b1574.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b1578.  call temp:= `getGenericReturnType`(v3) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1b157e.  v2:= temp @kind object;
  #L1b1580.  call temp:= `hasUnresolvableType`(v2) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1b1586.  v3:= temp;
  #L1b1588.  if v3 == 0 then goto L1b15a2;
  #L1b158c.  v3:= "Method return type must not include a type variable or wildcard: %s" @kind object;
  #L1b1590.  v4:= new `java.lang.Object`[v4];
  #L1b1594.  v4[v5]:= v2 @kind object;
  #L1b1598.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b159e.  v3:= temp @kind object;
  #L1b15a0.  throw v3;
  #L1b15a2.  v3:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L1b15a6.  if v2 != v3 then goto L1b15bc;
  #L1b15aa.  v3:= "Service methods cannot return void." @kind object;
  #L1b15ae.  v4:= new `java.lang.Object`[v5];
  #L1b15b2.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b15b8.  v3:= temp @kind object;
  #L1b15ba.  throw v3;
  #L1b15bc.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b15c0.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b15c6.  v0:= temp @kind object;
  #Try_start0.  
  #L1b15c8.  v3:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b15cc.  call temp:= `callAdapter`(v3, v2, v0) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #Try_end0.  
  #L1b15d2.  v3:= temp @kind object;
  #L1b15d4.  return v3 @kind object;
  #L1b15d6.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b15d8.  v3:= "Unable to create call adapter for %s" @kind object;
  #L1b15dc.  v4:= new `java.lang.Object`[v4];
  #L1b15e0.  v4[v5]:= v2 @kind object;
  #L1b15e4.  call temp:= `methodError`(v6, v1, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b15ea.  v3:= temp @kind object;
  #L1b15ec.  throw v3;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b15d6;
}
procedure `retrofit2.Converter` `createResponseConverter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1610.  v2:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b1614.  call temp:= `getAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1b161a.  v0:= temp @kind object;
  #Try_start0.  
  #L1b161c.  v2:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1620.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b1624.  call temp:= `responseBodyConverter`(v2, v3, v0) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #Try_end0.  
  #L1b162a.  v2:= temp @kind object;
  #L1b162c.  return v2 @kind object;
  #L1b162e.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b1630.  v2:= "Unable to create converter for %s" @kind object;
  #L1b1634.  v3:= 1I;
  #L1b1636.  v3:= new `java.lang.Object`[v3];
  #L1b163a.  v4:= 0I;
  #L1b163c.  v5:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b1640.  v3[v4]:= v5 @kind object;
  #L1b1644.  call temp:= `methodError`(v6, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b164a.  v2:= temp @kind object;
  #L1b164c.  throw v2;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b162e;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1b1670.  v0:= 0I;
  #L1b1672.  call temp:= `methodError`(v1, v0, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1678.  v0:= temp @kind object;
  #L1b167a.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v3 @kind this, `java.lang.Throwable` v4 @kind object @name `cause`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1b168c.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b1692.  v5:= temp @kind object;
  #L1b1694.  v0:= new `java.lang.IllegalArgumentException`;
  #L1b1698.  v1:= new `java.lang.StringBuilder`;
  #L1b169c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b16a2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16a8.  v1:= temp @kind object;
  #L1b16aa.  v2:= "\n    for method " @kind object;
  #L1b16ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16b4.  v1:= temp @kind object;
  #L1b16b6.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b16ba.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L1b16c0.  v2:= temp @kind object;
  #L1b16c2.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b16c8.  v2:= temp @kind object;
  #L1b16ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16d0.  v1:= temp @kind object;
  #L1b16d2.  v2:= "." @kind object;
  #L1b16d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16dc.  v1:= temp @kind object;
  #L1b16de.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L1b16e2.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b16e8.  v2:= temp @kind object;
  #L1b16ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b16f0.  v1:= temp @kind object;
  #L1b16f2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b16f8.  v1:= temp @kind object;
  #L1b16fa.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1b1700.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `int` v3 @name `p`, `java.lang.String` v4 @kind object @name `message`, `java.lang.Object`[] v5 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b1714.  v0:= new `java.lang.StringBuilder`;
  #L1b1718.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b171e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1724.  v0:= temp @kind object;
  #L1b1726.  v1:= " (parameter #" @kind object;
  #L1b172a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1730.  v0:= temp @kind object;
  #L1b1732.  v1:= v3 + 1;
  #L1b1736.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b173c.  v0:= temp @kind object;
  #L1b173e.  v1:= ")" @kind object;
  #L1b1742.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1748.  v0:= temp @kind object;
  #L1b174a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1750.  v0:= temp @kind object;
  #L1b1752.  call temp:= `methodError`(v2, v0, v5) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1758.  v0:= temp @kind object;
  #L1b175a.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `java.lang.Throwable` v3 @kind object @name `cause`, `int` v4 @name `p`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1b176c.  v0:= new `java.lang.StringBuilder`;
  #L1b1770.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1776.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b177c.  v0:= temp @kind object;
  #L1b177e.  v1:= " (parameter #" @kind object;
  #L1b1782.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1788.  v0:= temp @kind object;
  #L1b178a.  v1:= v4 + 1;
  #L1b178e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1794.  v0:= temp @kind object;
  #L1b1796.  v1:= ")" @kind object;
  #L1b179a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b17a0.  v0:= temp @kind object;
  #L1b17a2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b17a8.  v0:= temp @kind object;
  #L1b17aa.  call temp:= `methodError`(v2, v3, v0, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b17b0.  v0:= temp @kind object;
  #L1b17b2.  return v0 @kind object;
}
procedure `okhttp3.Headers` `parseHeaders`(`retrofit2.ServiceMethod$Builder` v11 @kind this, `java.lang.String`[] v12 @kind object @name `headers`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b17c4.  v10:= 1I;
  #L1b17c6.  v7:= 0I;
  #L1b17c8.  v0:= new `okhttp3.Headers$Builder`;
  #L1b17cc.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1b17d2.  v8:= length @variable v12;
  #L1b17d4.  v6:= v7;
  #L1b17d6.  if v6 >= v8 then goto L1b187a;
  #L1b17da.  v2:= v12[v6] @kind object;
  #L1b17de.  v9:= 58I;
  #L1b17e2.  call temp:= `indexOf`(v2, v9) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b17e8.  v1:= temp;
  #L1b17ea.  v9:= -1I;
  #L1b17ec.  if v1 == v9 then goto L1b1804;
  #L1b17f0.  if v1 == 0 then goto L1b1804;
  #L1b17f4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b17fa.  v9:= temp;
  #L1b17fc.  v9:= v9 + -1;
  #L1b1800.  if v1 != v9 then goto L1b181a;
  #L1b1804.  v6:= "@Headers value must be in the form \"Name: Value\". Found: \"%s\"" @kind object;
  #L1b1808.  v8:= new `java.lang.Object`[v10];
  #L1b180c.  v8[v7]:= v2 @kind object;
  #L1b1810.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1816.  v6:= temp @kind object;
  #L1b1818.  throw v6;
  #L1b181a.  call temp:= `substring`(v2, v7, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1b1820.  v3:= temp @kind object;
  #L1b1822.  v9:= v1 + 1;
  #L1b1826.  call temp:= `substring`(v2, v9) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b182c.  v9:= temp @kind object;
  #L1b182e.  call temp:= `trim`(v9) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1b1834.  v4:= temp @kind object;
  #L1b1836.  v9:= "Content-Type" @kind object;
  #L1b183a.  call temp:= `equalsIgnoreCase`(v9, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1b1840.  v9:= temp;
  #L1b1842.  if v9 == 0 then goto L1b1872;
  #L1b1846.  call temp:= `parse`(v4) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L1b184c.  v5:= temp @kind object;
  #L1b184e.  if v5 != 0 then goto L1b1868;
  #L1b1852.  v6:= "Malformed content type: %s" @kind object;
  #L1b1856.  v8:= new `java.lang.Object`[v10];
  #L1b185a.  v8[v7]:= v4 @kind object;
  #L1b185e.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1864.  v6:= temp @kind object;
  #L1b1866.  throw v6;
  #L1b1868.  v11.`retrofit2.ServiceMethod$Builder.contentType` @type ^`okhttp3.MediaType` := v5 @kind object;
  #L1b186c.  v6:= v6 + 1;
  #L1b1870.  goto L1b17d6;
  #L1b1872.  call temp:= `add`(v0, v3, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1b1878.  goto L1b186c;
  #L1b187a.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1b1880.  v6:= temp @kind object;
  #L1b1882.  return v6 @kind object;
}
procedure `void` `parseHttpMethodAndPath`(`retrofit2.ServiceMethod$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `httpMethod`, `java.lang.String` v10 @kind object @name `value`, `boolean` v11 @name `hasBody`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b1894.  v7:= 1I;
  #L1b1896.  v6:= 0I;
  #L1b1898.  v3:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b189c.  if v3 == 0 then goto L1b18c0;
  #L1b18a0.  v3:= "Only one HTTP method is allowed. Found: %s and %s." @kind object;
  #L1b18a4.  v4:= 2I;
  #L1b18a6.  v4:= new `java.lang.Object`[v4];
  #L1b18aa.  v5:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b18ae.  v4[v6]:= v5 @kind object;
  #L1b18b2.  v4[v7]:= v9 @kind object;
  #L1b18b6.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b18bc.  v3:= temp @kind object;
  #L1b18be.  throw v3;
  #L1b18c0.  v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` := v9 @kind object;
  #L1b18c4.  v8.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` := v11 @kind boolean;
  #L1b18c8.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1b18ce.  v3:= temp;
  #L1b18d0.  if v3 == 0 then goto L1b18d6;
  #L1b18d4.  return @kind void;
  #L1b18d6.  v3:= 63I;
  #L1b18da.  call temp:= `indexOf`(v10, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1b18e0.  v2:= temp;
  #L1b18e2.  v3:= -1I;
  #L1b18e4.  if v2 == v3 then goto L1b1932;
  #L1b18e8.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b18ee.  v3:= temp;
  #L1b18f0.  v3:= v3 + -1;
  #L1b18f4.  if v2 >= v3 then goto L1b1932;
  #L1b18f8.  v3:= v2 + 1;
  #L1b18fc.  call temp:= `substring`(v10, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b1902.  v1:= temp @kind object;
  #L1b1904.  v3:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b1908.  call temp:= `matcher`(v3, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b190e.  v0:= temp @kind object;
  #L1b1910.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L1b1916.  v3:= temp;
  #L1b1918.  if v3 == 0 then goto L1b1932;
  #L1b191c.  v3:= "URL query string \"%s\" must not have replace block. For dynamic query parameters use @Query." @kind object;
  #L1b1920.  v4:= new `java.lang.Object`[v7];
  #L1b1924.  v4[v6]:= v1 @kind object;
  #L1b1928.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b192e.  v3:= temp @kind object;
  #L1b1930.  throw v3;
  #L1b1932.  v8.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` := v10 @kind object;
  #L1b1936.  call temp:= `parsePathParameters`(v10) @signature `Lretrofit2/ServiceMethod;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L1b193c.  v3:= temp @kind object;
  #L1b193e.  v8.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` := v3 @kind object;
  #L1b1942.  goto L1b18d4;
}
procedure `void` `parseMethodAnnotation`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `java.lang.annotation.Annotation` v7 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1954.  v5:= 1I;
  #L1b1956.  v4:= 0I;
  #L1b1958.  v2:= instanceof @variable v7 @type ^`retrofit2.http.DELETE` @kind boolean;
  #L1b195c.  if v2 == 0 then goto L1b1978;
  #L1b1960.  v2:= "DELETE" @kind object;
  #L1b1964.  v7:= (`retrofit2.http.DELETE`) v7 @kind object;
  #L1b1968.  call temp:= `value`(v7) @signature `Lretrofit2/http/DELETE;.value:()Ljava/lang/String;` @kind interface;
  #L1b196e.  v3:= temp @kind object;
  #L1b1970.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1976.  return @kind void;
  #L1b1978.  v2:= instanceof @variable v7 @type ^`retrofit2.http.GET` @kind boolean;
  #L1b197c.  if v2 == 0 then goto L1b1998;
  #L1b1980.  v2:= "GET" @kind object;
  #L1b1984.  v7:= (`retrofit2.http.GET`) v7 @kind object;
  #L1b1988.  call temp:= `value`(v7) @signature `Lretrofit2/http/GET;.value:()Ljava/lang/String;` @kind interface;
  #L1b198e.  v3:= temp @kind object;
  #L1b1990.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1996.  goto L1b1976;
  #L1b1998.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HEAD` @kind boolean;
  #L1b199c.  if v2 == 0 then goto L1b19dc;
  #L1b19a0.  v2:= "HEAD" @kind object;
  #L1b19a4.  v7:= (`retrofit2.http.HEAD`) v7 @kind object;
  #L1b19a8.  call temp:= `value`(v7) @signature `Lretrofit2/http/HEAD;.value:()Ljava/lang/String;` @kind interface;
  #L1b19ae.  v3:= temp @kind object;
  #L1b19b0.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b19b6.  v2:= constclass @type ^`java.lang.Void` @kind object;
  #L1b19ba.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b19be.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b19c4.  v2:= temp;
  #L1b19c6.  if v2 != 0 then goto L1b1976;
  #L1b19ca.  v2:= "HEAD method must use Void as response type." @kind object;
  #L1b19ce.  v3:= new `java.lang.Object`[v4];
  #L1b19d2.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b19d8.  v2:= temp @kind object;
  #L1b19da.  throw v2;
  #L1b19dc.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PATCH` @kind boolean;
  #L1b19e0.  if v2 == 0 then goto L1b19fc;
  #L1b19e4.  v2:= "PATCH" @kind object;
  #L1b19e8.  v7:= (`retrofit2.http.PATCH`) v7 @kind object;
  #L1b19ec.  call temp:= `value`(v7) @signature `Lretrofit2/http/PATCH;.value:()Ljava/lang/String;` @kind interface;
  #L1b19f2.  v3:= temp @kind object;
  #L1b19f4.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b19fa.  goto L1b1976;
  #L1b19fc.  v2:= instanceof @variable v7 @type ^`retrofit2.http.POST` @kind boolean;
  #L1b1a00.  if v2 == 0 then goto L1b1a1c;
  #L1b1a04.  v2:= "POST" @kind object;
  #L1b1a08.  v7:= (`retrofit2.http.POST`) v7 @kind object;
  #L1b1a0c.  call temp:= `value`(v7) @signature `Lretrofit2/http/POST;.value:()Ljava/lang/String;` @kind interface;
  #L1b1a12.  v3:= temp @kind object;
  #L1b1a14.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1a1a.  goto L1b1976;
  #L1b1a1c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PUT` @kind boolean;
  #L1b1a20.  if v2 == 0 then goto L1b1a3c;
  #L1b1a24.  v2:= "PUT" @kind object;
  #L1b1a28.  v7:= (`retrofit2.http.PUT`) v7 @kind object;
  #L1b1a2c.  call temp:= `value`(v7) @signature `Lretrofit2/http/PUT;.value:()Ljava/lang/String;` @kind interface;
  #L1b1a32.  v3:= temp @kind object;
  #L1b1a34.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1a3a.  goto L1b1976;
  #L1b1a3c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.OPTIONS` @kind boolean;
  #L1b1a40.  if v2 == 0 then goto L1b1a5c;
  #L1b1a44.  v2:= "OPTIONS" @kind object;
  #L1b1a48.  v7:= (`retrofit2.http.OPTIONS`) v7 @kind object;
  #L1b1a4c.  call temp:= `value`(v7) @signature `Lretrofit2/http/OPTIONS;.value:()Ljava/lang/String;` @kind interface;
  #L1b1a52.  v3:= temp @kind object;
  #L1b1a54.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1a5a.  goto L1b1976;
  #L1b1a5c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HTTP` @kind boolean;
  #L1b1a60.  if v2 == 0 then goto L1b1a8c;
  #L1b1a64.  v1:= v7 @kind object;
  #L1b1a66.  v1:= (`retrofit2.http.HTTP`) v1 @kind object;
  #L1b1a6a.  call temp:= `method`(v1) @signature `Lretrofit2/http/HTTP;.method:()Ljava/lang/String;` @kind interface;
  #L1b1a70.  v2:= temp @kind object;
  #L1b1a72.  call temp:= `path`(v1) @signature `Lretrofit2/http/HTTP;.path:()Ljava/lang/String;` @kind interface;
  #L1b1a78.  v3:= temp @kind object;
  #L1b1a7a.  call temp:= `hasBody`(v1) @signature `Lretrofit2/http/HTTP;.hasBody:()Z` @kind interface;
  #L1b1a80.  v4:= temp;
  #L1b1a82.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L1b1a88.  goto L1b1976;
  #L1b1a8c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Headers` @kind boolean;
  #L1b1a90.  if v2 == 0 then goto L1b1ac8;
  #L1b1a94.  v7:= (`retrofit2.http.Headers`) v7 @kind object;
  #L1b1a98.  call temp:= `value`(v7) @signature `Lretrofit2/http/Headers;.value:()[Ljava/lang/String;` @kind interface;
  #L1b1a9e.  v0:= temp @kind object;
  #L1b1aa0.  v2:= length @variable v0;
  #L1b1aa2.  if v2 != 0 then goto L1b1ab8;
  #L1b1aa6.  v2:= "@Headers annotation is empty." @kind object;
  #L1b1aaa.  v3:= new `java.lang.Object`[v4];
  #L1b1aae.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1ab4.  v2:= temp @kind object;
  #L1b1ab6.  throw v2;
  #L1b1ab8.  call temp:= `parseHeaders`(v6, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @kind direct;
  #L1b1abe.  v2:= temp @kind object;
  #L1b1ac0.  v6.`retrofit2.ServiceMethod$Builder.headers` @type ^`okhttp3.Headers` := v2 @kind object;
  #L1b1ac4.  goto L1b1976;
  #L1b1ac8.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Multipart` @kind boolean;
  #L1b1acc.  if v2 == 0 then goto L1b1af2;
  #L1b1ad0.  v2:= v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b1ad4.  if v2 == 0 then goto L1b1aea;
  #L1b1ad8.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L1b1adc.  v3:= new `java.lang.Object`[v4];
  #L1b1ae0.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1ae6.  v2:= temp @kind object;
  #L1b1ae8.  throw v2;
  #L1b1aea.  v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` := v5 @kind boolean;
  #L1b1aee.  goto L1b1976;
  #L1b1af2.  v2:= instanceof @variable v7 @type ^`retrofit2.http.FormUrlEncoded` @kind boolean;
  #L1b1af6.  if v2 == 0 then goto L1b1976;
  #L1b1afa.  v2:= v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b1afe.  if v2 == 0 then goto L1b1b14;
  #L1b1b02.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L1b1b06.  v3:= new `java.lang.Object`[v4];
  #L1b1b0a.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1b10.  v2:= temp @kind object;
  #L1b1b12.  throw v2;
  #L1b1b14.  v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` := v5 @kind boolean;
  #L1b1b18.  goto L1b1976;
}
procedure `retrofit2.ParameterHandler` `parseParameter`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `int` v7 @name `p`, `java.lang.reflect.Type` v8 @kind object @name `parameterType`, `java.lang.annotation.Annotation`[] v9 @kind object @name `annotations`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1b2c.  v4:= 0I;
  #L1b1b2e.  v2:= 0I;
  #L1b1b30.  v5:= length @variable v9;
  #L1b1b32.  v3:= v4;
  #L1b1b34.  if v3 >= v5 then goto L1b1b68;
  #L1b1b38.  v0:= v9[v3] @kind object;
  #L1b1b3c.  call temp:= `parseParameterAnnotation`(v6, v7, v8, v9, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L1b1b42.  v1:= temp @kind object;
  #L1b1b44.  if v1 != 0 then goto L1b1b4e;
  #L1b1b48.  v3:= v3 + 1;
  #L1b1b4c.  goto L1b1b34;
  #L1b1b4e.  if v2 == 0 then goto L1b1b64;
  #L1b1b52.  v3:= "Multiple Retrofit annotations found, only one allowed." @kind object;
  #L1b1b56.  v4:= new `java.lang.Object`[v4];
  #L1b1b5a.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1b60.  v3:= temp @kind object;
  #L1b1b62.  throw v3;
  #L1b1b64.  v2:= v1 @kind object;
  #L1b1b66.  goto L1b1b48;
  #L1b1b68.  if v2 != 0 then goto L1b1b7e;
  #L1b1b6c.  v3:= "No Retrofit annotation found." @kind object;
  #L1b1b70.  v4:= new `java.lang.Object`[v4];
  #L1b1b74.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1b7a.  v3:= temp @kind object;
  #L1b1b7c.  throw v3;
  #L1b1b7e.  return v2 @kind object;
}
procedure `retrofit2.ParameterHandler` `parseParameterAnnotation`(`retrofit2.ServiceMethod$Builder` v30 @kind this, `int` v31 @name `p`, `java.lang.reflect.Type` v32 @kind object @name `type`, `java.lang.annotation.Annotation`[] v33 @kind object @name `annotations`, `java.lang.annotation.Annotation` v34 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L1b1b90.  v0:= v34 @kind object;
  #L1b1b94.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Url` @kind boolean;
  #L1b1b98.  v26:= v0;
  #L1b1b9c.  if v26 == 0 then goto L1b1d52;
  #L1b1ba0.  v0:= v30 @kind object;
  #L1b1ba4.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b1ba8.  v26:= v0;
  #L1b1bac.  if v26 == 0 then goto L1b1bde;
  #L1b1bb0.  v26:= "Multiple @Url method annotations found." @kind object;
  #L1b1bb4.  v27:= 0I;
  #L1b1bb8.  v0:= v27;
  #L1b1bbc.  v0:= new `java.lang.Object`[v0];
  #L1b1bc0.  v27:= v0 @kind object;
  #L1b1bc4.  v0:= v30 @kind object;
  #L1b1bc8.  v1:= v31;
  #L1b1bcc.  v2:= v26 @kind object;
  #L1b1bd0.  v3:= v27 @kind object;
  #L1b1bd4.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1bda.  v26:= temp @kind object;
  #L1b1bdc.  throw v26;
  #L1b1bde.  v0:= v30 @kind object;
  #L1b1be2.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` @kind boolean;
  #L1b1be6.  v26:= v0;
  #L1b1bea.  if v26 == 0 then goto L1b1c1c;
  #L1b1bee.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L1b1bf2.  v27:= 0I;
  #L1b1bf6.  v0:= v27;
  #L1b1bfa.  v0:= new `java.lang.Object`[v0];
  #L1b1bfe.  v27:= v0 @kind object;
  #L1b1c02.  v0:= v30 @kind object;
  #L1b1c06.  v1:= v31;
  #L1b1c0a.  v2:= v26 @kind object;
  #L1b1c0e.  v3:= v27 @kind object;
  #L1b1c12.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1c18.  v26:= temp @kind object;
  #L1b1c1a.  throw v26;
  #L1b1c1c.  v0:= v30 @kind object;
  #L1b1c20.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L1b1c24.  v26:= v0;
  #L1b1c28.  if v26 == 0 then goto L1b1c5a;
  #L1b1c2c.  v26:= "A @Url parameter must not come after a @Query" @kind object;
  #L1b1c30.  v27:= 0I;
  #L1b1c34.  v0:= v27;
  #L1b1c38.  v0:= new `java.lang.Object`[v0];
  #L1b1c3c.  v27:= v0 @kind object;
  #L1b1c40.  v0:= v30 @kind object;
  #L1b1c44.  v1:= v31;
  #L1b1c48.  v2:= v26 @kind object;
  #L1b1c4c.  v3:= v27 @kind object;
  #L1b1c50.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1c56.  v26:= temp @kind object;
  #L1b1c58.  throw v26;
  #L1b1c5a.  v0:= v30 @kind object;
  #L1b1c5e.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b1c62.  v26:= v0 @kind object;
  #L1b1c66.  if v26 == 0 then goto L1b1cac;
  #L1b1c6a.  v26:= "@Url cannot be used with @%s URL" @kind object;
  #L1b1c6e.  v27:= 1I;
  #L1b1c72.  v0:= v27;
  #L1b1c76.  v0:= new `java.lang.Object`[v0];
  #L1b1c7a.  v27:= v0 @kind object;
  #L1b1c7e.  v28:= 0I;
  #L1b1c82.  v0:= v30 @kind object;
  #L1b1c86.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b1c8a.  v29:= v0 @kind object;
  #L1b1c8e.  v27[v28]:= v29 @kind object;
  #L1b1c92.  v0:= v30 @kind object;
  #L1b1c96.  v1:= v31;
  #L1b1c9a.  v2:= v26 @kind object;
  #L1b1c9e.  v3:= v27 @kind object;
  #L1b1ca2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1ca8.  v26:= temp @kind object;
  #L1b1caa.  throw v26;
  #L1b1cac.  v26:= 1I;
  #L1b1cb0.  v0:= v26;
  #L1b1cb4.  v1:= v30 @kind object;
  #L1b1cb8.  v1.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` := v0 @kind boolean;
  #L1b1cbc.  v26:= constclass @type ^`okhttp3.HttpUrl` @kind object;
  #L1b1cc0.  v0:= v32 @kind object;
  #L1b1cc4.  v1:= v26 @kind object;
  #L1b1cc8.  if v0 == v1 then goto L1b1d18;
  #L1b1ccc.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b1cd0.  v0:= v32 @kind object;
  #L1b1cd4.  v1:= v26 @kind object;
  #L1b1cd8.  if v0 == v1 then goto L1b1d18;
  #L1b1cdc.  v26:= constclass @type ^`java.net.URI` @kind object;
  #L1b1ce0.  v0:= v32 @kind object;
  #L1b1ce4.  v1:= v26 @kind object;
  #L1b1ce8.  if v0 == v1 then goto L1b1d18;
  #L1b1cec.  v0:= v32 @kind object;
  #L1b1cf0.  v0:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L1b1cf4.  v26:= v0;
  #L1b1cf8.  if v26 == 0 then goto L1b1d24;
  #L1b1cfc.  v26:= "android.net.Uri" @kind object;
  #L1b1d00.  v32:= (`java.lang.Class`) v32 @kind object;
  #L1b1d04.  call temp:= `getName`(v32) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1d0a.  v27:= temp @kind object;
  #L1b1d0c.  call temp:= `equals`(v26, v27) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1b1d12.  v26:= temp;
  #L1b1d14.  if v26 == 0 then goto L1b1d24;
  #L1b1d18.  v26:= new `retrofit2.ParameterHandler$RelativeUrl`;
  #L1b1d1c.  call `<init>`(v26) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.<init>:()V` @kind direct;
  #L1b1d22.  return v26 @kind object;
  #L1b1d24.  v26:= "@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type." @kind object;
  #L1b1d28.  v27:= 0I;
  #L1b1d2c.  v0:= v27;
  #L1b1d30.  v0:= new `java.lang.Object`[v0];
  #L1b1d34.  v27:= v0 @kind object;
  #L1b1d38.  v0:= v30 @kind object;
  #L1b1d3c.  v1:= v31;
  #L1b1d40.  v2:= v26 @kind object;
  #L1b1d44.  v3:= v27 @kind object;
  #L1b1d48.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1d4e.  v26:= temp @kind object;
  #L1b1d50.  throw v26;
  #L1b1d52.  v0:= v34 @kind object;
  #L1b1d56.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Path` @kind boolean;
  #L1b1d5a.  v26:= v0;
  #L1b1d5e.  if v26 == 0 then goto L1b1e9c;
  #L1b1d62.  v0:= v30 @kind object;
  #L1b1d66.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L1b1d6a.  v26:= v0;
  #L1b1d6e.  if v26 == 0 then goto L1b1da0;
  #L1b1d72.  v26:= "A @Path parameter must not come after a @Query." @kind object;
  #L1b1d76.  v27:= 0I;
  #L1b1d7a.  v0:= v27;
  #L1b1d7e.  v0:= new `java.lang.Object`[v0];
  #L1b1d82.  v27:= v0 @kind object;
  #L1b1d86.  v0:= v30 @kind object;
  #L1b1d8a.  v1:= v31;
  #L1b1d8e.  v2:= v26 @kind object;
  #L1b1d92.  v3:= v27 @kind object;
  #L1b1d96.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1d9c.  v26:= temp @kind object;
  #L1b1d9e.  throw v26;
  #L1b1da0.  v0:= v30 @kind object;
  #L1b1da4.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b1da8.  v26:= v0;
  #L1b1dac.  if v26 == 0 then goto L1b1dde;
  #L1b1db0.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L1b1db4.  v27:= 0I;
  #L1b1db8.  v0:= v27;
  #L1b1dbc.  v0:= new `java.lang.Object`[v0];
  #L1b1dc0.  v27:= v0 @kind object;
  #L1b1dc4.  v0:= v30 @kind object;
  #L1b1dc8.  v1:= v31;
  #L1b1dcc.  v2:= v26 @kind object;
  #L1b1dd0.  v3:= v27 @kind object;
  #L1b1dd4.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1dda.  v26:= temp @kind object;
  #L1b1ddc.  throw v26;
  #L1b1dde.  v0:= v30 @kind object;
  #L1b1de2.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b1de6.  v26:= v0 @kind object;
  #L1b1dea.  if v26 != 0 then goto L1b1e30;
  #L1b1dee.  v26:= "@Path can only be used with relative url on @%s" @kind object;
  #L1b1df2.  v27:= 1I;
  #L1b1df6.  v0:= v27;
  #L1b1dfa.  v0:= new `java.lang.Object`[v0];
  #L1b1dfe.  v27:= v0 @kind object;
  #L1b1e02.  v28:= 0I;
  #L1b1e06.  v0:= v30 @kind object;
  #L1b1e0a.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b1e0e.  v29:= v0 @kind object;
  #L1b1e12.  v27[v28]:= v29 @kind object;
  #L1b1e16.  v0:= v30 @kind object;
  #L1b1e1a.  v1:= v31;
  #L1b1e1e.  v2:= v26 @kind object;
  #L1b1e22.  v3:= v27 @kind object;
  #L1b1e26.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1e2c.  v26:= temp @kind object;
  #L1b1e2e.  throw v26;
  #L1b1e30.  v26:= 1I;
  #L1b1e34.  v0:= v26;
  #L1b1e38.  v1:= v30 @kind object;
  #L1b1e3c.  v1.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` := v0 @kind boolean;
  #L1b1e40.  v20:= v34 @kind object;
  #L1b1e44.  v20:= (`retrofit2.http.Path`) v20 @kind object;
  #L1b1e48.  call temp:= `value`(v20) @signature `Lretrofit2/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L1b1e4e.  v15:= temp @kind object;
  #L1b1e50.  v0:= v30 @kind object;
  #L1b1e54.  v1:= v31;
  #L1b1e58.  call `validatePathName`(v0, v1, v15) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @kind direct;
  #L1b1e5e.  v0:= v30 @kind object;
  #L1b1e62.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1e66.  v26:= v0 @kind object;
  #L1b1e6a.  v0:= v26 @kind object;
  #L1b1e6e.  v1:= v32 @kind object;
  #L1b1e72.  v2:= v33 @kind object;
  #L1b1e76.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1e7c.  v5:= temp @kind object;
  #L1b1e7e.  v26:= new `retrofit2.ParameterHandler$Path`;
  #L1b1e82.  call temp:= `encoded`(v20) @signature `Lretrofit2/http/Path;.encoded:()Z` @kind interface;
  #L1b1e88.  v27:= temp;
  #L1b1e8a.  v0:= v26 @kind object;
  #L1b1e8e.  v1:= v27;
  #L1b1e92.  call `<init>`(v0, v15, v5, v1) @signature `Lretrofit2/ParameterHandler$Path;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b1e98.  goto L1b1d22;
  #L1b1e9c.  v0:= v34 @kind object;
  #L1b1ea0.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Query` @kind boolean;
  #L1b1ea4.  v26:= v0;
  #L1b1ea8.  if v26 == 0 then goto L1b204e;
  #L1b1eac.  v21:= v34 @kind object;
  #L1b1eb0.  v21:= (`retrofit2.http.Query`) v21 @kind object;
  #L1b1eb4.  call temp:= `value`(v21) @signature `Lretrofit2/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L1b1eba.  v15:= temp @kind object;
  #L1b1ebc.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/Query;.encoded:()Z` @kind interface;
  #L1b1ec2.  v8:= temp;
  #L1b1ec4.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b1eca.  v22:= temp @kind object;
  #L1b1ecc.  v26:= 1I;
  #L1b1ed0.  v0:= v26;
  #L1b1ed4.  v1:= v30 @kind object;
  #L1b1ed8.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L1b1edc.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b1ee0.  v0:= v26 @kind object;
  #L1b1ee4.  v1:= v22 @kind object;
  #L1b1ee8.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b1eee.  v26:= temp;
  #L1b1ef0.  if v26 == 0 then goto L1b1fca;
  #L1b1ef4.  v0:= v32 @kind object;
  #L1b1ef8.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b1efc.  v26:= v0;
  #L1b1f00.  if v26 != 0 then goto L1b1f78;
  #L1b1f04.  v26:= new `java.lang.StringBuilder`;
  #L1b1f08.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1f0e.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1f14.  v27:= temp @kind object;
  #L1b1f16.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1f1c.  v26:= temp @kind object;
  #L1b1f1e.  v27:= " must include generic type (e.g., " @kind object;
  #L1b1f22.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1f28.  v26:= temp @kind object;
  #L1b1f2a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b1f30.  v27:= temp @kind object;
  #L1b1f32.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1f38.  v26:= temp @kind object;
  #L1b1f3a.  v27:= "<String>)" @kind object;
  #L1b1f3e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1f44.  v26:= temp @kind object;
  #L1b1f46.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1f4c.  v26:= temp @kind object;
  #L1b1f4e.  v27:= 0I;
  #L1b1f52.  v0:= v27;
  #L1b1f56.  v0:= new `java.lang.Object`[v0];
  #L1b1f5a.  v27:= v0 @kind object;
  #L1b1f5e.  v0:= v30 @kind object;
  #L1b1f62.  v1:= v31;
  #L1b1f66.  v2:= v26 @kind object;
  #L1b1f6a.  v3:= v27 @kind object;
  #L1b1f6e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b1f74.  v26:= temp @kind object;
  #L1b1f76.  throw v26;
  #L1b1f78.  v16:= v32 @kind object;
  #L1b1f7c.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b1f80.  v26:= 0I;
  #L1b1f84.  v0:= v26;
  #L1b1f88.  v1:= v16 @kind object;
  #L1b1f8c.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b1f92.  v12:= temp @kind object;
  #L1b1f94.  v0:= v30 @kind object;
  #L1b1f98.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1f9c.  v26:= v0 @kind object;
  #L1b1fa0.  v0:= v26 @kind object;
  #L1b1fa4.  v1:= v33 @kind object;
  #L1b1fa8.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b1fae.  v5:= temp @kind object;
  #L1b1fb0.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b1fb4.  v0:= v26 @kind object;
  #L1b1fb8.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b1fbe.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Query;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b1fc4.  v26:= temp @kind object;
  #L1b1fc6.  goto L1b1d22;
  #L1b1fca.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b1fd0.  v26:= temp;
  #L1b1fd2.  if v26 == 0 then goto L1b201c;
  #L1b1fd6.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b1fdc.  v26:= temp @kind object;
  #L1b1fde.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b1fe4.  v4:= temp @kind object;
  #L1b1fe6.  v0:= v30 @kind object;
  #L1b1fea.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b1fee.  v26:= v0 @kind object;
  #L1b1ff2.  v0:= v26 @kind object;
  #L1b1ff6.  v1:= v33 @kind object;
  #L1b1ffa.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2000.  v5:= temp @kind object;
  #L1b2002.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b2006.  v0:= v26 @kind object;
  #L1b200a.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b2010.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Query;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2016.  v26:= temp @kind object;
  #L1b2018.  goto L1b1d22;
  #L1b201c.  v0:= v30 @kind object;
  #L1b2020.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2024.  v26:= v0 @kind object;
  #L1b2028.  v0:= v26 @kind object;
  #L1b202c.  v1:= v32 @kind object;
  #L1b2030.  v2:= v33 @kind object;
  #L1b2034.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b203a.  v5:= temp @kind object;
  #L1b203c.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L1b2040.  v0:= v26 @kind object;
  #L1b2044.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b204a.  goto L1b1d22;
  #L1b204e.  v0:= v34 @kind object;
  #L1b2052.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryName` @kind boolean;
  #L1b2056.  v26:= v0;
  #L1b205a.  if v26 == 0 then goto L1b21f8;
  #L1b205e.  v21:= v34 @kind object;
  #L1b2062.  v21:= (`retrofit2.http.QueryName`) v21 @kind object;
  #L1b2066.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/QueryName;.encoded:()Z` @kind interface;
  #L1b206c.  v8:= temp;
  #L1b206e.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2074.  v22:= temp @kind object;
  #L1b2076.  v26:= 1I;
  #L1b207a.  v0:= v26;
  #L1b207e.  v1:= v30 @kind object;
  #L1b2082.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L1b2086.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b208a.  v0:= v26 @kind object;
  #L1b208e.  v1:= v22 @kind object;
  #L1b2092.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2098.  v26:= temp;
  #L1b209a.  if v26 == 0 then goto L1b2174;
  #L1b209e.  v0:= v32 @kind object;
  #L1b20a2.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b20a6.  v26:= v0;
  #L1b20aa.  if v26 != 0 then goto L1b2122;
  #L1b20ae.  v26:= new `java.lang.StringBuilder`;
  #L1b20b2.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b20b8.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b20be.  v27:= temp @kind object;
  #L1b20c0.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b20c6.  v26:= temp @kind object;
  #L1b20c8.  v27:= " must include generic type (e.g., " @kind object;
  #L1b20cc.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b20d2.  v26:= temp @kind object;
  #L1b20d4.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b20da.  v27:= temp @kind object;
  #L1b20dc.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b20e2.  v26:= temp @kind object;
  #L1b20e4.  v27:= "<String>)" @kind object;
  #L1b20e8.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b20ee.  v26:= temp @kind object;
  #L1b20f0.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b20f6.  v26:= temp @kind object;
  #L1b20f8.  v27:= 0I;
  #L1b20fc.  v0:= v27;
  #L1b2100.  v0:= new `java.lang.Object`[v0];
  #L1b2104.  v27:= v0 @kind object;
  #L1b2108.  v0:= v30 @kind object;
  #L1b210c.  v1:= v31;
  #L1b2110.  v2:= v26 @kind object;
  #L1b2114.  v3:= v27 @kind object;
  #L1b2118.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b211e.  v26:= temp @kind object;
  #L1b2120.  throw v26;
  #L1b2122.  v16:= v32 @kind object;
  #L1b2126.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b212a.  v26:= 0I;
  #L1b212e.  v0:= v26;
  #L1b2132.  v1:= v16 @kind object;
  #L1b2136.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b213c.  v12:= temp @kind object;
  #L1b213e.  v0:= v30 @kind object;
  #L1b2142.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2146.  v26:= v0 @kind object;
  #L1b214a.  v0:= v26 @kind object;
  #L1b214e.  v1:= v33 @kind object;
  #L1b2152.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2158.  v5:= temp @kind object;
  #L1b215a.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b215e.  v0:= v26 @kind object;
  #L1b2162.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b2168.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$QueryName;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b216e.  v26:= temp @kind object;
  #L1b2170.  goto L1b1d22;
  #L1b2174.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b217a.  v26:= temp;
  #L1b217c.  if v26 == 0 then goto L1b21c6;
  #L1b2180.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b2186.  v26:= temp @kind object;
  #L1b2188.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b218e.  v4:= temp @kind object;
  #L1b2190.  v0:= v30 @kind object;
  #L1b2194.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2198.  v26:= v0 @kind object;
  #L1b219c.  v0:= v26 @kind object;
  #L1b21a0.  v1:= v33 @kind object;
  #L1b21a4.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b21aa.  v5:= temp @kind object;
  #L1b21ac.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b21b0.  v0:= v26 @kind object;
  #L1b21b4.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b21ba.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$QueryName;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b21c0.  v26:= temp @kind object;
  #L1b21c2.  goto L1b1d22;
  #L1b21c6.  v0:= v30 @kind object;
  #L1b21ca.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b21ce.  v26:= v0 @kind object;
  #L1b21d2.  v0:= v26 @kind object;
  #L1b21d6.  v1:= v32 @kind object;
  #L1b21da.  v2:= v33 @kind object;
  #L1b21de.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b21e4.  v5:= temp @kind object;
  #L1b21e6.  v26:= new `retrofit2.ParameterHandler$QueryName`;
  #L1b21ea.  v0:= v26 @kind object;
  #L1b21ee.  call `<init>`(v0, v5, v8) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b21f4.  goto L1b1d22;
  #L1b21f8.  v0:= v34 @kind object;
  #L1b21fc.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryMap` @kind boolean;
  #L1b2200.  v26:= v0;
  #L1b2204.  if v26 == 0 then goto L1b237e;
  #L1b2208.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b220e.  v22:= temp @kind object;
  #L1b2210.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b2214.  v0:= v26 @kind object;
  #L1b2218.  v1:= v22 @kind object;
  #L1b221c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2222.  v26:= temp;
  #L1b2224.  if v26 != 0 then goto L1b2256;
  #L1b2228.  v26:= "@QueryMap parameter type must be Map." @kind object;
  #L1b222c.  v27:= 0I;
  #L1b2230.  v0:= v27;
  #L1b2234.  v0:= new `java.lang.Object`[v0];
  #L1b2238.  v27:= v0 @kind object;
  #L1b223c.  v0:= v30 @kind object;
  #L1b2240.  v1:= v31;
  #L1b2244.  v2:= v26 @kind object;
  #L1b2248.  v3:= v27 @kind object;
  #L1b224c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2252.  v26:= temp @kind object;
  #L1b2254.  throw v26;
  #L1b2256.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b225a.  v0:= v32 @kind object;
  #L1b225e.  v1:= v22 @kind object;
  #L1b2262.  v2:= v26 @kind object;
  #L1b2266.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b226c.  v14:= temp @kind object;
  #L1b226e.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2272.  v26:= v0;
  #L1b2276.  if v26 != 0 then goto L1b22a8;
  #L1b227a.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b227e.  v27:= 0I;
  #L1b2282.  v0:= v27;
  #L1b2286.  v0:= new `java.lang.Object`[v0];
  #L1b228a.  v27:= v0 @kind object;
  #L1b228e.  v0:= v30 @kind object;
  #L1b2292.  v1:= v31;
  #L1b2296.  v2:= v26 @kind object;
  #L1b229a.  v3:= v27 @kind object;
  #L1b229e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b22a4.  v26:= temp @kind object;
  #L1b22a6.  throw v26;
  #L1b22a8.  v16:= v14 @kind object;
  #L1b22ac.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b22b0.  v26:= 0I;
  #L1b22b4.  v0:= v26;
  #L1b22b8.  v1:= v16 @kind object;
  #L1b22bc.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b22c2.  v13:= temp @kind object;
  #L1b22c4.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b22c8.  v0:= v26 @kind object;
  #L1b22cc.  if v0 == v13 then goto L1b2324;
  #L1b22d0.  v26:= new `java.lang.StringBuilder`;
  #L1b22d4.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b22da.  v27:= "@QueryMap keys must be of type String: " @kind object;
  #L1b22de.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b22e4.  v26:= temp @kind object;
  #L1b22e6.  v0:= v26 @kind object;
  #L1b22ea.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b22f0.  v26:= temp @kind object;
  #L1b22f2.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b22f8.  v26:= temp @kind object;
  #L1b22fa.  v27:= 0I;
  #L1b22fe.  v0:= v27;
  #L1b2302.  v0:= new `java.lang.Object`[v0];
  #L1b2306.  v27:= v0 @kind object;
  #L1b230a.  v0:= v30 @kind object;
  #L1b230e.  v1:= v31;
  #L1b2312.  v2:= v26 @kind object;
  #L1b2316.  v3:= v27 @kind object;
  #L1b231a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2320.  v26:= temp @kind object;
  #L1b2322.  throw v26;
  #L1b2324.  v26:= 1I;
  #L1b2328.  v0:= v26;
  #L1b232c.  v1:= v16 @kind object;
  #L1b2330.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2336.  v25:= temp @kind object;
  #L1b2338.  v0:= v30 @kind object;
  #L1b233c.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2340.  v26:= v0 @kind object;
  #L1b2344.  v0:= v26 @kind object;
  #L1b2348.  v1:= v25 @kind object;
  #L1b234c.  v2:= v33 @kind object;
  #L1b2350.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2356.  v23:= temp @kind object;
  #L1b2358.  v26:= new `retrofit2.ParameterHandler$QueryMap`;
  #L1b235c.  v34:= (`retrofit2.http.QueryMap`) v34 @kind object;
  #L1b2360.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/QueryMap;.encoded:()Z` @kind interface;
  #L1b2366.  v27:= temp;
  #L1b2368.  v0:= v26 @kind object;
  #L1b236c.  v1:= v23 @kind object;
  #L1b2370.  v2:= v27;
  #L1b2374.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b237a.  goto L1b1d22;
  #L1b237e.  v0:= v34 @kind object;
  #L1b2382.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Header` @kind boolean;
  #L1b2386.  v26:= v0;
  #L1b238a.  if v26 == 0 then goto L1b2518;
  #L1b238e.  v10:= v34 @kind object;
  #L1b2392.  v10:= (`retrofit2.http.Header`) v10 @kind object;
  #L1b2396.  call temp:= `value`(v10) @signature `Lretrofit2/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L1b239c.  v15:= temp @kind object;
  #L1b239e.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b23a4.  v22:= temp @kind object;
  #L1b23a6.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b23aa.  v0:= v26 @kind object;
  #L1b23ae.  v1:= v22 @kind object;
  #L1b23b2.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b23b8.  v26:= temp;
  #L1b23ba.  if v26 == 0 then goto L1b2494;
  #L1b23be.  v0:= v32 @kind object;
  #L1b23c2.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b23c6.  v26:= v0;
  #L1b23ca.  if v26 != 0 then goto L1b2442;
  #L1b23ce.  v26:= new `java.lang.StringBuilder`;
  #L1b23d2.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b23d8.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b23de.  v27:= temp @kind object;
  #L1b23e0.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b23e6.  v26:= temp @kind object;
  #L1b23e8.  v27:= " must include generic type (e.g., " @kind object;
  #L1b23ec.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b23f2.  v26:= temp @kind object;
  #L1b23f4.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b23fa.  v27:= temp @kind object;
  #L1b23fc.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2402.  v26:= temp @kind object;
  #L1b2404.  v27:= "<String>)" @kind object;
  #L1b2408.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b240e.  v26:= temp @kind object;
  #L1b2410.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2416.  v26:= temp @kind object;
  #L1b2418.  v27:= 0I;
  #L1b241c.  v0:= v27;
  #L1b2420.  v0:= new `java.lang.Object`[v0];
  #L1b2424.  v27:= v0 @kind object;
  #L1b2428.  v0:= v30 @kind object;
  #L1b242c.  v1:= v31;
  #L1b2430.  v2:= v26 @kind object;
  #L1b2434.  v3:= v27 @kind object;
  #L1b2438.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b243e.  v26:= temp @kind object;
  #L1b2440.  throw v26;
  #L1b2442.  v16:= v32 @kind object;
  #L1b2446.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b244a.  v26:= 0I;
  #L1b244e.  v0:= v26;
  #L1b2452.  v1:= v16 @kind object;
  #L1b2456.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b245c.  v12:= temp @kind object;
  #L1b245e.  v0:= v30 @kind object;
  #L1b2462.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2466.  v26:= v0 @kind object;
  #L1b246a.  v0:= v26 @kind object;
  #L1b246e.  v1:= v33 @kind object;
  #L1b2472.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2478.  v5:= temp @kind object;
  #L1b247a.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b247e.  v0:= v26 @kind object;
  #L1b2482.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b2488.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Header;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b248e.  v26:= temp @kind object;
  #L1b2490.  goto L1b1d22;
  #L1b2494.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b249a.  v26:= temp;
  #L1b249c.  if v26 == 0 then goto L1b24e6;
  #L1b24a0.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b24a6.  v26:= temp @kind object;
  #L1b24a8.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b24ae.  v4:= temp @kind object;
  #L1b24b0.  v0:= v30 @kind object;
  #L1b24b4.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b24b8.  v26:= v0 @kind object;
  #L1b24bc.  v0:= v26 @kind object;
  #L1b24c0.  v1:= v33 @kind object;
  #L1b24c4.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b24ca.  v5:= temp @kind object;
  #L1b24cc.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b24d0.  v0:= v26 @kind object;
  #L1b24d4.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b24da.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Header;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b24e0.  v26:= temp @kind object;
  #L1b24e2.  goto L1b1d22;
  #L1b24e6.  v0:= v30 @kind object;
  #L1b24ea.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b24ee.  v26:= v0 @kind object;
  #L1b24f2.  v0:= v26 @kind object;
  #L1b24f6.  v1:= v32 @kind object;
  #L1b24fa.  v2:= v33 @kind object;
  #L1b24fe.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2504.  v5:= temp @kind object;
  #L1b2506.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L1b250a.  v0:= v26 @kind object;
  #L1b250e.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L1b2514.  goto L1b1d22;
  #L1b2518.  v0:= v34 @kind object;
  #L1b251c.  v0:= instanceof @variable v0 @type ^`retrofit2.http.HeaderMap` @kind boolean;
  #L1b2520.  v26:= v0;
  #L1b2524.  if v26 == 0 then goto L1b268e;
  #L1b2528.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b252e.  v22:= temp @kind object;
  #L1b2530.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b2534.  v0:= v26 @kind object;
  #L1b2538.  v1:= v22 @kind object;
  #L1b253c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2542.  v26:= temp;
  #L1b2544.  if v26 != 0 then goto L1b2576;
  #L1b2548.  v26:= "@HeaderMap parameter type must be Map." @kind object;
  #L1b254c.  v27:= 0I;
  #L1b2550.  v0:= v27;
  #L1b2554.  v0:= new `java.lang.Object`[v0];
  #L1b2558.  v27:= v0 @kind object;
  #L1b255c.  v0:= v30 @kind object;
  #L1b2560.  v1:= v31;
  #L1b2564.  v2:= v26 @kind object;
  #L1b2568.  v3:= v27 @kind object;
  #L1b256c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2572.  v26:= temp @kind object;
  #L1b2574.  throw v26;
  #L1b2576.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b257a.  v0:= v32 @kind object;
  #L1b257e.  v1:= v22 @kind object;
  #L1b2582.  v2:= v26 @kind object;
  #L1b2586.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b258c.  v14:= temp @kind object;
  #L1b258e.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2592.  v26:= v0;
  #L1b2596.  if v26 != 0 then goto L1b25c8;
  #L1b259a.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b259e.  v27:= 0I;
  #L1b25a2.  v0:= v27;
  #L1b25a6.  v0:= new `java.lang.Object`[v0];
  #L1b25aa.  v27:= v0 @kind object;
  #L1b25ae.  v0:= v30 @kind object;
  #L1b25b2.  v1:= v31;
  #L1b25b6.  v2:= v26 @kind object;
  #L1b25ba.  v3:= v27 @kind object;
  #L1b25be.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b25c4.  v26:= temp @kind object;
  #L1b25c6.  throw v26;
  #L1b25c8.  v16:= v14 @kind object;
  #L1b25cc.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b25d0.  v26:= 0I;
  #L1b25d4.  v0:= v26;
  #L1b25d8.  v1:= v16 @kind object;
  #L1b25dc.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b25e2.  v13:= temp @kind object;
  #L1b25e4.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b25e8.  v0:= v26 @kind object;
  #L1b25ec.  if v0 == v13 then goto L1b2644;
  #L1b25f0.  v26:= new `java.lang.StringBuilder`;
  #L1b25f4.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b25fa.  v27:= "@HeaderMap keys must be of type String: " @kind object;
  #L1b25fe.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2604.  v26:= temp @kind object;
  #L1b2606.  v0:= v26 @kind object;
  #L1b260a.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2610.  v26:= temp @kind object;
  #L1b2612.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2618.  v26:= temp @kind object;
  #L1b261a.  v27:= 0I;
  #L1b261e.  v0:= v27;
  #L1b2622.  v0:= new `java.lang.Object`[v0];
  #L1b2626.  v27:= v0 @kind object;
  #L1b262a.  v0:= v30 @kind object;
  #L1b262e.  v1:= v31;
  #L1b2632.  v2:= v26 @kind object;
  #L1b2636.  v3:= v27 @kind object;
  #L1b263a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2640.  v26:= temp @kind object;
  #L1b2642.  throw v26;
  #L1b2644.  v26:= 1I;
  #L1b2648.  v0:= v26;
  #L1b264c.  v1:= v16 @kind object;
  #L1b2650.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2656.  v25:= temp @kind object;
  #L1b2658.  v0:= v30 @kind object;
  #L1b265c.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2660.  v26:= v0 @kind object;
  #L1b2664.  v0:= v26 @kind object;
  #L1b2668.  v1:= v25 @kind object;
  #L1b266c.  v2:= v33 @kind object;
  #L1b2670.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2676.  v23:= temp @kind object;
  #L1b2678.  v26:= new `retrofit2.ParameterHandler$HeaderMap`;
  #L1b267c.  v0:= v26 @kind object;
  #L1b2680.  v1:= v23 @kind object;
  #L1b2684.  call `<init>`(v0, v1) @signature `Lretrofit2/ParameterHandler$HeaderMap;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1b268a.  goto L1b1d22;
  #L1b268e.  v0:= v34 @kind object;
  #L1b2692.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Field` @kind boolean;
  #L1b2696.  v26:= v0;
  #L1b269a.  if v26 == 0 then goto L1b287e;
  #L1b269e.  v0:= v30 @kind object;
  #L1b26a2.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b26a6.  v26:= v0;
  #L1b26aa.  if v26 != 0 then goto L1b26dc;
  #L1b26ae.  v26:= "@Field parameters can only be used with form encoding." @kind object;
  #L1b26b2.  v27:= 0I;
  #L1b26b6.  v0:= v27;
  #L1b26ba.  v0:= new `java.lang.Object`[v0];
  #L1b26be.  v27:= v0 @kind object;
  #L1b26c2.  v0:= v30 @kind object;
  #L1b26c6.  v1:= v31;
  #L1b26ca.  v2:= v26 @kind object;
  #L1b26ce.  v3:= v27 @kind object;
  #L1b26d2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b26d8.  v26:= temp @kind object;
  #L1b26da.  throw v26;
  #L1b26dc.  v9:= v34 @kind object;
  #L1b26e0.  v9:= (`retrofit2.http.Field`) v9 @kind object;
  #L1b26e4.  call temp:= `value`(v9) @signature `Lretrofit2/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L1b26ea.  v15:= temp @kind object;
  #L1b26ec.  call temp:= `encoded`(v9) @signature `Lretrofit2/http/Field;.encoded:()Z` @kind interface;
  #L1b26f2.  v8:= temp;
  #L1b26f4.  v26:= 1I;
  #L1b26f8.  v0:= v26;
  #L1b26fc.  v1:= v30 @kind object;
  #L1b2700.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L1b2704.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b270a.  v22:= temp @kind object;
  #L1b270c.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b2710.  v0:= v26 @kind object;
  #L1b2714.  v1:= v22 @kind object;
  #L1b2718.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b271e.  v26:= temp;
  #L1b2720.  if v26 == 0 then goto L1b27fa;
  #L1b2724.  v0:= v32 @kind object;
  #L1b2728.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b272c.  v26:= v0;
  #L1b2730.  if v26 != 0 then goto L1b27a8;
  #L1b2734.  v26:= new `java.lang.StringBuilder`;
  #L1b2738.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b273e.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2744.  v27:= temp @kind object;
  #L1b2746.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b274c.  v26:= temp @kind object;
  #L1b274e.  v27:= " must include generic type (e.g., " @kind object;
  #L1b2752.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2758.  v26:= temp @kind object;
  #L1b275a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2760.  v27:= temp @kind object;
  #L1b2762.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2768.  v26:= temp @kind object;
  #L1b276a.  v27:= "<String>)" @kind object;
  #L1b276e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2774.  v26:= temp @kind object;
  #L1b2776.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b277c.  v26:= temp @kind object;
  #L1b277e.  v27:= 0I;
  #L1b2782.  v0:= v27;
  #L1b2786.  v0:= new `java.lang.Object`[v0];
  #L1b278a.  v27:= v0 @kind object;
  #L1b278e.  v0:= v30 @kind object;
  #L1b2792.  v1:= v31;
  #L1b2796.  v2:= v26 @kind object;
  #L1b279a.  v3:= v27 @kind object;
  #L1b279e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b27a4.  v26:= temp @kind object;
  #L1b27a6.  throw v26;
  #L1b27a8.  v16:= v32 @kind object;
  #L1b27ac.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b27b0.  v26:= 0I;
  #L1b27b4.  v0:= v26;
  #L1b27b8.  v1:= v16 @kind object;
  #L1b27bc.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b27c2.  v12:= temp @kind object;
  #L1b27c4.  v0:= v30 @kind object;
  #L1b27c8.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b27cc.  v26:= v0 @kind object;
  #L1b27d0.  v0:= v26 @kind object;
  #L1b27d4.  v1:= v33 @kind object;
  #L1b27d8.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b27de.  v5:= temp @kind object;
  #L1b27e0.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b27e4.  v0:= v26 @kind object;
  #L1b27e8.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b27ee.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Field;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b27f4.  v26:= temp @kind object;
  #L1b27f6.  goto L1b1d22;
  #L1b27fa.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2800.  v26:= temp;
  #L1b2802.  if v26 == 0 then goto L1b284c;
  #L1b2806.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b280c.  v26:= temp @kind object;
  #L1b280e.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b2814.  v4:= temp @kind object;
  #L1b2816.  v0:= v30 @kind object;
  #L1b281a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b281e.  v26:= v0 @kind object;
  #L1b2822.  v0:= v26 @kind object;
  #L1b2826.  v1:= v33 @kind object;
  #L1b282a.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2830.  v5:= temp @kind object;
  #L1b2832.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b2836.  v0:= v26 @kind object;
  #L1b283a.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b2840.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Field;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2846.  v26:= temp @kind object;
  #L1b2848.  goto L1b1d22;
  #L1b284c.  v0:= v30 @kind object;
  #L1b2850.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2854.  v26:= v0 @kind object;
  #L1b2858.  v0:= v26 @kind object;
  #L1b285c.  v1:= v32 @kind object;
  #L1b2860.  v2:= v33 @kind object;
  #L1b2864.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b286a.  v5:= temp @kind object;
  #L1b286c.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L1b2870.  v0:= v26 @kind object;
  #L1b2874.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L1b287a.  goto L1b1d22;
  #L1b287e.  v0:= v34 @kind object;
  #L1b2882.  v0:= instanceof @variable v0 @type ^`retrofit2.http.FieldMap` @kind boolean;
  #L1b2886.  v26:= v0;
  #L1b288a.  if v26 == 0 then goto L1b2a52;
  #L1b288e.  v0:= v30 @kind object;
  #L1b2892.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b2896.  v26:= v0;
  #L1b289a.  if v26 != 0 then goto L1b28cc;
  #L1b289e.  v26:= "@FieldMap parameters can only be used with form encoding." @kind object;
  #L1b28a2.  v27:= 0I;
  #L1b28a6.  v0:= v27;
  #L1b28aa.  v0:= new `java.lang.Object`[v0];
  #L1b28ae.  v27:= v0 @kind object;
  #L1b28b2.  v0:= v30 @kind object;
  #L1b28b6.  v1:= v31;
  #L1b28ba.  v2:= v26 @kind object;
  #L1b28be.  v3:= v27 @kind object;
  #L1b28c2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b28c8.  v26:= temp @kind object;
  #L1b28ca.  throw v26;
  #L1b28cc.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b28d2.  v22:= temp @kind object;
  #L1b28d4.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b28d8.  v0:= v26 @kind object;
  #L1b28dc.  v1:= v22 @kind object;
  #L1b28e0.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b28e6.  v26:= temp;
  #L1b28e8.  if v26 != 0 then goto L1b291a;
  #L1b28ec.  v26:= "@FieldMap parameter type must be Map." @kind object;
  #L1b28f0.  v27:= 0I;
  #L1b28f4.  v0:= v27;
  #L1b28f8.  v0:= new `java.lang.Object`[v0];
  #L1b28fc.  v27:= v0 @kind object;
  #L1b2900.  v0:= v30 @kind object;
  #L1b2904.  v1:= v31;
  #L1b2908.  v2:= v26 @kind object;
  #L1b290c.  v3:= v27 @kind object;
  #L1b2910.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2916.  v26:= temp @kind object;
  #L1b2918.  throw v26;
  #L1b291a.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b291e.  v0:= v32 @kind object;
  #L1b2922.  v1:= v22 @kind object;
  #L1b2926.  v2:= v26 @kind object;
  #L1b292a.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2930.  v14:= temp @kind object;
  #L1b2932.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2936.  v26:= v0;
  #L1b293a.  if v26 != 0 then goto L1b296c;
  #L1b293e.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b2942.  v27:= 0I;
  #L1b2946.  v0:= v27;
  #L1b294a.  v0:= new `java.lang.Object`[v0];
  #L1b294e.  v27:= v0 @kind object;
  #L1b2952.  v0:= v30 @kind object;
  #L1b2956.  v1:= v31;
  #L1b295a.  v2:= v26 @kind object;
  #L1b295e.  v3:= v27 @kind object;
  #L1b2962.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2968.  v26:= temp @kind object;
  #L1b296a.  throw v26;
  #L1b296c.  v16:= v14 @kind object;
  #L1b2970.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2974.  v26:= 0I;
  #L1b2978.  v0:= v26;
  #L1b297c.  v1:= v16 @kind object;
  #L1b2980.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2986.  v13:= temp @kind object;
  #L1b2988.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b298c.  v0:= v26 @kind object;
  #L1b2990.  if v0 == v13 then goto L1b29e8;
  #L1b2994.  v26:= new `java.lang.StringBuilder`;
  #L1b2998.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b299e.  v27:= "@FieldMap keys must be of type String: " @kind object;
  #L1b29a2.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b29a8.  v26:= temp @kind object;
  #L1b29aa.  v0:= v26 @kind object;
  #L1b29ae.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b29b4.  v26:= temp @kind object;
  #L1b29b6.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b29bc.  v26:= temp @kind object;
  #L1b29be.  v27:= 0I;
  #L1b29c2.  v0:= v27;
  #L1b29c6.  v0:= new `java.lang.Object`[v0];
  #L1b29ca.  v27:= v0 @kind object;
  #L1b29ce.  v0:= v30 @kind object;
  #L1b29d2.  v1:= v31;
  #L1b29d6.  v2:= v26 @kind object;
  #L1b29da.  v3:= v27 @kind object;
  #L1b29de.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b29e4.  v26:= temp @kind object;
  #L1b29e6.  throw v26;
  #L1b29e8.  v26:= 1I;
  #L1b29ec.  v0:= v26;
  #L1b29f0.  v1:= v16 @kind object;
  #L1b29f4.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b29fa.  v25:= temp @kind object;
  #L1b29fc.  v0:= v30 @kind object;
  #L1b2a00.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2a04.  v26:= v0 @kind object;
  #L1b2a08.  v0:= v26 @kind object;
  #L1b2a0c.  v1:= v25 @kind object;
  #L1b2a10.  v2:= v33 @kind object;
  #L1b2a14.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2a1a.  v23:= temp @kind object;
  #L1b2a1c.  v26:= 1I;
  #L1b2a20.  v0:= v26;
  #L1b2a24.  v1:= v30 @kind object;
  #L1b2a28.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L1b2a2c.  v26:= new `retrofit2.ParameterHandler$FieldMap`;
  #L1b2a30.  v34:= (`retrofit2.http.FieldMap`) v34 @kind object;
  #L1b2a34.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/FieldMap;.encoded:()Z` @kind interface;
  #L1b2a3a.  v27:= temp;
  #L1b2a3c.  v0:= v26 @kind object;
  #L1b2a40.  v1:= v23 @kind object;
  #L1b2a44.  v2:= v27;
  #L1b2a48.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L1b2a4e.  goto L1b1d22;
  #L1b2a52.  v0:= v34 @kind object;
  #L1b2a56.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Part` @kind boolean;
  #L1b2a5a.  v26:= v0;
  #L1b2a5e.  if v26 == 0 then goto L1b2f88;
  #L1b2a62.  v0:= v30 @kind object;
  #L1b2a66.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b2a6a.  v26:= v0;
  #L1b2a6e.  if v26 != 0 then goto L1b2aa0;
  #L1b2a72.  v26:= "@Part parameters can only be used with multipart encoding." @kind object;
  #L1b2a76.  v27:= 0I;
  #L1b2a7a.  v0:= v27;
  #L1b2a7e.  v0:= new `java.lang.Object`[v0];
  #L1b2a82.  v27:= v0 @kind object;
  #L1b2a86.  v0:= v30 @kind object;
  #L1b2a8a.  v1:= v31;
  #L1b2a8e.  v2:= v26 @kind object;
  #L1b2a92.  v3:= v27 @kind object;
  #L1b2a96.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2a9c.  v26:= temp @kind object;
  #L1b2a9e.  throw v26;
  #L1b2aa0.  v17:= v34 @kind object;
  #L1b2aa4.  v17:= (`retrofit2.http.Part`) v17 @kind object;
  #L1b2aa8.  v26:= 1I;
  #L1b2aac.  v0:= v26;
  #L1b2ab0.  v1:= v30 @kind object;
  #L1b2ab4.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L1b2ab8.  call temp:= `value`(v17) @signature `Lretrofit2/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L1b2abe.  v19:= temp @kind object;
  #L1b2ac0.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2ac6.  v22:= temp @kind object;
  #L1b2ac8.  call temp:= `isEmpty`(v19) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1b2ace.  v26:= temp;
  #L1b2ad0.  if v26 == 0 then goto L1b2c96;
  #L1b2ad4.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b2ad8.  v0:= v26 @kind object;
  #L1b2adc.  v1:= v22 @kind object;
  #L1b2ae0.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2ae6.  v26:= temp;
  #L1b2ae8.  if v26 == 0 then goto L1b2be2;
  #L1b2aec.  v0:= v32 @kind object;
  #L1b2af0.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2af4.  v26:= v0;
  #L1b2af8.  if v26 != 0 then goto L1b2b70;
  #L1b2afc.  v26:= new `java.lang.StringBuilder`;
  #L1b2b00.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2b06.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2b0c.  v27:= temp @kind object;
  #L1b2b0e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2b14.  v26:= temp @kind object;
  #L1b2b16.  v27:= " must include generic type (e.g., " @kind object;
  #L1b2b1a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2b20.  v26:= temp @kind object;
  #L1b2b22.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2b28.  v27:= temp @kind object;
  #L1b2b2a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2b30.  v26:= temp @kind object;
  #L1b2b32.  v27:= "<String>)" @kind object;
  #L1b2b36.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2b3c.  v26:= temp @kind object;
  #L1b2b3e.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2b44.  v26:= temp @kind object;
  #L1b2b46.  v27:= 0I;
  #L1b2b4a.  v0:= v27;
  #L1b2b4e.  v0:= new `java.lang.Object`[v0];
  #L1b2b52.  v27:= v0 @kind object;
  #L1b2b56.  v0:= v30 @kind object;
  #L1b2b5a.  v1:= v31;
  #L1b2b5e.  v2:= v26 @kind object;
  #L1b2b62.  v3:= v27 @kind object;
  #L1b2b66.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2b6c.  v26:= temp @kind object;
  #L1b2b6e.  throw v26;
  #L1b2b70.  v16:= v32 @kind object;
  #L1b2b74.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2b78.  v26:= 0I;
  #L1b2b7c.  v0:= v26;
  #L1b2b80.  v1:= v16 @kind object;
  #L1b2b84.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2b8a.  v12:= temp @kind object;
  #L1b2b8c.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2b90.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2b96.  v27:= temp @kind object;
  #L1b2b98.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2b9e.  v26:= temp;
  #L1b2ba0.  if v26 != 0 then goto L1b2bd2;
  #L1b2ba4.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b2ba8.  v27:= 0I;
  #L1b2bac.  v0:= v27;
  #L1b2bb0.  v0:= new `java.lang.Object`[v0];
  #L1b2bb4.  v27:= v0 @kind object;
  #L1b2bb8.  v0:= v30 @kind object;
  #L1b2bbc.  v1:= v31;
  #L1b2bc0.  v2:= v26 @kind object;
  #L1b2bc4.  v3:= v27 @kind object;
  #L1b2bc8.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2bce.  v26:= temp @kind object;
  #L1b2bd0.  throw v26;
  #L1b2bd2.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b2bd6.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2bdc.  v26:= temp @kind object;
  #L1b2bde.  goto L1b1d22;
  #L1b2be2.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2be8.  v26:= temp;
  #L1b2bea.  if v26 == 0 then goto L1b2c48;
  #L1b2bee.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b2bf4.  v4:= temp @kind object;
  #L1b2bf6.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2bfa.  v0:= v26 @kind object;
  #L1b2bfe.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2c04.  v26:= temp;
  #L1b2c06.  if v26 != 0 then goto L1b2c38;
  #L1b2c0a.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b2c0e.  v27:= 0I;
  #L1b2c12.  v0:= v27;
  #L1b2c16.  v0:= new `java.lang.Object`[v0];
  #L1b2c1a.  v27:= v0 @kind object;
  #L1b2c1e.  v0:= v30 @kind object;
  #L1b2c22.  v1:= v31;
  #L1b2c26.  v2:= v26 @kind object;
  #L1b2c2a.  v3:= v27 @kind object;
  #L1b2c2e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2c34.  v26:= temp @kind object;
  #L1b2c36.  throw v26;
  #L1b2c38.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b2c3c.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2c42.  v26:= temp @kind object;
  #L1b2c44.  goto L1b1d22;
  #L1b2c48.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2c4c.  v0:= v26 @kind object;
  #L1b2c50.  v1:= v22 @kind object;
  #L1b2c54.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2c5a.  v26:= temp;
  #L1b2c5c.  if v26 == 0 then goto L1b2c68;
  #L1b2c60.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L1b2c64.  goto L1b1d22;
  #L1b2c68.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L1b2c6c.  v27:= 0I;
  #L1b2c70.  v0:= v27;
  #L1b2c74.  v0:= new `java.lang.Object`[v0];
  #L1b2c78.  v27:= v0 @kind object;
  #L1b2c7c.  v0:= v30 @kind object;
  #L1b2c80.  v1:= v31;
  #L1b2c84.  v2:= v26 @kind object;
  #L1b2c88.  v3:= v27 @kind object;
  #L1b2c8c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2c92.  v26:= temp @kind object;
  #L1b2c94.  throw v26;
  #L1b2c96.  v26:= 4I;
  #L1b2c9a.  v0:= v26;
  #L1b2c9e.  v0:= new `java.lang.String`[v0];
  #L1b2ca2.  v26:= v0 @kind object;
  #L1b2ca6.  v27:= 0I;
  #L1b2caa.  v28:= "Content-Disposition" @kind object;
  #L1b2cae.  v26[v27]:= v28 @kind object;
  #L1b2cb2.  v27:= 1I;
  #L1b2cb6.  v28:= new `java.lang.StringBuilder`;
  #L1b2cba.  call `<init>`(v28) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2cc0.  v29:= "form-data; name=\"" @kind object;
  #L1b2cc4.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2cca.  v28:= temp @kind object;
  #L1b2ccc.  v0:= v28 @kind object;
  #L1b2cd0.  v1:= v19 @kind object;
  #L1b2cd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2cda.  v28:= temp @kind object;
  #L1b2cdc.  v29:= "\"" @kind object;
  #L1b2ce0.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2ce6.  v28:= temp @kind object;
  #L1b2ce8.  call temp:= `toString`(v28) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2cee.  v28:= temp @kind object;
  #L1b2cf0.  v26[v27]:= v28 @kind object;
  #L1b2cf4.  v27:= 2I;
  #L1b2cf8.  v28:= "Content-Transfer-Encoding" @kind object;
  #L1b2cfc.  v26[v27]:= v28 @kind object;
  #L1b2d00.  v27:= 3I;
  #L1b2d04.  call temp:= `encoding`(v17) @signature `Lretrofit2/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L1b2d0a.  v28:= temp @kind object;
  #L1b2d0c.  v26[v27]:= v28 @kind object;
  #L1b2d10.  call temp:= `of`(v26) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L1b2d16.  v11:= temp @kind object;
  #L1b2d18.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L1b2d1c.  v0:= v26 @kind object;
  #L1b2d20.  v1:= v22 @kind object;
  #L1b2d24.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2d2a.  v26:= temp;
  #L1b2d2c.  if v26 == 0 then goto L1b2e5c;
  #L1b2d30.  v0:= v32 @kind object;
  #L1b2d34.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b2d38.  v26:= v0;
  #L1b2d3c.  if v26 != 0 then goto L1b2db4;
  #L1b2d40.  v26:= new `java.lang.StringBuilder`;
  #L1b2d44.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2d4a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2d50.  v27:= temp @kind object;
  #L1b2d52.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2d58.  v26:= temp @kind object;
  #L1b2d5a.  v27:= " must include generic type (e.g., " @kind object;
  #L1b2d5e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2d64.  v26:= temp @kind object;
  #L1b2d66.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1b2d6c.  v27:= temp @kind object;
  #L1b2d6e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2d74.  v26:= temp @kind object;
  #L1b2d76.  v27:= "<String>)" @kind object;
  #L1b2d7a.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2d80.  v26:= temp @kind object;
  #L1b2d82.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2d88.  v26:= temp @kind object;
  #L1b2d8a.  v27:= 0I;
  #L1b2d8e.  v0:= v27;
  #L1b2d92.  v0:= new `java.lang.Object`[v0];
  #L1b2d96.  v27:= v0 @kind object;
  #L1b2d9a.  v0:= v30 @kind object;
  #L1b2d9e.  v1:= v31;
  #L1b2da2.  v2:= v26 @kind object;
  #L1b2da6.  v3:= v27 @kind object;
  #L1b2daa.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2db0.  v26:= temp @kind object;
  #L1b2db2.  throw v26;
  #L1b2db4.  v16:= v32 @kind object;
  #L1b2db8.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b2dbc.  v26:= 0I;
  #L1b2dc0.  v0:= v26;
  #L1b2dc4.  v1:= v16 @kind object;
  #L1b2dc8.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b2dce.  v12:= temp @kind object;
  #L1b2dd0.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2dd4.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2dda.  v27:= temp @kind object;
  #L1b2ddc.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2de2.  v26:= temp;
  #L1b2de4.  if v26 == 0 then goto L1b2e16;
  #L1b2de8.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b2dec.  v27:= 0I;
  #L1b2df0.  v0:= v27;
  #L1b2df4.  v0:= new `java.lang.Object`[v0];
  #L1b2df8.  v27:= v0 @kind object;
  #L1b2dfc.  v0:= v30 @kind object;
  #L1b2e00.  v1:= v31;
  #L1b2e04.  v2:= v26 @kind object;
  #L1b2e08.  v3:= v27 @kind object;
  #L1b2e0c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2e12.  v26:= temp @kind object;
  #L1b2e14.  throw v26;
  #L1b2e16.  v0:= v30 @kind object;
  #L1b2e1a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2e1e.  v26:= v0 @kind object;
  #L1b2e22.  v0:= v30 @kind object;
  #L1b2e26.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b2e2a.  v27:= v0 @kind object;
  #L1b2e2e.  v0:= v26 @kind object;
  #L1b2e32.  v1:= v33 @kind object;
  #L1b2e36.  v2:= v27 @kind object;
  #L1b2e3a.  call temp:= `requestBodyConverter`(v0, v12, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2e40.  v6:= temp @kind object;
  #L1b2e42.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b2e46.  v0:= v26 @kind object;
  #L1b2e4a.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b2e50.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Part;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2e56.  v26:= temp @kind object;
  #L1b2e58.  goto L1b1d22;
  #L1b2e5c.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1b2e62.  v26:= temp;
  #L1b2e64.  if v26 == 0 then goto L1b2f00;
  #L1b2e68.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1b2e6e.  v26:= temp @kind object;
  #L1b2e70.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L1b2e76.  v4:= temp @kind object;
  #L1b2e78.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2e7c.  v0:= v26 @kind object;
  #L1b2e80.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2e86.  v26:= temp;
  #L1b2e88.  if v26 == 0 then goto L1b2eba;
  #L1b2e8c.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b2e90.  v27:= 0I;
  #L1b2e94.  v0:= v27;
  #L1b2e98.  v0:= new `java.lang.Object`[v0];
  #L1b2e9c.  v27:= v0 @kind object;
  #L1b2ea0.  v0:= v30 @kind object;
  #L1b2ea4.  v1:= v31;
  #L1b2ea8.  v2:= v26 @kind object;
  #L1b2eac.  v3:= v27 @kind object;
  #L1b2eb0.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2eb6.  v26:= temp @kind object;
  #L1b2eb8.  throw v26;
  #L1b2eba.  v0:= v30 @kind object;
  #L1b2ebe.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2ec2.  v26:= v0 @kind object;
  #L1b2ec6.  v0:= v30 @kind object;
  #L1b2eca.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b2ece.  v27:= v0 @kind object;
  #L1b2ed2.  v0:= v26 @kind object;
  #L1b2ed6.  v1:= v33 @kind object;
  #L1b2eda.  v2:= v27 @kind object;
  #L1b2ede.  call temp:= `requestBodyConverter`(v0, v4, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2ee4.  v6:= temp @kind object;
  #L1b2ee6.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b2eea.  v0:= v26 @kind object;
  #L1b2eee.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b2ef4.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Part;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L1b2efa.  v26:= temp @kind object;
  #L1b2efc.  goto L1b1d22;
  #L1b2f00.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b2f04.  v0:= v26 @kind object;
  #L1b2f08.  v1:= v22 @kind object;
  #L1b2f0c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b2f12.  v26:= temp;
  #L1b2f14.  if v26 == 0 then goto L1b2f46;
  #L1b2f18.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L1b2f1c.  v27:= 0I;
  #L1b2f20.  v0:= v27;
  #L1b2f24.  v0:= new `java.lang.Object`[v0];
  #L1b2f28.  v27:= v0 @kind object;
  #L1b2f2c.  v0:= v30 @kind object;
  #L1b2f30.  v1:= v31;
  #L1b2f34.  v2:= v26 @kind object;
  #L1b2f38.  v3:= v27 @kind object;
  #L1b2f3c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2f42.  v26:= temp @kind object;
  #L1b2f44.  throw v26;
  #L1b2f46.  v0:= v30 @kind object;
  #L1b2f4a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b2f4e.  v26:= v0 @kind object;
  #L1b2f52.  v0:= v30 @kind object;
  #L1b2f56.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b2f5a.  v27:= v0 @kind object;
  #L1b2f5e.  v0:= v26 @kind object;
  #L1b2f62.  v1:= v32 @kind object;
  #L1b2f66.  v2:= v33 @kind object;
  #L1b2f6a.  v3:= v27 @kind object;
  #L1b2f6e.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b2f74.  v6:= temp @kind object;
  #L1b2f76.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L1b2f7a.  v0:= v26 @kind object;
  #L1b2f7e.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L1b2f84.  goto L1b1d22;
  #L1b2f88.  v0:= v34 @kind object;
  #L1b2f8c.  v0:= instanceof @variable v0 @type ^`retrofit2.http.PartMap` @kind boolean;
  #L1b2f90.  v26:= v0;
  #L1b2f94.  if v26 == 0 then goto L1b31b6;
  #L1b2f98.  v0:= v30 @kind object;
  #L1b2f9c.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b2fa0.  v26:= v0;
  #L1b2fa4.  if v26 != 0 then goto L1b2fd6;
  #L1b2fa8.  v26:= "@PartMap parameters can only be used with multipart encoding." @kind object;
  #L1b2fac.  v27:= 0I;
  #L1b2fb0.  v0:= v27;
  #L1b2fb4.  v0:= new `java.lang.Object`[v0];
  #L1b2fb8.  v27:= v0 @kind object;
  #L1b2fbc.  v0:= v30 @kind object;
  #L1b2fc0.  v1:= v31;
  #L1b2fc4.  v2:= v26 @kind object;
  #L1b2fc8.  v3:= v27 @kind object;
  #L1b2fcc.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b2fd2.  v26:= temp @kind object;
  #L1b2fd4.  throw v26;
  #L1b2fd6.  v26:= 1I;
  #L1b2fda.  v0:= v26;
  #L1b2fde.  v1:= v30 @kind object;
  #L1b2fe2.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L1b2fe6.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b2fec.  v22:= temp @kind object;
  #L1b2fee.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b2ff2.  v0:= v26 @kind object;
  #L1b2ff6.  v1:= v22 @kind object;
  #L1b2ffa.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b3000.  v26:= temp;
  #L1b3002.  if v26 != 0 then goto L1b3034;
  #L1b3006.  v26:= "@PartMap parameter type must be Map." @kind object;
  #L1b300a.  v27:= 0I;
  #L1b300e.  v0:= v27;
  #L1b3012.  v0:= new `java.lang.Object`[v0];
  #L1b3016.  v27:= v0 @kind object;
  #L1b301a.  v0:= v30 @kind object;
  #L1b301e.  v1:= v31;
  #L1b3022.  v2:= v26 @kind object;
  #L1b3026.  v3:= v27 @kind object;
  #L1b302a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3030.  v26:= temp @kind object;
  #L1b3032.  throw v26;
  #L1b3034.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L1b3038.  v0:= v32 @kind object;
  #L1b303c.  v1:= v22 @kind object;
  #L1b3040.  v2:= v26 @kind object;
  #L1b3044.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1b304a.  v14:= temp @kind object;
  #L1b304c.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1b3050.  v26:= v0;
  #L1b3054.  if v26 != 0 then goto L1b3086;
  #L1b3058.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L1b305c.  v27:= 0I;
  #L1b3060.  v0:= v27;
  #L1b3064.  v0:= new `java.lang.Object`[v0];
  #L1b3068.  v27:= v0 @kind object;
  #L1b306c.  v0:= v30 @kind object;
  #L1b3070.  v1:= v31;
  #L1b3074.  v2:= v26 @kind object;
  #L1b3078.  v3:= v27 @kind object;
  #L1b307c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3082.  v26:= temp @kind object;
  #L1b3084.  throw v26;
  #L1b3086.  v16:= v14 @kind object;
  #L1b308a.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L1b308e.  v26:= 0I;
  #L1b3092.  v0:= v26;
  #L1b3096.  v1:= v16 @kind object;
  #L1b309a.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b30a0.  v13:= temp @kind object;
  #L1b30a2.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L1b30a6.  v0:= v26 @kind object;
  #L1b30aa.  if v0 == v13 then goto L1b3102;
  #L1b30ae.  v26:= new `java.lang.StringBuilder`;
  #L1b30b2.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b30b8.  v27:= "@PartMap keys must be of type String: " @kind object;
  #L1b30bc.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b30c2.  v26:= temp @kind object;
  #L1b30c4.  v0:= v26 @kind object;
  #L1b30c8.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b30ce.  v26:= temp @kind object;
  #L1b30d0.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b30d6.  v26:= temp @kind object;
  #L1b30d8.  v27:= 0I;
  #L1b30dc.  v0:= v27;
  #L1b30e0.  v0:= new `java.lang.Object`[v0];
  #L1b30e4.  v27:= v0 @kind object;
  #L1b30e8.  v0:= v30 @kind object;
  #L1b30ec.  v1:= v31;
  #L1b30f0.  v2:= v26 @kind object;
  #L1b30f4.  v3:= v27 @kind object;
  #L1b30f8.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b30fe.  v26:= temp @kind object;
  #L1b3100.  throw v26;
  #L1b3102.  v26:= 1I;
  #L1b3106.  v0:= v26;
  #L1b310a.  v1:= v16 @kind object;
  #L1b310e.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L1b3114.  v25:= temp @kind object;
  #L1b3116.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L1b311a.  call temp:= `getRawType`(v25) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b3120.  v27:= temp @kind object;
  #L1b3122.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1b3128.  v26:= temp;
  #L1b312a.  if v26 == 0 then goto L1b315c;
  #L1b312e.  v26:= "@PartMap values cannot be MultipartBody.Part. Use @Part List<Part> or a different value type instead." @kind object;
  #L1b3132.  v27:= 0I;
  #L1b3136.  v0:= v27;
  #L1b313a.  v0:= new `java.lang.Object`[v0];
  #L1b313e.  v27:= v0 @kind object;
  #L1b3142.  v0:= v30 @kind object;
  #L1b3146.  v1:= v31;
  #L1b314a.  v2:= v26 @kind object;
  #L1b314e.  v3:= v27 @kind object;
  #L1b3152.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3158.  v26:= temp @kind object;
  #L1b315a.  throw v26;
  #L1b315c.  v0:= v30 @kind object;
  #L1b3160.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b3164.  v26:= v0 @kind object;
  #L1b3168.  v0:= v30 @kind object;
  #L1b316c.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b3170.  v27:= v0 @kind object;
  #L1b3174.  v0:= v26 @kind object;
  #L1b3178.  v1:= v25 @kind object;
  #L1b317c.  v2:= v33 @kind object;
  #L1b3180.  v3:= v27 @kind object;
  #L1b3184.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b318a.  v24:= temp @kind object;
  #L1b318c.  v18:= v34 @kind object;
  #L1b3190.  v18:= (`retrofit2.http.PartMap`) v18 @kind object;
  #L1b3194.  v26:= new `retrofit2.ParameterHandler$PartMap`;
  #L1b3198.  call temp:= `encoding`(v18) @signature `Lretrofit2/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L1b319e.  v27:= temp @kind object;
  #L1b31a0.  v0:= v26 @kind object;
  #L1b31a4.  v1:= v24 @kind object;
  #L1b31a8.  v2:= v27 @kind object;
  #L1b31ac.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$PartMap;.<init>:(Lretrofit2/Converter;Ljava/lang/String;)V` @kind direct;
  #L1b31b2.  goto L1b1d22;
  #L1b31b6.  v0:= v34 @kind object;
  #L1b31ba.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Body` @kind boolean;
  #L1b31be.  v26:= v0;
  #L1b31c2.  if v26 == 0 then goto L1b32dc;
  #L1b31c6.  v0:= v30 @kind object;
  #L1b31ca.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b31ce.  v26:= v0;
  #L1b31d2.  if v26 != 0 then goto L1b31e6;
  #L1b31d6.  v0:= v30 @kind object;
  #L1b31da.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b31de.  v26:= v0;
  #L1b31e2.  if v26 == 0 then goto L1b3214;
  #L1b31e6.  v26:= "@Body parameters cannot be used with form or multi-part encoding." @kind object;
  #L1b31ea.  v27:= 0I;
  #L1b31ee.  v0:= v27;
  #L1b31f2.  v0:= new `java.lang.Object`[v0];
  #L1b31f6.  v27:= v0 @kind object;
  #L1b31fa.  v0:= v30 @kind object;
  #L1b31fe.  v1:= v31;
  #L1b3202.  v2:= v26 @kind object;
  #L1b3206.  v3:= v27 @kind object;
  #L1b320a.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3210.  v26:= temp @kind object;
  #L1b3212.  throw v26;
  #L1b3214.  v0:= v30 @kind object;
  #L1b3218.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L1b321c.  v26:= v0;
  #L1b3220.  if v26 == 0 then goto L1b3252;
  #L1b3224.  v26:= "Multiple @Body method annotations found." @kind object;
  #L1b3228.  v27:= 0I;
  #L1b322c.  v0:= v27;
  #L1b3230.  v0:= new `java.lang.Object`[v0];
  #L1b3234.  v27:= v0 @kind object;
  #L1b3238.  v0:= v30 @kind object;
  #L1b323c.  v1:= v31;
  #L1b3240.  v2:= v26 @kind object;
  #L1b3244.  v3:= v27 @kind object;
  #L1b3248.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b324e.  v26:= temp @kind object;
  #L1b3250.  throw v26;
  #Try_start0.  
  #L1b3252.  v0:= v30 @kind object;
  #L1b3256.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L1b325a.  v26:= v0 @kind object;
  #L1b325e.  v0:= v30 @kind object;
  #L1b3262.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b3266.  v27:= v0 @kind object;
  #L1b326a.  v0:= v26 @kind object;
  #L1b326e.  v1:= v32 @kind object;
  #L1b3272.  v2:= v33 @kind object;
  #L1b3276.  v3:= v27 @kind object;
  #L1b327a.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #Try_end0.  
  #L1b3280.  v6:= temp @kind object;
  #L1b3282.  v26:= 1I;
  #L1b3286.  v0:= v26;
  #L1b328a.  v1:= v30 @kind object;
  #L1b328e.  v1.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` := v0 @kind boolean;
  #L1b3292.  v26:= new `retrofit2.ParameterHandler$Body`;
  #L1b3296.  v0:= v26 @kind object;
  #L1b329a.  call `<init>`(v0, v6) @signature `Lretrofit2/ParameterHandler$Body;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L1b32a0.  goto L1b1d22;
  #L1b32a4.  v7:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1b32a6.  v26:= "Unable to create @Body converter for %s" @kind object;
  #L1b32aa.  v27:= 1I;
  #L1b32ae.  v0:= v27;
  #L1b32b2.  v0:= new `java.lang.Object`[v0];
  #L1b32b6.  v27:= v0 @kind object;
  #L1b32ba.  v28:= 0I;
  #L1b32be.  v27[v28]:= v32 @kind object;
  #L1b32c2.  v0:= v30 @kind object;
  #L1b32c6.  v1:= v31;
  #L1b32ca.  v2:= v26 @kind object;
  #L1b32ce.  v3:= v27 @kind object;
  #L1b32d2.  call temp:= `parameterError`(v0, v7, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b32d8.  v26:= temp @kind object;
  #L1b32da.  throw v26;
  #L1b32dc.  v26:= 0I;
  #L1b32e0.  goto L1b1d22;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L1b32a4;
}
procedure `void` `validatePathName`(`retrofit2.ServiceMethod$Builder` v5 @kind this, `int` v6 @name `p`, `java.lang.String` v7 @kind object @name `name`) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b3304.  v1:= 2I;
  #L1b3306.  v4:= 1I;
  #L1b3308.  v3:= 0I;
  #L1b330a.  v0:= `@@retrofit2.ServiceMethod.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b330e.  call temp:= `matcher`(v0, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1b3314.  v0:= temp @kind object;
  #L1b3316.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L1b331c.  v0:= temp;
  #L1b331e.  if v0 != 0 then goto L1b3348;
  #L1b3322.  v0:= "@Path parameter name must match %s. Found: %s" @kind object;
  #L1b3326.  v1:= new `java.lang.Object`[v1];
  #L1b332a.  v2:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L1b332e.  call temp:= `pattern`(v2) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L1b3334.  v2:= temp @kind object;
  #L1b3336.  v1[v3]:= v2 @kind object;
  #L1b333a.  v1[v4]:= v7 @kind object;
  #L1b333e.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3344.  v0:= temp @kind object;
  #L1b3346.  throw v0;
  #L1b3348.  v0:= v5.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` @kind object;
  #L1b334c.  call temp:= `contains`(v0, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b3352.  v0:= temp;
  #L1b3354.  if v0 != 0 then goto L1b3376;
  #L1b3358.  v0:= "URL \"%s\" does not contain \"{%s}\"." @kind object;
  #L1b335c.  v1:= new `java.lang.Object`[v1];
  #L1b3360.  v2:= v5.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b3364.  v1[v3]:= v2 @kind object;
  #L1b3368.  v1[v4]:= v7 @kind object;
  #L1b336c.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3372.  v0:= temp @kind object;
  #L1b3374.  throw v0;
  #L1b3376.  return @kind void;
}
procedure `retrofit2.ServiceMethod` `build`(`retrofit2.ServiceMethod$Builder` v10 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1b3388.  v9:= 1I;
  #L1b338a.  v6:= 0I;
  #L1b338c.  call temp:= `createCallAdapter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @kind direct;
  #L1b3392.  v5:= temp @kind object;
  #L1b3394.  v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` := v5 @kind object;
  #L1b3398.  v5:= v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` @kind object;
  #L1b339c.  call temp:= `responseType`(v5) @signature `Lretrofit2/CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1b33a2.  v5:= temp @kind object;
  #L1b33a4.  v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` := v5 @kind object;
  #L1b33a8.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b33ac.  v7:= constclass @type ^`retrofit2.Response` @kind object;
  #L1b33b0.  if v5 == v7 then goto L1b33c0;
  #L1b33b4.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b33b8.  v7:= constclass @type ^`okhttp3.Response` @kind object;
  #L1b33bc.  if v5 != v7 then goto L1b3414;
  #L1b33c0.  v5:= new `java.lang.StringBuilder`;
  #L1b33c4.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b33ca.  v7:= "'" @kind object;
  #L1b33ce.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b33d4.  v5:= temp @kind object;
  #L1b33d6.  v7:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L1b33da.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1b33e0.  v7:= temp @kind object;
  #L1b33e2.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b33e8.  v7:= temp @kind object;
  #L1b33ea.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b33f0.  v5:= temp @kind object;
  #L1b33f2.  v7:= "' is not a valid response body type. Did you mean ResponseBody?" @kind object;
  #L1b33f6.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b33fc.  v5:= temp @kind object;
  #L1b33fe.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3404.  v5:= temp @kind object;
  #L1b3406.  v6:= new `java.lang.Object`[v6];
  #L1b340a.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3410.  v5:= temp @kind object;
  #L1b3412.  throw v5;
  #L1b3414.  call temp:= `createResponseConverter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @kind direct;
  #L1b341a.  v5:= temp @kind object;
  #L1b341c.  v10.`retrofit2.ServiceMethod$Builder.responseConverter` @type ^`retrofit2.Converter` := v5 @kind object;
  #L1b3420.  v7:= v10.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L1b3424.  v8:= length @variable v7;
  #L1b3426.  v5:= v6;
  #L1b3428.  if v5 >= v8 then goto L1b343c;
  #L1b342c.  v0:= v7[v5] @kind object;
  #L1b3430.  call `parseMethodAnnotation`(v10, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L1b3436.  v5:= v5 + 1;
  #L1b343a.  goto L1b3428;
  #L1b343c.  v5:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b3440.  if v5 != 0 then goto L1b3456;
  #L1b3444.  v5:= "HTTP method annotation is required (e.g., @GET, @POST, etc.)." @kind object;
  #L1b3448.  v6:= new `java.lang.Object`[v6];
  #L1b344c.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3452.  v5:= temp @kind object;
  #L1b3454.  throw v5;
  #L1b3456.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L1b345a.  if v5 != 0 then goto L1b3492;
  #L1b345e.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b3462.  if v5 == 0 then goto L1b3478;
  #L1b3466.  v5:= "Multipart can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L1b346a.  v6:= new `java.lang.Object`[v6];
  #L1b346e.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b3474.  v5:= temp @kind object;
  #L1b3476.  throw v5;
  #L1b3478.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b347c.  if v5 == 0 then goto L1b3492;
  #L1b3480.  v5:= "FormUrlEncoded can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L1b3484.  v6:= new `java.lang.Object`[v6];
  #L1b3488.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b348e.  v5:= temp @kind object;
  #L1b3490.  throw v5;
  #L1b3492.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L1b3496.  v3:= length @variable v5;
  #L1b3498.  v5:= new `retrofit2.ParameterHandler`[v3];
  #L1b349c.  v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v5 @kind object;
  #L1b34a0.  v1:= 0I;
  #L1b34a2.  if v1 >= v3 then goto L1b3504;
  #L1b34a6.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] @kind object;
  #L1b34aa.  v4:= v5[v1] @kind object;
  #L1b34ae.  call temp:= `hasUnresolvableType`(v4) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1b34b4.  v5:= temp;
  #L1b34b6.  if v5 == 0 then goto L1b34d0;
  #L1b34ba.  v5:= "Parameter type must not include a type variable or wildcard: %s" @kind object;
  #L1b34be.  v7:= new `java.lang.Object`[v9];
  #L1b34c2.  v7[v6]:= v4 @kind object;
  #L1b34c6.  call temp:= `parameterError`(v10, v1, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b34cc.  v5:= temp @kind object;
  #L1b34ce.  throw v5;
  #L1b34d0.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L1b34d4.  v2:= v5[v1] @kind object;
  #L1b34d8.  if v2 != 0 then goto L1b34ee;
  #L1b34dc.  v5:= "No Retrofit annotation found." @kind object;
  #L1b34e0.  v6:= new `java.lang.Object`[v6];
  #L1b34e4.  call temp:= `parameterError`(v10, v1, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b34ea.  v5:= temp @kind object;
  #L1b34ec.  throw v5;
  #L1b34ee.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L1b34f2.  call temp:= `parseParameter`(v10, v1, v4, v2) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L1b34f8.  v7:= temp @kind object;
  #L1b34fa.  v5[v1]:= v7 @kind object;
  #L1b34fe.  v1:= v1 + 1;
  #L1b3502.  goto L1b34a2;
  #L1b3504.  v5:= v10.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L1b3508.  if v5 != 0 then goto L1b352e;
  #L1b350c.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L1b3510.  if v5 != 0 then goto L1b352e;
  #L1b3514.  v5:= "Missing either @%s URL or @Url parameter." @kind object;
  #L1b3518.  v7:= new `java.lang.Object`[v9];
  #L1b351c.  v8:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L1b3520.  v7[v6]:= v8 @kind object;
  #L1b3524.  call temp:= `methodError`(v10, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b352a.  v5:= temp @kind object;
  #L1b352c.  throw v5;
  #L1b352e.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b3532.  if v5 != 0 then goto L1b3560;
  #L1b3536.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b353a.  if v5 != 0 then goto L1b3560;
  #L1b353e.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L1b3542.  if v5 != 0 then goto L1b3560;
  #L1b3546.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L1b354a.  if v5 == 0 then goto L1b3560;
  #L1b354e.  v5:= "Non-body HTTP method cannot contain @Body." @kind object;
  #L1b3552.  v6:= new `java.lang.Object`[v6];
  #L1b3556.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b355c.  v5:= temp @kind object;
  #L1b355e.  throw v5;
  #L1b3560.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L1b3564.  if v5 == 0 then goto L1b3582;
  #L1b3568.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` @kind boolean;
  #L1b356c.  if v5 != 0 then goto L1b3582;
  #L1b3570.  v5:= "Form-encoded method must contain at least one @Field." @kind object;
  #L1b3574.  v6:= new `java.lang.Object`[v6];
  #L1b3578.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b357e.  v5:= temp @kind object;
  #L1b3580.  throw v5;
  #L1b3582.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L1b3586.  if v5 == 0 then goto L1b35a4;
  #L1b358a.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` @kind boolean;
  #L1b358e.  if v5 != 0 then goto L1b35a4;
  #L1b3592.  v5:= "Multipart method must contain at least one @Part." @kind object;
  #L1b3596.  v6:= new `java.lang.Object`[v6];
  #L1b359a.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L1b35a0.  v5:= temp @kind object;
  #L1b35a2.  throw v5;
  #L1b35a4.  v5:= new `retrofit2.ServiceMethod`;
  #L1b35a8.  call `<init>`(v5, v10) @signature `Lretrofit2/ServiceMethod;.<init>:(Lretrofit2/ServiceMethod$Builder;)V` @kind direct;
  #L1b35ae.  return v5 @kind object;
}

record `retrofit2.BuiltInConverters` @kind class @AccessFlag FINAL extends `retrofit2.Converter$Factory` @kind class {
}
procedure `void` `<init>`(`retrofit2.BuiltInConverters` v0 @kind this) @signature `Lretrofit2/BuiltInConverters;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L220f7c.  call `<init>`(v0) @signature `Lretrofit2/Converter$Factory;.<init>:()V` @kind direct;
  #L220f82.  return @kind void;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.BuiltInConverters` v2 @kind this, `java.lang.reflect.Type` v3 @kind object @name `type`, `java.lang.annotation.Annotation`[] v4 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v5 @kind object @name `methodAnnotations`, `retrofit2.Retrofit` v6 @kind object @name `retrofit`) @signature `Lretrofit2/BuiltInConverters;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L220f94.  v0:= constclass @type ^`okhttp3.RequestBody` @kind object;
  #L220f98.  call temp:= `getRawType`(v3) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L220f9e.  v1:= temp @kind object;
  #L220fa0.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L220fa6.  v0:= temp;
  #L220fa8.  if v0 == 0 then goto L220fb2;
  #L220fac.  v0:= `@@retrofit2.BuiltInConverters$RequestBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$RequestBodyConverter` @kind object;
  #L220fb0.  return v0 @kind object;
  #L220fb2.  v0:= 0I;
  #L220fb4.  goto L220fb0;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.BuiltInConverters` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`, `retrofit2.Retrofit` v4 @kind object @name `retrofit`) @signature `Lretrofit2/BuiltInConverters;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L220fc8.  v0:= constclass @type ^`okhttp3.ResponseBody` @kind object;
  #L220fcc.  if v2 != v0 then goto L220fec;
  #L220fd0.  v0:= constclass @type ^`retrofit2.http.Streaming` @kind object;
  #L220fd4.  call temp:= `isAnnotationPresent`(v3, v0) @signature `Lretrofit2/Utils;.isAnnotationPresent:([Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Z` @kind static;
  #L220fda.  v0:= temp;
  #L220fdc.  if v0 == 0 then goto L220fe6;
  #L220fe0.  v0:= `@@retrofit2.BuiltInConverters$StreamingResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$StreamingResponseBodyConverter` @kind object;
  #L220fe4.  return v0 @kind object;
  #L220fe6.  v0:= `@@retrofit2.BuiltInConverters$BufferingResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$BufferingResponseBodyConverter` @kind object;
  #L220fea.  goto L220fe4;
  #L220fec.  v0:= constclass @type ^`java.lang.Void` @kind object;
  #L220ff0.  if v2 != v0 then goto L220ffa;
  #L220ff4.  v0:= `@@retrofit2.BuiltInConverters$VoidResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$VoidResponseBodyConverter` @kind object;
  #L220ff8.  goto L220fe4;
  #L220ffa.  v0:= 0I;
  #L220ffc.  goto L220fe4;
}

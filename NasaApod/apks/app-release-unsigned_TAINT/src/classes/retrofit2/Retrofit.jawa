record `retrofit2.Retrofit` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.HttpUrl` `retrofit2.Retrofit.baseUrl` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.callAdapterFactories` @AccessFlag FINAL;
  `okhttp3.Call$Factory` `retrofit2.Retrofit.callFactory` @AccessFlag FINAL;
  `java.util.concurrent.Executor` `retrofit2.Retrofit.callbackExecutor` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.converterFactories` @AccessFlag FINAL;
  `java.util.Map` `retrofit2.Retrofit.serviceMethodCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.Retrofit.validateEagerly` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.Retrofit` v1 @kind this, `okhttp3.Call$Factory` v2 @kind object @name `callFactory`, `okhttp3.HttpUrl` v3 @kind object @name `baseUrl`, `java.util.List` v4 @kind object, `java.util.List` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object @name `callbackExecutor`, `boolean` v7 @name `validateEagerly`) @signature `Lretrofit2/Retrofit;.<init>:(Lokhttp3/Call$Factory;Lokhttp3/HttpUrl;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1b0ea8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b0eae.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L1b0eb2.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L1b0eb8.  v1.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` := v0 @kind object;
  #L1b0ebc.  v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` := v2 @kind object;
  #L1b0ec0.  v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L1b0ec4.  v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` := v4 @kind object;
  #L1b0ec8.  v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` := v5 @kind object;
  #L1b0ecc.  v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` := v6 @kind object;
  #L1b0ed0.  v1.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` := v7 @kind boolean;
  #L1b0ed4.  return @kind void;
}
procedure `void` `eagerlyValidateMethods`(`retrofit2.Retrofit` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b0ee8.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L1b0eee.  v1:= temp @kind object;
  #L1b0ef0.  call temp:= `getDeclaredMethods`(v7) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L1b0ef6.  v3:= temp @kind object;
  #L1b0ef8.  v4:= length @variable v3;
  #L1b0efa.  v2:= 0I;
  #L1b0efc.  if v2 >= v4 then goto L1b0f1c;
  #L1b0f00.  v0:= v3[v2] @kind object;
  #L1b0f04.  call temp:= `isDefaultMethod`(v1, v0) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @kind virtual;
  #L1b0f0a.  v5:= temp;
  #L1b0f0c.  if v5 != 0 then goto L1b0f16;
  #L1b0f10.  call temp:= `loadServiceMethod`(v6, v0) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind virtual;
  #L1b0f16.  v2:= v2 + 1;
  #L1b0f1a.  goto L1b0efc;
  #L1b0f1c.  return @kind void;
}
procedure `okhttp3.HttpUrl` `baseUrl`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.baseUrl:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b0f30.  v0:= v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L1b0f34.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `callAdapter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b0f48.  v0:= 0I;
  #L1b0f4a.  call temp:= `nextCallAdapter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L1b0f50.  v0:= temp @kind object;
  #L1b0f52.  return v0 @kind object;
}
procedure `java.util.List` `callAdapterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callAdapterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b0f64.  v0:= v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b0f68.  return v0 @kind object;
}
procedure `okhttp3.Call$Factory` `callFactory`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callFactory:()Lokhttp3/Call$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b0f7c.  v0:= v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L1b0f80.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `callbackExecutor`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b0f94.  v0:= v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L1b0f98.  return v0 @kind object;
}
procedure `java.util.List` `converterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.converterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b0fac.  v0:= v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b0fb0.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`retrofit2.Retrofit` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b0fc4.  call `validateServiceInterface`(v4) @signature `Lretrofit2/Utils;.validateServiceInterface:(Ljava/lang/Class;)V` @kind static;
  #L1b0fca.  v0:= v3.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` @kind boolean;
  #L1b0fce.  if v0 == 0 then goto L1b0fd8;
  #L1b0fd2.  call `eagerlyValidateMethods`(v3, v4) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @kind direct;
  #L1b0fd8.  call temp:= `getClassLoader`(v4) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1b0fde.  v0:= temp @kind object;
  #L1b0fe0.  v1:= 1I;
  #L1b0fe2.  v1:= new `java.lang.Class`[v1];
  #L1b0fe6.  v2:= 0I;
  #L1b0fe8.  v1[v2]:= v4 @kind object;
  #L1b0fec.  v2:= new `retrofit2.Retrofit$1`;
  #L1b0ff0.  call `<init>`(v2, v3, v4) @signature `Lretrofit2/Retrofit$1;.<init>:(Lretrofit2/Retrofit;Ljava/lang/Class;)V` @kind direct;
  #L1b0ff6.  call temp:= `newProxyInstance`(v0, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L1b0ffc.  v0:= temp @kind object;
  #L1b0ffe.  return v0 @kind object;
}
procedure `retrofit2.ServiceMethod` `loadServiceMethod`(`retrofit2.Retrofit` v5 @kind this, `java.lang.reflect.Method` v6 @kind object @name `method`) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b1010.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1b1014.  call temp:= `get`(v3, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b101a.  v1:= temp @kind object;
  #L1b101c.  v1:= (`retrofit2.ServiceMethod`) v1 @kind object;
  #L1b1020.  if v1 == 0 then goto L1b1028;
  #L1b1024.  v2:= v1 @kind object;
  #L1b1026.  return v2 @kind object;
  #L1b1028.  v4:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1b102c.  @monitorenter v4
  #Try_start0.  
  #L1b102e.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1b1032.  call temp:= `get`(v3, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b1038.  v3:= temp @kind object;
  #L1b103a.  v0:= v3 @kind object;
  #L1b103c.  v0:= (`retrofit2.ServiceMethod`) v0 @kind object;
  #L1b1040.  v1:= v0 @kind object;
  #L1b1042.  if v1 != 0 then goto L1b1062;
  #L1b1046.  v3:= new `retrofit2.ServiceMethod$Builder`;
  #L1b104a.  call `<init>`(v3, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @kind direct;
  #L1b1050.  call temp:= `build`(v3) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @kind virtual;
  #L1b1056.  v1:= temp @kind object;
  #L1b1058.  v3:= v5.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L1b105c.  call temp:= `put`(v3, v6, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b1062.  @monitorexit v4
  #L1b1064.  v2:= v1 @kind object;
  #L1b1066.  goto L1b1026;
  #L1b1068.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b106a.  @monitorexit v4
  #Try_end0.  
  #L1b106c.  throw v3;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1b1068;
}
procedure `retrofit2.Retrofit$Builder` `newBuilder`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.newBuilder:()Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b108c.  v0:= new `retrofit2.Retrofit$Builder`;
  #L1b1090.  call `<init>`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Retrofit;)V` @kind direct;
  #L1b1096.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `nextCallAdapter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.CallAdapter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b10a8.  v5:= "returnType == null" @kind object;
  #L1b10ac.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b10b2.  v5:= "annotations == null" @kind object;
  #L1b10b6.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b10bc.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b10c0.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1b10c6.  v5:= temp;
  #L1b10c8.  v4:= v5 + 1;
  #L1b10cc.  v3:= v4;
  #L1b10ce.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b10d2.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b10d8.  v2:= temp;
  #L1b10da.  if v3 >= v2 then goto L1b1102;
  #L1b10de.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b10e2.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b10e8.  v5:= temp @kind object;
  #L1b10ea.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1b10ee.  call temp:= `get`(v5, v9, v10, v7) @signature `Lretrofit2/CallAdapter$Factory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @kind virtual;
  #L1b10f4.  v0:= temp @kind object;
  #L1b10f6.  if v0 == 0 then goto L1b10fc;
  #L1b10fa.  return v0 @kind object;
  #L1b10fc.  v3:= v3 + 1;
  #L1b1100.  goto L1b10da;
  #L1b1102.  v5:= new `java.lang.StringBuilder`;
  #L1b1106.  v6:= "Could not locate call adapter for " @kind object;
  #L1b110a.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1110.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1116.  v5:= temp @kind object;
  #L1b1118.  v6:= ".\n" @kind object;
  #L1b111c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1122.  v1:= temp @kind object;
  #L1b1124.  if v8 == 0 then goto L1b117a;
  #L1b1128.  v5:= "  Skipped:" @kind object;
  #L1b112c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1132.  v3:= 0I;
  #L1b1134.  if v3 >= v4 then goto L1b1170;
  #L1b1138.  v5:= "\n   * " @kind object;
  #L1b113c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1142.  v6:= temp @kind object;
  #L1b1144.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b1148.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b114e.  v5:= temp @kind object;
  #L1b1150.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1b1154.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b115a.  v5:= temp @kind object;
  #L1b115c.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1162.  v5:= temp @kind object;
  #L1b1164.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b116a.  v3:= v3 + 1;
  #L1b116e.  goto L1b1134;
  #L1b1170.  v5:= 10I;
  #L1b1174.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b117a.  v5:= "  Tried:" @kind object;
  #L1b117e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1184.  v3:= v4;
  #L1b1186.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b118a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b1190.  v2:= temp;
  #L1b1192.  if v3 >= v2 then goto L1b11ce;
  #L1b1196.  v5:= "\n   * " @kind object;
  #L1b119a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b11a0.  v6:= temp @kind object;
  #L1b11a2.  v5:= v7.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L1b11a6.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b11ac.  v5:= temp @kind object;
  #L1b11ae.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L1b11b2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b11b8.  v5:= temp @kind object;
  #L1b11ba.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b11c0.  v5:= temp @kind object;
  #L1b11c2.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b11c8.  v3:= v3 + 1;
  #L1b11cc.  goto L1b1192;
  #L1b11ce.  v5:= new `java.lang.IllegalArgumentException`;
  #L1b11d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b11d8.  v6:= temp @kind object;
  #L1b11da.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b11e0.  throw v5;
}
procedure `retrofit2.Converter` `nextRequestBodyConverter`(`retrofit2.Retrofit` v8 @kind this, `retrofit2.Converter$Factory` v9 @kind object @name `skipPast`, `java.lang.reflect.Type` v10 @kind object @name `type`, `java.lang.annotation.Annotation`[] v11 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v12 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b11f4.  v6:= "type == null" @kind object;
  #L1b11f8.  call temp:= `checkNotNull`(v10, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b11fe.  v6:= "parameterAnnotations == null" @kind object;
  #L1b1202.  call temp:= `checkNotNull`(v11, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b1208.  v6:= "methodAnnotations == null" @kind object;
  #L1b120c.  call temp:= `checkNotNull`(v12, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b1212.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1216.  call temp:= `indexOf`(v6, v9) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1b121c.  v6:= temp;
  #L1b121e.  v5:= v6 + 1;
  #L1b1222.  v4:= v5;
  #L1b1224.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1228.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b122e.  v2:= temp;
  #L1b1230.  if v4 >= v2 then goto L1b1258;
  #L1b1234.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1238.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b123e.  v3:= temp @kind object;
  #L1b1240.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L1b1244.  call temp:= `requestBodyConverter`(v3, v10, v11, v12, v8) @signature `Lretrofit2/Converter$Factory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b124a.  v1:= temp @kind object;
  #L1b124c.  if v1 == 0 then goto L1b1252;
  #L1b1250.  return v1 @kind object;
  #L1b1252.  v4:= v4 + 1;
  #L1b1256.  goto L1b1230;
  #L1b1258.  v6:= new `java.lang.StringBuilder`;
  #L1b125c.  v7:= "Could not locate RequestBody converter for " @kind object;
  #L1b1260.  call `<init>`(v6, v7) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1266.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b126c.  v6:= temp @kind object;
  #L1b126e.  v7:= ".\n" @kind object;
  #L1b1272.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1278.  v0:= temp @kind object;
  #L1b127a.  if v9 == 0 then goto L1b12d0;
  #L1b127e.  v6:= "  Skipped:" @kind object;
  #L1b1282.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1288.  v4:= 0I;
  #L1b128a.  if v4 >= v5 then goto L1b12c6;
  #L1b128e.  v6:= "\n   * " @kind object;
  #L1b1292.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1298.  v7:= temp @kind object;
  #L1b129a.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b129e.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b12a4.  v6:= temp @kind object;
  #L1b12a6.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L1b12aa.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b12b0.  v6:= temp @kind object;
  #L1b12b2.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b12b8.  v6:= temp @kind object;
  #L1b12ba.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12c0.  v4:= v4 + 1;
  #L1b12c4.  goto L1b128a;
  #L1b12c6.  v6:= 10I;
  #L1b12ca.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12d0.  v6:= "  Tried:" @kind object;
  #L1b12d4.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12da.  v4:= v5;
  #L1b12dc.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b12e0.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b12e6.  v2:= temp;
  #L1b12e8.  if v4 >= v2 then goto L1b1324;
  #L1b12ec.  v6:= "\n   * " @kind object;
  #L1b12f0.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b12f6.  v7:= temp @kind object;
  #L1b12f8.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b12fc.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b1302.  v6:= temp @kind object;
  #L1b1304.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L1b1308.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b130e.  v6:= temp @kind object;
  #L1b1310.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1316.  v6:= temp @kind object;
  #L1b1318.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b131e.  v4:= v4 + 1;
  #L1b1322.  goto L1b12e8;
  #L1b1324.  v6:= new `java.lang.IllegalArgumentException`;
  #L1b1328.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b132e.  v7:= temp @kind object;
  #L1b1330.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1336.  throw v6;
}
procedure `retrofit2.Converter` `nextResponseBodyConverter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.Converter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `type`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b1348.  v5:= "type == null" @kind object;
  #L1b134c.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b1352.  v5:= "annotations == null" @kind object;
  #L1b1356.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b135c.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1360.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1b1366.  v5:= temp;
  #L1b1368.  v4:= v5 + 1;
  #L1b136c.  v3:= v4;
  #L1b136e.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1372.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b1378.  v2:= temp;
  #L1b137a.  if v3 >= v2 then goto L1b13a2;
  #L1b137e.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1382.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b1388.  v5:= temp @kind object;
  #L1b138a.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b138e.  call temp:= `responseBodyConverter`(v5, v9, v10, v7) @signature `Lretrofit2/Converter$Factory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b1394.  v1:= temp @kind object;
  #L1b1396.  if v1 == 0 then goto L1b139c;
  #L1b139a.  return v1 @kind object;
  #L1b139c.  v3:= v3 + 1;
  #L1b13a0.  goto L1b137a;
  #L1b13a2.  v5:= new `java.lang.StringBuilder`;
  #L1b13a6.  v6:= "Could not locate ResponseBody converter for " @kind object;
  #L1b13aa.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b13b0.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13b6.  v5:= temp @kind object;
  #L1b13b8.  v6:= ".\n" @kind object;
  #L1b13bc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13c2.  v0:= temp @kind object;
  #L1b13c4.  if v8 == 0 then goto L1b141a;
  #L1b13c8.  v5:= "  Skipped:" @kind object;
  #L1b13cc.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13d2.  v3:= 0I;
  #L1b13d4.  if v3 >= v4 then goto L1b1410;
  #L1b13d8.  v5:= "\n   * " @kind object;
  #L1b13dc.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13e2.  v6:= temp @kind object;
  #L1b13e4.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b13e8.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b13ee.  v5:= temp @kind object;
  #L1b13f0.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b13f4.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b13fa.  v5:= temp @kind object;
  #L1b13fc.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1402.  v5:= temp @kind object;
  #L1b1404.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b140a.  v3:= v3 + 1;
  #L1b140e.  goto L1b13d4;
  #L1b1410.  v5:= 10I;
  #L1b1414.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b141a.  v5:= "  Tried:" @kind object;
  #L1b141e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1424.  v3:= v4;
  #L1b1426.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b142a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b1430.  v2:= temp;
  #L1b1432.  if v3 >= v2 then goto L1b146e;
  #L1b1436.  v5:= "\n   * " @kind object;
  #L1b143a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1440.  v6:= temp @kind object;
  #L1b1442.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b1446.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b144c.  v5:= temp @kind object;
  #L1b144e.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L1b1452.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b1458.  v5:= temp @kind object;
  #L1b145a.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1460.  v5:= temp @kind object;
  #L1b1462.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1468.  v3:= v3 + 1;
  #L1b146c.  goto L1b1432;
  #L1b146e.  v5:= new `java.lang.IllegalArgumentException`;
  #L1b1472.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1478.  v6:= temp @kind object;
  #L1b147a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1480.  throw v5;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v4 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1494.  v0:= 0I;
  #L1b1496.  call temp:= `nextRequestBodyConverter`(v1, v0, v2, v3, v4) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b149c.  v0:= temp @kind object;
  #L1b149e.  return v0 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b14b0.  v0:= 0I;
  #L1b14b2.  call temp:= `nextResponseBodyConverter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L1b14b8.  v0:= temp @kind object;
  #L1b14ba.  return v0 @kind object;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.Retrofit` v4 @kind this, `java.lang.reflect.Type` v5 @kind object @name `type`, `java.lang.annotation.Annotation`[] v6 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b14cc.  v3:= "type == null" @kind object;
  #L1b14d0.  call temp:= `checkNotNull`(v5, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b14d6.  v3:= "annotations == null" @kind object;
  #L1b14da.  call temp:= `checkNotNull`(v6, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1b14e0.  v2:= 0I;
  #L1b14e2.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b14e6.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b14ec.  v1:= temp;
  #L1b14ee.  if v2 >= v1 then goto L1b1516;
  #L1b14f2.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L1b14f6.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b14fc.  v3:= temp @kind object;
  #L1b14fe.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L1b1502.  call temp:= `stringConverter`(v3, v5, v6, v4) @signature `Lretrofit2/Converter$Factory;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L1b1508.  v0:= temp @kind object;
  #L1b150a.  if v0 == 0 then goto L1b1510;
  #L1b150e.  return v0 @kind object;
  #L1b1510.  v2:= v2 + 1;
  #L1b1514.  goto L1b14ee;
  #L1b1516.  v0:= `@@retrofit2.BuiltInConverters$ToStringConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$ToStringConverter` @kind object;
  #L1b151a.  goto L1b150e;
}

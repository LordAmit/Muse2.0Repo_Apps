record `okhttp3.Cache$2` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `boolean` `okhttp3.Cache$2.canRemove` @AccessFlag ;
  `java.util.Iterator` `okhttp3.Cache$2.delegate` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Cache$2.nextUrl` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.Cache$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$2` v1 @kind this, `okhttp3.Cache` v2 @kind object @name `this$0`) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L193be4.  v1.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` := v2 @kind object;
  #L193be8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L193bee.  v0:= v1.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` @kind object;
  #L193bf2.  v0:= v0.`okhttp3.Cache.cache` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L193bf6.  call temp:= `snapshots`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L193bfc.  v0:= temp @kind object;
  #L193bfe.  v1.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` := v0 @kind object;
  #L193c02.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$2` v5 @kind this) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L193c14.  v2:= 1I;
  #L193c16.  v3:= 0I;
  #L193c18.  v4:= v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L193c1c.  if v4 == 0 then goto L193c22;
  #L193c20.  return v2;
  #L193c22.  v5.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v3 @kind boolean;
  #L193c26.  v4:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L193c2a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L193c30.  v4:= temp;
  #L193c32.  if v4 == 0 then goto L193c80;
  #L193c36.  v4:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L193c3a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L193c40.  v1:= temp @kind object;
  #L193c42.  v1:= (`okhttp3.internal.cache.DiskLruCache$Snapshot`) v1 @kind object;
  #L193c46.  v4:= 0I;
  #Try_start0.  
  #L193c48.  call temp:= `getSource`(v1, v4) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L193c4e.  v4:= temp @kind object;
  #L193c50.  call temp:= `buffer`(v4) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L193c56.  v0:= temp @kind object;
  #L193c58.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193c5e.  v4:= temp @kind object;
  #L193c60.  v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v4 @kind object;
  #Try_end0.  
  #L193c64.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L193c6a.  goto L193c20;
  #L193c6c.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L193c6e.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L193c74.  goto L193c26;
  #L193c76.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L193c78.  call `close`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L193c7e.  throw v2;
  #L193c80.  v2:= v3;
  #L193c82.  goto L193c20;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L193c6c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L193c76;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$2` v1 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L193ca4.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @kind virtual;
  #L193caa.  v0:= temp @kind object;
  #L193cac.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L193cc0.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @kind virtual;
  #L193cc6.  v1:= temp;
  #L193cc8.  if v1 != 0 then goto L193cd8;
  #L193ccc.  v1:= new `java.util.NoSuchElementException`;
  #L193cd0.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L193cd6.  throw v1;
  #L193cd8.  v0:= v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L193cdc.  v1:= 0I;
  #L193cde.  v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v1 @kind object;
  #L193ce2.  v1:= 1I;
  #L193ce4.  v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v1 @kind boolean;
  #L193ce8.  return v0 @kind object;
}
procedure `void` `remove`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L193cfc.  v0:= v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` @kind boolean;
  #L193d00.  if v0 != 0 then goto L193d14;
  #L193d04.  v0:= new `java.lang.IllegalStateException`;
  #L193d08.  v1:= "remove() before next()" @kind object;
  #L193d0c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193d12.  throw v0;
  #L193d14.  v0:= v2.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L193d18.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L193d1e.  return @kind void;
}

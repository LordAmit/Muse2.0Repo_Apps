record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.address` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.inetSocketAddress` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.proxy` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v2 @kind this, `okhttp3.Address` v3 @kind object @name `address`, `java.net.Proxy` v4 @kind object @name `proxy`, `java.net.InetSocketAddress` v5 @kind object @name `inetSocketAddress`) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19ea6c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19ea72.  if v3 != 0 then goto L19ea86;
  #L19ea76.  v0:= new `java.lang.NullPointerException`;
  #L19ea7a.  v1:= "address == null" @kind object;
  #L19ea7e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ea84.  throw v0;
  #L19ea86.  if v4 != 0 then goto L19ea9a;
  #L19ea8a.  v0:= new `java.lang.NullPointerException`;
  #L19ea8e.  v1:= "proxy == null" @kind object;
  #L19ea92.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ea98.  throw v0;
  #L19ea9a.  if v5 != 0 then goto L19eaae;
  #L19ea9e.  v0:= new `java.lang.NullPointerException`;
  #L19eaa2.  v1:= "inetSocketAddress == null" @kind object;
  #L19eaa6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19eaac.  throw v0;
  #L19eaae.  v2.`okhttp3.Route.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L19eab2.  v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` := v4 @kind object;
  #L19eab6.  v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` := v5 @kind object;
  #L19eaba.  return @kind void;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19eacc.  v0:= v1.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19ead0.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19eae4.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L19eae8.  if v0 == 0 then goto L19eb3c;
  #L19eaec.  v0:= v3 @kind object;
  #L19eaee.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L19eaf2.  v0:= v0.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19eaf6.  v1:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19eafa.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19eb00.  v0:= temp;
  #L19eb02.  if v0 == 0 then goto L19eb3c;
  #L19eb06.  v0:= v3 @kind object;
  #L19eb08.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L19eb0c.  v0:= v0.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19eb10.  v1:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19eb14.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19eb1a.  v0:= temp;
  #L19eb1c.  if v0 == 0 then goto L19eb3c;
  #L19eb20.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L19eb24.  v0:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19eb28.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19eb2c.  call temp:= `equals`(v0, v1) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19eb32.  v0:= temp;
  #L19eb34.  if v0 == 0 then goto L19eb3c;
  #L19eb38.  v0:= 1I;
  #L19eb3a.  return v0;
  #L19eb3c.  v0:= 0I;
  #L19eb3e.  goto L19eb3a;
}
procedure `int` `hashCode`(`okhttp3.Route` v3 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19eb50.  v0:= 17I;
  #L19eb54.  v1:= v3.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19eb58.  call temp:= `hashCode`(v1) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L19eb5e.  v1:= temp;
  #L19eb60.  v0:= v1 + 527;
  #L19eb64.  v1:= v0 * 31;
  #L19eb68.  v2:= v3.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19eb6c.  call temp:= `hashCode`(v2) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L19eb72.  v2:= temp;
  #L19eb74.  v0:= v1 + v2 @kind int;
  #L19eb78.  v1:= v0 * 31;
  #L19eb7c.  v2:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19eb80.  call temp:= `hashCode`(v2) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L19eb86.  v2:= temp;
  #L19eb88.  v0:= v1 + v2 @kind int;
  #L19eb8c.  return v0;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19eba0.  v0:= v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19eba4.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ebb8.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L19ebbc.  v0:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L19ebc0.  if v0 == 0 then goto L19ebdc;
  #L19ebc4.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L19ebc8.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L19ebce.  v0:= temp @kind object;
  #L19ebd0.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L19ebd4.  if v0 != v1 then goto L19ebdc;
  #L19ebd8.  v0:= 1I;
  #L19ebda.  return v0;
  #L19ebdc.  v0:= 0I;
  #L19ebde.  goto L19ebda;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ebf0.  v0:= v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19ebf4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ec08.  v0:= new `java.lang.StringBuilder`;
  #L19ec0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ec12.  v1:= "Route{" @kind object;
  #L19ec16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ec1c.  v0:= temp @kind object;
  #L19ec1e.  v1:= v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L19ec22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ec28.  v0:= temp @kind object;
  #L19ec2a.  v1:= "}" @kind object;
  #L19ec2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ec34.  v0:= temp @kind object;
  #L19ec36.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ec3c.  v0:= temp @kind object;
  #L19ec3e.  return v0 @kind object;
}

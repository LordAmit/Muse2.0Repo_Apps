record `okhttp3.CertificatePinner` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.internal.tls.CertificateChainCleaner` `okhttp3.CertificatePinner.certificateChainCleaner` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `okhttp3.CertificatePinner.pins` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.CertificatePinner` `@@okhttp3.CertificatePinner.DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/CertificatePinner;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L195924.  v0:= new `okhttp3.CertificatePinner$Builder`;
  #L195928.  call `<init>`(v0) @signature `Lokhttp3/CertificatePinner$Builder;.<init>:()V` @kind direct;
  #L19592e.  call temp:= `build`(v0) @signature `Lokhttp3/CertificatePinner$Builder;.build:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L195934.  v0:= temp @kind object;
  #L195936.  `@@okhttp3.CertificatePinner.DEFAULT` @type ^`okhttp3.CertificatePinner` := v0 @kind object;
  #L19593a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner` v0 @kind this, `java.util.Set` v1 @kind object, `okhttp3.internal.tls.CertificateChainCleaner` v2 @kind object @name `certificateChainCleaner`) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L19594c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L195952.  v0.`okhttp3.CertificatePinner.pins` @type ^`java.util.Set` := v1 @kind object;
  #L195956.  v0.`okhttp3.CertificatePinner.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v2 @kind object;
  #L19595a.  return @kind void;
}
procedure `java.lang.String` `pin`(`java.security.cert.Certificate` v2 @kind object @name `certificate`) @signature `Lokhttp3/CertificatePinner;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19596c.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L195970.  if v0 != 0 then goto L195984;
  #L195974.  v0:= new `java.lang.IllegalArgumentException`;
  #L195978.  v1:= "Certificate pinning requires X509 certificates" @kind object;
  #L19597c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L195982.  throw v0;
  #L195984.  v0:= new `java.lang.StringBuilder`;
  #L195988.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19598e.  v1:= "sha256/" @kind object;
  #L195992.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195998.  v0:= temp @kind object;
  #L19599a.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L19599e.  call temp:= `sha256`(v2) @signature `Lokhttp3/CertificatePinner;.sha256:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind static;
  #L1959a4.  v1:= temp @kind object;
  #L1959a6.  call temp:= `base64`(v1) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L1959ac.  v1:= temp @kind object;
  #L1959ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1959b4.  v0:= temp @kind object;
  #L1959b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1959bc.  v0:= temp @kind object;
  #L1959be.  return v0 @kind object;
}
procedure `okio.ByteString` `sha1`(`java.security.cert.X509Certificate` v1 @kind object @name `x509Certificate`) @signature `Lokhttp3/CertificatePinner;.sha1:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag STATIC {
    temp;
    v0;

  #L1959d0.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L1959d6.  v0:= temp @kind object;
  #L1959d8.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L1959de.  v0:= temp @kind object;
  #L1959e0.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L1959e6.  v0:= temp @kind object;
  #L1959e8.  call temp:= `sha1`(v0) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @kind virtual;
  #L1959ee.  v0:= temp @kind object;
  #L1959f0.  return v0 @kind object;
}
procedure `okio.ByteString` `sha256`(`java.security.cert.X509Certificate` v1 @kind object @name `x509Certificate`) @signature `Lokhttp3/CertificatePinner;.sha256:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag STATIC {
    temp;
    v0;

  #L195a04.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L195a0a.  v0:= temp @kind object;
  #L195a0c.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L195a12.  v0:= temp @kind object;
  #L195a14.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L195a1a.  v0:= temp @kind object;
  #L195a1c.  call temp:= `sha256`(v0) @signature `Lokio/ByteString;.sha256:()Lokio/ByteString;` @kind virtual;
  #L195a22.  v0:= temp @kind object;
  #L195a24.  return v0 @kind object;
}
procedure `void` `check`(`okhttp3.CertificatePinner` v13 @kind this, `java.lang.String` v14 @kind object @name `hostname`, `java.util.List` v15 @kind object) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L195a38.  call temp:= `findMatchingPins`(v13, v14) @signature `Lokhttp3/CertificatePinner;.findMatchingPins:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L195a3e.  v5:= temp @kind object;
  #L195a40.  call temp:= `isEmpty`(v5) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L195a46.  v10:= temp;
  #L195a48.  if v10 == 0 then goto L195a4e;
  #L195a4c.  return @kind void;
  #L195a4e.  v10:= v13.`okhttp3.CertificatePinner.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L195a52.  if v10 == 0 then goto L195a62;
  #L195a56.  v10:= v13.`okhttp3.CertificatePinner.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L195a5a.  call temp:= `clean`(v10, v15, v14) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.clean:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L195a60.  v15:= temp @kind object;
  #L195a62.  v0:= 0I;
  #L195a64.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L195a6a.  v1:= temp;
  #L195a6c.  if v0 >= v1 then goto L195b3e;
  #L195a70.  call temp:= `get`(v15, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L195a76.  v9:= temp @kind object;
  #L195a78.  v9:= (`java.security.cert.X509Certificate`) v9 @kind object;
  #L195a7c.  v7:= 0I;
  #L195a7e.  v8:= 0I;
  #L195a80.  v3:= 0I;
  #L195a82.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L195a88.  v6:= temp;
  #L195a8a.  if v3 >= v6 then goto L195b38;
  #L195a8e.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L195a94.  v4:= temp @kind object;
  #L195a96.  v4:= (`okhttp3.CertificatePinner$Pin`) v4 @kind object;
  #L195a9a.  v10:= v4.`okhttp3.CertificatePinner$Pin.hashAlgorithm` @type ^`java.lang.String` @kind object;
  #L195a9e.  v11:= "sha256/" @kind object;
  #L195aa2.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195aa8.  v10:= temp;
  #L195aaa.  if v10 == 0 then goto L195ad0;
  #L195aae.  if v8 != 0 then goto L195aba;
  #L195ab2.  call temp:= `sha256`(v9) @signature `Lokhttp3/CertificatePinner;.sha256:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind static;
  #L195ab8.  v8:= temp @kind object;
  #L195aba.  v10:= v4.`okhttp3.CertificatePinner$Pin.hash` @type ^`okio.ByteString` @kind object;
  #L195abe.  call temp:= `equals`(v10, v8) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195ac4.  v10:= temp;
  #L195ac6.  if v10 != 0 then goto L195a4c;
  #L195aca.  v3:= v3 + 1;
  #L195ace.  goto L195a8a;
  #L195ad0.  v10:= v4.`okhttp3.CertificatePinner$Pin.hashAlgorithm` @type ^`java.lang.String` @kind object;
  #L195ad4.  v11:= "sha1/" @kind object;
  #L195ad8.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195ade.  v10:= temp;
  #L195ae0.  if v10 == 0 then goto L195b02;
  #L195ae4.  if v7 != 0 then goto L195af0;
  #L195ae8.  call temp:= `sha1`(v9) @signature `Lokhttp3/CertificatePinner;.sha1:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind static;
  #L195aee.  v7:= temp @kind object;
  #L195af0.  v10:= v4.`okhttp3.CertificatePinner$Pin.hash` @type ^`okio.ByteString` @kind object;
  #L195af4.  call temp:= `equals`(v10, v7) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195afa.  v10:= temp;
  #L195afc.  if v10 == 0 then goto L195aca;
  #L195b00.  goto L195a4c;
  #L195b02.  v10:= new `java.lang.AssertionError`;
  #L195b06.  v11:= new `java.lang.StringBuilder`;
  #L195b0a.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L195b10.  v12:= "unsupported hashAlgorithm: " @kind object;
  #L195b14.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195b1a.  v11:= temp @kind object;
  #L195b1c.  v12:= v4.`okhttp3.CertificatePinner$Pin.hashAlgorithm` @type ^`java.lang.String` @kind object;
  #L195b20.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195b26.  v11:= temp @kind object;
  #L195b28.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L195b2e.  v11:= temp @kind object;
  #L195b30.  call `<init>`(v10, v11) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L195b36.  throw v10;
  #L195b38.  v0:= v0 + 1;
  #L195b3c.  goto L195a6c;
  #L195b3e.  v10:= new `java.lang.StringBuilder`;
  #L195b42.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L195b48.  v11:= "Certificate pinning failure!" @kind object;
  #L195b4c.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195b52.  v10:= temp @kind object;
  #L195b54.  v11:= "\n  Peer certificate chain:" @kind object;
  #L195b58.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195b5e.  v2:= temp @kind object;
  #L195b60.  v0:= 0I;
  #L195b62.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L195b68.  v1:= temp;
  #L195b6a.  if v0 >= v1 then goto L195bbe;
  #L195b6e.  call temp:= `get`(v15, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L195b74.  v9:= temp @kind object;
  #L195b76.  v9:= (`java.security.cert.X509Certificate`) v9 @kind object;
  #L195b7a.  v10:= "\n    " @kind object;
  #L195b7e.  call temp:= `append`(v2, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195b84.  v10:= temp @kind object;
  #L195b86.  call temp:= `pin`(v9) @signature `Lokhttp3/CertificatePinner;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L195b8c.  v11:= temp @kind object;
  #L195b8e.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195b94.  v10:= temp @kind object;
  #L195b96.  v11:= ": " @kind object;
  #L195b9a.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195ba0.  v10:= temp @kind object;
  #L195ba2.  call temp:= `getSubjectDN`(v9) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L195ba8.  v11:= temp @kind object;
  #L195baa.  call temp:= `getName`(v11) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L195bb0.  v11:= temp @kind object;
  #L195bb2.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195bb8.  v0:= v0 + 1;
  #L195bbc.  goto L195b6a;
  #L195bbe.  v10:= "\n  Pinned certificates for " @kind object;
  #L195bc2.  call temp:= `append`(v2, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195bc8.  v10:= temp @kind object;
  #L195bca.  call temp:= `append`(v10, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195bd0.  v10:= temp @kind object;
  #L195bd2.  v11:= ":" @kind object;
  #L195bd6.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195bdc.  v3:= 0I;
  #L195bde.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L195be4.  v6:= temp;
  #L195be6.  if v3 >= v6 then goto L195c0e;
  #L195bea.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L195bf0.  v4:= temp @kind object;
  #L195bf2.  v4:= (`okhttp3.CertificatePinner$Pin`) v4 @kind object;
  #L195bf6.  v10:= "\n    " @kind object;
  #L195bfa.  call temp:= `append`(v2, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195c00.  v10:= temp @kind object;
  #L195c02.  call temp:= `append`(v10, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L195c08.  v3:= v3 + 1;
  #L195c0c.  goto L195be6;
  #L195c0e.  v10:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L195c12.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L195c18.  v11:= temp @kind object;
  #L195c1a.  call `<init>`(v10, v11) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L195c20.  throw v10;
}
procedure `void` `check`(`okhttp3.CertificatePinner` v1 @kind this, `java.lang.String` v2 @kind object @name `hostname`, `java.security.cert.Certificate`[] v3 @kind object @name `peerCertificates`) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;[Ljava/security/cert/Certificate;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L195c34.  call temp:= `asList`(v3) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L195c3a.  v0:= temp @kind object;
  #L195c3c.  call `check`(v1, v2, v0) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L195c42.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.CertificatePinner` v3 @kind this, `java.lang.Object` v4 @kind object @name `other`) @signature `Lokhttp3/CertificatePinner;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L195c54.  v1:= 1I;
  #L195c56.  if v4 != v3 then goto L195c5c;
  #L195c5a.  return v1;
  #L195c5c.  v0:= instanceof @variable v4 @type ^`okhttp3.CertificatePinner` @kind boolean;
  #L195c60.  if v0 == 0 then goto L195c9c;
  #L195c64.  v2:= v3.`okhttp3.CertificatePinner.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L195c68.  v0:= v4 @kind object;
  #L195c6a.  v0:= (`okhttp3.CertificatePinner`) v0 @kind object;
  #L195c6e.  v0:= v0.`okhttp3.CertificatePinner.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L195c72.  call temp:= `equal`(v2, v0) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L195c78.  v0:= temp;
  #L195c7a.  if v0 == 0 then goto L195c9c;
  #L195c7e.  v0:= v3.`okhttp3.CertificatePinner.pins` @type ^`java.util.Set` @kind object;
  #L195c82.  v4:= (`okhttp3.CertificatePinner`) v4 @kind object;
  #L195c86.  v2:= v4.`okhttp3.CertificatePinner.pins` @type ^`java.util.Set` @kind object;
  #L195c8a.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L195c90.  v0:= temp;
  #L195c92.  if v0 == 0 then goto L195c9c;
  #L195c96.  v0:= v1;
  #L195c98.  v1:= v0;
  #L195c9a.  goto L195c5a;
  #L195c9c.  v0:= 0I;
  #L195c9e.  goto L195c98;
}
procedure `java.util.List` `findMatchingPins`(`okhttp3.CertificatePinner` v4 @kind this, `java.lang.String` v5 @kind object @name `hostname`) @signature `Lokhttp3/CertificatePinner;.findMatchingPins:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L195cb0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L195cb6.  v1:= temp @kind object;
  #L195cb8.  v2:= v4.`okhttp3.CertificatePinner.pins` @type ^`java.util.Set` @kind object;
  #L195cbc.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L195cc2.  v2:= temp @kind object;
  #L195cc4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L195cca.  v3:= temp;
  #L195ccc.  if v3 == 0 then goto L195d06;
  #L195cd0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L195cd6.  v0:= temp @kind object;
  #L195cd8.  v0:= (`okhttp3.CertificatePinner$Pin`) v0 @kind object;
  #L195cdc.  call temp:= `matches`(v0, v5) @signature `Lokhttp3/CertificatePinner$Pin;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L195ce2.  v3:= temp;
  #L195ce4.  if v3 == 0 then goto L195cc4;
  #L195ce8.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L195cee.  v3:= temp;
  #L195cf0.  if v3 == 0 then goto L195cfe;
  #L195cf4.  v1:= new `java.util.ArrayList`;
  #L195cf8.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L195cfe.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L195d04.  goto L195cc4;
  #L195d06.  return v1 @kind object;
}
procedure `int` `hashCode`(`okhttp3.CertificatePinner` v3 @kind this) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L195d18.  v1:= v3.`okhttp3.CertificatePinner.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L195d1c.  if v1 == 0 then goto L195d42;
  #L195d20.  v1:= v3.`okhttp3.CertificatePinner.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L195d24.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L195d2a.  v0:= temp;
  #L195d2c.  v1:= v0 * 31;
  #L195d30.  v2:= v3.`okhttp3.CertificatePinner.pins` @type ^`java.util.Set` @kind object;
  #L195d34.  call temp:= `hashCode`(v2) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L195d3a.  v2:= temp;
  #L195d3c.  v0:= v1 + v2 @kind int;
  #L195d40.  return v0;
  #L195d42.  v0:= 0I;
  #L195d44.  goto L195d2c;
}
procedure `okhttp3.CertificatePinner` `withCertificateChainCleaner`(`okhttp3.CertificatePinner` v2 @kind this, `okhttp3.internal.tls.CertificateChainCleaner` v3 @kind object @name `certificateChainCleaner`) @signature `Lokhttp3/CertificatePinner;.withCertificateChainCleaner:(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L195d58.  v0:= v2.`okhttp3.CertificatePinner.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L195d5c.  call temp:= `equal`(v0, v3) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L195d62.  v0:= temp;
  #L195d64.  if v0 == 0 then goto L195d6a;
  #L195d68.  return v2 @kind object;
  #L195d6a.  v0:= new `okhttp3.CertificatePinner`;
  #L195d6e.  v1:= v2.`okhttp3.CertificatePinner.pins` @type ^`java.util.Set` @kind object;
  #L195d72.  call `<init>`(v0, v1, v3) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @kind direct;
  #L195d78.  v2:= v0 @kind object;
  #L195d7a.  goto L195d68;
}

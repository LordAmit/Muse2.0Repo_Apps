record `okhttp3.RealCall$AsyncCall` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.Callback` `okhttp3.RealCall$AsyncCall.responseCallback` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RealCall` `okhttp3.RealCall$AsyncCall.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RealCall$AsyncCall` v4 @kind this, `okhttp3.RealCall` v5 @kind object @name `this$0`, `okhttp3.Callback` v6 @kind object @name `responseCallback`) @signature `Lokhttp3/RealCall$AsyncCall;.<init>:(Lokhttp3/RealCall;Lokhttp3/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L215e80.  v4.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` := v5 @kind object;
  #L215e84.  v0:= "OkHttp %s" @kind object;
  #L215e88.  v1:= 1I;
  #L215e8a.  v1:= new `java.lang.Object`[v1];
  #L215e8e.  v2:= 0I;
  #L215e90.  call temp:= `redactedUrl`(v5) @signature `Lokhttp3/RealCall;.redactedUrl:()Ljava/lang/String;` @kind virtual;
  #L215e96.  v3:= temp @kind object;
  #L215e98.  v1[v2]:= v3 @kind object;
  #L215e9c.  call `<init>`(v4, v0, v1) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L215ea2.  v4.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` := v6 @kind object;
  #L215ea6.  return @kind void;
}
procedure `void` `execute`(`okhttp3.RealCall$AsyncCall` v7 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L215eb8.  v2:= 0I;
  #Try_start0.  
  #L215eba.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215ebe.  call temp:= `getResponseWithInterceptorChain`(v3) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:()Lokhttp3/Response;` @kind virtual;
  #L215ec4.  v1:= temp @kind object;
  #L215ec6.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215eca.  v3:= v3.`okhttp3.RealCall.retryAndFollowUpInterceptor` @type ^`okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind object;
  #L215ece.  call temp:= `isCanceled`(v3) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isCanceled:()Z` @kind virtual;
  #L215ed4.  v3:= temp;
  #L215ed6.  if v3 == 0 then goto L215f10;
  #L215eda.  v2:= 1I;
  #L215edc.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L215ee0.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215ee4.  v5:= new `java.io.IOException`;
  #L215ee8.  v6:= "Canceled" @kind object;
  #L215eec.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L215ef2.  call `onFailure`(v3, v4, v5) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #Try_end0.  
  #L215ef8.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215efc.  v3:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L215f00.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L215f06.  v3:= temp @kind object;
  #L215f08.  call `finished`(v3, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L215f0e.  return @kind void;
  #L215f10.  v2:= 1I;
  #Try_start1.  
  #L215f12.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L215f16.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215f1a.  call `onResponse`(v3, v4, v1) @signature `Lokhttp3/Callback;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind interface;
  #Try_end1.  
  #L215f20.  goto L215ef8;
  #L215f22.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L215f24.  if v2 == 0 then goto L215f82;
  #Try_start2.  
  #L215f28.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L215f2e.  v3:= temp @kind object;
  #L215f30.  v4:= 4I;
  #L215f32.  v5:= new `java.lang.StringBuilder`;
  #L215f36.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L215f3c.  v6:= "Callback failure for " @kind object;
  #L215f40.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L215f46.  v5:= temp @kind object;
  #L215f48.  v6:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215f4c.  call temp:= `toLoggableString`(v6) @signature `Lokhttp3/RealCall;.toLoggableString:()Ljava/lang/String;` @kind virtual;
  #L215f52.  v6:= temp @kind object;
  #L215f54.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L215f5a.  v5:= temp @kind object;
  #L215f5c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L215f62.  v5:= temp @kind object;
  #L215f64.  call `log`(v3, v4, v5, v0) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #Try_end2.  
  #L215f6a.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215f6e.  v3:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L215f72.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L215f78.  v3:= temp @kind object;
  #L215f7a.  call `finished`(v3, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L215f80.  goto L215f0e;
  #Try_start3.  
  #L215f82.  v3:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215f86.  call temp:= `access$000`(v3) @signature `Lokhttp3/RealCall;.access$000:(Lokhttp3/RealCall;)Lokhttp3/EventListener;` @kind static;
  #L215f8c.  v3:= temp @kind object;
  #L215f8e.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215f92.  call `callFailed`(v3, v4, v0) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L215f98.  v3:= v7.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L215f9c.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215fa0.  call `onFailure`(v3, v4, v0) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #Try_end3.  
  #L215fa6.  goto L215f6a;
  #L215fa8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L215faa.  v4:= v7.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L215fae.  v4:= v4.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L215fb2.  call temp:= `dispatcher`(v4) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L215fb8.  v4:= temp @kind object;
  #L215fba.  call `finished`(v4, v7) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L215fc0.  throw v3;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L215f22;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L215fa8;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L215f22;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L215fa8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L215fa8;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L215fa8;
}
procedure `okhttp3.RealCall` `get`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @AccessFlag  {
    temp;
    v0;

  #L215ffc.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L216000.  return v0 @kind object;
}
procedure `java.lang.String` `host`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L216014.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L216018.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L21601c.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L216022.  v0:= temp @kind object;
  #L216024.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L21602a.  v0:= temp @kind object;
  #L21602c.  return v0 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.request:()Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;

  #L216040.  v0:= v1.`okhttp3.RealCall$AsyncCall.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L216044.  v0:= v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L216048.  return v0 @kind object;
}

record `okhttp3.Request$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.RequestBody` `okhttp3.Request$Builder.body` @AccessFlag ;
  `okhttp3.Headers$Builder` `okhttp3.Request$Builder.headers` @AccessFlag ;
  `java.lang.String` `okhttp3.Request$Builder.method` @AccessFlag ;
  `java.lang.Object` `okhttp3.Request$Builder.tag` @AccessFlag ;
  `okhttp3.HttpUrl` `okhttp3.Request$Builder.url` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19d638.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19d63e.  v0:= "GET" @kind object;
  #L19d642.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L19d646.  v0:= new `okhttp3.Headers$Builder`;
  #L19d64a.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L19d650.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19d654.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L19d668.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19d66e.  v0:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19d672.  v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L19d676.  v0:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19d67a.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L19d67e.  v0:= v2.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19d682.  v1.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19d686.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19d68a.  v1.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L19d68e.  v0:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19d692.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L19d698.  v0:= temp @kind object;
  #L19d69a.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19d69e.  return @kind void;
}
procedure `okhttp3.Request$Builder` `addHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d6b0.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19d6b4.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19d6ba.  return v1 @kind object;
}
procedure `okhttp3.Request` `build`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d6cc.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19d6d0.  if v0 != 0 then goto L19d6e4;
  #L19d6d4.  v0:= new `java.lang.IllegalStateException`;
  #L19d6d8.  v1:= "url == null" @kind object;
  #L19d6dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d6e2.  throw v0;
  #L19d6e4.  v0:= new `okhttp3.Request`;
  #L19d6e8.  call `<init>`(v0, v2) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @kind direct;
  #L19d6ee.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `cacheControl`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.CacheControl` v3 @kind object @name `cacheControl`) @signature `Lokhttp3/Request$Builder;.cacheControl:(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d700.  call temp:= `toString`(v3) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d706.  v0:= temp @kind object;
  #L19d708.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19d70e.  v1:= temp;
  #L19d710.  if v1 == 0 then goto L19d722;
  #L19d714.  v1:= "Cache-Control" @kind object;
  #L19d718.  call temp:= `removeHeader`(v2, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d71e.  v1:= temp @kind object;
  #L19d720.  return v1 @kind object;
  #L19d722.  v1:= "Cache-Control" @kind object;
  #L19d726.  call temp:= `header`(v2, v1, v0) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d72c.  v1:= temp @kind object;
  #L19d72e.  goto L19d720;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.delete:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d740.  v0:= `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` @kind object;
  #L19d744.  call temp:= `delete`(v1, v0) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d74a.  v0:= temp @kind object;
  #L19d74c.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d760.  v0:= "DELETE" @kind object;
  #L19d764.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d76a.  v0:= temp @kind object;
  #L19d76c.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `get`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.get:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d780.  v0:= "GET" @kind object;
  #L19d784.  v1:= 0I;
  #L19d786.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d78c.  v0:= temp @kind object;
  #L19d78e.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `head`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.head:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19d7a0.  v0:= "HEAD" @kind object;
  #L19d7a4.  v1:= 0I;
  #L19d7a6.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d7ac.  v0:= temp @kind object;
  #L19d7ae.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `header`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d7c0.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19d7c4.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19d7ca.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `headers`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object @name `headers`) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d7dc.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L19d7e2.  v0:= temp @kind object;
  #L19d7e4.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L19d7e8.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `method`(`okhttp3.Request$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `method`, `okhttp3.RequestBody` v5 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19d7fc.  if v4 != 0 then goto L19d810;
  #L19d800.  v0:= new `java.lang.NullPointerException`;
  #L19d804.  v1:= "method == null" @kind object;
  #L19d808.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d80e.  throw v0;
  #L19d810.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19d816.  v0:= temp;
  #L19d818.  if v0 != 0 then goto L19d82c;
  #L19d81c.  v0:= new `java.lang.IllegalArgumentException`;
  #L19d820.  v1:= "method.length() == 0" @kind object;
  #L19d824.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d82a.  throw v0;
  #L19d82c.  if v5 == 0 then goto L19d87a;
  #L19d830.  call temp:= `permitsRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L19d836.  v0:= temp;
  #L19d838.  if v0 != 0 then goto L19d87a;
  #L19d83c.  v0:= new `java.lang.IllegalArgumentException`;
  #L19d840.  v1:= new `java.lang.StringBuilder`;
  #L19d844.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d84a.  v2:= "method " @kind object;
  #L19d84e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d854.  v1:= temp @kind object;
  #L19d856.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d85c.  v1:= temp @kind object;
  #L19d85e.  v2:= " must not have a request body." @kind object;
  #L19d862.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d868.  v1:= temp @kind object;
  #L19d86a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d870.  v1:= temp @kind object;
  #L19d872.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d878.  throw v0;
  #L19d87a.  if v5 != 0 then goto L19d8c8;
  #L19d87e.  call temp:= `requiresRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L19d884.  v0:= temp;
  #L19d886.  if v0 == 0 then goto L19d8c8;
  #L19d88a.  v0:= new `java.lang.IllegalArgumentException`;
  #L19d88e.  v1:= new `java.lang.StringBuilder`;
  #L19d892.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d898.  v2:= "method " @kind object;
  #L19d89c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d8a2.  v1:= temp @kind object;
  #L19d8a4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d8aa.  v1:= temp @kind object;
  #L19d8ac.  v2:= " must have a request body." @kind object;
  #L19d8b0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d8b6.  v1:= temp @kind object;
  #L19d8b8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d8be.  v1:= temp @kind object;
  #L19d8c0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d8c6.  throw v0;
  #L19d8c8.  v3.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v4 @kind object;
  #L19d8cc.  v3.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v5 @kind object;
  #L19d8d0.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `patch`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.patch:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d8e4.  v0:= "PATCH" @kind object;
  #L19d8e8.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d8ee.  v0:= temp @kind object;
  #L19d8f0.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `post`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d904.  v0:= "POST" @kind object;
  #L19d908.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d90e.  v0:= temp @kind object;
  #L19d910.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `put`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.put:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d924.  v0:= "PUT" @kind object;
  #L19d928.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19d92e.  v0:= temp @kind object;
  #L19d930.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `removeHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19d944.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19d948.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19d94e.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v0 @kind this, `java.lang.Object` v1 @kind object @name `tag`) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19d960.  v0.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v1 @kind object;
  #L19d964.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19d978.  v7:= 4I;
  #L19d97a.  v5:= 3I;
  #L19d97c.  v1:= 1I;
  #L19d97e.  v2:= 0I;
  #L19d980.  if v9 != 0 then goto L19d994;
  #L19d984.  v0:= new `java.lang.NullPointerException`;
  #L19d988.  v1:= "url == null" @kind object;
  #L19d98c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19d992.  throw v0;
  #L19d994.  v3:= "ws:" @kind object;
  #L19d998.  v0:= v9 @kind object;
  #L19d99a.  v4:= v2;
  #L19d99c.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19d9a2.  v0:= temp;
  #L19d9a4.  if v0 == 0 then goto L19da14;
  #L19d9a8.  v0:= new `java.lang.StringBuilder`;
  #L19d9ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d9b2.  v1:= "http:" @kind object;
  #L19d9b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d9bc.  v0:= temp @kind object;
  #L19d9be.  call temp:= `substring`(v9, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19d9c4.  v1:= temp @kind object;
  #L19d9c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d9cc.  v0:= temp @kind object;
  #L19d9ce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19d9d4.  v9:= temp @kind object;
  #L19d9d6.  call temp:= `parse`(v9) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19d9dc.  v6:= temp @kind object;
  #L19d9de.  if v6 != 0 then goto L19da5a;
  #L19d9e2.  v0:= new `java.lang.IllegalArgumentException`;
  #L19d9e6.  v1:= new `java.lang.StringBuilder`;
  #L19d9ea.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19d9f0.  v2:= "unexpected url: " @kind object;
  #L19d9f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19d9fa.  v1:= temp @kind object;
  #L19d9fc.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19da02.  v1:= temp @kind object;
  #L19da04.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19da0a.  v1:= temp @kind object;
  #L19da0c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19da12.  throw v0;
  #L19da14.  v3:= "wss:" @kind object;
  #L19da18.  v0:= v9 @kind object;
  #L19da1a.  v4:= v2;
  #L19da1c.  v5:= v7;
  #L19da1e.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19da24.  v0:= temp;
  #L19da26.  if v0 == 0 then goto L19d9d6;
  #L19da2a.  v0:= new `java.lang.StringBuilder`;
  #L19da2e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19da34.  v1:= "https:" @kind object;
  #L19da38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19da3e.  v0:= temp @kind object;
  #L19da40.  call temp:= `substring`(v9, v7) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19da46.  v1:= temp @kind object;
  #L19da48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19da4e.  v0:= temp @kind object;
  #L19da50.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19da56.  v9:= temp @kind object;
  #L19da58.  goto L19d9d6;
  #L19da5a.  call temp:= `url`(v8, v6) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19da60.  v0:= temp @kind object;
  #L19da62.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v4 @kind this, `java.net.URL` v5 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Ljava/net/URL;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19da74.  if v5 != 0 then goto L19da88;
  #L19da78.  v1:= new `java.lang.NullPointerException`;
  #L19da7c.  v2:= "url == null" @kind object;
  #L19da80.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19da86.  throw v1;
  #L19da88.  call temp:= `get`(v5) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @kind static;
  #L19da8e.  v0:= temp @kind object;
  #L19da90.  if v0 != 0 then goto L19dac6;
  #L19da94.  v1:= new `java.lang.IllegalArgumentException`;
  #L19da98.  v2:= new `java.lang.StringBuilder`;
  #L19da9c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19daa2.  v3:= "unexpected url: " @kind object;
  #L19daa6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19daac.  v2:= temp @kind object;
  #L19daae.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dab4.  v2:= temp @kind object;
  #L19dab6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19dabc.  v2:= temp @kind object;
  #L19dabe.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19dac4.  throw v1;
  #L19dac6.  call temp:= `url`(v4, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19dacc.  v1:= temp @kind object;
  #L19dace.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19dae0.  if v3 != 0 then goto L19daf4;
  #L19dae4.  v0:= new `java.lang.NullPointerException`;
  #L19dae8.  v1:= "url == null" @kind object;
  #L19daec.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19daf2.  throw v0;
  #L19daf4.  v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L19daf8.  return v2 @kind object;
}

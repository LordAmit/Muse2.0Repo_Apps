record `okhttp3.Response` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.ResponseBody` `okhttp3.Response.body` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Response.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Response` `okhttp3.Response.cacheResponse` @AccessFlag FINAL;
  `int` `okhttp3.Response.code` @AccessFlag FINAL;
  `okhttp3.Handshake` `okhttp3.Response.handshake` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.Response.headers` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Response.message` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.networkResponse` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.priorResponse` @AccessFlag FINAL;
  `okhttp3.Protocol` `okhttp3.Response.protocol` @AccessFlag FINAL;
  `long` `okhttp3.Response.receivedResponseAtMillis` @AccessFlag FINAL;
  `okhttp3.Request` `okhttp3.Response.request` @AccessFlag FINAL;
  `long` `okhttp3.Response.sentRequestAtMillis` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Response` v2 @kind this, `okhttp3.Response$Builder` v3 @kind object @name `builder`) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Response$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19e264.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19e26a.  v0:= v3.`okhttp3.Response$Builder.request` @type ^`okhttp3.Request` @kind object;
  #L19e26e.  v2.`okhttp3.Response.request` @type ^`okhttp3.Request` := v0 @kind object;
  #L19e272.  v0:= v3.`okhttp3.Response$Builder.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19e276.  v2.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L19e27a.  v0:= v3.`okhttp3.Response$Builder.code` @type ^`int`;
  #L19e27e.  v2.`okhttp3.Response.code` @type ^`int` := v0;
  #L19e282.  v0:= v3.`okhttp3.Response$Builder.message` @type ^`java.lang.String` @kind object;
  #L19e286.  v2.`okhttp3.Response.message` @type ^`java.lang.String` := v0 @kind object;
  #L19e28a.  v0:= v3.`okhttp3.Response$Builder.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19e28e.  v2.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L19e292.  v0:= v3.`okhttp3.Response$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19e296.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19e29c.  v0:= temp @kind object;
  #L19e29e.  v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19e2a2.  v0:= v3.`okhttp3.Response$Builder.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e2a6.  v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L19e2aa.  v0:= v3.`okhttp3.Response$Builder.networkResponse` @type ^`okhttp3.Response` @kind object;
  #L19e2ae.  v2.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19e2b2.  v0:= v3.`okhttp3.Response$Builder.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19e2b6.  v2.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19e2ba.  v0:= v3.`okhttp3.Response$Builder.priorResponse` @type ^`okhttp3.Response` @kind object;
  #L19e2be.  v2.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L19e2c2.  v0:= v3.`okhttp3.Response$Builder.sentRequestAtMillis` @type ^`long` @kind wide;
  #L19e2c6.  v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` := v0 @kind wide;
  #L19e2ca.  v0:= v3.`okhttp3.Response$Builder.receivedResponseAtMillis` @type ^`long` @kind wide;
  #L19e2ce.  v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` := v0 @kind wide;
  #L19e2d2.  return @kind void;
}
procedure `okhttp3.ResponseBody` `body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e2e4.  v0:= v1.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e2e8.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e2fc.  v0:= v2.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L19e300.  if v0 == 0 then goto L19e306;
  #L19e304.  return v0 @kind object;
  #L19e306.  v1:= v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19e30a.  call temp:= `parse`(v1) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L19e310.  v0:= temp @kind object;
  #L19e312.  v2.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L19e316.  goto L19e304;
}
procedure `okhttp3.Response` `cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e328.  v0:= v1.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L19e32c.  return v0 @kind object;
}
procedure `java.util.List` `challenges`(`okhttp3.Response` v3 @kind this) @signature `Lokhttp3/Response;.challenges:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19e340.  v1:= v3.`okhttp3.Response.code` @type ^`int`;
  #L19e344.  v2:= 401I;
  #L19e348.  if v1 != v2 then goto L19e362;
  #L19e34c.  v0:= "WWW-Authenticate" @kind object;
  #L19e350.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L19e356.  v1:= temp @kind object;
  #L19e358.  call temp:= `parseChallenges`(v1, v0) @signature `Lokhttp3/internal/http/HttpHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19e35e.  v1:= temp @kind object;
  #L19e360.  return v1 @kind object;
  #L19e362.  v1:= v3.`okhttp3.Response.code` @type ^`int`;
  #L19e366.  v2:= 407I;
  #L19e36a.  if v1 != v2 then goto L19e374;
  #L19e36e.  v0:= "Proxy-Authenticate" @kind object;
  #L19e372.  goto L19e350;
  #L19e374.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L19e37a.  v1:= temp @kind object;
  #L19e37c.  goto L19e360;
}
procedure `void` `close`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e390.  v0:= v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e394.  if v0 != 0 then goto L19e3a8;
  #L19e398.  v0:= new `java.lang.IllegalStateException`;
  #L19e39c.  v1:= "response is not eligible for a body and must not be closed" @kind object;
  #L19e3a0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19e3a6.  throw v0;
  #L19e3a8.  v0:= v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e3ac.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L19e3b2.  return @kind void;
}
procedure `int` `code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e3c4.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L19e3c8.  return v0;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e3dc.  v0:= v1.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19e3e0.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e3f4.  v0:= 0I;
  #L19e3f6.  call temp:= `header`(v1, v2, v0) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19e3fc.  v0:= temp @kind object;
  #L19e3fe.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v2 @kind this, `java.lang.String` v3 @kind object @name `name`, `java.lang.String` v4 @kind object @name `defaultValue`) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e410.  v1:= v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19e414.  call temp:= `get`(v1, v3) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19e41a.  v0:= temp @kind object;
  #L19e41c.  if v0 == 0 then goto L19e422;
  #L19e420.  return v0 @kind object;
  #L19e422.  v0:= v4 @kind object;
  #L19e424.  goto L19e420;
}
procedure `java.util.List` `headers`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Response;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e438.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19e43c.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L19e442.  v0:= temp @kind object;
  #L19e444.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e458.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L19e45c.  return v0 @kind object;
}
procedure `boolean` `isRedirect`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.isRedirect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e470.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L19e474.  goto L19e484;
  #L19e47a.  v0:= 0I;
  #L19e47c.  return v0;
  #L19e47e.  v0:= 1I;
  #L19e480.  goto L19e47c;
  #L19e482.  
  #L19e484.  switch v0
                  | 300 => goto L19e47e
                  | 301 => goto L19e47e
                  | 302 => goto L19e47e
                  | 303 => goto L19e47e
                  | 304 => goto L19e47a
                  | 305 => goto L19e47a
                  | 306 => goto L19e47a
                  | 307 => goto L19e47e
                  | 308 => goto L19e47e
                  | else => goto L19e47a;
}
procedure `boolean` `isSuccessful`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e4c0.  v0:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19e4c4.  v1:= 200I;
  #L19e4c8.  if v0 < v1 then goto L19e4dc;
  #L19e4cc.  v0:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19e4d0.  v1:= 300I;
  #L19e4d4.  if v0 >= v1 then goto L19e4dc;
  #L19e4d8.  v0:= 1I;
  #L19e4da.  return v0;
  #L19e4dc.  v0:= 0I;
  #L19e4de.  goto L19e4da;
}
procedure `java.lang.String` `message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e4f0.  v0:= v1.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L19e4f4.  return v0 @kind object;
}
procedure `okhttp3.Response` `networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e508.  v0:= v1.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` @kind object;
  #L19e50c.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `newBuilder`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e520.  v0:= new `okhttp3.Response$Builder`;
  #L19e524.  call `<init>`(v0, v1) @signature `Lokhttp3/Response$Builder;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L19e52a.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `peekBody`(`okhttp3.Response` v7 @kind this, `long` v8 @name `byteCount`) @signature `Lokhttp3/Response;.peekBody:(J)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19e53c.  v3:= v7.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e540.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L19e546.  v2:= temp @kind object;
  #L19e548.  call temp:= `request`(v2, v8) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L19e54e.  call temp:= `buffer`(v2) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L19e554.  v3:= temp @kind object;
  #L19e556.  call temp:= `clone`(v3) @signature `Lokio/Buffer;.clone:()Lokio/Buffer;` @kind virtual;
  #L19e55c.  v0:= temp @kind object;
  #L19e55e.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L19e564.  v4:= temp @kind wide;
  #L19e566.  v3:= lcmp(v4, v8);
  #L19e56a.  if v3 <= 0 then goto L19e5a2;
  #L19e56e.  v1:= new `okio.Buffer`;
  #L19e572.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19e578.  call `write`(v1, v0, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L19e57e.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L19e584.  v3:= v7.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L19e588.  call temp:= `contentType`(v3) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L19e58e.  v3:= temp @kind object;
  #L19e590.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L19e596.  v4:= temp @kind wide;
  #L19e598.  call temp:= `create`(v3, v4, v1) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L19e59e.  v3:= temp @kind object;
  #L19e5a0.  return v3 @kind object;
  #L19e5a2.  v1:= v0 @kind object;
  #L19e5a4.  goto L19e584;
}
procedure `okhttp3.Response` `priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e5b8.  v0:= v1.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` @kind object;
  #L19e5bc.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e5d0.  v0:= v1.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19e5d4.  return v0 @kind object;
}
procedure `long` `receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e5e8.  v0:= v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` @kind wide;
  #L19e5ec.  return v0 @kind wide;
}
procedure `okhttp3.Request` `request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19e600.  v0:= v1.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L19e604.  return v0 @kind object;
}
procedure `long` `sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e618.  v0:= v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` @kind wide;
  #L19e61c.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19e630.  v0:= new `java.lang.StringBuilder`;
  #L19e634.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19e63a.  v1:= "Response{protocol=" @kind object;
  #L19e63e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e644.  v0:= temp @kind object;
  #L19e646.  v1:= v2.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19e64a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e650.  v0:= temp @kind object;
  #L19e652.  v1:= ", code=" @kind object;
  #L19e656.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e65c.  v0:= temp @kind object;
  #L19e65e.  v1:= v2.`okhttp3.Response.code` @type ^`int`;
  #L19e662.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e668.  v0:= temp @kind object;
  #L19e66a.  v1:= ", message=" @kind object;
  #L19e66e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e674.  v0:= temp @kind object;
  #L19e676.  v1:= v2.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L19e67a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e680.  v0:= temp @kind object;
  #L19e682.  v1:= ", url=" @kind object;
  #L19e686.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e68c.  v0:= temp @kind object;
  #L19e68e.  v1:= v2.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L19e692.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19e698.  v1:= temp @kind object;
  #L19e69a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e6a0.  v0:= temp @kind object;
  #L19e6a2.  v1:= 125I;
  #L19e6a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19e6ac.  v0:= temp @kind object;
  #L19e6ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19e6b4.  v0:= temp @kind object;
  #L19e6b6.  return v0 @kind object;
}

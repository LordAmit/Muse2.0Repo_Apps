record `okhttp3.MultipartBody$Part` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.MultipartBody$Part.body` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.MultipartBody$Part.headers` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Part` v0 @kind this, `okhttp3.Headers` v1 @kind object @name `headers`, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19cb6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19cb72.  v0.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` := v1 @kind object;
  #L19cb76.  v0.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L19cb7a.  return @kind void;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.Headers` v2 @kind object @name `headers`, `okhttp3.RequestBody` v3 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19cb8c.  if v3 != 0 then goto L19cba0;
  #L19cb90.  v0:= new `java.lang.NullPointerException`;
  #L19cb94.  v1:= "body == null" @kind object;
  #L19cb98.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cb9e.  throw v0;
  #L19cba0.  if v2 == 0 then goto L19cbc4;
  #L19cba4.  v0:= "Content-Type" @kind object;
  #L19cba8.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19cbae.  v0:= temp @kind object;
  #L19cbb0.  if v0 == 0 then goto L19cbc4;
  #L19cbb4.  v0:= new `java.lang.IllegalArgumentException`;
  #L19cbb8.  v1:= "Unexpected header: Content-Type" @kind object;
  #L19cbbc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cbc2.  throw v0;
  #L19cbc4.  if v2 == 0 then goto L19cbe8;
  #L19cbc8.  v0:= "Content-Length" @kind object;
  #L19cbcc.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19cbd2.  v0:= temp @kind object;
  #L19cbd4.  if v0 == 0 then goto L19cbe8;
  #L19cbd8.  v0:= new `java.lang.IllegalArgumentException`;
  #L19cbdc.  v1:= "Unexpected header: Content-Length" @kind object;
  #L19cbe0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cbe6.  throw v0;
  #L19cbe8.  v0:= new `okhttp3.MultipartBody$Part`;
  #L19cbec.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind direct;
  #L19cbf2.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.RequestBody` v1 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19cc04.  v0:= 0I;
  #L19cc06.  call temp:= `create`(v0, v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19cc0c.  v0:= temp @kind object;
  #L19cc0e.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19cc20.  v1:= 0I;
  #L19cc22.  call temp:= `create`(v1, v3) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L19cc28.  v0:= temp @kind object;
  #L19cc2a.  call temp:= `createFormData`(v2, v1, v0) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19cc30.  v0:= temp @kind object;
  #L19cc32.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v4 @kind object @name `name`, `java.lang.String` v5 @kind object @name `filename`, `okhttp3.RequestBody` v6 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19cc44.  if v4 != 0 then goto L19cc58;
  #L19cc48.  v1:= new `java.lang.NullPointerException`;
  #L19cc4c.  v2:= "name == null" @kind object;
  #L19cc50.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cc56.  throw v1;
  #L19cc58.  v0:= new `java.lang.StringBuilder`;
  #L19cc5c.  v1:= "form-data; name=" @kind object;
  #L19cc60.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19cc66.  call temp:= `appendQuotedString`(v0, v4) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L19cc6c.  if v5 == 0 then goto L19cc80;
  #L19cc70.  v1:= "; filename=" @kind object;
  #L19cc74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19cc7a.  call temp:= `appendQuotedString`(v0, v5) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L19cc80.  v1:= 2I;
  #L19cc82.  v1:= new `java.lang.String`[v1];
  #L19cc86.  v2:= 0I;
  #L19cc88.  v3:= "Content-Disposition" @kind object;
  #L19cc8c.  v1[v2]:= v3 @kind object;
  #L19cc90.  v2:= 1I;
  #L19cc92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19cc98.  v3:= temp @kind object;
  #L19cc9a.  v1[v2]:= v3 @kind object;
  #L19cc9e.  call temp:= `of`(v1) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L19cca4.  v1:= temp @kind object;
  #L19cca6.  call temp:= `create`(v1, v6) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L19ccac.  v1:= temp @kind object;
  #L19ccae.  return v1 @kind object;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ccc0.  v0:= v1.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19ccc4.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ccd8.  v0:= v1.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L19ccdc.  return v0 @kind object;
}

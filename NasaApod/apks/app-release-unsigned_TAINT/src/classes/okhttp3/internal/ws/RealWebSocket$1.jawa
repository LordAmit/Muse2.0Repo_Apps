record `okhttp3.internal.ws.RealWebSocket$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `okhttp3.internal.ws.RealWebSocket` `okhttp3.internal.ws.RealWebSocket$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.RealWebSocket$1` v0 @kind this, `okhttp3.internal.ws.RealWebSocket` v1 @kind object @name `this$0`) @signature `Lokhttp3/internal/ws/RealWebSocket$1;.<init>:(Lokhttp3/internal/ws/RealWebSocket;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1abf54.  v0.`okhttp3.internal.ws.RealWebSocket$1.this$0` @type ^`okhttp3.internal.ws.RealWebSocket` := v1 @kind object;
  #L1abf58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1abf5e.  return @kind void;
}
procedure `void` `run`(`okhttp3.internal.ws.RealWebSocket$1` v3 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1abf70.  v1:= v3.`okhttp3.internal.ws.RealWebSocket$1.this$0` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1abf74.  call temp:= `writeOneFrame`(v1) @signature `Lokhttp3/internal/ws/RealWebSocket;.writeOneFrame:()Z` @kind virtual;
  #Try_end0.  
  #L1abf7a.  v1:= temp;
  #L1abf7c.  if v1 != 0 then goto L1abf70;
  #L1abf80.  return @kind void;
  #L1abf82.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1abf84.  v1:= v3.`okhttp3.internal.ws.RealWebSocket$1.this$0` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1abf88.  v2:= 0I;
  #L1abf8a.  call `failWebSocket`(v1, v0, v2) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L1abf90.  goto L1abf80;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1abf82;
}

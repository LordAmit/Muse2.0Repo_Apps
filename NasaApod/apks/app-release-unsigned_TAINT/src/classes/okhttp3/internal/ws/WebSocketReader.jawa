record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketReader.closed` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.frameCallback` @AccessFlag FINAL;
  `long` `okhttp3.internal.ws.WebSocketReader.frameLength` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isClient` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isControlFrame` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.isFinalFrame` @AccessFlag ;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketReader.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskKey` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.ws.WebSocketReader.opcode` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.source` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v2 @kind this, `boolean` v3 @name `isClient`, `okio.BufferedSource` v4 @kind object @name `source`, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v5 @kind object @name `frameCallback`) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ac220.  v1:= 0I;
  #L1ac222.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ac228.  v0:= new `okio.Buffer`;
  #L1ac22c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ac232.  v2.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ac236.  v0:= new `okio.Buffer`;
  #L1ac23a.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ac240.  v2.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ac244.  if v4 != 0 then goto L1ac258;
  #L1ac248.  v0:= new `java.lang.NullPointerException`;
  #L1ac24c.  v1:= "source == null" @kind object;
  #L1ac250.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac256.  throw v0;
  #L1ac258.  if v5 != 0 then goto L1ac26c;
  #L1ac25c.  v0:= new `java.lang.NullPointerException`;
  #L1ac260.  v1:= "frameCallback == null" @kind object;
  #L1ac264.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac26a.  throw v0;
  #L1ac26c.  v2.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` := v3 @kind boolean;
  #L1ac270.  v2.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` := v4 @kind object;
  #L1ac274.  v2.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v5 @kind object;
  #L1ac278.  if v3 == 0 then goto L1ac28c;
  #L1ac27c.  v0:= v1 @kind object;
  #L1ac27e.  v2.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] := v0 @kind object;
  #L1ac282.  if v3 == 0 then goto L1ac294;
  #L1ac286.  v2.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v1 @kind object;
  #L1ac28a.  return @kind void;
  #L1ac28c.  v0:= 4I;
  #L1ac28e.  v0:= new `byte`[v0];
  #L1ac292.  goto L1ac27e;
  #L1ac294.  v1:= new `okio.Buffer$UnsafeCursor`;
  #L1ac298.  call `<init>`(v1) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1ac29e.  goto L1ac286;
}
procedure `void` `readControlFrame`(`okhttp3.internal.ws.WebSocketReader` v12 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ac2b0.  v10:= 0L;
  #L1ac2b4.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac2b8.  v5:= lcmp(v6, v10);
  #L1ac2bc.  if v5 <= 0 then goto L1ac30a;
  #L1ac2c0.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac2c4.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac2c8.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac2cc.  call `readFully`(v5, v6, v8) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1ac2d2.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ac2d6.  if v5 != 0 then goto L1ac30a;
  #L1ac2da.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac2de.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac2e2.  call temp:= `readAndWriteUnsafe`(v5, v6) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ac2e8.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac2ec.  call temp:= `seek`(v5, v10) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ac2f2.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac2f6.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ac2fa.  call `toggleMask`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ac300.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac304.  call `close`(v5) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ac30a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac30e.  goto L1ac3fc;
  #L1ac314.  v5:= new `java.net.ProtocolException`;
  #L1ac318.  v6:= new `java.lang.StringBuilder`;
  #L1ac31c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac322.  v7:= "Unknown control opcode: " @kind object;
  #L1ac326.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac32c.  v6:= temp @kind object;
  #L1ac32e.  v7:= v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac332.  call temp:= `toHexString`(v7) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ac338.  v7:= temp @kind object;
  #L1ac33a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac340.  v6:= temp @kind object;
  #L1ac342.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac348.  v6:= temp @kind object;
  #L1ac34a.  call `<init>`(v5, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac350.  throw v5;
  #L1ac352.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac356.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac35a.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ac360.  v6:= temp @kind object;
  #L1ac362.  call `onReadPing`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L1ac368.  return @kind void;
  #L1ac36a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac36e.  v6:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac372.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ac378.  v6:= temp @kind object;
  #L1ac37a.  call `onReadPong`(v5, v6) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L1ac380.  goto L1ac368;
  #L1ac382.  v2:= 1005I;
  #L1ac386.  v4:= "" @kind object;
  #L1ac38a.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac38e.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ac394.  v0:= temp @kind wide;
  #L1ac396.  v6:= 1L;
  #L1ac39a.  v5:= lcmp(v0, v6);
  #L1ac39e.  if v5 != 0 then goto L1ac3b2;
  #L1ac3a2.  v5:= new `java.net.ProtocolException`;
  #L1ac3a6.  v6:= "Malformed close payload length of 1." @kind object;
  #L1ac3aa.  call `<init>`(v5, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac3b0.  throw v5;
  #L1ac3b2.  v5:= lcmp(v0, v10);
  #L1ac3b6.  if v5 == 0 then goto L1ac3ea;
  #L1ac3ba.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac3be.  call temp:= `readShort`(v5) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L1ac3c4.  v2:= temp;
  #L1ac3c6.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac3ca.  call temp:= `readUtf8`(v5) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1ac3d0.  v4:= temp @kind object;
  #L1ac3d2.  call temp:= `closeCodeExceptionMessage`(v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind static;
  #L1ac3d8.  v3:= temp @kind object;
  #L1ac3da.  if v3 == 0 then goto L1ac3ea;
  #L1ac3de.  v5:= new `java.net.ProtocolException`;
  #L1ac3e2.  call `<init>`(v5, v3) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac3e8.  throw v5;
  #L1ac3ea.  v5:= v12.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac3ee.  call `onReadClose`(v5, v2, v4) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L1ac3f4.  v5:= 1I;
  #L1ac3f6.  v12.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` := v5 @kind boolean;
  #L1ac3fa.  goto L1ac368;
  #L1ac3fc.  switch v5
                  | 8 => goto L1ac382
                  | 9 => goto L1ac352
                  | 10 => goto L1ac36a
                  | else => goto L1ac314;
}
procedure `void` `readHeader`(`okhttp3.internal.ws.WebSocketReader` v12 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ac420.  v9:= 1I;
  #L1ac422.  v10:= 0I;
  #L1ac424.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ac428.  if v8 == 0 then goto L1ac43c;
  #L1ac42c.  v8:= new `java.io.IOException`;
  #L1ac430.  v9:= "closed" @kind object;
  #L1ac434.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac43a.  throw v8;
  #L1ac43c.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac440.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ac446.  v8:= temp @kind object;
  #L1ac448.  call temp:= `timeoutNanos`(v8) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1ac44e.  v6:= temp @kind wide;
  #L1ac450.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac454.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ac45a.  v8:= temp @kind object;
  #L1ac45c.  call temp:= `clearTimeout`(v8) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #Try_start0.  
  #L1ac462.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac466.  call temp:= `readByte`(v8) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #Try_end0.  
  #L1ac46c.  v8:= temp;
  #L1ac46e.  v0:= v8 ^& 255;
  #L1ac472.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac476.  call temp:= `timeout`(v8) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ac47c.  v8:= temp @kind object;
  #L1ac47e.  v11:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ac482.  call temp:= `timeout`(v8, v6, v11) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1ac488.  v8:= v0 ^& 15;
  #L1ac48c.  v12.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int` := v8;
  #L1ac490.  v8:= v0 ^& 128;
  #L1ac494.  if v8 == 0 then goto L1ac4e6;
  #L1ac498.  v8:= v9;
  #L1ac49a.  v12.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` := v8 @kind boolean;
  #L1ac49e.  v8:= v0 ^& 8;
  #L1ac4a2.  if v8 == 0 then goto L1ac4ea;
  #L1ac4a6.  v8:= v9;
  #L1ac4a8.  v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` := v8 @kind boolean;
  #L1ac4ac.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ac4b0.  if v8 == 0 then goto L1ac4ee;
  #L1ac4b4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L1ac4b8.  if v8 != 0 then goto L1ac4ee;
  #L1ac4bc.  v8:= new `java.net.ProtocolException`;
  #L1ac4c0.  v9:= "Control frames must be final." @kind object;
  #L1ac4c4.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac4ca.  throw v8;
  #L1ac4cc.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ac4ce.  v9:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac4d2.  call temp:= `timeout`(v9) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L1ac4d8.  v9:= temp @kind object;
  #L1ac4da.  v10:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ac4de.  call temp:= `timeout`(v9, v6, v10) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1ac4e4.  throw v8;
  #L1ac4e6.  v8:= v10;
  #L1ac4e8.  goto L1ac49a;
  #L1ac4ea.  v8:= v10;
  #L1ac4ec.  goto L1ac4a8;
  #L1ac4ee.  v8:= v0 ^& 64;
  #L1ac4f2.  if v8 == 0 then goto L1ac528;
  #L1ac4f6.  v3:= v9;
  #L1ac4f8.  v8:= v0 ^& 32;
  #L1ac4fc.  if v8 == 0 then goto L1ac52c;
  #L1ac500.  v4:= v9;
  #L1ac502.  v8:= v0 ^& 16;
  #L1ac506.  if v8 == 0 then goto L1ac530;
  #L1ac50a.  v5:= v9;
  #L1ac50c.  if v3 != 0 then goto L1ac518;
  #L1ac510.  if v4 != 0 then goto L1ac518;
  #L1ac514.  if v5 == 0 then goto L1ac534;
  #L1ac518.  v8:= new `java.net.ProtocolException`;
  #L1ac51c.  v9:= "Reserved flags are unsupported." @kind object;
  #L1ac520.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac526.  throw v8;
  #L1ac528.  v3:= v10;
  #L1ac52a.  goto L1ac4f8;
  #L1ac52c.  v4:= v10;
  #L1ac52e.  goto L1ac502;
  #L1ac530.  v5:= v10;
  #L1ac532.  goto L1ac50c;
  #L1ac534.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac538.  call temp:= `readByte`(v8) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1ac53e.  v8:= temp;
  #L1ac540.  v1:= v8 ^& 255;
  #L1ac544.  v8:= v1 ^& 128;
  #L1ac548.  if v8 == 0 then goto L1ac56e;
  #L1ac54c.  v2:= v9;
  #L1ac54e.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ac552.  if v2 != v8 then goto L1ac578;
  #L1ac556.  v9:= new `java.net.ProtocolException`;
  #L1ac55a.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ac55e.  if v8 == 0 then goto L1ac572;
  #L1ac562.  v8:= "Server-sent frames must not be masked." @kind object;
  #L1ac566.  call `<init>`(v9, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac56c.  throw v9;
  #L1ac56e.  v2:= v10;
  #L1ac570.  goto L1ac54e;
  #L1ac572.  v8:= "Client-sent frames must be masked." @kind object;
  #L1ac576.  goto L1ac566;
  #L1ac578.  v8:= v1 ^& 127;
  #L1ac57c.  v8:= (`long`) v8 @kind i2l;
  #L1ac57e.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ac582.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac586.  v10:= 126L;
  #L1ac58a.  v8:= lcmp(v8, v10);
  #L1ac58e.  if v8 != 0 then goto L1ac5d4;
  #L1ac592.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac596.  call temp:= `readShort`(v8) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L1ac59c.  v8:= temp;
  #L1ac59e.  v8:= (`long`) v8 @kind i2l;
  #L1ac5a0.  v10:= 65535L;
  #L1ac5a6.  v8:= v8 ^& v10 @kind long;
  #L1ac5a8.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ac5ac.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ac5b0.  if v8 == 0 then goto L1ac64e;
  #L1ac5b4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac5b8.  v10:= 125L;
  #L1ac5bc.  v8:= lcmp(v8, v10);
  #L1ac5c0.  if v8 <= 0 then goto L1ac64e;
  #L1ac5c4.  v8:= new `java.net.ProtocolException`;
  #L1ac5c8.  v9:= "Control frame must be less than 125B." @kind object;
  #L1ac5cc.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac5d2.  throw v8;
  #L1ac5d4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac5d8.  v10:= 127L;
  #L1ac5dc.  v8:= lcmp(v8, v10);
  #L1ac5e0.  if v8 != 0 then goto L1ac5ac;
  #L1ac5e4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac5e8.  call temp:= `readLong`(v8) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L1ac5ee.  v8:= temp @kind wide;
  #L1ac5f0.  v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` := v8 @kind wide;
  #L1ac5f4.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac5f8.  v10:= 0L;
  #L1ac5fc.  v8:= lcmp(v8, v10);
  #L1ac600.  if v8 >= 0 then goto L1ac5ac;
  #L1ac604.  v8:= new `java.net.ProtocolException`;
  #L1ac608.  v9:= new `java.lang.StringBuilder`;
  #L1ac60c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac612.  v10:= "Frame length 0x" @kind object;
  #L1ac616.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac61c.  v9:= temp @kind object;
  #L1ac61e.  v10:= v12.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac622.  call temp:= `toHexString`(v10) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L1ac628.  v10:= temp @kind object;
  #L1ac62a.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac630.  v9:= temp @kind object;
  #L1ac632.  v10:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L1ac636.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac63c.  v9:= temp @kind object;
  #L1ac63e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac644.  v9:= temp @kind object;
  #L1ac646.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac64c.  throw v8;
  #L1ac64e.  if v2 == 0 then goto L1ac660;
  #L1ac652.  v8:= v12.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac656.  v9:= v12.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ac65a.  call `readFully`(v8, v9) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L1ac660.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1ac4cc;
}
procedure `void` `readMessage`(`okhttp3.internal.ws.WebSocketReader` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ac680.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ac684.  if v0 == 0 then goto L1ac698;
  #L1ac688.  v0:= new `java.io.IOException`;
  #L1ac68c.  v1:= "closed" @kind object;
  #L1ac690.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac696.  throw v0;
  #L1ac698.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac69c.  v2:= 0L;
  #L1ac6a0.  v0:= lcmp(v0, v2);
  #L1ac6a4.  if v0 <= 0 then goto L1ac704;
  #L1ac6a8.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.source` @type ^`okio.BufferedSource` @kind object;
  #L1ac6ac.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac6b0.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac6b4.  call `readFully`(v0, v1, v2) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1ac6ba.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isClient` @type ^`boolean` @kind boolean;
  #L1ac6be.  if v0 != 0 then goto L1ac704;
  #L1ac6c2.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac6c6.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac6ca.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ac6d0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac6d4.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac6d8.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ac6de.  v2:= temp @kind wide;
  #L1ac6e0.  v4:= v6.`okhttp3.internal.ws.WebSocketReader.frameLength` @type ^`long` @kind wide;
  #L1ac6e4.  v2:= v2 - v4 @kind long;
  #L1ac6e6.  call temp:= `seek`(v0, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ac6ec.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac6f0.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L1ac6f4.  call `toggleMask`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ac6fa.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac6fe.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ac704.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.isFinalFrame` @type ^`boolean` @kind boolean;
  #L1ac708.  if v0 == 0 then goto L1ac70e;
  #L1ac70c.  return @kind void;
  #L1ac70e.  call `readUntilNonControlFrame`(v6) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @kind direct;
  #L1ac714.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac718.  if v0 == 0 then goto L1ac680;
  #L1ac71c.  v0:= new `java.net.ProtocolException`;
  #L1ac720.  v1:= new `java.lang.StringBuilder`;
  #L1ac724.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac72a.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L1ac72e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac734.  v1:= temp @kind object;
  #L1ac736.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac73a.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ac740.  v2:= temp @kind object;
  #L1ac742.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac748.  v1:= temp @kind object;
  #L1ac74a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac750.  v1:= temp @kind object;
  #L1ac752.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac758.  throw v0;
}
procedure `void` `readMessageFrame`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ac76c.  v2:= 1I;
  #L1ac76e.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.opcode` @type ^`int`;
  #L1ac772.  if v0 == v2 then goto L1ac7b6;
  #L1ac776.  v1:= 2I;
  #L1ac778.  if v0 == v1 then goto L1ac7b6;
  #L1ac77c.  v1:= new `java.net.ProtocolException`;
  #L1ac780.  v2:= new `java.lang.StringBuilder`;
  #L1ac784.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac78a.  v3:= "Unknown opcode: " @kind object;
  #L1ac78e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac794.  v2:= temp @kind object;
  #L1ac796.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1ac79c.  v3:= temp @kind object;
  #L1ac79e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac7a4.  v2:= temp @kind object;
  #L1ac7a6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac7ac.  v2:= temp @kind object;
  #L1ac7ae.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac7b4.  throw v1;
  #L1ac7b6.  call `readMessage`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @kind direct;
  #L1ac7bc.  if v0 != v2 then goto L1ac7d8;
  #L1ac7c0.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac7c4.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac7c8.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1ac7ce.  v2:= temp @kind object;
  #L1ac7d0.  call `onReadMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L1ac7d6.  return @kind void;
  #L1ac7d8.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.frameCallback` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1ac7dc.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac7e0.  call temp:= `readByteString`(v2) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1ac7e6.  v2:= temp @kind object;
  #L1ac7e8.  call `onReadMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L1ac7ee.  goto L1ac7d6;
}
procedure `void` `readUntilNonControlFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ac800.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.closed` @type ^`boolean` @kind boolean;
  #L1ac804.  if v0 != 0 then goto L1ac816;
  #L1ac808.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L1ac80e.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ac812.  if v0 != 0 then goto L1ac818;
  #L1ac816.  return @kind void;
  #L1ac818.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L1ac81e.  goto L1ac800;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag  {
    temp;
    v0;

  #L1ac830.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L1ac836.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.isControlFrame` @type ^`boolean` @kind boolean;
  #L1ac83a.  if v0 == 0 then goto L1ac846;
  #L1ac83e.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L1ac844.  return @kind void;
  #L1ac846.  call `readMessageFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @kind direct;
  #L1ac84c.  goto L1ac844;
}

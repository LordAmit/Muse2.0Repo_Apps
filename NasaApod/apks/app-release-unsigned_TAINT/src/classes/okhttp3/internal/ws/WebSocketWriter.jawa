record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketWriter.activeWriter` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.buffer` @AccessFlag FINAL;
  `okhttp3.internal.ws.WebSocketWriter$FrameSink` `okhttp3.internal.ws.WebSocketWriter.frameSink` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.isClient` @AccessFlag FINAL;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketWriter.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.maskKey` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.random` @AccessFlag FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.WebSocketWriter.sink` @AccessFlag FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.writerClosed` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `boolean` v3 @name `isClient`, `okio.BufferedSink` v4 @kind object @name `sink`, `java.util.Random` v5 @kind object @name `random`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ac860.  v1:= 0I;
  #L1ac862.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ac868.  v0:= new `okio.Buffer`;
  #L1ac86c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1ac872.  v2.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ac876.  v0:= new `okhttp3.internal.ws.WebSocketWriter$FrameSink`;
  #L1ac87a.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @kind direct;
  #L1ac880.  v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` := v0 @kind object;
  #L1ac884.  if v4 != 0 then goto L1ac898;
  #L1ac888.  v0:= new `java.lang.NullPointerException`;
  #L1ac88c.  v1:= "sink == null" @kind object;
  #L1ac890.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac896.  throw v0;
  #L1ac898.  if v5 != 0 then goto L1ac8ac;
  #L1ac89c.  v0:= new `java.lang.NullPointerException`;
  #L1ac8a0.  v1:= "random == null" @kind object;
  #L1ac8a4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac8aa.  throw v0;
  #L1ac8ac.  v2.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` := v3 @kind boolean;
  #L1ac8b0.  v2.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` := v4 @kind object;
  #L1ac8b4.  call temp:= `buffer`(v4) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L1ac8ba.  v0:= temp @kind object;
  #L1ac8bc.  v2.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L1ac8c0.  v2.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` := v5 @kind object;
  #L1ac8c4.  if v3 == 0 then goto L1ac8e6;
  #L1ac8c8.  v0:= 4I;
  #L1ac8ca.  v0:= new `byte`[v0];
  #L1ac8ce.  v2.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] := v0 @kind object;
  #L1ac8d2.  if v3 == 0 then goto L1ac8e0;
  #L1ac8d6.  v1:= new `okio.Buffer$UnsafeCursor`;
  #L1ac8da.  call `<init>`(v1) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1ac8e0.  v2.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v1 @kind object;
  #L1ac8e4.  return @kind void;
  #L1ac8e6.  v0:= v1 @kind object;
  #L1ac8e8.  goto L1ac8ce;
}
procedure `void` `writeControlFrame`(`okhttp3.internal.ws.WebSocketWriter` v10 @kind this, `int` v11 @name `opcode`, `okio.ByteString` v12 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1ac8fc.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L1ac900.  if v3 == 0 then goto L1ac914;
  #L1ac904.  v3:= new `java.io.IOException`;
  #L1ac908.  v6:= "closed" @kind object;
  #L1ac90c.  call `<init>`(v3, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac912.  throw v3;
  #L1ac914.  call temp:= `size`(v12) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1ac91a.  v2:= temp;
  #L1ac91c.  v6:= (`long`) v2 @kind i2l;
  #L1ac91e.  v8:= 125L;
  #L1ac922.  v3:= lcmp(v6, v8);
  #L1ac926.  if v3 <= 0 then goto L1ac93a;
  #L1ac92a.  v3:= new `java.lang.IllegalArgumentException`;
  #L1ac92e.  v6:= "Payload size must be less than or equal to 125" @kind object;
  #L1ac932.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac938.  throw v3;
  #L1ac93a.  v0:= v11 ^| 128;
  #L1ac93e.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac942.  call temp:= `writeByte`(v3, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ac948.  v1:= v2;
  #L1ac94a.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1ac94e.  if v3 == 0 then goto L1ac9d2;
  #L1ac952.  v1:= v1 ^| 128;
  #L1ac956.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac95a.  call temp:= `writeByte`(v3, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ac960.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L1ac964.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ac968.  call `nextBytes`(v3, v6) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L1ac96e.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac972.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ac976.  call temp:= `write`(v3, v6) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1ac97c.  if v2 <= 0 then goto L1ac9c6;
  #L1ac980.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac984.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1ac98a.  v4:= temp @kind wide;
  #L1ac98c.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac990.  call temp:= `write`(v3, v12) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1ac996.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac99a.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac99e.  call temp:= `readAndWriteUnsafe`(v3, v6) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1ac9a4.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac9a8.  call temp:= `seek`(v3, v4) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1ac9ae.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac9b2.  v6:= v10.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1ac9b6.  call `toggleMask`(v3, v6) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1ac9bc.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1ac9c0.  call `close`(v3) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1ac9c6.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L1ac9ca.  call `flush`(v3) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L1ac9d0.  return @kind void;
  #L1ac9d2.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac9d6.  call temp:= `writeByte`(v3, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1ac9dc.  v3:= v10.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1ac9e0.  call temp:= `write`(v3, v12) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1ac9e6.  goto L1ac9c6;
}
procedure `okio.Sink` `newMessageSink`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `int` v3 @name `formatOpcode`, `long` v4 @name `contentLength`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.newMessageSink:(IJ)Lokio/Sink;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1ac9f8.  v1:= 1I;
  #L1ac9fa.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` @kind boolean;
  #L1ac9fe.  if v0 == 0 then goto L1aca12;
  #L1aca02.  v0:= new `java.lang.IllegalStateException`;
  #L1aca06.  v1:= "Another message writer is active. Did you call close()?" @kind object;
  #L1aca0a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aca10.  throw v0;
  #L1aca12.  v2.`okhttp3.internal.ws.WebSocketWriter.activeWriter` @type ^`boolean` := v1 @kind boolean;
  #L1aca16.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1aca1a.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.formatOpcode` @type ^`int` := v3;
  #L1aca1e.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1aca22.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.contentLength` @type ^`long` := v4 @kind wide;
  #L1aca26.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1aca2a.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.isFirstFrame` @type ^`boolean` := v1 @kind boolean;
  #L1aca2e.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1aca32.  v1:= 0I;
  #L1aca34.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.closed` @type ^`boolean` := v1 @kind boolean;
  #L1aca38.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.frameSink` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L1aca3c.  return v0 @kind object;
}
procedure `void` `writeClose`(`okhttp3.internal.ws.WebSocketWriter` v4 @kind this, `int` v5 @name `code`, `okio.ByteString` v6 @kind object @name `reason`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aca50.  v3:= 1I;
  #L1aca52.  v1:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L1aca56.  if v5 != 0 then goto L1aca5e;
  #L1aca5a.  if v6 == 0 then goto L1aca8a;
  #L1aca5e.  if v5 == 0 then goto L1aca68;
  #L1aca62.  call `validateCloseCode`(v5) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind static;
  #L1aca68.  v0:= new `okio.Buffer`;
  #L1aca6c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1aca72.  call temp:= `writeShort`(v0, v5) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L1aca78.  if v6 == 0 then goto L1aca82;
  #L1aca7c.  call temp:= `write`(v0, v6) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1aca82.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1aca88.  v1:= temp @kind object;
  #L1aca8a.  v2:= 8I;
  #Try_start0.  
  #L1aca8e.  call `writeControlFrame`(v4, v2, v1) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #Try_end0.  
  #L1aca94.  v4.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L1aca98.  return @kind void;
  #L1aca9a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1aca9c.  v4.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` := v3 @kind boolean;
  #L1acaa0.  throw v2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1aca9a;
}
procedure `void` `writeMessageFrame`(`okhttp3.internal.ws.WebSocketWriter` v6 @kind this, `int` v7 @name `formatOpcode`, `long` v8 @name `byteCount`, `boolean` v10 @name `isFirstFrame`, `boolean` v11 @name `isFinal`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(IJZZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1acac0.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.writerClosed` @type ^`boolean` @kind boolean;
  #L1acac4.  if v4 == 0 then goto L1acad8;
  #L1acac8.  v4:= new `java.io.IOException`;
  #L1acacc.  v5:= "closed" @kind object;
  #L1acad0.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1acad6.  throw v4;
  #L1acad8.  if v10 == 0 then goto L1acb9e;
  #L1acadc.  v0:= v7;
  #L1acade.  if v11 == 0 then goto L1acae6;
  #L1acae2.  v0:= v0 ^| 128;
  #L1acae6.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acaea.  call temp:= `writeByte`(v4, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1acaf0.  v1:= 0I;
  #L1acaf2.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1acaf6.  if v4 == 0 then goto L1acafe;
  #L1acafa.  v1:= v1 ^| 128;
  #L1acafe.  v4:= 125L;
  #L1acb02.  v4:= lcmp(v8, v4);
  #L1acb06.  if v4 > 0 then goto L1acba2;
  #L1acb0a.  v4:= (`int`) v8 @kind l2i;
  #L1acb0c.  v1:= v1 ^| v4 @kind int;
  #L1acb0e.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acb12.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1acb18.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.isClient` @type ^`boolean` @kind boolean;
  #L1acb1c.  if v4 == 0 then goto L1acbe6;
  #L1acb20.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.random` @type ^`java.util.Random` @kind object;
  #L1acb24.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1acb28.  call `nextBytes`(v4, v5) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L1acb2e.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acb32.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1acb36.  call temp:= `write`(v4, v5) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1acb3c.  v4:= 0L;
  #L1acb40.  v4:= lcmp(v8, v4);
  #L1acb44.  if v4 <= 0 then goto L1acb92;
  #L1acb48.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acb4c.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1acb52.  v2:= temp @kind wide;
  #L1acb54.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acb58.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L1acb5c.  call `write`(v4, v5, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1acb62.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acb66.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1acb6a.  call temp:= `readAndWriteUnsafe`(v4, v5) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1acb70.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1acb74.  call temp:= `seek`(v4, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1acb7a.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1acb7e.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L1acb82.  call `toggleMask`(v4, v5) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L1acb88.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1acb8c.  call `close`(v4) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1acb92.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sink` @type ^`okio.BufferedSink` @kind object;
  #L1acb96.  call temp:= `emit`(v4) @signature `Lokio/BufferedSink;.emit:()Lokio/BufferedSink;` @kind interface;
  #L1acb9c.  return @kind void;
  #L1acb9e.  v0:= 0I;
  #L1acba0.  goto L1acade;
  #L1acba2.  v4:= 65535L;
  #L1acba8.  v4:= lcmp(v8, v4);
  #L1acbac.  if v4 > 0 then goto L1acbcc;
  #L1acbb0.  v1:= v1 ^| 126;
  #L1acbb4.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acbb8.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1acbbe.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acbc2.  v5:= (`int`) v8 @kind l2i;
  #L1acbc4.  call temp:= `writeShort`(v4, v5) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L1acbca.  goto L1acb18;
  #L1acbcc.  v1:= v1 ^| 127;
  #L1acbd0.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acbd4.  call temp:= `writeByte`(v4, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1acbda.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acbde.  call temp:= `writeLong`(v4, v8) @signature `Lokio/Buffer;.writeLong:(J)Lokio/Buffer;` @kind virtual;
  #L1acbe4.  goto L1acb18;
  #L1acbe6.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter.sinkBuffer` @type ^`okio.Buffer` @kind object;
  #L1acbea.  v5:= v6.`okhttp3.internal.ws.WebSocketWriter.buffer` @type ^`okio.Buffer` @kind object;
  #L1acbee.  call `write`(v4, v5, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1acbf4.  goto L1acb92;
}
procedure `void` `writePing`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L1acc08.  v0:= 9I;
  #L1acc0c.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L1acc12.  return @kind void;
}
procedure `void` `writePong`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object @name `payload`) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L1acc24.  v0:= 10I;
  #L1acc28.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L1acc2e.  return @kind void;
}

record `okhttp3.internal.http1.Http1Codec$FixedLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http1.Http1Codec$AbstractSource` @kind class {
  `long` `okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$FixedLengthSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v6 @kind this, `okhttp3.internal.http1.Http1Codec` v7 @kind object, `long` v8 @name `length`) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2469ec.  v4:= 0I;
  #L2469ee.  v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v7 @kind object;
  #L2469f2.  call `<init>`(v6, v7, v4) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/internal/http1/Http1Codec$1;)V` @kind direct;
  #L2469f8.  v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` := v8 @kind wide;
  #L2469fc.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246a00.  v2:= 0L;
  #L246a04.  v0:= lcmp(v0, v2);
  #L246a08.  if v0 != 0 then goto L246a14;
  #L246a0c.  v0:= 1I;
  #L246a0e.  call `endOfInput`(v6, v0, v4) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L246a14.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v4 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L246a28.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` @kind boolean;
  #L246a2c.  if v0 == 0 then goto L246a32;
  #L246a30.  return @kind void;
  #L246a32.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246a36.  v2:= 0L;
  #L246a3a.  v0:= lcmp(v0, v2);
  #L246a3e.  if v0 == 0 then goto L246a60;
  #L246a42.  v0:= 100I;
  #L246a46.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L246a4a.  call temp:= `discard`(v4, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L246a50.  v0:= temp;
  #L246a52.  if v0 != 0 then goto L246a60;
  #L246a56.  v0:= 0I;
  #L246a58.  v1:= 0I;
  #L246a5a.  call `endOfInput`(v4, v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L246a60.  v0:= 1I;
  #L246a62.  v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L246a66.  goto L246a30;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v10 @kind this, `okio.Buffer` v11 @kind object @name `sink`, `long` v12 @name `byteCount`) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L246a78.  v4:= -1L;
  #L246a7c.  v8:= 0L;
  #L246a80.  v1:= lcmp(v12, v8);
  #L246a84.  if v1 >= 0 then goto L246aba;
  #L246a88.  v1:= new `java.lang.IllegalArgumentException`;
  #L246a8c.  v4:= new `java.lang.StringBuilder`;
  #L246a90.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L246a96.  v5:= "byteCount < 0: " @kind object;
  #L246a9a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L246aa0.  v4:= temp @kind object;
  #L246aa2.  call temp:= `append`(v4, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L246aa8.  v4:= temp @kind object;
  #L246aaa.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L246ab0.  v4:= temp @kind object;
  #L246ab2.  call `<init>`(v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246ab8.  throw v1;
  #L246aba.  v1:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.closed` @type ^`boolean` @kind boolean;
  #L246abe.  if v1 == 0 then goto L246ad2;
  #L246ac2.  v1:= new `java.lang.IllegalStateException`;
  #L246ac6.  v4:= "closed" @kind object;
  #L246aca.  call `<init>`(v1, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246ad0.  throw v1;
  #L246ad2.  v6:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246ad6.  v1:= lcmp(v6, v8);
  #L246ada.  if v1 != 0 then goto L246ae2;
  #L246ade.  v2:= v4 @kind wide;
  #L246ae0.  return v2 @kind wide;
  #L246ae2.  v6:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246ae6.  call temp:= `min`(v6, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L246aec.  v6:= temp @kind wide;
  #L246aee.  call temp:= `read`(v10, v11, v6) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L246af4.  v2:= temp @kind wide;
  #L246af6.  v1:= lcmp(v2, v4);
  #L246afa.  if v1 != 0 then goto L246b16;
  #L246afe.  v0:= new `java.net.ProtocolException`;
  #L246b02.  v1:= "unexpected end of stream" @kind object;
  #L246b06.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246b0c.  v1:= 0I;
  #L246b0e.  call `endOfInput`(v10, v1, v0) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L246b14.  throw v0;
  #L246b16.  v4:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246b1a.  v4:= v4 - v2 @kind long;
  #L246b1c.  v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` := v4 @kind wide;
  #L246b20.  v4:= v10.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L246b24.  v1:= lcmp(v4, v8);
  #L246b28.  if v1 != 0 then goto L246ae0;
  #L246b2c.  v1:= 1I;
  #L246b2e.  v4:= 0I;
  #L246b30.  call `endOfInput`(v10, v1, v4) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L246b36.  goto L246ae0;
}

record `okhttp3.internal.http1.Http1Codec$FixedLengthSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `long` `okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.ForwardingTimeout` `okhttp3.internal.http1.Http1Codec$FixedLengthSink.timeout` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v2 @kind this, `okhttp3.internal.http1.Http1Codec` v3 @kind object, `long` v4 @name `bytesRemaining`) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.<init>:(Lokhttp3/internal/http1/Http1Codec;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L219b78.  v2.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` := v3 @kind object;
  #L219b7c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L219b82.  v0:= new `okio.ForwardingTimeout`;
  #L219b86.  v1:= v2.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219b8a.  v1:= v1.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L219b8e.  call temp:= `timeout`(v1) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L219b94.  v1:= temp @kind object;
  #L219b96.  call `<init>`(v0, v1) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L219b9c.  v2.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L219ba0.  v2.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` := v4 @kind wide;
  #L219ba4.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v4 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L219bb8.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L219bbc.  if v0 == 0 then goto L219bc2;
  #L219bc0.  return @kind void;
  #L219bc2.  v0:= 1I;
  #L219bc4.  v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L219bc8.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L219bcc.  v2:= 0L;
  #L219bd0.  v0:= lcmp(v0, v2);
  #L219bd4.  if v0 <= 0 then goto L219be8;
  #L219bd8.  v0:= new `java.net.ProtocolException`;
  #L219bdc.  v1:= "unexpected end of stream" @kind object;
  #L219be0.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L219be6.  throw v0;
  #L219be8.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219bec.  v1:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L219bf0.  call `detachTimeout`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.detachTimeout:(Lokio/ForwardingTimeout;)V` @kind virtual;
  #L219bf6.  v0:= v4.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219bfa.  v1:= 3I;
  #L219bfc.  v0.`okhttp3.internal.http1.Http1Codec.state` @type ^`int` := v1;
  #L219c00.  goto L219bc0;
}
procedure `void` `flush`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L219c14.  v0:= v1.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L219c18.  if v0 == 0 then goto L219c1e;
  #L219c1c.  return @kind void;
  #L219c1e.  v0:= v1.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219c22.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L219c26.  call `flush`(v0) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L219c2c.  goto L219c1c;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L219c40.  v0:= v1.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L219c44.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http1.Http1Codec$FixedLengthSink` v6 @kind this, `okio.Buffer` v7 @kind object @name `source`, `long` v8 @name `byteCount`) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L219c58.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L219c5c.  if v0 == 0 then goto L219c70;
  #L219c60.  v0:= new `java.lang.IllegalStateException`;
  #L219c64.  v1:= "closed" @kind object;
  #L219c68.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L219c6e.  throw v0;
  #L219c70.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L219c76.  v0:= temp @kind wide;
  #L219c78.  v2:= 0L;
  #L219c7c.  v4:= v8 @kind wide;
  #L219c7e.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L219c84.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L219c88.  v0:= lcmp(v8, v0);
  #L219c8c.  if v0 <= 0 then goto L219cda;
  #L219c90.  v0:= new `java.net.ProtocolException`;
  #L219c94.  v1:= new `java.lang.StringBuilder`;
  #L219c98.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L219c9e.  v2:= "expected " @kind object;
  #L219ca2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L219ca8.  v1:= temp @kind object;
  #L219caa.  v2:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L219cae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L219cb4.  v1:= temp @kind object;
  #L219cb6.  v2:= " bytes but received " @kind object;
  #L219cba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L219cc0.  v1:= temp @kind object;
  #L219cc2.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L219cc8.  v1:= temp @kind object;
  #L219cca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L219cd0.  v1:= temp @kind object;
  #L219cd2.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L219cd8.  throw v0;
  #L219cda.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.this$0` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L219cde.  v0:= v0.`okhttp3.internal.http1.Http1Codec.sink` @type ^`okio.BufferedSink` @kind object;
  #L219ce2.  call `write`(v0, v7, v8) @signature `Lokio/BufferedSink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L219ce8.  v0:= v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L219cec.  v0:= v0 - v8 @kind long;
  #L219cee.  v6.`okhttp3.internal.http1.Http1Codec$FixedLengthSink.bytesRemaining` @type ^`long` := v0 @kind wide;
  #L219cf2.  return @kind void;
}

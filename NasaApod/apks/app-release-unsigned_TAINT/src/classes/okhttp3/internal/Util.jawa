record `okhttp3.internal.Util` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.RequestBody` `@@okhttp3.internal.Util.EMPTY_REQUEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ResponseBody` `@@okhttp3.internal.Util.EMPTY_RESPONSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.ISO_8859_1` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@okhttp3.internal.Util.NATURAL_ORDER` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@okhttp3.internal.Util.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_16_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_16_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_BE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_BE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_32_LE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_32_LE_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@okhttp3.internal.Util.UTF_8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.Util.UTF_8_BOM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L19f0e8.  v2:= 0I;
  #L19f0ea.  v1:= 0I;
  #L19f0ec.  v0:= new `byte`[v1];
  #L19f0f0.  `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v0 @kind object;
  #L19f0f4.  v0:= new `java.lang.String`[v1];
  #L19f0f8.  `@@okhttp3.internal.Util.EMPTY_STRING_ARRAY` @type ^`java.lang.String`[] := v0 @kind object;
  #L19f0fc.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L19f100.  call temp:= `create`(v2, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @kind static;
  #L19f106.  v0:= temp @kind object;
  #L19f108.  `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L19f10c.  v0:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L19f110.  call temp:= `create`(v2, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L19f116.  v0:= temp @kind object;
  #L19f118.  `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19f11c.  v0:= "efbbbf" @kind object;
  #L19f120.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f126.  v0:= temp @kind object;
  #L19f128.  `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f12c.  v0:= "feff" @kind object;
  #L19f130.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f136.  v0:= temp @kind object;
  #L19f138.  `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f13c.  v0:= "fffe" @kind object;
  #L19f140.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f146.  v0:= temp @kind object;
  #L19f148.  `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f14c.  v0:= "0000ffff" @kind object;
  #L19f150.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f156.  v0:= temp @kind object;
  #L19f158.  `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f15c.  v0:= "ffff0000" @kind object;
  #L19f160.  call temp:= `decodeHex`(v0) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L19f166.  v0:= temp @kind object;
  #L19f168.  `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` := v0 @kind object;
  #L19f16c.  v0:= "UTF-8" @kind object;
  #L19f170.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f176.  v0:= temp @kind object;
  #L19f178.  `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f17c.  v0:= "ISO-8859-1" @kind object;
  #L19f180.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f186.  v0:= temp @kind object;
  #L19f188.  `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f18c.  v0:= "UTF-16BE" @kind object;
  #L19f190.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f196.  v0:= temp @kind object;
  #L19f198.  `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f19c.  v0:= "UTF-16LE" @kind object;
  #L19f1a0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f1a6.  v0:= temp @kind object;
  #L19f1a8.  `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f1ac.  v0:= "UTF-32BE" @kind object;
  #L19f1b0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f1b6.  v0:= temp @kind object;
  #L19f1b8.  `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f1bc.  v0:= "UTF-32LE" @kind object;
  #L19f1c0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L19f1c6.  v0:= temp @kind object;
  #L19f1c8.  `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L19f1cc.  v0:= "GMT" @kind object;
  #L19f1d0.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L19f1d6.  v0:= temp @kind object;
  #L19f1d8.  `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` := v0 @kind object;
  #L19f1dc.  v0:= new `okhttp3.internal.Util$1`;
  #L19f1e0.  call `<init>`(v0) @signature `Lokhttp3/internal/Util$1;.<init>:()V` @kind direct;
  #L19f1e6.  `@@okhttp3.internal.Util.NATURAL_ORDER` @type ^`java.util.Comparator` := v0 @kind object;
  #L19f1ea.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L19f1ee.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19f1f4.  v0:= temp @kind object;
  #L19f1f6.  `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19f1fa.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.Util` v0 @kind this) @signature `Lokhttp3/internal/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19f20c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19f212.  return @kind void;
}
procedure `java.lang.AssertionError` `assertionError`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Exception` v3 @kind object @name `e`) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19f224.  v0:= new `java.lang.AssertionError`;
  #L19f228.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #Try_start0.  
  #L19f22e.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #Try_end0.  
  #L19f234.  return v0 @kind object;
  #L19f236.  v1:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #L19f238.  goto L19f234;
  catch `java.lang.IllegalStateException` @[Try_start0..Try_end0] goto L19f236;
}
procedure `java.nio.charset.Charset` `bomAwareCharset`(`okio.BufferedSource` v4 @kind object @name `source`, `java.nio.charset.Charset` v5 @kind object @name `charset`) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19f25c.  v2:= 0L;
  #L19f260.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L19f264.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f26a.  v0:= temp;
  #L19f26c.  if v0 == 0 then goto L19f28a;
  #L19f270.  v0:= `@@okhttp3.internal.Util.UTF_8_BOM` @type ^`okio.ByteString` @kind object;
  #L19f274.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f27a.  v0:= temp;
  #L19f27c.  v0:= (`long`) v0 @kind i2l;
  #L19f27e.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f284.  v5:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19f288.  return v5 @kind object;
  #L19f28a.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f28e.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f294.  v0:= temp;
  #L19f296.  if v0 == 0 then goto L19f2b4;
  #L19f29a.  v0:= `@@okhttp3.internal.Util.UTF_16_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f29e.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f2a4.  v0:= temp;
  #L19f2a6.  v0:= (`long`) v0 @kind i2l;
  #L19f2a8.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f2ae.  v5:= `@@okhttp3.internal.Util.UTF_16_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L19f2b2.  goto L19f288;
  #L19f2b4.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f2b8.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f2be.  v0:= temp;
  #L19f2c0.  if v0 == 0 then goto L19f2de;
  #L19f2c4.  v0:= `@@okhttp3.internal.Util.UTF_16_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f2c8.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f2ce.  v0:= temp;
  #L19f2d0.  v0:= (`long`) v0 @kind i2l;
  #L19f2d2.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f2d8.  v5:= `@@okhttp3.internal.Util.UTF_16_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L19f2dc.  goto L19f288;
  #L19f2de.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f2e2.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f2e8.  v0:= temp;
  #L19f2ea.  if v0 == 0 then goto L19f308;
  #L19f2ee.  v0:= `@@okhttp3.internal.Util.UTF_32_BE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f2f2.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f2f8.  v0:= temp;
  #L19f2fa.  v0:= (`long`) v0 @kind i2l;
  #L19f2fc.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f302.  v5:= `@@okhttp3.internal.Util.UTF_32_BE` @type ^`java.nio.charset.Charset` @kind object;
  #L19f306.  goto L19f288;
  #L19f308.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f30c.  call temp:= `rangeEquals`(v4, v2, v0) @signature `Lokio/BufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @kind interface;
  #L19f312.  v0:= temp;
  #L19f314.  if v0 == 0 then goto L19f288;
  #L19f318.  v0:= `@@okhttp3.internal.Util.UTF_32_LE_BOM` @type ^`okio.ByteString` @kind object;
  #L19f31c.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L19f322.  v0:= temp;
  #L19f324.  v0:= (`long`) v0 @kind i2l;
  #L19f326.  call `skip`(v4, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L19f32c.  v5:= `@@okhttp3.internal.Util.UTF_32_LE` @type ^`java.nio.charset.Charset` @kind object;
  #L19f330.  goto L19f288;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v7 @kind object @name `host`) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19f344.  v4:= 0I;
  #L19f346.  v5:= ":" @kind object;
  #L19f34a.  call temp:= `contains`(v7, v5) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19f350.  v5:= temp;
  #L19f352.  if v5 == 0 then goto L19f402;
  #L19f356.  v5:= "[" @kind object;
  #L19f35a.  call temp:= `startsWith`(v7, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19f360.  v5:= temp;
  #L19f362.  if v5 == 0 then goto L19f394;
  #L19f366.  v5:= "]" @kind object;
  #L19f36a.  call temp:= `endsWith`(v7, v5) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19f370.  v5:= temp;
  #L19f372.  if v5 == 0 then goto L19f394;
  #L19f376.  v5:= 1I;
  #L19f378.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19f37e.  v6:= temp;
  #L19f380.  v6:= v6 + -1;
  #L19f384.  call temp:= `decodeIpv6`(v7, v5, v6) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L19f38a.  v2:= temp @kind object;
  #L19f38c.  if v2 != 0 then goto L19f3a8;
  #L19f390.  v3:= v4 @kind object;
  #L19f392.  return v3 @kind object;
  #L19f394.  v5:= 0I;
  #L19f396.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19f39c.  v6:= temp;
  #L19f39e.  call temp:= `decodeIpv6`(v7, v5, v6) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L19f3a4.  v2:= temp @kind object;
  #L19f3a6.  goto L19f38c;
  #L19f3a8.  call temp:= `getAddress`(v2) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L19f3ae.  v0:= temp @kind object;
  #L19f3b0.  v4:= length @variable v0;
  #L19f3b2.  v5:= 16I;
  #L19f3b6.  if v4 != v5 then goto L19f3c4;
  #L19f3ba.  call temp:= `inet6AddressToAscii`(v0) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @kind static;
  #L19f3c0.  v3:= temp @kind object;
  #L19f3c2.  goto L19f392;
  #L19f3c4.  v4:= new `java.lang.AssertionError`;
  #L19f3c8.  v5:= new `java.lang.StringBuilder`;
  #L19f3cc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f3d2.  v6:= "Invalid IPv6 address: '" @kind object;
  #L19f3d6.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f3dc.  v5:= temp @kind object;
  #L19f3de.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f3e4.  v5:= temp @kind object;
  #L19f3e6.  v6:= "'" @kind object;
  #L19f3ea.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f3f0.  v5:= temp @kind object;
  #L19f3f2.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f3f8.  v5:= temp @kind object;
  #L19f3fa.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L19f400.  throw v4;
  #Try_start0.  
  #L19f402.  call temp:= `toASCII`(v7) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19f408.  v5:= temp @kind object;
  #L19f40a.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19f40e.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19f414.  v3:= temp @kind object;
  #L19f416.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19f41c.  v5:= temp;
  #L19f41e.  if v5 == 0 then goto L19f426;
  #L19f422.  v3:= v4 @kind object;
  #L19f424.  goto L19f392;
  #L19f426.  call temp:= `containsInvalidHostnameAsciiCodes`(v3) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @kind static;
  #Try_end0.  
  #L19f42c.  v5:= temp;
  #L19f42e.  if v5 == 0 then goto L19f392;
  #L19f432.  v3:= v4 @kind object;
  #L19f434.  goto L19f392;
  #L19f436.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L19f438.  v3:= v4 @kind object;
  #L19f43a.  goto L19f392;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L19f436;
}
procedure `int` `checkDuration`(`java.lang.String` v7 @kind object @name `name`, `long` v8 @name `duration`, `java.util.concurrent.TimeUnit` v10 @kind object @name `unit`) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19f45c.  v4:= 0L;
  #L19f460.  v2:= lcmp(v8, v4);
  #L19f464.  if v2 >= 0 then goto L19f49a;
  #L19f468.  v2:= new `java.lang.IllegalArgumentException`;
  #L19f46c.  v3:= new `java.lang.StringBuilder`;
  #L19f470.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f476.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f47c.  v3:= temp @kind object;
  #L19f47e.  v4:= " < 0" @kind object;
  #L19f482.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f488.  v3:= temp @kind object;
  #L19f48a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f490.  v3:= temp @kind object;
  #L19f492.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f498.  throw v2;
  #L19f49a.  if v10 != 0 then goto L19f4ae;
  #L19f49e.  v2:= new `java.lang.NullPointerException`;
  #L19f4a2.  v3:= "unit == null" @kind object;
  #L19f4a6.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f4ac.  throw v2;
  #L19f4ae.  call temp:= `toMillis`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L19f4b4.  v0:= temp @kind wide;
  #L19f4b6.  v2:= 2147483647L;
  #L19f4bc.  v2:= lcmp(v0, v2);
  #L19f4c0.  if v2 <= 0 then goto L19f4f6;
  #L19f4c4.  v2:= new `java.lang.IllegalArgumentException`;
  #L19f4c8.  v3:= new `java.lang.StringBuilder`;
  #L19f4cc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f4d2.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f4d8.  v3:= temp @kind object;
  #L19f4da.  v4:= " too large." @kind object;
  #L19f4de.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f4e4.  v3:= temp @kind object;
  #L19f4e6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f4ec.  v3:= temp @kind object;
  #L19f4ee.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f4f4.  throw v2;
  #L19f4f6.  v2:= lcmp(v0, v4);
  #L19f4fa.  if v2 != 0 then goto L19f538;
  #L19f4fe.  v2:= lcmp(v8, v4);
  #L19f502.  if v2 <= 0 then goto L19f538;
  #L19f506.  v2:= new `java.lang.IllegalArgumentException`;
  #L19f50a.  v3:= new `java.lang.StringBuilder`;
  #L19f50e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19f514.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f51a.  v3:= temp @kind object;
  #L19f51c.  v4:= " too small." @kind object;
  #L19f520.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19f526.  v3:= temp @kind object;
  #L19f528.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f52e.  v3:= temp @kind object;
  #L19f530.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f536.  throw v2;
  #L19f538.  v2:= (`int`) v0 @kind l2i;
  #L19f53a.  return v2;
}
procedure `void` `checkOffsetAndCount`(`long` v4 @name `arrayLength`, `long` v6 @name `offset`, `long` v8 @name `count`) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19f54c.  v0:= v6 ^| v8 @kind long;
  #L19f550.  v2:= 0L;
  #L19f554.  v0:= lcmp(v0, v2);
  #L19f558.  if v0 < 0 then goto L19f570;
  #L19f55c.  v0:= lcmp(v6, v4);
  #L19f560.  if v0 > 0 then goto L19f570;
  #L19f564.  v0:= v4 - v6 @kind long;
  #L19f568.  v0:= lcmp(v0, v8);
  #L19f56c.  if v0 >= 0 then goto L19f57c;
  #L19f570.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L19f574.  call `<init>`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19f57a.  throw v0;
  #L19f57c.  return @kind void;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v2 @kind object @name `closeable`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19f590.  if v2 == 0 then goto L19f59a;
  #Try_start0.  
  #L19f594.  call `close`(v2) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #Try_end0.  
  #L19f59a.  return @kind void;
  #L19f59c.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19f59e.  throw v0;
  #L19f5a0.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19f5a2.  goto L19f59a;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19f59c;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19f5a0;
}
procedure `void` `closeQuietly`(`java.net.ServerSocket` v2 @kind object @name `serverSocket`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/ServerSocket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19f5c4.  if v2 == 0 then goto L19f5ce;
  #Try_start0.  
  #L19f5c8.  call `close`(v2) @signature `Ljava/net/ServerSocket;.close:()V` @kind virtual;
  #Try_end0.  
  #L19f5ce.  return @kind void;
  #L19f5d0.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19f5d2.  throw v0;
  #L19f5d4.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19f5d6.  goto L19f5ce;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19f5d0;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19f5d4;
}
procedure `void` `closeQuietly`(`java.net.Socket` v3 @kind object @name `socket`) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19f5f8.  if v3 == 0 then goto L19f602;
  #Try_start0.  
  #L19f5fc.  call `close`(v3) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end0.  
  #L19f602.  return @kind void;
  #L19f604.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L19f606.  call temp:= `isAndroidGetsocknameError`(v0) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L19f60c.  v2:= temp;
  #L19f60e.  if v2 != 0 then goto L19f602;
  #L19f612.  throw v0;
  #L19f614.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L19f616.  throw v1;
  #L19f618.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L19f61a.  goto L19f602;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L19f604;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L19f614;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L19f618;
}
procedure `java.lang.String`[] `concat`(`java.lang.String`[] v3 @kind object @name `array`, `java.lang.String` v4 @kind object @name `value`) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19f640.  v2:= 0I;
  #L19f642.  v1:= length @variable v3;
  #L19f644.  v1:= v1 + 1;
  #L19f648.  v0:= new `java.lang.String`[v1];
  #L19f64c.  v1:= length @variable v3;
  #L19f64e.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19f654.  v1:= length @variable v0;
  #L19f656.  v1:= v1 + -1;
  #L19f65a.  v0[v1]:= v4 @kind object;
  #L19f65e.  return v0 @kind object;
}
procedure `boolean` `containsInvalidHostnameAsciiCodes`(`java.lang.String` v5 @kind object @name `hostnameAscii`) @signature `Lokhttp3/internal/Util;.containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19f670.  v2:= 1I;
  #L19f672.  v1:= 0I;
  #L19f674.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19f67a.  v3:= temp;
  #L19f67c.  if v1 >= v3 then goto L19f6b2;
  #L19f680.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f686.  v0:= temp;
  #L19f688.  v3:= 31I;
  #L19f68c.  if v0 <= v3 then goto L19f698;
  #L19f690.  v3:= 127I;
  #L19f694.  if v0 < v3 then goto L19f69a;
  #L19f698.  return v2;
  #L19f69a.  v3:= " #%/:?@[\\]" @kind object;
  #L19f69e.  call temp:= `indexOf`(v3, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19f6a4.  v3:= temp;
  #L19f6a6.  v4:= -1I;
  #L19f6a8.  if v3 != v4 then goto L19f698;
  #L19f6ac.  v1:= v1 + 1;
  #L19f6b0.  goto L19f674;
  #L19f6b2.  v2:= 0I;
  #L19f6b4.  goto L19f698;
}
procedure `int` `decodeHexDigit`(`char` v1 @name `c`) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19f6c8.  v0:= 48I;
  #L19f6cc.  if v1 < v0 then goto L19f6de;
  #L19f6d0.  v0:= 57I;
  #L19f6d4.  if v1 > v0 then goto L19f6de;
  #L19f6d8.  v0:= v1 + -48;
  #L19f6dc.  return v0;
  #L19f6de.  v0:= 97I;
  #L19f6e2.  if v1 < v0 then goto L19f6f8;
  #L19f6e6.  v0:= 102I;
  #L19f6ea.  if v1 > v0 then goto L19f6f8;
  #L19f6ee.  v0:= v1 + -97;
  #L19f6f2.  v0:= v0 + 10;
  #L19f6f6.  goto L19f6dc;
  #L19f6f8.  v0:= 65I;
  #L19f6fc.  if v1 < v0 then goto L19f712;
  #L19f700.  v0:= 70I;
  #L19f704.  if v1 > v0 then goto L19f712;
  #L19f708.  v0:= v1 + -65;
  #L19f70c.  v0:= v0 + 10;
  #L19f710.  goto L19f6dc;
  #L19f712.  v0:= -1I;
  #L19f714.  goto L19f6dc;
}
procedure `boolean` `decodeIpv4Suffix`(`java.lang.String` v10 @kind object @name `input`, `int` v11 @name `pos`, `int` v12 @name `limit`, `byte`[] v13 @kind object @name `address`, `int` v14 @name `addressOffset`) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19f728.  v7:= 0I;
  #L19f72a.  v0:= v14;
  #L19f72c.  v5:= v11;
  #L19f72e.  v1:= v0;
  #L19f730.  if v5 >= v12 then goto L19f7aa;
  #L19f734.  v8:= length @variable v13;
  #L19f736.  if v1 != v8 then goto L19f73c;
  #L19f73a.  return v7;
  #L19f73c.  if v1 == v14 then goto L19f754;
  #L19f740.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f746.  v8:= temp;
  #L19f748.  v9:= 46I;
  #L19f74c.  if v8 != v9 then goto L19f73a;
  #L19f750.  v5:= v5 + 1;
  #L19f754.  v6:= 0I;
  #L19f756.  v4:= v5;
  #L19f758.  if v5 >= v12 then goto L19f774;
  #L19f75c.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f762.  v2:= temp;
  #L19f764.  v8:= 48I;
  #L19f768.  if v2 < v8 then goto L19f774;
  #L19f76c.  v8:= 57I;
  #L19f770.  if v2 <= v8 then goto L19f78a;
  #L19f774.  v3:= v5 - v4 @kind int;
  #L19f778.  if v3 == 0 then goto L19f73a;
  #L19f77c.  v0:= v1 + 1;
  #L19f780.  v8:= (`byte`) v6 @kind i2b;
  #L19f782.  v13[v1]:= v8 @kind byte;
  #L19f786.  v1:= v0;
  #L19f788.  goto L19f730;
  #L19f78a.  if v6 != 0 then goto L19f792;
  #L19f78e.  if v4 != v5 then goto L19f73a;
  #L19f792.  v8:= v6 * 10;
  #L19f796.  v8:= v8 + v2 @kind int;
  #L19f798.  v6:= v8 + -48;
  #L19f79c.  v8:= 255I;
  #L19f7a0.  if v6 > v8 then goto L19f73a;
  #L19f7a4.  v5:= v5 + 1;
  #L19f7a8.  goto L19f758;
  #L19f7aa.  v8:= v14 + 4;
  #L19f7ae.  if v1 != v8 then goto L19f73a;
  #L19f7b2.  v7:= 1I;
  #L19f7b4.  goto L19f73a;
}
procedure `java.net.InetAddress` `decodeIpv6`(`java.lang.String` v15 @kind object @name `input`, `int` v16 @name `pos`, `int` v17 @name `limit`) @signature `Lokhttp3/internal/Util;.decodeIpv6:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L19f7c8.  v12:= 16I;
  #L19f7cc.  v1:= new `byte`[v12];
  #L19f7d0.  v2:= 0I;
  #L19f7d2.  v5:= -1I;
  #L19f7d4.  v8:= -1I;
  #L19f7d6.  v10:= v16;
  #L19f7da.  v0:= v17;
  #L19f7de.  if v10 >= v0 then goto L19f828;
  #L19f7e2.  v12:= length @variable v1;
  #L19f7e4.  if v2 != v12 then goto L19f7ec;
  #L19f7e8.  v12:= 0I;
  #L19f7ea.  return v12 @kind object;
  #L19f7ec.  v12:= v10 + 2;
  #L19f7f0.  v0:= v17;
  #L19f7f4.  if v12 > v0 then goto L19f838;
  #L19f7f8.  v12:= "::" @kind object;
  #L19f7fc.  v13:= 0I;
  #L19f7fe.  v14:= 2I;
  #L19f800.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19f806.  v12:= temp;
  #L19f808.  if v12 == 0 then goto L19f838;
  #L19f80c.  v12:= -1I;
  #L19f80e.  if v5 == v12 then goto L19f816;
  #L19f812.  v12:= 0I;
  #L19f814.  goto L19f7ea;
  #L19f816.  v10:= v10 + 2;
  #L19f81a.  v2:= v2 + 2;
  #L19f81e.  v5:= v2;
  #L19f820.  v0:= v17;
  #L19f824.  if v10 != v0 then goto L19f854;
  #L19f828.  v12:= length @variable v1;
  #L19f82a.  if v2 == v12 then goto L19f910;
  #L19f82e.  v12:= -1I;
  #L19f830.  if v5 != v12 then goto L19f8f0;
  #L19f834.  v12:= 0I;
  #L19f836.  goto L19f7ea;
  #L19f838.  if v2 == 0 then goto L19f854;
  #L19f83c.  v12:= ":" @kind object;
  #L19f840.  v13:= 0I;
  #L19f842.  v14:= 1I;
  #L19f844.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19f84a.  v12:= temp;
  #L19f84c.  if v12 == 0 then goto L19f888;
  #L19f850.  v10:= v10 + 1;
  #L19f854.  v11:= 0I;
  #L19f856.  v8:= v10;
  #L19f858.  v0:= v17;
  #L19f85c.  if v10 >= v0 then goto L19f876;
  #L19f860.  call temp:= `charAt`(v15, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f866.  v4:= temp;
  #L19f868.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19f86e.  v9:= temp;
  #L19f870.  v12:= -1I;
  #L19f872.  if v9 != v12 then goto L19f8be;
  #L19f876.  v7:= v10 - v8 @kind int;
  #L19f87a.  if v7 == 0 then goto L19f884;
  #L19f87e.  v12:= 4I;
  #L19f880.  if v7 <= v12 then goto L19f8cc;
  #L19f884.  v12:= 0I;
  #L19f886.  goto L19f7ea;
  #L19f888.  v12:= "." @kind object;
  #L19f88c.  v13:= 0I;
  #L19f88e.  v14:= 1I;
  #L19f890.  call temp:= `regionMatches`(v15, v10, v12, v13, v14) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L19f896.  v12:= temp;
  #L19f898.  if v12 == 0 then goto L19f8ba;
  #L19f89c.  v12:= v2 + -2;
  #L19f8a0.  v0:= v17;
  #L19f8a4.  call temp:= `decodeIpv4Suffix`(v15, v8, v0, v1, v12) @signature `Lokhttp3/internal/Util;.decodeIpv4Suffix:(Ljava/lang/String;II[BI)Z` @kind static;
  #L19f8aa.  v12:= temp;
  #L19f8ac.  if v12 != 0 then goto L19f8b4;
  #L19f8b0.  v12:= 0I;
  #L19f8b2.  goto L19f7ea;
  #L19f8b4.  v2:= v2 + 2;
  #L19f8b8.  goto L19f828;
  #L19f8ba.  v12:= 0I;
  #L19f8bc.  goto L19f7ea;
  #L19f8be.  v12:= v11 ^< 4;
  #L19f8c2.  v11:= v12 + v9 @kind int;
  #L19f8c6.  v10:= v10 + 1;
  #L19f8ca.  goto L19f858;
  #L19f8cc.  v3:= v2 + 1;
  #L19f8d0.  v12:= v11 ^>> 8;
  #L19f8d4.  v12:= v12 ^& 255;
  #L19f8d8.  v12:= (`byte`) v12 @kind i2b;
  #L19f8da.  v1[v2]:= v12 @kind byte;
  #L19f8de.  v2:= v3 + 1;
  #L19f8e2.  v12:= v11 ^& 255;
  #L19f8e6.  v12:= (`byte`) v12 @kind i2b;
  #L19f8e8.  v1[v3]:= v12 @kind byte;
  #L19f8ec.  goto L19f7da;
  #L19f8f0.  v12:= length @variable v1;
  #L19f8f2.  v13:= v2 - v5 @kind int;
  #L19f8f6.  v12:= v12 - v13 @kind int;
  #L19f8f8.  v13:= v2 - v5 @kind int;
  #L19f8fc.  call `arraycopy`(v1, v5, v1, v12, v13) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L19f902.  v12:= length @variable v1;
  #L19f904.  v12:= v12 - v2 @kind int;
  #L19f906.  v12:= v12 + v5 @kind int;
  #L19f908.  v13:= 0I;
  #L19f90a.  call `fill`(v1, v5, v12, v13) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #Try_start0.  
  #L19f910.  call temp:= `getByAddress`(v1) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #Try_end0.  
  #L19f916.  v12:= temp @kind object;
  #L19f918.  goto L19f7ea;
  #L19f91c.  v6:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L19f91e.  v12:= new `java.lang.AssertionError`;
  #L19f922.  call `<init>`(v12) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L19f928.  throw v12;
  catch `java.net.UnknownHostException` @[Try_start0..Try_end0] goto L19f91c;
}
procedure `int` `delimiterOffset`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`, `char` v5 @name `delimiter`) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19f94c.  v0:= v3;
  #L19f94e.  if v0 >= v4 then goto L19f966;
  #L19f952.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f958.  v1:= temp;
  #L19f95a.  if v1 != v5 then goto L19f960;
  #L19f95e.  return v0;
  #L19f960.  v0:= v0 + 1;
  #L19f964.  goto L19f94e;
  #L19f966.  v0:= v4;
  #L19f968.  goto L19f95e;
}
procedure `int` `delimiterOffset`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`, `java.lang.String` v6 @kind object @name `delimiters`) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19f97c.  v0:= v4;
  #L19f97e.  if v0 >= v5 then goto L19f9a0;
  #L19f982.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19f988.  v1:= temp;
  #L19f98a.  call temp:= `indexOf`(v6, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19f990.  v1:= temp;
  #L19f992.  v2:= -1I;
  #L19f994.  if v1 == v2 then goto L19f99a;
  #L19f998.  return v0;
  #L19f99a.  v0:= v0 + 1;
  #L19f99e.  goto L19f97e;
  #L19f9a0.  v0:= v5;
  #L19f9a2.  goto L19f998;
}
procedure `boolean` `discard`(`okio.Source` v2 @kind object @name `source`, `int` v3 @name `timeout`, `java.util.concurrent.TimeUnit` v4 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L19f9b4.  call temp:= `skipAll`(v2, v3, v4) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #Try_end0.  
  #L19f9ba.  v1:= temp;
  #L19f9bc.  return v1;
  #L19f9be.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L19f9c0.  v1:= 0I;
  #L19f9c2.  goto L19f9bc;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L19f9be;
}
procedure `boolean` `equal`(`java.lang.Object` v1 @kind object @name `a`, `java.lang.Object` v2 @kind object @name `b`) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19f9e4.  if v1 == v2 then goto L19f9f8;
  #L19f9e8.  if v1 == 0 then goto L19f9fc;
  #L19f9ec.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19f9f2.  v0:= temp;
  #L19f9f4.  if v0 == 0 then goto L19f9fc;
  #L19f9f8.  v0:= 1I;
  #L19f9fa.  return v0;
  #L19f9fc.  v0:= 0I;
  #L19f9fe.  goto L19f9fa;
}
procedure `java.lang.String` `format`(`java.lang.String` v1 @kind object @name `format`, `java.lang.Object`[] v2 @kind object @name `args`) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19fa10.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19fa14.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19fa1a.  v0:= temp @kind object;
  #L19fa1c.  return v0 @kind object;
}
procedure `java.lang.String` `hostHeader`(`okhttp3.HttpUrl` v3 @kind object @name `url`, `boolean` v4 @name `includeDefaultPort`) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19fa30.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19fa36.  v1:= temp @kind object;
  #L19fa38.  v2:= ":" @kind object;
  #L19fa3c.  call temp:= `contains`(v1, v2) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19fa42.  v1:= temp;
  #L19fa44.  if v1 == 0 then goto L19fada;
  #L19fa48.  v1:= new `java.lang.StringBuilder`;
  #L19fa4c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19fa52.  v2:= "[" @kind object;
  #L19fa56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fa5c.  v1:= temp @kind object;
  #L19fa5e.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19fa64.  v2:= temp @kind object;
  #L19fa66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fa6c.  v1:= temp @kind object;
  #L19fa6e.  v2:= "]" @kind object;
  #L19fa72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fa78.  v1:= temp @kind object;
  #L19fa7a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19fa80.  v0:= temp @kind object;
  #L19fa82.  if v4 != 0 then goto L19faa2;
  #L19fa86.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19fa8c.  v1:= temp;
  #L19fa8e.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L19fa94.  v2:= temp @kind object;
  #L19fa96.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19fa9c.  v2:= temp;
  #L19fa9e.  if v1 == v2 then goto L19fad8;
  #L19faa2.  v1:= new `java.lang.StringBuilder`;
  #L19faa6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19faac.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fab2.  v1:= temp @kind object;
  #L19fab4.  v2:= ":" @kind object;
  #L19fab8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19fabe.  v1:= temp @kind object;
  #L19fac0.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19fac6.  v2:= temp;
  #L19fac8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19face.  v1:= temp @kind object;
  #L19fad0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19fad6.  v0:= temp @kind object;
  #L19fad8.  return v0 @kind object;
  #L19fada.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L19fae0.  v0:= temp @kind object;
  #L19fae2.  goto L19fa82;
}
procedure `java.util.List` `immutableList`(`java.util.List` v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19faf4.  v0:= new `java.util.ArrayList`;
  #L19faf8.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L19fafe.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19fb04.  v0:= temp @kind object;
  #L19fb06.  return v0 @kind object;
}
procedure `java.util.List` `immutableList`(`java.lang.Object`[] v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19fb18.  call temp:= `clone`(v1) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L19fb1e.  v0:= temp @kind object;
  #L19fb20.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L19fb24.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L19fb2a.  v0:= temp @kind object;
  #L19fb2c.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19fb32.  v0:= temp @kind object;
  #L19fb34.  return v0 @kind object;
}
procedure `int` `indexOf`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object @name `array`, `java.lang.String` v5 @kind object @name `value`) @signature `Lokhttp3/internal/Util;.indexOf:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19fb48.  v0:= 0I;
  #L19fb4a.  v1:= length @variable v4;
  #L19fb4c.  if v0 >= v1 then goto L19fb68;
  #L19fb50.  v2:= v4[v0] @kind object;
  #L19fb54.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19fb5a.  v2:= temp;
  #L19fb5c.  if v2 != 0 then goto L19fb62;
  #L19fb60.  return v0;
  #L19fb62.  v0:= v0 + 1;
  #L19fb66.  goto L19fb4c;
  #L19fb68.  v0:= -1I;
  #L19fb6a.  goto L19fb60;
}
procedure `int` `indexOfControlOrNonAscii`(`java.lang.String` v4 @kind object @name `input`) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19fb7c.  v1:= 0I;
  #L19fb7e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19fb84.  v2:= temp;
  #L19fb86.  if v1 >= v2 then goto L19fbaa;
  #L19fb8a.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19fb90.  v0:= temp;
  #L19fb92.  v3:= 31I;
  #L19fb96.  if v0 <= v3 then goto L19fba2;
  #L19fb9a.  v3:= 127I;
  #L19fb9e.  if v0 < v3 then goto L19fba4;
  #L19fba2.  return v1;
  #L19fba4.  v1:= v1 + 1;
  #L19fba8.  goto L19fb86;
  #L19fbaa.  v1:= -1I;
  #L19fbac.  goto L19fba2;
}
procedure `java.lang.String` `inet6AddressToAscii`(`byte`[] v12 @kind object @name `address`) @signature `Lokhttp3/internal/Util;.inet6AddressToAscii:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19fbc0.  v11:= 16I;
  #L19fbc4.  v10:= 58I;
  #L19fbc8.  v5:= -1I;
  #L19fbca.  v4:= 0I;
  #L19fbcc.  v3:= 0I;
  #L19fbce.  v7:= length @variable v12;
  #L19fbd0.  if v3 >= v7 then goto L19fc0c;
  #L19fbd4.  v1:= v3;
  #L19fbd6.  if v3 >= v11 then goto L19fbf4;
  #L19fbda.  v7:= v12[v3] @kind byte;
  #L19fbde.  if v7 != 0 then goto L19fbf4;
  #L19fbe2.  v7:= v3 + 1;
  #L19fbe6.  v7:= v12[v7] @kind byte;
  #L19fbea.  if v7 != 0 then goto L19fbf4;
  #L19fbee.  v3:= v3 + 2;
  #L19fbf2.  goto L19fbd6;
  #L19fbf4.  v0:= v3 - v1 @kind int;
  #L19fbf8.  if v0 <= v4 then goto L19fc06;
  #L19fbfc.  v7:= 4I;
  #L19fbfe.  if v0 < v7 then goto L19fc06;
  #L19fc02.  v5:= v1;
  #L19fc04.  v4:= v0;
  #L19fc06.  v3:= v3 + 2;
  #L19fc0a.  goto L19fbce;
  #L19fc0c.  v6:= new `okio.Buffer`;
  #L19fc10.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19fc16.  v3:= 0I;
  #L19fc18.  v7:= length @variable v12;
  #L19fc1a.  if v3 >= v7 then goto L19fc6a;
  #L19fc1e.  if v3 != v5 then goto L19fc36;
  #L19fc22.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19fc28.  v3:= v3 + v4 @kind int;
  #L19fc2a.  if v3 != v11 then goto L19fc18;
  #L19fc2e.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19fc34.  goto L19fc18;
  #L19fc36.  if v3 <= 0 then goto L19fc40;
  #L19fc3a.  call temp:= `writeByte`(v6, v10) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19fc40.  v7:= v12[v3] @kind byte;
  #L19fc44.  v7:= v7 ^& 255;
  #L19fc48.  v7:= v7 ^< 8;
  #L19fc4c.  v8:= v3 + 1;
  #L19fc50.  v8:= v12[v8] @kind byte;
  #L19fc54.  v8:= v8 ^& 255;
  #L19fc58.  v2:= v7 ^| v8 @kind int;
  #L19fc5c.  v8:= (`long`) v2 @kind i2l;
  #L19fc5e.  call temp:= `writeHexadecimalUnsignedLong`(v6, v8) @signature `Lokio/Buffer;.writeHexadecimalUnsignedLong:(J)Lokio/Buffer;` @kind virtual;
  #L19fc64.  v3:= v3 + 2;
  #L19fc68.  goto L19fc18;
  #L19fc6a.  call temp:= `readUtf8`(v6) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19fc70.  v7:= temp @kind object;
  #L19fc72.  return v7 @kind object;
}
procedure `java.lang.String`[] `intersect`(`java.util.Comparator` v9 @kind object, `java.lang.String`[] v10 @kind object @name `first`, `java.lang.String`[] v11 @kind object @name `second`) @signature `Lokhttp3/internal/Util;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19fc84.  v4:= 0I;
  #L19fc86.  v2:= new `java.util.ArrayList`;
  #L19fc8a.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19fc90.  v6:= length @variable v10;
  #L19fc92.  v5:= v4;
  #L19fc94.  if v5 >= v6 then goto L19fcc8;
  #L19fc98.  v0:= v10[v5] @kind object;
  #L19fc9c.  v7:= length @variable v11;
  #L19fc9e.  v3:= v4;
  #L19fca0.  if v3 >= v7 then goto L19fcba;
  #L19fca4.  v1:= v11[v3] @kind object;
  #L19fca8.  call temp:= `compare`(v9, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19fcae.  v8:= temp;
  #L19fcb0.  if v8 != 0 then goto L19fcc2;
  #L19fcb4.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19fcba.  v3:= v5 + 1;
  #L19fcbe.  v5:= v3;
  #L19fcc0.  goto L19fc94;
  #L19fcc2.  v3:= v3 + 1;
  #L19fcc6.  goto L19fca0;
  #L19fcc8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19fcce.  v3:= temp;
  #L19fcd0.  v3:= new `java.lang.String`[v3];
  #L19fcd4.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L19fcda.  v3:= temp @kind object;
  #L19fcdc.  v3:= (`java.lang.String`[]) v3 @kind object;
  #L19fce0.  return v3 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v2 @kind object @name `e`) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19fcf4.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L19fcfa.  v0:= temp @kind object;
  #L19fcfc.  if v0 == 0 then goto L19fd28;
  #L19fd00.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19fd06.  v0:= temp @kind object;
  #L19fd08.  if v0 == 0 then goto L19fd28;
  #L19fd0c.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19fd12.  v0:= temp @kind object;
  #L19fd14.  v1:= "getsockname failed" @kind object;
  #L19fd18.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L19fd1e.  v0:= temp;
  #L19fd20.  if v0 == 0 then goto L19fd28;
  #L19fd24.  v0:= 1I;
  #L19fd26.  return v0;
  #L19fd28.  v0:= 0I;
  #L19fd2a.  goto L19fd26;
}
procedure `boolean` `nonEmptyIntersection`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object @name `first`, `java.lang.String`[] v10 @kind object @name `second`) @signature `Lokhttp3/internal/Util;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19fd3c.  v2:= 0I;
  #L19fd3e.  if v9 == 0 then goto L19fd52;
  #L19fd42.  if v10 == 0 then goto L19fd52;
  #L19fd46.  v3:= length @variable v9;
  #L19fd48.  if v3 == 0 then goto L19fd52;
  #L19fd4c.  v3:= length @variable v10;
  #L19fd4e.  if v3 != 0 then goto L19fd54;
  #L19fd52.  return v2;
  #L19fd54.  v5:= length @variable v9;
  #L19fd56.  v4:= v2;
  #L19fd58.  if v4 >= v5 then goto L19fd52;
  #L19fd5c.  v0:= v9[v4] @kind object;
  #L19fd60.  v6:= length @variable v10;
  #L19fd62.  v3:= v2;
  #L19fd64.  if v3 >= v6 then goto L19fd82;
  #L19fd68.  v1:= v10[v3] @kind object;
  #L19fd6c.  call temp:= `compare`(v8, v0, v1) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L19fd72.  v7:= temp;
  #L19fd74.  if v7 != 0 then goto L19fd7c;
  #L19fd78.  v2:= 1I;
  #L19fd7a.  goto L19fd52;
  #L19fd7c.  v3:= v3 + 1;
  #L19fd80.  goto L19fd64;
  #L19fd82.  v3:= v4 + 1;
  #L19fd86.  v4:= v3;
  #L19fd88.  goto L19fd58;
}
procedure `boolean` `skipAll`(`okio.Source` v12 @kind object @name `source`, `int` v13 @name `duration`, `java.util.concurrent.TimeUnit` v14 @kind object @name `timeUnit`) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L19fd9c.  v6:= 9223372036854775807L;
  #L19fda6.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L19fdac.  v2:= temp @kind wide;
  #L19fdae.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fdb4.  v8:= temp @kind object;
  #L19fdb6.  call temp:= `hasDeadline`(v8) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L19fdbc.  v8:= temp;
  #L19fdbe.  if v8 == 0 then goto L19fe40;
  #L19fdc2.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fdc8.  v8:= temp @kind object;
  #L19fdca.  call temp:= `deadlineNanoTime`(v8) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L19fdd0.  v8:= temp @kind wide;
  #L19fdd2.  v4:= v8 - v2 @kind long;
  #L19fdd6.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fddc.  v8:= temp @kind object;
  #L19fdde.  v10:= (`long`) v13 @kind i2l;
  #L19fde0.  call temp:= `toNanos`(v14, v10) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L19fde6.  v10:= temp @kind wide;
  #L19fde8.  call temp:= `min`(v4, v10) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L19fdee.  v10:= temp @kind wide;
  #L19fdf0.  v10:= v10 + v2 @kind long;
  #L19fdf2.  call temp:= `deadlineNanoTime`(v8, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #Try_start0.  
  #L19fdf8.  v1:= new `okio.Buffer`;
  #L19fdfc.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19fe02.  v8:= 8192L;
  #L19fe06.  call temp:= `read`(v12, v1, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L19fe0c.  v8:= temp @kind wide;
  #L19fe0e.  v10:= -1L;
  #L19fe12.  v8:= lcmp(v8, v10);
  #L19fe16.  if v8 == 0 then goto L19fe44;
  #L19fe1a.  call `clear`(v1) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #Try_end0.  
  #L19fe20.  goto L19fe02;
  #L19fe22.  v0:= Exception @type ^`java.io.InterruptedIOException` @kind object;
  #L19fe24.  v8:= 0I;
  #L19fe26.  v6:= lcmp(v4, v6);
  #L19fe2a.  if v6 != 0 then goto L19fe74;
  #L19fe2e.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fe34.  v6:= temp @kind object;
  #L19fe36.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19fe3c.  v6:= v8;
  #L19fe3e.  return v6;
  #L19fe40.  v4:= v6 @kind wide;
  #L19fe42.  goto L19fdd6;
  #L19fe44.  v8:= 1I;
  #L19fe46.  v6:= lcmp(v4, v6);
  #L19fe4a.  if v6 != 0 then goto L19fe60;
  #L19fe4e.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fe54.  v6:= temp @kind object;
  #L19fe56.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19fe5c.  v6:= v8;
  #L19fe5e.  goto L19fe3e;
  #L19fe60.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fe66.  v6:= temp @kind object;
  #L19fe68.  v10:= v2 + v4 @kind long;
  #L19fe6c.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19fe72.  goto L19fe5c;
  #L19fe74.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fe7a.  v6:= temp @kind object;
  #L19fe7c.  v10:= v2 + v4 @kind long;
  #L19fe80.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19fe86.  goto L19fe3c;
  #L19fe88.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19fe8a.  v6:= lcmp(v4, v6);
  #L19fe8e.  if v6 != 0 then goto L19fea2;
  #L19fe92.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fe98.  v6:= temp @kind object;
  #L19fe9a.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L19fea0.  throw v8;
  #L19fea2.  call temp:= `timeout`(v12) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L19fea8.  v6:= temp @kind object;
  #L19feaa.  v10:= v2 + v4 @kind long;
  #L19feae.  call temp:= `deadlineNanoTime`(v6, v10) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L19feb4.  goto L19fea0;
  catch `java.io.InterruptedIOException` @[Try_start0..Try_end0] goto L19fe22;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19fe88;
}
procedure `int` `skipLeadingAsciiWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19fed8.  v0:= v3;
  #L19feda.  if v0 >= v4 then goto L19fef4;
  #L19fede.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19fee4.  v1:= temp;
  #L19fee6.  goto L19fef8;
  #L19feec.  return v0;
  #L19feee.  v0:= v0 + 1;
  #L19fef2.  goto L19feda;
  #L19fef4.  v0:= v4;
  #L19fef6.  goto L19feec;
  #L19fef8.  switch v1
                  | 9 => goto L19feee
                  | 10 => goto L19feee
                  | 12 => goto L19feee
                  | 13 => goto L19feee
                  | 32 => goto L19feee
                  | else => goto L19feec;
}
procedure `int` `skipTrailingAsciiWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L19ff34.  v0:= v4 + -1;
  #L19ff38.  if v0 < v3 then goto L19ff4e;
  #L19ff3c.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19ff42.  v1:= temp;
  #L19ff44.  goto L19ff58;
  #L19ff4a.  v3:= v0 + 1;
  #L19ff4e.  return v3;
  #L19ff50.  v0:= v0 + -1;
  #L19ff54.  goto L19ff38;
  #L19ff56.  
  #L19ff58.  switch v1
                  | 9 => goto L19ff50
                  | 10 => goto L19ff50
                  | 12 => goto L19ff50
                  | 13 => goto L19ff50
                  | 32 => goto L19ff50
                  | else => goto L19ff4a;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`(`java.lang.String` v1 @kind object @name `name`, `boolean` v2 @name `daemon`) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19ff94.  v0:= new `okhttp3.internal.Util$2`;
  #L19ff98.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/Util$2;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L19ff9e.  return v0 @kind object;
}
procedure `java.lang.String` `trimSubstring`(`java.lang.String` v3 @kind object @name `string`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19ffb0.  call temp:= `skipLeadingAsciiWhitespace`(v3, v4, v5) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19ffb6.  v1:= temp;
  #L19ffb8.  call temp:= `skipTrailingAsciiWhitespace`(v3, v1, v5) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19ffbe.  v0:= temp;
  #L19ffc0.  call temp:= `substring`(v3, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19ffc6.  v2:= temp @kind object;
  #L19ffc8.  return v2 @kind object;
}
procedure `boolean` `verifyAsIpAddress`(`java.lang.String` v1 @kind object @name `host`) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19ffdc.  v0:= `@@okhttp3.internal.Util.VERIFY_AS_IP_ADDRESS` @type ^`java.util.regex.Pattern` @kind object;
  #L19ffe0.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19ffe6.  v0:= temp @kind object;
  #L19ffe8.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L19ffee.  v0:= temp;
  #L19fff0.  return v0;
}

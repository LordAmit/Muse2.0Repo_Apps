record `okhttp3.internal.connection.RouteDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.internal.connection.RouteDatabase.failedRoutes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a2a08.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a2a0e.  v0:= new `java.util.LinkedHashSet`;
  #L1a2a12.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L1a2a18.  v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` := v0 @kind object;
  #L1a2a1c.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `route`) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a2a30.  @monitorenter v1
  #Try_start0.  
  #L1a2a32.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a2a36.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a2a3c.  @monitorexit v1
  #L1a2a3e.  return @kind void;
  #L1a2a40.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a2a42.  @monitorexit v1
  #L1a2a44.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a2a40;
}
procedure `void` `failed`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `failedRoute`) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a2a64.  @monitorenter v1
  #Try_start0.  
  #L1a2a66.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a2a6a.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a2a70.  @monitorexit v1
  #L1a2a72.  return @kind void;
  #L1a2a74.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a2a76.  @monitorexit v1
  #L1a2a78.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a2a74;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `route`) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a2a98.  @monitorenter v1
  #Try_start0.  
  #L1a2a9a.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L1a2a9e.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1a2aa4.  v0:= temp;
  #L1a2aa6.  @monitorexit v1
  #L1a2aa8.  return v0;
  #L1a2aaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a2aac.  @monitorexit v1
  #L1a2aae.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a2aaa;
}

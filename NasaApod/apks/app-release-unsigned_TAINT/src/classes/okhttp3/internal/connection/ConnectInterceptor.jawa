record `okhttp3.internal.connection.ConnectInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.OkHttpClient` `okhttp3.internal.connection.ConnectInterceptor.client` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.ConnectInterceptor` v0 @kind this, `okhttp3.OkHttpClient` v1 @kind object @name `client`) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.<init>:(Lokhttp3/OkHttpClient;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L217260.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L217266.  v0.`okhttp3.internal.connection.ConnectInterceptor.client` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L21726a.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.connection.ConnectInterceptor` v8 @kind this, `okhttp3.Interceptor$Chain` v9 @kind object @name `chain`) @signature `Lokhttp3/internal/connection/ConnectInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21727c.  v3:= v9 @kind object;
  #L21727e.  v3:= (`okhttp3.internal.http.RealInterceptorChain`) v3 @kind object;
  #L217282.  call temp:= `request`(v3) @signature `Lokhttp3/internal/http/RealInterceptorChain;.request:()Lokhttp3/Request;` @kind virtual;
  #L217288.  v4:= temp @kind object;
  #L21728a.  call temp:= `streamAllocation`(v3) @signature `Lokhttp3/internal/http/RealInterceptorChain;.streamAllocation:()Lokhttp3/internal/connection/StreamAllocation;` @kind virtual;
  #L217290.  v5:= temp @kind object;
  #L217292.  call temp:= `method`(v4) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L217298.  v6:= temp @kind object;
  #L21729a.  v7:= "GET" @kind object;
  #L21729e.  call temp:= `equals`(v6, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2172a4.  v6:= temp;
  #L2172a6.  if v6 != 0 then goto L2172ca;
  #L2172aa.  v1:= 1I;
  #L2172ac.  v6:= v8.`okhttp3.internal.connection.ConnectInterceptor.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2172b0.  call temp:= `newStream`(v5, v6, v9, v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.newStream:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Z)Lokhttp3/internal/http/HttpCodec;` @kind virtual;
  #L2172b6.  v2:= temp @kind object;
  #L2172b8.  call temp:= `connection`(v5) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L2172be.  v0:= temp @kind object;
  #L2172c0.  call temp:= `proceed`(v3, v4, v5, v2, v0) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Response;` @kind virtual;
  #L2172c6.  v6:= temp @kind object;
  #L2172c8.  return v6 @kind object;
  #L2172ca.  v1:= 0I;
  #L2172cc.  goto L2172ac;
}

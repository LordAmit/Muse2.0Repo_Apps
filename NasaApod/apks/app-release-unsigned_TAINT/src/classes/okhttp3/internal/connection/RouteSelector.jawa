record `okhttp3.internal.connection.RouteSelector` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.internal.connection.RouteSelector.address` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call` `okhttp3.internal.connection.RouteSelector.call` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.RouteSelector.eventListener` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RouteSelector.nextProxyIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.postponedRoutes` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.proxies` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteDatabase` `okhttp3.internal.connection.RouteSelector.routeDatabase` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector` v2 @kind this, `okhttp3.Address` v3 @kind object @name `address`, `okhttp3.internal.connection.RouteDatabase` v4 @kind object @name `routeDatabase`, `okhttp3.Call` v5 @kind object @name `call`, `okhttp3.EventListener` v6 @kind object @name `eventListener`) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a2c6c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a2c72.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1a2c78.  v0:= temp @kind object;
  #L1a2c7a.  v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v0 @kind object;
  #L1a2c7e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1a2c84.  v0:= temp @kind object;
  #L1a2c86.  v2.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L1a2c8a.  v0:= new `java.util.ArrayList`;
  #L1a2c8e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a2c94.  v2.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` := v0 @kind object;
  #L1a2c98.  v2.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L1a2c9c.  v2.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` := v4 @kind object;
  #L1a2ca0.  v2.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` := v5 @kind object;
  #L1a2ca4.  v2.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` := v6 @kind object;
  #L1a2ca8.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a2cae.  v0:= temp @kind object;
  #L1a2cb0.  call temp:= `proxy`(v3) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a2cb6.  v1:= temp @kind object;
  #L1a2cb8.  call `resetNextProxy`(v2, v0, v1) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @kind direct;
  #L1a2cbe.  return @kind void;
}
procedure `java.lang.String` `getHostString`(`java.net.InetSocketAddress` v2 @kind object @name `socketAddress`) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a2cd0.  call temp:= `getAddress`(v2) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L1a2cd6.  v0:= temp @kind object;
  #L1a2cd8.  if v0 != 0 then goto L1a2ce6;
  #L1a2cdc.  call temp:= `getHostName`(v2) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L1a2ce2.  v1:= temp @kind object;
  #L1a2ce4.  return v1 @kind object;
  #L1a2ce6.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L1a2cec.  v1:= temp @kind object;
  #L1a2cee.  goto L1a2ce4;
}
procedure `boolean` `hasNextProxy`(`okhttp3.internal.connection.RouteSelector` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a2d00.  v0:= v2.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L1a2d04.  v1:= v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a2d08.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a2d0e.  v1:= temp;
  #L1a2d10.  if v0 >= v1 then goto L1a2d18;
  #L1a2d14.  v0:= 1I;
  #L1a2d16.  return v0;
  #L1a2d18.  v0:= 0I;
  #L1a2d1a.  goto L1a2d16;
}
procedure `java.net.Proxy` `nextProxy`(`okhttp3.internal.connection.RouteSelector` v4 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a2d2c.  call temp:= `hasNextProxy`(v4) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a2d32.  v1:= temp;
  #L1a2d34.  if v1 != 0 then goto L1a2d96;
  #L1a2d38.  v1:= new `java.net.SocketException`;
  #L1a2d3c.  v2:= new `java.lang.StringBuilder`;
  #L1a2d40.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a2d46.  v3:= "No route to " @kind object;
  #L1a2d4a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2d50.  v2:= temp @kind object;
  #L1a2d52.  v3:= v4.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2d56.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a2d5c.  v3:= temp @kind object;
  #L1a2d5e.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a2d64.  v3:= temp @kind object;
  #L1a2d66.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2d6c.  v2:= temp @kind object;
  #L1a2d6e.  v3:= "; exhausted proxy configurations: " @kind object;
  #L1a2d72.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2d78.  v2:= temp @kind object;
  #L1a2d7a.  v3:= v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a2d7e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2d84.  v2:= temp @kind object;
  #L1a2d86.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a2d8c.  v2:= temp @kind object;
  #L1a2d8e.  call `<init>`(v1, v2) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a2d94.  throw v1;
  #L1a2d96.  v1:= v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L1a2d9a.  v2:= v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L1a2d9e.  v3:= v2 + 1;
  #L1a2da2.  v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v3;
  #L1a2da6.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a2dac.  v0:= temp @kind object;
  #L1a2dae.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L1a2db2.  call `resetNextInetSocketAddress`(v4, v0) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @kind direct;
  #L1a2db8.  return v0 @kind object;
}
procedure `void` `resetNextInetSocketAddress`(`okhttp3.internal.connection.RouteSelector` v11 @kind this, `java.net.Proxy` v12 @kind object @name `proxy`) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1a2dcc.  v8:= new `java.util.ArrayList`;
  #L1a2dd0.  call `<init>`(v8) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a2dd6.  v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v8 @kind object;
  #L1a2dda.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a2de0.  v8:= temp @kind object;
  #L1a2de2.  v9:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1a2de6.  if v8 == v9 then goto L1a2dfa;
  #L1a2dea.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a2df0.  v8:= temp @kind object;
  #L1a2df2.  v9:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L1a2df6.  if v8 != v9 then goto L1a2e84;
  #L1a2dfa.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2dfe.  call temp:= `url`(v8) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a2e04.  v8:= temp @kind object;
  #L1a2e06.  call temp:= `host`(v8) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a2e0c.  v6:= temp @kind object;
  #L1a2e0e.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2e12.  call temp:= `url`(v8) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a2e18.  v8:= temp @kind object;
  #L1a2e1a.  call temp:= `port`(v8) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1a2e20.  v7:= temp;
  #L1a2e22.  v8:= 1I;
  #L1a2e24.  if v7 < v8 then goto L1a2e32;
  #L1a2e28.  v8:= 65535I;
  #L1a2e2e.  if v7 <= v8 then goto L1a2ee6;
  #L1a2e32.  v8:= new `java.net.SocketException`;
  #L1a2e36.  v9:= new `java.lang.StringBuilder`;
  #L1a2e3a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a2e40.  v10:= "No route to " @kind object;
  #L1a2e44.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2e4a.  v9:= temp @kind object;
  #L1a2e4c.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2e52.  v9:= temp @kind object;
  #L1a2e54.  v10:= ":" @kind object;
  #L1a2e58.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2e5e.  v9:= temp @kind object;
  #L1a2e60.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2e66.  v9:= temp @kind object;
  #L1a2e68.  v10:= "; port is out of range" @kind object;
  #L1a2e6c.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2e72.  v9:= temp @kind object;
  #L1a2e74.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a2e7a.  v9:= temp @kind object;
  #L1a2e7c.  call `<init>`(v8, v9) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a2e82.  throw v8;
  #L1a2e84.  call temp:= `address`(v12) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L1a2e8a.  v3:= temp @kind object;
  #L1a2e8c.  v8:= instanceof @variable v3 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L1a2e90.  if v8 != 0 then goto L1a2ece;
  #L1a2e94.  v8:= new `java.lang.IllegalArgumentException`;
  #L1a2e98.  v9:= new `java.lang.StringBuilder`;
  #L1a2e9c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a2ea2.  v10:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L1a2ea6.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2eac.  v9:= temp @kind object;
  #L1a2eae.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a2eb4.  v10:= temp @kind object;
  #L1a2eb6.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2ebc.  v9:= temp @kind object;
  #L1a2ebe.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a2ec4.  v9:= temp @kind object;
  #L1a2ec6.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a2ecc.  throw v8;
  #L1a2ece.  v4:= v3 @kind object;
  #L1a2ed0.  v4:= (`java.net.InetSocketAddress`) v4 @kind object;
  #L1a2ed4.  call temp:= `getHostString`(v4) @signature `Lokhttp3/internal/connection/RouteSelector;.getHostString:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L1a2eda.  v6:= temp @kind object;
  #L1a2edc.  call temp:= `getPort`(v4) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L1a2ee2.  v7:= temp;
  #L1a2ee4.  goto L1a2e22;
  #L1a2ee6.  call temp:= `type`(v12) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a2eec.  v8:= temp @kind object;
  #L1a2eee.  v9:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L1a2ef2.  if v8 != v9 then goto L1a2f0a;
  #L1a2ef6.  v8:= v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a2efa.  call temp:= `createUnresolved`(v6, v7) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L1a2f00.  v9:= temp @kind object;
  #L1a2f02.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a2f08.  return @kind void;
  #L1a2f0a.  v8:= v11.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L1a2f0e.  v9:= v11.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L1a2f12.  call `dnsStart`(v8, v9, v6) @signature `Lokhttp3/EventListener;.dnsStart:(Lokhttp3/Call;Ljava/lang/String;)V` @kind virtual;
  #L1a2f18.  v8:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2f1c.  call temp:= `dns`(v8) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L1a2f22.  v8:= temp @kind object;
  #L1a2f24.  call temp:= `lookup`(v8, v6) @signature `Lokhttp3/Dns;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L1a2f2a.  v0:= temp @kind object;
  #L1a2f2c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a2f32.  v8:= temp;
  #L1a2f34.  if v8 == 0 then goto L1a2f7e;
  #L1a2f38.  v8:= new `java.net.UnknownHostException`;
  #L1a2f3c.  v9:= new `java.lang.StringBuilder`;
  #L1a2f40.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a2f46.  v10:= v11.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2f4a.  call temp:= `dns`(v10) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L1a2f50.  v10:= temp @kind object;
  #L1a2f52.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2f58.  v9:= temp @kind object;
  #L1a2f5a.  v10:= " returned no addresses for " @kind object;
  #L1a2f5e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2f64.  v9:= temp @kind object;
  #L1a2f66.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a2f6c.  v9:= temp @kind object;
  #L1a2f6e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a2f74.  v9:= temp @kind object;
  #L1a2f76.  call `<init>`(v8, v9) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a2f7c.  throw v8;
  #L1a2f7e.  v8:= v11.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L1a2f82.  v9:= v11.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L1a2f86.  call `dnsEnd`(v8, v9, v6, v0) @signature `Lokhttp3/EventListener;.dnsEnd:(Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L1a2f8c.  v1:= 0I;
  #L1a2f8e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a2f94.  v5:= temp;
  #L1a2f96.  if v1 >= v5 then goto L1a2f08;
  #L1a2f9a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a2fa0.  v2:= temp @kind object;
  #L1a2fa2.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L1a2fa6.  v8:= v11.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a2faa.  v9:= new `java.net.InetSocketAddress`;
  #L1a2fae.  call `<init>`(v9, v2, v7) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L1a2fb4.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a2fba.  v1:= v1 + 1;
  #L1a2fbe.  goto L1a2f96;
}
procedure `void` `resetNextProxy`(`okhttp3.internal.connection.RouteSelector` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object @name `url`, `java.net.Proxy` v6 @kind object @name `proxy`) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a2fd0.  v3:= 0I;
  #L1a2fd2.  if v6 == 0 then goto L1a2fe8;
  #L1a2fd6.  call temp:= `singletonList`(v6) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1a2fdc.  v1:= temp @kind object;
  #L1a2fde.  v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v1 @kind object;
  #L1a2fe2.  v4.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v3;
  #L1a2fe6.  return @kind void;
  #L1a2fe8.  v1:= v4.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a2fec.  call temp:= `proxySelector`(v1) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a2ff2.  v1:= temp @kind object;
  #L1a2ff4.  call temp:= `uri`(v5) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L1a2ffa.  v2:= temp @kind object;
  #L1a2ffc.  call temp:= `select`(v1, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L1a3002.  v0:= temp @kind object;
  #L1a3004.  if v0 == 0 then goto L1a3022;
  #L1a3008.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a300e.  v1:= temp;
  #L1a3010.  if v1 != 0 then goto L1a3022;
  #L1a3014.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1a301a.  v1:= temp @kind object;
  #L1a301c.  v4.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v1 @kind object;
  #L1a3020.  goto L1a2fe2;
  #L1a3022.  v1:= 1I;
  #L1a3024.  v1:= new `java.net.Proxy`[v1];
  #L1a3028.  v2:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L1a302c.  v1[v3]:= v2 @kind object;
  #L1a3030.  call temp:= `immutableList`(v1) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1a3036.  v1:= temp @kind object;
  #L1a3038.  goto L1a301c;
}
procedure `void` `connectFailed`(`okhttp3.internal.connection.RouteSelector` v3 @kind this, `okhttp3.Route` v4 @kind object @name `failedRoute`, `java.io.IOException` v5 @kind object @name `failure`) @signature `Lokhttp3/internal/connection/RouteSelector;.connectFailed:(Lokhttp3/Route;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a304c.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a3052.  v0:= temp @kind object;
  #L1a3054.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a305a.  v0:= temp @kind object;
  #L1a305c.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1a3060.  if v0 == v1 then goto L1a30aa;
  #L1a3064.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a3068.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a306e.  v0:= temp @kind object;
  #L1a3070.  if v0 == 0 then goto L1a30aa;
  #L1a3074.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a3078.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1a307e.  v0:= temp @kind object;
  #L1a3080.  v1:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a3084.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a308a.  v1:= temp @kind object;
  #L1a308c.  call temp:= `uri`(v1) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L1a3092.  v1:= temp @kind object;
  #L1a3094.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1a309a.  v2:= temp @kind object;
  #L1a309c.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L1a30a2.  v2:= temp @kind object;
  #L1a30a4.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L1a30aa.  v0:= v3.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L1a30ae.  call `failed`(v0, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @kind virtual;
  #L1a30b4.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a30c8.  call temp:= `hasNextProxy`(v1) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a30ce.  v0:= temp;
  #L1a30d0.  if v0 != 0 then goto L1a30e4;
  #L1a30d4.  v0:= v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a30d8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a30de.  v0:= temp;
  #L1a30e0.  if v0 != 0 then goto L1a30e8;
  #L1a30e4.  v0:= 1I;
  #L1a30e6.  return v0;
  #L1a30e8.  v0:= 0I;
  #L1a30ea.  goto L1a30e6;
}
procedure `okhttp3.internal.connection.RouteSelector$Selection` `next`(`okhttp3.internal.connection.RouteSelector` v7 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a30fc.  call temp:= `hasNext`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L1a3102.  v5:= temp;
  #L1a3104.  if v5 != 0 then goto L1a3114;
  #L1a3108.  v5:= new `java.util.NoSuchElementException`;
  #L1a310c.  call `<init>`(v5) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1a3112.  throw v5;
  #L1a3114.  v3:= new `java.util.ArrayList`;
  #L1a3118.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a311e.  call temp:= `hasNextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L1a3124.  v5:= temp;
  #L1a3126.  if v5 == 0 then goto L1a3196;
  #L1a312a.  call temp:= `nextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @kind direct;
  #L1a3130.  v1:= temp @kind object;
  #L1a3132.  v0:= 0I;
  #L1a3134.  v5:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a3138.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a313e.  v4:= temp;
  #L1a3140.  if v0 >= v4 then goto L1a318a;
  #L1a3144.  v2:= new `okhttp3.Route`;
  #L1a3148.  v6:= v7.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L1a314c.  v5:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L1a3150.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a3156.  v5:= temp @kind object;
  #L1a3158.  v5:= (`java.net.InetSocketAddress`) v5 @kind object;
  #L1a315c.  call `<init>`(v2, v6, v1, v5) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L1a3162.  v5:= v7.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L1a3166.  call temp:= `shouldPostpone`(v5, v2) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @kind virtual;
  #L1a316c.  v5:= temp;
  #L1a316e.  if v5 == 0 then goto L1a3182;
  #L1a3172.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a3176.  call temp:= `add`(v5, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a317c.  v0:= v0 + 1;
  #L1a3180.  goto L1a3140;
  #L1a3182.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a3188.  goto L1a317c;
  #L1a318a.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a3190.  v5:= temp;
  #L1a3192.  if v5 != 0 then goto L1a311e;
  #L1a3196.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a319c.  v5:= temp;
  #L1a319e.  if v5 == 0 then goto L1a31b6;
  #L1a31a2.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a31a6.  call temp:= `addAll`(v3, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1a31ac.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L1a31b0.  call `clear`(v5) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1a31b6.  v5:= new `okhttp3.internal.connection.RouteSelector$Selection`;
  #L1a31ba.  call `<init>`(v5, v3) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @kind direct;
  #L1a31c0.  return v5 @kind object;
}

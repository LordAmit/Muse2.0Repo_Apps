record `okhttp3.internal.platform.Jdk9Platform` @kind class @AccessFlag FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @AccessFlag FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Jdk9Platform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object @name `setProtocolMethod`, `java.lang.reflect.Method` v2 @kind object @name `getProtocolMethod`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21cd58.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L21cd5e.  v0.`okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L21cd62.  v0.`okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L21cd66.  return @kind void;
}
procedure `okhttp3.internal.platform.Jdk9Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21cd78.  v2:= constclass @type ^`javax.net.ssl.SSLParameters` @kind object;
  #L21cd7c.  v3:= "setApplicationProtocols" @kind object;
  #L21cd80.  v4:= 1I;
  #L21cd82.  v4:= new `java.lang.Class`[v4];
  #L21cd86.  v5:= 0I;
  #L21cd88.  v6:= constclass @type ^`java.lang.String`[] @kind object;
  #L21cd8c.  v4[v5]:= v6 @kind object;
  #L21cd90.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21cd96.  v1:= temp @kind object;
  #L21cd98.  v2:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L21cd9c.  v3:= "getApplicationProtocol" @kind object;
  #L21cda0.  v4:= 0I;
  #L21cda2.  v4:= new `java.lang.Class`[v4];
  #L21cda6.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L21cdac.  v0:= temp @kind object;
  #L21cdae.  v2:= new `okhttp3.internal.platform.Jdk9Platform`;
  #L21cdb2.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/platform/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L21cdb8.  return v2 @kind object;
  #L21cdba.  v2:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L21cdbc.  v2:= 0I;
  #L21cdbe.  goto L21cdb8;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L21cdba;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Jdk9Platform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `sslSocket`, `java.lang.String` v9 @kind object @name `hostname`, `java.util.List` v10 @kind object) @signature `Lokhttp3/internal/platform/Jdk9Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L21cde0.  call temp:= `getSSLParameters`(v8) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L21cde6.  v2:= temp @kind object;
  #L21cde8.  call temp:= `alpnProtocolNames`(v10) @signature `Lokhttp3/internal/platform/Jdk9Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L21cdee.  v1:= temp @kind object;
  #L21cdf0.  v3:= v7.`okhttp3.internal.platform.Jdk9Platform.setProtocolMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21cdf4.  v4:= 1I;
  #L21cdf6.  v4:= new `java.lang.Object`[v4];
  #L21cdfa.  v5:= 0I;
  #L21cdfc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L21ce02.  v6:= temp;
  #L21ce04.  v6:= new `java.lang.String`[v6];
  #L21ce08.  call temp:= `toArray`(v1, v6) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L21ce0e.  v6:= temp @kind object;
  #L21ce10.  v4[v5]:= v6 @kind object;
  #L21ce14.  call temp:= `invoke`(v3, v2, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21ce1a.  call `setSSLParameters`(v8, v2) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #Try_end0.  
  #L21ce20.  return @kind void;
  #L21ce22.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21ce24.  v3:= "unable to set ssl parameters" @kind object;
  #L21ce28.  call temp:= `assertionError`(v3, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21ce2e.  v3:= temp @kind object;
  #L21ce30.  throw v3;
  #L21ce32.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21ce34.  goto L21ce24;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21ce22;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21ce32;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Jdk9Platform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L21ce58.  v2:= v4.`okhttp3.internal.platform.Jdk9Platform.getProtocolMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L21ce5c.  v3:= 0I;
  #L21ce5e.  v3:= new `java.lang.Object`[v3];
  #L21ce62.  call temp:= `invoke`(v2, v5, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L21ce68.  v1:= temp @kind object;
  #L21ce6a.  v1:= (`java.lang.String`) v1 @kind object;
  #L21ce6e.  if v1 == 0 then goto L21ce82;
  #L21ce72.  v2:= "" @kind object;
  #L21ce76.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #Try_end0.  
  #L21ce7c.  v2:= temp;
  #L21ce7e.  if v2 == 0 then goto L21ce84;
  #L21ce82.  v1:= 0I;
  #L21ce84.  return v1 @kind object;
  #L21ce86.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L21ce88.  v2:= "unable to get selected protocols" @kind object;
  #L21ce8c.  call temp:= `assertionError`(v2, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L21ce92.  v2:= temp @kind object;
  #L21ce94.  throw v2;
  #L21ce96.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L21ce98.  goto L21ce88;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L21ce86;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L21ce96;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Jdk9Platform` v2 @kind this, `javax.net.ssl.SSLSocketFactory` v3 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/Jdk9Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21cebc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L21cec0.  v1:= "clientBuilder.sslSocketFactory(SSLSocketFactory) not supported on JDK 9+" @kind object;
  #L21cec4.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21ceca.  throw v0;
}

record `okhttp3.internal.platform.Platform` @kind class @AccessFlag PUBLIC {
}
global `int` `@@okhttp3.internal.platform.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.platform.Platform` `@@okhttp3.internal.platform.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.Platform.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1aa308.  call temp:= `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1aa30e.  v0:= temp @kind object;
  #L1aa310.  `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L1aa314.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L1aa318.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1aa31e.  v0:= temp @kind object;
  #L1aa320.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1aa326.  v0:= temp @kind object;
  #L1aa328.  `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L1aa32c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Platform` v0 @kind this) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1aa340.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aa346.  return @kind void;
}
procedure `java.util.List` `alpnProtocolNames`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1aa358.  v1:= new `java.util.ArrayList`;
  #L1aa35c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1aa362.  v4:= temp;
  #L1aa364.  call `<init>`(v1, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1aa36a.  v0:= 0I;
  #L1aa36c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1aa372.  v3:= temp;
  #L1aa374.  if v0 >= v3 then goto L1aa3a2;
  #L1aa378.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1aa37e.  v2:= temp @kind object;
  #L1aa380.  v2:= (`okhttp3.Protocol`) v2 @kind object;
  #L1aa384.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L1aa388.  if v2 != v4 then goto L1aa392;
  #L1aa38c.  v0:= v0 + 1;
  #L1aa390.  goto L1aa374;
  #L1aa392.  call temp:= `toString`(v2) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aa398.  v4:= temp @kind object;
  #L1aa39a.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1aa3a0.  goto L1aa38c;
  #L1aa3a2.  return v1 @kind object;
}
procedure `byte`[] `concatLengthPrefixed`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.concatLengthPrefixed:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1aa3b4.  v2:= new `okio.Buffer`;
  #L1aa3b8.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1aa3be.  v0:= 0I;
  #L1aa3c0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1aa3c6.  v3:= temp;
  #L1aa3c8.  if v0 >= v3 then goto L1aa40c;
  #L1aa3cc.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1aa3d2.  v1:= temp @kind object;
  #L1aa3d4.  v1:= (`okhttp3.Protocol`) v1 @kind object;
  #L1aa3d8.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L1aa3dc.  if v1 != v4 then goto L1aa3e6;
  #L1aa3e0.  v0:= v0 + 1;
  #L1aa3e4.  goto L1aa3c8;
  #L1aa3e6.  call temp:= `toString`(v1) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aa3ec.  v4:= temp @kind object;
  #L1aa3ee.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1aa3f4.  v4:= temp;
  #L1aa3f6.  call temp:= `writeByte`(v2, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1aa3fc.  call temp:= `toString`(v1) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aa402.  v4:= temp @kind object;
  #L1aa404.  call temp:= `writeUtf8`(v2, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L1aa40a.  goto L1aa3e0;
  #L1aa40c.  call temp:= `readByteArray`(v2) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L1aa412.  v4:= temp @kind object;
  #L1aa414.  return v4 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1aa428.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1aa42e.  v0:= temp @kind object;
  #L1aa430.  if v0 == 0 then goto L1aa436;
  #L1aa434.  return v0 @kind object;
  #L1aa436.  call temp:= `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @kind static;
  #L1aa43c.  v4:= temp;
  #L1aa43e.  if v4 == 0 then goto L1aa452;
  #L1aa442.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1aa448.  v1:= temp @kind object;
  #L1aa44a.  if v1 == 0 then goto L1aa452;
  #L1aa44e.  v0:= v1 @kind object;
  #L1aa450.  goto L1aa434;
  #L1aa452.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @kind static;
  #L1aa458.  v2:= temp @kind object;
  #L1aa45a.  if v2 == 0 then goto L1aa462;
  #L1aa45e.  v0:= v2 @kind object;
  #L1aa460.  goto L1aa434;
  #L1aa462.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1aa468.  v3:= temp @kind object;
  #L1aa46a.  if v3 == 0 then goto L1aa472;
  #L1aa46e.  v0:= v3 @kind object;
  #L1aa470.  goto L1aa434;
  #L1aa472.  v0:= new `okhttp3.internal.platform.Platform`;
  #L1aa476.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L1aa47c.  goto L1aa434;
}
procedure `okhttp3.internal.platform.Platform` `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1aa490.  v0:= `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L1aa494.  return v0 @kind object;
}
procedure `boolean` `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1aa4a8.  v1:= "conscrypt" @kind object;
  #L1aa4ac.  v2:= "okhttp.platform" @kind object;
  #L1aa4b0.  call temp:= `getProperty`(v2) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1aa4b6.  v2:= temp @kind object;
  #L1aa4b8.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aa4be.  v1:= temp;
  #L1aa4c0.  if v1 == 0 then goto L1aa4c8;
  #L1aa4c4.  v1:= 1I;
  #L1aa4c6.  return v1;
  #L1aa4c8.  call temp:= `getProviders`() @signature `Ljava/security/Security;.getProviders:()[Ljava/security/Provider;` @kind static;
  #L1aa4ce.  v1:= temp @kind object;
  #L1aa4d0.  v2:= 0I;
  #L1aa4d2.  v1:= v1[v2] @kind object;
  #L1aa4d6.  call temp:= `getName`(v1) @signature `Ljava/security/Provider;.getName:()Ljava/lang/String;` @kind virtual;
  #L1aa4dc.  v0:= temp @kind object;
  #L1aa4de.  v1:= "Conscrypt" @kind object;
  #L1aa4e2.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aa4e8.  v1:= temp;
  #L1aa4ea.  goto L1aa4c6;
}
procedure `java.lang.Object` `readFieldOrNull`(`java.lang.Object` v8 @kind object @name `instance`, `java.lang.Class` v9 @kind object, `java.lang.String` v10 @kind object @name `fieldName`) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1aa4fc.  v5:= 0I;
  #L1aa4fe.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1aa504.  v0:= temp @kind object;
  #L1aa506.  v6:= constclass @type ^`java.lang.Object` @kind object;
  #L1aa50a.  if v0 == v6 then goto L1aa55c;
  #Try_start0.  
  #L1aa50e.  call temp:= `getDeclaredField`(v0, v10) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L1aa514.  v3:= temp @kind object;
  #L1aa516.  v6:= 1I;
  #L1aa518.  call `setAccessible`(v3, v6) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1aa51e.  call temp:= `get`(v3, v8) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1aa524.  v4:= temp @kind object;
  #L1aa526.  if v4 == 0 then goto L1aa536;
  #L1aa52a.  call temp:= `isInstance`(v9, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aa530.  v6:= temp;
  #L1aa532.  if v6 != 0 then goto L1aa538;
  #L1aa536.  return v5 @kind object;
  #L1aa538.  call temp:= `cast`(v9, v4) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L1aa53e.  v5:= temp @kind object;
  #L1aa540.  goto L1aa536;
  #L1aa542.  v2:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1aa544.  v5:= new `java.lang.AssertionError`;
  #L1aa548.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1aa54e.  throw v5;
  #L1aa550.  v6:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L1aa552.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1aa558.  v0:= temp @kind object;
  #L1aa55a.  goto L1aa506;
  #L1aa55c.  v6:= "delegate" @kind object;
  #L1aa560.  call temp:= `equals`(v10, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1aa566.  v6:= temp;
  #L1aa568.  if v6 != 0 then goto L1aa536;
  #L1aa56c.  v6:= constclass @type ^`java.lang.Object` @kind object;
  #L1aa570.  v7:= "delegate" @kind object;
  #L1aa574.  call temp:= `readFieldOrNull`(v8, v6, v7) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1aa57a.  v1:= temp @kind object;
  #L1aa57c.  if v1 == 0 then goto L1aa536;
  #L1aa580.  call temp:= `readFieldOrNull`(v1, v9, v10) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1aa586.  v5:= temp @kind object;
  #L1aa588.  goto L1aa536;
  catch `java.lang.NoSuchFieldException` @[Try_start0..Try_end0] goto L1aa550;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L1aa542;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object @name `sslSocket`) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L1aa5ac.  return @kind void;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v4 @kind this, `javax.net.ssl.SSLSocketFactory` v5 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aa5c0.  call temp:= `trustManager`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind virtual;
  #L1aa5c6.  v0:= temp @kind object;
  #L1aa5c8.  if v0 != 0 then goto L1aa622;
  #L1aa5cc.  v1:= new `java.lang.IllegalStateException`;
  #L1aa5d0.  v2:= new `java.lang.StringBuilder`;
  #L1aa5d4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aa5da.  v3:= "Unable to extract the trust manager on " @kind object;
  #L1aa5de.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aa5e4.  v2:= temp @kind object;
  #L1aa5e6.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L1aa5ec.  v3:= temp @kind object;
  #L1aa5ee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aa5f4.  v2:= temp @kind object;
  #L1aa5f6.  v3:= ", sslSocketFactory is " @kind object;
  #L1aa5fa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aa600.  v2:= temp @kind object;
  #L1aa602.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1aa608.  v3:= temp @kind object;
  #L1aa60a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aa610.  v2:= temp @kind object;
  #L1aa612.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aa618.  v2:= temp @kind object;
  #L1aa61a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aa620.  throw v1;
  #L1aa622.  call temp:= `buildCertificateChainCleaner`(v4, v0) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L1aa628.  v1:= temp @kind object;
  #L1aa62a.  return v1 @kind object;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa63c.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner`;
  #L1aa640.  call temp:= `buildTrustRootIndex`(v2, v3) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind virtual;
  #L1aa646.  v1:= temp @kind object;
  #L1aa648.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @kind direct;
  #L1aa64e.  return v0 @kind object;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.Platform` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object @name `trustManager`) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa660.  v0:= new `okhttp3.internal.tls.BasicTrustRootIndex`;
  #L1aa664.  call temp:= `getAcceptedIssuers`(v3) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L1aa66a.  v1:= temp @kind object;
  #L1aa66c.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L1aa672.  return v0 @kind object;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object @name `sslSocket`, `java.lang.String` v2 @kind object @name `hostname`, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L1aa684.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.net.Socket` v1 @kind object @name `socket`, `java.net.InetSocketAddress` v2 @kind object @name `address`, `int` v3 @name `connectTimeout`) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L1aa698.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L1aa69e.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa6b0.  v0:= "OkHttp" @kind object;
  #L1aa6b4.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLContext` `getSSLContext`(`okhttp3.internal.platform.Platform` v3 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1aa6c8.  v1:= "TLS" @kind object;
  #L1aa6cc.  call temp:= `getInstance`(v1) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #Try_end0.  
  #L1aa6d2.  v1:= temp @kind object;
  #L1aa6d4.  return v1 @kind object;
  #L1aa6d6.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L1aa6d8.  v1:= new `java.lang.IllegalStateException`;
  #L1aa6dc.  v2:= "No TLS provider" @kind object;
  #L1aa6e0.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1aa6e6.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[Try_start0..Try_end0] goto L1aa6d6;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object @name `socket`) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa708.  v0:= 0I;
  #L1aa70a.  return v0 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object @name `closer`) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa71c.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L1aa720.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1aa724.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1aa72a.  v0:= temp;
  #L1aa72c.  if v0 == 0 then goto L1aa73c;
  #L1aa730.  v0:= new `java.lang.Throwable`;
  #L1aa734.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aa73a.  return v0 @kind object;
  #L1aa73c.  v0:= 0I;
  #L1aa73e.  goto L1aa73a;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object @name `hostname`) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1aa750.  v0:= 1I;
  #L1aa752.  return v0;
}
procedure `void` `log`(`okhttp3.internal.platform.Platform` v2 @kind this, `int` v3 @name `level`, `java.lang.String` v4 @kind object @name `message`, `java.lang.Throwable` v5 @kind object @name `t`) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa764.  v1:= 5I;
  #L1aa766.  if v3 != v1 then goto L1aa77a;
  #L1aa76a.  v0:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L1aa76e.  v1:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L1aa772.  call `log`(v1, v0, v4, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1aa778.  return @kind void;
  #L1aa77a.  v0:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L1aa77e.  goto L1aa76e;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object @name `message`, `java.lang.Object` v4 @kind object @name `stackTrace`) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1aa790.  if v4 != 0 then goto L1aa7ba;
  #L1aa794.  v0:= new `java.lang.StringBuilder`;
  #L1aa798.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1aa79e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aa7a4.  v0:= temp @kind object;
  #L1aa7a6.  v1:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L1aa7aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1aa7b0.  v0:= temp @kind object;
  #L1aa7b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1aa7b8.  v3:= temp @kind object;
  #L1aa7ba.  v0:= 5I;
  #L1aa7bc.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L1aa7c0.  call `log`(v2, v0, v3, v4) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1aa7c6.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Platform` v6 @kind this, `javax.net.ssl.SSLSocketFactory` v7 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1aa7d8.  v4:= 0I;
  #Try_start0.  
  #L1aa7da.  v3:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L1aa7de.  call temp:= `forName`(v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1aa7e4.  v2:= temp @kind object;
  #L1aa7e6.  v3:= "context" @kind object;
  #L1aa7ea.  call temp:= `readFieldOrNull`(v7, v2, v3) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1aa7f0.  v0:= temp @kind object;
  #L1aa7f2.  if v0 != 0 then goto L1aa7fa;
  #L1aa7f6.  v3:= v4 @kind object;
  #L1aa7f8.  return v3 @kind object;
  #L1aa7fa.  v3:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L1aa7fe.  v5:= "trustManager" @kind object;
  #L1aa802.  call temp:= `readFieldOrNull`(v0, v3, v5) @signature `Lokhttp3/internal/platform/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1aa808.  v3:= temp @kind object;
  #L1aa80a.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #Try_end0.  
  #L1aa80e.  goto L1aa7f8;
  #L1aa810.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L1aa812.  v3:= v4 @kind object;
  #L1aa814.  goto L1aa7f8;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L1aa810;
}

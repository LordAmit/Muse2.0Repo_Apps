record `okhttp3.internal.tls.BasicCertificateChainCleaner` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.tls.CertificateChainCleaner` @kind class {
  `okhttp3.internal.tls.TrustRootIndex` `okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.tls.BasicCertificateChainCleaner.MAX_SIGNERS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v0 @kind this, `okhttp3.internal.tls.TrustRootIndex` v1 @kind object @name `trustRootIndex`) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L21d1ac.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.<init>:()V` @kind direct;
  #L21d1b2.  v0.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` := v1 @kind object;
  #L21d1b6.  return @kind void;
}
procedure `boolean` `verifySignature`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v4 @kind this, `java.security.cert.X509Certificate` v5 @kind object @name `toVerify`, `java.security.cert.X509Certificate` v6 @kind object @name `signingCert`) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.verifySignature:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21d1c8.  v1:= 0I;
  #L21d1ca.  call temp:= `getIssuerDN`(v5) @signature `Ljava/security/cert/X509Certificate;.getIssuerDN:()Ljava/security/Principal;` @kind virtual;
  #L21d1d0.  v2:= temp @kind object;
  #L21d1d2.  call temp:= `getSubjectDN`(v6) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L21d1d8.  v3:= temp @kind object;
  #L21d1da.  call temp:= `equals`(v2, v3) @signature `Ljava/security/Principal;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L21d1e0.  v2:= temp;
  #L21d1e2.  if v2 != 0 then goto L21d1e8;
  #L21d1e6.  return v1;
  #Try_start0.  
  #L21d1e8.  call temp:= `getPublicKey`(v6) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L21d1ee.  v2:= temp @kind object;
  #L21d1f0.  call `verify`(v5, v2) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #Try_end0.  
  #L21d1f6.  v1:= 1I;
  #L21d1f8.  goto L21d1e6;
  #L21d1fa.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L21d1fc.  goto L21d1e6;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L21d1fa;
}
procedure `java.util.List` `clean`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v11 @kind this, `java.util.List` v12 @kind object, `java.lang.String` v13 @kind object @name `hostname`) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.clean:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L21d220.  v3:= new `java.util.ArrayDeque`;
  #L21d224.  call `<init>`(v3, v12) @signature `Ljava/util/ArrayDeque;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L21d22a.  v4:= new `java.util.ArrayList`;
  #L21d22e.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L21d234.  call temp:= `removeFirst`(v3) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L21d23a.  v8:= temp @kind object;
  #L21d23c.  call temp:= `add`(v4, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21d242.  v1:= 0I;
  #L21d244.  v0:= 0I;
  #L21d246.  v8:= 9I;
  #L21d24a.  if v0 >= v8 then goto L21d31c;
  #L21d24e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L21d254.  v8:= temp;
  #L21d256.  v8:= v8 + -1;
  #L21d25a.  call temp:= `get`(v4, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L21d260.  v6:= temp @kind object;
  #L21d262.  v6:= (`java.security.cert.X509Certificate`) v6 @kind object;
  #L21d266.  v8:= v11.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L21d26a.  call temp:= `findByIssuerAndSignature`(v8, v6) @signature `Lokhttp3/internal/tls/TrustRootIndex;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @kind interface;
  #L21d270.  v7:= temp @kind object;
  #L21d272.  if v7 == 0 then goto L21d2ac;
  #L21d276.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L21d27c.  v8:= temp;
  #L21d27e.  v9:= 1I;
  #L21d280.  if v8 > v9 then goto L21d290;
  #L21d284.  call temp:= `equals`(v6, v7) @signature `Ljava/security/cert/X509Certificate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21d28a.  v8:= temp;
  #L21d28c.  if v8 != 0 then goto L21d296;
  #L21d290.  call temp:= `add`(v4, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21d296.  call temp:= `verifySignature`(v11, v7, v7) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.verifySignature:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L21d29c.  v8:= temp;
  #L21d29e.  if v8 == 0 then goto L21d2a4;
  #L21d2a2.  return v4 @kind object;
  #L21d2a4.  v1:= 1I;
  #L21d2a6.  v0:= v0 + 1;
  #L21d2aa.  goto L21d246;
  #L21d2ac.  call temp:= `iterator`(v3) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L21d2b2.  v2:= temp @kind object;
  #L21d2b4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L21d2ba.  v8:= temp;
  #L21d2bc.  if v8 == 0 then goto L21d2e6;
  #L21d2c0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L21d2c6.  v5:= temp @kind object;
  #L21d2c8.  v5:= (`java.security.cert.X509Certificate`) v5 @kind object;
  #L21d2cc.  call temp:= `verifySignature`(v11, v6, v5) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.verifySignature:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L21d2d2.  v8:= temp;
  #L21d2d4.  if v8 == 0 then goto L21d2b4;
  #L21d2d8.  call `remove`(v2) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L21d2de.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L21d2e4.  goto L21d2a6;
  #L21d2e6.  if v1 != 0 then goto L21d2a2;
  #L21d2ea.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L21d2ee.  v9:= new `java.lang.StringBuilder`;
  #L21d2f2.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21d2f8.  v10:= "Failed to find a trusted cert that signed " @kind object;
  #L21d2fc.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d302.  v9:= temp @kind object;
  #L21d304.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d30a.  v9:= temp @kind object;
  #L21d30c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21d312.  v9:= temp @kind object;
  #L21d314.  call `<init>`(v8, v9) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21d31a.  throw v8;
  #L21d31c.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L21d320.  v9:= new `java.lang.StringBuilder`;
  #L21d324.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21d32a.  v10:= "Certificate chain too long: " @kind object;
  #L21d32e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d334.  v9:= temp @kind object;
  #L21d336.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21d33c.  v9:= temp @kind object;
  #L21d33e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21d344.  v9:= temp @kind object;
  #L21d346.  call `<init>`(v8, v9) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21d34c.  throw v8;
}
procedure `boolean` `equals`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v3 @kind this, `java.lang.Object` v4 @kind object @name `other`) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L21d360.  v0:= 1I;
  #L21d362.  if v4 != v3 then goto L21d368;
  #L21d366.  return v0;
  #L21d368.  v1:= instanceof @variable v4 @type ^`okhttp3.internal.tls.BasicCertificateChainCleaner` @kind boolean;
  #L21d36c.  if v1 == 0 then goto L21d388;
  #L21d370.  v4:= (`okhttp3.internal.tls.BasicCertificateChainCleaner`) v4 @kind object;
  #L21d374.  v1:= v4.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L21d378.  v2:= v3.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L21d37c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L21d382.  v1:= temp;
  #L21d384.  if v1 != 0 then goto L21d366;
  #L21d388.  v0:= 0I;
  #L21d38a.  goto L21d366;
}
procedure `int` `hashCode`(`okhttp3.internal.tls.BasicCertificateChainCleaner` v1 @kind this) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21d39c.  v0:= v1.`okhttp3.internal.tls.BasicCertificateChainCleaner.trustRootIndex` @type ^`okhttp3.internal.tls.TrustRootIndex` @kind object;
  #L21d3a0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L21d3a6.  v0:= temp;
  #L21d3a8.  return v0;
}

record `okhttp3.internal.cache.DiskLruCache$3` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `okhttp3.internal.cache.DiskLruCache$3.delegate` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$3` v2 @kind this, `okhttp3.internal.cache.DiskLruCache` v3 @kind object @name `this$0`) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.<init>:(Lokhttp3/internal/cache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a0940.  v2.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v3 @kind object;
  #L1a0944.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a094a.  v0:= new `java.util.ArrayList`;
  #L1a094e.  v1:= v2.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0952.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.lruEntries` @type ^`java.util.LinkedHashMap` @kind object;
  #L1a0956.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L1a095c.  v1:= temp @kind object;
  #L1a095e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1a0964.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1a096a.  v0:= temp @kind object;
  #L1a096c.  v2.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` := v0 @kind object;
  #L1a0970.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.cache.DiskLruCache$3` v6 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a0984.  v2:= 1I;
  #L1a0986.  v3:= 0I;
  #L1a0988.  v4:= v6.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L1a098c.  if v4 == 0 then goto L1a0992;
  #L1a0990.  return v2;
  #L1a0992.  v4:= v6.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0996.  @monitorenter v4
  #Try_start0.  
  #L1a0998.  v5:= v6.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a099c.  v5:= v5.`okhttp3.internal.cache.DiskLruCache.closed` @type ^`boolean` @kind boolean;
  #L1a09a0.  if v5 == 0 then goto L1a09aa;
  #L1a09a4.  @monitorexit v4
  #L1a09a6.  v2:= v3;
  #L1a09a8.  goto L1a0990;
  #L1a09aa.  v5:= v6.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L1a09ae.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a09b4.  v5:= temp;
  #L1a09b6.  if v5 == 0 then goto L1a09e4;
  #L1a09ba.  v5:= v6.`okhttp3.internal.cache.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L1a09be.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a09c4.  v0:= temp @kind object;
  #L1a09c6.  v0:= (`okhttp3.internal.cache.DiskLruCache$Entry`) v0 @kind object;
  #L1a09ca.  call temp:= `snapshot`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L1a09d0.  v1:= temp @kind object;
  #L1a09d2.  if v1 == 0 then goto L1a09aa;
  #L1a09d6.  v6.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L1a09da.  @monitorexit v4
  #L1a09dc.  goto L1a0990;
  #L1a09de.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a09e0.  @monitorexit v4
  #Try_end0.  
  #L1a09e2.  throw v2;
  #Try_start1.  
  #L1a09e4.  @monitorexit v4
  #Try_end1.  
  #L1a09e6.  v2:= v3;
  #L1a09e8.  goto L1a0990;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a09de;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a09de;
}
procedure `java.lang.Object` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1a0a10.  call temp:= `next`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L1a0a16.  v0:= temp @kind object;
  #L1a0a18.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a0a2c.  call temp:= `hasNext`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @kind virtual;
  #L1a0a32.  v0:= temp;
  #L1a0a34.  if v0 != 0 then goto L1a0a44;
  #L1a0a38.  v0:= new `java.util.NoSuchElementException`;
  #L1a0a3c.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1a0a42.  throw v0;
  #L1a0a44.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L1a0a48.  v1.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L1a0a4c.  v0:= 0I;
  #L1a0a4e.  v1.`okhttp3.internal.cache.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L1a0a52.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L1a0a56.  return v0 @kind object;
}
procedure `void` `remove`(`okhttp3.internal.cache.DiskLruCache$3` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0a68.  v2:= 0I;
  #L1a0a6a.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L1a0a6e.  if v0 != 0 then goto L1a0a82;
  #L1a0a72.  v0:= new `java.lang.IllegalStateException`;
  #L1a0a76.  v1:= "remove() before next()" @kind object;
  #L1a0a7a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a0a80.  throw v0;
  #Try_start0.  
  #L1a0a82.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$3.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0a86.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L1a0a8a.  call temp:= `access$000`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.access$000:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Ljava/lang/String;` @kind static;
  #L1a0a90.  v1:= temp @kind object;
  #L1a0a92.  call temp:= `remove`(v0, v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #Try_end0.  
  #L1a0a98.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L1a0a9c.  return @kind void;
  #L1a0a9e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1a0aa0.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L1a0aa4.  goto L1a0a9c;
  #L1a0aa6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0aa8.  v3.`okhttp3.internal.cache.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L1a0aac.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1a0a9e;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0aa6;
}

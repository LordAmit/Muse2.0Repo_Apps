record `okhttp3.internal.cache.DiskLruCache$Editor` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.internal.cache.DiskLruCache$Editor.done` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.DiskLruCache$Entry` `okhttp3.internal.cache.DiskLruCache$Editor.entry` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Editor.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean`[] `okhttp3.internal.cache.DiskLruCache$Editor.written` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Editor` v1 @kind this, `okhttp3.internal.cache.DiskLruCache` v2 @kind object @name `this$0`, `okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind object @name `entry`) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Lokhttp3/internal/cache/DiskLruCache$Entry;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1a0ad0.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v2 @kind object;
  #L1a0ad4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a0ada.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` := v3 @kind object;
  #L1a0ade.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L1a0ae2.  if v0 == 0 then goto L1a0aee;
  #L1a0ae6.  v0:= 0I;
  #L1a0ae8.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.written` @type ^`boolean`[] := v0 @kind object;
  #L1a0aec.  return @kind void;
  #L1a0aee.  v0:= v2.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0af2.  v0:= new `boolean`[v0];
  #L1a0af6.  goto L1a0ae8;
}
procedure `void` `abort`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0b08.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0b0c.  @monitorenter v1
  #Try_start0.  
  #L1a0b0e.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0b12.  if v0 == 0 then goto L1a0b28;
  #L1a0b16.  v0:= new `java.lang.IllegalStateException`;
  #L1a0b1a.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1a0b20.  throw v0;
  #L1a0b22.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0b24.  @monitorexit v1
  #Try_end0.  
  #L1a0b26.  throw v0;
  #Try_start1.  
  #L1a0b28.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0b2c.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0b30.  if v0 != v3 then goto L1a0b40;
  #L1a0b34.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0b38.  v2:= 0I;
  #L1a0b3a.  call `completeEdit`(v0, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L1a0b40.  v0:= 1I;
  #L1a0b42.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` := v0 @kind boolean;
  #L1a0b46.  @monitorexit v1
  #Try_end1.  
  #L1a0b48.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0b22;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0b22;
}
procedure `void` `abortUnlessCommitted`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abortUnlessCommitted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0b70.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0b74.  @monitorenter v1
  #Try_start0.  
  #L1a0b76.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0b7a.  if v0 != 0 then goto L1a0b96;
  #L1a0b7e.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0b82.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #Try_end0.  
  #L1a0b86.  if v0 != v3 then goto L1a0b96;
  #Try_start1.  
  #L1a0b8a.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0b8e.  v2:= 0I;
  #L1a0b90.  call `completeEdit`(v0, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #Try_end1.  
  #Try_start2.  
  #L1a0b96.  @monitorexit v1
  #L1a0b98.  return @kind void;
  #L1a0b9a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0b9c.  @monitorexit v1
  #Try_end2.  
  #L1a0b9e.  throw v0;
  #L1a0ba0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1a0ba2.  goto L1a0b96;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0b9a;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L1a0ba0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0b9a;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1a0b9a;
}
procedure `void` `commit`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0bd4.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0bd8.  @monitorenter v1
  #Try_start0.  
  #L1a0bda.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0bde.  if v0 == 0 then goto L1a0bf4;
  #L1a0be2.  v0:= new `java.lang.IllegalStateException`;
  #L1a0be6.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1a0bec.  throw v0;
  #L1a0bee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0bf0.  @monitorexit v1
  #Try_end0.  
  #L1a0bf2.  throw v0;
  #Try_start1.  
  #L1a0bf4.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0bf8.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0bfc.  if v0 != v3 then goto L1a0c0c;
  #L1a0c00.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0c04.  v2:= 1I;
  #L1a0c06.  call `completeEdit`(v0, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L1a0c0c.  v0:= 1I;
  #L1a0c0e.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` := v0 @kind boolean;
  #L1a0c12.  @monitorexit v1
  #Try_end1.  
  #L1a0c14.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0bee;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0bee;
}
procedure `void` `detach`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.detach:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1a0c3c.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0c40.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0c44.  if v1 != v3 then goto L1a0c80;
  #L1a0c48.  v0:= 0I;
  #L1a0c4a.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0c4e.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0c52.  if v0 >= v1 then goto L1a0c76;
  #Try_start0.  
  #L1a0c56.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0c5a.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1a0c5e.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0c62.  v2:= v2.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L1a0c66.  v2:= v2[v0] @kind object;
  #L1a0c6a.  call `delete`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #Try_end0.  
  #L1a0c70.  v0:= v0 + 1;
  #L1a0c74.  goto L1a0c4a;
  #L1a0c76.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0c7a.  v2:= 0I;
  #L1a0c7c.  v1.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` := v2 @kind object;
  #L1a0c80.  return @kind void;
  #L1a0c82.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1a0c84.  goto L1a0c70;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1a0c82;
}
procedure `okio.Sink` `newSink`(`okhttp3.internal.cache.DiskLruCache$Editor` v6 @kind this, `int` v7 @name `index`) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a0ca8.  v4:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0cac.  @monitorenter v4
  #Try_start0.  
  #L1a0cae.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0cb2.  if v3 == 0 then goto L1a0cc8;
  #L1a0cb6.  v3:= new `java.lang.IllegalStateException`;
  #L1a0cba.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1a0cc0.  throw v3;
  #L1a0cc2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0cc4.  @monitorexit v4
  #Try_end0.  
  #L1a0cc6.  throw v3;
  #Try_start1.  
  #L1a0cc8.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0ccc.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0cd0.  if v3 == v6 then goto L1a0ce0;
  #L1a0cd4.  call temp:= `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @kind static;
  #L1a0cda.  v3:= temp @kind object;
  #L1a0cdc.  @monitorexit v4
  #L1a0cde.  return v3 @kind object;
  #L1a0ce0.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0ce4.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L1a0ce8.  if v3 != 0 then goto L1a0cf6;
  #L1a0cec.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.written` @type ^`boolean`[] @kind object;
  #L1a0cf0.  v5:= 1I;
  #L1a0cf2.  v3[v7]:= v5 @kind boolean;
  #L1a0cf6.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0cfa.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L1a0cfe.  v0:= v3[v7] @kind object;
  #Try_end1.  
  #Try_start2.  
  #L1a0d02.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0d06.  v3:= v3.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1a0d0a.  call temp:= `sink`(v3, v0) @signature `Lokhttp3/internal/io/FileSystem;.sink:(Ljava/io/File;)Lokio/Sink;` @kind interface;
  #Try_end2.  
  #L1a0d10.  v2:= temp @kind object;
  #Try_start3.  
  #L1a0d12.  v3:= new `okhttp3.internal.cache.DiskLruCache$Editor$1`;
  #L1a0d16.  call `<init>`(v3, v6, v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor$1;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Editor;Lokio/Sink;)V` @kind direct;
  #L1a0d1c.  @monitorexit v4
  #L1a0d1e.  goto L1a0cde;
  #L1a0d20.  v1:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L1a0d22.  call temp:= `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @kind static;
  #L1a0d28.  v3:= temp @kind object;
  #L1a0d2a.  @monitorexit v4
  #Try_end3.  
  #L1a0d2c.  goto L1a0cde;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0cc2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0cc2;
  catch `java.io.FileNotFoundException` @[Try_start2..Try_end2] goto L1a0d20;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1a0cc2;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L1a0cc2;
}
procedure `okio.Source` `newSource`(`okhttp3.internal.cache.DiskLruCache$Editor` v5 @kind this, `int` v6 @name `index`) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSource:(I)Lokio/Source;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a0d68.  v1:= 0I;
  #L1a0d6a.  v2:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0d6e.  @monitorenter v2
  #Try_start0.  
  #L1a0d70.  v3:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L1a0d74.  if v3 == 0 then goto L1a0d8a;
  #L1a0d78.  v1:= new `java.lang.IllegalStateException`;
  #L1a0d7c.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1a0d82.  throw v1;
  #L1a0d84.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0d86.  @monitorexit v2
  #Try_end0.  
  #L1a0d88.  throw v1;
  #Try_start1.  
  #L1a0d8a.  v3:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0d8e.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.readable` @type ^`boolean` @kind boolean;
  #L1a0d92.  if v3 == 0 then goto L1a0da2;
  #L1a0d96.  v3:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0d9a.  v3:= v3.`okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L1a0d9e.  if v3 == v5 then goto L1a0da6;
  #L1a0da2.  @monitorexit v2
  #Try_end1.  
  #L1a0da4.  return v1 @kind object;
  #Try_start2.  
  #L1a0da6.  v3:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0daa.  v3:= v3.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1a0dae.  v4:= v5.`okhttp3.internal.cache.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a0db2.  v4:= v4.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L1a0db6.  v4:= v4[v6] @kind object;
  #L1a0dba.  call temp:= `source`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #Try_end2.  
  #L1a0dc0.  v1:= temp @kind object;
  #Try_start3.  
  #L1a0dc2.  @monitorexit v2
  #L1a0dc4.  goto L1a0da4;
  #L1a0dc6.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L1a0dc8.  @monitorexit v2
  #Try_end3.  
  #L1a0dca.  goto L1a0da4;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1a0d84;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1a0d84;
  catch `java.io.FileNotFoundException` @[Try_start2..Try_end2] goto L1a0dc6;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1a0d84;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L1a0d84;
}

record `okhttp3.internal.cache.CacheInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.internal.cache.InternalCache` `okhttp3.internal.cache.CacheInterceptor.cache` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor` v0 @kind this, `okhttp3.internal.cache.InternalCache` v1 @kind object @name `cache`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.<init>:(Lokhttp3/internal/cache/InternalCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L216820.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L216826.  v0.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` := v1 @kind object;
  #L21682a.  return @kind void;
}
procedure `okhttp3.Response` `cacheWritingResponse`(`okhttp3.internal.cache.CacheInterceptor` v10 @kind this, `okhttp3.internal.cache.CacheRequest` v11 @kind object @name `cacheRequest`, `okhttp3.Response` v12 @kind object @name `response`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L21683c.  if v11 != 0 then goto L216842;
  #L216840.  return v12 @kind object;
  #L216842.  call temp:= `body`(v11) @signature `Lokhttp3/internal/cache/CacheRequest;.body:()Lokio/Sink;` @kind interface;
  #L216848.  v1:= temp @kind object;
  #L21684a.  if v1 == 0 then goto L216840;
  #L21684e.  call temp:= `body`(v12) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216854.  v7:= temp @kind object;
  #L216856.  call temp:= `source`(v7) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L21685c.  v6:= temp @kind object;
  #L21685e.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L216864.  v0:= temp @kind object;
  #L216866.  v2:= new `okhttp3.internal.cache.CacheInterceptor$1`;
  #L21686a.  call `<init>`(v2, v10, v6, v11, v0) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @kind direct;
  #L216870.  v7:= "Content-Type" @kind object;
  #L216874.  call temp:= `header`(v12, v7) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L21687a.  v3:= temp @kind object;
  #L21687c.  call temp:= `body`(v12) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216882.  v7:= temp @kind object;
  #L216884.  call temp:= `contentLength`(v7) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L21688a.  v4:= temp @kind wide;
  #L21688c.  call temp:= `newBuilder`(v12) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L216892.  v7:= temp @kind object;
  #L216894.  v8:= new `okhttp3.internal.http.RealResponseBody`;
  #L216898.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L21689e.  v9:= temp @kind object;
  #L2168a0.  call `<init>`(v8, v3, v4, v9) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L2168a6.  call temp:= `body`(v7, v8) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2168ac.  v7:= temp @kind object;
  #L2168ae.  call temp:= `build`(v7) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2168b4.  v12:= temp @kind object;
  #L2168b6.  goto L216840;
}
procedure `okhttp3.Headers` `combine`(`okhttp3.Headers` v7 @kind object @name `cachedHeaders`, `okhttp3.Headers` v8 @kind object @name `networkHeaders`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2168c8.  v2:= new `okhttp3.Headers$Builder`;
  #L2168cc.  call `<init>`(v2) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L2168d2.  v1:= 0I;
  #L2168d4.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2168da.  v3:= temp;
  #L2168dc.  if v1 >= v3 then goto L216946;
  #L2168e0.  call temp:= `name`(v7, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2168e6.  v0:= temp @kind object;
  #L2168e8.  call temp:= `value`(v7, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2168ee.  v4:= temp @kind object;
  #L2168f0.  v5:= "Warning" @kind object;
  #L2168f4.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2168fa.  v5:= temp;
  #L2168fc.  if v5 == 0 then goto L216916;
  #L216900.  v5:= "1" @kind object;
  #L216904.  call temp:= `startsWith`(v4, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L21690a.  v5:= temp;
  #L21690c.  if v5 == 0 then goto L216916;
  #L216910.  v1:= v1 + 1;
  #L216914.  goto L2168dc;
  #L216916.  call temp:= `isContentSpecificHeader`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @kind static;
  #L21691c.  v5:= temp;
  #L21691e.  if v5 != 0 then goto L21693a;
  #L216922.  call temp:= `isEndToEnd`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @kind static;
  #L216928.  v5:= temp;
  #L21692a.  if v5 == 0 then goto L21693a;
  #L21692e.  call temp:= `get`(v8, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L216934.  v5:= temp @kind object;
  #L216936.  if v5 != 0 then goto L216910;
  #L21693a.  v5:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L21693e.  call `addLenient`(v5, v2, v0, v4) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L216944.  goto L216910;
  #L216946.  v1:= 0I;
  #L216948.  call temp:= `size`(v8) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L21694e.  v3:= temp;
  #L216950.  if v1 >= v3 then goto L21698c;
  #L216954.  call temp:= `name`(v8, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L21695a.  v0:= temp @kind object;
  #L21695c.  call temp:= `isContentSpecificHeader`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @kind static;
  #L216962.  v5:= temp;
  #L216964.  if v5 != 0 then goto L216986;
  #L216968.  call temp:= `isEndToEnd`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @kind static;
  #L21696e.  v5:= temp;
  #L216970.  if v5 == 0 then goto L216986;
  #L216974.  v5:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L216978.  call temp:= `value`(v8, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L21697e.  v6:= temp @kind object;
  #L216980.  call `addLenient`(v5, v2, v0, v6) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L216986.  v1:= v1 + 1;
  #L21698a.  goto L216950;
  #L21698c.  call temp:= `build`(v2) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L216992.  v5:= temp @kind object;
  #L216994.  return v5 @kind object;
}
procedure `boolean` `isContentSpecificHeader`(`java.lang.String` v1 @kind object @name `fieldName`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isContentSpecificHeader:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2169a8.  v0:= "Content-Length" @kind object;
  #L2169ac.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2169b2.  v0:= temp;
  #L2169b4.  if v0 != 0 then goto L2169d8;
  #L2169b8.  v0:= "Content-Encoding" @kind object;
  #L2169bc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2169c2.  v0:= temp;
  #L2169c4.  if v0 != 0 then goto L2169d8;
  #L2169c8.  v0:= "Content-Type" @kind object;
  #L2169cc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2169d2.  v0:= temp;
  #L2169d4.  if v0 == 0 then goto L2169dc;
  #L2169d8.  v0:= 1I;
  #L2169da.  return v0;
  #L2169dc.  v0:= 0I;
  #L2169de.  goto L2169da;
}
procedure `boolean` `isEndToEnd`(`java.lang.String` v1 @kind object @name `fieldName`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.isEndToEnd:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2169f0.  v0:= "Connection" @kind object;
  #L2169f4.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2169fa.  v0:= temp;
  #L2169fc.  if v0 != 0 then goto L216a74;
  #L216a00.  v0:= "Keep-Alive" @kind object;
  #L216a04.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L216a0a.  v0:= temp;
  #L216a0c.  if v0 != 0 then goto L216a74;
  #L216a10.  v0:= "Proxy-Authenticate" @kind object;
  #L216a14.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L216a1a.  v0:= temp;
  #L216a1c.  if v0 != 0 then goto L216a74;
  #L216a20.  v0:= "Proxy-Authorization" @kind object;
  #L216a24.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L216a2a.  v0:= temp;
  #L216a2c.  if v0 != 0 then goto L216a74;
  #L216a30.  v0:= "TE" @kind object;
  #L216a34.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L216a3a.  v0:= temp;
  #L216a3c.  if v0 != 0 then goto L216a74;
  #L216a40.  v0:= "Trailers" @kind object;
  #L216a44.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L216a4a.  v0:= temp;
  #L216a4c.  if v0 != 0 then goto L216a74;
  #L216a50.  v0:= "Transfer-Encoding" @kind object;
  #L216a54.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L216a5a.  v0:= temp;
  #L216a5c.  if v0 != 0 then goto L216a74;
  #L216a60.  v0:= "Upgrade" @kind object;
  #L216a64.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L216a6a.  v0:= temp;
  #L216a6c.  if v0 != 0 then goto L216a74;
  #L216a70.  v0:= 1I;
  #L216a72.  return v0;
  #L216a74.  v0:= 0I;
  #L216a76.  goto L216a72;
}
procedure `okhttp3.Response` `stripBody`(`okhttp3.Response` v2 @kind object @name `response`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L216a88.  if v2 == 0 then goto L216ab2;
  #L216a8c.  call temp:= `body`(v2) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216a92.  v0:= temp @kind object;
  #L216a94.  if v0 == 0 then goto L216ab2;
  #L216a98.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L216a9e.  v0:= temp @kind object;
  #L216aa0.  v1:= 0I;
  #L216aa2.  call temp:= `body`(v0, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216aa8.  v0:= temp @kind object;
  #L216aaa.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L216ab0.  v2:= temp @kind object;
  #L216ab2.  return v2 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.cache.CacheInterceptor` v12 @kind this, `okhttp3.Interceptor$Chain` v13 @kind object @name `chain`) @signature `Lokhttp3/internal/cache/CacheInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L216ac4.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216ac8.  if v9 == 0 then goto L216baa;
  #L216acc.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216ad0.  call temp:= `request`(v13) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L216ad6.  v10:= temp @kind object;
  #L216ad8.  call temp:= `get`(v9, v10) @signature `Lokhttp3/internal/cache/InternalCache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L216ade.  v0:= temp @kind object;
  #L216ae0.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L216ae6.  v6:= temp @kind wide;
  #L216ae8.  v9:= new `okhttp3.internal.cache.CacheStrategy$Factory`;
  #L216aec.  call temp:= `request`(v13) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L216af2.  v10:= temp @kind object;
  #L216af4.  call `<init>`(v9, v6, v10, v0) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L216afa.  call temp:= `get`(v9) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @kind virtual;
  #L216b00.  v8:= temp @kind object;
  #L216b02.  v3:= v8.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L216b06.  v2:= v8.`okhttp3.internal.cache.CacheStrategy.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L216b0a.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216b0e.  if v9 == 0 then goto L216b1c;
  #L216b12.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216b16.  call `trackResponse`(v9, v8) @signature `Lokhttp3/internal/cache/InternalCache;.trackResponse:(Lokhttp3/internal/cache/CacheStrategy;)V` @kind interface;
  #L216b1c.  if v0 == 0 then goto L216b32;
  #L216b20.  if v2 != 0 then goto L216b32;
  #L216b24.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216b2a.  v9:= temp @kind object;
  #L216b2c.  call `closeQuietly`(v9) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L216b32.  if v3 != 0 then goto L216bae;
  #L216b36.  if v2 != 0 then goto L216bae;
  #L216b3a.  v9:= new `okhttp3.Response$Builder`;
  #L216b3e.  call `<init>`(v9) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L216b44.  call temp:= `request`(v13) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L216b4a.  v10:= temp @kind object;
  #L216b4c.  call temp:= `request`(v9, v10) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216b52.  v9:= temp @kind object;
  #L216b54.  v10:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L216b58.  call temp:= `protocol`(v9, v10) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216b5e.  v9:= temp @kind object;
  #L216b60.  v10:= 504I;
  #L216b64.  call temp:= `code`(v9, v10) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L216b6a.  v9:= temp @kind object;
  #L216b6c.  v10:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L216b70.  call temp:= `message`(v9, v10) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216b76.  v9:= temp @kind object;
  #L216b78.  v10:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L216b7c.  call temp:= `body`(v9, v10) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216b82.  v9:= temp @kind object;
  #L216b84.  v10:= -1L;
  #L216b88.  call temp:= `sentRequestAtMillis`(v9, v10) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L216b8e.  v9:= temp @kind object;
  #L216b90.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L216b96.  v10:= temp @kind wide;
  #L216b98.  call temp:= `receivedResponseAtMillis`(v9, v10) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L216b9e.  v9:= temp @kind object;
  #L216ba0.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L216ba6.  v5:= temp @kind object;
  #L216ba8.  return v5 @kind object;
  #L216baa.  v0:= 0I;
  #L216bac.  goto L216ae0;
  #L216bae.  if v3 != 0 then goto L216bd4;
  #L216bb2.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L216bb8.  v9:= temp @kind object;
  #L216bba.  call temp:= `stripBody`(v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L216bc0.  v10:= temp @kind object;
  #L216bc2.  call temp:= `cacheResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216bc8.  v9:= temp @kind object;
  #L216bca.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L216bd0.  v5:= temp @kind object;
  #L216bd2.  goto L216ba8;
  #L216bd4.  v4:= 0I;
  #Try_start0.  
  #L216bd6.  call temp:= `proceed`(v13, v3) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #Try_end0.  
  #L216bdc.  v4:= temp @kind object;
  #L216bde.  if v4 != 0 then goto L216bf4;
  #L216be2.  if v0 == 0 then goto L216bf4;
  #L216be6.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216bec.  v9:= temp @kind object;
  #L216bee.  call `closeQuietly`(v9) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L216bf4.  if v2 == 0 then goto L216cc4;
  #L216bf8.  call temp:= `code`(v4) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L216bfe.  v9:= temp;
  #L216c00.  v10:= 304I;
  #L216c04.  if v9 != v10 then goto L216cb6;
  #L216c08.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L216c0e.  v9:= temp @kind object;
  #L216c10.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L216c16.  v10:= temp @kind object;
  #L216c18.  call temp:= `headers`(v4) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L216c1e.  v11:= temp @kind object;
  #L216c20.  call temp:= `combine`(v10, v11) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind static;
  #L216c26.  v10:= temp @kind object;
  #L216c28.  call temp:= `headers`(v9, v10) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216c2e.  v9:= temp @kind object;
  #L216c30.  call temp:= `sentRequestAtMillis`(v4) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L216c36.  v10:= temp @kind wide;
  #L216c38.  call temp:= `sentRequestAtMillis`(v9, v10) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L216c3e.  v9:= temp @kind object;
  #L216c40.  call temp:= `receivedResponseAtMillis`(v4) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L216c46.  v10:= temp @kind wide;
  #L216c48.  call temp:= `receivedResponseAtMillis`(v9, v10) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L216c4e.  v9:= temp @kind object;
  #L216c50.  call temp:= `stripBody`(v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L216c56.  v10:= temp @kind object;
  #L216c58.  call temp:= `cacheResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216c5e.  v9:= temp @kind object;
  #L216c60.  call temp:= `stripBody`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L216c66.  v10:= temp @kind object;
  #L216c68.  call temp:= `networkResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216c6e.  v9:= temp @kind object;
  #L216c70.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L216c76.  v5:= temp @kind object;
  #L216c78.  call temp:= `body`(v4) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216c7e.  v9:= temp @kind object;
  #L216c80.  call `close`(v9) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L216c86.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216c8a.  call `trackConditionalCacheHit`(v9) @signature `Lokhttp3/internal/cache/InternalCache;.trackConditionalCacheHit:()V` @kind interface;
  #L216c90.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216c94.  call `update`(v9, v2, v5) @signature `Lokhttp3/internal/cache/InternalCache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @kind interface;
  #L216c9a.  goto L216ba8;
  #L216c9c.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L216c9e.  if v4 != 0 then goto L216cb4;
  #L216ca2.  if v0 == 0 then goto L216cb4;
  #L216ca6.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216cac.  v10:= temp @kind object;
  #L216cae.  call `closeQuietly`(v10) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L216cb4.  throw v9;
  #L216cb6.  call temp:= `body`(v2) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L216cbc.  v9:= temp @kind object;
  #L216cbe.  call `closeQuietly`(v9) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L216cc4.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L216cca.  v9:= temp @kind object;
  #L216ccc.  call temp:= `stripBody`(v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L216cd2.  v10:= temp @kind object;
  #L216cd4.  call temp:= `cacheResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216cda.  v9:= temp @kind object;
  #L216cdc.  call temp:= `stripBody`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L216ce2.  v10:= temp @kind object;
  #L216ce4.  call temp:= `networkResponse`(v9, v10) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L216cea.  v9:= temp @kind object;
  #L216cec.  call temp:= `build`(v9) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L216cf2.  v5:= temp @kind object;
  #L216cf4.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216cf8.  if v9 == 0 then goto L216ba8;
  #L216cfc.  call temp:= `hasBody`(v5) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L216d02.  v9:= temp;
  #L216d04.  if v9 == 0 then goto L216d2c;
  #L216d08.  call temp:= `isCacheable`(v5, v3) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L216d0e.  v9:= temp;
  #L216d10.  if v9 == 0 then goto L216d2c;
  #L216d14.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216d18.  call temp:= `put`(v9, v5) @signature `Lokhttp3/internal/cache/InternalCache;.put:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @kind interface;
  #L216d1e.  v1:= temp @kind object;
  #L216d20.  call temp:= `cacheWritingResponse`(v12, v1, v5) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @kind direct;
  #L216d26.  v5:= temp @kind object;
  #L216d28.  goto L216ba8;
  #L216d2c.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L216d32.  v9:= temp @kind object;
  #L216d34.  call temp:= `invalidatesCache`(v9) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind static;
  #L216d3a.  v9:= temp;
  #L216d3c.  if v9 == 0 then goto L216ba8;
  #Try_start1.  
  #L216d40.  v9:= v12.`okhttp3.internal.cache.CacheInterceptor.cache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L216d44.  call `remove`(v9, v3) @signature `Lokhttp3/internal/cache/InternalCache;.remove:(Lokhttp3/Request;)V` @kind interface;
  #Try_end1.  
  #L216d4a.  goto L216ba8;
  #L216d4e.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L216d50.  goto L216ba8;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L216c9c;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L216d4e;
}

record `okhttp3.internal.cache.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC {
  `int` `okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.etag` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.expires` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy$Factory.request` @AccessFlag FINAL;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy$Factory` v9 @kind this, `long` v10 @name `nowMillis`, `okhttp3.Request` v12 @kind object @name `request`, `okhttp3.Response` v13 @kind object @name `cacheResponse`) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a0034.  v8:= -1I;
  #L1a0036.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a003c.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v8;
  #L1a0040.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` := v10 @kind wide;
  #L1a0044.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` := v12 @kind object;
  #L1a0048.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` := v13 @kind object;
  #L1a004c.  if v13 == 0 then goto L1a0128;
  #L1a0050.  call temp:= `sentRequestAtMillis`(v13) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L1a0056.  v6:= temp @kind wide;
  #L1a0058.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` := v6 @kind wide;
  #L1a005c.  call temp:= `receivedResponseAtMillis`(v13) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L1a0062.  v6:= temp @kind wide;
  #L1a0064.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` := v6 @kind wide;
  #L1a0068.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a006e.  v1:= temp @kind object;
  #L1a0070.  v2:= 0I;
  #L1a0072.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1a0078.  v3:= temp;
  #L1a007a.  if v2 >= v3 then goto L1a0128;
  #L1a007e.  call temp:= `name`(v1, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1a0084.  v0:= temp @kind object;
  #L1a0086.  call temp:= `value`(v1, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1a008c.  v4:= temp @kind object;
  #L1a008e.  v5:= "Date" @kind object;
  #L1a0092.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a0098.  v5:= temp;
  #L1a009a.  if v5 == 0 then goto L1a00b4;
  #L1a009e.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a00a4.  v5:= temp @kind object;
  #L1a00a6.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` := v5 @kind object;
  #L1a00aa.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` := v4 @kind object;
  #L1a00ae.  v2:= v2 + 1;
  #L1a00b2.  goto L1a007a;
  #L1a00b4.  v5:= "Expires" @kind object;
  #L1a00b8.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a00be.  v5:= temp;
  #L1a00c0.  if v5 == 0 then goto L1a00d2;
  #L1a00c4.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a00ca.  v5:= temp @kind object;
  #L1a00cc.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` := v5 @kind object;
  #L1a00d0.  goto L1a00ae;
  #L1a00d2.  v5:= "Last-Modified" @kind object;
  #L1a00d6.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a00dc.  v5:= temp;
  #L1a00de.  if v5 == 0 then goto L1a00f4;
  #L1a00e2.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a00e8.  v5:= temp @kind object;
  #L1a00ea.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` := v5 @kind object;
  #L1a00ee.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` := v4 @kind object;
  #L1a00f2.  goto L1a00ae;
  #L1a00f4.  v5:= "ETag" @kind object;
  #L1a00f8.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a00fe.  v5:= temp;
  #L1a0100.  if v5 == 0 then goto L1a010a;
  #L1a0104.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` := v4 @kind object;
  #L1a0108.  goto L1a00ae;
  #L1a010a.  v5:= "Age" @kind object;
  #L1a010e.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1a0114.  v5:= temp;
  #L1a0116.  if v5 == 0 then goto L1a00ae;
  #L1a011a.  call temp:= `parseSeconds`(v4, v8) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L1a0120.  v5:= temp;
  #L1a0122.  v9.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int` := v5;
  #L1a0126.  goto L1a00ae;
  #L1a0128.  return @kind void;
}
procedure `long` `cacheResponseAge`(`okhttp3.internal.cache.CacheStrategy$Factory` v12 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1a013c.  v0:= 0L;
  #L1a0140.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a0144.  if v8 == 0 then goto L1a0162;
  #L1a0148.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L1a014c.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a0150.  call temp:= `getTime`(v10) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a0156.  v10:= temp @kind wide;
  #L1a0158.  v8:= v8 - v10 @kind long;
  #L1a015a.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1a0160.  v0:= temp @kind wide;
  #L1a0162.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L1a0166.  v9:= -1I;
  #L1a0168.  if v8 == v9 then goto L1a01a6;
  #L1a016c.  v8:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a0170.  v9:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L1a0174.  v10:= (`long`) v9 @kind i2l;
  #L1a0176.  call temp:= `toMillis`(v8, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a017c.  v8:= temp @kind wide;
  #L1a017e.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1a0184.  v2:= temp @kind wide;
  #L1a0186.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L1a018a.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L1a018e.  v6:= v8 - v10 @kind long;
  #L1a0192.  v8:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.nowMillis` @type ^`long` @kind wide;
  #L1a0196.  v10:= v12.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L1a019a.  v4:= v8 - v10 @kind long;
  #L1a019e.  v8:= v2 + v6 @kind long;
  #L1a01a2.  v8:= v8 + v4 @kind long;
  #L1a01a4.  return v8 @kind wide;
  #L1a01a6.  v2:= v0 @kind wide;
  #L1a01a8.  goto L1a0186;
}
procedure `long` `computeFreshnessLifetime`(`okhttp3.internal.cache.CacheStrategy$Factory` v10 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1a01bc.  v6:= 0L;
  #L1a01c0.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a01c4.  call temp:= `cacheControl`(v3) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a01ca.  v2:= temp @kind object;
  #L1a01cc.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a01d2.  v3:= temp;
  #L1a01d4.  v8:= -1I;
  #L1a01d6.  if v3 == v8 then goto L1a01f2;
  #L1a01da.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a01de.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a01e4.  v6:= temp;
  #L1a01e6.  v6:= (`long`) v6 @kind i2l;
  #L1a01e8.  call temp:= `toMillis`(v3, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a01ee.  v6:= temp @kind wide;
  #L1a01f0.  return v6 @kind wide;
  #L1a01f2.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L1a01f6.  if v3 == 0 then goto L1a0234;
  #L1a01fa.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a01fe.  if v3 == 0 then goto L1a022a;
  #L1a0202.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a0206.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a020c.  v4:= temp @kind wide;
  #L1a020e.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L1a0212.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a0218.  v8:= temp @kind wide;
  #L1a021a.  v0:= v8 - v4 @kind long;
  #L1a021e.  v3:= lcmp(v0, v6);
  #L1a0222.  if v3 <= 0 then goto L1a0230;
  #L1a0226.  v6:= v0 @kind wide;
  #L1a0228.  goto L1a01f0;
  #L1a022a.  v4:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L1a022e.  goto L1a020e;
  #L1a0230.  v0:= v6 @kind wide;
  #L1a0232.  goto L1a0226;
  #L1a0234.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L1a0238.  if v3 == 0 then goto L1a01f0;
  #L1a023c.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0240.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1a0246.  v3:= temp @kind object;
  #L1a0248.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a024e.  v3:= temp @kind object;
  #L1a0250.  call temp:= `query`(v3) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L1a0256.  v3:= temp @kind object;
  #L1a0258.  if v3 != 0 then goto L1a01f0;
  #L1a025c.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a0260.  if v3 == 0 then goto L1a0292;
  #L1a0264.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a0268.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a026e.  v4:= temp @kind wide;
  #L1a0270.  v3:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L1a0274.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a027a.  v8:= temp @kind wide;
  #L1a027c.  v0:= v4 - v8 @kind long;
  #L1a0280.  v3:= lcmp(v0, v6);
  #L1a0284.  if v3 <= 0 then goto L1a01f0;
  #L1a0288.  v6:= 10L;
  #L1a028c.  v6:= v0 / v6 @kind long;
  #L1a0290.  goto L1a01f0;
  #L1a0292.  v4:= v10.`okhttp3.internal.cache.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L1a0296.  goto L1a0270;
}
procedure `okhttp3.internal.cache.CacheStrategy` `getCandidate`(`okhttp3.internal.cache.CacheStrategy$Factory` v24 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L1a02a8.  v0:= v24 @kind object;
  #L1a02ac.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a02b0.  v19:= v0 @kind object;
  #L1a02b4.  if v19 != 0 then goto L1a02d4;
  #L1a02b8.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a02bc.  v0:= v24 @kind object;
  #L1a02c0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a02c4.  v20:= v0 @kind object;
  #L1a02c8.  v21:= 0I;
  #L1a02cc.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a02d2.  return v19 @kind object;
  #L1a02d4.  v0:= v24 @kind object;
  #L1a02d8.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a02dc.  v19:= v0 @kind object;
  #L1a02e0.  call temp:= `isHttps`(v19) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L1a02e6.  v19:= temp;
  #L1a02e8.  if v19 == 0 then goto L1a0320;
  #L1a02ec.  v0:= v24 @kind object;
  #L1a02f0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a02f4.  v19:= v0 @kind object;
  #L1a02f8.  call temp:= `handshake`(v19) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L1a02fe.  v19:= temp @kind object;
  #L1a0300.  if v19 != 0 then goto L1a0320;
  #L1a0304.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0308.  v0:= v24 @kind object;
  #L1a030c.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0310.  v20:= v0 @kind object;
  #L1a0314.  v21:= 0I;
  #L1a0318.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a031e.  goto L1a02d2;
  #L1a0320.  v0:= v24 @kind object;
  #L1a0324.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a0328.  v19:= v0 @kind object;
  #L1a032c.  v0:= v24 @kind object;
  #L1a0330.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0334.  v20:= v0 @kind object;
  #L1a0338.  call temp:= `isCacheable`(v19, v20) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L1a033e.  v19:= temp;
  #L1a0340.  if v19 != 0 then goto L1a0360;
  #L1a0344.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0348.  v0:= v24 @kind object;
  #L1a034c.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0350.  v20:= v0 @kind object;
  #L1a0354.  v21:= 0I;
  #L1a0358.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a035e.  goto L1a02d2;
  #L1a0360.  v0:= v24 @kind object;
  #L1a0364.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0368.  v19:= v0 @kind object;
  #L1a036c.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a0372.  v9:= temp @kind object;
  #L1a0374.  call temp:= `noCache`(v9) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L1a037a.  v19:= temp;
  #L1a037c.  if v19 != 0 then goto L1a0398;
  #L1a0380.  v0:= v24 @kind object;
  #L1a0384.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0388.  v19:= v0 @kind object;
  #L1a038c.  call temp:= `hasConditions`(v19) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @kind static;
  #L1a0392.  v19:= temp;
  #L1a0394.  if v19 == 0 then goto L1a03b4;
  #L1a0398.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a039c.  v0:= v24 @kind object;
  #L1a03a0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a03a4.  v20:= v0 @kind object;
  #L1a03a8.  v21:= 0I;
  #L1a03ac.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a03b2.  goto L1a02d2;
  #L1a03b4.  v0:= v24 @kind object;
  #L1a03b8.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a03bc.  v19:= v0 @kind object;
  #L1a03c0.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a03c6.  v18:= temp @kind object;
  #L1a03c8.  call temp:= `immutable`(v18) @signature `Lokhttp3/CacheControl;.immutable:()Z` @kind virtual;
  #L1a03ce.  v19:= temp;
  #L1a03d0.  if v19 == 0 then goto L1a03f2;
  #L1a03d4.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a03d8.  v20:= 0I;
  #L1a03dc.  v0:= v24 @kind object;
  #L1a03e0.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a03e4.  v21:= v0 @kind object;
  #L1a03e8.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a03ee.  goto L1a02d2;
  #L1a03f2.  call temp:= `cacheResponseAge`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.cacheResponseAge:()J` @kind direct;
  #L1a03f8.  v2:= temp @kind wide;
  #L1a03fa.  call temp:= `computeFreshnessLifetime`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @kind direct;
  #L1a0400.  v10:= temp @kind wide;
  #L1a0402.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a0408.  v19:= temp;
  #L1a040a.  v20:= -1I;
  #L1a040e.  v0:= v19;
  #L1a0412.  v1:= v20;
  #L1a0416.  if v0 == v1 then goto L1a0444;
  #L1a041a.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a041e.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a0424.  v20:= temp;
  #L1a0426.  v0:= v20;
  #L1a042a.  v0:= (`long`) v0 @kind i2l;
  #L1a042c.  v20:= v0 @kind wide;
  #L1a0430.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a0436.  v20:= temp @kind wide;
  #L1a0438.  v0:= v20 @kind wide;
  #L1a043c.  call temp:= `min`(v10, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1a0442.  v10:= temp @kind wide;
  #L1a0444.  v14:= 0L;
  #L1a0448.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L1a044e.  v19:= temp;
  #L1a0450.  v20:= -1I;
  #L1a0454.  v0:= v19;
  #L1a0458.  v1:= v20;
  #L1a045c.  if v0 == v1 then goto L1a047e;
  #L1a0460.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a0464.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L1a046a.  v20:= temp;
  #L1a046c.  v0:= v20;
  #L1a0470.  v0:= (`long`) v0 @kind i2l;
  #L1a0472.  v20:= v0 @kind wide;
  #L1a0476.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a047c.  v14:= temp @kind wide;
  #L1a047e.  v12:= 0L;
  #L1a0482.  call temp:= `mustRevalidate`(v18) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L1a0488.  v19:= temp;
  #L1a048a.  if v19 != 0 then goto L1a04c4;
  #L1a048e.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L1a0494.  v19:= temp;
  #L1a0496.  v20:= -1I;
  #L1a049a.  v0:= v19;
  #L1a049e.  v1:= v20;
  #L1a04a2.  if v0 == v1 then goto L1a04c4;
  #L1a04a6.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a04aa.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L1a04b0.  v20:= temp;
  #L1a04b2.  v0:= v20;
  #L1a04b6.  v0:= (`long`) v0 @kind i2l;
  #L1a04b8.  v20:= v0 @kind wide;
  #L1a04bc.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a04c2.  v12:= temp @kind wide;
  #L1a04c4.  call temp:= `noCache`(v18) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L1a04ca.  v19:= temp;
  #L1a04cc.  if v19 != 0 then goto L1a0560;
  #L1a04d0.  v20:= v2 + v14 @kind long;
  #L1a04d4.  v22:= v10 + v12 @kind long;
  #L1a04d8.  v19:= lcmp(v20, v22);
  #L1a04dc.  if v19 >= 0 then goto L1a0560;
  #L1a04e0.  v0:= v24 @kind object;
  #L1a04e4.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a04e8.  v19:= v0 @kind object;
  #L1a04ec.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1a04f2.  v4:= temp @kind object;
  #L1a04f4.  v20:= v2 + v14 @kind long;
  #L1a04f8.  v19:= lcmp(v20, v10);
  #L1a04fc.  if v19 < 0 then goto L1a0516;
  #L1a0500.  v19:= "Warning" @kind object;
  #L1a0504.  v20:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L1a0508.  v0:= v19 @kind object;
  #L1a050c.  v1:= v20 @kind object;
  #L1a0510.  call temp:= `addHeader`(v4, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1a0516.  v16:= 86400000L;
  #L1a051c.  v19:= lcmp(v2, v16);
  #L1a0520.  if v19 <= 0 then goto L1a0546;
  #L1a0524.  call temp:= `isFreshnessLifetimeHeuristic`(v24) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @kind direct;
  #L1a052a.  v19:= temp;
  #L1a052c.  if v19 == 0 then goto L1a0546;
  #L1a0530.  v19:= "Warning" @kind object;
  #L1a0534.  v20:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L1a0538.  v0:= v19 @kind object;
  #L1a053c.  v1:= v20 @kind object;
  #L1a0540.  call temp:= `addHeader`(v4, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1a0546.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a054a.  v20:= 0I;
  #L1a054e.  call temp:= `build`(v4) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1a0554.  v21:= temp @kind object;
  #L1a0556.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a055c.  goto L1a02d2;
  #L1a0560.  v0:= v24 @kind object;
  #L1a0564.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L1a0568.  v19:= v0 @kind object;
  #L1a056c.  if v19 == 0 then goto L1a05f4;
  #L1a0570.  v5:= "If-None-Match" @kind object;
  #L1a0574.  v0:= v24 @kind object;
  #L1a0578.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L1a057c.  v0:= v24 @kind object;
  #L1a0580.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a0584.  v19:= v0 @kind object;
  #L1a0588.  call temp:= `headers`(v19) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a058e.  v19:= temp @kind object;
  #L1a0590.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a0596.  v8:= temp @kind object;
  #L1a0598.  v19:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L1a059c.  v0:= v19 @kind object;
  #L1a05a0.  call `addLenient`(v0, v8, v5, v6) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1a05a6.  v0:= v24 @kind object;
  #L1a05aa.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a05ae.  v19:= v0 @kind object;
  #L1a05b2.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L1a05b8.  v19:= temp @kind object;
  #L1a05ba.  call temp:= `build`(v8) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1a05c0.  v20:= temp @kind object;
  #L1a05c2.  call temp:= `headers`(v19, v20) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a05c8.  v19:= temp @kind object;
  #L1a05ca.  call temp:= `build`(v19) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1a05d0.  v7:= temp @kind object;
  #L1a05d2.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a05d6.  v0:= v24 @kind object;
  #L1a05da.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a05de.  v20:= v0 @kind object;
  #L1a05e2.  v0:= v19 @kind object;
  #L1a05e6.  v1:= v20 @kind object;
  #L1a05ea.  call `<init>`(v0, v7, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a05f0.  goto L1a02d2;
  #L1a05f4.  v0:= v24 @kind object;
  #L1a05f8.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L1a05fc.  v19:= v0 @kind object;
  #L1a0600.  if v19 == 0 then goto L1a0612;
  #L1a0604.  v5:= "If-Modified-Since" @kind object;
  #L1a0608.  v0:= v24 @kind object;
  #L1a060c.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` @kind object;
  #L1a0610.  goto L1a057c;
  #L1a0612.  v0:= v24 @kind object;
  #L1a0616.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L1a061a.  v19:= v0 @kind object;
  #L1a061e.  if v19 == 0 then goto L1a0630;
  #L1a0622.  v5:= "If-Modified-Since" @kind object;
  #L1a0626.  v0:= v24 @kind object;
  #L1a062a.  v6:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` @kind object;
  #L1a062e.  goto L1a057c;
  #L1a0630.  v19:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0634.  v0:= v24 @kind object;
  #L1a0638.  v0:= v0.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a063c.  v20:= v0 @kind object;
  #L1a0640.  v21:= 0I;
  #L1a0644.  call `<init>`(v19, v20, v21) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a064a.  goto L1a02d2;
}
procedure `boolean` `hasConditions`(`okhttp3.Request` v1 @kind object @name `request`) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1a0660.  v0:= "If-Modified-Since" @kind object;
  #L1a0664.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a066a.  v0:= temp @kind object;
  #L1a066c.  if v0 != 0 then goto L1a0680;
  #L1a0670.  v0:= "If-None-Match" @kind object;
  #L1a0674.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a067a.  v0:= temp @kind object;
  #L1a067c.  if v0 == 0 then goto L1a0684;
  #L1a0680.  v0:= 1I;
  #L1a0682.  return v0;
  #L1a0684.  v0:= 0I;
  #L1a0686.  goto L1a0682;
}
procedure `boolean` `isFreshnessLifetimeHeuristic`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1a0698.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L1a069c.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a06a2.  v0:= temp @kind object;
  #L1a06a4.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a06aa.  v0:= temp;
  #L1a06ac.  v1:= -1I;
  #L1a06ae.  if v0 != v1 then goto L1a06be;
  #L1a06b2.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L1a06b6.  if v0 != 0 then goto L1a06be;
  #L1a06ba.  v0:= 1I;
  #L1a06bc.  return v0;
  #L1a06be.  v0:= 0I;
  #L1a06c0.  goto L1a06bc;
}
procedure `okhttp3.internal.cache.CacheStrategy` `get`(`okhttp3.internal.cache.CacheStrategy$Factory` v3 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a06d4.  v2:= 0I;
  #L1a06d6.  call temp:= `getCandidate`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/cache/CacheStrategy;` @kind direct;
  #L1a06dc.  v0:= temp @kind object;
  #L1a06de.  v1:= v0.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L1a06e2.  if v1 == 0 then goto L1a0708;
  #L1a06e6.  v1:= v3.`okhttp3.internal.cache.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L1a06ea.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a06f0.  v1:= temp @kind object;
  #L1a06f2.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L1a06f8.  v1:= temp;
  #L1a06fa.  if v1 == 0 then goto L1a0708;
  #L1a06fe.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a0702.  call `<init>`(v0, v2, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a0708.  return v0 @kind object;
}

record `okhttp3.internal.cache.DiskLruCache$Entry` @kind class @AccessFlag FINAL {
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.internal.cache.DiskLruCache$Entry.currentEditor` @AccessFlag ;
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.cache.DiskLruCache$Entry.key` @AccessFlag FINAL;
  `long`[] `okhttp3.internal.cache.DiskLruCache$Entry.lengths` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.cache.DiskLruCache$Entry.readable` @AccessFlag ;
  `long` `okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Entry.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache` v8 @kind object, `java.lang.String` v9 @kind object @name `key`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a0e04.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` := v8 @kind object;
  #L1a0e08.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a0e0e.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` := v9 @kind object;
  #L1a0e12.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0e16.  v3:= new `long`[v3];
  #L1a0e1a.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] := v3 @kind object;
  #L1a0e1e.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0e22.  v3:= new `java.io.File`[v3];
  #L1a0e26.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] := v3 @kind object;
  #L1a0e2a.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0e2e.  v3:= new `java.io.File`[v3];
  #L1a0e32.  v7.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] := v3 @kind object;
  #L1a0e36.  v3:= new `java.lang.StringBuilder`;
  #L1a0e3a.  call `<init>`(v3, v9) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a0e40.  v4:= 46I;
  #L1a0e44.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0e4a.  v0:= temp @kind object;
  #L1a0e4c.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L1a0e52.  v2:= temp;
  #L1a0e54.  v1:= 0I;
  #L1a0e56.  v3:= v8.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0e5a.  if v1 >= v3 then goto L1a0eb6;
  #L1a0e5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0e64.  v3:= v7.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L1a0e68.  v4:= new `java.io.File`;
  #L1a0e6c.  v5:= v8.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L1a0e70.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0e76.  v6:= temp @kind object;
  #L1a0e78.  call `<init>`(v4, v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L1a0e7e.  v3[v1]:= v4 @kind object;
  #L1a0e82.  v3:= ".tmp" @kind object;
  #L1a0e86.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0e8c.  v3:= v7.`okhttp3.internal.cache.DiskLruCache$Entry.dirtyFiles` @type ^`java.io.File`[] @kind object;
  #L1a0e90.  v4:= new `java.io.File`;
  #L1a0e94.  v5:= v8.`okhttp3.internal.cache.DiskLruCache.directory` @type ^`java.io.File` @kind object;
  #L1a0e98.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0e9e.  v6:= temp @kind object;
  #L1a0ea0.  call `<init>`(v4, v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L1a0ea6.  v3[v1]:= v4 @kind object;
  #L1a0eaa.  call `setLength`(v0, v2) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L1a0eb0.  v1:= v1 + 1;
  #L1a0eb4.  goto L1a0e56;
  #L1a0eb6.  return @kind void;
}
procedure `java.io.IOException` `invalidLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind this, `java.lang.String`[] v4 @kind object @name `strings`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1a0ec8.  v0:= new `java.io.IOException`;
  #L1a0ecc.  v1:= new `java.lang.StringBuilder`;
  #L1a0ed0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a0ed6.  v2:= "unexpected journal line: " @kind object;
  #L1a0eda.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0ee0.  v1:= temp @kind object;
  #L1a0ee2.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a0ee8.  v2:= temp @kind object;
  #L1a0eea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0ef0.  v1:= temp @kind object;
  #L1a0ef2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0ef8.  v1:= temp @kind object;
  #L1a0efa.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a0f00.  throw v0;
}
procedure `void` `setLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `java.lang.String`[] v7 @kind object @name `strings`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.setLengths:([Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a0f14.  v2:= length @variable v7;
  #L1a0f16.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0f1a.  v3:= v3.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0f1e.  if v2 == v3 then goto L1a0f2c;
  #L1a0f22.  call temp:= `invalidLengths`(v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L1a0f28.  v2:= temp @kind object;
  #L1a0f2a.  throw v2;
  #L1a0f2c.  v1:= 0I;
  #Try_start0.  
  #L1a0f2e.  v2:= length @variable v7;
  #L1a0f30.  if v1 >= v2 then goto L1a0f5a;
  #L1a0f34.  v2:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L1a0f38.  v3:= v7[v1] @kind object;
  #L1a0f3c.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1a0f42.  v4:= temp @kind wide;
  #L1a0f44.  v2[v1]:= v4 @kind wide;
  #Try_end0.  
  #L1a0f48.  v1:= v1 + 1;
  #L1a0f4c.  goto L1a0f2e;
  #L1a0f4e.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L1a0f50.  call temp:= `invalidLengths`(v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L1a0f56.  v2:= temp @kind object;
  #L1a0f58.  throw v2;
  #L1a0f5a.  return @kind void;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L1a0f4e;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `snapshot`(`okhttp3.internal.cache.DiskLruCache$Entry` v9 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a0f7c.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0f80.  call temp:= `holdsLock`(v1) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1a0f86.  v1:= temp;
  #L1a0f88.  if v1 != 0 then goto L1a0f98;
  #L1a0f8c.  v1:= new `java.lang.AssertionError`;
  #L1a0f90.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1a0f96.  throw v1;
  #L1a0f98.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0f9c.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0fa0.  v6:= new `okio.Source`[v1];
  #L1a0fa4.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L1a0fa8.  call temp:= `clone`(v1) @signature `[J.clone:()Ljava/lang/Object;` @kind virtual;
  #L1a0fae.  v7:= temp @kind object;
  #L1a0fb0.  v7:= (`long`[]) v7 @kind object;
  #L1a0fb4.  v8:= 0I;
  #Try_start0.  
  #L1a0fb6.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0fba.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a0fbe.  if v8 >= v1 then goto L1a0fe4;
  #L1a0fc2.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0fc6.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.fileSystem` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L1a0fca.  v2:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.cleanFiles` @type ^`java.io.File`[] @kind object;
  #L1a0fce.  v2:= v2[v8] @kind object;
  #L1a0fd2.  call temp:= `source`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L1a0fd8.  v1:= temp @kind object;
  #L1a0fda.  v6[v8]:= v1 @kind object;
  #L1a0fde.  v8:= v8 + 1;
  #L1a0fe2.  goto L1a0fb6;
  #L1a0fe4.  v1:= new `okhttp3.internal.cache.DiskLruCache$Snapshot`;
  #L1a0fe8.  v2:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a0fec.  v3:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.key` @type ^`java.lang.String` @kind object;
  #L1a0ff0.  v4:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.sequenceNumber` @type ^`long` @kind wide;
  #L1a0ff4.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;J[Lokio/Source;[J)V` @kind direct;
  #Try_end0.  
  #L1a0ffa.  return v1 @kind object;
  #L1a0ffc.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L1a0ffe.  v8:= 0I;
  #L1a1000.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a1004.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.valueCount` @type ^`int`;
  #L1a1008.  if v8 >= v1 then goto L1a1024;
  #L1a100c.  v1:= v6[v8] @kind object;
  #L1a1010.  if v1 == 0 then goto L1a1024;
  #L1a1014.  v1:= v6[v8] @kind object;
  #L1a1018.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1a101e.  v8:= v8 + 1;
  #L1a1022.  goto L1a1000;
  #Try_start1.  
  #L1a1024.  v1:= v9.`okhttp3.internal.cache.DiskLruCache$Entry.this$0` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a1028.  call temp:= `removeEntry`(v1, v9) @signature `Lokhttp3/internal/cache/DiskLruCache;.removeEntry:(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z` @kind virtual;
  #Try_end1.  
  #L1a102e.  v1:= 0I;
  #L1a1030.  goto L1a0ffa;
  #L1a1032.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1a1034.  goto L1a102e;
  catch `java.io.FileNotFoundException` @[Try_start0..Try_end0] goto L1a0ffc;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L1a1032;
}
procedure `void` `writeLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `okio.BufferedSink` v7 @kind object @name `writer`) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.writeLengths:(Lokio/BufferedSink;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a1064.  v3:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.lengths` @type ^`long`[] @kind object;
  #L1a1068.  v4:= length @variable v3;
  #L1a106a.  v2:= 0I;
  #L1a106c.  if v2 >= v4 then goto L1a108c;
  #L1a1070.  v0:= v3[v2] @kind wide;
  #L1a1074.  v5:= 32I;
  #L1a1078.  call temp:= `writeByte`(v7, v5) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1a107e.  v5:= temp @kind object;
  #L1a1080.  call temp:= `writeDecimalLong`(v5, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1a1086.  v2:= v2 + 1;
  #L1a108a.  goto L1a106c;
  #L1a108c.  return @kind void;
}

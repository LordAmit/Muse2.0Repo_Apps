record `okhttp3.internal.cache.CacheInterceptor$1` @kind class @AccessFlag  extends `okio.Source` @kind interface {
  `boolean` `okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @AccessFlag ;
  `okhttp3.internal.cache.CacheInterceptor` `okhttp3.internal.cache.CacheInterceptor$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.BufferedSink` `okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.cache.CacheRequest` `okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @AccessFlag FINAL_SYNTHETIC;
  `okio.BufferedSource` `okhttp3.internal.cache.CacheInterceptor$1.val$source` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor$1` v0 @kind this, `okhttp3.internal.cache.CacheInterceptor` v1 @kind object @name `this$0`, `okio.BufferedSource` v2 @kind object, `okhttp3.internal.cache.CacheRequest` v3 @kind object, `okio.BufferedSink` v4 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2166f8.  v0.`okhttp3.internal.cache.CacheInterceptor$1.this$0` @type ^`okhttp3.internal.cache.CacheInterceptor` := v1 @kind object;
  #L2166fc.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` := v2 @kind object;
  #L216700.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` := v3 @kind object;
  #L216704.  v0.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` := v4 @kind object;
  #L216708.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21670e.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.CacheInterceptor$1` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L216720.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L216724.  if v0 != 0 then goto L21674c;
  #L216728.  v0:= 100I;
  #L21672c.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L216730.  call temp:= `discard`(v2, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L216736.  v0:= temp;
  #L216738.  if v0 != 0 then goto L21674c;
  #L21673c.  v0:= 1I;
  #L21673e.  v2.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v0 @kind boolean;
  #L216742.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` @kind object;
  #L216746.  call `abort`(v0) @signature `Lokhttp3/internal/cache/CacheRequest;.abort:()V` @kind interface;
  #L21674c.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L216750.  call `close`(v0) @signature `Lokio/BufferedSource;.close:()V` @kind interface;
  #L216756.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.cache.CacheInterceptor$1` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L216768.  v0:= -1L;
  #L21676c.  v3:= 1I;
  #Try_start0.  
  #L21676e.  v2:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L216772.  call temp:= `read`(v2, v9, v10) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #Try_end0.  
  #L216778.  v4:= temp @kind wide;
  #L21677a.  v2:= lcmp(v4, v0);
  #L21677e.  if v2 != 0 then goto L2167b6;
  #L216782.  v2:= v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L216786.  if v2 != 0 then goto L216798;
  #L21678a.  v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v3 @kind boolean;
  #L21678e.  v2:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L216792.  call `close`(v2) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L216798.  v4:= v0 @kind wide;
  #L21679a.  return v4 @kind wide;
  #L21679c.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L21679e.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` @kind boolean;
  #L2167a2.  if v0 != 0 then goto L2167b4;
  #L2167a6.  v8.`okhttp3.internal.cache.CacheInterceptor$1.cacheRequestClosed` @type ^`boolean` := v3 @kind boolean;
  #L2167aa.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheRequest` @type ^`okhttp3.internal.cache.CacheRequest` @kind object;
  #L2167ae.  call `abort`(v0) @signature `Lokhttp3/internal/cache/CacheRequest;.abort:()V` @kind interface;
  #L2167b4.  throw v6;
  #L2167b6.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L2167ba.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L2167c0.  v1:= temp @kind object;
  #L2167c2.  call temp:= `size`(v9) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2167c8.  v2:= temp @kind wide;
  #L2167ca.  v2:= v2 - v4 @kind long;
  #L2167cc.  v0:= v9 @kind object;
  #L2167ce.  call temp:= `copyTo`(v0, v1, v2, v4) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L2167d4.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.val$cacheBody` @type ^`okio.BufferedSink` @kind object;
  #L2167d8.  call temp:= `emitCompleteSegments`(v0) @signature `Lokio/BufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind interface;
  #L2167de.  goto L21679a;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L21679c;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.cache.CacheInterceptor$1` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L216800.  v0:= v1.`okhttp3.internal.cache.CacheInterceptor$1.val$source` @type ^`okio.BufferedSource` @kind object;
  #L216804.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L21680a.  v0:= temp @kind object;
  #L21680c.  return v0 @kind object;
}

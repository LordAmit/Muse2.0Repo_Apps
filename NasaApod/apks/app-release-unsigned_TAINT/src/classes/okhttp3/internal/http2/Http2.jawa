record `okhttp3.internal.http2.Http2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.BINARY` @AccessFlag STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FLAGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_ACK` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_COMPRESSED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_END_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_NONE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PADDED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.FLAG_PRIORITY` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.http2.Http2.INITIAL_MAX_FRAME_SIZE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_DATA` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_GOAWAY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PING` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PRIORITY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_RST_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_SETTINGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.http2.Http2.TYPE_WINDOW_UPDATE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1a6364.  v11:= 8I;
  #L1a6368.  v13:= 4I;
  #L1a636a.  v12:= 3I;
  #L1a636c.  v10:= 1I;
  #L1a636e.  v6:= 0I;
  #L1a6370.  v5:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L1a6374.  call temp:= `encodeUtf8`(v5) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L1a637a.  v5:= temp @kind object;
  #L1a637c.  `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` := v5 @kind object;
  #L1a6380.  v5:= 10I;
  #L1a6384.  v5:= new `java.lang.String`[v5];
  #L1a6388.  v7:= "DATA" @kind object;
  #L1a638c.  v5[v6]:= v7 @kind object;
  #L1a6390.  v7:= "HEADERS" @kind object;
  #L1a6394.  v5[v10]:= v7 @kind object;
  #L1a6398.  v7:= 2I;
  #L1a639a.  v8:= "PRIORITY" @kind object;
  #L1a639e.  v5[v7]:= v8 @kind object;
  #L1a63a2.  v7:= "RST_STREAM" @kind object;
  #L1a63a6.  v5[v12]:= v7 @kind object;
  #L1a63aa.  v7:= "SETTINGS" @kind object;
  #L1a63ae.  v5[v13]:= v7 @kind object;
  #L1a63b2.  v7:= 5I;
  #L1a63b4.  v8:= "PUSH_PROMISE" @kind object;
  #L1a63b8.  v5[v7]:= v8 @kind object;
  #L1a63bc.  v7:= 6I;
  #L1a63be.  v8:= "PING" @kind object;
  #L1a63c2.  v5[v7]:= v8 @kind object;
  #L1a63c6.  v7:= 7I;
  #L1a63c8.  v8:= "GOAWAY" @kind object;
  #L1a63cc.  v5[v7]:= v8 @kind object;
  #L1a63d0.  v7:= "WINDOW_UPDATE" @kind object;
  #L1a63d4.  v5[v11]:= v7 @kind object;
  #L1a63d8.  v7:= 9I;
  #L1a63dc.  v8:= "CONTINUATION" @kind object;
  #L1a63e0.  v5[v7]:= v8 @kind object;
  #L1a63e4.  `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a63e8.  v5:= 64I;
  #L1a63ec.  v5:= new `java.lang.String`[v5];
  #L1a63f0.  `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a63f4.  v5:= 256I;
  #L1a63f8.  v5:= new `java.lang.String`[v5];
  #L1a63fc.  `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] := v5 @kind object;
  #L1a6400.  v2:= 0I;
  #L1a6402.  v5:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a6406.  v5:= length @variable v5;
  #L1a6408.  if v2 >= v5 then goto L1a6446;
  #L1a640c.  v5:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a6410.  v7:= "%8s" @kind object;
  #L1a6414.  v8:= new `java.lang.Object`[v10];
  #L1a6418.  call temp:= `toBinaryString`(v2) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L1a641e.  v9:= temp @kind object;
  #L1a6420.  v8[v6]:= v9 @kind object;
  #L1a6424.  call temp:= `format`(v7, v8) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a642a.  v7:= temp @kind object;
  #L1a642c.  v8:= 32I;
  #L1a6430.  v9:= 48I;
  #L1a6434.  call temp:= `replace`(v7, v8, v9) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L1a643a.  v7:= temp @kind object;
  #L1a643c.  v5[v2]:= v7 @kind object;
  #L1a6440.  v2:= v2 + 1;
  #L1a6444.  goto L1a6402;
  #L1a6446.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a644a.  v7:= "" @kind object;
  #L1a644e.  v5[v6]:= v7 @kind object;
  #L1a6452.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6456.  v7:= "END_STREAM" @kind object;
  #L1a645a.  v5[v10]:= v7 @kind object;
  #L1a645e.  v4:= new `int`[v10];
  #L1a6462.  v4[v6]:= v10;
  #L1a6466.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a646a.  v7:= "PADDED" @kind object;
  #L1a646e.  v5[v11]:= v7 @kind object;
  #L1a6472.  v7:= length @variable v4;
  #L1a6474.  v5:= v6;
  #L1a6476.  if v5 >= v7 then goto L1a64be;
  #L1a647a.  v3:= v4[v5];
  #L1a647e.  v8:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6482.  v9:= v3 ^| 8;
  #L1a6486.  v10:= new `java.lang.StringBuilder`;
  #L1a648a.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a6490.  v11:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6494.  v11:= v11[v3] @kind object;
  #L1a6498.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a649e.  v10:= temp @kind object;
  #L1a64a0.  v11:= "|PADDED" @kind object;
  #L1a64a4.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a64aa.  v10:= temp @kind object;
  #L1a64ac.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a64b2.  v10:= temp @kind object;
  #L1a64b4.  v8[v9]:= v10 @kind object;
  #L1a64b8.  v5:= v5 + 1;
  #L1a64bc.  goto L1a6476;
  #L1a64be.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a64c2.  v7:= "END_HEADERS" @kind object;
  #L1a64c6.  v5[v13]:= v7 @kind object;
  #L1a64ca.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a64ce.  v7:= 32I;
  #L1a64d2.  v8:= "PRIORITY" @kind object;
  #L1a64d6.  v5[v7]:= v8 @kind object;
  #L1a64da.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a64de.  v7:= 36I;
  #L1a64e2.  v8:= "END_HEADERS|PRIORITY" @kind object;
  #L1a64e6.  v5[v7]:= v8 @kind object;
  #L1a64ea.  v1:= new `int`[v12];
  #L1a64ee.  goto L1a65f0;
  #L1a64f4.  v8:= length @variable v1;
  #L1a64f6.  v7:= v6;
  #L1a64f8.  if v7 >= v8 then goto L1a65be;
  #L1a64fc.  v0:= v1[v7];
  #L1a6500.  v9:= length @variable v4;
  #L1a6502.  v5:= v6;
  #L1a6504.  if v5 >= v9 then goto L1a65b6;
  #L1a6508.  v3:= v4[v5];
  #L1a650c.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6510.  v11:= v3 ^| v0 @kind int;
  #L1a6514.  v12:= new `java.lang.StringBuilder`;
  #L1a6518.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a651e.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6522.  v13:= v13[v3] @kind object;
  #L1a6526.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a652c.  v12:= temp @kind object;
  #L1a652e.  v13:= 124I;
  #L1a6532.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6538.  v12:= temp @kind object;
  #L1a653a.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a653e.  v13:= v13[v0] @kind object;
  #L1a6542.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6548.  v12:= temp @kind object;
  #L1a654a.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6550.  v12:= temp @kind object;
  #L1a6552.  v10[v11]:= v12 @kind object;
  #L1a6556.  v10:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a655a.  v11:= v3 ^| v0 @kind int;
  #L1a655e.  v11:= v11 ^| 8;
  #L1a6562.  v12:= new `java.lang.StringBuilder`;
  #L1a6566.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a656c.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6570.  v13:= v13[v3] @kind object;
  #L1a6574.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a657a.  v12:= temp @kind object;
  #L1a657c.  v13:= 124I;
  #L1a6580.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6586.  v12:= temp @kind object;
  #L1a6588.  v13:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a658c.  v13:= v13[v0] @kind object;
  #L1a6590.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6596.  v12:= temp @kind object;
  #L1a6598.  v13:= "|PADDED" @kind object;
  #L1a659c.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a65a2.  v12:= temp @kind object;
  #L1a65a4.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a65aa.  v12:= temp @kind object;
  #L1a65ac.  v10[v11]:= v12 @kind object;
  #L1a65b0.  v5:= v5 + 1;
  #L1a65b4.  goto L1a6504;
  #L1a65b6.  v5:= v7 + 1;
  #L1a65ba.  v7:= v5;
  #L1a65bc.  goto L1a64f8;
  #L1a65be.  v2:= 0I;
  #L1a65c0.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a65c4.  v5:= length @variable v5;
  #L1a65c6.  if v2 >= v5 then goto L1a65ec;
  #L1a65ca.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a65ce.  v5:= v5[v2] @kind object;
  #L1a65d2.  if v5 != 0 then goto L1a65e6;
  #L1a65d6.  v5:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a65da.  v6:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a65de.  v6:= v6[v2] @kind object;
  #L1a65e2.  v5[v2]:= v6 @kind object;
  #L1a65e6.  v2:= v2 + 1;
  #L1a65ea.  goto L1a65c0;
  #L1a65ec.  return @kind void;
  #L1a65ee.  
  #L1a65f0.  v1:= (4I, 32I, 36I) @kind object;
  #L1a6603.  goto L1a64f4;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a6614.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a661a.  return @kind void;
}
procedure `java.lang.String` `formatFlags`(`byte` v3 @name `type`, `byte` v4 @name `flags`) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1a662c.  if v4 != 0 then goto L1a6636;
  #L1a6630.  v1:= "" @kind object;
  #L1a6634.  return v1 @kind object;
  #L1a6636.  goto L1a66bc;
  #L1a663c.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a6640.  v1:= length @variable v1;
  #L1a6642.  if v4 >= v1 then goto L1a668e;
  #L1a6646.  v1:= `@@okhttp3.internal.http2.Http2.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L1a664a.  v0:= v1[v4] @kind object;
  #L1a664e.  v1:= 5I;
  #L1a6650.  if v3 != v1 then goto L1a6698;
  #L1a6654.  v1:= v4 ^& 4;
  #L1a6658.  if v1 == 0 then goto L1a6698;
  #L1a665c.  v1:= "HEADERS" @kind object;
  #L1a6660.  v2:= "PUSH_PROMISE" @kind object;
  #L1a6664.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1a666a.  v1:= temp @kind object;
  #L1a666c.  goto L1a6634;
  #L1a666e.  v1:= 1I;
  #L1a6670.  if v4 != v1 then goto L1a667a;
  #L1a6674.  v1:= "ACK" @kind object;
  #L1a6678.  goto L1a6634;
  #L1a667a.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a667e.  v1:= v1[v4] @kind object;
  #L1a6682.  goto L1a6634;
  #L1a6684.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a6688.  v1:= v1[v4] @kind object;
  #L1a668c.  goto L1a6634;
  #L1a668e.  v1:= `@@okhttp3.internal.http2.Http2.BINARY` @type ^`java.lang.String`[] @kind object;
  #L1a6692.  v0:= v1[v4] @kind object;
  #L1a6696.  goto L1a664e;
  #L1a6698.  if v3 != 0 then goto L1a66b6;
  #L1a669c.  v1:= v4 ^& 32;
  #L1a66a0.  if v1 == 0 then goto L1a66b6;
  #L1a66a4.  v1:= "PRIORITY" @kind object;
  #L1a66a8.  v2:= "COMPRESSED" @kind object;
  #L1a66ac.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1a66b2.  v1:= temp @kind object;
  #L1a66b4.  goto L1a6634;
  #L1a66b6.  v1:= v0 @kind object;
  #L1a66b8.  goto L1a6634;
  #L1a66ba.  
  #L1a66bc.  switch v3
                  | 2 => goto L1a6684
                  | 3 => goto L1a6684
                  | 4 => goto L1a666e
                  | 5 => goto L1a663c
                  | 6 => goto L1a666e
                  | 7 => goto L1a6684
                  | 8 => goto L1a6684
                  | else => goto L1a663c;
}
procedure `java.lang.String` `frameLog`(`boolean` v7 @name `inbound`, `int` v8 @name `streamId`, `int` v9 @name `length`, `byte` v10 @name `type`, `byte` v11 @name `flags`) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a66f0.  v6:= 1I;
  #L1a66f2.  v5:= 0I;
  #L1a66f4.  v2:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L1a66f8.  v2:= length @variable v2;
  #L1a66fa.  if v10 >= v2 then goto L1a6754;
  #L1a66fe.  v2:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L1a6702.  v1:= v2[v10] @kind object;
  #L1a6706.  call temp:= `formatFlags`(v10, v11) @signature `Lokhttp3/internal/http2/Http2;.formatFlags:(BB)Ljava/lang/String;` @kind static;
  #L1a670c.  v0:= temp @kind object;
  #L1a670e.  v3:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L1a6712.  v2:= 5I;
  #L1a6714.  v4:= new `java.lang.Object`[v2];
  #L1a6718.  if v7 == 0 then goto L1a6772;
  #L1a671c.  v2:= "<<" @kind object;
  #L1a6720.  v4[v5]:= v2 @kind object;
  #L1a6724.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1a672a.  v2:= temp @kind object;
  #L1a672c.  v4[v6]:= v2 @kind object;
  #L1a6730.  v2:= 2I;
  #L1a6732.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1a6738.  v5:= temp @kind object;
  #L1a673a.  v4[v2]:= v5 @kind object;
  #L1a673e.  v2:= 3I;
  #L1a6740.  v4[v2]:= v1 @kind object;
  #L1a6744.  v2:= 4I;
  #L1a6746.  v4[v2]:= v0 @kind object;
  #L1a674a.  call temp:= `format`(v3, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a6750.  v2:= temp @kind object;
  #L1a6752.  return v2 @kind object;
  #L1a6754.  v2:= "0x%02x" @kind object;
  #L1a6758.  v3:= new `java.lang.Object`[v6];
  #L1a675c.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1a6762.  v4:= temp @kind object;
  #L1a6764.  v3[v5]:= v4 @kind object;
  #L1a6768.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a676e.  v1:= temp @kind object;
  #L1a6770.  goto L1a6706;
  #L1a6772.  v2:= ">>" @kind object;
  #L1a6776.  goto L1a6720;
}
procedure `java.lang.IllegalArgumentException` `illegalArgument`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/http2/Http2;.illegalArgument:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a6788.  v0:= new `java.lang.IllegalArgumentException`;
  #L1a678c.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a6792.  v1:= temp @kind object;
  #L1a6794.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a679a.  throw v0;
}
procedure `java.io.IOException` `ioException`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/http2/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1a67ac.  v0:= new `java.io.IOException`;
  #L1a67b0.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a67b6.  v1:= temp @kind object;
  #L1a67b8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a67be.  throw v0;
}

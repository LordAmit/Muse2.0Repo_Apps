record `okhttp3.internal.http2.Http2Stream$FramingSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.closed` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.finished` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@okhttp3.internal.http2.Http2Stream$FramingSink.EMIT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L21b7d0.  v0:= constclass @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b7d4.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L21b7da.  v0:= temp;
  #L21b7dc.  if v0 != 0 then goto L21b7e8;
  #L21b7e0.  v0:= 1I;
  #L21b7e2.  `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` := v0 @kind boolean;
  #L21b7e6.  return @kind void;
  #L21b7e8.  v0:= 0I;
  #L21b7ea.  goto L21b7e2;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this, `okhttp3.internal.http2.Http2Stream` v2 @kind object @name `this$0`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L21b7fc.  v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` := v2 @kind object;
  #L21b800.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21b806.  v0:= new `okio.Buffer`;
  #L21b80a.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L21b810.  v1.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L21b814.  return @kind void;
}
procedure `void` `emitFrame`(`okhttp3.internal.http2.Http2Stream$FramingSink` v8 @kind this, `boolean` v9 @name `outFinished`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21b828.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b82c.  @monitorenter v1
  #Try_start0.  
  #L21b82e.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b832.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b836.  call `enter`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #Try_end0.  
  #Try_start1.  
  #L21b83c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b840.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L21b844.  v6:= 0L;
  #L21b848.  v0:= lcmp(v2, v6);
  #L21b84c.  if v0 > 0 then goto L21b890;
  #L21b850.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L21b854.  if v0 != 0 then goto L21b890;
  #L21b858.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L21b85c.  if v0 != 0 then goto L21b890;
  #L21b860.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b864.  v0:= v0.`okhttp3.internal.http2.Http2Stream.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L21b868.  if v0 != 0 then goto L21b890;
  #L21b86c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b870.  call `waitForIo`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.waitForIo:()V` @kind virtual;
  #Try_end1.  
  #L21b876.  goto L21b83c;
  #L21b878.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L21b87a.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b87e.  v2:= v2.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b882.  call `exitAndThrowIfTimedOut`(v2) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21b888.  throw v0;
  #L21b88a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21b88c.  @monitorexit v1
  #Try_end2.  
  #L21b88e.  throw v0;
  #Try_start3.  
  #L21b890.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b894.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b898.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21b89e.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b8a2.  call `checkOutNotClosed`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L21b8a8.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b8ac.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L21b8b0.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21b8b4.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21b8ba.  v6:= temp @kind wide;
  #L21b8bc.  call temp:= `min`(v2, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L21b8c2.  v4:= temp @kind wide;
  #L21b8c4.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b8c8.  v2:= v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L21b8cc.  v2:= v2 - v4 @kind long;
  #L21b8ce.  v0.`okhttp3.internal.http2.Http2Stream.bytesLeftInWriteWindow` @type ^`long` := v2 @kind wide;
  #L21b8d2.  @monitorexit v1
  #Try_end3.  
  #L21b8d4.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b8d8.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b8dc.  call `enter`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.enter:()V` @kind virtual;
  #Try_start4.  
  #L21b8e2.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b8e6.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21b8ea.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b8ee.  v1:= v1.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L21b8f2.  if v9 == 0 then goto L21b926;
  #L21b8f6.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21b8fa.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21b900.  v2:= temp @kind wide;
  #L21b902.  v2:= lcmp(v4, v2);
  #L21b906.  if v2 != 0 then goto L21b926;
  #L21b90a.  v2:= 1I;
  #L21b90c.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21b910.  call `writeData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #Try_end4.  
  #L21b916.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b91a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b91e.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21b924.  return @kind void;
  #L21b926.  v2:= 0I;
  #L21b928.  goto L21b90c;
  #L21b92a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L21b92c.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b930.  v1:= v1.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21b934.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L21b93a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21b88a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21b878;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21b88a;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L21b88a;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L21b92a;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSink` v6 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L21b97c.  v4:= 0L;
  #L21b980.  v2:= 1I;
  #L21b982.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21b986.  if v0 != 0 then goto L21b9a6;
  #L21b98a.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b98e.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21b994.  v0:= temp;
  #L21b996.  if v0 == 0 then goto L21b9a6;
  #L21b99a.  v0:= new `java.lang.AssertionError`;
  #L21b99e.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21b9a4.  throw v0;
  #L21b9a6.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9aa.  @monitorenter v1
  #Try_start0.  
  #L21b9ac.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` @kind boolean;
  #L21b9b0.  if v0 == 0 then goto L21b9b8;
  #L21b9b4.  @monitorexit v1
  #L21b9b6.  return @kind void;
  #L21b9b8.  @monitorexit v1
  #Try_end0.  
  #L21b9ba.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21b9be.  v0:= v0.`okhttp3.internal.http2.Http2Stream.sink` @type ^`okhttp3.internal.http2.Http2Stream$FramingSink` @kind object;
  #L21b9c2.  v0:= v0.`okhttp3.internal.http2.Http2Stream$FramingSink.finished` @type ^`boolean` @kind boolean;
  #L21b9c6.  if v0 != 0 then goto L21ba18;
  #L21b9ca.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21b9ce.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21b9d4.  v0:= temp @kind wide;
  #L21b9d6.  v0:= lcmp(v0, v4);
  #L21b9da.  if v0 <= 0 then goto L21ba00;
  #L21b9de.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21b9e2.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21b9e8.  v0:= temp @kind wide;
  #L21b9ea.  v0:= lcmp(v0, v4);
  #L21b9ee.  if v0 <= 0 then goto L21ba18;
  #L21b9f2.  call `emitFrame`(v6, v2) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21b9f8.  goto L21b9de;
  #L21b9fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L21b9fc.  @monitorexit v1
  #Try_end1.  
  #L21b9fe.  throw v0;
  #L21ba00.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba04.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21ba08.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba0c.  v1:= v1.`okhttp3.internal.http2.Http2Stream.id` @type ^`int`;
  #L21ba10.  v3:= 0I;
  #L21ba12.  call `writeData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L21ba18.  v1:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba1c.  @monitorenter v1
  #L21ba1e.  v0:= 1I;
  #Try_start2.  
  #L21ba20.  v6.`okhttp3.internal.http2.Http2Stream$FramingSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L21ba24.  @monitorexit v1
  #Try_end2.  
  #L21ba26.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba2a.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21ba2e.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L21ba34.  v0:= v6.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba38.  call `cancelStreamIfNecessary`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.cancelStreamIfNecessary:()V` @kind virtual;
  #L21ba3e.  goto L21b9b6;
  #L21ba40.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L21ba42.  @monitorexit v1
  #Try_end3.  
  #L21ba44.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21b9fa;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21b9fa;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L21ba40;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L21ba40;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Stream$FramingSink` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21ba80.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21ba84.  if v0 != 0 then goto L21baa4;
  #L21ba88.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21ba8c.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21ba92.  v0:= temp;
  #L21ba94.  if v0 == 0 then goto L21baa4;
  #L21ba98.  v0:= new `java.lang.AssertionError`;
  #L21ba9c.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21baa2.  throw v0;
  #L21baa4.  v1:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21baa8.  @monitorenter v1
  #Try_start0.  
  #L21baaa.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21baae.  call `checkOutNotClosed`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.checkOutNotClosed:()V` @kind virtual;
  #L21bab4.  @monitorexit v1
  #Try_end0.  
  #L21bab6.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21baba.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21bac0.  v0:= temp @kind wide;
  #L21bac2.  v2:= 0L;
  #L21bac6.  v0:= lcmp(v0, v2);
  #L21baca.  if v0 <= 0 then goto L21baec;
  #L21bace.  v0:= 0I;
  #L21bad0.  call `emitFrame`(v4, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21bad6.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bada.  v0:= v0.`okhttp3.internal.http2.Http2Stream.connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L21bade.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L21bae4.  goto L21bab6;
  #L21bae6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L21bae8.  @monitorexit v1
  #Try_end1.  
  #L21baea.  throw v0;
  #L21baec.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L21bae6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L21bae6;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21bb14.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bb18.  v0:= v0.`okhttp3.internal.http2.Http2Stream.writeTimeout` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L21bb1c.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http2.Http2Stream$FramingSink` v4 @kind this, `okio.Buffer` v5 @kind object @name `source`, `long` v6 @name `byteCount`) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L21bb30.  v0:= `@@okhttp3.internal.http2.Http2Stream$FramingSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L21bb34.  if v0 != 0 then goto L21bb54;
  #L21bb38.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.this$0` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L21bb3c.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L21bb42.  v0:= temp;
  #L21bb44.  if v0 == 0 then goto L21bb54;
  #L21bb48.  v0:= new `java.lang.AssertionError`;
  #L21bb4c.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L21bb52.  throw v0;
  #L21bb54.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21bb58.  call `write`(v0, v5, v6) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L21bb5e.  v0:= v4.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L21bb62.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L21bb68.  v0:= temp @kind wide;
  #L21bb6a.  v2:= 16384L;
  #L21bb6e.  v0:= lcmp(v0, v2);
  #L21bb72.  if v0 < 0 then goto L21bb80;
  #L21bb76.  v0:= 0I;
  #L21bb78.  call `emitFrame`(v4, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L21bb7e.  goto L21bb5e;
  #L21bb80.  return @kind void;
}

record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a4b68.  v8:= 7I;
  #L1a4b6a.  v7:= 3I;
  #L1a4b6c.  v6:= 2I;
  #L1a4b6e.  v5:= 1I;
  #L1a4b70.  v4:= 0I;
  #L1a4b72.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4b76.  v1:= "NO_ERROR" @kind object;
  #L1a4b7a.  call `<init>`(v0, v1, v4, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4b80.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4b84.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4b88.  v1:= "PROTOCOL_ERROR" @kind object;
  #L1a4b8c.  call `<init>`(v0, v1, v5, v5) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4b92.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4b96.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4b9a.  v1:= "INTERNAL_ERROR" @kind object;
  #L1a4b9e.  call `<init>`(v0, v1, v6, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4ba4.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4ba8.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4bac.  v1:= "FLOW_CONTROL_ERROR" @kind object;
  #L1a4bb0.  call `<init>`(v0, v1, v7, v7) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4bb6.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4bba.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4bbe.  v1:= "REFUSED_STREAM" @kind object;
  #L1a4bc2.  v2:= 4I;
  #L1a4bc4.  call `<init>`(v0, v1, v2, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4bca.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4bce.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4bd2.  v1:= "CANCEL" @kind object;
  #L1a4bd6.  v2:= 5I;
  #L1a4bd8.  v3:= 8I;
  #L1a4bdc.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4be2.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4be6.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4bea.  v1:= "COMPRESSION_ERROR" @kind object;
  #L1a4bee.  v2:= 6I;
  #L1a4bf0.  v3:= 9I;
  #L1a4bf4.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4bfa.  `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4bfe.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4c02.  v1:= "CONNECT_ERROR" @kind object;
  #L1a4c06.  v2:= 10I;
  #L1a4c0a.  call `<init>`(v0, v1, v8, v2) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4c10.  `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4c14.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4c18.  v1:= "ENHANCE_YOUR_CALM" @kind object;
  #L1a4c1c.  v2:= 8I;
  #L1a4c20.  v3:= 11I;
  #L1a4c24.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4c2a.  `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4c2e.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4c32.  v1:= "INADEQUATE_SECURITY" @kind object;
  #L1a4c36.  v2:= 9I;
  #L1a4c3a.  v3:= 12I;
  #L1a4c3e.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4c44.  `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4c48.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L1a4c4c.  v1:= "HTTP_1_1_REQUIRED" @kind object;
  #L1a4c50.  v2:= 10I;
  #L1a4c54.  v3:= 13I;
  #L1a4c58.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1a4c5e.  `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L1a4c62.  v0:= 11I;
  #L1a4c66.  v0:= new `okhttp3.internal.http2.ErrorCode`[v0];
  #L1a4c6a.  v1:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4c6e.  v0[v4]:= v1 @kind object;
  #L1a4c72.  v1:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4c76.  v0[v5]:= v1 @kind object;
  #L1a4c7a.  v1:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4c7e.  v0[v6]:= v1 @kind object;
  #L1a4c82.  v1:= `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4c86.  v0[v7]:= v1 @kind object;
  #L1a4c8a.  v1:= 4I;
  #L1a4c8c.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4c90.  v0[v1]:= v2 @kind object;
  #L1a4c94.  v1:= 5I;
  #L1a4c96.  v2:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4c9a.  v0[v1]:= v2 @kind object;
  #L1a4c9e.  v1:= 6I;
  #L1a4ca0.  v2:= `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4ca4.  v0[v1]:= v2 @kind object;
  #L1a4ca8.  v1:= `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4cac.  v0[v8]:= v1 @kind object;
  #L1a4cb0.  v1:= 8I;
  #L1a4cb4.  v2:= `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4cb8.  v0[v1]:= v2 @kind object;
  #L1a4cbc.  v1:= 9I;
  #L1a4cc0.  v2:= `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4cc4.  v0[v1]:= v2 @kind object;
  #L1a4cc8.  v1:= 10I;
  #L1a4ccc.  v2:= `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4cd0.  v0[v1]:= v2 @kind object;
  #L1a4cd4.  `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] := v0 @kind object;
  #L1a4cd8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 @name `httpCode`) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a4cec.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1a4cf2.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L1a4cf6.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `fromHttp2`(`int` v5 @name `code`) @signature `Lokhttp3/internal/http2/ErrorCode;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a4d08.  call temp:= `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @kind static;
  #L1a4d0e.  v2:= temp @kind object;
  #L1a4d10.  v3:= length @variable v2;
  #L1a4d12.  v1:= 0I;
  #L1a4d14.  if v1 >= v3 then goto L1a4d2c;
  #L1a4d18.  v0:= v2[v1] @kind object;
  #L1a4d1c.  v4:= v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L1a4d20.  if v4 != v5 then goto L1a4d26;
  #L1a4d24.  return v0 @kind object;
  #L1a4d26.  v1:= v1 + 1;
  #L1a4d2a.  goto L1a4d14;
  #L1a4d2c.  v0:= 0I;
  #L1a4d2e.  goto L1a4d24;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a4d40.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1a4d44.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1a4d4a.  v0:= temp @kind object;
  #L1a4d4c.  v0:= (`okhttp3.internal.http2.ErrorCode`) v0 @kind object;
  #L1a4d50.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a4d64.  v0:= `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L1a4d68.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1a4d6e.  v0:= temp @kind object;
  #L1a4d70.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L1a4d74.  return v0 @kind object;
}

record `okhttp3.internal.http2.Http2Codec$StreamFinishingSource` @kind class @AccessFlag  extends `okio.ForwardingSource` @kind class {
  `long` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @AccessFlag ;
  `okhttp3.internal.http2.Http2Codec` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v2 @kind this, `okhttp3.internal.http2.Http2Codec` v3 @kind object @name `this$0`, `okio.Source` v4 @kind object @name `delegate`) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.<init>:(Lokhttp3/internal/http2/Http2Codec;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L246c34.  v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` := v3 @kind object;
  #L246c38.  call `<init>`(v2, v4) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L246c3e.  v0:= 0I;
  #L246c40.  v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` := v0 @kind boolean;
  #L246c44.  v0:= 0L;
  #L246c48.  v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` := v0 @kind wide;
  #L246c4c.  return @kind void;
}
procedure `void` `endOfInput`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v7 @kind this, `java.io.IOException` v8 @kind object @name `e`) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L246c60.  v0:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` @kind boolean;
  #L246c64.  if v0 == 0 then goto L246c6a;
  #L246c68.  return @kind void;
  #L246c6a.  v0:= 1I;
  #L246c6c.  v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.completed` @type ^`boolean` := v0 @kind boolean;
  #L246c70.  v0:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` @kind object;
  #L246c74.  v1:= v0.`okhttp3.internal.http2.Http2Codec.streamAllocation` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L246c78.  v2:= 0I;
  #L246c7a.  v3:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.this$0` @type ^`okhttp3.internal.http2.Http2Codec` @kind object;
  #L246c7e.  v4:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` @kind wide;
  #L246c82.  v6:= v8 @kind object;
  #L246c84.  call `streamFinished`(v1, v2, v3, v4, v6) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFinished:(ZLokhttp3/internal/http/HttpCodec;JLjava/io/IOException;)V` @kind virtual;
  #L246c8a.  goto L246c68;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L246c9c.  call `close`(v1) @signature `Lokio/ForwardingSource;.close:()V` @kind super;
  #L246ca2.  v0:= 0I;
  #L246ca4.  call `endOfInput`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @kind direct;
  #L246caa.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v6 @kind this, `okio.Buffer` v7 @kind object @name `sink`, `long` v8 @name `byteCount`) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L246cbc.  call temp:= `delegate`(v6) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.delegate:()Lokio/Source;` @kind virtual;
  #L246cc2.  v1:= temp @kind object;
  #L246cc4.  call temp:= `read`(v1, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L246cca.  v2:= temp @kind wide;
  #L246ccc.  v4:= 0L;
  #L246cd0.  v1:= lcmp(v2, v4);
  #L246cd4.  if v1 <= 0 then goto L246ce2;
  #L246cd8.  v4:= v6.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` @kind wide;
  #L246cdc.  v4:= v4 + v2 @kind long;
  #L246cde.  v6.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.bytesRead` @type ^`long` := v4 @kind wide;
  #Try_end0.  
  #L246ce2.  return v2 @kind wide;
  #L246ce4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L246ce6.  call `endOfInput`(v6, v0) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @kind direct;
  #L246cec.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L246ce4;
}

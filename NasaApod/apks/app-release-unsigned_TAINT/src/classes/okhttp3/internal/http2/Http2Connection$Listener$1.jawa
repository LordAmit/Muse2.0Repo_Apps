record `okhttp3.internal.http2.Http2Connection$Listener$1` @kind class @AccessFlag FINAL extends `okhttp3.internal.http2.Http2Connection$Listener` @kind class {
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$Listener$1` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Listener$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21ad48.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.<init>:()V` @kind direct;
  #L21ad4e.  return @kind void;
}
procedure `void` `onStream`(`okhttp3.internal.http2.Http2Connection$Listener$1` v1 @kind this, `okhttp3.internal.http2.Http2Stream` v2 @kind object @name `stream`) @signature `Lokhttp3/internal/http2/Http2Connection$Listener$1;.onStream:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21ad60.  v0:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L21ad64.  call `close`(v2, v0) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L21ad6a.  return @kind void;
}

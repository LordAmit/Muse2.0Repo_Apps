record `okhttp3.internal.NamedRunnable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `okhttp3.internal.NamedRunnable.name` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.NamedRunnable` v1 @kind this, `java.lang.String` v2 @kind object @name `format`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19efb8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19efbe.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19efc4.  v0:= temp @kind object;
  #L19efc6.  v1.`okhttp3.internal.NamedRunnable.name` @type ^`java.lang.String` := v0 @kind object;
  #L19efca.  return @kind void;
}
procedure `void` `execute`() @signature `Lokhttp3/internal/NamedRunnable;.execute:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`okhttp3.internal.NamedRunnable` v3 @kind this) @signature `Lokhttp3/internal/NamedRunnable;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19efdc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L19efe2.  v1:= temp @kind object;
  #L19efe4.  call temp:= `getName`(v1) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L19efea.  v0:= temp @kind object;
  #L19efec.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L19eff2.  v1:= temp @kind object;
  #L19eff4.  v2:= v3.`okhttp3.internal.NamedRunnable.name` @type ^`java.lang.String` @kind object;
  #L19eff8.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #Try_start0.  
  #L19effe.  call `execute`(v3) @signature `Lokhttp3/internal/NamedRunnable;.execute:()V` @kind virtual;
  #Try_end0.  
  #L19f004.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L19f00a.  v1:= temp @kind object;
  #L19f00c.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L19f012.  return @kind void;
  #L19f014.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L19f016.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L19f01c.  v2:= temp @kind object;
  #L19f01e.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L19f024.  throw v1;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L19f014;
}

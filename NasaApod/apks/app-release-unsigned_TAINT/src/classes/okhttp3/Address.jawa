record `okhttp3.Address` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.CertificatePinner` `okhttp3.Address.certificatePinner` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.Address.dns` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.Address.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Address.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.Address.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.Address.proxySelector` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.Address.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.Address.sslSocketFactory` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Address.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Address` v2 @kind this, `java.lang.String` v3 @kind object @name `uriHost`, `int` v4 @name `uriPort`, `okhttp3.Dns` v5 @kind object @name `dns`, `javax.net.SocketFactory` v6 @kind object @name `socketFactory`, `javax.net.ssl.SSLSocketFactory` v7 @kind object @name `sslSocketFactory`, `javax.net.ssl.HostnameVerifier` v8 @kind object @name `hostnameVerifier`, `okhttp3.CertificatePinner` v9 @kind object @name `certificatePinner`, `okhttp3.Authenticator` v10 @kind object @name `proxyAuthenticator`, `java.net.Proxy` v11 @kind object @name `proxy`, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object @name `proxySelector`) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1936d0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1936d6.  v1:= new `okhttp3.HttpUrl$Builder`;
  #L1936da.  call `<init>`(v1) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L1936e0.  if v7 == 0 then goto L193720;
  #L1936e4.  v0:= "https" @kind object;
  #L1936e8.  call temp:= `scheme`(v1, v0) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1936ee.  v0:= temp @kind object;
  #L1936f0.  call temp:= `host`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1936f6.  v0:= temp @kind object;
  #L1936f8.  call temp:= `port`(v0, v4) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L1936fe.  v0:= temp @kind object;
  #L193700.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193706.  v0:= temp @kind object;
  #L193708.  v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L19370c.  if v5 != 0 then goto L193726;
  #L193710.  v0:= new `java.lang.NullPointerException`;
  #L193714.  v1:= "dns == null" @kind object;
  #L193718.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19371e.  throw v0;
  #L193720.  v0:= "http" @kind object;
  #L193724.  goto L1936e8;
  #L193726.  v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` := v5 @kind object;
  #L19372a.  if v6 != 0 then goto L19373e;
  #L19372e.  v0:= new `java.lang.NullPointerException`;
  #L193732.  v1:= "socketFactory == null" @kind object;
  #L193736.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19373c.  throw v0;
  #L19373e.  v2.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L193742.  if v10 != 0 then goto L193756;
  #L193746.  v0:= new `java.lang.NullPointerException`;
  #L19374a.  v1:= "proxyAuthenticator == null" @kind object;
  #L19374e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193754.  throw v0;
  #L193756.  v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v10 @kind object;
  #L19375a.  if v12 != 0 then goto L19376e;
  #L19375e.  v0:= new `java.lang.NullPointerException`;
  #L193762.  v1:= "protocols == null" @kind object;
  #L193766.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19376c.  throw v0;
  #L19376e.  call temp:= `immutableList`(v12) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L193774.  v0:= temp @kind object;
  #L193776.  v2.`okhttp3.Address.protocols` @type ^`java.util.List` := v0 @kind object;
  #L19377a.  if v13 != 0 then goto L19378e;
  #L19377e.  v0:= new `java.lang.NullPointerException`;
  #L193782.  v1:= "connectionSpecs == null" @kind object;
  #L193786.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19378c.  throw v0;
  #L19378e.  call temp:= `immutableList`(v13) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L193794.  v0:= temp @kind object;
  #L193796.  v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L19379a.  if v14 != 0 then goto L1937ae;
  #L19379e.  v0:= new `java.lang.NullPointerException`;
  #L1937a2.  v1:= "proxySelector == null" @kind object;
  #L1937a6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1937ac.  throw v0;
  #L1937ae.  v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L1937b2.  v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` := v11 @kind object;
  #L1937b6.  v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L1937ba.  v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L1937be.  v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` := v9 @kind object;
  #L1937c2.  return @kind void;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1937d4.  v0:= v1.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L1937d8.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1937ec.  v0:= v1.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1937f0.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193804.  v0:= v1.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L193808.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Address` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19381c.  v0:= instanceof @variable v3 @type ^`okhttp3.Address` @kind boolean;
  #L193820.  if v0 == 0 then goto L193852;
  #L193824.  v1:= v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193828.  v0:= v3 @kind object;
  #L19382a.  v0:= (`okhttp3.Address`) v0 @kind object;
  #L19382e.  v0:= v0.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193832.  call temp:= `equals`(v1, v0) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L193838.  v0:= temp;
  #L19383a.  if v0 == 0 then goto L193852;
  #L19383e.  v3:= (`okhttp3.Address`) v3 @kind object;
  #L193842.  call temp:= `equalsNonHost`(v2, v3) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @kind virtual;
  #L193848.  v0:= temp;
  #L19384a.  if v0 == 0 then goto L193852;
  #L19384e.  v0:= 1I;
  #L193850.  return v0;
  #L193852.  v0:= 0I;
  #L193854.  goto L193850;
}
procedure `boolean` `equalsNonHost`(`okhttp3.Address` v2 @kind this, `okhttp3.Address` v3 @kind object @name `that`) @signature `Lokhttp3/Address;.equalsNonHost:(Lokhttp3/Address;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L193868.  v0:= v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L19386c.  v1:= v3.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L193870.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L193876.  v0:= temp;
  #L193878.  if v0 == 0 then goto L193944;
  #L19387c.  v0:= v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L193880.  v1:= v3.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L193884.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19388a.  v0:= temp;
  #L19388c.  if v0 == 0 then goto L193944;
  #L193890.  v0:= v2.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L193894.  v1:= v3.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L193898.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L19389e.  v0:= temp;
  #L1938a0.  if v0 == 0 then goto L193944;
  #L1938a4.  v0:= v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1938a8.  v1:= v3.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1938ac.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L1938b2.  v0:= temp;
  #L1938b4.  if v0 == 0 then goto L193944;
  #L1938b8.  v0:= v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L1938bc.  v1:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L1938c0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1938c6.  v0:= temp;
  #L1938c8.  if v0 == 0 then goto L193944;
  #L1938cc.  v0:= v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1938d0.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1938d4.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1938da.  v0:= temp;
  #L1938dc.  if v0 == 0 then goto L193944;
  #L1938e0.  v0:= v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1938e4.  v1:= v3.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1938e8.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1938ee.  v0:= temp;
  #L1938f0.  if v0 == 0 then goto L193944;
  #L1938f4.  v0:= v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1938f8.  v1:= v3.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1938fc.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193902.  v0:= temp;
  #L193904.  if v0 == 0 then goto L193944;
  #L193908.  v0:= v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L19390c.  v1:= v3.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L193910.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193916.  v0:= temp;
  #L193918.  if v0 == 0 then goto L193944;
  #L19391c.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193922.  v0:= temp @kind object;
  #L193924.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19392a.  v0:= temp;
  #L19392c.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193932.  v1:= temp @kind object;
  #L193934.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L19393a.  v1:= temp;
  #L19393c.  if v0 != v1 then goto L193944;
  #L193940.  v0:= 1I;
  #L193942.  return v0;
  #L193944.  v0:= 0I;
  #L193946.  goto L193942;
}
procedure `int` `hashCode`(`okhttp3.Address` v4 @kind this) @signature `Lokhttp3/Address;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L193958.  v2:= 0I;
  #L19395a.  v0:= 17I;
  #L19395e.  v1:= v4.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193962.  call temp:= `hashCode`(v1) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @kind virtual;
  #L193968.  v1:= temp;
  #L19396a.  v0:= v1 + 527;
  #L19396e.  v1:= v0 * 31;
  #L193972.  v3:= v4.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L193976.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L19397c.  v3:= temp;
  #L19397e.  v0:= v1 + v3 @kind int;
  #L193982.  v1:= v0 * 31;
  #L193986.  v3:= v4.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L19398a.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L193990.  v3:= temp;
  #L193992.  v0:= v1 + v3 @kind int;
  #L193996.  v1:= v0 * 31;
  #L19399a.  v3:= v4.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L19399e.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L1939a4.  v3:= temp;
  #L1939a6.  v0:= v1 + v3 @kind int;
  #L1939aa.  v1:= v0 * 31;
  #L1939ae.  v3:= v4.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L1939b2.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L1939b8.  v3:= temp;
  #L1939ba.  v0:= v1 + v3 @kind int;
  #L1939be.  v1:= v0 * 31;
  #L1939c2.  v3:= v4.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L1939c6.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1939cc.  v3:= temp;
  #L1939ce.  v0:= v1 + v3 @kind int;
  #L1939d2.  v3:= v0 * 31;
  #L1939d6.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1939da.  if v1 == 0 then goto L193a44;
  #L1939de.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L1939e2.  call temp:= `hashCode`(v1) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L1939e8.  v1:= temp;
  #L1939ea.  v0:= v3 + v1 @kind int;
  #L1939ee.  v3:= v0 * 31;
  #L1939f2.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1939f6.  if v1 == 0 then goto L193a48;
  #L1939fa.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1939fe.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L193a04.  v1:= temp;
  #L193a06.  v0:= v3 + v1 @kind int;
  #L193a0a.  v3:= v0 * 31;
  #L193a0e.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L193a12.  if v1 == 0 then goto L193a4c;
  #L193a16.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L193a1a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L193a20.  v1:= temp;
  #L193a22.  v0:= v3 + v1 @kind int;
  #L193a26.  v1:= v0 * 31;
  #L193a2a.  v3:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L193a2e.  if v3 == 0 then goto L193a3e;
  #L193a32.  v2:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L193a36.  call temp:= `hashCode`(v2) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @kind virtual;
  #L193a3c.  v2:= temp;
  #L193a3e.  v0:= v1 + v2 @kind int;
  #L193a42.  return v0;
  #L193a44.  v1:= v2;
  #L193a46.  goto L1939ea;
  #L193a48.  v1:= v2;
  #L193a4a.  goto L193a06;
  #L193a4c.  v1:= v2;
  #L193a4e.  goto L193a22;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193a60.  v0:= v1.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L193a64.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193a78.  v0:= v1.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L193a7c.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193a90.  v0:= v1.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193a94.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193aa8.  v0:= v1.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L193aac.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193ac0.  v0:= v1.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L193ac4.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193ad8.  v0:= v1.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L193adc.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193af0.  v0:= v1.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L193af4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Address` v3 @kind this) @signature `Lokhttp3/Address;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L193b08.  v1:= new `java.lang.StringBuilder`;
  #L193b0c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L193b12.  v2:= "Address{" @kind object;
  #L193b16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b1c.  v1:= temp @kind object;
  #L193b1e.  v2:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193b22.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L193b28.  v2:= temp @kind object;
  #L193b2a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b30.  v1:= temp @kind object;
  #L193b32.  v2:= ":" @kind object;
  #L193b36.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b3c.  v1:= temp @kind object;
  #L193b3e.  v2:= v3.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193b42.  call temp:= `port`(v2) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L193b48.  v2:= temp;
  #L193b4a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b50.  v0:= temp @kind object;
  #L193b52.  v1:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193b56.  if v1 == 0 then goto L193b84;
  #L193b5a.  v1:= ", proxy=" @kind object;
  #L193b5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b64.  v1:= temp @kind object;
  #L193b66.  v2:= v3.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L193b6a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b70.  v1:= "}" @kind object;
  #L193b74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L193b80.  v1:= temp @kind object;
  #L193b82.  return v1 @kind object;
  #L193b84.  v1:= ", proxySelector=" @kind object;
  #L193b88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b8e.  v1:= temp @kind object;
  #L193b90.  v2:= v3.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L193b94.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193b9a.  goto L193b70;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L193bac.  v0:= v1.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L193bb0.  return v0 @kind object;
}

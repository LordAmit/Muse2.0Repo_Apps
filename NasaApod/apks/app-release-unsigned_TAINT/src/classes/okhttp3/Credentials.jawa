record `okhttp3.Credentials` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Credentials` v0 @kind this) @signature `Lokhttp3/Credentials;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L198870.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L198876.  return @kind void;
}
procedure `java.lang.String` `basic`(`java.lang.String` v1 @kind object @name `username`, `java.lang.String` v2 @kind object @name `password`) @signature `Lokhttp3/Credentials;.basic:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L198888.  v0:= `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` @kind object;
  #L19888c.  call temp:= `basic`(v1, v2, v0) @signature `Lokhttp3/Credentials;.basic:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L198892.  v0:= temp @kind object;
  #L198894.  return v0 @kind object;
}
procedure `java.lang.String` `basic`(`java.lang.String` v4 @kind object @name `username`, `java.lang.String` v5 @kind object @name `password`, `java.nio.charset.Charset` v6 @kind object @name `charset`) @signature `Lokhttp3/Credentials;.basic:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1988a8.  v2:= new `java.lang.StringBuilder`;
  #L1988ac.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1988b2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1988b8.  v2:= temp @kind object;
  #L1988ba.  v3:= ":" @kind object;
  #L1988be.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1988c4.  v2:= temp @kind object;
  #L1988c6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1988cc.  v2:= temp @kind object;
  #L1988ce.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1988d4.  v1:= temp @kind object;
  #L1988d6.  call temp:= `encodeString`(v1, v6) @signature `Lokio/ByteString;.encodeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/ByteString;` @kind static;
  #L1988dc.  v2:= temp @kind object;
  #L1988de.  call temp:= `base64`(v2) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L1988e4.  v0:= temp @kind object;
  #L1988e6.  v2:= new `java.lang.StringBuilder`;
  #L1988ea.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1988f0.  v3:= "Basic " @kind object;
  #L1988f4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1988fa.  v2:= temp @kind object;
  #L1988fc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L198902.  v2:= temp @kind object;
  #L198904.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19890a.  v2:= temp @kind object;
  #L19890c.  return v2 @kind object;
}

record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.SENT_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L193d30.  v0:= new `java.lang.StringBuilder`;
  #L193d34.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L193d3a.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L193d40.  v1:= temp @kind object;
  #L193d42.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L193d48.  v1:= temp @kind object;
  #L193d4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193d50.  v0:= temp @kind object;
  #L193d52.  v1:= "-Sent-Millis" @kind object;
  #L193d56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193d5c.  v0:= temp @kind object;
  #L193d5e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L193d64.  v0:= temp @kind object;
  #L193d66.  `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L193d6a.  v0:= new `java.lang.StringBuilder`;
  #L193d6e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L193d74.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L193d7a.  v1:= temp @kind object;
  #L193d7c.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L193d82.  v1:= temp @kind object;
  #L193d84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193d8a.  v0:= temp @kind object;
  #L193d8c.  v1:= "-Received-Millis" @kind object;
  #L193d90.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193d96.  v0:= temp @kind object;
  #L193d98.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L193d9e.  v0:= temp @kind object;
  #L193da0.  `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L193da4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L193db8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L193dbe.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L193dc4.  v0:= temp @kind object;
  #L193dc6.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193dcc.  v0:= temp @kind object;
  #L193dce.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L193dd4.  v0:= temp @kind object;
  #L193dd6.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L193dda.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L193de0.  v0:= temp @kind object;
  #L193de2.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L193de6.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L193dec.  v0:= temp @kind object;
  #L193dee.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L193df4.  v0:= temp @kind object;
  #L193df6.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L193dfa.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L193e00.  v0:= temp @kind object;
  #L193e02.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L193e06.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L193e0c.  v0:= temp;
  #L193e0e.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L193e12.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L193e18.  v0:= temp @kind object;
  #L193e1a.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L193e1e.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L193e24.  v0:= temp @kind object;
  #L193e26.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L193e2a.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L193e30.  v0:= temp @kind object;
  #L193e32.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L193e36.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L193e3c.  v0:= temp @kind wide;
  #L193e3e.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L193e42.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L193e48.  v0:= temp @kind wide;
  #L193e4a.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L193e4e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v22 @kind this, `okio.Source` v23 @kind object @name `in`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L193e60.  call `<init>`(v22) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #Try_start0.  
  #L193e66.  call temp:= `buffer`(v23) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L193e6c.  v14:= temp @kind object;
  #L193e6e.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193e74.  v19:= temp @kind object;
  #L193e76.  v0:= v19 @kind object;
  #L193e7a.  v1:= v22 @kind object;
  #L193e7e.  v1.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L193e82.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193e88.  v19:= temp @kind object;
  #L193e8a.  v0:= v19 @kind object;
  #L193e8e.  v1:= v22 @kind object;
  #L193e92.  v1.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L193e96.  v17:= new `okhttp3.Headers$Builder`;
  #L193e9a.  call `<init>`(v17) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L193ea0.  call temp:= `readInt`(v14) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L193ea6.  v18:= temp;
  #L193ea8.  v7:= 0I;
  #L193eaa.  v0:= v18;
  #L193eae.  if v7 >= v0 then goto L193ece;
  #L193eb2.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193eb8.  v19:= temp @kind object;
  #L193eba.  v0:= v17 @kind object;
  #L193ebe.  v1:= v19 @kind object;
  #L193ec2.  call temp:= `addLenient`(v0, v1) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L193ec8.  v7:= v7 + 1;
  #L193ecc.  goto L193eaa;
  #L193ece.  call temp:= `build`(v17) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L193ed4.  v19:= temp @kind object;
  #L193ed6.  v0:= v19 @kind object;
  #L193eda.  v1:= v22 @kind object;
  #L193ede.  v1.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L193ee2.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193ee8.  v19:= temp @kind object;
  #L193eea.  call temp:= `parse`(v19) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L193ef0.  v15:= temp @kind object;
  #L193ef2.  v0:= v15.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L193ef6.  v19:= v0 @kind object;
  #L193efa.  v0:= v19 @kind object;
  #L193efe.  v1:= v22 @kind object;
  #L193f02.  v1.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L193f06.  v0:= v15.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L193f0a.  v19:= v0;
  #L193f0e.  v0:= v19;
  #L193f12.  v1:= v22 @kind object;
  #L193f16.  v1.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L193f1a.  v0:= v15.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L193f1e.  v19:= v0 @kind object;
  #L193f22.  v0:= v19 @kind object;
  #L193f26.  v1:= v22 @kind object;
  #L193f2a.  v1.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L193f2e.  v12:= new `okhttp3.Headers$Builder`;
  #L193f32.  call `<init>`(v12) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L193f38.  call temp:= `readInt`(v14) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L193f3e.  v11:= temp;
  #L193f40.  v7:= 0I;
  #L193f42.  if v7 >= v11 then goto L193f5e;
  #L193f46.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193f4c.  v19:= temp @kind object;
  #L193f4e.  v0:= v19 @kind object;
  #L193f52.  call temp:= `addLenient`(v12, v0) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L193f58.  v7:= v7 + 1;
  #L193f5c.  goto L193f42;
  #L193f5e.  v19:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L193f62.  v0:= v19 @kind object;
  #L193f66.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L193f6c.  v13:= temp @kind object;
  #L193f6e.  v19:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L193f72.  v0:= v19 @kind object;
  #L193f76.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L193f7c.  v10:= temp @kind object;
  #L193f7e.  v19:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L193f82.  v0:= v19 @kind object;
  #L193f86.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L193f8c.  v19:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L193f90.  v0:= v19 @kind object;
  #L193f94.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L193f9a.  if v13 == 0 then goto L19404a;
  #L193f9e.  call temp:= `parseLong`(v13) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L193fa4.  v20:= temp @kind wide;
  #L193fa6.  v0:= v20 @kind wide;
  #L193faa.  v2:= v22 @kind object;
  #L193fae.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L193fb2.  if v10 == 0 then goto L194050;
  #L193fb6.  call temp:= `parseLong`(v10) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L193fbc.  v20:= temp @kind wide;
  #L193fbe.  v0:= v20 @kind wide;
  #L193fc2.  v2:= v22 @kind object;
  #L193fc6.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L193fca.  call temp:= `build`(v12) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L193fd0.  v19:= temp @kind object;
  #L193fd2.  v0:= v19 @kind object;
  #L193fd6.  v1:= v22 @kind object;
  #L193fda.  v1.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L193fde.  call temp:= `isHttps`(v22) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L193fe4.  v19:= temp;
  #L193fe6.  if v19 == 0 then goto L1940c0;
  #L193fea.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193ff0.  v4:= temp @kind object;
  #L193ff2.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L193ff8.  v19:= temp;
  #L193ffa.  if v19 <= 0 then goto L194056;
  #L193ffe.  v19:= new `java.io.IOException`;
  #L194002.  v20:= new `java.lang.StringBuilder`;
  #L194006.  call `<init>`(v20) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19400c.  v21:= "expected \"\" but was \"" @kind object;
  #L194010.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L194016.  v20:= temp @kind object;
  #L194018.  v0:= v20 @kind object;
  #L19401c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L194022.  v20:= temp @kind object;
  #L194024.  v21:= "\"" @kind object;
  #L194028.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19402e.  v20:= temp @kind object;
  #L194030.  call temp:= `toString`(v20) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L194036.  v20:= temp @kind object;
  #L194038.  call `<init>`(v19, v20) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19403e.  throw v19;
  #Try_end0.  
  #L194040.  v19:= Exception @type ^`java.lang.Throwable` @kind object;
  #L194042.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L194048.  throw v19;
  #L19404a.  v20:= 0L;
  #L19404e.  goto L193fa6;
  #L194050.  v20:= 0L;
  #L194054.  goto L193fbe;
  #Try_start1.  
  #L194056.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L19405c.  v6:= temp @kind object;
  #L19405e.  call temp:= `forJavaName`(v6) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L194064.  v5:= temp @kind object;
  #L194066.  v0:= v22 @kind object;
  #L19406a.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L194070.  v9:= temp @kind object;
  #L194072.  v0:= v22 @kind object;
  #L194076.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L19407c.  v8:= temp @kind object;
  #L19407e.  call temp:= `exhausted`(v14) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L194084.  v19:= temp;
  #L194086.  if v19 != 0 then goto L1940ba;
  #L19408a.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194090.  v19:= temp @kind object;
  #L194092.  call temp:= `forJavaName`(v19) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L194098.  v16:= temp @kind object;
  #L19409a.  v0:= v16 @kind object;
  #L19409e.  call temp:= `get`(v0, v5, v9, v8) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L1940a4.  v19:= temp @kind object;
  #L1940a6.  v0:= v19 @kind object;
  #L1940aa.  v1:= v22 @kind object;
  #L1940ae.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #Try_end1.  
  #L1940b2.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L1940b8.  return @kind void;
  #Try_start2.  
  #L1940ba.  v16:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L1940be.  goto L19409a;
  #L1940c0.  v19:= 0I;
  #L1940c4.  v0:= v19 @kind object;
  #L1940c8.  v1:= v22 @kind object;
  #L1940cc.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #Try_end2.  
  #L1940d0.  goto L1940b2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L194040;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L194040;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L194040;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L194100.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L194104.  v1:= "https://" @kind object;
  #L194108.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19410e.  v0:= temp;
  #L194110.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v9 @kind this, `okio.BufferedSource` v10 @kind object @name `source`) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L194124.  call temp:= `readInt`(v10) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L19412a.  v4:= temp;
  #L19412c.  v7:= -1I;
  #L19412e.  if v4 != v7 then goto L19413c;
  #L194132.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L194138.  v6:= temp @kind object;
  #L19413a.  return v6 @kind object;
  #Try_start0.  
  #L19413c.  v7:= "X.509" @kind object;
  #L194140.  call temp:= `getInstance`(v7) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L194146.  v1:= temp @kind object;
  #L194148.  v6:= new `java.util.ArrayList`;
  #L19414c.  call `<init>`(v6, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L194152.  v3:= 0I;
  #L194154.  if v3 >= v4 then goto L19413a;
  #L194158.  call temp:= `readUtf8LineStrict`(v10) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L19415e.  v5:= temp @kind object;
  #L194160.  v0:= new `okio.Buffer`;
  #L194164.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19416a.  call temp:= `decodeBase64`(v5) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L194170.  v7:= temp @kind object;
  #L194172.  call temp:= `write`(v0, v7) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L194178.  call temp:= `inputStream`(v0) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L19417e.  v7:= temp @kind object;
  #L194180.  call temp:= `generateCertificate`(v1, v7) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L194186.  v7:= temp @kind object;
  #L194188.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L19418e.  v3:= v3 + 1;
  #L194192.  goto L194154;
  #L194194.  v2:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L194196.  v7:= new `java.io.IOException`;
  #L19419a.  call temp:= `getMessage`(v2) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1941a0.  v8:= temp @kind object;
  #L1941a2.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1941a8.  throw v7;
  catch `java.security.cert.CertificateException` @[Try_start0..Try_end0] goto L194194;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v8 @kind this, `okio.BufferedSink` v9 @kind object @name `sink`, `java.util.List` v10 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #Try_start0.  
  #L1941cc.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1941d2.  v5:= temp;
  #L1941d4.  v6:= (`long`) v5 @kind i2l;
  #L1941d6.  call temp:= `writeDecimalLong`(v9, v6) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1941dc.  v5:= temp @kind object;
  #L1941de.  v6:= 10I;
  #L1941e2.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1941e8.  v2:= 0I;
  #L1941ea.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1941f0.  v4:= temp;
  #L1941f2.  if v2 >= v4 then goto L194248;
  #L1941f6.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1941fc.  v5:= temp @kind object;
  #L1941fe.  v5:= (`java.security.cert.Certificate`) v5 @kind object;
  #L194202.  call temp:= `getEncoded`(v5) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L194208.  v0:= temp @kind object;
  #L19420a.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L194210.  v5:= temp @kind object;
  #L194212.  call temp:= `base64`(v5) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L194218.  v3:= temp @kind object;
  #L19421a.  call temp:= `writeUtf8`(v9, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194220.  v5:= temp @kind object;
  #L194222.  v6:= 10I;
  #L194226.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #Try_end0.  
  #L19422c.  v2:= v2 + 1;
  #L194230.  goto L1941f2;
  #L194232.  v1:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L194234.  v5:= new `java.io.IOException`;
  #L194238.  call temp:= `getMessage`(v1) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19423e.  v6:= temp @kind object;
  #L194240.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L194246.  throw v5;
  #L194248.  return @kind void;
  catch `java.security.cert.CertificateEncodingException` @[Try_start0..Try_end0] goto L194232;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object @name `request`, `okhttp3.Response` v4 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19426c.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L194270.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L194276.  v1:= temp @kind object;
  #L194278.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19427e.  v1:= temp @kind object;
  #L194280.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L194286.  v0:= temp;
  #L194288.  if v0 == 0 then goto L1942b8;
  #L19428c.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L194290.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L194296.  v1:= temp @kind object;
  #L194298.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19429e.  v0:= temp;
  #L1942a0.  if v0 == 0 then goto L1942b8;
  #L1942a4.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1942a8.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L1942ae.  v0:= temp;
  #L1942b0.  if v0 == 0 then goto L1942b8;
  #L1942b4.  v0:= 1I;
  #L1942b6.  return v0;
  #L1942b8.  v0:= 0I;
  #L1942ba.  goto L1942b6;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v6 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v7 @kind object @name `snapshot`) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1942cc.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1942d0.  v4:= "Content-Type" @kind object;
  #L1942d4.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1942da.  v2:= temp @kind object;
  #L1942dc.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1942e0.  v4:= "Content-Length" @kind object;
  #L1942e4.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1942ea.  v1:= temp @kind object;
  #L1942ec.  v3:= new `okhttp3.Request$Builder`;
  #L1942f0.  call `<init>`(v3) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L1942f6.  v4:= v6.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L1942fa.  call temp:= `url`(v3, v4) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L194300.  v3:= temp @kind object;
  #L194302.  v4:= v6.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L194306.  v5:= 0I;
  #L194308.  call temp:= `method`(v3, v4, v5) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19430e.  v3:= temp @kind object;
  #L194310.  v4:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194314.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L19431a.  v3:= temp @kind object;
  #L19431c.  call temp:= `build`(v3) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L194322.  v0:= temp @kind object;
  #L194324.  v3:= new `okhttp3.Response$Builder`;
  #L194328.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L19432e.  call temp:= `request`(v3, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194334.  v3:= temp @kind object;
  #L194336.  v4:= v6.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L19433a.  call temp:= `protocol`(v3, v4) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194340.  v3:= temp @kind object;
  #L194342.  v4:= v6.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L194346.  call temp:= `code`(v3, v4) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L19434c.  v3:= temp @kind object;
  #L19434e.  v4:= v6.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L194352.  call temp:= `message`(v3, v4) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194358.  v3:= temp @kind object;
  #L19435a.  v4:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L19435e.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194364.  v3:= temp @kind object;
  #L194366.  v4:= new `okhttp3.Cache$CacheResponseBody`;
  #L19436a.  call `<init>`(v4, v7, v2, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L194370.  call temp:= `body`(v3, v4) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194376.  v3:= temp @kind object;
  #L194378.  v4:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19437c.  call temp:= `handshake`(v3, v4) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194382.  v3:= temp @kind object;
  #L194384.  v4:= v6.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L194388.  call temp:= `sentRequestAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L19438e.  v3:= temp @kind object;
  #L194390.  v4:= v6.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L194394.  call temp:= `receivedResponseAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L19439a.  v3:= temp @kind object;
  #L19439c.  call temp:= `build`(v3) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1943a2.  v3:= temp @kind object;
  #L1943a4.  return v3 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v8 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v9 @kind object @name `editor`) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1943b8.  v7:= 10I;
  #L1943bc.  v3:= 0I;
  #L1943be.  call temp:= `newSink`(v9, v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L1943c4.  v3:= temp @kind object;
  #L1943c6.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L1943cc.  v1:= temp @kind object;
  #L1943ce.  v3:= v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L1943d2.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1943d8.  v3:= temp @kind object;
  #L1943da.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1943e0.  v3:= v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L1943e4.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1943ea.  v3:= temp @kind object;
  #L1943ec.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1943f2.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1943f6.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1943fc.  v3:= temp;
  #L1943fe.  v4:= (`long`) v3 @kind i2l;
  #L194400.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L194406.  v3:= temp @kind object;
  #L194408.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19440e.  v0:= 0I;
  #L194410.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194414.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19441a.  v2:= temp;
  #L19441c.  if v0 >= v2 then goto L194460;
  #L194420.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194424.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19442a.  v3:= temp @kind object;
  #L19442c.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194432.  v3:= temp @kind object;
  #L194434.  v4:= ": " @kind object;
  #L194438.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19443e.  v3:= temp @kind object;
  #L194440.  v4:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194444.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19444a.  v4:= temp @kind object;
  #L19444c.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194452.  v3:= temp @kind object;
  #L194454.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19445a.  v0:= v0 + 1;
  #L19445e.  goto L19441c;
  #L194460.  v3:= new `okhttp3.internal.http.StatusLine`;
  #L194464.  v4:= v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L194468.  v5:= v8.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L19446c.  v6:= v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L194470.  call `<init>`(v3, v4, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L194476.  call temp:= `toString`(v3) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L19447c.  v3:= temp @kind object;
  #L19447e.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194484.  v3:= temp @kind object;
  #L194486.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19448c.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L194490.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L194496.  v3:= temp;
  #L194498.  v3:= v3 + 2;
  #L19449c.  v4:= (`long`) v3 @kind i2l;
  #L19449e.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1944a4.  v3:= temp @kind object;
  #L1944a6.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1944ac.  v0:= 0I;
  #L1944ae.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1944b2.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1944b8.  v2:= temp;
  #L1944ba.  if v0 >= v2 then goto L1944fe;
  #L1944be.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1944c2.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1944c8.  v3:= temp @kind object;
  #L1944ca.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1944d0.  v3:= temp @kind object;
  #L1944d2.  v4:= ": " @kind object;
  #L1944d6.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1944dc.  v3:= temp @kind object;
  #L1944de.  v4:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L1944e2.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1944e8.  v4:= temp @kind object;
  #L1944ea.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1944f0.  v3:= temp @kind object;
  #L1944f2.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1944f8.  v0:= v0 + 1;
  #L1944fc.  goto L1944ba;
  #L1944fe.  v3:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L194502.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194508.  v3:= temp @kind object;
  #L19450a.  v4:= ": " @kind object;
  #L19450e.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194514.  v3:= temp @kind object;
  #L194516.  v4:= v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L19451a.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L194520.  v3:= temp @kind object;
  #L194522.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194528.  v3:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L19452c.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194532.  v3:= temp @kind object;
  #L194534.  v4:= ": " @kind object;
  #L194538.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19453e.  v3:= temp @kind object;
  #L194540.  v4:= v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L194544.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L19454a.  v3:= temp @kind object;
  #L19454c.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194552.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L194558.  v3:= temp;
  #L19455a.  if v3 == 0 then goto L1945cc;
  #L19455e.  call temp:= `writeByte`(v1, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194564.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L194568.  call temp:= `cipherSuite`(v3) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L19456e.  v3:= temp @kind object;
  #L194570.  call temp:= `javaName`(v3) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L194576.  v3:= temp @kind object;
  #L194578.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19457e.  v3:= temp @kind object;
  #L194580.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194586.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19458a.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L194590.  v3:= temp @kind object;
  #L194592.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L194598.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L19459c.  call temp:= `localCertificates`(v3) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L1945a2.  v3:= temp @kind object;
  #L1945a4.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L1945aa.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L1945ae.  call temp:= `tlsVersion`(v3) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L1945b4.  v3:= temp @kind object;
  #L1945b6.  call temp:= `javaName`(v3) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L1945bc.  v3:= temp @kind object;
  #L1945be.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1945c4.  v3:= temp @kind object;
  #L1945c6.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1945cc.  call `close`(v1) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L1945d2.  return @kind void;
}

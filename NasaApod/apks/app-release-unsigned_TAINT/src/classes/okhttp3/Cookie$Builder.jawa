record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.domain` @AccessFlag ;
  `long` `okhttp3.Cookie$Builder.expiresAt` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.hostOnly` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.httpOnly` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.name` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.path` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.persistent` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.secure` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.value` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L197854.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19785a.  v0:= 253402300799999L;
  #L197864.  v2.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v0 @kind wide;
  #L197868.  v0:= "/" @kind object;
  #L19786c.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v0 @kind object;
  #L197870.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `domain`, `boolean` v6 @name `hostOnly`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L197884.  if v5 != 0 then goto L197898;
  #L197888.  v1:= new `java.lang.NullPointerException`;
  #L19788c.  v2:= "domain == null" @kind object;
  #L197890.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197896.  throw v1;
  #L197898.  call temp:= `canonicalizeHost`(v5) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19789e.  v0:= temp @kind object;
  #L1978a0.  if v0 != 0 then goto L1978d6;
  #L1978a4.  v1:= new `java.lang.IllegalArgumentException`;
  #L1978a8.  v2:= new `java.lang.StringBuilder`;
  #L1978ac.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1978b2.  v3:= "unexpected domain: " @kind object;
  #L1978b6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1978bc.  v2:= temp @kind object;
  #L1978be.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1978c4.  v2:= temp @kind object;
  #L1978c6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1978cc.  v2:= temp @kind object;
  #L1978ce.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1978d4.  throw v1;
  #L1978d6.  v4.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` := v0 @kind object;
  #L1978da.  v4.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` := v6 @kind boolean;
  #L1978de.  return v4 @kind object;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1978f0.  v0:= new `okhttp3.Cookie`;
  #L1978f4.  call `<init>`(v0, v1) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @kind direct;
  #L1978fa.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19790c.  v0:= 0I;
  #L19790e.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L197914.  v0:= temp @kind object;
  #L197916.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 @name `expiresAt`) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L197928.  v0:= 0L;
  #L19792c.  v0:= lcmp(v4, v0);
  #L197930.  if v0 > 0 then goto L197938;
  #L197934.  v4:= -9223372036854775808L;
  #L197938.  v0:= 253402300799999L;
  #L197942.  v0:= lcmp(v4, v0);
  #L197946.  if v0 <= 0 then goto L197954;
  #L19794a.  v4:= 253402300799999L;
  #L197954.  v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v4 @kind wide;
  #L197958.  v0:= 1I;
  #L19795a.  v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` := v0 @kind boolean;
  #L19795e.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L197970.  v0:= 1I;
  #L197972.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L197978.  v0:= temp @kind object;
  #L19797a.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19798c.  v0:= 1I;
  #L19798e.  v1.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L197992.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `name`) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1979a4.  if v3 != 0 then goto L1979b8;
  #L1979a8.  v0:= new `java.lang.NullPointerException`;
  #L1979ac.  v1:= "name == null" @kind object;
  #L1979b0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1979b6.  throw v0;
  #L1979b8.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1979be.  v0:= temp @kind object;
  #L1979c0.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1979c6.  v0:= temp;
  #L1979c8.  if v0 != 0 then goto L1979dc;
  #L1979cc.  v0:= new `java.lang.IllegalArgumentException`;
  #L1979d0.  v1:= "name is not trimmed" @kind object;
  #L1979d4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1979da.  throw v0;
  #L1979dc.  v2.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` := v3 @kind object;
  #L1979e0.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `path`) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1979f4.  v0:= "/" @kind object;
  #L1979f8.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1979fe.  v0:= temp;
  #L197a00.  if v0 != 0 then goto L197a14;
  #L197a04.  v0:= new `java.lang.IllegalArgumentException`;
  #L197a08.  v1:= "path must start with '/'" @kind object;
  #L197a0c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197a12.  throw v0;
  #L197a14.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v3 @kind object;
  #L197a18.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L197a2c.  v0:= 1I;
  #L197a2e.  v1.`okhttp3.Cookie$Builder.secure` @type ^`boolean` := v0 @kind boolean;
  #L197a32.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L197a44.  if v3 != 0 then goto L197a58;
  #L197a48.  v0:= new `java.lang.NullPointerException`;
  #L197a4c.  v1:= "value == null" @kind object;
  #L197a50.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197a56.  throw v0;
  #L197a58.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L197a5e.  v0:= temp @kind object;
  #L197a60.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L197a66.  v0:= temp;
  #L197a68.  if v0 != 0 then goto L197a7c;
  #L197a6c.  v0:= new `java.lang.IllegalArgumentException`;
  #L197a70.  v1:= "value is not trimmed" @kind object;
  #L197a74.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L197a7a.  throw v0;
  #L197a7c.  v2.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` := v3 @kind object;
  #L197a80.  return v2 @kind object;
}

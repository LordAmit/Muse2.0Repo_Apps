record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.Request.body` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Request.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Headers` `okhttp3.Request.headers` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Request.method` @AccessFlag FINAL;
  `java.lang.Object` `okhttp3.Request.tag` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Request.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.Request$Builder` v2 @kind object @name `builder`) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L19db0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19db12.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19db16.  v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L19db1a.  v0:= v2.`okhttp3.Request$Builder.method` @type ^`java.lang.String` @kind object;
  #L19db1e.  v1.`okhttp3.Request.method` @type ^`java.lang.String` := v0 @kind object;
  #L19db22.  v0:= v2.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L19db26.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L19db2c.  v0:= temp @kind object;
  #L19db2e.  v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L19db32.  v0:= v2.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19db36.  v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L19db3a.  v0:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L19db3e.  if v0 == 0 then goto L19db4c;
  #L19db42.  v0:= v2.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L19db46.  v1.`okhttp3.Request.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L19db4a.  return @kind void;
  #L19db4c.  v0:= v1 @kind object;
  #L19db4e.  goto L19db46;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19db60.  v0:= v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L19db64.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19db78.  v0:= v2.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L19db7c.  if v0 == 0 then goto L19db82;
  #L19db80.  return v0 @kind object;
  #L19db82.  v1:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19db86.  call temp:= `parse`(v1) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L19db8c.  v0:= temp @kind object;
  #L19db8e.  v2.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L19db92.  goto L19db80;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dba4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19dba8.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19dbae.  v0:= temp @kind object;
  #L19dbb0.  return v0 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dbc4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19dbc8.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L19dbce.  v0:= temp @kind object;
  #L19dbd0.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dbe4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L19dbe8.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dbfc.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19dc00.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L19dc06.  v0:= temp;
  #L19dc08.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dc1c.  v0:= v1.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19dc20.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dc34.  v0:= new `okhttp3.Request$Builder`;
  #L19dc38.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L19dc3e.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dc50.  v0:= v1.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19dc54.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19dc68.  v0:= new `java.lang.StringBuilder`;
  #L19dc6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19dc72.  v1:= "Request{method=" @kind object;
  #L19dc76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dc7c.  v0:= temp @kind object;
  #L19dc7e.  v1:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L19dc82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dc88.  v0:= temp @kind object;
  #L19dc8a.  v1:= ", url=" @kind object;
  #L19dc8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dc94.  v0:= temp @kind object;
  #L19dc96.  v1:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19dc9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dca0.  v0:= temp @kind object;
  #L19dca2.  v1:= ", tag=" @kind object;
  #L19dca6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dcac.  v1:= temp @kind object;
  #L19dcae.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19dcb2.  if v0 == v2 then goto L19dcd8;
  #L19dcb6.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L19dcba.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dcc0.  v0:= temp @kind object;
  #L19dcc2.  v1:= 125I;
  #L19dcc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19dccc.  v0:= temp @kind object;
  #L19dcce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19dcd4.  v0:= temp @kind object;
  #L19dcd6.  return v0 @kind object;
  #L19dcd8.  v0:= 0I;
  #L19dcda.  goto L19dcba;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19dcec.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L19dcf0.  return v0 @kind object;
}

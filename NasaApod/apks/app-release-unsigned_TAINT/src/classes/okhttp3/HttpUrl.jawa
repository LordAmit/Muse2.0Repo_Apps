record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl.fragment` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.host` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.password` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.pathSegments` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.HttpUrl.port` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl.queryNamesAndValues` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.scheme` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.url` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.username` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.HttpUrl.FORM_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `char`[] `@@okhttp3.HttpUrl.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_REENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_ENCODE_SET` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19b6dc.  v0:= 16I;
  #L19b6e0.  v0:= new `char`[v0];
  #L19b6e4.  goto L19b6f0;
  #L19b6ea.  `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L19b6ee.  return @kind void;
  #L19b6f0.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L19b717.  goto L19b6ea;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v4 @kind this, `okhttp3.HttpUrl$Builder` v5 @kind object @name `builder`) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19b728.  v1:= 0I;
  #L19b72a.  v3:= 0I;
  #L19b72c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b732.  v0:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19b736.  v4.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19b73a.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19b73e.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19b744.  v0:= temp @kind object;
  #L19b746.  v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` := v0 @kind object;
  #L19b74a.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19b74e.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19b754.  v0:= temp @kind object;
  #L19b756.  v4.`okhttp3.HttpUrl.password` @type ^`java.lang.String` := v0 @kind object;
  #L19b75a.  v0:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b75e.  v4.`okhttp3.HttpUrl.host` @type ^`java.lang.String` := v0 @kind object;
  #L19b762.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L19b768.  v0:= temp;
  #L19b76a.  v4.`okhttp3.HttpUrl.port` @type ^`int` := v0;
  #L19b76e.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b772.  call temp:= `percentDecode`(v4, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L19b778.  v0:= temp @kind object;
  #L19b77a.  v4.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` := v0 @kind object;
  #L19b77e.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b782.  if v0 == 0 then goto L19b7be;
  #L19b786.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b78a.  v2:= 1I;
  #L19b78c.  call temp:= `percentDecode`(v4, v0, v2) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L19b792.  v0:= temp @kind object;
  #L19b794.  v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19b798.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b79c.  if v0 == 0 then goto L19b7ac;
  #L19b7a0.  v0:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b7a4.  call temp:= `percentDecode`(v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19b7aa.  v1:= temp @kind object;
  #L19b7ac.  v4.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` := v1 @kind object;
  #L19b7b0.  call temp:= `toString`(v5) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b7b6.  v0:= temp @kind object;
  #L19b7b8.  v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` := v0 @kind object;
  #L19b7bc.  return @kind void;
  #L19b7be.  v0:= v1 @kind object;
  #L19b7c0.  goto L19b794;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v11 @kind object @name `input`, `int` v12 @name `pos`, `int` v13 @name `limit`, `java.lang.String` v14 @kind object @name `encodeSet`, `boolean` v15 @name `alreadyEncoded`, `boolean` v16 @name `strict`, `boolean` v17 @name `plusIsSpace`, `boolean` v18 @name `asciiOnly`, `java.nio.charset.Charset` v19 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L19b7d4.  v2:= v12;
  #L19b7d6.  if v2 >= v13 then goto L19b878;
  #L19b7da.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19b7e0.  v10:= temp;
  #L19b7e2.  v1:= 32I;
  #L19b7e6.  if v10 < v1 then goto L19b834;
  #L19b7ea.  v1:= 127I;
  #L19b7ee.  if v10 == v1 then goto L19b834;
  #L19b7f2.  v1:= 128I;
  #L19b7f6.  if v10 < v1 then goto L19b7fe;
  #L19b7fa.  if v18 != 0 then goto L19b834;
  #L19b7fe.  call temp:= `indexOf`(v14, v10) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19b804.  v1:= temp;
  #L19b806.  v3:= -1I;
  #L19b808.  if v1 != v3 then goto L19b834;
  #L19b80c.  v1:= 37I;
  #L19b810.  if v10 != v1 then goto L19b828;
  #L19b814.  if v15 == 0 then goto L19b834;
  #L19b818.  if v16 == 0 then goto L19b828;
  #L19b81c.  call temp:= `percentEncoded`(v11, v2, v13) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L19b822.  v1:= temp;
  #L19b824.  if v1 == 0 then goto L19b834;
  #L19b828.  v1:= 43I;
  #L19b82c.  if v10 != v1 then goto L19b86c;
  #L19b830.  if v17 == 0 then goto L19b86c;
  #L19b834.  v0:= new `okio.Buffer`;
  #L19b838.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19b83e.  call temp:= `writeUtf8`(v0, v11, v12, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L19b844.  v1:= v11 @kind object;
  #L19b846.  v3:= v13;
  #L19b848.  v4:= v14 @kind object;
  #L19b84a.  v5:= v15;
  #L19b84c.  v6:= v16;
  #L19b850.  v7:= v17;
  #L19b854.  v8:= v18;
  #L19b858.  v9:= v19 @kind object;
  #L19b85c.  call `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L19b862.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19b868.  v1:= temp @kind object;
  #L19b86a.  return v1 @kind object;
  #L19b86c.  call temp:= `charCount`(v10) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19b872.  v1:= temp;
  #L19b874.  v2:= v2 + v1 @kind int;
  #L19b876.  goto L19b7d6;
  #L19b878.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19b87e.  v1:= temp @kind object;
  #L19b880.  goto L19b86a;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object @name `input`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19b894.  v1:= 0I;
  #L19b896.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b89c.  v2:= temp;
  #L19b89e.  v8:= 0I;
  #L19b8a0.  v0:= v9 @kind object;
  #L19b8a2.  v3:= v10 @kind object;
  #L19b8a4.  v4:= v11;
  #L19b8a6.  v5:= v12;
  #L19b8a8.  v6:= v13;
  #L19b8aa.  v7:= v14;
  #L19b8ac.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b8b2.  v0:= temp @kind object;
  #L19b8b4.  return v0 @kind object;
}
procedure `java.lang.String` `canonicalize`(`java.lang.String` v9 @kind object @name `input`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`, `java.nio.charset.Charset` v15 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19b8c8.  v1:= 0I;
  #L19b8ca.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b8d0.  v2:= temp;
  #L19b8d2.  v0:= v9 @kind object;
  #L19b8d4.  v3:= v10 @kind object;
  #L19b8d6.  v4:= v11;
  #L19b8d8.  v5:= v12;
  #L19b8da.  v6:= v13;
  #L19b8dc.  v7:= v14;
  #L19b8de.  v8:= v15 @kind object;
  #L19b8e0.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b8e6.  v0:= temp @kind object;
  #L19b8e8.  return v0 @kind object;
}
procedure `void` `canonicalize`(`okio.Buffer` v6 @kind object @name `out`, `java.lang.String` v7 @kind object @name `input`, `int` v8 @name `pos`, `int` v9 @name `limit`, `java.lang.String` v10 @kind object @name `encodeSet`, `boolean` v11 @name `alreadyEncoded`, `boolean` v12 @name `strict`, `boolean` v13 @name `plusIsSpace`, `boolean` v14 @name `asciiOnly`, `java.nio.charset.Charset` v15 @kind object @name `charset`) @signature `Lokhttp3/HttpUrl;.canonicalize:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b8fc.  v2:= 0I;
  #L19b8fe.  v3:= v8;
  #L19b900.  if v3 >= v9 then goto L19ba32;
  #L19b904.  call temp:= `codePointAt`(v7, v3) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19b90a.  v1:= temp;
  #L19b90c.  if v11 == 0 then goto L19b93c;
  #L19b910.  v4:= 9I;
  #L19b914.  if v1 == v4 then goto L19b930;
  #L19b918.  v4:= 10I;
  #L19b91c.  if v1 == v4 then goto L19b930;
  #L19b920.  v4:= 12I;
  #L19b924.  if v1 == v4 then goto L19b930;
  #L19b928.  v4:= 13I;
  #L19b92c.  if v1 != v4 then goto L19b93c;
  #L19b930.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19b936.  v4:= temp;
  #L19b938.  v3:= v3 + v4 @kind int;
  #L19b93a.  goto L19b900;
  #L19b93c.  v4:= 43I;
  #L19b940.  if v1 != v4 then goto L19b95e;
  #L19b944.  if v13 == 0 then goto L19b95e;
  #L19b948.  if v11 == 0 then goto L19b958;
  #L19b94c.  v4:= "+" @kind object;
  #L19b950.  call temp:= `writeUtf8`(v6, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L19b956.  goto L19b930;
  #L19b958.  v4:= "%2B" @kind object;
  #L19b95c.  goto L19b950;
  #L19b95e.  v4:= 32I;
  #L19b962.  if v1 < v4 then goto L19b9a4;
  #L19b966.  v4:= 127I;
  #L19b96a.  if v1 == v4 then goto L19b9a4;
  #L19b96e.  v4:= 128I;
  #L19b972.  if v1 < v4 then goto L19b97a;
  #L19b976.  if v14 != 0 then goto L19b9a4;
  #L19b97a.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19b980.  v4:= temp;
  #L19b982.  v5:= -1I;
  #L19b984.  if v4 != v5 then goto L19b9a4;
  #L19b988.  v4:= 37I;
  #L19b98c.  if v1 != v4 then goto L19ba2a;
  #L19b990.  if v11 == 0 then goto L19b9a4;
  #L19b994.  if v12 == 0 then goto L19ba2a;
  #L19b998.  call temp:= `percentEncoded`(v7, v3, v9) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @kind static;
  #L19b99e.  v4:= temp;
  #L19b9a0.  if v4 != 0 then goto L19ba2a;
  #L19b9a4.  if v2 != 0 then goto L19b9b2;
  #L19b9a8.  v2:= new `okio.Buffer`;
  #L19b9ac.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19b9b2.  if v15 == 0 then goto L19b9c6;
  #L19b9b6.  v4:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L19b9ba.  call temp:= `equals`(v15, v4) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b9c0.  v4:= temp;
  #L19b9c2.  if v4 == 0 then goto L19ba18;
  #L19b9c6.  call temp:= `writeUtf8CodePoint`(v2, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19b9cc.  call temp:= `exhausted`(v2) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L19b9d2.  v4:= temp;
  #L19b9d4.  if v4 != 0 then goto L19b930;
  #L19b9d8.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L19b9de.  v4:= temp;
  #L19b9e0.  v0:= v4 ^& 255;
  #L19b9e4.  v4:= 37I;
  #L19b9e8.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19b9ee.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L19b9f2.  v5:= v0 ^> 4;
  #L19b9f6.  v5:= v5 ^& 15;
  #L19b9fa.  v4:= v4[v5] @kind char;
  #L19b9fe.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19ba04.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L19ba08.  v5:= v0 ^& 15;
  #L19ba0c.  v4:= v4[v5] @kind char;
  #L19ba10.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19ba16.  goto L19b9cc;
  #L19ba18.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19ba1e.  v4:= temp;
  #L19ba20.  v4:= v4 + v3 @kind int;
  #L19ba22.  call temp:= `writeString`(v2, v7, v3, v4, v15) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L19ba28.  goto L19b9cc;
  #L19ba2a.  call temp:= `writeUtf8CodePoint`(v6, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19ba30.  goto L19b930;
  #L19ba32.  return @kind void;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object @name `scheme`) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19ba44.  v0:= "http" @kind object;
  #L19ba48.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ba4e.  v0:= temp;
  #L19ba50.  if v0 == 0 then goto L19ba5a;
  #L19ba54.  v0:= 80I;
  #L19ba58.  return v0;
  #L19ba5a.  v0:= "https" @kind object;
  #L19ba5e.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ba64.  v0:= temp;
  #L19ba66.  if v0 == 0 then goto L19ba70;
  #L19ba6a.  v0:= 443I;
  #L19ba6e.  goto L19ba58;
  #L19ba70.  v0:= -1I;
  #L19ba72.  goto L19ba58;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v1 @kind object @name `uri`) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19ba84.  call temp:= `toString`(v1) @signature `Ljava/net/URI;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ba8a.  v0:= temp @kind object;
  #L19ba8c.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19ba92.  v0:= temp @kind object;
  #L19ba94.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v1 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19baa8.  call temp:= `toString`(v1) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L19baae.  v0:= temp @kind object;
  #L19bab0.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L19bab6.  v0:= temp @kind object;
  #L19bab8.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `getChecked`(`java.lang.String` v5 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.getChecked:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bacc.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19bad0.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19bad6.  v2:= 0I;
  #L19bad8.  call temp:= `parse`(v0, v2, v5) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19bade.  v1:= temp @kind object;
  #L19bae0.  v2:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L19bae4.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L19baea.  v3:= temp;
  #L19baec.  v2:= v2[v3];
  #L19baf0.  goto L19bb78;
  #L19baf6.  v2:= new `java.net.MalformedURLException`;
  #L19bafa.  v3:= new `java.lang.StringBuilder`;
  #L19bafe.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19bb04.  v4:= "Invalid URL: " @kind object;
  #L19bb08.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb0e.  v3:= temp @kind object;
  #L19bb10.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb16.  v3:= temp @kind object;
  #L19bb18.  v4:= " for " @kind object;
  #L19bb1c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb22.  v3:= temp @kind object;
  #L19bb24.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb2a.  v3:= temp @kind object;
  #L19bb2c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bb32.  v3:= temp @kind object;
  #L19bb34.  call `<init>`(v2, v3) @signature `Ljava/net/MalformedURLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bb3a.  throw v2;
  #L19bb3c.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19bb42.  v2:= temp @kind object;
  #L19bb44.  return v2 @kind object;
  #L19bb46.  v2:= new `java.net.UnknownHostException`;
  #L19bb4a.  v3:= new `java.lang.StringBuilder`;
  #L19bb4e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19bb54.  v4:= "Invalid host: " @kind object;
  #L19bb58.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb5e.  v3:= temp @kind object;
  #L19bb60.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bb66.  v3:= temp @kind object;
  #L19bb68.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bb6e.  v3:= temp @kind object;
  #L19bb70.  call `<init>`(v2, v3) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bb76.  throw v2;
  #L19bb78.  switch v2
                  | 1 => goto L19bb3c
                  | 2 => goto L19bb46
                  | else => goto L19baf6;
}
procedure `void` `namesAndValuesToQueryString`(`java.lang.StringBuilder` v5 @kind object @name `out`, `java.util.List` v6 @kind object) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bb98.  v0:= 0I;
  #L19bb9a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19bba0.  v2:= temp;
  #L19bba2.  if v0 >= v2 then goto L19bbf0;
  #L19bba6.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19bbac.  v1:= temp @kind object;
  #L19bbae.  v1:= (`java.lang.String`) v1 @kind object;
  #L19bbb2.  v4:= v0 + 1;
  #L19bbb6.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19bbbc.  v3:= temp @kind object;
  #L19bbbe.  v3:= (`java.lang.String`) v3 @kind object;
  #L19bbc2.  if v0 <= 0 then goto L19bbd0;
  #L19bbc6.  v4:= 38I;
  #L19bbca.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bbd0.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bbd6.  if v3 == 0 then goto L19bbea;
  #L19bbda.  v4:= 61I;
  #L19bbde.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bbe4.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bbea.  v0:= v0 + 2;
  #L19bbee.  goto L19bba2;
  #L19bbf0.  return @kind void;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v4 @kind object @name `url`) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19bc04.  v2:= 0I;
  #L19bc06.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19bc0a.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19bc10.  call temp:= `parse`(v0, v2, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19bc16.  v1:= temp @kind object;
  #L19bc18.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19bc1c.  if v1 != v3 then goto L19bc28;
  #L19bc20.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19bc26.  v2:= temp @kind object;
  #L19bc28.  return v2 @kind object;
}
procedure `void` `pathSegmentsToString`(`java.lang.StringBuilder` v3 @kind object @name `out`, `java.util.List` v4 @kind object) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19bc3c.  v0:= 0I;
  #L19bc3e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19bc44.  v1:= temp;
  #L19bc46.  if v0 >= v1 then goto L19bc6c;
  #L19bc4a.  v2:= 47I;
  #L19bc4e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bc54.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19bc5a.  v2:= temp @kind object;
  #L19bc5c.  v2:= (`java.lang.String`) v2 @kind object;
  #L19bc60.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19bc66.  v0:= v0 + 1;
  #L19bc6a.  goto L19bc46;
  #L19bc6c.  return @kind void;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v4 @kind object @name `encoded`, `int` v5 @name `pos`, `int` v6 @name `limit`, `boolean` v7 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19bc80.  v1:= v5;
  #L19bc82.  if v1 >= v6 then goto L19bcc8;
  #L19bc86.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bc8c.  v0:= temp;
  #L19bc8e.  v3:= 37I;
  #L19bc92.  if v0 == v3 then goto L19bca2;
  #L19bc96.  v3:= 43I;
  #L19bc9a.  if v0 != v3 then goto L19bcc2;
  #L19bc9e.  if v7 == 0 then goto L19bcc2;
  #L19bca2.  v2:= new `okio.Buffer`;
  #L19bca6.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19bcac.  call temp:= `writeUtf8`(v2, v4, v5, v1) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L19bcb2.  call `percentDecode`(v2, v4, v1, v6, v7) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L19bcb8.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L19bcbe.  v3:= temp @kind object;
  #L19bcc0.  return v3 @kind object;
  #L19bcc2.  v1:= v1 + 1;
  #L19bcc6.  goto L19bc82;
  #L19bcc8.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19bcce.  v3:= temp @kind object;
  #L19bcd0.  goto L19bcc0;
}
procedure `java.lang.String` `percentDecode`(`java.lang.String` v2 @kind object @name `encoded`, `boolean` v3 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L19bce4.  v0:= 0I;
  #L19bce6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19bcec.  v1:= temp;
  #L19bcee.  call temp:= `percentDecode`(v2, v0, v1, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L19bcf4.  v0:= temp @kind object;
  #L19bcf6.  return v0 @kind object;
}
procedure `java.util.List` `percentDecode`(`okhttp3.HttpUrl` v5 @kind this, `java.util.List` v6 @kind object, `boolean` v7 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bd08.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19bd0e.  v3:= temp;
  #L19bd10.  v1:= new `java.util.ArrayList`;
  #L19bd14.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19bd1a.  v0:= 0I;
  #L19bd1c.  if v0 >= v3 then goto L19bd48;
  #L19bd20.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19bd26.  v2:= temp @kind object;
  #L19bd28.  v2:= (`java.lang.String`) v2 @kind object;
  #L19bd2c.  if v2 == 0 then goto L19bd44;
  #L19bd30.  call temp:= `percentDecode`(v2, v7) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L19bd36.  v4:= temp @kind object;
  #L19bd38.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19bd3e.  v0:= v0 + 1;
  #L19bd42.  goto L19bd1c;
  #L19bd44.  v4:= 0I;
  #L19bd46.  goto L19bd38;
  #L19bd48.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19bd4e.  v4:= temp @kind object;
  #L19bd50.  return v4 @kind object;
}
procedure `void` `percentDecode`(`okio.Buffer` v6 @kind object @name `out`, `java.lang.String` v7 @kind object @name `encoded`, `int` v8 @name `pos`, `int` v9 @name `limit`, `boolean` v10 @name `plusIsSpace`) @signature `Lokhttp3/HttpUrl;.percentDecode:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19bd64.  v5:= -1I;
  #L19bd66.  v3:= v8;
  #L19bd68.  if v3 >= v9 then goto L19bdf0;
  #L19bd6c.  call temp:= `codePointAt`(v7, v3) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L19bd72.  v0:= temp;
  #L19bd74.  v4:= 37I;
  #L19bd78.  if v0 != v4 then goto L19bdd0;
  #L19bd7c.  v4:= v3 + 2;
  #L19bd80.  if v4 >= v9 then goto L19bdd0;
  #L19bd84.  v4:= v3 + 1;
  #L19bd88.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bd8e.  v4:= temp;
  #L19bd90.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19bd96.  v1:= temp;
  #L19bd98.  v4:= v3 + 2;
  #L19bd9c.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19bda2.  v4:= temp;
  #L19bda4.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19bdaa.  v2:= temp;
  #L19bdac.  if v1 == v5 then goto L19bde8;
  #L19bdb0.  if v2 == v5 then goto L19bde8;
  #L19bdb4.  v4:= v1 ^< 4;
  #L19bdb8.  v4:= v4 + v2 @kind int;
  #L19bdba.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19bdc0.  v3:= v3 + 2;
  #L19bdc4.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L19bdca.  v4:= temp;
  #L19bdcc.  v3:= v3 + v4 @kind int;
  #L19bdce.  goto L19bd68;
  #L19bdd0.  v4:= 43I;
  #L19bdd4.  if v0 != v4 then goto L19bde8;
  #L19bdd8.  if v10 == 0 then goto L19bde8;
  #L19bddc.  v4:= 32I;
  #L19bde0.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19bde6.  goto L19bdc4;
  #L19bde8.  call temp:= `writeUtf8CodePoint`(v6, v0) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L19bdee.  goto L19bdc4;
  #L19bdf0.  return @kind void;
}
procedure `boolean` `percentEncoded`(`java.lang.String` v3 @kind object @name `encoded`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl;.percentEncoded:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19be04.  v2:= -1I;
  #L19be06.  v0:= v4 + 2;
  #L19be0a.  if v0 >= v5 then goto L19be52;
  #L19be0e.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19be14.  v0:= temp;
  #L19be16.  v1:= 37I;
  #L19be1a.  if v0 != v1 then goto L19be52;
  #L19be1e.  v0:= v4 + 1;
  #L19be22.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19be28.  v0:= temp;
  #L19be2a.  call temp:= `decodeHexDigit`(v0) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19be30.  v0:= temp;
  #L19be32.  if v0 == v2 then goto L19be52;
  #L19be36.  v0:= v4 + 2;
  #L19be3a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19be40.  v0:= temp;
  #L19be42.  call temp:= `decodeHexDigit`(v0) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L19be48.  v0:= temp;
  #L19be4a.  if v0 == v2 then goto L19be52;
  #L19be4e.  v0:= 1I;
  #L19be50.  return v0;
  #L19be52.  v0:= 0I;
  #L19be54.  goto L19be50;
}
procedure `java.util.List` `queryStringToNamesAndValues`(`java.lang.String` v6 @kind object @name `encodedQuery`) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19be68.  v5:= -1I;
  #L19be6a.  v3:= new `java.util.ArrayList`;
  #L19be6e.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19be74.  v2:= 0I;
  #L19be76.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19be7c.  v4:= temp;
  #L19be7e.  if v2 > v4 then goto L19beec;
  #L19be82.  v4:= 38I;
  #L19be86.  call temp:= `indexOf`(v6, v4, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19be8c.  v0:= temp;
  #L19be8e.  if v0 != v5 then goto L19be9a;
  #L19be92.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19be98.  v0:= temp;
  #L19be9a.  v4:= 61I;
  #L19be9e.  call temp:= `indexOf`(v6, v4, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19bea4.  v1:= temp;
  #L19bea6.  if v1 == v5 then goto L19beae;
  #L19beaa.  if v1 <= v0 then goto L19beca;
  #L19beae.  call temp:= `substring`(v6, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19beb4.  v4:= temp @kind object;
  #L19beb6.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19bebc.  v4:= 0I;
  #L19bebe.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19bec4.  v2:= v0 + 1;
  #L19bec8.  goto L19be76;
  #L19beca.  call temp:= `substring`(v6, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19bed0.  v4:= temp @kind object;
  #L19bed2.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19bed8.  v4:= v1 + 1;
  #L19bedc.  call temp:= `substring`(v6, v4, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19bee2.  v4:= temp @kind object;
  #L19bee4.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19beea.  goto L19bec4;
  #L19beec.  return v3 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19bf00.  v1:= v3.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L19bf04.  if v1 != 0 then goto L19bf0c;
  #L19bf08.  v1:= 0I;
  #L19bf0a.  return v1 @kind object;
  #L19bf0c.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bf10.  v2:= 35I;
  #L19bf14.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19bf1a.  v1:= temp;
  #L19bf1c.  v0:= v1 + 1;
  #L19bf20.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bf24.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19bf2a.  v1:= temp @kind object;
  #L19bf2c.  goto L19bf0a;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bf40.  v2:= v5.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L19bf44.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19bf4a.  v2:= temp;
  #L19bf4c.  if v2 == 0 then goto L19bf56;
  #L19bf50.  v2:= "" @kind object;
  #L19bf54.  return v2 @kind object;
  #L19bf56.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bf5a.  v3:= 58I;
  #L19bf5e.  v4:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19bf62.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19bf68.  v4:= temp;
  #L19bf6a.  v4:= v4 + 3;
  #L19bf6e.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19bf74.  v2:= temp;
  #L19bf76.  v1:= v2 + 1;
  #L19bf7a.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bf7e.  v3:= 64I;
  #L19bf82.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19bf88.  v0:= temp;
  #L19bf8a.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bf8e.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19bf94.  v2:= temp @kind object;
  #L19bf96.  goto L19bf54;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bfa8.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bfac.  v3:= 47I;
  #L19bfb0.  v4:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19bfb4.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19bfba.  v4:= temp;
  #L19bfbc.  v4:= v4 + 3;
  #L19bfc0.  call temp:= `indexOf`(v2, v3, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19bfc6.  v1:= temp;
  #L19bfc8.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bfcc.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bfd0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19bfd6.  v3:= temp;
  #L19bfd8.  v4:= "?#" @kind object;
  #L19bfdc.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19bfe2.  v0:= temp;
  #L19bfe4.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19bfe8.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19bfee.  v2:= temp @kind object;
  #L19bff0.  return v2 @kind object;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v9 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19c004.  v8:= 47I;
  #L19c008.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c00c.  v6:= v9.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c010.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c016.  v6:= temp;
  #L19c018.  v6:= v6 + 3;
  #L19c01c.  call temp:= `indexOf`(v5, v8, v6) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L19c022.  v2:= temp;
  #L19c024.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c028.  v6:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c02c.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c032.  v6:= temp;
  #L19c034.  v7:= "?#" @kind object;
  #L19c038.  call temp:= `delimiterOffset`(v5, v2, v6, v7) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19c03e.  v1:= temp;
  #L19c040.  v3:= new `java.util.ArrayList`;
  #L19c044.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19c04a.  v0:= v2;
  #L19c04c.  if v0 >= v1 then goto L19c076;
  #L19c050.  v0:= v0 + 1;
  #L19c054.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c058.  call temp:= `delimiterOffset`(v5, v0, v1, v8) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19c05e.  v4:= temp;
  #L19c060.  v5:= v9.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c064.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c06a.  v5:= temp @kind object;
  #L19c06c.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c072.  v0:= v4;
  #L19c074.  goto L19c04c;
  #L19c076.  return v3 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c088.  v2:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c08c.  if v2 != 0 then goto L19c094;
  #L19c090.  v2:= 0I;
  #L19c092.  return v2 @kind object;
  #L19c094.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c098.  v3:= 63I;
  #L19c09c.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19c0a2.  v2:= temp;
  #L19c0a4.  v1:= v2 + 1;
  #L19c0a8.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c0ac.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c0b0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c0b6.  v3:= temp;
  #L19c0b8.  v4:= 35I;
  #L19c0bc.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19c0c2.  v0:= temp;
  #L19c0c4.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c0c8.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c0ce.  v2:= temp @kind object;
  #L19c0d0.  goto L19c092;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c0e4.  v2:= v5.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L19c0e8.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19c0ee.  v2:= temp;
  #L19c0f0.  if v2 == 0 then goto L19c0fa;
  #L19c0f4.  v2:= "" @kind object;
  #L19c0f8.  return v2 @kind object;
  #L19c0fa.  v2:= v5.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c0fe.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c104.  v2:= temp;
  #L19c106.  v1:= v2 + 3;
  #L19c10a.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c10e.  v3:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c112.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c118.  v3:= temp;
  #L19c11a.  v4:= ":@" @kind object;
  #L19c11e.  call temp:= `delimiterOffset`(v2, v1, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19c124.  v0:= temp;
  #L19c126.  v2:= v5.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c12a.  call temp:= `substring`(v2, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c130.  v2:= temp @kind object;
  #L19c132.  goto L19c0f8;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c144.  v0:= instanceof @variable v3 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L19c148.  if v0 == 0 then goto L19c168;
  #L19c14c.  v3:= (`okhttp3.HttpUrl`) v3 @kind object;
  #L19c150.  v0:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c154.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c158.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c15e.  v0:= temp;
  #L19c160.  if v0 == 0 then goto L19c168;
  #L19c164.  v0:= 1I;
  #L19c166.  return v0;
  #L19c168.  v0:= 0I;
  #L19c16a.  goto L19c166;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c17c.  v0:= v1.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L19c180.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c194.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c198.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19c19e.  v0:= temp;
  #L19c1a0.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c1b4.  v0:= v1.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19c1b8.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c1cc.  v0:= v2.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c1d0.  v1:= "https" @kind object;
  #L19c1d4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c1da.  v0:= temp;
  #L19c1dc.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19c1f0.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19c1f4.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19c1fa.  v1:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c1fe.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v1 @kind object;
  #L19c202.  call temp:= `encodedUsername`(v3) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19c208.  v1:= temp @kind object;
  #L19c20a.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v1 @kind object;
  #L19c20e.  call temp:= `encodedPassword`(v3) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19c214.  v1:= temp @kind object;
  #L19c216.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v1 @kind object;
  #L19c21a.  v1:= v3.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19c21e.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v1 @kind object;
  #L19c222.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19c226.  v2:= v3.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c22a.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19c230.  v2:= temp;
  #L19c232.  if v1 == v2 then goto L19c276;
  #L19c236.  v1:= v3.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19c23a.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v1;
  #L19c23e.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19c242.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19c248.  v1:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19c24c.  call temp:= `encodedPathSegments`(v3) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L19c252.  v2:= temp @kind object;
  #L19c254.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19c25a.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L19c260.  v1:= temp @kind object;
  #L19c262.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c268.  call temp:= `encodedFragment`(v3) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L19c26e.  v1:= temp @kind object;
  #L19c270.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L19c274.  return v0 @kind object;
  #L19c276.  v1:= -1I;
  #L19c278.  goto L19c23a;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this, `java.lang.String` v4 @kind object @name `link`) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19c28c.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19c290.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19c296.  call temp:= `parse`(v0, v3, v4) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @kind virtual;
  #L19c29c.  v1:= temp @kind object;
  #L19c29e.  v2:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19c2a2.  if v1 != v2 then goto L19c2a8;
  #L19c2a6.  return v0 @kind object;
  #L19c2a8.  v0:= 0I;
  #L19c2aa.  goto L19c2a6;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c2bc.  v0:= v1.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L19c2c0.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c2d4.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L19c2d8.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c2ec.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L19c2f0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c2f6.  v0:= temp;
  #L19c2f8.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c30c.  v0:= v1.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19c310.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c324.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c328.  if v1 != 0 then goto L19c330;
  #L19c32c.  v1:= 0I;
  #L19c32e.  return v1 @kind object;
  #L19c330.  v0:= new `java.lang.StringBuilder`;
  #L19c334.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c33a.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c33e.  call `namesAndValuesToQueryString`(v0, v1) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19c344.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c34a.  v1:= temp @kind object;
  #L19c34c.  goto L19c32e;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v4 @kind this, `java.lang.String` v5 @kind object @name `name`) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c360.  v2:= 0I;
  #L19c362.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c366.  if v3 != 0 then goto L19c36c;
  #L19c36a.  return v2 @kind object;
  #L19c36c.  v0:= 0I;
  #L19c36e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c372.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c378.  v1:= temp;
  #L19c37a.  if v0 >= v1 then goto L19c36a;
  #L19c37e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c382.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c388.  v3:= temp @kind object;
  #L19c38a.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c390.  v3:= temp;
  #L19c392.  if v3 == 0 then goto L19c3ac;
  #L19c396.  v2:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c39a.  v3:= v0 + 1;
  #L19c39e.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c3a4.  v2:= temp @kind object;
  #L19c3a6.  v2:= (`java.lang.String`) v2 @kind object;
  #L19c3aa.  goto L19c36a;
  #L19c3ac.  v0:= v0 + 2;
  #L19c3b0.  goto L19c37a;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c3c4.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c3c8.  if v0 != 0 then goto L19c3d8;
  #L19c3cc.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L19c3d0.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19c3d6.  throw v0;
  #L19c3d8.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c3dc.  v1:= v3 * 2;
  #L19c3e0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c3e6.  v0:= temp @kind object;
  #L19c3e8.  v0:= (`java.lang.String`) v0 @kind object;
  #L19c3ec.  return v0 @kind object;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c400.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c404.  if v3 != 0 then goto L19c412;
  #L19c408.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L19c40e.  v3:= temp @kind object;
  #L19c410.  return v3 @kind object;
  #L19c412.  v1:= new `java.util.LinkedHashSet`;
  #L19c416.  call `<init>`(v1) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L19c41c.  v0:= 0I;
  #L19c41e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c422.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c428.  v2:= temp;
  #L19c42a.  if v0 >= v2 then goto L19c446;
  #L19c42e.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c432.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c438.  v3:= temp @kind object;
  #L19c43a.  call temp:= `add`(v1, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c440.  v0:= v0 + 2;
  #L19c444.  goto L19c42a;
  #L19c446.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L19c44c.  v3:= temp @kind object;
  #L19c44e.  goto L19c410;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c460.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c464.  if v0 != 0 then goto L19c474;
  #L19c468.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L19c46c.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19c472.  throw v0;
  #L19c474.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c478.  v1:= v3 * 2;
  #L19c47c.  v1:= v1 + 1;
  #L19c480.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c486.  v0:= temp @kind object;
  #L19c488.  v0:= (`java.lang.String`) v0 @kind object;
  #L19c48c.  return v0 @kind object;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object @name `name`) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c4a0.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c4a4.  if v3 != 0 then goto L19c4b2;
  #L19c4a8.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L19c4ae.  v3:= temp @kind object;
  #L19c4b0.  return v3 @kind object;
  #L19c4b2.  v1:= new `java.util.ArrayList`;
  #L19c4b6.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19c4bc.  v0:= 0I;
  #L19c4be.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c4c2.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c4c8.  v2:= temp;
  #L19c4ca.  if v0 >= v2 then goto L19c502;
  #L19c4ce.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c4d2.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c4d8.  v3:= temp @kind object;
  #L19c4da.  call temp:= `equals`(v6, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c4e0.  v3:= temp;
  #L19c4e2.  if v3 == 0 then goto L19c4fc;
  #L19c4e6.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c4ea.  v4:= v0 + 1;
  #L19c4ee.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19c4f4.  v3:= temp @kind object;
  #L19c4f6.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c4fc.  v0:= v0 + 2;
  #L19c500.  goto L19c4ca;
  #L19c502.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19c508.  v3:= temp @kind object;
  #L19c50a.  goto L19c4b0;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c51c.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c520.  if v0 == 0 then goto L19c536;
  #L19c524.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19c528.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19c52e.  v0:= temp;
  #L19c530.  v0:= v0 / 2;
  #L19c534.  return v0;
  #L19c536.  v0:= 0I;
  #L19c538.  goto L19c534;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c54c.  v0:= "/..." @kind object;
  #L19c550.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c556.  v0:= temp @kind object;
  #L19c558.  v1:= "" @kind object;
  #L19c55c.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c562.  v0:= temp @kind object;
  #L19c564.  v1:= "" @kind object;
  #L19c568.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c56e.  v0:= temp @kind object;
  #L19c570.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19c576.  v0:= temp @kind object;
  #L19c578.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c57e.  v0:= temp @kind object;
  #L19c580.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v2 @kind this, `java.lang.String` v3 @kind object @name `link`) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c594.  call temp:= `newBuilder`(v2, v3) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c59a.  v0:= temp @kind object;
  #L19c59c.  if v0 == 0 then goto L19c5aa;
  #L19c5a0.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19c5a6.  v1:= temp @kind object;
  #L19c5a8.  return v1 @kind object;
  #L19c5aa.  v1:= 0I;
  #L19c5ac.  goto L19c5a8;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c5c0.  v0:= v1.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19c5c4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c5d8.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c5dc.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c5f0.  v0:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19c5f4.  call temp:= `verifyAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L19c5fa.  v0:= temp;
  #L19c5fc.  if v0 == 0 then goto L19c604;
  #L19c600.  v0:= 0I;
  #L19c602.  return v0 @kind object;
  #L19c604.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L19c60a.  v0:= temp @kind object;
  #L19c60c.  v1:= v2.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19c610.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19c616.  v0:= temp @kind object;
  #L19c618.  goto L19c602;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19c62c.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c632.  v4:= temp @kind object;
  #L19c634.  call temp:= `reencodeForUri`(v4) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19c63a.  v4:= temp @kind object;
  #L19c63c.  call temp:= `toString`(v4) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c642.  v3:= temp @kind object;
  #Try_start0.  
  #L19c644.  v4:= new `java.net.URI`;
  #L19c648.  call `<init>`(v4, v3) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L19c64e.  return v4 @kind object;
  #L19c650.  v0:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #Try_start1.  
  #L19c652.  v4:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L19c656.  v5:= "" @kind object;
  #L19c65a.  call temp:= `replaceAll`(v3, v4, v5) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19c660.  v2:= temp @kind object;
  #L19c662.  call temp:= `create`(v2) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #Try_end1.  
  #L19c668.  v4:= temp @kind object;
  #L19c66a.  goto L19c64e;
  #L19c66c.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L19c66e.  v4:= new `java.lang.RuntimeException`;
  #L19c672.  call `<init>`(v4, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19c678.  throw v4;
  catch `java.net.URISyntaxException` @[Try_start0..Try_end0] goto L19c650;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L19c66c;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L19c6a8.  v1:= new `java.net.URL`;
  #L19c6ac.  v2:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L19c6b0.  call `<init>`(v1, v2) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L19c6b6.  return v1 @kind object;
  #L19c6b8.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L19c6ba.  v1:= new `java.lang.RuntimeException`;
  #L19c6be.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19c6c4.  throw v1;
  catch `java.net.MalformedURLException` @[Try_start0..Try_end0] goto L19c6b8;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c6e8.  v0:= v1.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L19c6ec.  return v0 @kind object;
}

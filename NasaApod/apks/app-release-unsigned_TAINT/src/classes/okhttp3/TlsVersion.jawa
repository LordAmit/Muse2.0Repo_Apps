record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.javaName` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19ec50.  v7:= 4I;
  #L19ec52.  v6:= 3I;
  #L19ec54.  v5:= 2I;
  #L19ec56.  v4:= 1I;
  #L19ec58.  v3:= 0I;
  #L19ec5a.  v0:= new `okhttp3.TlsVersion`;
  #L19ec5e.  v1:= "TLS_1_3" @kind object;
  #L19ec62.  v2:= "TLSv1.3" @kind object;
  #L19ec66.  call `<init>`(v0, v1, v3, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19ec6c.  `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19ec70.  v0:= new `okhttp3.TlsVersion`;
  #L19ec74.  v1:= "TLS_1_2" @kind object;
  #L19ec78.  v2:= "TLSv1.2" @kind object;
  #L19ec7c.  call `<init>`(v0, v1, v4, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19ec82.  `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19ec86.  v0:= new `okhttp3.TlsVersion`;
  #L19ec8a.  v1:= "TLS_1_1" @kind object;
  #L19ec8e.  v2:= "TLSv1.1" @kind object;
  #L19ec92.  call `<init>`(v0, v1, v5, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19ec98.  `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19ec9c.  v0:= new `okhttp3.TlsVersion`;
  #L19eca0.  v1:= "TLS_1_0" @kind object;
  #L19eca4.  v2:= "TLSv1" @kind object;
  #L19eca8.  call `<init>`(v0, v1, v6, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19ecae.  `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19ecb2.  v0:= new `okhttp3.TlsVersion`;
  #L19ecb6.  v1:= "SSL_3_0" @kind object;
  #L19ecba.  v2:= "SSLv3" @kind object;
  #L19ecbe.  call `<init>`(v0, v1, v7, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L19ecc4.  `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L19ecc8.  v0:= 5I;
  #L19ecca.  v0:= new `okhttp3.TlsVersion`[v0];
  #L19ecce.  v1:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ecd2.  v0[v3]:= v1 @kind object;
  #L19ecd6.  v1:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ecda.  v0[v4]:= v1 @kind object;
  #L19ecde.  v1:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ece2.  v0[v5]:= v1 @kind object;
  #L19ece6.  v1:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ecea.  v0[v6]:= v1 @kind object;
  #L19ecee.  v1:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ecf2.  v0[v7]:= v1 @kind object;
  #L19ecf6.  `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] := v0 @kind object;
  #L19ecfa.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object @name `javaName`) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19ed0c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L19ed12.  v0.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L19ed16.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`java.lang.String` v3 @kind object @name `javaName`) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19ed28.  v0:= -1I;
  #L19ed2a.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19ed30.  v1:= temp;
  #L19ed32.  goto L19edf4;
  #L19ed38.  goto L19ee20;
  #L19ed3e.  v0:= new `java.lang.IllegalArgumentException`;
  #L19ed42.  v1:= new `java.lang.StringBuilder`;
  #L19ed46.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ed4c.  v2:= "Unexpected TLS version: " @kind object;
  #L19ed50.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ed56.  v1:= temp @kind object;
  #L19ed58.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ed5e.  v1:= temp @kind object;
  #L19ed60.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ed66.  v1:= temp @kind object;
  #L19ed68.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ed6e.  throw v0;
  #L19ed70.  v1:= "TLSv1.3" @kind object;
  #L19ed74.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ed7a.  v1:= temp;
  #L19ed7c.  if v1 == 0 then goto L19ed38;
  #L19ed80.  v0:= 0I;
  #L19ed82.  goto L19ed38;
  #L19ed84.  v1:= "TLSv1.2" @kind object;
  #L19ed88.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19ed8e.  v1:= temp;
  #L19ed90.  if v1 == 0 then goto L19ed38;
  #L19ed94.  v0:= 1I;
  #L19ed96.  goto L19ed38;
  #L19ed98.  v1:= "TLSv1.1" @kind object;
  #L19ed9c.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19eda2.  v1:= temp;
  #L19eda4.  if v1 == 0 then goto L19ed38;
  #L19eda8.  v0:= 2I;
  #L19edaa.  goto L19ed38;
  #L19edac.  v1:= "TLSv1" @kind object;
  #L19edb0.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19edb6.  v1:= temp;
  #L19edb8.  if v1 == 0 then goto L19ed38;
  #L19edbc.  v0:= 3I;
  #L19edbe.  goto L19ed38;
  #L19edc0.  v1:= "SSLv3" @kind object;
  #L19edc4.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19edca.  v1:= temp;
  #L19edcc.  if v1 == 0 then goto L19ed38;
  #L19edd0.  v0:= 4I;
  #L19edd2.  goto L19ed38;
  #L19edd4.  v0:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L19edd8.  return v0 @kind object;
  #L19edda.  v0:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L19edde.  goto L19edd8;
  #L19ede0.  v0:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L19ede4.  goto L19edd8;
  #L19ede6.  v0:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19edea.  goto L19edd8;
  #L19edec.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L19edf0.  goto L19edd8;
  #L19edf2.  
  #L19edf4.  switch v1
                  | -503070503 => goto L19ed98
                  | -503070502 => goto L19ed84
                  | -503070501 => goto L19ed70
                  | 79201641 => goto L19edc0
                  | 79923350 => goto L19edac
                  | else => goto L19ed38;
  #L19ee20.  switch v0
                  | 0 => goto L19edd4
                  | 1 => goto L19edda
                  | 2 => goto L19ede0
                  | 3 => goto L19ede6
                  | 4 => goto L19edec
                  | else => goto L19ed3e;
}
procedure `java.util.List` `forJavaNames`(`java.lang.String`[] v5 @kind object @name `tlsVersions`) @signature `Lokhttp3/TlsVersion;.forJavaNames:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19ee4c.  v0:= new `java.util.ArrayList`;
  #L19ee50.  v2:= length @variable v5;
  #L19ee52.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19ee58.  v3:= length @variable v5;
  #L19ee5a.  v2:= 0I;
  #L19ee5c.  if v2 >= v3 then goto L19ee78;
  #L19ee60.  v1:= v5[v2] @kind object;
  #L19ee64.  call temp:= `forJavaName`(v1) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L19ee6a.  v4:= temp @kind object;
  #L19ee6c.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19ee72.  v2:= v2 + 1;
  #L19ee76.  goto L19ee5c;
  #L19ee78.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19ee7e.  v2:= temp @kind object;
  #L19ee80.  return v2 @kind object;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19ee94.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L19ee98.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L19ee9e.  v0:= temp @kind object;
  #L19eea0.  v0:= (`okhttp3.TlsVersion`) v0 @kind object;
  #L19eea4.  return v0 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L19eeb8.  v0:= `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L19eebc.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L19eec2.  v0:= temp @kind object;
  #L19eec4.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L19eec8.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.TlsVersion` v1 @kind this) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19eedc.  v0:= v1.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` @kind object;
  #L19eee0.  return v0 @kind object;
}

record `okhttp3.HttpUrl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedFragment` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedPassword` @AccessFlag ;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedPathSegments` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.encodedUsername` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.host` @AccessFlag ;
  `int` `okhttp3.HttpUrl$Builder.port` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.scheme` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19a264.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19a26a.  v0:= "" @kind object;
  #L19a26e.  v2.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19a272.  v0:= "" @kind object;
  #L19a276.  v2.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L19a27a.  v0:= -1I;
  #L19a27c.  v2.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v0;
  #L19a280.  v0:= new `java.util.ArrayList`;
  #L19a284.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19a28a.  v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` := v0 @kind object;
  #L19a28e.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a292.  v1:= "" @kind object;
  #L19a296.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a29c.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `pathSegments`, `boolean` v8 @name `alreadyEncoded`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a2b0.  v2:= 0I;
  #L19a2b2.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a2b8.  v0:= temp;
  #L19a2ba.  v1:= "/\\" @kind object;
  #L19a2be.  call temp:= `delimiterOffset`(v7, v2, v0, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19a2c4.  v3:= temp;
  #L19a2c6.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a2cc.  v0:= temp;
  #L19a2ce.  if v3 >= v0 then goto L19a2f2;
  #L19a2d2.  v4:= 1I;
  #L19a2d4.  v0:= v6 @kind object;
  #L19a2d6.  v1:= v7 @kind object;
  #L19a2d8.  v5:= v8;
  #L19a2da.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19a2e0.  v2:= v3 + 1;
  #L19a2e4.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a2ea.  v0:= temp;
  #L19a2ec.  if v2 <= v0 then goto L19a2b2;
  #L19a2f0.  return v6 @kind object;
  #L19a2f2.  v4:= 0I;
  #L19a2f4.  goto L19a2d4;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `int` v4 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L19a308.  v1:= 0I;
  #L19a30a.  call temp:= `percentDecode`(v2, v3, v4, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L19a310.  v0:= temp @kind object;
  #L19a312.  call temp:= `canonicalizeHost`(v0) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19a318.  v1:= temp @kind object;
  #L19a31a.  return v1 @kind object;
}
procedure `boolean` `isDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19a32c.  v0:= "." @kind object;
  #L19a330.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a336.  v0:= temp;
  #L19a338.  if v0 != 0 then goto L19a34c;
  #L19a33c.  v0:= "%2e" @kind object;
  #L19a340.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a346.  v0:= temp;
  #L19a348.  if v0 == 0 then goto L19a350;
  #L19a34c.  v0:= 1I;
  #L19a34e.  return v0;
  #L19a350.  v0:= 0I;
  #L19a352.  goto L19a34e;
}
procedure `boolean` `isDotDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L19a364.  v0:= ".." @kind object;
  #L19a368.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a36e.  v0:= temp;
  #L19a370.  if v0 != 0 then goto L19a3a4;
  #L19a374.  v0:= "%2e." @kind object;
  #L19a378.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a37e.  v0:= temp;
  #L19a380.  if v0 != 0 then goto L19a3a4;
  #L19a384.  v0:= ".%2e" @kind object;
  #L19a388.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a38e.  v0:= temp;
  #L19a390.  if v0 != 0 then goto L19a3a4;
  #L19a394.  v0:= "%2e%2e" @kind object;
  #L19a398.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a39e.  v0:= temp;
  #L19a3a0.  if v0 == 0 then goto L19a3a8;
  #L19a3a4.  v0:= 1I;
  #L19a3a6.  return v0;
  #L19a3a8.  v0:= 0I;
  #L19a3aa.  goto L19a3a6;
}
procedure `int` `parsePort`(`java.lang.String` v13 @kind object @name `input`, `int` v14 @name `pos`, `int` v15 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L19a3bc.  v12:= -1I;
  #Try_start0.  
  #L19a3be.  v3:= "" @kind object;
  #L19a3c2.  v4:= 0I;
  #L19a3c4.  v5:= 0I;
  #L19a3c6.  v6:= 0I;
  #L19a3c8.  v7:= 1I;
  #L19a3ca.  v8:= 0I;
  #L19a3cc.  v0:= v13 @kind object;
  #L19a3ce.  v1:= v14;
  #L19a3d0.  v2:= v15;
  #L19a3d2.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a3d8.  v11:= temp @kind object;
  #L19a3da.  call temp:= `parseInt`(v11) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L19a3e0.  v10:= temp;
  #L19a3e2.  if v10 <= 0 then goto L19a3f2;
  #L19a3e6.  v0:= 65535I;
  #L19a3ec.  if v10 > v0 then goto L19a3f2;
  #L19a3f0.  return v10;
  #L19a3f2.  v10:= v12;
  #L19a3f4.  goto L19a3f0;
  #L19a3f6.  v9:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L19a3f8.  v10:= v12;
  #L19a3fa.  goto L19a3f0;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L19a3f6;
}
procedure `void` `pop`(`okhttp3.HttpUrl$Builder` v4 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19a41c.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a420.  v2:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a424.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a42a.  v2:= temp;
  #L19a42c.  v2:= v2 + -1;
  #L19a430.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19a436.  v0:= temp @kind object;
  #L19a438.  v0:= (`java.lang.String`) v0 @kind object;
  #L19a43c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19a442.  v1:= temp;
  #L19a444.  if v1 == 0 then goto L19a478;
  #L19a448.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a44c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19a452.  v1:= temp;
  #L19a454.  if v1 != 0 then goto L19a478;
  #L19a458.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a45c.  v2:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a460.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a466.  v2:= temp;
  #L19a468.  v2:= v2 + -1;
  #L19a46c.  v3:= "" @kind object;
  #L19a470.  call temp:= `set`(v1, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a476.  return @kind void;
  #L19a478.  v1:= v4.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a47c.  v2:= "" @kind object;
  #L19a480.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a486.  goto L19a476;
}
procedure `int` `portColonOffset`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19a498.  v0:= v4;
  #L19a49a.  if v0 >= v5 then goto L19a4cc;
  #L19a49e.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a4a4.  v1:= temp;
  #L19a4a6.  goto L19a4d0;
  #L19a4ac.  v0:= v0 + 1;
  #L19a4b0.  goto L19a49a;
  #L19a4b2.  v0:= v0 + 1;
  #L19a4b6.  if v0 >= v5 then goto L19a4ac;
  #L19a4ba.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a4c0.  v1:= temp;
  #L19a4c2.  v2:= 93I;
  #L19a4c6.  if v1 != v2 then goto L19a4b2;
  #L19a4ca.  goto L19a4ac;
  #L19a4cc.  v0:= v5;
  #L19a4ce.  return v0;
  #L19a4d0.  switch v1
                  | 58 => goto L19a4ce
                  | 91 => goto L19a4b2
                  | else => goto L19a4ac;
}
procedure `void` `push`(`okhttp3.HttpUrl$Builder` v10 @kind this, `java.lang.String` v11 @kind object @name `input`, `int` v12 @name `pos`, `int` v13 @name `limit`, `boolean` v14 @name `addTrailingSlash`, `boolean` v15 @name `alreadyEncoded`) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19a4f4.  v5:= 0I;
  #L19a4f6.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L19a4fa.  v7:= 1I;
  #L19a4fc.  v8:= 0I;
  #L19a4fe.  v0:= v11 @kind object;
  #L19a500.  v1:= v12;
  #L19a502.  v2:= v13;
  #L19a504.  v4:= v15;
  #L19a506.  v6:= v5;
  #L19a508.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19a50e.  v9:= temp @kind object;
  #L19a510.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L19a516.  v0:= temp;
  #L19a518.  if v0 == 0 then goto L19a51e;
  #L19a51c.  return @kind void;
  #L19a51e.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L19a524.  v0:= temp;
  #L19a526.  if v0 == 0 then goto L19a532;
  #L19a52a.  call `pop`(v10) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @kind direct;
  #L19a530.  goto L19a51c;
  #L19a532.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a536.  v1:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a53a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a540.  v1:= temp;
  #L19a542.  v1:= v1 + -1;
  #L19a546.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a54c.  v0:= temp @kind object;
  #L19a54e.  v0:= (`java.lang.String`) v0 @kind object;
  #L19a552.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19a558.  v0:= temp;
  #L19a55a.  if v0 == 0 then goto L19a58c;
  #L19a55e.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a562.  v1:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a566.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a56c.  v1:= temp;
  #L19a56e.  v1:= v1 + -1;
  #L19a572.  call temp:= `set`(v0, v1, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a578.  if v14 == 0 then goto L19a51c;
  #L19a57c.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a580.  v1:= "" @kind object;
  #L19a584.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a58a.  goto L19a51c;
  #L19a58c.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a590.  call temp:= `add`(v0, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a596.  goto L19a578;
}
procedure `void` `removeAllCanonicalQueryParameters`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `canonicalName`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L19a5a8.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a5ac.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a5b2.  v1:= temp;
  #L19a5b4.  v0:= v1 + -2;
  #L19a5b8.  if v0 < 0 then goto L19a602;
  #L19a5bc.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a5c0.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19a5c6.  v1:= temp @kind object;
  #L19a5c8.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19a5ce.  v1:= temp;
  #L19a5d0.  if v1 == 0 then goto L19a604;
  #L19a5d4.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a5d8.  v2:= v0 + 1;
  #L19a5dc.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19a5e2.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a5e6.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19a5ec.  v1:= v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a5f0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19a5f6.  v1:= temp;
  #L19a5f8.  if v1 == 0 then goto L19a604;
  #L19a5fc.  v1:= 0I;
  #L19a5fe.  v3.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v1 @kind object;
  #L19a602.  return @kind void;
  #L19a604.  v0:= v0 + -2;
  #L19a608.  goto L19a5b8;
}
procedure `void` `resolvePath`(`okhttp3.HttpUrl$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `input`, `int` v10 @name `pos`, `int` v11 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19a61c.  v5:= 1I;
  #L19a61e.  if v10 != v11 then goto L19a624;
  #L19a622.  return @kind void;
  #L19a624.  call temp:= `charAt`(v9, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a62a.  v6:= temp;
  #L19a62c.  v0:= 47I;
  #L19a630.  if v6 == v0 then goto L19a63c;
  #L19a634.  v0:= 92I;
  #L19a638.  if v6 != v0 then goto L19a686;
  #L19a63c.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a640.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19a646.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a64a.  v1:= "" @kind object;
  #L19a64e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a654.  v10:= v10 + 1;
  #L19a658.  v2:= v10;
  #L19a65a.  if v2 >= v11 then goto L19a622;
  #L19a65e.  v0:= "/\\" @kind object;
  #L19a662.  call temp:= `delimiterOffset`(v9, v2, v11, v0) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19a668.  v3:= temp;
  #L19a66a.  if v3 >= v11 then goto L19a6a6;
  #L19a66e.  v4:= v5;
  #L19a670.  v0:= v8 @kind object;
  #L19a672.  v1:= v9 @kind object;
  #L19a674.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19a67a.  v2:= v3;
  #L19a67c.  if v4 == 0 then goto L19a65a;
  #L19a680.  v2:= v2 + 1;
  #L19a684.  goto L19a65a;
  #L19a686.  v0:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a68a.  v1:= v8.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19a68e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19a694.  v1:= temp;
  #L19a696.  v1:= v1 + -1;
  #L19a69a.  v7:= "" @kind object;
  #L19a69e.  call temp:= `set`(v0, v1, v7) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19a6a4.  goto L19a658;
  #L19a6a6.  v4:= 0I;
  #L19a6a8.  goto L19a670;
}
procedure `int` `schemeDelimiterOffset`(`java.lang.String` v10 @kind object @name `input`, `int` v11 @name `pos`, `int` v12 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19a6bc.  v9:= 122I;
  #L19a6c0.  v8:= 97I;
  #L19a6c4.  v7:= 90I;
  #L19a6c8.  v6:= 65I;
  #L19a6cc.  v3:= -1I;
  #L19a6ce.  v4:= v12 - v11 @kind int;
  #L19a6d2.  v5:= 2I;
  #L19a6d4.  if v4 >= v5 then goto L19a6dc;
  #L19a6d8.  v2:= v3;
  #L19a6da.  return v2;
  #L19a6dc.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a6e2.  v1:= temp;
  #L19a6e4.  if v1 < v8 then goto L19a6ec;
  #L19a6e8.  if v1 <= v9 then goto L19a6f8;
  #L19a6ec.  if v1 < v6 then goto L19a6f4;
  #L19a6f0.  if v1 <= v7 then goto L19a6f8;
  #L19a6f4.  v2:= v3;
  #L19a6f6.  goto L19a6da;
  #L19a6f8.  v2:= v11 + 1;
  #L19a6fc.  if v2 >= v12 then goto L19a752;
  #L19a700.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a706.  v0:= temp;
  #L19a708.  if v0 < v8 then goto L19a710;
  #L19a70c.  if v0 <= v9 then goto L19a740;
  #L19a710.  if v0 < v6 then goto L19a718;
  #L19a714.  if v0 <= v7 then goto L19a740;
  #L19a718.  v4:= 48I;
  #L19a71c.  if v0 < v4 then goto L19a728;
  #L19a720.  v4:= 57I;
  #L19a724.  if v0 <= v4 then goto L19a740;
  #L19a728.  v4:= 43I;
  #L19a72c.  if v0 == v4 then goto L19a740;
  #L19a730.  v4:= 45I;
  #L19a734.  if v0 == v4 then goto L19a740;
  #L19a738.  v4:= 46I;
  #L19a73c.  if v0 != v4 then goto L19a746;
  #L19a740.  v2:= v2 + 1;
  #L19a744.  goto L19a6fc;
  #L19a746.  v4:= 58I;
  #L19a74a.  if v0 == v4 then goto L19a6da;
  #L19a74e.  v2:= v3;
  #L19a750.  goto L19a6da;
  #L19a752.  v2:= v3;
  #L19a754.  goto L19a6da;
}
procedure `int` `slashCount`(`java.lang.String` v3 @kind object @name `input`, `int` v4 @name `pos`, `int` v5 @name `limit`) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L19a768.  v1:= 0I;
  #L19a76a.  if v4 >= v5 then goto L19a790;
  #L19a76e.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19a774.  v0:= temp;
  #L19a776.  v2:= 92I;
  #L19a77a.  if v0 == v2 then goto L19a786;
  #L19a77e.  v2:= 47I;
  #L19a782.  if v0 != v2 then goto L19a790;
  #L19a786.  v1:= v1 + 1;
  #L19a78a.  v4:= v4 + 1;
  #L19a78e.  goto L19a76a;
  #L19a790.  return v1;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedPathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a7a4.  v2:= 0I;
  #L19a7a6.  if v7 != 0 then goto L19a7ba;
  #L19a7aa.  v0:= new `java.lang.NullPointerException`;
  #L19a7ae.  v1:= "encodedPathSegment == null" @kind object;
  #L19a7b2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a7b8.  throw v0;
  #L19a7ba.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a7c0.  v3:= temp;
  #L19a7c2.  v5:= 1I;
  #L19a7c4.  v0:= v6 @kind object;
  #L19a7c6.  v1:= v7 @kind object;
  #L19a7c8.  v4:= v2;
  #L19a7ca.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19a7d0.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegments`(`okhttp3.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `encodedPathSegments`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19a7e4.  if v3 != 0 then goto L19a7f8;
  #L19a7e8.  v0:= new `java.lang.NullPointerException`;
  #L19a7ec.  v1:= "encodedPathSegments == null" @kind object;
  #L19a7f0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a7f6.  throw v0;
  #L19a7f8.  v0:= 1I;
  #L19a7fa.  call temp:= `addPathSegments`(v2, v3, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L19a800.  v0:= temp @kind object;
  #L19a802.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `encodedName`, `java.lang.String` v9 @kind object @name `encodedValue`) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19a814.  v3:= 0I;
  #L19a816.  v2:= 1I;
  #L19a818.  if v8 != 0 then goto L19a82c;
  #L19a81c.  v0:= new `java.lang.NullPointerException`;
  #L19a820.  v1:= "encodedName == null" @kind object;
  #L19a824.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a82a.  throw v0;
  #L19a82c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a830.  if v0 != 0 then goto L19a842;
  #L19a834.  v0:= new `java.util.ArrayList`;
  #L19a838.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19a83e.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19a842.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a846.  v1:= " \"'<>#&=" @kind object;
  #L19a84a.  v0:= v8 @kind object;
  #L19a84c.  v4:= v2;
  #L19a84e.  v5:= v2;
  #L19a850.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a856.  v0:= temp @kind object;
  #L19a858.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a85e.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a862.  if v9 == 0 then goto L19a880;
  #L19a866.  v1:= " \"'<>#&=" @kind object;
  #L19a86a.  v0:= v9 @kind object;
  #L19a86c.  v4:= v2;
  #L19a86e.  v5:= v2;
  #L19a870.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a876.  v0:= temp @kind object;
  #L19a878.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a87e.  return v7 @kind object;
  #L19a880.  v0:= 0I;
  #L19a882.  goto L19a878;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `pathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19a894.  v2:= 0I;
  #L19a896.  if v7 != 0 then goto L19a8aa;
  #L19a89a.  v0:= new `java.lang.NullPointerException`;
  #L19a89e.  v1:= "pathSegment == null" @kind object;
  #L19a8a2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a8a8.  throw v0;
  #L19a8aa.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19a8b0.  v3:= temp;
  #L19a8b2.  v0:= v6 @kind object;
  #L19a8b4.  v1:= v7 @kind object;
  #L19a8b6.  v4:= v2;
  #L19a8b8.  v5:= v2;
  #L19a8ba.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L19a8c0.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `pathSegments`) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19a8d4.  if v3 != 0 then goto L19a8e8;
  #L19a8d8.  v0:= new `java.lang.NullPointerException`;
  #L19a8dc.  v1:= "pathSegments == null" @kind object;
  #L19a8e0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a8e6.  throw v0;
  #L19a8e8.  v0:= 0I;
  #L19a8ea.  call temp:= `addPathSegments`(v2, v3, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L19a8f0.  v0:= temp @kind object;
  #L19a8f2.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `addQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `name`, `java.lang.String` v9 @kind object @name `value`) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19a904.  v4:= 1I;
  #L19a906.  v2:= 0I;
  #L19a908.  if v8 != 0 then goto L19a91c;
  #L19a90c.  v0:= new `java.lang.NullPointerException`;
  #L19a910.  v1:= "name == null" @kind object;
  #L19a914.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a91a.  throw v0;
  #L19a91c.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a920.  if v0 != 0 then goto L19a932;
  #L19a924.  v0:= new `java.util.ArrayList`;
  #L19a928.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19a92e.  v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19a932.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a936.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19a93a.  v0:= v8 @kind object;
  #L19a93c.  v3:= v2;
  #L19a93e.  v5:= v4;
  #L19a940.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a946.  v0:= temp @kind object;
  #L19a948.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a94e.  v6:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19a952.  if v9 == 0 then goto L19a970;
  #L19a956.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19a95a.  v0:= v9 @kind object;
  #L19a95c.  v3:= v2;
  #L19a95e.  v5:= v4;
  #L19a960.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19a966.  v0:= temp @kind object;
  #L19a968.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a96e.  return v7 @kind object;
  #L19a970.  v0:= 0I;
  #L19a972.  goto L19a968;
}
procedure `okhttp3.HttpUrl` `build`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19a984.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19a988.  if v0 != 0 then goto L19a99c;
  #L19a98c.  v0:= new `java.lang.IllegalStateException`;
  #L19a990.  v1:= "scheme == null" @kind object;
  #L19a994.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a99a.  throw v0;
  #L19a99c.  v0:= v2.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19a9a0.  if v0 != 0 then goto L19a9b4;
  #L19a9a4.  v0:= new `java.lang.IllegalStateException`;
  #L19a9a8.  v1:= "host == null" @kind object;
  #L19a9ac.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19a9b2.  throw v0;
  #L19a9b4.  v0:= new `okhttp3.HttpUrl`;
  #L19a9b8.  call `<init>`(v0, v2) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @kind direct;
  #L19a9be.  return v0 @kind object;
}
procedure `int` `effectivePort`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L19a9d0.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L19a9d4.  v1:= -1I;
  #L19a9d6.  if v0 == v1 then goto L19a9e0;
  #L19a9da.  v0:= v2.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L19a9de.  return v0;
  #L19a9e0.  v0:= v2.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19a9e4.  call temp:= `defaultPort`(v0) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19a9ea.  v0:= temp;
  #L19a9ec.  goto L19a9de;
}
procedure `okhttp3.HttpUrl$Builder` `encodedFragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedFragment`) @signature `Lokhttp3/HttpUrl$Builder;.encodedFragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19aa00.  v3:= 0I;
  #L19aa02.  if v7 == 0 then goto L19aa20;
  #L19aa06.  v1:= "" @kind object;
  #L19aa0a.  v2:= 1I;
  #L19aa0c.  v0:= v7 @kind object;
  #L19aa0e.  v4:= v3;
  #L19aa10.  v5:= v3;
  #L19aa12.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19aa18.  v0:= temp @kind object;
  #L19aa1a.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L19aa1e.  return v6 @kind object;
  #L19aa20.  v0:= 0I;
  #L19aa22.  goto L19aa1a;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPassword`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedPassword`) @signature `Lokhttp3/HttpUrl$Builder;.encodedPassword:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19aa34.  v2:= 1I;
  #L19aa36.  v3:= 0I;
  #L19aa38.  if v7 != 0 then goto L19aa4c;
  #L19aa3c.  v0:= new `java.lang.NullPointerException`;
  #L19aa40.  v1:= "encodedPassword == null" @kind object;
  #L19aa44.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19aa4a.  throw v0;
  #L19aa4c.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19aa50.  v0:= v7 @kind object;
  #L19aa52.  v4:= v3;
  #L19aa54.  v5:= v2;
  #L19aa56.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19aa5c.  v0:= temp @kind object;
  #L19aa5e.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L19aa62.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPath`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `encodedPath`) @signature `Lokhttp3/HttpUrl$Builder;.encodedPath:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19aa74.  if v4 != 0 then goto L19aa88;
  #L19aa78.  v0:= new `java.lang.NullPointerException`;
  #L19aa7c.  v1:= "encodedPath == null" @kind object;
  #L19aa80.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19aa86.  throw v0;
  #L19aa88.  v0:= "/" @kind object;
  #L19aa8c.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19aa92.  v0:= temp;
  #L19aa94.  if v0 != 0 then goto L19aaca;
  #L19aa98.  v0:= new `java.lang.IllegalArgumentException`;
  #L19aa9c.  v1:= new `java.lang.StringBuilder`;
  #L19aaa0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19aaa6.  v2:= "unexpected encodedPath: " @kind object;
  #L19aaaa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aab0.  v1:= temp @kind object;
  #L19aab2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aab8.  v1:= temp @kind object;
  #L19aaba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19aac0.  v1:= temp @kind object;
  #L19aac2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19aac8.  throw v0;
  #L19aaca.  v0:= 0I;
  #L19aacc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19aad2.  v1:= temp;
  #L19aad4.  call `resolvePath`(v3, v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L19aada.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedQuery`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedQuery`) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19aaec.  v2:= 1I;
  #L19aaee.  if v7 == 0 then goto L19ab14;
  #L19aaf2.  v1:= " \"'<>#" @kind object;
  #L19aaf6.  v3:= 0I;
  #L19aaf8.  v0:= v7 @kind object;
  #L19aafa.  v4:= v2;
  #L19aafc.  v5:= v2;
  #L19aafe.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19ab04.  v0:= temp @kind object;
  #L19ab06.  call temp:= `queryStringToNamesAndValues`(v0) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19ab0c.  v0:= temp @kind object;
  #L19ab0e.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19ab12.  return v6 @kind object;
  #L19ab14.  v0:= 0I;
  #L19ab16.  goto L19ab0e;
}
procedure `okhttp3.HttpUrl$Builder` `encodedUsername`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedUsername`) @signature `Lokhttp3/HttpUrl$Builder;.encodedUsername:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ab28.  v2:= 1I;
  #L19ab2a.  v3:= 0I;
  #L19ab2c.  if v7 != 0 then goto L19ab40;
  #L19ab30.  v0:= new `java.lang.NullPointerException`;
  #L19ab34.  v1:= "encodedUsername == null" @kind object;
  #L19ab38.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ab3e.  throw v0;
  #L19ab40.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19ab44.  v0:= v7 @kind object;
  #L19ab46.  v4:= v3;
  #L19ab48.  v5:= v2;
  #L19ab4a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19ab50.  v0:= temp @kind object;
  #L19ab52.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19ab56.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `fragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `fragment`) @signature `Lokhttp3/HttpUrl$Builder;.fragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ab68.  v2:= 0I;
  #L19ab6a.  if v7 == 0 then goto L19ab88;
  #L19ab6e.  v1:= "" @kind object;
  #L19ab72.  v0:= v7 @kind object;
  #L19ab74.  v3:= v2;
  #L19ab76.  v4:= v2;
  #L19ab78.  v5:= v2;
  #L19ab7a.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19ab80.  v0:= temp @kind object;
  #L19ab82.  v6.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v0 @kind object;
  #L19ab86.  return v6 @kind object;
  #L19ab88.  v0:= 0I;
  #L19ab8a.  goto L19ab82;
}
procedure `okhttp3.HttpUrl$Builder` `host`(`okhttp3.HttpUrl$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `host`) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19ab9c.  if v5 != 0 then goto L19abb0;
  #L19aba0.  v1:= new `java.lang.NullPointerException`;
  #L19aba4.  v2:= "host == null" @kind object;
  #L19aba8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19abae.  throw v1;
  #L19abb0.  v1:= 0I;
  #L19abb2.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19abb8.  v2:= temp;
  #L19abba.  call temp:= `canonicalizeHost`(v5, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L19abc0.  v0:= temp @kind object;
  #L19abc2.  if v0 != 0 then goto L19abf8;
  #L19abc6.  v1:= new `java.lang.IllegalArgumentException`;
  #L19abca.  v2:= new `java.lang.StringBuilder`;
  #L19abce.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19abd4.  v3:= "unexpected host: " @kind object;
  #L19abd8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19abde.  v2:= temp @kind object;
  #L19abe0.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19abe6.  v2:= temp @kind object;
  #L19abe8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19abee.  v2:= temp @kind object;
  #L19abf0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19abf6.  throw v1;
  #L19abf8.  v4.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v0 @kind object;
  #L19abfc.  return v4 @kind object;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `parse`(`okhttp3.HttpUrl$Builder` v29 @kind this, `okhttp3.HttpUrl` v30 @kind object @name `base`, `java.lang.String` v31 @kind object @name `input`) @signature `Lokhttp3/HttpUrl$Builder;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;

  #L19ac10.  v3:= 0I;
  #L19ac12.  call temp:= `length`(v31) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ac18.  v4:= temp;
  #L19ac1a.  v0:= v31 @kind object;
  #L19ac1e.  call temp:= `skipLeadingAsciiWhitespace`(v0, v3, v4) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19ac24.  v5:= temp;
  #L19ac26.  call temp:= `length`(v31) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ac2c.  v3:= temp;
  #L19ac2e.  v0:= v31 @kind object;
  #L19ac32.  call temp:= `skipTrailingAsciiWhitespace`(v0, v5, v3) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L19ac38.  v24:= temp;
  #L19ac3a.  v0:= v31 @kind object;
  #L19ac3e.  v1:= v24;
  #L19ac42.  call temp:= `schemeDelimiterOffset`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @kind static;
  #L19ac48.  v27:= temp;
  #L19ac4a.  v3:= -1I;
  #L19ac4c.  v0:= v27;
  #L19ac50.  if v0 == v3 then goto L19ada8;
  #L19ac54.  v4:= 1I;
  #L19ac56.  v6:= "https:" @kind object;
  #L19ac5a.  v7:= 0I;
  #L19ac5c.  v8:= 6I;
  #L19ac5e.  v3:= v31 @kind object;
  #L19ac62.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19ac68.  v3:= temp;
  #L19ac6a.  if v3 == 0 then goto L19ad6a;
  #L19ac6e.  v3:= "https" @kind object;
  #L19ac72.  v0:= v29 @kind object;
  #L19ac76.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L19ac7a.  v3:= "https:" @kind object;
  #L19ac7e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ac84.  v3:= temp;
  #L19ac86.  v5:= v5 + v3 @kind int;
  #L19ac88.  v23:= 0I;
  #L19ac8c.  v22:= 0I;
  #L19ac90.  v0:= v31 @kind object;
  #L19ac94.  v1:= v24;
  #L19ac98.  call temp:= `slashCount`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @kind static;
  #L19ac9e.  v28:= temp;
  #L19aca0.  v3:= 2I;
  #L19aca2.  v0:= v28;
  #L19aca6.  if v0 >= v3 then goto L19acca;
  #L19acaa.  if v30 == 0 then goto L19acca;
  #L19acae.  v0:= v30 @kind object;
  #L19acb2.  v3:= v0.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19acb6.  v0:= v29 @kind object;
  #L19acba.  v4:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19acbe.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19acc4.  v3:= temp;
  #L19acc6.  if v3 != 0 then goto L19b010;
  #L19acca.  v5:= v5 + v28 @kind int;
  #L19acce.  v3:= "@/\\?#" @kind object;
  #L19acd2.  v0:= v31 @kind object;
  #L19acd6.  v1:= v24;
  #L19acda.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19ace0.  v21:= temp;
  #L19ace2.  v0:= v21;
  #L19ace6.  v1:= v24;
  #L19acea.  if v0 == v1 then goto L19adc6;
  #L19acee.  v0:= v31 @kind object;
  #L19acf2.  v1:= v21;
  #L19acf6.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19acfc.  v19:= temp;
  #L19acfe.  goto L19b0a8;
  #L19ad04.  goto L19acce;
  #L19ad06.  v0:= v31 @kind object;
  #L19ad0a.  v1:= v21;
  #L19ad0e.  call temp:= `portColonOffset`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @kind static;
  #L19ad14.  v26:= temp;
  #L19ad16.  v3:= v26 + 1;
  #L19ad1a.  v0:= v21;
  #L19ad1e.  if v3 >= v0 then goto L19aeea;
  #L19ad22.  v0:= v31 @kind object;
  #L19ad26.  v1:= v26;
  #L19ad2a.  call temp:= `canonicalizeHost`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L19ad30.  v3:= temp @kind object;
  #L19ad32.  v0:= v29 @kind object;
  #L19ad36.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L19ad3a.  v3:= v26 + 1;
  #L19ad3e.  v0:= v31 @kind object;
  #L19ad42.  v1:= v21;
  #L19ad46.  call temp:= `parsePort`(v0, v3, v1) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @kind static;
  #L19ad4c.  v3:= temp;
  #L19ad4e.  v0:= v29 @kind object;
  #L19ad52.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L19ad56.  v0:= v29 @kind object;
  #L19ad5a.  v3:= v0.`okhttp3.HttpUrl$Builder.port` @type ^`int`;
  #L19ad5e.  v4:= -1I;
  #L19ad60.  if v3 != v4 then goto L19af1a;
  #L19ad64.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19ad68.  return v3 @kind object;
  #L19ad6a.  v4:= 1I;
  #L19ad6c.  v6:= "http:" @kind object;
  #L19ad70.  v7:= 0I;
  #L19ad72.  v8:= 5I;
  #L19ad74.  v3:= v31 @kind object;
  #L19ad78.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L19ad7e.  v3:= temp;
  #L19ad80.  if v3 == 0 then goto L19ada2;
  #L19ad84.  v3:= "http" @kind object;
  #L19ad88.  v0:= v29 @kind object;
  #L19ad8c.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L19ad90.  v3:= "http:" @kind object;
  #L19ad94.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ad9a.  v3:= temp;
  #L19ad9c.  v5:= v5 + v3 @kind int;
  #L19ad9e.  goto L19ac88;
  #L19ada2.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19ada6.  goto L19ad68;
  #L19ada8.  if v30 == 0 then goto L19adc0;
  #L19adac.  v0:= v30 @kind object;
  #L19adb0.  v3:= v0.`okhttp3.HttpUrl.scheme` @type ^`java.lang.String` @kind object;
  #L19adb4.  v0:= v29 @kind object;
  #L19adb8.  v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v3 @kind object;
  #L19adbc.  goto L19ac88;
  #L19adc0.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19adc4.  goto L19ad68;
  #L19adc6.  v19:= -1I;
  #L19adca.  goto L19acfe;
  #L19adcc.  if v22 != 0 then goto L19ae8a;
  #L19add0.  v3:= 58I;
  #L19add4.  v0:= v31 @kind object;
  #L19add8.  v1:= v21;
  #L19addc.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19ade2.  v6:= temp;
  #L19ade4.  v7:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19ade8.  v8:= 1I;
  #L19adea.  v9:= 0I;
  #L19adec.  v10:= 0I;
  #L19adee.  v11:= 1I;
  #L19adf0.  v12:= 0I;
  #L19adf2.  v4:= v31 @kind object;
  #L19adf6.  call temp:= `canonicalize`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19adfc.  v20:= temp @kind object;
  #L19adfe.  if v23 == 0 then goto L19ae3c;
  #L19ae02.  v3:= new `java.lang.StringBuilder`;
  #L19ae06.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ae0c.  v0:= v29 @kind object;
  #L19ae10.  v4:= v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19ae14.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ae1a.  v3:= temp @kind object;
  #L19ae1c.  v4:= "%40" @kind object;
  #L19ae20.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ae26.  v3:= temp @kind object;
  #L19ae28.  v0:= v20 @kind object;
  #L19ae2c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19ae32.  v3:= temp @kind object;
  #L19ae34.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ae3a.  v20:= temp @kind object;
  #L19ae3c.  v0:= v20 @kind object;
  #L19ae40.  v1:= v29 @kind object;
  #L19ae44.  v1.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19ae48.  v0:= v21;
  #L19ae4c.  if v6 == v0 then goto L19ae7e;
  #L19ae50.  v22:= 1I;
  #L19ae54.  v8:= v6 + 1;
  #L19ae58.  v10:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19ae5c.  v11:= 1I;
  #L19ae5e.  v12:= 0I;
  #L19ae60.  v13:= 0I;
  #L19ae62.  v14:= 1I;
  #L19ae64.  v15:= 0I;
  #L19ae66.  v7:= v31 @kind object;
  #L19ae6a.  v9:= v21;
  #L19ae6e.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19ae74.  v3:= temp @kind object;
  #L19ae76.  v0:= v29 @kind object;
  #L19ae7a.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L19ae7e.  v23:= 1I;
  #L19ae82.  v5:= v21 + 1;
  #L19ae86.  goto L19acce;
  #L19ae8a.  v3:= new `java.lang.StringBuilder`;
  #L19ae8e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19ae94.  v0:= v29 @kind object;
  #L19ae98.  v4:= v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19ae9c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aea2.  v3:= temp @kind object;
  #L19aea4.  v4:= "%40" @kind object;
  #L19aea8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aeae.  v3:= temp @kind object;
  #L19aeb0.  v10:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19aeb4.  v11:= 1I;
  #L19aeb6.  v12:= 0I;
  #L19aeb8.  v13:= 0I;
  #L19aeba.  v14:= 1I;
  #L19aebc.  v15:= 0I;
  #L19aebe.  v7:= v31 @kind object;
  #L19aec2.  v8:= v5;
  #L19aec4.  v9:= v21;
  #L19aec8.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19aece.  v4:= temp @kind object;
  #L19aed0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19aed6.  v3:= temp @kind object;
  #L19aed8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19aede.  v3:= temp @kind object;
  #L19aee0.  v0:= v29 @kind object;
  #L19aee4.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L19aee8.  goto L19ae82;
  #L19aeea.  v0:= v31 @kind object;
  #L19aeee.  v1:= v26;
  #L19aef2.  call temp:= `canonicalizeHost`(v0, v5, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L19aef8.  v3:= temp @kind object;
  #L19aefa.  v0:= v29 @kind object;
  #L19aefe.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L19af02.  v0:= v29 @kind object;
  #L19af06.  v3:= v0.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19af0a.  call temp:= `defaultPort`(v3) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19af10.  v3:= temp;
  #L19af12.  v0:= v29 @kind object;
  #L19af16.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L19af1a.  v0:= v29 @kind object;
  #L19af1e.  v3:= v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19af22.  if v3 != 0 then goto L19af2e;
  #L19af26.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19af2a.  goto L19ad68;
  #L19af2e.  v5:= v21;
  #L19af32.  v3:= "?#" @kind object;
  #L19af36.  v0:= v31 @kind object;
  #L19af3a.  v1:= v24;
  #L19af3e.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L19af44.  v25:= temp;
  #L19af46.  v0:= v29 @kind object;
  #L19af4a.  v1:= v31 @kind object;
  #L19af4e.  v2:= v25;
  #L19af52.  call `resolvePath`(v0, v1, v5, v2) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L19af58.  v5:= v25;
  #L19af5c.  v0:= v24;
  #L19af60.  if v5 >= v0 then goto L19afbc;
  #L19af64.  v0:= v31 @kind object;
  #L19af68.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19af6e.  v3:= temp;
  #L19af70.  v4:= 63I;
  #L19af74.  if v3 != v4 then goto L19afbc;
  #L19af78.  v3:= 35I;
  #L19af7c.  v0:= v31 @kind object;
  #L19af80.  v1:= v24;
  #L19af84.  call temp:= `delimiterOffset`(v0, v5, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L19af8a.  v9:= temp;
  #L19af8c.  v8:= v5 + 1;
  #L19af90.  v10:= " \"'<>#" @kind object;
  #L19af94.  v11:= 1I;
  #L19af96.  v12:= 0I;
  #L19af98.  v13:= 1I;
  #L19af9a.  v14:= 1I;
  #L19af9c.  v15:= 0I;
  #L19af9e.  v7:= v31 @kind object;
  #L19afa2.  call temp:= `canonicalize`(v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19afa8.  v3:= temp @kind object;
  #L19afaa.  call temp:= `queryStringToNamesAndValues`(v3) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19afb0.  v3:= temp @kind object;
  #L19afb2.  v0:= v29 @kind object;
  #L19afb6.  v0.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v3 @kind object;
  #L19afba.  v5:= v9;
  #L19afbc.  v0:= v24;
  #L19afc0.  if v5 >= v0 then goto L19b008;
  #L19afc4.  v0:= v31 @kind object;
  #L19afc8.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19afce.  v3:= temp;
  #L19afd0.  v4:= 35I;
  #L19afd4.  if v3 != v4 then goto L19b008;
  #L19afd8.  v11:= v5 + 1;
  #L19afdc.  v13:= "" @kind object;
  #L19afe0.  v14:= 1I;
  #L19afe2.  v15:= 0I;
  #L19afe4.  v16:= 0I;
  #L19afe8.  v17:= 0I;
  #L19afec.  v18:= 0I;
  #L19aff0.  v10:= v31 @kind object;
  #L19aff4.  v12:= v24;
  #L19aff8.  call temp:= `canonicalize`(v10, v11, v12, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19affe.  v3:= temp @kind object;
  #L19b000.  v0:= v29 @kind object;
  #L19b004.  v0.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v3 @kind object;
  #L19b008.  v3:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L19b00c.  goto L19ad68;
  #L19b010.  call temp:= `encodedUsername`(v30) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19b016.  v3:= temp @kind object;
  #L19b018.  v0:= v29 @kind object;
  #L19b01c.  v0.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v3 @kind object;
  #L19b020.  call temp:= `encodedPassword`(v30) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19b026.  v3:= temp @kind object;
  #L19b028.  v0:= v29 @kind object;
  #L19b02c.  v0.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v3 @kind object;
  #L19b030.  v0:= v30 @kind object;
  #L19b034.  v3:= v0.`okhttp3.HttpUrl.host` @type ^`java.lang.String` @kind object;
  #L19b038.  v0:= v29 @kind object;
  #L19b03c.  v0.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` := v3 @kind object;
  #L19b040.  v0:= v30 @kind object;
  #L19b044.  v3:= v0.`okhttp3.HttpUrl.port` @type ^`int`;
  #L19b048.  v0:= v29 @kind object;
  #L19b04c.  v0.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v3;
  #L19b050.  v0:= v29 @kind object;
  #L19b054.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b058.  call `clear`(v3) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19b05e.  v0:= v29 @kind object;
  #L19b062.  v3:= v0.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b066.  call temp:= `encodedPathSegments`(v30) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L19b06c.  v4:= temp @kind object;
  #L19b06e.  call temp:= `addAll`(v3, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19b074.  v0:= v24;
  #L19b078.  if v5 == v0 then goto L19b090;
  #L19b07c.  v0:= v31 @kind object;
  #L19b080.  call temp:= `charAt`(v0, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19b086.  v3:= temp;
  #L19b088.  v4:= 35I;
  #L19b08c.  if v3 != v4 then goto L19af32;
  #L19b090.  call temp:= `encodedQuery`(v30) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L19b096.  v3:= temp @kind object;
  #L19b098.  v0:= v29 @kind object;
  #L19b09c.  call temp:= `encodedQuery`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b0a2.  goto L19af32;
  #L19b0a6.  
  #L19b0a8.  switch v19
                  | -1 => goto L19ad06
                  | 35 => goto L19ad06
                  | 47 => goto L19ad06
                  | 63 => goto L19ad06
                  | 64 => goto L19adcc
                  | 92 => goto L19ad06
                  | else => goto L19ad04;
}
procedure `okhttp3.HttpUrl$Builder` `password`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `password`) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b0ec.  v2:= 0I;
  #L19b0ee.  if v7 != 0 then goto L19b102;
  #L19b0f2.  v0:= new `java.lang.NullPointerException`;
  #L19b0f6.  v1:= "password == null" @kind object;
  #L19b0fa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b100.  throw v0;
  #L19b102.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19b106.  v5:= 1I;
  #L19b108.  v0:= v7 @kind object;
  #L19b10a.  v3:= v2;
  #L19b10c.  v4:= v2;
  #L19b10e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b114.  v0:= temp @kind object;
  #L19b116.  v6.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` := v0 @kind object;
  #L19b11a.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `port`(`okhttp3.HttpUrl$Builder` v3 @kind this, `int` v4 @name `port`) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19b12c.  if v4 <= 0 then goto L19b13a;
  #L19b130.  v0:= 65535I;
  #L19b136.  if v4 <= v0 then goto L19b16c;
  #L19b13a.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b13e.  v1:= new `java.lang.StringBuilder`;
  #L19b142.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b148.  v2:= "unexpected port: " @kind object;
  #L19b14c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b152.  v1:= temp @kind object;
  #L19b154.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b15a.  v1:= temp @kind object;
  #L19b15c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b162.  v1:= temp @kind object;
  #L19b164.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b16a.  throw v0;
  #L19b16c.  v3.`okhttp3.HttpUrl$Builder.port` @type ^`int` := v4;
  #L19b170.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `query`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `query`) @signature `Lokhttp3/HttpUrl$Builder;.query:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b184.  v4:= 1I;
  #L19b186.  v2:= 0I;
  #L19b188.  if v7 == 0 then goto L19b1ac;
  #L19b18c.  v1:= " \"'<>#" @kind object;
  #L19b190.  v0:= v7 @kind object;
  #L19b192.  v3:= v2;
  #L19b194.  v5:= v4;
  #L19b196.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b19c.  v0:= temp @kind object;
  #L19b19e.  call temp:= `queryStringToNamesAndValues`(v0) @signature `Lokhttp3/HttpUrl;.queryStringToNamesAndValues:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L19b1a4.  v0:= temp @kind object;
  #L19b1a6.  v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L19b1aa.  return v6 @kind object;
  #L19b1ac.  v0:= 0I;
  #L19b1ae.  goto L19b1a6;
}
procedure `okhttp3.HttpUrl$Builder` `reencodeForUri`(`okhttp3.HttpUrl$Builder` v14 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri:()Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L19b1c0.  v4:= 0I;
  #L19b1c2.  v2:= 1I;
  #L19b1c4.  v12:= 0I;
  #L19b1c6.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b1ca.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b1d0.  v13:= temp;
  #L19b1d2.  if v12 >= v13 then goto L19b206;
  #L19b1d6.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b1da.  call temp:= `get`(v1, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b1e0.  v0:= temp @kind object;
  #L19b1e2.  v0:= (`java.lang.String`) v0 @kind object;
  #L19b1e6.  v6:= v14.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b1ea.  v1:= "[]" @kind object;
  #L19b1ee.  v3:= v2;
  #L19b1f0.  v5:= v2;
  #L19b1f2.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b1f8.  v1:= temp @kind object;
  #L19b1fa.  call temp:= `set`(v6, v12, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19b200.  v12:= v12 + 1;
  #L19b204.  goto L19b1d2;
  #L19b206.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b20a.  if v1 == 0 then goto L19b258;
  #L19b20e.  v12:= 0I;
  #L19b210.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b214.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b21a.  v13:= temp;
  #L19b21c.  if v12 >= v13 then goto L19b258;
  #L19b220.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b224.  call temp:= `get`(v1, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b22a.  v5:= temp @kind object;
  #L19b22c.  v5:= (`java.lang.String`) v5 @kind object;
  #L19b230.  if v5 == 0 then goto L19b252;
  #L19b234.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b238.  v6:= "\\^`{|}" @kind object;
  #L19b23c.  v7:= v2;
  #L19b23e.  v8:= v2;
  #L19b240.  v9:= v2;
  #L19b242.  v10:= v2;
  #L19b244.  call temp:= `canonicalize`(v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b24a.  v3:= temp @kind object;
  #L19b24c.  call temp:= `set`(v1, v12, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19b252.  v12:= v12 + 1;
  #L19b256.  goto L19b21c;
  #L19b258.  v1:= v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b25c.  if v1 == 0 then goto L19b27c;
  #L19b260.  v6:= v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b264.  v7:= " \"#<>\\^`{|}" @kind object;
  #L19b268.  v8:= v2;
  #L19b26a.  v9:= v2;
  #L19b26c.  v10:= v4;
  #L19b26e.  v11:= v4;
  #L19b270.  call temp:= `canonicalize`(v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b276.  v1:= temp @kind object;
  #L19b278.  v14.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` := v1 @kind object;
  #L19b27c.  return v14 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllEncodedQueryParameters`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `encodedName`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b290.  v2:= 1I;
  #L19b292.  if v7 != 0 then goto L19b2a6;
  #L19b296.  v0:= new `java.lang.NullPointerException`;
  #L19b29a.  v1:= "encodedName == null" @kind object;
  #L19b29e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b2a4.  throw v0;
  #L19b2a6.  v0:= v6.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b2aa.  if v0 != 0 then goto L19b2b0;
  #L19b2ae.  return v6 @kind object;
  #L19b2b0.  v1:= " \"'<>#&=" @kind object;
  #L19b2b4.  v3:= 0I;
  #L19b2b6.  v0:= v7 @kind object;
  #L19b2b8.  v4:= v2;
  #L19b2ba.  v5:= v2;
  #L19b2bc.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b2c2.  v0:= temp @kind object;
  #L19b2c4.  call `removeAllCanonicalQueryParameters`(v6, v0) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L19b2ca.  goto L19b2ae;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object @name `name`) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19b2dc.  v4:= 1I;
  #L19b2de.  v2:= 0I;
  #L19b2e0.  if v8 != 0 then goto L19b2f4;
  #L19b2e4.  v0:= new `java.lang.NullPointerException`;
  #L19b2e8.  v1:= "name == null" @kind object;
  #L19b2ec.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b2f2.  throw v0;
  #L19b2f4.  v0:= v7.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b2f8.  if v0 != 0 then goto L19b2fe;
  #L19b2fc.  return v7 @kind object;
  #L19b2fe.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L19b302.  v0:= v8 @kind object;
  #L19b304.  v3:= v2;
  #L19b306.  v5:= v4;
  #L19b308.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b30e.  v6:= temp @kind object;
  #L19b310.  call `removeAllCanonicalQueryParameters`(v7, v6) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L19b316.  goto L19b2fc;
}
procedure `okhttp3.HttpUrl$Builder` `removePathSegment`(`okhttp3.HttpUrl$Builder` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/HttpUrl$Builder;.removePathSegment:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19b328.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b32c.  call temp:= `remove`(v0, v3) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19b332.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b336.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19b33c.  v0:= temp;
  #L19b33e.  if v0 == 0 then goto L19b350;
  #L19b342.  v0:= v2.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b346.  v1:= "" @kind object;
  #L19b34a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19b350.  return v2 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `scheme`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `scheme`) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19b364.  if v4 != 0 then goto L19b378;
  #L19b368.  v0:= new `java.lang.NullPointerException`;
  #L19b36c.  v1:= "scheme == null" @kind object;
  #L19b370.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b376.  throw v0;
  #L19b378.  v0:= "http" @kind object;
  #L19b37c.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19b382.  v0:= temp;
  #L19b384.  if v0 == 0 then goto L19b392;
  #L19b388.  v0:= "http" @kind object;
  #L19b38c.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19b390.  return v3 @kind object;
  #L19b392.  v0:= "https" @kind object;
  #L19b396.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19b39c.  v0:= temp;
  #L19b39e.  if v0 == 0 then goto L19b3ac;
  #L19b3a2.  v0:= "https" @kind object;
  #L19b3a6.  v3.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` := v0 @kind object;
  #L19b3aa.  goto L19b390;
  #L19b3ac.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b3b0.  v1:= new `java.lang.StringBuilder`;
  #L19b3b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b3ba.  v2:= "unexpected scheme: " @kind object;
  #L19b3be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b3c4.  v1:= temp @kind object;
  #L19b3c6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b3cc.  v1:= temp @kind object;
  #L19b3ce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b3d4.  v1:= temp @kind object;
  #L19b3d6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b3dc.  throw v0;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v10 @kind this, `int` v11 @name `index`, `java.lang.String` v12 @kind object @name `encodedPathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19b3f0.  v4:= 1I;
  #L19b3f2.  v1:= 0I;
  #L19b3f4.  if v12 != 0 then goto L19b408;
  #L19b3f8.  v0:= new `java.lang.NullPointerException`;
  #L19b3fc.  v1:= "encodedPathSegment == null" @kind object;
  #L19b400.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b406.  throw v0;
  #L19b408.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b40e.  v2:= temp;
  #L19b410.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L19b414.  v8:= 0I;
  #L19b416.  v0:= v12 @kind object;
  #L19b418.  v5:= v1;
  #L19b41a.  v6:= v1;
  #L19b41c.  v7:= v4;
  #L19b41e.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b424.  v9:= temp @kind object;
  #L19b426.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b42a.  call temp:= `set`(v0, v11, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19b430.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L19b436.  v0:= temp;
  #L19b438.  if v0 != 0 then goto L19b448;
  #L19b43c.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L19b442.  v0:= temp;
  #L19b444.  if v0 == 0 then goto L19b47a;
  #L19b448.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b44c.  v1:= new `java.lang.StringBuilder`;
  #L19b450.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b456.  v2:= "unexpected path segment: " @kind object;
  #L19b45a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b460.  v1:= temp @kind object;
  #L19b462.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b468.  v1:= temp @kind object;
  #L19b46a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b470.  v1:= temp @kind object;
  #L19b472.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b478.  throw v0;
  #L19b47a.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `encodedName`, `java.lang.String` v2 @kind object @name `encodedValue`) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19b48c.  call temp:= `removeAllEncodedQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b492.  call temp:= `addEncodedQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b498.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setPathSegment`(`okhttp3.HttpUrl$Builder` v10 @kind this, `int` v11 @name `index`, `java.lang.String` v12 @kind object @name `pathSegment`) @signature `Lokhttp3/HttpUrl$Builder;.setPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19b4ac.  v1:= 0I;
  #L19b4ae.  if v12 != 0 then goto L19b4c2;
  #L19b4b2.  v0:= new `java.lang.NullPointerException`;
  #L19b4b6.  v1:= "pathSegment == null" @kind object;
  #L19b4ba.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b4c0.  throw v0;
  #L19b4c2.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19b4c8.  v2:= temp;
  #L19b4ca.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L19b4ce.  v7:= 1I;
  #L19b4d0.  v8:= 0I;
  #L19b4d2.  v0:= v12 @kind object;
  #L19b4d4.  v4:= v1;
  #L19b4d6.  v5:= v1;
  #L19b4d8.  v6:= v1;
  #L19b4da.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L19b4e0.  v9:= temp @kind object;
  #L19b4e2.  call temp:= `isDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L19b4e8.  v0:= temp;
  #L19b4ea.  if v0 != 0 then goto L19b4fa;
  #L19b4ee.  call temp:= `isDotDot`(v10, v9) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L19b4f4.  v0:= temp;
  #L19b4f6.  if v0 == 0 then goto L19b52c;
  #L19b4fa.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b4fe.  v1:= new `java.lang.StringBuilder`;
  #L19b502.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b508.  v2:= "unexpected path segment: " @kind object;
  #L19b50c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b512.  v1:= temp @kind object;
  #L19b514.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b51a.  v1:= temp @kind object;
  #L19b51c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b522.  v1:= temp @kind object;
  #L19b524.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b52a.  throw v0;
  #L19b52c.  v0:= v10.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b530.  call temp:= `set`(v0, v11, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19b536.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object @name `name`, `java.lang.String` v2 @kind object @name `value`) @signature `Lokhttp3/HttpUrl$Builder;.setQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L19b548.  call temp:= `removeAllQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b54e.  call temp:= `addQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19b554.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl$Builder` v5 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19b568.  v4:= 58I;
  #L19b56c.  v1:= new `java.lang.StringBuilder`;
  #L19b570.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b576.  v2:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19b57a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b580.  v2:= "://" @kind object;
  #L19b584.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b58a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19b58e.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19b594.  v2:= temp;
  #L19b596.  if v2 == 0 then goto L19b5aa;
  #L19b59a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19b59e.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19b5a4.  v2:= temp;
  #L19b5a6.  if v2 != 0 then goto L19b5de;
  #L19b5aa.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` @kind object;
  #L19b5ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b5b4.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19b5b8.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L19b5be.  v2:= temp;
  #L19b5c0.  if v2 != 0 then goto L19b5d4;
  #L19b5c4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b5ca.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPassword` @type ^`java.lang.String` @kind object;
  #L19b5ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b5d4.  v2:= 64I;
  #L19b5d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b5de.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b5e2.  call temp:= `indexOf`(v2, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L19b5e8.  v2:= temp;
  #L19b5ea.  v3:= -1I;
  #L19b5ec.  if v2 == v3 then goto L19b67e;
  #L19b5f0.  v2:= 91I;
  #L19b5f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b5fa.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b5fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b604.  v2:= 93I;
  #L19b608.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b60e.  call temp:= `effectivePort`(v5) @signature `Lokhttp3/HttpUrl$Builder;.effectivePort:()I` @kind virtual;
  #L19b614.  v0:= temp;
  #L19b616.  v2:= v5.`okhttp3.HttpUrl$Builder.scheme` @type ^`java.lang.String` @kind object;
  #L19b61a.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L19b620.  v2:= temp;
  #L19b622.  if v0 == v2 then goto L19b632;
  #L19b626.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b62c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b632.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedPathSegments` @type ^`java.util.List` @kind object;
  #L19b636.  call `pathSegmentsToString`(v1, v2) @signature `Lokhttp3/HttpUrl;.pathSegmentsToString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19b63c.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b640.  if v2 == 0 then goto L19b658;
  #L19b644.  v2:= 63I;
  #L19b648.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b64e.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedQueryNamesAndValues` @type ^`java.util.List` @kind object;
  #L19b652.  call `namesAndValuesToQueryString`(v1, v2) @signature `Lokhttp3/HttpUrl;.namesAndValuesToQueryString:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L19b658.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b65c.  if v2 == 0 then goto L19b674;
  #L19b660.  v2:= 35I;
  #L19b664.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b66a.  v2:= v5.`okhttp3.HttpUrl$Builder.encodedFragment` @type ^`java.lang.String` @kind object;
  #L19b66e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b674.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b67a.  v2:= temp @kind object;
  #L19b67c.  return v2 @kind object;
  #L19b67e.  v2:= v5.`okhttp3.HttpUrl$Builder.host` @type ^`java.lang.String` @kind object;
  #L19b682.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b688.  goto L19b60e;
}
procedure `okhttp3.HttpUrl$Builder` `username`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object @name `username`) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19b69c.  v2:= 0I;
  #L19b69e.  if v7 != 0 then goto L19b6b2;
  #L19b6a2.  v0:= new `java.lang.NullPointerException`;
  #L19b6a6.  v1:= "username == null" @kind object;
  #L19b6aa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b6b0.  throw v0;
  #L19b6b2.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L19b6b6.  v5:= 1I;
  #L19b6b8.  v0:= v7 @kind object;
  #L19b6ba.  v3:= v2;
  #L19b6bc.  v4:= v2;
  #L19b6be.  call temp:= `canonicalize`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.canonicalize:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L19b6c4.  v0:= temp @kind object;
  #L19b6c6.  v6.`okhttp3.HttpUrl$Builder.encodedUsername` @type ^`java.lang.String` := v0 @kind object;
  #L19b6ca.  return v6 @kind object;
}

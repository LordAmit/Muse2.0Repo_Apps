record `okhttp3.Headers` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `okhttp3.Headers.namesAndValues` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Headers` v2 @kind this, `okhttp3.Headers$Builder` v3 @kind object @name `builder`) @signature `Lokhttp3/Headers;.<init>:(Lokhttp3/Headers$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L199a74.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L199a7a.  v0:= v3.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199a7e.  v1:= v3.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199a82.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L199a88.  v1:= temp;
  #L199a8a.  v1:= new `java.lang.String`[v1];
  #L199a8e.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L199a94.  v0:= temp @kind object;
  #L199a96.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L199a9a.  v2.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] := v0 @kind object;
  #L199a9e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Headers` v0 @kind this, `java.lang.String`[] v1 @kind object @name `namesAndValues`) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L199ab0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L199ab6.  v0.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] := v1 @kind object;
  #L199aba.  return @kind void;
}
procedure `java.lang.String` `get`(`java.lang.String`[] v2 @kind object @name `namesAndValues`, `java.lang.String` v3 @kind object @name `name`) @signature `Lokhttp3/Headers;.get:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L199acc.  v1:= length @variable v2;
  #L199ace.  v0:= v1 + -2;
  #L199ad2.  if v0 < 0 then goto L199af6;
  #L199ad6.  v1:= v2[v0] @kind object;
  #L199ada.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L199ae0.  v1:= temp;
  #L199ae2.  if v1 == 0 then goto L199af0;
  #L199ae6.  v1:= v0 + 1;
  #L199aea.  v1:= v2[v1] @kind object;
  #L199aee.  return v1 @kind object;
  #L199af0.  v0:= v0 + -2;
  #L199af4.  goto L199ad2;
  #L199af6.  v1:= 0I;
  #L199af8.  goto L199aee;
}
procedure `okhttp3.Headers` `of`(`java.util.Map` v9 @kind object) @signature `Lokhttp3/Headers;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L199b0c.  v8:= 0I;
  #L199b0e.  v7:= -1I;
  #L199b10.  if v9 != 0 then goto L199b24;
  #L199b14.  v5:= new `java.lang.NullPointerException`;
  #L199b18.  v6:= "headers == null" @kind object;
  #L199b1c.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199b22.  throw v5;
  #L199b24.  call temp:= `size`(v9) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L199b2a.  v5:= temp;
  #L199b2c.  v5:= v5 * 2;
  #L199b30.  v3:= new `java.lang.String`[v5];
  #L199b34.  v1:= 0I;
  #L199b36.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L199b3c.  v5:= temp @kind object;
  #L199b3e.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L199b44.  v6:= temp @kind object;
  #L199b46.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L199b4c.  v5:= temp;
  #L199b4e.  if v5 == 0 then goto L199c2a;
  #L199b52.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L199b58.  v0:= temp @kind object;
  #L199b5a.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L199b5e.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L199b64.  v5:= temp @kind object;
  #L199b66.  if v5 == 0 then goto L199b76;
  #L199b6a.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L199b70.  v5:= temp @kind object;
  #L199b72.  if v5 != 0 then goto L199b86;
  #L199b76.  v5:= new `java.lang.IllegalArgumentException`;
  #L199b7a.  v6:= "Headers cannot be null" @kind object;
  #L199b7e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199b84.  throw v5;
  #L199b86.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L199b8c.  v5:= temp @kind object;
  #L199b8e.  v5:= (`java.lang.String`) v5 @kind object;
  #L199b92.  call temp:= `trim`(v5) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L199b98.  v2:= temp @kind object;
  #L199b9a.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L199ba0.  v5:= temp @kind object;
  #L199ba2.  v5:= (`java.lang.String`) v5 @kind object;
  #L199ba6.  call temp:= `trim`(v5) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L199bac.  v4:= temp @kind object;
  #L199bae.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199bb4.  v5:= temp;
  #L199bb6.  if v5 == 0 then goto L199bd2;
  #L199bba.  call temp:= `indexOf`(v2, v8) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L199bc0.  v5:= temp;
  #L199bc2.  if v5 != v7 then goto L199bd2;
  #L199bc6.  call temp:= `indexOf`(v4, v8) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L199bcc.  v5:= temp;
  #L199bce.  if v5 == v7 then goto L199c18;
  #L199bd2.  v5:= new `java.lang.IllegalArgumentException`;
  #L199bd6.  v6:= new `java.lang.StringBuilder`;
  #L199bda.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199be0.  v7:= "Unexpected header: " @kind object;
  #L199be4.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199bea.  v6:= temp @kind object;
  #L199bec.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199bf2.  v6:= temp @kind object;
  #L199bf4.  v7:= ": " @kind object;
  #L199bf8.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199bfe.  v6:= temp @kind object;
  #L199c00.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199c06.  v6:= temp @kind object;
  #L199c08.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199c0e.  v6:= temp @kind object;
  #L199c10.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199c16.  throw v5;
  #L199c18.  v3[v1]:= v2 @kind object;
  #L199c1c.  v5:= v1 + 1;
  #L199c20.  v3[v5]:= v4 @kind object;
  #L199c24.  v1:= v1 + 2;
  #L199c28.  goto L199b46;
  #L199c2a.  v5:= new `okhttp3.Headers`;
  #L199c2e.  call `<init>`(v5, v3) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @kind direct;
  #L199c34.  return v5 @kind object;
}
procedure `okhttp3.Headers` `of`(`java.lang.String`[] v6 @kind object @name `namesAndValues`) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199c48.  v5:= 0I;
  #L199c4a.  v4:= -1I;
  #L199c4c.  if v6 != 0 then goto L199c60;
  #L199c50.  v3:= new `java.lang.NullPointerException`;
  #L199c54.  v4:= "namesAndValues == null" @kind object;
  #L199c58.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199c5e.  throw v3;
  #L199c60.  v3:= length @variable v6;
  #L199c62.  v3:= v3 %% 2;
  #L199c66.  if v3 == 0 then goto L199c7a;
  #L199c6a.  v3:= new `java.lang.IllegalArgumentException`;
  #L199c6e.  v4:= "Expected alternating header names and values" @kind object;
  #L199c72.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199c78.  throw v3;
  #L199c7a.  call temp:= `clone`(v6) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L199c80.  v6:= temp @kind object;
  #L199c82.  v6:= (`java.lang.String`[]) v6 @kind object;
  #L199c86.  v0:= 0I;
  #L199c88.  v3:= length @variable v6;
  #L199c8a.  if v0 >= v3 then goto L199cbc;
  #L199c8e.  v3:= v6[v0] @kind object;
  #L199c92.  if v3 != 0 then goto L199ca6;
  #L199c96.  v3:= new `java.lang.IllegalArgumentException`;
  #L199c9a.  v4:= "Headers cannot be null" @kind object;
  #L199c9e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199ca4.  throw v3;
  #L199ca6.  v3:= v6[v0] @kind object;
  #L199caa.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L199cb0.  v3:= temp @kind object;
  #L199cb2.  v6[v0]:= v3 @kind object;
  #L199cb6.  v0:= v0 + 1;
  #L199cba.  goto L199c88;
  #L199cbc.  v0:= 0I;
  #L199cbe.  v3:= length @variable v6;
  #L199cc0.  if v0 >= v3 then goto L199d40;
  #L199cc4.  v1:= v6[v0] @kind object;
  #L199cc8.  v3:= v0 + 1;
  #L199ccc.  v2:= v6[v3] @kind object;
  #L199cd0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199cd6.  v3:= temp;
  #L199cd8.  if v3 == 0 then goto L199cf4;
  #L199cdc.  call temp:= `indexOf`(v1, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L199ce2.  v3:= temp;
  #L199ce4.  if v3 != v4 then goto L199cf4;
  #L199ce8.  call temp:= `indexOf`(v2, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L199cee.  v3:= temp;
  #L199cf0.  if v3 == v4 then goto L199d3a;
  #L199cf4.  v3:= new `java.lang.IllegalArgumentException`;
  #L199cf8.  v4:= new `java.lang.StringBuilder`;
  #L199cfc.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199d02.  v5:= "Unexpected header: " @kind object;
  #L199d06.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d0c.  v4:= temp @kind object;
  #L199d0e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d14.  v4:= temp @kind object;
  #L199d16.  v5:= ": " @kind object;
  #L199d1a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d20.  v4:= temp @kind object;
  #L199d22.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199d28.  v4:= temp @kind object;
  #L199d2a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199d30.  v4:= temp @kind object;
  #L199d32.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L199d38.  throw v3;
  #L199d3a.  v0:= v0 + 2;
  #L199d3e.  goto L199cbe;
  #L199d40.  v3:= new `okhttp3.Headers`;
  #L199d44.  call `<init>`(v3, v6) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @kind direct;
  #L199d4a.  return v3 @kind object;
}
procedure `long` `byteCount`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.byteCount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L199d5c.  v4:= v6.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199d60.  v4:= length @variable v4;
  #L199d62.  v4:= v4 * 2;
  #L199d66.  v2:= (`long`) v4 @kind i2l;
  #L199d68.  v0:= 0I;
  #L199d6a.  v4:= v6.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199d6e.  v1:= length @variable v4;
  #L199d70.  if v0 >= v1 then goto L199d8e;
  #L199d74.  v4:= v6.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199d78.  v4:= v4[v0] @kind object;
  #L199d7c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L199d82.  v4:= temp;
  #L199d84.  v4:= (`long`) v4 @kind i2l;
  #L199d86.  v2:= v2 + v4 @kind long;
  #L199d88.  v0:= v0 + 1;
  #L199d8c.  goto L199d70;
  #L199d8e.  return v2 @kind wide;
}
procedure `boolean` `equals`(`okhttp3.Headers` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/Headers;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L199da0.  v0:= instanceof @variable v3 @type ^`okhttp3.Headers` @kind boolean;
  #L199da4.  if v0 == 0 then goto L199dc4;
  #L199da8.  v3:= (`okhttp3.Headers`) v3 @kind object;
  #L199dac.  v0:= v3.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199db0.  v1:= v2.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199db4.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L199dba.  v0:= temp;
  #L199dbc.  if v0 == 0 then goto L199dc4;
  #L199dc0.  v0:= 1I;
  #L199dc2.  return v0;
  #L199dc4.  v0:= 0I;
  #L199dc6.  goto L199dc2;
}
procedure `java.lang.String` `get`(`okhttp3.Headers` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L199dd8.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199ddc.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L199de2.  v0:= temp @kind object;
  #L199de4.  return v0 @kind object;
}
procedure `java.util.Date` `getDate`(`okhttp3.Headers` v2 @kind this, `java.lang.String` v3 @kind object @name `name`) @signature `Lokhttp3/Headers;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L199df8.  call temp:= `get`(v2, v3) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L199dfe.  v0:= temp @kind object;
  #L199e00.  if v0 == 0 then goto L199e0e;
  #L199e04.  call temp:= `parse`(v0) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L199e0a.  v1:= temp @kind object;
  #L199e0c.  return v1 @kind object;
  #L199e0e.  v1:= 0I;
  #L199e10.  goto L199e0c;
}
procedure `int` `hashCode`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L199e24.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199e28.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L199e2e.  v0:= temp;
  #L199e30.  return v0;
}
procedure `java.lang.String` `name`(`okhttp3.Headers` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L199e44.  v0:= v2.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199e48.  v1:= v3 * 2;
  #L199e4c.  v0:= v0[v1] @kind object;
  #L199e50.  return v0 @kind object;
}
procedure `java.util.Set` `names`(`okhttp3.Headers` v4 @kind this) @signature `Lokhttp3/Headers;.names:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L199e64.  v1:= new `java.util.TreeSet`;
  #L199e68.  v3:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L199e6c.  call `<init>`(v1, v3) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L199e72.  v0:= 0I;
  #L199e74.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L199e7a.  v2:= temp;
  #L199e7c.  if v0 >= v2 then goto L199e94;
  #L199e80.  call temp:= `name`(v4, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L199e86.  v3:= temp @kind object;
  #L199e88.  call temp:= `add`(v1, v3) @signature `Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L199e8e.  v0:= v0 + 1;
  #L199e92.  goto L199e7c;
  #L199e94.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L199e9a.  v3:= temp @kind object;
  #L199e9c.  return v3 @kind object;
}
procedure `okhttp3.Headers$Builder` `newBuilder`(`okhttp3.Headers` v3 @kind this) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L199eb0.  v0:= new `okhttp3.Headers$Builder`;
  #L199eb4.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L199eba.  v1:= v0.`okhttp3.Headers$Builder.namesAndValues` @type ^`java.util.List` @kind object;
  #L199ebe.  v2:= v3.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199ec2.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L199ec8.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L199edc.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199ee0.  v0:= length @variable v0;
  #L199ee2.  v0:= v0 / 2;
  #L199ee6.  return v0;
}
procedure `java.util.Map` `toMultimap`(`okhttp3.Headers` v7 @kind this) @signature `Lokhttp3/Headers;.toMultimap:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L199ef8.  v2:= new `java.util.TreeMap`;
  #L199efc.  v5:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L199f00.  call `<init>`(v2, v5) @signature `Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L199f06.  v0:= 0I;
  #L199f08.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L199f0e.  v3:= temp;
  #L199f10.  if v0 >= v3 then goto L199f5e;
  #L199f14.  call temp:= `name`(v7, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L199f1a.  v5:= temp @kind object;
  #L199f1c.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L199f20.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L199f26.  v1:= temp @kind object;
  #L199f28.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199f2e.  v4:= temp @kind object;
  #L199f30.  v4:= (`java.util.List`) v4 @kind object;
  #L199f34.  if v4 != 0 then goto L199f4a;
  #L199f38.  v4:= new `java.util.ArrayList`;
  #L199f3c.  v5:= 2I;
  #L199f3e.  call `<init>`(v4, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L199f44.  call temp:= `put`(v2, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L199f4a.  call temp:= `value`(v7, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L199f50.  v5:= temp @kind object;
  #L199f52.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L199f58.  v0:= v0 + 1;
  #L199f5c.  goto L199f10;
  #L199f5e.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Headers` v5 @kind this) @signature `Lokhttp3/Headers;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L199f70.  v1:= new `java.lang.StringBuilder`;
  #L199f74.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L199f7a.  v0:= 0I;
  #L199f7c.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L199f82.  v2:= temp;
  #L199f84.  if v0 >= v2 then goto L199fc4;
  #L199f88.  call temp:= `name`(v5, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L199f8e.  v3:= temp @kind object;
  #L199f90.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199f96.  v3:= temp @kind object;
  #L199f98.  v4:= ": " @kind object;
  #L199f9c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199fa2.  v3:= temp @kind object;
  #L199fa4.  call temp:= `value`(v5, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L199faa.  v4:= temp @kind object;
  #L199fac.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199fb2.  v3:= temp @kind object;
  #L199fb4.  v4:= "\n" @kind object;
  #L199fb8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L199fbe.  v0:= v0 + 1;
  #L199fc2.  goto L199f84;
  #L199fc4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L199fca.  v3:= temp @kind object;
  #L199fcc.  return v3 @kind object;
}
procedure `java.lang.String` `value`(`okhttp3.Headers` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L199fe0.  v0:= v2.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L199fe4.  v1:= v3 * 2;
  #L199fe8.  v1:= v1 + 1;
  #L199fec.  v0:= v0[v1] @kind object;
  #L199ff0.  return v0 @kind object;
}
procedure `java.util.List` `values`(`okhttp3.Headers` v4 @kind this, `java.lang.String` v5 @kind object @name `name`) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19a004.  v1:= 0I;
  #L19a006.  v0:= 0I;
  #L19a008.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19a00e.  v2:= temp;
  #L19a010.  if v0 >= v2 then goto L19a04c;
  #L19a014.  call temp:= `name`(v4, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19a01a.  v3:= temp @kind object;
  #L19a01c.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19a022.  v3:= temp;
  #L19a024.  if v3 == 0 then goto L19a046;
  #L19a028.  if v1 != 0 then goto L19a038;
  #L19a02c.  v1:= new `java.util.ArrayList`;
  #L19a030.  v3:= 2I;
  #L19a032.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19a038.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19a03e.  v3:= temp @kind object;
  #L19a040.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19a046.  v0:= v0 + 1;
  #L19a04a.  goto L19a010;
  #L19a04c.  if v1 == 0 then goto L19a05a;
  #L19a050.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19a056.  v3:= temp @kind object;
  #L19a058.  return v3 @kind object;
  #L19a05a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L19a060.  v3:= temp @kind object;
  #L19a062.  goto L19a058;
}

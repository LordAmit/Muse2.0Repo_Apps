record `okhttp3.Dispatcher` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.ExecutorService` `okhttp3.Dispatcher.executorService` @AccessFlag PRIVATE;
  `java.lang.Runnable` `okhttp3.Dispatcher.idleCallback` @AccessFlag PRIVATE;
  `int` `okhttp3.Dispatcher.maxRequests` @AccessFlag PRIVATE;
  `int` `okhttp3.Dispatcher.maxRequestsPerHost` @AccessFlag PRIVATE;
  `java.util.Deque` `okhttp3.Dispatcher.readyAsyncCalls` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.Dispatcher.runningAsyncCalls` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.Dispatcher.runningSyncCalls` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Dispatcher` v1 @kind this) @signature `Lokhttp3/Dispatcher;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L198920.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L198926.  v0:= 64I;
  #L19892a.  v1.`okhttp3.Dispatcher.maxRequests` @type ^`int` := v0;
  #L19892e.  v0:= 5I;
  #L198930.  v1.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int` := v0;
  #L198934.  v0:= new `java.util.ArrayDeque`;
  #L198938.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L19893e.  v1.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198942.  v0:= new `java.util.ArrayDeque`;
  #L198946.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L19894c.  v1.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198950.  v0:= new `java.util.ArrayDeque`;
  #L198954.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L19895a.  v1.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L19895e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Dispatcher` v1 @kind this, `java.util.concurrent.ExecutorService` v2 @kind object @name `executorService`) @signature `Lokhttp3/Dispatcher;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L198970.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L198976.  v0:= 64I;
  #L19897a.  v1.`okhttp3.Dispatcher.maxRequests` @type ^`int` := v0;
  #L19897e.  v0:= 5I;
  #L198980.  v1.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int` := v0;
  #L198984.  v0:= new `java.util.ArrayDeque`;
  #L198988.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L19898e.  v1.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L198992.  v0:= new `java.util.ArrayDeque`;
  #L198996.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L19899c.  v1.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L1989a0.  v0:= new `java.util.ArrayDeque`;
  #L1989a4.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L1989aa.  v1.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` := v0 @kind object;
  #L1989ae.  v1.`okhttp3.Dispatcher.executorService` @type ^`java.util.concurrent.ExecutorService` := v2 @kind object;
  #L1989b2.  return @kind void;
}
procedure `void` `finished`(`okhttp3.Dispatcher` v4 @kind this, `java.util.Deque` v5 @kind object, `java.lang.Object` v6 @kind object, `boolean` v7 @name `promoteCalls`) @signature `Lokhttp3/Dispatcher;.finished:(Ljava/util/Deque;Ljava/lang/Object;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1989c4.  @monitorenter v4
  #Try_start0.  
  #L1989c6.  call temp:= `remove`(v5, v6) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L1989cc.  v2:= temp;
  #L1989ce.  if v2 != 0 then goto L1989e8;
  #L1989d2.  v2:= new `java.lang.AssertionError`;
  #L1989d6.  v3:= "Call wasn't in-flight!" @kind object;
  #L1989da.  call `<init>`(v2, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1989e0.  throw v2;
  #L1989e2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1989e4.  @monitorexit v4
  #Try_end0.  
  #L1989e6.  throw v2;
  #L1989e8.  if v7 == 0 then goto L1989f2;
  #Try_start1.  
  #L1989ec.  call `promoteCalls`(v4) @signature `Lokhttp3/Dispatcher;.promoteCalls:()V` @kind direct;
  #L1989f2.  call temp:= `runningCallsCount`(v4) @signature `Lokhttp3/Dispatcher;.runningCallsCount:()I` @kind virtual;
  #L1989f8.  v1:= temp;
  #L1989fa.  v0:= v4.`okhttp3.Dispatcher.idleCallback` @type ^`java.lang.Runnable` @kind object;
  #L1989fe.  @monitorexit v4
  #Try_end1.  
  #L198a00.  if v1 != 0 then goto L198a0e;
  #L198a04.  if v0 == 0 then goto L198a0e;
  #L198a08.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L198a0e.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1989e2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1989e2;
}
procedure `void` `promoteCalls`(`okhttp3.Dispatcher` v4 @kind this) @signature `Lokhttp3/Dispatcher;.promoteCalls:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198a34.  v2:= v4.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198a38.  call temp:= `size`(v2) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L198a3e.  v2:= temp;
  #L198a40.  v3:= v4.`okhttp3.Dispatcher.maxRequests` @type ^`int`;
  #L198a44.  if v2 < v3 then goto L198a4a;
  #L198a48.  return @kind void;
  #L198a4a.  v2:= v4.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198a4e.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L198a54.  v2:= temp;
  #L198a56.  if v2 != 0 then goto L198a48;
  #L198a5a.  v2:= v4.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198a5e.  call temp:= `iterator`(v2) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198a64.  v1:= temp @kind object;
  #L198a66.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198a6c.  v2:= temp;
  #L198a6e.  if v2 == 0 then goto L198a48;
  #L198a72.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198a78.  v0:= temp @kind object;
  #L198a7a.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198a7e.  call temp:= `runningCallsForHost`(v4, v0) @signature `Lokhttp3/Dispatcher;.runningCallsForHost:(Lokhttp3/RealCall$AsyncCall;)I` @kind direct;
  #L198a84.  v2:= temp;
  #L198a86.  v3:= v4.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int`;
  #L198a8a.  if v2 >= v3 then goto L198aac;
  #L198a8e.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L198a94.  v2:= v4.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198a98.  call temp:= `add`(v2, v0) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198a9e.  call temp:= `executorService`(v4) @signature `Lokhttp3/Dispatcher;.executorService:()Ljava/util/concurrent/ExecutorService;` @kind virtual;
  #L198aa4.  v2:= temp @kind object;
  #L198aa6.  call `execute`(v2, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L198aac.  v2:= v4.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198ab0.  call temp:= `size`(v2) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L198ab6.  v2:= temp;
  #L198ab8.  v3:= v4.`okhttp3.Dispatcher.maxRequests` @type ^`int`;
  #L198abc.  if v2 < v3 then goto L198a66;
  #L198ac0.  goto L198a48;
}
procedure `int` `runningCallsForHost`(`okhttp3.Dispatcher` v5 @kind this, `okhttp3.RealCall$AsyncCall` v6 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.runningCallsForHost:(Lokhttp3/RealCall$AsyncCall;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L198ad4.  v1:= 0I;
  #L198ad6.  v2:= v5.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198ada.  call temp:= `iterator`(v2) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198ae0.  v2:= temp @kind object;
  #L198ae2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198ae8.  v3:= temp;
  #L198aea.  if v3 == 0 then goto L198b2c;
  #L198aee.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198af4.  v0:= temp @kind object;
  #L198af6.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198afa.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198b00.  v3:= temp @kind object;
  #L198b02.  v3:= v3.`okhttp3.RealCall.forWebSocket` @type ^`boolean` @kind boolean;
  #L198b06.  if v3 != 0 then goto L198ae2;
  #L198b0a.  call temp:= `host`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @kind virtual;
  #L198b10.  v3:= temp @kind object;
  #L198b12.  call temp:= `host`(v6) @signature `Lokhttp3/RealCall$AsyncCall;.host:()Ljava/lang/String;` @kind virtual;
  #L198b18.  v4:= temp @kind object;
  #L198b1a.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L198b20.  v3:= temp;
  #L198b22.  if v3 == 0 then goto L198ae2;
  #L198b26.  v1:= v1 + 1;
  #L198b2a.  goto L198ae2;
  #L198b2c.  return v1;
}
procedure `void` `cancelAll`(`okhttp3.Dispatcher` v3 @kind this) @signature `Lokhttp3/Dispatcher;.cancelAll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L198b40.  @monitorenter v3
  #Try_start0.  
  #L198b42.  v1:= v3.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198b46.  call temp:= `iterator`(v1) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198b4c.  v1:= temp @kind object;
  #L198b4e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198b54.  v2:= temp;
  #L198b56.  if v2 == 0 then goto L198b7c;
  #L198b5a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198b60.  v0:= temp @kind object;
  #L198b62.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198b66.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198b6c.  v2:= temp @kind object;
  #L198b6e.  call `cancel`(v2) @signature `Lokhttp3/RealCall;.cancel:()V` @kind virtual;
  #Try_end0.  
  #L198b74.  goto L198b4e;
  #L198b76.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198b78.  @monitorexit v3
  #L198b7a.  throw v1;
  #Try_start1.  
  #L198b7c.  v1:= v3.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198b80.  call temp:= `iterator`(v1) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198b86.  v1:= temp @kind object;
  #L198b88.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198b8e.  v2:= temp;
  #L198b90.  if v2 == 0 then goto L198bb0;
  #L198b94.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198b9a.  v0:= temp @kind object;
  #L198b9c.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198ba0.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198ba6.  v2:= temp @kind object;
  #L198ba8.  call `cancel`(v2) @signature `Lokhttp3/RealCall;.cancel:()V` @kind virtual;
  #L198bae.  goto L198b88;
  #L198bb0.  v1:= v3.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198bb4.  call temp:= `iterator`(v1) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198bba.  v1:= temp @kind object;
  #L198bbc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198bc2.  v2:= temp;
  #L198bc4.  if v2 == 0 then goto L198bdc;
  #L198bc8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198bce.  v0:= temp @kind object;
  #L198bd0.  v0:= (`okhttp3.RealCall`) v0 @kind object;
  #L198bd4.  call `cancel`(v0) @signature `Lokhttp3/RealCall;.cancel:()V` @kind virtual;
  #Try_end1.  
  #L198bda.  goto L198bbc;
  #L198bdc.  @monitorexit v3
  #L198bde.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198b76;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198b76;
}
procedure `void` `enqueue`(`okhttp3.Dispatcher` v2 @kind this, `okhttp3.RealCall$AsyncCall` v3 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.enqueue:(Lokhttp3/RealCall$AsyncCall;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L198c04.  @monitorenter v2
  #Try_start0.  
  #L198c06.  v0:= v2.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198c0a.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L198c10.  v0:= temp;
  #L198c12.  v1:= v2.`okhttp3.Dispatcher.maxRequests` @type ^`int`;
  #L198c16.  if v0 >= v1 then goto L198c46;
  #L198c1a.  call temp:= `runningCallsForHost`(v2, v3) @signature `Lokhttp3/Dispatcher;.runningCallsForHost:(Lokhttp3/RealCall$AsyncCall;)I` @kind direct;
  #L198c20.  v0:= temp;
  #L198c22.  v1:= v2.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int`;
  #L198c26.  if v0 >= v1 then goto L198c46;
  #L198c2a.  v0:= v2.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198c2e.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198c34.  call temp:= `executorService`(v2) @signature `Lokhttp3/Dispatcher;.executorService:()Ljava/util/concurrent/ExecutorService;` @kind virtual;
  #L198c3a.  v0:= temp @kind object;
  #L198c3c.  call `execute`(v0, v3) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #Try_end0.  
  #L198c42.  @monitorexit v2
  #L198c44.  return @kind void;
  #Try_start1.  
  #L198c46.  v0:= v2.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198c4a.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end1.  
  #L198c50.  goto L198c42;
  #L198c52.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198c54.  @monitorexit v2
  #L198c56.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198c52;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198c52;
}
procedure `void` `executed`(`okhttp3.Dispatcher` v1 @kind this, `okhttp3.RealCall` v2 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.executed:(Lokhttp3/RealCall;)V` @AccessFlag  {
    temp;
    v0;

  #L198c7c.  @monitorenter v1
  #Try_start0.  
  #L198c7e.  v0:= v1.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198c82.  call temp:= `add`(v0, v2) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L198c88.  @monitorexit v1
  #L198c8a.  return @kind void;
  #L198c8c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198c8e.  @monitorexit v1
  #L198c90.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198c8c;
}
procedure `java.util.concurrent.ExecutorService` `executorService`(`okhttp3.Dispatcher` v9 @kind this) @signature `Lokhttp3/Dispatcher;.executorService:()Ljava/util/concurrent/ExecutorService;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L198cb0.  @monitorenter v9
  #Try_start0.  
  #L198cb2.  v0:= v9.`okhttp3.Dispatcher.executorService` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L198cb6.  if v0 != 0 then goto L198cf0;
  #L198cba.  v1:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L198cbe.  v2:= 0I;
  #L198cc0.  v3:= 2147483647I;
  #L198cc6.  v4:= 60L;
  #L198cca.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L198cce.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L198cd2.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L198cd8.  v0:= "OkHttp Dispatcher" @kind object;
  #L198cdc.  v8:= 0I;
  #L198cde.  call temp:= `threadFactory`(v0, v8) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L198ce4.  v8:= temp @kind object;
  #L198ce6.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L198cec.  v9.`okhttp3.Dispatcher.executorService` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L198cf0.  v0:= v9.`okhttp3.Dispatcher.executorService` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #Try_end0.  
  #L198cf4.  @monitorexit v9
  #L198cf6.  return v0 @kind object;
  #L198cf8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198cfa.  @monitorexit v9
  #L198cfc.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198cf8;
}
procedure `void` `finished`(`okhttp3.Dispatcher` v2 @kind this, `okhttp3.RealCall$AsyncCall` v3 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall$AsyncCall;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L198d1c.  v0:= v2.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198d20.  v1:= 1I;
  #L198d22.  call `finished`(v2, v0, v3, v1) @signature `Lokhttp3/Dispatcher;.finished:(Ljava/util/Deque;Ljava/lang/Object;Z)V` @kind direct;
  #L198d28.  return @kind void;
}
procedure `void` `finished`(`okhttp3.Dispatcher` v2 @kind this, `okhttp3.RealCall` v3 @kind object @name `call`) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/RealCall;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L198d3c.  v0:= v2.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198d40.  v1:= 0I;
  #L198d42.  call `finished`(v2, v0, v3, v1) @signature `Lokhttp3/Dispatcher;.finished:(Ljava/util/Deque;Ljava/lang/Object;Z)V` @kind direct;
  #L198d48.  return @kind void;
}
procedure `int` `getMaxRequests`(`okhttp3.Dispatcher` v1 @kind this) @signature `Lokhttp3/Dispatcher;.getMaxRequests:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L198d5c.  @monitorenter v1
  #Try_start0.  
  #L198d5e.  v0:= v1.`okhttp3.Dispatcher.maxRequests` @type ^`int`;
  #Try_end0.  
  #L198d62.  @monitorexit v1
  #L198d64.  return v0;
  #L198d66.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198d68.  @monitorexit v1
  #L198d6a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198d66;
}
procedure `int` `getMaxRequestsPerHost`(`okhttp3.Dispatcher` v1 @kind this) @signature `Lokhttp3/Dispatcher;.getMaxRequestsPerHost:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L198d88.  @monitorenter v1
  #Try_start0.  
  #L198d8a.  v0:= v1.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int`;
  #Try_end0.  
  #L198d8e.  @monitorexit v1
  #L198d90.  return v0;
  #L198d92.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198d94.  @monitorexit v1
  #L198d96.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198d92;
}
procedure `java.util.List` `queuedCalls`(`okhttp3.Dispatcher` v4 @kind this) @signature `Lokhttp3/Dispatcher;.queuedCalls:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198db4.  @monitorenter v4
  #Try_start0.  
  #L198db6.  v1:= new `java.util.ArrayList`;
  #L198dba.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L198dc0.  v2:= v4.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198dc4.  call temp:= `iterator`(v2) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198dca.  v2:= temp @kind object;
  #L198dcc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198dd2.  v3:= temp;
  #L198dd4.  if v3 == 0 then goto L198dfa;
  #L198dd8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198dde.  v0:= temp @kind object;
  #L198de0.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198de4.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198dea.  v3:= temp @kind object;
  #L198dec.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L198df2.  goto L198dcc;
  #L198df4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198df6.  @monitorexit v4
  #L198df8.  throw v2;
  #Try_start1.  
  #L198dfa.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #Try_end1.  
  #L198e00.  v2:= temp @kind object;
  #L198e02.  @monitorexit v4
  #L198e04.  return v2 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198df4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198df4;
}
procedure `int` `queuedCallsCount`(`okhttp3.Dispatcher` v1 @kind this) @signature `Lokhttp3/Dispatcher;.queuedCallsCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L198e2c.  @monitorenter v1
  #Try_start0.  
  #L198e2e.  v0:= v1.`okhttp3.Dispatcher.readyAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198e32.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #Try_end0.  
  #L198e38.  v0:= temp;
  #L198e3a.  @monitorexit v1
  #L198e3c.  return v0;
  #L198e3e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198e40.  @monitorexit v1
  #L198e42.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198e3e;
}
procedure `java.util.List` `runningCalls`(`okhttp3.Dispatcher` v4 @kind this) @signature `Lokhttp3/Dispatcher;.runningCalls:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198e60.  @monitorenter v4
  #Try_start0.  
  #L198e62.  v1:= new `java.util.ArrayList`;
  #L198e66.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L198e6c.  v2:= v4.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198e70.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L198e76.  v2:= v4.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198e7a.  call temp:= `iterator`(v2) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L198e80.  v2:= temp @kind object;
  #L198e82.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L198e88.  v3:= temp;
  #L198e8a.  if v3 == 0 then goto L198eb0;
  #L198e8e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L198e94.  v0:= temp @kind object;
  #L198e96.  v0:= (`okhttp3.RealCall$AsyncCall`) v0 @kind object;
  #L198e9a.  call temp:= `get`(v0) @signature `Lokhttp3/RealCall$AsyncCall;.get:()Lokhttp3/RealCall;` @kind virtual;
  #L198ea0.  v3:= temp @kind object;
  #L198ea2.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L198ea8.  goto L198e82;
  #L198eaa.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198eac.  @monitorexit v4
  #L198eae.  throw v2;
  #Try_start1.  
  #L198eb0.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #Try_end1.  
  #L198eb6.  v2:= temp @kind object;
  #L198eb8.  @monitorexit v4
  #L198eba.  return v2 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198eaa;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198eaa;
}
procedure `int` `runningCallsCount`(`okhttp3.Dispatcher` v2 @kind this) @signature `Lokhttp3/Dispatcher;.runningCallsCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L198ee0.  @monitorenter v2
  #Try_start0.  
  #L198ee2.  v0:= v2.`okhttp3.Dispatcher.runningAsyncCalls` @type ^`java.util.Deque` @kind object;
  #L198ee6.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L198eec.  v0:= temp;
  #L198eee.  v1:= v2.`okhttp3.Dispatcher.runningSyncCalls` @type ^`java.util.Deque` @kind object;
  #L198ef2.  call temp:= `size`(v1) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #Try_end0.  
  #L198ef8.  v1:= temp;
  #L198efa.  v0:= v0 + v1 @kind int;
  #L198efc.  @monitorexit v2
  #L198efe.  return v0;
  #L198f00.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198f02.  @monitorexit v2
  #L198f04.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198f00;
}
procedure `void` `setIdleCallback`(`okhttp3.Dispatcher` v1 @kind this, `java.lang.Runnable` v2 @kind object @name `idleCallback`) @signature `Lokhttp3/Dispatcher;.setIdleCallback:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L198f24.  @monitorenter v1
  #Try_start0.  
  #L198f26.  v1.`okhttp3.Dispatcher.idleCallback` @type ^`java.lang.Runnable` := v2 @kind object;
  #Try_end0.  
  #L198f2a.  @monitorexit v1
  #L198f2c.  return @kind void;
  #L198f2e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198f30.  @monitorexit v1
  #L198f32.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198f2e;
}
procedure `void` `setMaxRequests`(`okhttp3.Dispatcher` v3 @kind this, `int` v4 @name `maxRequests`) @signature `Lokhttp3/Dispatcher;.setMaxRequests:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L198f50.  @monitorenter v3
  #L198f52.  v0:= 1I;
  #L198f54.  if v4 >= v0 then goto L198f90;
  #Try_start0.  
  #L198f58.  v0:= new `java.lang.IllegalArgumentException`;
  #L198f5c.  v1:= new `java.lang.StringBuilder`;
  #L198f60.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L198f66.  v2:= "max < 1: " @kind object;
  #L198f6a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L198f70.  v1:= temp @kind object;
  #L198f72.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L198f78.  v1:= temp @kind object;
  #L198f7a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L198f80.  v1:= temp @kind object;
  #L198f82.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L198f88.  throw v0;
  #Try_end0.  
  #L198f8a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L198f8c.  @monitorexit v3
  #L198f8e.  throw v0;
  #Try_start1.  
  #L198f90.  v3.`okhttp3.Dispatcher.maxRequests` @type ^`int` := v4;
  #L198f94.  call `promoteCalls`(v3) @signature `Lokhttp3/Dispatcher;.promoteCalls:()V` @kind direct;
  #Try_end1.  
  #L198f9a.  @monitorexit v3
  #L198f9c.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198f8a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198f8a;
}
procedure `void` `setMaxRequestsPerHost`(`okhttp3.Dispatcher` v3 @kind this, `int` v4 @name `maxRequestsPerHost`) @signature `Lokhttp3/Dispatcher;.setMaxRequestsPerHost:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L198fc4.  @monitorenter v3
  #L198fc6.  v0:= 1I;
  #L198fc8.  if v4 >= v0 then goto L199004;
  #Try_start0.  
  #L198fcc.  v0:= new `java.lang.IllegalArgumentException`;
  #L198fd0.  v1:= new `java.lang.StringBuilder`;
  #L198fd4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L198fda.  v2:= "max < 1: " @kind object;
  #L198fde.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L198fe4.  v1:= temp @kind object;
  #L198fe6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L198fec.  v1:= temp @kind object;
  #L198fee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L198ff4.  v1:= temp @kind object;
  #L198ff6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L198ffc.  throw v0;
  #Try_end0.  
  #L198ffe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L199000.  @monitorexit v3
  #L199002.  throw v0;
  #Try_start1.  
  #L199004.  v3.`okhttp3.Dispatcher.maxRequestsPerHost` @type ^`int` := v4;
  #L199008.  call `promoteCalls`(v3) @signature `Lokhttp3/Dispatcher;.promoteCalls:()V` @kind direct;
  #Try_end1.  
  #L19900e.  @monitorexit v3
  #L199010.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L198ffe;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L198ffe;
}

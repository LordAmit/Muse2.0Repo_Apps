record `okhttp3.OkHttpClient` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface, `okhttp3.Call$Factory` @kind interface, `okhttp3.WebSocket$Factory` @kind interface {
  `okhttp3.Authenticator` `okhttp3.OkHttpClient.authenticator` @AccessFlag FINAL;
  `okhttp3.Cache` `okhttp3.OkHttpClient.cache` @AccessFlag FINAL;
  `okhttp3.internal.tls.CertificateChainCleaner` `okhttp3.OkHttpClient.certificateChainCleaner` @AccessFlag FINAL;
  `okhttp3.CertificatePinner` `okhttp3.OkHttpClient.certificatePinner` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.connectTimeout` @AccessFlag FINAL;
  `okhttp3.ConnectionPool` `okhttp3.OkHttpClient.connectionPool` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.CookieJar` `okhttp3.OkHttpClient.cookieJar` @AccessFlag FINAL;
  `okhttp3.Dispatcher` `okhttp3.OkHttpClient.dispatcher` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.OkHttpClient.dns` @AccessFlag FINAL;
  `okhttp3.EventListener$Factory` `okhttp3.OkHttpClient.eventListenerFactory` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.followRedirects` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.followSslRedirects` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.OkHttpClient.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.interceptors` @AccessFlag FINAL;
  `okhttp3.internal.cache.InternalCache` `okhttp3.OkHttpClient.internalCache` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.networkInterceptors` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.pingInterval` @AccessFlag FINAL;
  `java.util.List` `okhttp3.OkHttpClient.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.OkHttpClient.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.OkHttpClient.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.OkHttpClient.proxySelector` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.readTimeout` @AccessFlag FINAL;
  `boolean` `okhttp3.OkHttpClient.retryOnConnectionFailure` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.OkHttpClient.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.OkHttpClient.sslSocketFactory` @AccessFlag FINAL;
  `int` `okhttp3.OkHttpClient.writeTimeout` @AccessFlag FINAL;
}
global `java.util.List` `@@okhttp3.OkHttpClient.DEFAULT_CONNECTION_SPECS` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@okhttp3.OkHttpClient.DEFAULT_PROTOCOLS` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/OkHttpClient;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2157e4.  v4:= 2I;
  #L2157e6.  v3:= 1I;
  #L2157e8.  v2:= 0I;
  #L2157ea.  v0:= new `okhttp3.Protocol`[v4];
  #L2157ee.  v1:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L2157f2.  v0[v2]:= v1 @kind object;
  #L2157f6.  v1:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L2157fa.  v0[v3]:= v1 @kind object;
  #L2157fe.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L215804.  v0:= temp @kind object;
  #L215806.  `@@okhttp3.OkHttpClient.DEFAULT_PROTOCOLS` @type ^`java.util.List` := v0 @kind object;
  #L21580a.  v0:= new `okhttp3.ConnectionSpec`[v4];
  #L21580e.  v1:= `@@okhttp3.ConnectionSpec.MODERN_TLS` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L215812.  v0[v2]:= v1 @kind object;
  #L215816.  v1:= `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L21581a.  v0[v3]:= v1 @kind object;
  #L21581e.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L215824.  v0:= temp @kind object;
  #L215826.  `@@okhttp3.OkHttpClient.DEFAULT_CONNECTION_SPECS` @type ^`java.util.List` := v0 @kind object;
  #L21582a.  v0:= new `okhttp3.OkHttpClient$1`;
  #L21582e.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient$1;.<init>:()V` @kind direct;
  #L215834.  `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` := v0 @kind object;
  #L215838.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L21584c.  v0:= new `okhttp3.OkHttpClient$Builder`;
  #L215850.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:()V` @kind direct;
  #L215856.  call `<init>`(v1, v0) @signature `Lokhttp3/OkHttpClient;.<init>:(Lokhttp3/OkHttpClient$Builder;)V` @kind direct;
  #L21585c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient` v6 @kind this, `okhttp3.OkHttpClient$Builder` v7 @kind object @name `builder`) @signature `Lokhttp3/OkHttpClient;.<init>:(Lokhttp3/OkHttpClient$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L215870.  v5:= 0I;
  #L215872.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L215878.  v3:= v7.`okhttp3.OkHttpClient$Builder.dispatcher` @type ^`okhttp3.Dispatcher` @kind object;
  #L21587c.  v6.`okhttp3.OkHttpClient.dispatcher` @type ^`okhttp3.Dispatcher` := v3 @kind object;
  #L215880.  v3:= v7.`okhttp3.OkHttpClient$Builder.proxy` @type ^`java.net.Proxy` @kind object;
  #L215884.  v6.`okhttp3.OkHttpClient.proxy` @type ^`java.net.Proxy` := v3 @kind object;
  #L215888.  v3:= v7.`okhttp3.OkHttpClient$Builder.protocols` @type ^`java.util.List` @kind object;
  #L21588c.  v6.`okhttp3.OkHttpClient.protocols` @type ^`java.util.List` := v3 @kind object;
  #L215890.  v3:= v7.`okhttp3.OkHttpClient$Builder.connectionSpecs` @type ^`java.util.List` @kind object;
  #L215894.  v6.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` := v3 @kind object;
  #L215898.  v3:= v7.`okhttp3.OkHttpClient$Builder.interceptors` @type ^`java.util.List` @kind object;
  #L21589c.  call temp:= `immutableList`(v3) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2158a2.  v3:= temp @kind object;
  #L2158a4.  v6.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` := v3 @kind object;
  #L2158a8.  v3:= v7.`okhttp3.OkHttpClient$Builder.networkInterceptors` @type ^`java.util.List` @kind object;
  #L2158ac.  call temp:= `immutableList`(v3) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2158b2.  v3:= temp @kind object;
  #L2158b4.  v6.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` := v3 @kind object;
  #L2158b8.  v3:= v7.`okhttp3.OkHttpClient$Builder.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` @kind object;
  #L2158bc.  v6.`okhttp3.OkHttpClient.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` := v3 @kind object;
  #L2158c0.  v3:= v7.`okhttp3.OkHttpClient$Builder.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L2158c4.  v6.`okhttp3.OkHttpClient.proxySelector` @type ^`java.net.ProxySelector` := v3 @kind object;
  #L2158c8.  v3:= v7.`okhttp3.OkHttpClient$Builder.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L2158cc.  v6.`okhttp3.OkHttpClient.cookieJar` @type ^`okhttp3.CookieJar` := v3 @kind object;
  #L2158d0.  v3:= v7.`okhttp3.OkHttpClient$Builder.cache` @type ^`okhttp3.Cache` @kind object;
  #L2158d4.  v6.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` := v3 @kind object;
  #L2158d8.  v3:= v7.`okhttp3.OkHttpClient$Builder.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2158dc.  v6.`okhttp3.OkHttpClient.internalCache` @type ^`okhttp3.internal.cache.InternalCache` := v3 @kind object;
  #L2158e0.  v3:= v7.`okhttp3.OkHttpClient$Builder.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L2158e4.  v6.`okhttp3.OkHttpClient.socketFactory` @type ^`javax.net.SocketFactory` := v3 @kind object;
  #L2158e8.  v0:= 0I;
  #L2158ea.  v3:= v6.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` @kind object;
  #L2158ee.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2158f4.  v3:= temp @kind object;
  #L2158f6.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2158fc.  v4:= temp;
  #L2158fe.  if v4 == 0 then goto L215926;
  #L215902.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L215908.  v1:= temp @kind object;
  #L21590a.  v1:= (`okhttp3.ConnectionSpec`) v1 @kind object;
  #L21590e.  if v0 != 0 then goto L21591e;
  #L215912.  call temp:= `isTls`(v1) @signature `Lokhttp3/ConnectionSpec;.isTls:()Z` @kind virtual;
  #L215918.  v4:= temp;
  #L21591a.  if v4 == 0 then goto L215922;
  #L21591e.  v0:= 1I;
  #L215920.  goto L2158f6;
  #L215922.  v0:= 0I;
  #L215924.  goto L215920;
  #L215926.  v3:= v7.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L21592a.  if v3 != 0 then goto L215932;
  #L21592e.  if v0 != 0 then goto L2159fc;
  #L215932.  v3:= v7.`okhttp3.OkHttpClient$Builder.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L215936.  v6.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L21593a.  v3:= v7.`okhttp3.OkHttpClient$Builder.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L21593e.  v6.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v3 @kind object;
  #L215942.  v3:= v7.`okhttp3.OkHttpClient$Builder.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L215946.  v6.`okhttp3.OkHttpClient.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v3 @kind object;
  #L21594a.  v3:= v7.`okhttp3.OkHttpClient$Builder.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L21594e.  v4:= v6.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L215952.  call temp:= `withCertificateChainCleaner`(v3, v4) @signature `Lokhttp3/CertificatePinner;.withCertificateChainCleaner:(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;` @kind virtual;
  #L215958.  v3:= temp @kind object;
  #L21595a.  v6.`okhttp3.OkHttpClient.certificatePinner` @type ^`okhttp3.CertificatePinner` := v3 @kind object;
  #L21595e.  v3:= v7.`okhttp3.OkHttpClient$Builder.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L215962.  v6.`okhttp3.OkHttpClient.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v3 @kind object;
  #L215966.  v3:= v7.`okhttp3.OkHttpClient$Builder.authenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L21596a.  v6.`okhttp3.OkHttpClient.authenticator` @type ^`okhttp3.Authenticator` := v3 @kind object;
  #L21596e.  v3:= v7.`okhttp3.OkHttpClient$Builder.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L215972.  v6.`okhttp3.OkHttpClient.connectionPool` @type ^`okhttp3.ConnectionPool` := v3 @kind object;
  #L215976.  v3:= v7.`okhttp3.OkHttpClient$Builder.dns` @type ^`okhttp3.Dns` @kind object;
  #L21597a.  v6.`okhttp3.OkHttpClient.dns` @type ^`okhttp3.Dns` := v3 @kind object;
  #L21597e.  v3:= v7.`okhttp3.OkHttpClient$Builder.followSslRedirects` @type ^`boolean` @kind boolean;
  #L215982.  v6.`okhttp3.OkHttpClient.followSslRedirects` @type ^`boolean` := v3 @kind boolean;
  #L215986.  v3:= v7.`okhttp3.OkHttpClient$Builder.followRedirects` @type ^`boolean` @kind boolean;
  #L21598a.  v6.`okhttp3.OkHttpClient.followRedirects` @type ^`boolean` := v3 @kind boolean;
  #L21598e.  v3:= v7.`okhttp3.OkHttpClient$Builder.retryOnConnectionFailure` @type ^`boolean` @kind boolean;
  #L215992.  v6.`okhttp3.OkHttpClient.retryOnConnectionFailure` @type ^`boolean` := v3 @kind boolean;
  #L215996.  v3:= v7.`okhttp3.OkHttpClient$Builder.connectTimeout` @type ^`int`;
  #L21599a.  v6.`okhttp3.OkHttpClient.connectTimeout` @type ^`int` := v3;
  #L21599e.  v3:= v7.`okhttp3.OkHttpClient$Builder.readTimeout` @type ^`int`;
  #L2159a2.  v6.`okhttp3.OkHttpClient.readTimeout` @type ^`int` := v3;
  #L2159a6.  v3:= v7.`okhttp3.OkHttpClient$Builder.writeTimeout` @type ^`int`;
  #L2159aa.  v6.`okhttp3.OkHttpClient.writeTimeout` @type ^`int` := v3;
  #L2159ae.  v3:= v7.`okhttp3.OkHttpClient$Builder.pingInterval` @type ^`int`;
  #L2159b2.  v6.`okhttp3.OkHttpClient.pingInterval` @type ^`int` := v3;
  #L2159b6.  v3:= v6.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L2159ba.  call temp:= `contains`(v3, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2159c0.  v3:= temp;
  #L2159c2.  if v3 == 0 then goto L215a1e;
  #L2159c6.  v3:= new `java.lang.IllegalStateException`;
  #L2159ca.  v4:= new `java.lang.StringBuilder`;
  #L2159ce.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2159d4.  v5:= "Null interceptor: " @kind object;
  #L2159d8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2159de.  v4:= temp @kind object;
  #L2159e0.  v5:= v6.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L2159e4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2159ea.  v4:= temp @kind object;
  #L2159ec.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2159f2.  v4:= temp @kind object;
  #L2159f4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2159fa.  throw v3;
  #L2159fc.  call temp:= `systemDefaultTrustManager`(v6) @signature `Lokhttp3/OkHttpClient;.systemDefaultTrustManager:()Ljavax/net/ssl/X509TrustManager;` @kind direct;
  #L215a02.  v2:= temp @kind object;
  #L215a04.  call temp:= `systemDefaultSslSocketFactory`(v6, v2) @signature `Lokhttp3/OkHttpClient;.systemDefaultSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind direct;
  #L215a0a.  v3:= temp @kind object;
  #L215a0c.  v6.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v3 @kind object;
  #L215a10.  call temp:= `get`(v2) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.get:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind static;
  #L215a16.  v3:= temp @kind object;
  #L215a18.  v6.`okhttp3.OkHttpClient.certificateChainCleaner` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v3 @kind object;
  #L215a1c.  goto L215942;
  #L215a1e.  v3:= v6.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L215a22.  call temp:= `contains`(v3, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L215a28.  v3:= temp;
  #L215a2a.  if v3 == 0 then goto L215a64;
  #L215a2e.  v3:= new `java.lang.IllegalStateException`;
  #L215a32.  v4:= new `java.lang.StringBuilder`;
  #L215a36.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L215a3c.  v5:= "Null network interceptor: " @kind object;
  #L215a40.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L215a46.  v4:= temp @kind object;
  #L215a48.  v5:= v6.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L215a4c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L215a52.  v4:= temp @kind object;
  #L215a54.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L215a5a.  v4:= temp @kind object;
  #L215a5c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L215a62.  throw v3;
  #L215a64.  return @kind void;
}
procedure `javax.net.ssl.SSLSocketFactory` `systemDefaultSslSocketFactory`(`okhttp3.OkHttpClient` v5 @kind this, `javax.net.ssl.X509TrustManager` v6 @kind object @name `trustManager`) @signature `Lokhttp3/OkHttpClient;.systemDefaultSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L215a78.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L215a7e.  v2:= temp @kind object;
  #L215a80.  call temp:= `getSSLContext`(v2) @signature `Lokhttp3/internal/platform/Platform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L215a86.  v1:= temp @kind object;
  #L215a88.  v2:= 0I;
  #L215a8a.  v3:= 1I;
  #L215a8c.  v3:= new `javax.net.ssl.TrustManager`[v3];
  #L215a90.  v4:= 0I;
  #L215a92.  v3[v4]:= v6 @kind object;
  #L215a96.  v4:= 0I;
  #L215a98.  call `init`(v1, v2, v3, v4) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L215a9e.  call temp:= `getSocketFactory`(v1) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #Try_end0.  
  #L215aa4.  v2:= temp @kind object;
  #L215aa6.  return v2 @kind object;
  #L215aa8.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L215aaa.  v2:= "No System TLS" @kind object;
  #L215aae.  call temp:= `assertionError`(v2, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L215ab4.  v2:= temp @kind object;
  #L215ab6.  throw v2;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L215aa8;
}
procedure `javax.net.ssl.X509TrustManager` `systemDefaultTrustManager`(`okhttp3.OkHttpClient` v6 @kind this) @signature `Lokhttp3/OkHttpClient;.systemDefaultTrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L215ad8.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L215ade.  v3:= temp @kind object;
  #L215ae0.  call temp:= `getInstance`(v3) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L215ae6.  v1:= temp @kind object;
  #L215ae8.  v3:= 0I;
  #L215aea.  v3:= (`java.security.KeyStore`) v3 @kind object;
  #L215aee.  call `init`(v1, v3) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L215af4.  call temp:= `getTrustManagers`(v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L215afa.  v2:= temp @kind object;
  #L215afc.  v3:= length @variable v2;
  #L215afe.  v4:= 1I;
  #L215b00.  if v3 != v4 then goto L215b12;
  #L215b04.  v3:= 0I;
  #L215b06.  v3:= v2[v3] @kind object;
  #L215b0a.  v3:= instanceof @variable v3 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L215b0e.  if v3 != 0 then goto L215b5c;
  #L215b12.  v3:= new `java.lang.IllegalStateException`;
  #L215b16.  v4:= new `java.lang.StringBuilder`;
  #L215b1a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L215b20.  v5:= "Unexpected default trust managers:" @kind object;
  #L215b24.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L215b2a.  v4:= temp @kind object;
  #L215b2c.  call temp:= `toString`(v2) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L215b32.  v5:= temp @kind object;
  #L215b34.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L215b3a.  v4:= temp @kind object;
  #L215b3c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L215b42.  v4:= temp @kind object;
  #L215b44.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L215b4a.  throw v3;
  #Try_end0.  
  #L215b4c.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L215b4e.  v3:= "No System TLS" @kind object;
  #L215b52.  call temp:= `assertionError`(v3, v0) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L215b58.  v3:= temp @kind object;
  #L215b5a.  throw v3;
  #L215b5c.  v3:= 0I;
  #Try_start1.  
  #L215b5e.  v3:= v2[v3] @kind object;
  #L215b62.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #Try_end1.  
  #L215b66.  return v3 @kind object;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L215b4c;
  catch `java.security.GeneralSecurityException` @[Try_start1..Try_end1] goto L215b4c;
}
procedure `okhttp3.Authenticator` `authenticator`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.authenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215b90.  v0:= v1.`okhttp3.OkHttpClient.authenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L215b94.  return v0 @kind object;
}
procedure `okhttp3.Cache` `cache`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.cache:()Lokhttp3/Cache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215ba8.  v0:= v1.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L215bac.  return v0 @kind object;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215bc0.  v0:= v1.`okhttp3.OkHttpClient.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L215bc4.  return v0 @kind object;
}
procedure `int` `connectTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215bd8.  v0:= v1.`okhttp3.OkHttpClient.connectTimeout` @type ^`int`;
  #L215bdc.  return v0;
}
procedure `okhttp3.ConnectionPool` `connectionPool`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectionPool:()Lokhttp3/ConnectionPool;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215bf0.  v0:= v1.`okhttp3.OkHttpClient.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L215bf4.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215c08.  v0:= v1.`okhttp3.OkHttpClient.connectionSpecs` @type ^`java.util.List` @kind object;
  #L215c0c.  return v0 @kind object;
}
procedure `okhttp3.CookieJar` `cookieJar`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.cookieJar:()Lokhttp3/CookieJar;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215c20.  v0:= v1.`okhttp3.OkHttpClient.cookieJar` @type ^`okhttp3.CookieJar` @kind object;
  #L215c24.  return v0 @kind object;
}
procedure `okhttp3.Dispatcher` `dispatcher`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215c38.  v0:= v1.`okhttp3.OkHttpClient.dispatcher` @type ^`okhttp3.Dispatcher` @kind object;
  #L215c3c.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215c50.  v0:= v1.`okhttp3.OkHttpClient.dns` @type ^`okhttp3.Dns` @kind object;
  #L215c54.  return v0 @kind object;
}
procedure `okhttp3.EventListener$Factory` `eventListenerFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.eventListenerFactory:()Lokhttp3/EventListener$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215c68.  v0:= v1.`okhttp3.OkHttpClient.eventListenerFactory` @type ^`okhttp3.EventListener$Factory` @kind object;
  #L215c6c.  return v0 @kind object;
}
procedure `boolean` `followRedirects`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.followRedirects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215c80.  v0:= v1.`okhttp3.OkHttpClient.followRedirects` @type ^`boolean` @kind boolean;
  #L215c84.  return v0;
}
procedure `boolean` `followSslRedirects`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.followSslRedirects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215c98.  v0:= v1.`okhttp3.OkHttpClient.followSslRedirects` @type ^`boolean` @kind boolean;
  #L215c9c.  return v0;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215cb0.  v0:= v1.`okhttp3.OkHttpClient.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L215cb4.  return v0 @kind object;
}
procedure `java.util.List` `interceptors`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.interceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215cc8.  v0:= v1.`okhttp3.OkHttpClient.interceptors` @type ^`java.util.List` @kind object;
  #L215ccc.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.InternalCache` `internalCache`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.internalCache:()Lokhttp3/internal/cache/InternalCache;` @AccessFlag  {
    temp;
    v0;

  #L215ce0.  v0:= v1.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L215ce4.  if v0 == 0 then goto L215cf2;
  #L215ce8.  v0:= v1.`okhttp3.OkHttpClient.cache` @type ^`okhttp3.Cache` @kind object;
  #L215cec.  v0:= v0.`okhttp3.Cache.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215cf0.  return v0 @kind object;
  #L215cf2.  v0:= v1.`okhttp3.OkHttpClient.internalCache` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L215cf6.  goto L215cf0;
}
procedure `java.util.List` `networkInterceptors`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.networkInterceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215d08.  v0:= v1.`okhttp3.OkHttpClient.networkInterceptors` @type ^`java.util.List` @kind object;
  #L215d0c.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient$Builder` `newBuilder`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.newBuilder:()Lokhttp3/OkHttpClient$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215d20.  v0:= new `okhttp3.OkHttpClient$Builder`;
  #L215d24.  call `<init>`(v0, v1) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:(Lokhttp3/OkHttpClient;)V` @kind direct;
  #L215d2a.  return v0 @kind object;
}
procedure `okhttp3.Call` `newCall`(`okhttp3.OkHttpClient` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/OkHttpClient;.newCall:(Lokhttp3/Request;)Lokhttp3/Call;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215d3c.  v0:= 0I;
  #L215d3e.  call temp:= `newRealCall`(v1, v2, v0) @signature `Lokhttp3/RealCall;.newRealCall:(Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)Lokhttp3/RealCall;` @kind static;
  #L215d44.  v0:= temp @kind object;
  #L215d46.  return v0 @kind object;
}
procedure `okhttp3.WebSocket` `newWebSocket`(`okhttp3.OkHttpClient` v6 @kind this, `okhttp3.Request` v7 @kind object @name `request`, `okhttp3.WebSocketListener` v8 @kind object @name `listener`) @signature `Lokhttp3/OkHttpClient;.newWebSocket:(Lokhttp3/Request;Lokhttp3/WebSocketListener;)Lokhttp3/WebSocket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L215d58.  v0:= new `okhttp3.internal.ws.RealWebSocket`;
  #L215d5c.  v3:= new `java.util.Random`;
  #L215d60.  call `<init>`(v3) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L215d66.  v1:= v6.`okhttp3.OkHttpClient.pingInterval` @type ^`int`;
  #L215d6a.  v4:= (`long`) v1 @kind i2l;
  #L215d6c.  v1:= v7 @kind object;
  #L215d6e.  v2:= v8 @kind object;
  #L215d70.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/ws/RealWebSocket;.<init>:(Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;J)V` @kind direct;
  #L215d76.  call `connect`(v0, v6) @signature `Lokhttp3/internal/ws/RealWebSocket;.connect:(Lokhttp3/OkHttpClient;)V` @kind virtual;
  #L215d7c.  return v0 @kind object;
}
procedure `int` `pingIntervalMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.pingIntervalMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215d90.  v0:= v1.`okhttp3.OkHttpClient.pingInterval` @type ^`int`;
  #L215d94.  return v0;
}
procedure `java.util.List` `protocols`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215da8.  v0:= v1.`okhttp3.OkHttpClient.protocols` @type ^`java.util.List` @kind object;
  #L215dac.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215dc0.  v0:= v1.`okhttp3.OkHttpClient.proxy` @type ^`java.net.Proxy` @kind object;
  #L215dc4.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215dd8.  v0:= v1.`okhttp3.OkHttpClient.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L215ddc.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215df0.  v0:= v1.`okhttp3.OkHttpClient.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L215df4.  return v0 @kind object;
}
procedure `int` `readTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.readTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215e08.  v0:= v1.`okhttp3.OkHttpClient.readTimeout` @type ^`int`;
  #L215e0c.  return v0;
}
procedure `boolean` `retryOnConnectionFailure`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215e20.  v0:= v1.`okhttp3.OkHttpClient.retryOnConnectionFailure` @type ^`boolean` @kind boolean;
  #L215e24.  return v0;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215e38.  v0:= v1.`okhttp3.OkHttpClient.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L215e3c.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215e50.  v0:= v1.`okhttp3.OkHttpClient.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L215e54.  return v0 @kind object;
}
procedure `int` `writeTimeoutMillis`(`okhttp3.OkHttpClient` v1 @kind this) @signature `Lokhttp3/OkHttpClient;.writeTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215e68.  v0:= v1.`okhttp3.OkHttpClient.writeTimeout` @type ^`int`;
  #L215e6c.  return v0;
}

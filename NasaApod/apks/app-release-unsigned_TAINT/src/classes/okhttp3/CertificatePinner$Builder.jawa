record `okhttp3.CertificatePinner$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.CertificatePinner$Builder.pins` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner$Builder` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19556c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L195572.  v0:= new `java.util.ArrayList`;
  #L195576.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19557c.  v1.`okhttp3.CertificatePinner$Builder.pins` @type ^`java.util.List` := v0 @kind object;
  #L195580.  return @kind void;
}
procedure `okhttp3.CertificatePinner$Builder` `add`(`okhttp3.CertificatePinner$Builder` v5 @kind this, `java.lang.String` v6 @kind object @name `pattern`, `java.lang.String`[] v7 @kind object @name `pins`) @signature `Lokhttp3/CertificatePinner$Builder;.add:(Ljava/lang/String;[Ljava/lang/String;)Lokhttp3/CertificatePinner$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L195594.  if v6 != 0 then goto L1955a8;
  #L195598.  v1:= new `java.lang.NullPointerException`;
  #L19559c.  v2:= "pattern == null" @kind object;
  #L1955a0.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1955a6.  throw v1;
  #L1955a8.  v2:= length @variable v7;
  #L1955aa.  v1:= 0I;
  #L1955ac.  if v1 >= v2 then goto L1955ce;
  #L1955b0.  v0:= v7[v1] @kind object;
  #L1955b4.  v3:= v5.`okhttp3.CertificatePinner$Builder.pins` @type ^`java.util.List` @kind object;
  #L1955b8.  v4:= new `okhttp3.CertificatePinner$Pin`;
  #L1955bc.  call `<init>`(v4, v6, v0) @signature `Lokhttp3/CertificatePinner$Pin;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1955c2.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1955c8.  v1:= v1 + 1;
  #L1955cc.  goto L1955ac;
  #L1955ce.  return v5 @kind object;
}
procedure `okhttp3.CertificatePinner` `build`(`okhttp3.CertificatePinner$Builder` v3 @kind this) @signature `Lokhttp3/CertificatePinner$Builder;.build:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1955e0.  v0:= new `okhttp3.CertificatePinner`;
  #L1955e4.  v1:= new `java.util.LinkedHashSet`;
  #L1955e8.  v2:= v3.`okhttp3.CertificatePinner$Builder.pins` @type ^`java.util.List` @kind object;
  #L1955ec.  call `<init>`(v1, v2) @signature `Ljava/util/LinkedHashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1955f2.  v2:= 0I;
  #L1955f4.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @kind direct;
  #L1955fa.  return v0 @kind object;
}

record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19c700.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L19c704.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19c70a.  v0:= temp @kind object;
  #L19c70c.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19c710.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L19c714.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L19c71a.  v0:= temp @kind object;
  #L19c71c.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L19c720.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object @name `mediaType`, `java.lang.String` v2 @kind object @name `type`, `java.lang.String` v3 @kind object @name `subtype`, `java.lang.String` v4 @kind object @name `charset`) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19c734.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19c73a.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L19c73e.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L19c742.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L19c746.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L19c74a.  return @kind void;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v14 @kind object @name `string`) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L19c75c.  v9:= 0I;
  #L19c75e.  v13:= 2I;
  #L19c760.  v12:= 1I;
  #L19c762.  v10:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L19c766.  call temp:= `matcher`(v10, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19c76c.  v8:= temp @kind object;
  #L19c76e.  call temp:= `lookingAt`(v8) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L19c774.  v10:= temp;
  #L19c776.  if v10 != 0 then goto L19c77c;
  #L19c77a.  return v9 @kind object;
  #L19c77c.  call temp:= `group`(v8, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c782.  v10:= temp @kind object;
  #L19c784.  v11:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19c788.  call temp:= `toLowerCase`(v10, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19c78e.  v7:= temp @kind object;
  #L19c790.  call temp:= `group`(v8, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c796.  v10:= temp @kind object;
  #L19c798.  v11:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19c79c.  call temp:= `toLowerCase`(v10, v11) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19c7a2.  v5:= temp @kind object;
  #L19c7a4.  v0:= 0I;
  #L19c7a6.  v10:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L19c7aa.  call temp:= `matcher`(v10, v14) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L19c7b0.  v3:= temp @kind object;
  #L19c7b2.  call temp:= `end`(v8) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L19c7b8.  v4:= temp;
  #L19c7ba.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c7c0.  v10:= temp;
  #L19c7c2.  if v4 >= v10 then goto L19c876;
  #L19c7c6.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c7cc.  v10:= temp;
  #L19c7ce.  call temp:= `region`(v3, v4, v10) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L19c7d4.  call temp:= `lookingAt`(v3) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L19c7da.  v10:= temp;
  #L19c7dc.  if v10 == 0 then goto L19c77a;
  #L19c7e0.  call temp:= `group`(v3, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c7e6.  v2:= temp @kind object;
  #L19c7e8.  if v2 == 0 then goto L19c7fc;
  #L19c7ec.  v10:= "charset" @kind object;
  #L19c7f0.  call temp:= `equalsIgnoreCase`(v2, v10) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19c7f6.  v10:= temp;
  #L19c7f8.  if v10 != 0 then goto L19c806;
  #L19c7fc.  call temp:= `end`(v3) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L19c802.  v4:= temp;
  #L19c804.  goto L19c7ba;
  #L19c806.  call temp:= `group`(v3, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c80c.  v6:= temp @kind object;
  #L19c80e.  if v6 == 0 then goto L19c86a;
  #L19c812.  v10:= "'" @kind object;
  #L19c816.  call temp:= `startsWith`(v6, v10) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19c81c.  v10:= temp;
  #L19c81e.  if v10 == 0 then goto L19c866;
  #L19c822.  v10:= "'" @kind object;
  #L19c826.  call temp:= `endsWith`(v6, v10) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L19c82c.  v10:= temp;
  #L19c82e.  if v10 == 0 then goto L19c866;
  #L19c832.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c838.  v10:= temp;
  #L19c83a.  if v10 <= v13 then goto L19c866;
  #L19c83e.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c844.  v10:= temp;
  #L19c846.  v10:= v10 + -1;
  #L19c84a.  call temp:= `substring`(v6, v12, v10) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19c850.  v1:= temp @kind object;
  #L19c852.  if v0 == 0 then goto L19c862;
  #L19c856.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L19c85c.  v10:= temp;
  #L19c85e.  if v10 == 0 then goto L19c77a;
  #L19c862.  v0:= v1 @kind object;
  #L19c864.  goto L19c7fc;
  #L19c866.  v1:= v6 @kind object;
  #L19c868.  goto L19c852;
  #L19c86a.  v10:= 3I;
  #L19c86c.  call temp:= `group`(v3, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L19c872.  v1:= temp @kind object;
  #L19c874.  goto L19c852;
  #L19c876.  v9:= new `okhttp3.MediaType`;
  #L19c87a.  call `<init>`(v9, v14, v7, v5, v0) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L19c880.  goto L19c77a;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c894.  v0:= 0I;
  #L19c896.  call temp:= `charset`(v1, v0) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L19c89c.  v0:= temp @kind object;
  #L19c89e.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v2 @kind this, `java.nio.charset.Charset` v3 @kind object @name `defaultValue`) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L19c8b0.  v1:= v2.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L19c8b4.  if v1 == 0 then goto L19c8c4;
  #L19c8b8.  v1:= v2.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L19c8bc.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #Try_end0.  
  #L19c8c2.  v3:= temp @kind object;
  #L19c8c4.  return v3 @kind object;
  #L19c8c6.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L19c8c8.  goto L19c8c4;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L19c8c6;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v2 @kind this, `java.lang.Object` v3 @kind object @name `other`) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19c8ec.  v0:= instanceof @variable v3 @type ^`okhttp3.MediaType` @kind boolean;
  #L19c8f0.  if v0 == 0 then goto L19c910;
  #L19c8f4.  v3:= (`okhttp3.MediaType`) v3 @kind object;
  #L19c8f8.  v0:= v3.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19c8fc.  v1:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19c900.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c906.  v0:= temp;
  #L19c908.  if v0 == 0 then goto L19c910;
  #L19c90c.  v0:= 1I;
  #L19c90e.  return v0;
  #L19c910.  v0:= 0I;
  #L19c912.  goto L19c90e;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c924.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19c928.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19c92e.  v0:= temp;
  #L19c930.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c944.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L19c948.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c95c.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L19c960.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c974.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L19c978.  return v0 @kind object;
}

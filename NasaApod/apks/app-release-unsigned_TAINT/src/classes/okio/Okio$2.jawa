record `okio.Okio$2` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `java.io.InputStream` `okio.Okio$2.val$in` @AccessFlag FINAL_SYNTHETIC;
  `okio.Timeout` `okio.Okio$2.val$timeout` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Okio$2` v0 @kind this, `okio.Timeout` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L21ff70.  v0.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` := v1 @kind object;
  #L21ff74.  v0.`okio.Okio$2.val$in` @type ^`java.io.InputStream` := v2 @kind object;
  #L21ff78.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21ff7e.  return @kind void;
}
procedure `void` `close`(`okio.Okio$2` v1 @kind this) @signature `Lokio/Okio$2;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21ff90.  v0:= v1.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L21ff94.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L21ff9a.  return @kind void;
}
procedure `long` `read`(`okio.Okio$2` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokio/Okio$2;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L21ffac.  v4:= 0L;
  #L21ffb0.  v6:= lcmp(v10, v4);
  #L21ffb4.  if v6 >= 0 then goto L21ffea;
  #L21ffb8.  v4:= new `java.lang.IllegalArgumentException`;
  #L21ffbc.  v5:= new `java.lang.StringBuilder`;
  #L21ffc0.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21ffc6.  v6:= "byteCount < 0: " @kind object;
  #L21ffca.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ffd0.  v5:= temp @kind object;
  #L21ffd2.  call temp:= `append`(v5, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L21ffd8.  v5:= temp @kind object;
  #L21ffda.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21ffe0.  v5:= temp @kind object;
  #L21ffe2.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21ffe8.  throw v4;
  #L21ffea.  v6:= lcmp(v10, v4);
  #L21ffee.  if v6 != 0 then goto L21fff4;
  #L21fff2.  return v4 @kind wide;
  #Try_start0.  
  #L21fff4.  v4:= v8.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` @kind object;
  #L21fff8.  call `throwIfReached`(v4) @signature `Lokio/Timeout;.throwIfReached:()V` @kind virtual;
  #L21fffe.  v4:= 1I;
  #L220000.  call temp:= `writableSegment`(v9, v4) @signature `Lokio/Buffer;.writableSegment:(I)Lokio/Segment;` @kind virtual;
  #L220006.  v3:= temp @kind object;
  #L220008.  v4:= v3.`okio.Segment.limit` @type ^`int`;
  #L22000c.  v4:= v4 - 8192;
  #L220010.  v4:= (`long`) v4 @kind i2l;
  #L220012.  call temp:= `min`(v10, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L220018.  v4:= temp @kind wide;
  #L22001a.  v2:= (`int`) v4 @kind l2i;
  #L22001c.  v4:= v8.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L220020.  v5:= v3.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L220024.  v6:= v3.`okio.Segment.limit` @type ^`int`;
  #L220028.  call temp:= `read`(v4, v5, v6, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L22002e.  v0:= temp;
  #L220030.  v4:= -1I;
  #L220032.  if v0 != v4 then goto L22003c;
  #L220036.  v4:= -1L;
  #L22003a.  goto L21fff2;
  #L22003c.  v4:= v3.`okio.Segment.limit` @type ^`int`;
  #L220040.  v4:= v4 + v0 @kind int;
  #L220042.  v3.`okio.Segment.limit` @type ^`int` := v4;
  #L220046.  v4:= v9.`okio.Buffer.size` @type ^`long` @kind wide;
  #L22004a.  v6:= (`long`) v0 @kind i2l;
  #L22004c.  v4:= v4 + v6 @kind long;
  #L22004e.  v9.`okio.Buffer.size` @type ^`long` := v4 @kind wide;
  #Try_end0.  
  #L220052.  v4:= (`long`) v0 @kind i2l;
  #L220054.  goto L21fff2;
  #L220056.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L220058.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lokio/Okio;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L22005e.  v4:= temp;
  #L220060.  if v4 == 0 then goto L220070;
  #L220064.  v4:= new `java.io.IOException`;
  #L220068.  call `<init>`(v4, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L22006e.  throw v4;
  #L220070.  throw v1;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L220056;
}
procedure `okio.Timeout` `timeout`(`okio.Okio$2` v1 @kind this) @signature `Lokio/Okio$2;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L220094.  v0:= v1.`okio.Okio$2.val$timeout` @type ^`okio.Timeout` @kind object;
  #L220098.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.Okio$2` v2 @kind this) @signature `Lokio/Okio$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2200ac.  v0:= new `java.lang.StringBuilder`;
  #L2200b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2200b6.  v1:= "source(" @kind object;
  #L2200ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2200c0.  v0:= temp @kind object;
  #L2200c2.  v1:= v2.`okio.Okio$2.val$in` @type ^`java.io.InputStream` @kind object;
  #L2200c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2200cc.  v0:= temp @kind object;
  #L2200ce.  v1:= ")" @kind object;
  #L2200d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2200d8.  v0:= temp @kind object;
  #L2200da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2200e0.  v0:= temp @kind object;
  #L2200e2.  return v0 @kind object;
}

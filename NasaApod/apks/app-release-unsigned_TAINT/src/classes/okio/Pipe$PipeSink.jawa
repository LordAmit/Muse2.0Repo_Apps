record `okio.Pipe$PipeSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `okio.Pipe` `okio.Pipe$PipeSink.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.Timeout` `okio.Pipe$PipeSink.timeout` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okio.Pipe$PipeSink` v1 @kind this, `okio.Pipe` v2 @kind object @name `this$0`) @signature `Lokio/Pipe$PipeSink;.<init>:(Lokio/Pipe;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L220164.  v1.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` := v2 @kind object;
  #L220168.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22016e.  v0:= new `okio.Timeout`;
  #L220172.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L220178.  v1.`okio.Pipe$PipeSink.timeout` @type ^`okio.Timeout` := v0 @kind object;
  #L22017c.  return @kind void;
}
procedure `void` `close`(`okio.Pipe$PipeSink` v6 @kind this) @signature `Lokio/Pipe$PipeSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L220190.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220194.  v1:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220198.  @monitorenter v1
  #Try_start0.  
  #L22019a.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L22019e.  v0:= v0.`okio.Pipe.sinkClosed` @type ^`boolean` @kind boolean;
  #L2201a2.  if v0 == 0 then goto L2201aa;
  #L2201a6.  @monitorexit v1
  #L2201a8.  return @kind void;
  #L2201aa.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2201ae.  v0:= v0.`okio.Pipe.sourceClosed` @type ^`boolean` @kind boolean;
  #L2201b2.  if v0 == 0 then goto L2201e8;
  #L2201b6.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2201ba.  v0:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L2201be.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2201c4.  v2:= temp @kind wide;
  #L2201c6.  v4:= 0L;
  #L2201ca.  v0:= lcmp(v2, v4);
  #L2201ce.  if v0 <= 0 then goto L2201e8;
  #L2201d2.  v0:= new `java.io.IOException`;
  #L2201d6.  v2:= "source is closed" @kind object;
  #L2201da.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2201e0.  throw v0;
  #L2201e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2201e4.  @monitorexit v1
  #Try_end0.  
  #L2201e6.  throw v0;
  #Try_start1.  
  #L2201e8.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2201ec.  v2:= 1I;
  #L2201ee.  v0.`okio.Pipe.sinkClosed` @type ^`boolean` := v2 @kind boolean;
  #L2201f2.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2201f6.  v0:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L2201fa.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L220200.  @monitorexit v1
  #Try_end1.  
  #L220202.  goto L2201a8;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L2201e2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L2201e2;
}
procedure `void` `flush`(`okio.Pipe$PipeSink` v6 @kind this) @signature `Lokio/Pipe$PipeSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L220228.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L22022c.  v1:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220230.  @monitorenter v1
  #Try_start0.  
  #L220232.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220236.  v0:= v0.`okio.Pipe.sinkClosed` @type ^`boolean` @kind boolean;
  #L22023a.  if v0 == 0 then goto L220254;
  #L22023e.  v0:= new `java.lang.IllegalStateException`;
  #L220242.  v2:= "closed" @kind object;
  #L220246.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22024c.  throw v0;
  #L22024e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L220250.  @monitorexit v1
  #Try_end0.  
  #L220252.  throw v0;
  #Try_start1.  
  #L220254.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220258.  v0:= v0.`okio.Pipe.sourceClosed` @type ^`boolean` @kind boolean;
  #L22025c.  if v0 == 0 then goto L22028c;
  #L220260.  v0:= v6.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220264.  v0:= v0.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220268.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L22026e.  v2:= temp @kind wide;
  #L220270.  v4:= 0L;
  #L220274.  v0:= lcmp(v2, v4);
  #L220278.  if v0 <= 0 then goto L22028c;
  #L22027c.  v0:= new `java.io.IOException`;
  #L220280.  v2:= "source is closed" @kind object;
  #L220284.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22028a.  throw v0;
  #L22028c.  @monitorexit v1
  #Try_end1.  
  #L22028e.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L22024e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L22024e;
}
procedure `okio.Timeout` `timeout`(`okio.Pipe$PipeSink` v1 @kind this) @signature `Lokio/Pipe$PipeSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2202b4.  v0:= v1.`okio.Pipe$PipeSink.timeout` @type ^`okio.Timeout` @kind object;
  #L2202b8.  return v0 @kind object;
}
procedure `void` `write`(`okio.Pipe$PipeSink` v12 @kind this, `okio.Buffer` v13 @kind object @name `source`, `long` v14 @name `byteCount`) @signature `Lokio/Pipe$PipeSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2202cc.  v10:= 0L;
  #L2202d0.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2202d4.  v5:= v4.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L2202d8.  @monitorenter v5
  #Try_start0.  
  #L2202da.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L2202de.  v4:= v4.`okio.Pipe.sinkClosed` @type ^`boolean` @kind boolean;
  #L2202e2.  if v4 == 0 then goto L220332;
  #L2202e6.  v4:= new `java.lang.IllegalStateException`;
  #L2202ea.  v6:= "closed" @kind object;
  #L2202ee.  call `<init>`(v4, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2202f4.  throw v4;
  #L2202f6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2202f8.  @monitorexit v5
  #Try_end0.  
  #L2202fa.  throw v4;
  #Try_start1.  
  #L2202fc.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220300.  v6:= v4.`okio.Pipe.maxBufferSize` @type ^`long` @kind wide;
  #L220304.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220308.  v4:= v4.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L22030c.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L220312.  v8:= temp @kind wide;
  #L220314.  v0:= v6 - v8 @kind long;
  #L220318.  v4:= lcmp(v0, v10);
  #L22031c.  if v4 != 0 then goto L220356;
  #L220320.  v4:= v12.`okio.Pipe$PipeSink.timeout` @type ^`okio.Timeout` @kind object;
  #L220324.  v6:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220328.  v6:= v6.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L22032c.  call `waitUntilNotified`(v4, v6) @signature `Lokio/Timeout;.waitUntilNotified:(Ljava/lang/Object;)V` @kind virtual;
  #L220332.  v4:= lcmp(v14, v10);
  #L220336.  if v4 <= 0 then goto L22037e;
  #L22033a.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L22033e.  v4:= v4.`okio.Pipe.sourceClosed` @type ^`boolean` @kind boolean;
  #L220342.  if v4 == 0 then goto L2202fc;
  #L220346.  v4:= new `java.io.IOException`;
  #L22034a.  v6:= "source is closed" @kind object;
  #L22034e.  call `<init>`(v4, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L220354.  throw v4;
  #L220356.  call temp:= `min`(v0, v14) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L22035c.  v2:= temp @kind wide;
  #L22035e.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220362.  v4:= v4.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220366.  call `write`(v4, v13, v2) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L22036c.  v14:= v14 - v2 @kind long;
  #L22036e.  v4:= v12.`okio.Pipe$PipeSink.this$0` @type ^`okio.Pipe` @kind object;
  #L220372.  v4:= v4.`okio.Pipe.buffer` @type ^`okio.Buffer` @kind object;
  #L220376.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L22037c.  goto L220332;
  #L22037e.  @monitorexit v5
  #Try_end1.  
  #L220380.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L2202f6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L2202f6;
}

record `okio.RealBufferedSource$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.RealBufferedSource` `okio.RealBufferedSource$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSource$1` v0 @kind this, `okio.RealBufferedSource` v1 @kind object @name `this$0`) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1aeffc.  v0.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` := v1 @kind object;
  #L1af000.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1af006.  return @kind void;
}
procedure `int` `available`(`okio.RealBufferedSource$1` v4 @kind this) @signature `Lokio/RealBufferedSource$1;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1af018.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af01c.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1af020.  if v0 == 0 then goto L1af034;
  #L1af024.  v0:= new `java.io.IOException`;
  #L1af028.  v1:= "closed" @kind object;
  #L1af02c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af032.  throw v0;
  #L1af034.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af038.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af03c.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1af040.  v2:= 2147483647L;
  #L1af046.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1af04c.  v0:= temp @kind wide;
  #L1af04e.  v0:= (`int`) v0 @kind l2i;
  #L1af050.  return v0;
}
procedure `void` `close`(`okio.RealBufferedSource$1` v1 @kind this) @signature `Lokio/RealBufferedSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1af064.  v0:= v1.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af068.  call `close`(v0) @signature `Lokio/RealBufferedSource;.close:()V` @kind virtual;
  #L1af06e.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v6 @kind this) @signature `Lokio/RealBufferedSource$1;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1af080.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af084.  v2:= v2.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1af088.  if v2 == 0 then goto L1af09c;
  #L1af08c.  v2:= new `java.io.IOException`;
  #L1af090.  v3:= "closed" @kind object;
  #L1af094.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af09a.  throw v2;
  #L1af09c.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af0a0.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af0a4.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1af0a8.  v4:= 0L;
  #L1af0ac.  v2:= lcmp(v2, v4);
  #L1af0b0.  if v2 != 0 then goto L1af0e0;
  #L1af0b4.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af0b8.  v2:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1af0bc.  v3:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af0c0.  v3:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af0c4.  v4:= 8192L;
  #L1af0c8.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1af0ce.  v0:= temp @kind wide;
  #L1af0d0.  v2:= -1L;
  #L1af0d4.  v2:= lcmp(v0, v2);
  #L1af0d8.  if v2 != 0 then goto L1af0e0;
  #L1af0dc.  v2:= -1I;
  #L1af0de.  return v2;
  #L1af0e0.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af0e4.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af0e8.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1af0ee.  v2:= temp;
  #L1af0f0.  v2:= v2 ^& 255;
  #L1af0f4.  goto L1af0de;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v8 @kind this, `byte`[] v9 @kind object @name `data`, `int` v10 @name `offset`, `int` v11 @name `byteCount`) @signature `Lokio/RealBufferedSource$1;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1af108.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af10c.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1af110.  if v0 == 0 then goto L1af124;
  #L1af114.  v0:= new `java.io.IOException`;
  #L1af118.  v1:= "closed" @kind object;
  #L1af11c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af122.  throw v0;
  #L1af124.  v0:= length @variable v9;
  #L1af126.  v0:= (`long`) v0 @kind i2l;
  #L1af128.  v2:= (`long`) v10 @kind i2l;
  #L1af12a.  v4:= (`long`) v11 @kind i2l;
  #L1af12c.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1af132.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af136.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af13a.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L1af13e.  v2:= 0L;
  #L1af142.  v0:= lcmp(v0, v2);
  #L1af146.  if v0 != 0 then goto L1af176;
  #L1af14a.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af14e.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1af152.  v1:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af156.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af15a.  v2:= 8192L;
  #L1af15e.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1af164.  v6:= temp @kind wide;
  #L1af166.  v0:= -1L;
  #L1af16a.  v0:= lcmp(v6, v0);
  #L1af16e.  if v0 != 0 then goto L1af176;
  #L1af172.  v0:= -1I;
  #L1af174.  return v0;
  #L1af176.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af17a.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L1af17e.  call temp:= `read`(v0, v9, v10, v11) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L1af184.  v0:= temp;
  #L1af186.  goto L1af174;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource$1` v2 @kind this) @signature `Lokio/RealBufferedSource$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1af198.  v0:= new `java.lang.StringBuilder`;
  #L1af19c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af1a2.  v1:= v2.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L1af1a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af1ac.  v0:= temp @kind object;
  #L1af1ae.  v1:= ".inputStream()" @kind object;
  #L1af1b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af1b8.  v0:= temp @kind object;
  #L1af1ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af1c0.  v0:= temp @kind object;
  #L1af1c2.  return v0 @kind object;
}

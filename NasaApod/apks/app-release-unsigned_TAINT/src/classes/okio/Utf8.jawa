record `okio.Utf8` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.Utf8` v0 @kind this) @signature `Lokio/Utf8;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1af924.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1af92a.  return @kind void;
}
procedure `long` `size`(`java.lang.String` v2 @kind object @name `string`) @signature `Lokio/Utf8;.size:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1af93c.  v0:= 0I;
  #L1af93e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1af944.  v1:= temp;
  #L1af946.  call temp:= `size`(v2, v0, v1) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @kind static;
  #L1af94c.  v0:= temp @kind wide;
  #L1af94e.  return v0 @kind wide;
}
procedure `long` `size`(`java.lang.String` v12 @kind object @name `string`, `int` v13 @name `beginIndex`, `int` v14 @name `endIndex`) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1af960.  v10:= 1L;
  #L1af964.  v8:= 57343I;
  #L1af96a.  if v12 != 0 then goto L1af97e;
  #L1af96e.  v3:= new `java.lang.IllegalArgumentException`;
  #L1af972.  v6:= "string == null" @kind object;
  #L1af976.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af97c.  throw v3;
  #L1af97e.  if v13 >= 0 then goto L1af9b4;
  #L1af982.  v3:= new `java.lang.IllegalArgumentException`;
  #L1af986.  v6:= new `java.lang.StringBuilder`;
  #L1af98a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af990.  v7:= "beginIndex < 0: " @kind object;
  #L1af994.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af99a.  v6:= temp @kind object;
  #L1af99c.  call temp:= `append`(v6, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af9a2.  v6:= temp @kind object;
  #L1af9a4.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af9aa.  v6:= temp @kind object;
  #L1af9ac.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af9b2.  throw v3;
  #L1af9b4.  if v14 >= v13 then goto L1af9fe;
  #L1af9b8.  v3:= new `java.lang.IllegalArgumentException`;
  #L1af9bc.  v6:= new `java.lang.StringBuilder`;
  #L1af9c0.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af9c6.  v7:= "endIndex < beginIndex: " @kind object;
  #L1af9ca.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af9d0.  v6:= temp @kind object;
  #L1af9d2.  call temp:= `append`(v6, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af9d8.  v6:= temp @kind object;
  #L1af9da.  v7:= " < " @kind object;
  #L1af9de.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af9e4.  v6:= temp @kind object;
  #L1af9e6.  call temp:= `append`(v6, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af9ec.  v6:= temp @kind object;
  #L1af9ee.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af9f4.  v6:= temp @kind object;
  #L1af9f6.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af9fc.  throw v3;
  #L1af9fe.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1afa04.  v3:= temp;
  #L1afa06.  if v14 <= v3 then goto L1afa58;
  #L1afa0a.  v3:= new `java.lang.IllegalArgumentException`;
  #L1afa0e.  v6:= new `java.lang.StringBuilder`;
  #L1afa12.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1afa18.  v7:= "endIndex > string.length: " @kind object;
  #L1afa1c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afa22.  v6:= temp @kind object;
  #L1afa24.  call temp:= `append`(v6, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afa2a.  v6:= temp @kind object;
  #L1afa2c.  v7:= " > " @kind object;
  #L1afa30.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afa36.  v6:= temp @kind object;
  #L1afa38.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1afa3e.  v7:= temp;
  #L1afa40.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1afa46.  v6:= temp @kind object;
  #L1afa48.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1afa4e.  v6:= temp @kind object;
  #L1afa50.  call `<init>`(v3, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1afa56.  throw v3;
  #L1afa58.  v4:= 0L;
  #L1afa5c.  v1:= v13;
  #L1afa5e.  if v1 >= v14 then goto L1afaec;
  #L1afa62.  call temp:= `charAt`(v12, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1afa68.  v0:= temp;
  #L1afa6a.  v3:= 128I;
  #L1afa6e.  if v0 >= v3 then goto L1afa7a;
  #L1afa72.  v4:= v4 + v10 @kind long;
  #L1afa74.  v1:= v1 + 1;
  #L1afa78.  goto L1afa5e;
  #L1afa7a.  v3:= 2048I;
  #L1afa7e.  if v0 >= v3 then goto L1afa8e;
  #L1afa82.  v6:= 2L;
  #L1afa86.  v4:= v4 + v6 @kind long;
  #L1afa88.  v1:= v1 + 1;
  #L1afa8c.  goto L1afa5e;
  #L1afa8e.  v3:= 55296I;
  #L1afa94.  if v0 < v3 then goto L1afa9c;
  #L1afa98.  if v0 <= v8 then goto L1afaa8;
  #L1afa9c.  v6:= 3L;
  #L1afaa0.  v4:= v4 + v6 @kind long;
  #L1afaa2.  v1:= v1 + 1;
  #L1afaa6.  goto L1afa5e;
  #L1afaa8.  v3:= v1 + 1;
  #L1afaac.  if v3 >= v14 then goto L1afadc;
  #L1afab0.  v3:= v1 + 1;
  #L1afab4.  call temp:= `charAt`(v12, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1afaba.  v2:= temp;
  #L1afabc.  v3:= 56319I;
  #L1afac2.  if v0 > v3 then goto L1afad4;
  #L1afac6.  v3:= 56320I;
  #L1afacc.  if v2 < v3 then goto L1afad4;
  #L1afad0.  if v2 <= v8 then goto L1afae0;
  #L1afad4.  v4:= v4 + v10 @kind long;
  #L1afad6.  v1:= v1 + 1;
  #L1afada.  goto L1afa5e;
  #L1afadc.  v2:= 0I;
  #L1afade.  goto L1afabc;
  #L1afae0.  v6:= 4L;
  #L1afae4.  v4:= v4 + v6 @kind long;
  #L1afae6.  v1:= v1 + 2;
  #L1afaea.  goto L1afa5e;
  #L1afaec.  return v4 @kind wide;
}

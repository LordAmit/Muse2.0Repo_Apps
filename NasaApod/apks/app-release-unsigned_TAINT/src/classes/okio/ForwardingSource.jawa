record `okio.ForwardingSource` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.Source` @kind interface {
  `okio.Source` `okio.ForwardingSource.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.ForwardingSource` v2 @kind this, `okio.Source` v3 @kind object @name `delegate`) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L21f134.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21f13a.  if v3 != 0 then goto L21f14e;
  #L21f13e.  v0:= new `java.lang.IllegalArgumentException`;
  #L21f142.  v1:= "delegate == null" @kind object;
  #L21f146.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21f14c.  throw v0;
  #L21f14e.  v2.`okio.ForwardingSource.delegate` @type ^`okio.Source` := v3 @kind object;
  #L21f152.  return @kind void;
}
procedure `void` `close`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21f164.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f168.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L21f16e.  return @kind void;
}
procedure `okio.Source` `delegate`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.delegate:()Lokio/Source;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21f180.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f184.  return v0 @kind object;
}
procedure `long` `read`(`okio.ForwardingSource` v2 @kind this, `okio.Buffer` v3 @kind object @name `sink`, `long` v4 @name `byteCount`) @signature `Lokio/ForwardingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f198.  v0:= v2.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f19c.  call temp:= `read`(v0, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L21f1a2.  v0:= temp @kind wide;
  #L21f1a4.  return v0 @kind wide;
}
procedure `okio.Timeout` `timeout`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21f1b8.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f1bc.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L21f1c2.  v0:= temp @kind object;
  #L21f1c4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ForwardingSource` v2 @kind this) @signature `Lokio/ForwardingSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f1d8.  v0:= new `java.lang.StringBuilder`;
  #L21f1dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21f1e2.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21f1e8.  v1:= temp @kind object;
  #L21f1ea.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L21f1f0.  v1:= temp @kind object;
  #L21f1f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f1f8.  v0:= temp @kind object;
  #L21f1fa.  v1:= "(" @kind object;
  #L21f1fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f204.  v0:= temp @kind object;
  #L21f206.  v1:= v2.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L21f20a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L21f210.  v1:= temp @kind object;
  #L21f212.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f218.  v0:= temp @kind object;
  #L21f21a.  v1:= ")" @kind object;
  #L21f21e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f224.  v0:= temp @kind object;
  #L21f226.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21f22c.  v0:= temp @kind object;
  #L21f22e.  return v0 @kind object;
}

record `okio.Okio` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@okio.Okio.logger` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Okio;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ae9d8.  v0:= constclass @type ^`okio.Okio` @kind object;
  #L1ae9dc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1ae9e2.  v0:= temp @kind object;
  #L1ae9e4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1ae9ea.  v0:= temp @kind object;
  #L1ae9ec.  `@@okio.Okio.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L1ae9f0.  return @kind void;
}
procedure `void` `<init>`(`okio.Okio` v0 @kind this) @signature `Lokio/Okio;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1aea04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aea0a.  return @kind void;
}
procedure `okio.Sink` `appendingSink`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.appendingSink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1aea1c.  if v2 != 0 then goto L1aea30;
  #L1aea20.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aea24.  v1:= "file == null" @kind object;
  #L1aea28.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aea2e.  throw v0;
  #L1aea30.  v0:= new `java.io.FileOutputStream`;
  #L1aea34.  v1:= 1I;
  #L1aea36.  call `<init>`(v0, v2, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L1aea3c.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L1aea42.  v0:= temp @kind object;
  #L1aea44.  return v0 @kind object;
}
procedure `okio.Sink` `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1aea58.  v0:= new `okio.Okio$3`;
  #L1aea5c.  call `<init>`(v0) @signature `Lokio/Okio$3;.<init>:()V` @kind direct;
  #L1aea62.  return v0 @kind object;
}
procedure `okio.BufferedSink` `buffer`(`okio.Sink` v1 @kind object @name `sink`) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1aea74.  v0:= new `okio.RealBufferedSink`;
  #L1aea78.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L1aea7e.  return v0 @kind object;
}
procedure `okio.BufferedSource` `buffer`(`okio.Source` v1 @kind object @name `source`) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1aea90.  v0:= new `okio.RealBufferedSource`;
  #L1aea94.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L1aea9a.  return v0 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v2 @kind object @name `e`) @signature `Lokio/Okio;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1aeaac.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1aeab2.  v0:= temp @kind object;
  #L1aeab4.  if v0 == 0 then goto L1aeae0;
  #L1aeab8.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1aeabe.  v0:= temp @kind object;
  #L1aeac0.  if v0 == 0 then goto L1aeae0;
  #L1aeac4.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1aeaca.  v0:= temp @kind object;
  #L1aeacc.  v1:= "getsockname failed" @kind object;
  #L1aead0.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1aead6.  v0:= temp;
  #L1aead8.  if v0 == 0 then goto L1aeae0;
  #L1aeadc.  v0:= 1I;
  #L1aeade.  return v0;
  #L1aeae0.  v0:= 0I;
  #L1aeae2.  goto L1aeade;
}
procedure `okio.Sink` `sink`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.sink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1aeaf4.  if v2 != 0 then goto L1aeb08;
  #L1aeaf8.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aeafc.  v1:= "file == null" @kind object;
  #L1aeb00.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aeb06.  throw v0;
  #L1aeb08.  v0:= new `java.io.FileOutputStream`;
  #L1aeb0c.  call `<init>`(v0, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1aeb12.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L1aeb18.  v0:= temp @kind object;
  #L1aeb1a.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v1 @kind object @name `out`) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1aeb2c.  v0:= new `okio.Timeout`;
  #L1aeb30.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L1aeb36.  call temp:= `sink`(v1, v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L1aeb3c.  v0:= temp @kind object;
  #L1aeb3e.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v2 @kind object @name `out`, `okio.Timeout` v3 @kind object @name `timeout`) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1aeb50.  if v2 != 0 then goto L1aeb64;
  #L1aeb54.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aeb58.  v1:= "out == null" @kind object;
  #L1aeb5c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aeb62.  throw v0;
  #L1aeb64.  if v3 != 0 then goto L1aeb78;
  #L1aeb68.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aeb6c.  v1:= "timeout == null" @kind object;
  #L1aeb70.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aeb76.  throw v0;
  #L1aeb78.  v0:= new `okio.Okio$1`;
  #L1aeb7c.  call `<init>`(v0, v3, v2) @signature `Lokio/Okio$1;.<init>:(Lokio/Timeout;Ljava/io/OutputStream;)V` @kind direct;
  #L1aeb82.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.net.Socket` v4 @kind object @name `socket`) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aeb94.  if v4 != 0 then goto L1aeba8;
  #L1aeb98.  v2:= new `java.lang.IllegalArgumentException`;
  #L1aeb9c.  v3:= "socket == null" @kind object;
  #L1aeba0.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aeba6.  throw v2;
  #L1aeba8.  call temp:= `getOutputStream`(v4) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L1aebae.  v2:= temp @kind object;
  #L1aebb0.  if v2 != 0 then goto L1aebc4;
  #L1aebb4.  v2:= new `java.io.IOException`;
  #L1aebb8.  v3:= "socket's output stream == null" @kind object;
  #L1aebbc.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aebc2.  throw v2;
  #L1aebc4.  call temp:= `timeout`(v4) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L1aebca.  v1:= temp @kind object;
  #L1aebcc.  call temp:= `getOutputStream`(v4) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L1aebd2.  v2:= temp @kind object;
  #L1aebd4.  call temp:= `sink`(v2, v1) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L1aebda.  v0:= temp @kind object;
  #L1aebdc.  call temp:= `sink`(v1, v0) @signature `Lokio/AsyncTimeout;.sink:(Lokio/Sink;)Lokio/Sink;` @kind virtual;
  #L1aebe2.  v2:= temp @kind object;
  #L1aebe4.  return v2 @kind object;
}
procedure `okio.Sink` `sink`(`java.nio.file.Path` v2 @kind object @name `path`, `java.nio.file.OpenOption`[] v3 @kind object @name `options`) @signature `Lokio/Okio;.sink:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1aebf8.  if v2 != 0 then goto L1aec0c;
  #L1aebfc.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aec00.  v1:= "path == null" @kind object;
  #L1aec04.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aec0a.  throw v0;
  #L1aec0c.  call temp:= `newOutputStream`(v2, v3) @signature `Ljava/nio/file/Files;.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;` @kind static;
  #L1aec12.  v0:= temp @kind object;
  #L1aec14.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L1aec1a.  v0:= temp @kind object;
  #L1aec1c.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.source:(Ljava/io/File;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1aec30.  if v2 != 0 then goto L1aec44;
  #L1aec34.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aec38.  v1:= "file == null" @kind object;
  #L1aec3c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aec42.  throw v0;
  #L1aec44.  v0:= new `java.io.FileInputStream`;
  #L1aec48.  call `<init>`(v0, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1aec4e.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L1aec54.  v0:= temp @kind object;
  #L1aec56.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.InputStream` v1 @kind object @name `in`) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1aec68.  v0:= new `okio.Timeout`;
  #L1aec6c.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L1aec72.  call temp:= `source`(v1, v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L1aec78.  v0:= temp @kind object;
  #L1aec7a.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.InputStream` v2 @kind object @name `in`, `okio.Timeout` v3 @kind object @name `timeout`) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1aec8c.  if v2 != 0 then goto L1aeca0;
  #L1aec90.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aec94.  v1:= "in == null" @kind object;
  #L1aec98.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aec9e.  throw v0;
  #L1aeca0.  if v3 != 0 then goto L1aecb4;
  #L1aeca4.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aeca8.  v1:= "timeout == null" @kind object;
  #L1aecac.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aecb2.  throw v0;
  #L1aecb4.  v0:= new `okio.Okio$2`;
  #L1aecb8.  call `<init>`(v0, v3, v2) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @kind direct;
  #L1aecbe.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.net.Socket` v4 @kind object @name `socket`) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1aecd0.  if v4 != 0 then goto L1aece4;
  #L1aecd4.  v2:= new `java.lang.IllegalArgumentException`;
  #L1aecd8.  v3:= "socket == null" @kind object;
  #L1aecdc.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aece2.  throw v2;
  #L1aece4.  call temp:= `getInputStream`(v4) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L1aecea.  v2:= temp @kind object;
  #L1aecec.  if v2 != 0 then goto L1aed00;
  #L1aecf0.  v2:= new `java.io.IOException`;
  #L1aecf4.  v3:= "socket's input stream == null" @kind object;
  #L1aecf8.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aecfe.  throw v2;
  #L1aed00.  call temp:= `timeout`(v4) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L1aed06.  v1:= temp @kind object;
  #L1aed08.  call temp:= `getInputStream`(v4) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L1aed0e.  v2:= temp @kind object;
  #L1aed10.  call temp:= `source`(v2, v1) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L1aed16.  v0:= temp @kind object;
  #L1aed18.  call temp:= `source`(v1, v0) @signature `Lokio/AsyncTimeout;.source:(Lokio/Source;)Lokio/Source;` @kind virtual;
  #L1aed1e.  v2:= temp @kind object;
  #L1aed20.  return v2 @kind object;
}
procedure `okio.Source` `source`(`java.nio.file.Path` v2 @kind object @name `path`, `java.nio.file.OpenOption`[] v3 @kind object @name `options`) @signature `Lokio/Okio;.source:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1aed34.  if v2 != 0 then goto L1aed48;
  #L1aed38.  v0:= new `java.lang.IllegalArgumentException`;
  #L1aed3c.  v1:= "path == null" @kind object;
  #L1aed40.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aed46.  throw v0;
  #L1aed48.  call temp:= `newInputStream`(v2, v3) @signature `Ljava/nio/file/Files;.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;` @kind static;
  #L1aed4e.  v0:= temp @kind object;
  #L1aed50.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L1aed56.  v0:= temp @kind object;
  #L1aed58.  return v0 @kind object;
}
procedure `okio.AsyncTimeout` `timeout`(`java.net.Socket` v1 @kind object @name `socket`) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1aed6c.  v0:= new `okio.Okio$4`;
  #L1aed70.  call `<init>`(v0, v1) @signature `Lokio/Okio$4;.<init>:(Ljava/net/Socket;)V` @kind direct;
  #L1aed76.  return v0 @kind object;
}

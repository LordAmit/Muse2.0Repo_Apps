record `okio.ForwardingSink` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.Sink` @kind interface {
  `okio.Sink` `okio.ForwardingSink.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.ForwardingSink` v2 @kind this, `okio.Sink` v3 @kind object @name `delegate`) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L21f010.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21f016.  if v3 != 0 then goto L21f02a;
  #L21f01a.  v0:= new `java.lang.IllegalArgumentException`;
  #L21f01e.  v1:= "delegate == null" @kind object;
  #L21f022.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21f028.  throw v0;
  #L21f02a.  v2.`okio.ForwardingSink.delegate` @type ^`okio.Sink` := v3 @kind object;
  #L21f02e.  return @kind void;
}
procedure `void` `close`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21f040.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L21f044.  call `close`(v0) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L21f04a.  return @kind void;
}
procedure `okio.Sink` `delegate`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.delegate:()Lokio/Sink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21f05c.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L21f060.  return v0 @kind object;
}
procedure `void` `flush`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21f074.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L21f078.  call `flush`(v0) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L21f07e.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L21f090.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L21f094.  call temp:= `timeout`(v0) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L21f09a.  v0:= temp @kind object;
  #L21f09c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ForwardingSink` v2 @kind this) @signature `Lokio/ForwardingSink;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f0b0.  v0:= new `java.lang.StringBuilder`;
  #L21f0b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L21f0ba.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L21f0c0.  v1:= temp @kind object;
  #L21f0c2.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L21f0c8.  v1:= temp @kind object;
  #L21f0ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f0d0.  v0:= temp @kind object;
  #L21f0d2.  v1:= "(" @kind object;
  #L21f0d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f0dc.  v0:= temp @kind object;
  #L21f0de.  v1:= v2.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L21f0e2.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L21f0e8.  v1:= temp @kind object;
  #L21f0ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f0f0.  v0:= temp @kind object;
  #L21f0f2.  v1:= ")" @kind object;
  #L21f0f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21f0fc.  v0:= temp @kind object;
  #L21f0fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21f104.  v0:= temp @kind object;
  #L21f106.  return v0 @kind object;
}
procedure `void` `write`(`okio.ForwardingSink` v2 @kind this, `okio.Buffer` v3 @kind object @name `source`, `long` v4 @name `byteCount`) @signature `Lokio/ForwardingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21f118.  v0:= v2.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L21f11c.  call `write`(v0, v3, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L21f122.  return @kind void;
}

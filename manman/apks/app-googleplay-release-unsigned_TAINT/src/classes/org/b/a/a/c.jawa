record `org.b.a.a.c` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.c.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.c.b` @AccessFlag PRIVATE;
  `org.b.a.a.a.a` `org.b.a.a.c.c` @AccessFlag PRIVATE;
  `org.b.a.a.b.c` `org.b.a.a.c.d` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.c.e` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L180aa4.  v0:= new `org.b.a.a.d.c`;
  #L180aa8.  call `<init>`(v0) @signature `Lorg/b/a/a/d/c;.<init>:()V` @kind direct;
  #L180aae.  `@@org.b.a.a.c.f` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L180ab2.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L180ac4.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L180aca.  v0:= new `org.b.a.a.d.b`;
  #L180ace.  v1:= `@@org.b.a.a.c.f` @type ^`org.b.a.a.d.m` @kind object;
  #L180ad2.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L180ad8.  v2.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L180adc.  v0:= new `org.b.a.a.a.a`;
  #L180ae0.  call `<init>`(v0) @signature `Lorg/b/a/a/a/a;.<init>:()V` @kind direct;
  #L180ae6.  v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` := v0 @kind object;
  #L180aea.  v0:= new `org.b.a.a.b.c`;
  #L180aee.  call `<init>`(v0) @signature `Lorg/b/a/a/b/c;.<init>:()V` @kind direct;
  #L180af4.  v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` := v0 @kind object;
  #L180af8.  v0:= 2I;
  #L180afa.  v0:= new `byte`[v0];
  #L180afe.  v2.`org.b.a.a.c.e` @type ^`byte`[] := v0 @kind object;
  #L180b02.  call `d`(v2) @signature `Lorg/b/a/a/c;.d:()V` @kind virtual;
  #L180b08.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.c` v1 @kind this) @signature `Lorg/b/a/a/c;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L180b1c.  v0:= `@@org.b.a.b.i` @type ^`java.lang.String` @kind object;
  #L180b20.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.c` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/c;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L180b34.  v6:= 1I;
  #L180b36.  v5:= 0I;
  #L180b38.  v1:= v9 + v10 @kind int;
  #L180b3c.  v0:= v9;
  #L180b3e.  if v0 >= v1 then goto L180b5e;
  #L180b42.  v2:= v7.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L180b46.  v3:= v8[v0] @kind byte;
  #L180b4a.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L180b50.  v2:= temp;
  #L180b52.  if v2 != v6 then goto L180bae;
  #L180b56.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L180b5a.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L180b5e.  v0:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L180b62.  v1:= v1 + -1;
  #L180b66.  v1:= v8[v1] @kind byte;
  #L180b6a.  v0[v5]:= v1 @kind byte;
  #L180b6e.  v0:= v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L180b72.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L180b76.  if v0 != v1 then goto L180ba8;
  #L180b7a.  v0:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L180b7e.  call temp:= `c`(v0) @signature `Lorg/b/a/a/a/a;.c:()Z` @kind virtual;
  #L180b84.  v0:= temp;
  #L180b86.  if v0 == 0 then goto L180ba8;
  #L180b8a.  call temp:= `b`(v7) @signature `Lorg/b/a/a/c;.b:()F` @kind virtual;
  #L180b90.  v0:= temp;
  #L180b92.  v1:= 1064514355I;
  #L180b98.  v0:= fcmpl(v0, v1);
  #L180b9c.  if v0 <= 0 then goto L180ba8;
  #L180ba0.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L180ba4.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L180ba8.  v0:= v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L180bac.  return v0 @kind object;
  #L180bae.  v3:= 2I;
  #L180bb0.  if v2 != v3 then goto L180bbe;
  #L180bb4.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L180bb8.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L180bbc.  goto L180b5e;
  #L180bbe.  if v2 != 0 then goto L180bfa;
  #L180bc2.  v2:= v7.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L180bc6.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L180bcc.  v2:= temp;
  #L180bce.  if v0 != v9 then goto L180c00;
  #L180bd2.  v3:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L180bd6.  v4:= v8[v9] @kind byte;
  #L180bda.  v3[v6]:= v4 @kind byte;
  #L180bde.  v3:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L180be2.  v4:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L180be6.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/a/a;.a:([BII)V` @kind virtual;
  #L180bec.  v3:= v7.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L180bf0.  v4:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L180bf4.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/c;.a:([BII)V` @kind virtual;
  #L180bfa.  v0:= v0 + 1;
  #L180bfe.  goto L180b3e;
  #L180c00.  v3:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L180c04.  v4:= v0 + -1;
  #L180c08.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/a/a;.a:([BII)V` @kind virtual;
  #L180c0e.  v3:= v7.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L180c12.  v4:= v0 + -1;
  #L180c16.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/c;.a:([BII)V` @kind virtual;
  #L180c1c.  goto L180bfa;
}
procedure `float` `b`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L180c30.  v0:= v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L180c34.  call temp:= `a`(v0) @signature `Lorg/b/a/a/a/a;.a:()F` @kind virtual;
  #L180c3a.  v0:= temp;
  #L180c3c.  v1:= v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L180c40.  call temp:= `a`(v1) @signature `Lorg/b/a/a/b/c;.a:()F` @kind virtual;
  #L180c46.  v1:= temp;
  #L180c48.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L180c4e.  v0:= temp;
  #L180c50.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.c` v1 @kind this) @signature `Lorg/b/a/a/c;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L180c64.  v0:= v1.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L180c68.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L180c7c.  v0:= v2.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L180c80.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L180c86.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L180c8a.  v2.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L180c8e.  v0:= v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L180c92.  call `b`(v0) @signature `Lorg/b/a/a/a/a;.b:()V` @kind virtual;
  #L180c98.  v0:= v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L180c9c.  call `b`(v0) @signature `Lorg/b/a/a/b/c;.b:()V` @kind virtual;
  #L180ca2.  v0:= v2.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L180ca6.  v1:= 0I;
  #L180ca8.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L180cae.  return @kind void;
}

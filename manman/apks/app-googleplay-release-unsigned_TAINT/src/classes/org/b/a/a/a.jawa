record `org.b.a.a.a` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.a.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.a.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.a` `org.b.a.a.a.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.a.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.a.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L165c64.  v0:= new `org.b.a.a.d.a`;
  #L165c68.  call `<init>`(v0) @signature `Lorg/b/a/a/d/a;.<init>:()V` @kind direct;
  #L165c6e.  `@@org.b.a.a.a.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L165c72.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.a` v2 @kind this) @signature `Lorg/b/a/a/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L165c84.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L165c8a.  v0:= new `org.b.a.a.d.b`;
  #L165c8e.  v1:= `@@org.b.a.a.a.e` @type ^`org.b.a.a.d.m` @kind object;
  #L165c92.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L165c98.  v2.`org.b.a.a.a.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L165c9c.  v0:= new `org.b.a.a.b.a`;
  #L165ca0.  call `<init>`(v0) @signature `Lorg/b/a/a/b/a;.<init>:()V` @kind direct;
  #L165ca6.  v2.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` := v0 @kind object;
  #L165caa.  v0:= 2I;
  #L165cac.  v0:= new `byte`[v0];
  #L165cb0.  v2.`org.b.a.a.a.d` @type ^`byte`[] := v0 @kind object;
  #L165cb4.  call `d`(v2) @signature `Lorg/b/a/a/a;.d:()V` @kind virtual;
  #L165cba.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.a` v1 @kind this) @signature `Lorg/b/a/a/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165ccc.  v0:= `@@org.b.a.b.g` @type ^`java.lang.String` @kind object;
  #L165cd0.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.a` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/a;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L165ce4.  v6:= 1I;
  #L165ce6.  v5:= 0I;
  #L165ce8.  v1:= v9 + v10 @kind int;
  #L165cec.  v0:= v9;
  #L165cee.  if v0 >= v1 then goto L165d0e;
  #L165cf2.  v2:= v7.`org.b.a.a.a.a` @type ^`org.b.a.a.d.b` @kind object;
  #L165cf6.  v3:= v8[v0] @kind byte;
  #L165cfa.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L165d00.  v2:= temp;
  #L165d02.  if v2 != v6 then goto L165d5e;
  #L165d06.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L165d0a.  v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L165d0e.  v0:= v7.`org.b.a.a.a.d` @type ^`byte`[] @kind object;
  #L165d12.  v1:= v1 + -1;
  #L165d16.  v1:= v8[v1] @kind byte;
  #L165d1a.  v0[v5]:= v1 @kind byte;
  #L165d1e.  v0:= v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L165d22.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L165d26.  if v0 != v1 then goto L165d58;
  #L165d2a.  v0:= v7.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L165d2e.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/a;.c:()Z` @kind virtual;
  #L165d34.  v0:= temp;
  #L165d36.  if v0 == 0 then goto L165d58;
  #L165d3a.  call temp:= `b`(v7) @signature `Lorg/b/a/a/a;.b:()F` @kind virtual;
  #L165d40.  v0:= temp;
  #L165d42.  v1:= 1064514355I;
  #L165d48.  v0:= fcmpl(v0, v1);
  #L165d4c.  if v0 <= 0 then goto L165d58;
  #L165d50.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L165d54.  v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L165d58.  v0:= v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L165d5c.  return v0 @kind object;
  #L165d5e.  v3:= 2I;
  #L165d60.  if v2 != v3 then goto L165d6e;
  #L165d64.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L165d68.  v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L165d6c.  goto L165d0e;
  #L165d6e.  if v2 != 0 then goto L165d9c;
  #L165d72.  v2:= v7.`org.b.a.a.a.a` @type ^`org.b.a.a.d.b` @kind object;
  #L165d76.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L165d7c.  v2:= temp;
  #L165d7e.  if v0 != v9 then goto L165da2;
  #L165d82.  v3:= v7.`org.b.a.a.a.d` @type ^`byte`[] @kind object;
  #L165d86.  v4:= v8[v9] @kind byte;
  #L165d8a.  v3[v6]:= v4 @kind byte;
  #L165d8e.  v3:= v7.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L165d92.  v4:= v7.`org.b.a.a.a.d` @type ^`byte`[] @kind object;
  #L165d96.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/a;.a:([BII)V` @kind virtual;
  #L165d9c.  v0:= v0 + 1;
  #L165da0.  goto L165cee;
  #L165da2.  v3:= v7.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L165da6.  v4:= v0 + -1;
  #L165daa.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/a;.a:([BII)V` @kind virtual;
  #L165db0.  goto L165d9c;
}
procedure `float` `b`(`org.b.a.a.a` v1 @kind this) @signature `Lorg/b/a/a/a;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165dc4.  v0:= v1.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L165dc8.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/a;.a:()F` @kind virtual;
  #L165dce.  v0:= temp;
  #L165dd0.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.a` v1 @kind this) @signature `Lorg/b/a/a/a;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165de4.  v0:= v1.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L165de8.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.a` v2 @kind this) @signature `Lorg/b/a/a/a;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165dfc.  v0:= v2.`org.b.a.a.a.a` @type ^`org.b.a.a.d.b` @kind object;
  #L165e00.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L165e06.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L165e0a.  v2.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L165e0e.  v0:= v2.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L165e12.  call `b`(v0) @signature `Lorg/b/a/a/b/a;.b:()V` @kind virtual;
  #L165e18.  v0:= v2.`org.b.a.a.a.d` @type ^`byte`[] @kind object;
  #L165e1c.  v1:= 0I;
  #L165e1e.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L165e24.  return @kind void;
}

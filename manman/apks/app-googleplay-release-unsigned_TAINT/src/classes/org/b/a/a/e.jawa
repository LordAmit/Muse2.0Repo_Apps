record `org.b.a.a.e` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.e.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.e.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.e` `org.b.a.a.e.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.e.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.e.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L184c04.  v0:= new `org.b.a.a.d.e`;
  #L184c08.  call `<init>`(v0) @signature `Lorg/b/a/a/d/e;.<init>:()V` @kind direct;
  #L184c0e.  `@@org.b.a.a.e.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L184c12.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.e` v2 @kind this) @signature `Lorg/b/a/a/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L184c24.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L184c2a.  v0:= new `org.b.a.a.d.b`;
  #L184c2e.  v1:= `@@org.b.a.a.e.e` @type ^`org.b.a.a.d.m` @kind object;
  #L184c32.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L184c38.  v2.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L184c3c.  v0:= new `org.b.a.a.b.e`;
  #L184c40.  call `<init>`(v0) @signature `Lorg/b/a/a/b/e;.<init>:()V` @kind direct;
  #L184c46.  v2.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` := v0 @kind object;
  #L184c4a.  v0:= 2I;
  #L184c4c.  v0:= new `byte`[v0];
  #L184c50.  v2.`org.b.a.a.e.d` @type ^`byte`[] := v0 @kind object;
  #L184c54.  call `d`(v2) @signature `Lorg/b/a/a/e;.d:()V` @kind virtual;
  #L184c5a.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L184c6c.  v0:= `@@org.b.a.b.k` @type ^`java.lang.String` @kind object;
  #L184c70.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.e` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/e;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L184c84.  v6:= 1I;
  #L184c86.  v5:= 0I;
  #L184c88.  v1:= v9 + v10 @kind int;
  #L184c8c.  v0:= v9;
  #L184c8e.  if v0 >= v1 then goto L184cae;
  #L184c92.  v2:= v7.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L184c96.  v3:= v8[v0] @kind byte;
  #L184c9a.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L184ca0.  v2:= temp;
  #L184ca2.  if v2 != v6 then goto L184cfe;
  #L184ca6.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L184caa.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L184cae.  v0:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L184cb2.  v1:= v1 + -1;
  #L184cb6.  v1:= v8[v1] @kind byte;
  #L184cba.  v0[v5]:= v1 @kind byte;
  #L184cbe.  v0:= v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L184cc2.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L184cc6.  if v0 != v1 then goto L184cf8;
  #L184cca.  v0:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L184cce.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/e;.c:()Z` @kind virtual;
  #L184cd4.  v0:= temp;
  #L184cd6.  if v0 == 0 then goto L184cf8;
  #L184cda.  call temp:= `b`(v7) @signature `Lorg/b/a/a/e;.b:()F` @kind virtual;
  #L184ce0.  v0:= temp;
  #L184ce2.  v1:= 1064514355I;
  #L184ce8.  v0:= fcmpl(v0, v1);
  #L184cec.  if v0 <= 0 then goto L184cf8;
  #L184cf0.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L184cf4.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L184cf8.  v0:= v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L184cfc.  return v0 @kind object;
  #L184cfe.  v3:= 2I;
  #L184d00.  if v2 != v3 then goto L184d0e;
  #L184d04.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L184d08.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L184d0c.  goto L184cae;
  #L184d0e.  if v2 != 0 then goto L184d3c;
  #L184d12.  v2:= v7.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L184d16.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L184d1c.  v2:= temp;
  #L184d1e.  if v0 != v9 then goto L184d42;
  #L184d22.  v3:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L184d26.  v4:= v8[v9] @kind byte;
  #L184d2a.  v3[v6]:= v4 @kind byte;
  #L184d2e.  v3:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L184d32.  v4:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L184d36.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/e;.a:([BII)V` @kind virtual;
  #L184d3c.  v0:= v0 + 1;
  #L184d40.  goto L184c8e;
  #L184d42.  v3:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L184d46.  v4:= v0 + -1;
  #L184d4a.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/e;.a:([BII)V` @kind virtual;
  #L184d50.  goto L184d3c;
}
procedure `float` `b`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L184d64.  v0:= v1.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L184d68.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/e;.a:()F` @kind virtual;
  #L184d6e.  v0:= temp;
  #L184d70.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L184d84.  v0:= v1.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L184d88.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.e` v2 @kind this) @signature `Lorg/b/a/a/e;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L184d9c.  v0:= v2.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L184da0.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L184da6.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L184daa.  v2.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L184dae.  v0:= v2.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L184db2.  call `b`(v0) @signature `Lorg/b/a/a/b/e;.b:()V` @kind virtual;
  #L184db8.  v0:= v2.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L184dbc.  v1:= 0I;
  #L184dbe.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L184dc4.  return @kind void;
}

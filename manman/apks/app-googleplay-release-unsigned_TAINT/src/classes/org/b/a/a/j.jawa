record `org.b.a.a.j` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.b$a` `org.b.a.a.j.a` @AccessFlag PRIVATE;
  `org.b.a.a.b`[] `org.b.a.a.j.b` @AccessFlag PRIVATE;
  `boolean`[] `org.b.a.a.j.c` @AccessFlag PRIVATE;
  `int` `org.b.a.a.j.d` @AccessFlag PRIVATE;
  `int` `org.b.a.a.j.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.a.j` v3 @kind this) @signature `Lorg/b/a/a/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L18579c.  v1:= 7I;
  #L18579e.  call `<init>`(v3) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L1857a4.  v0:= new `org.b.a.a.b`[v1];
  #L1857a8.  v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] := v0 @kind object;
  #L1857ac.  v0:= new `boolean`[v1];
  #L1857b0.  v3.`org.b.a.a.j.c` @type ^`boolean`[] := v0 @kind object;
  #L1857b4.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1857b8.  v1:= 0I;
  #L1857ba.  v2:= new `org.b.a.a.n`;
  #L1857be.  call `<init>`(v2) @signature `Lorg/b/a/a/n;.<init>:()V` @kind direct;
  #L1857c4.  v0[v1]:= v2 @kind object;
  #L1857c8.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1857cc.  v1:= 1I;
  #L1857ce.  v2:= new `org.b.a.a.l`;
  #L1857d2.  call `<init>`(v2) @signature `Lorg/b/a/a/l;.<init>:()V` @kind direct;
  #L1857d8.  v0[v1]:= v2 @kind object;
  #L1857dc.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1857e0.  v1:= 2I;
  #L1857e2.  v2:= new `org.b.a.a.c`;
  #L1857e6.  call `<init>`(v2) @signature `Lorg/b/a/a/c;.<init>:()V` @kind direct;
  #L1857ec.  v0[v1]:= v2 @kind object;
  #L1857f0.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1857f4.  v1:= 3I;
  #L1857f6.  v2:= new `org.b.a.a.g`;
  #L1857fa.  call `<init>`(v2) @signature `Lorg/b/a/a/g;.<init>:()V` @kind direct;
  #L185800.  v0[v1]:= v2 @kind object;
  #L185804.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L185808.  v1:= 4I;
  #L18580a.  v2:= new `org.b.a.a.d`;
  #L18580e.  call `<init>`(v2) @signature `Lorg/b/a/a/d;.<init>:()V` @kind direct;
  #L185814.  v0[v1]:= v2 @kind object;
  #L185818.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18581c.  v1:= 5I;
  #L18581e.  v2:= new `org.b.a.a.a`;
  #L185822.  call `<init>`(v2) @signature `Lorg/b/a/a/a;.<init>:()V` @kind direct;
  #L185828.  v0[v1]:= v2 @kind object;
  #L18582c.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L185830.  v1:= 6I;
  #L185832.  v2:= new `org.b.a.a.e`;
  #L185836.  call `<init>`(v2) @signature `Lorg/b/a/a/e;.<init>:()V` @kind direct;
  #L18583c.  v0[v1]:= v2 @kind object;
  #L185840.  call `d`(v3) @signature `Lorg/b/a/a/j;.d:()V` @kind virtual;
  #L185846.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.j` v2 @kind this) @signature `Lorg/b/a/a/j;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L185858.  v1:= -1I;
  #L18585a.  v0:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L18585e.  if v0 != v1 then goto L185876;
  #L185862.  call temp:= `b`(v2) @signature `Lorg/b/a/a/j;.b:()F` @kind virtual;
  #L185868.  v0:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L18586c.  if v0 != v1 then goto L185876;
  #L185870.  v0:= 0I;
  #L185872.  v2.`org.b.a.a.j.d` @type ^`int` := v0;
  #L185876.  v0:= v2.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18587a.  v1:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L18587e.  v0:= v0[v1] @kind object;
  #L185882.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L185888.  v0:= temp @kind object;
  #L18588a.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.j` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lorg/b/a/a/j;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L18589c.  v2:= 1I;
  #L18589e.  v3:= 0I;
  #L1858a0.  v4:= new `byte`[v11];
  #L1858a4.  v5:= v10 + v11 @kind int;
  #L1858a8.  v1:= v3;
  #L1858aa.  v0:= v2;
  #L1858ac.  if v10 >= v5 then goto L1858ea;
  #L1858b0.  v6:= v9[v10] @kind byte;
  #L1858b4.  v6:= v6 ^& 128;
  #L1858b8.  if v6 == 0 then goto L1858d6;
  #L1858bc.  v0:= v1 + 1;
  #L1858c0.  v6:= v9[v10] @kind byte;
  #L1858c4.  v4[v1]:= v6 @kind byte;
  #L1858c8.  v1:= v2;
  #L1858ca.  v10:= v10 + 1;
  #L1858ce.  v7:= v0;
  #L1858d0.  v0:= v1;
  #L1858d2.  v1:= v7;
  #L1858d4.  goto L1858ac;
  #L1858d6.  if v0 == 0 then goto L185960;
  #L1858da.  v0:= v1 + 1;
  #L1858de.  v6:= v9[v10] @kind byte;
  #L1858e2.  v4[v1]:= v6 @kind byte;
  #L1858e6.  v1:= v3;
  #L1858e8.  goto L1858ca;
  #L1858ea.  v0:= v3;
  #L1858ec.  v2:= v8.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1858f0.  v2:= length @variable v2;
  #L1858f2.  if v0 >= v2 then goto L18592c;
  #L1858f6.  v2:= v8.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L1858fa.  v2:= v2[v0] @kind boolean;
  #L1858fe.  if v2 != 0 then goto L185908;
  #L185902.  v0:= v0 + 1;
  #L185906.  goto L1858ec;
  #L185908.  v2:= v8.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18590c.  v2:= v2[v0] @kind object;
  #L185910.  call temp:= `a`(v2, v4, v3, v1) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @kind virtual;
  #L185916.  v2:= temp @kind object;
  #L185918.  v5:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18591c.  if v2 != v5 then goto L185932;
  #L185920.  v8.`org.b.a.a.j.d` @type ^`int` := v0;
  #L185924.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L185928.  v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18592c.  v0:= v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L185930.  return v0 @kind object;
  #L185932.  v5:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L185936.  if v2 != v5 then goto L185902;
  #L18593a.  v2:= v8.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L18593e.  v2[v0]:= v3 @kind boolean;
  #L185942.  v2:= v8.`org.b.a.a.j.e` @type ^`int`;
  #L185946.  v2:= v2 + -1;
  #L18594a.  v8.`org.b.a.a.j.e` @type ^`int` := v2;
  #L18594e.  v2:= v8.`org.b.a.a.j.e` @type ^`int`;
  #L185952.  if v2 > 0 then goto L185902;
  #L185956.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18595a.  v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18595e.  goto L18592c;
  #L185960.  v7:= v1;
  #L185962.  v1:= v0;
  #L185964.  v0:= v7;
  #L185966.  goto L1858ca;
}
procedure `float` `b`(`org.b.a.a.j` v4 @kind this) @signature `Lorg/b/a/a/j;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L185978.  v1:= 0I;
  #L18597a.  v0:= v4.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18597e.  v2:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L185982.  if v0 != v2 then goto L18598e;
  #L185986.  v1:= 1065185444I;
  #L18598c.  return v1;
  #L18598e.  v0:= v4.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L185992.  v2:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L185996.  if v0 != v2 then goto L1859a2;
  #L18599a.  v1:= 1008981770I;
  #L1859a0.  goto L18598c;
  #L1859a2.  v0:= 0I;
  #L1859a4.  v2:= v4.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1859a8.  v2:= length @variable v2;
  #L1859aa.  if v0 >= v2 then goto L18598c;
  #L1859ae.  v2:= v4.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L1859b2.  v2:= v2[v0] @kind boolean;
  #L1859b6.  if v2 != 0 then goto L1859c0;
  #L1859ba.  v0:= v0 + 1;
  #L1859be.  goto L1859a4;
  #L1859c0.  v2:= v4.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1859c4.  v2:= v2[v0] @kind object;
  #L1859c8.  call temp:= `b`(v2) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L1859ce.  v2:= temp;
  #L1859d0.  v3:= fcmpg(v1, v2);
  #L1859d4.  if v3 >= 0 then goto L1859ba;
  #L1859d8.  v4.`org.b.a.a.j.d` @type ^`int` := v0;
  #L1859dc.  v1:= v2;
  #L1859de.  goto L1859ba;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.j` v1 @kind this) @signature `Lorg/b/a/a/j;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1859f0.  v0:= v1.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1859f4.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.j` v3 @kind this) @signature `Lorg/b/a/a/j;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L185a08.  v0:= 0I;
  #L185a0a.  v3.`org.b.a.a.j.e` @type ^`int` := v0;
  #L185a0e.  v1:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L185a12.  v1:= length @variable v1;
  #L185a14.  if v0 >= v1 then goto L185a42;
  #L185a18.  v1:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L185a1c.  v1:= v1[v0] @kind object;
  #L185a20.  call `d`(v1) @signature `Lorg/b/a/a/b;.d:()V` @kind virtual;
  #L185a26.  v1:= v3.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L185a2a.  v2:= 1I;
  #L185a2c.  v1[v0]:= v2 @kind boolean;
  #L185a30.  v1:= v3.`org.b.a.a.j.e` @type ^`int`;
  #L185a34.  v1:= v1 + 1;
  #L185a38.  v3.`org.b.a.a.j.e` @type ^`int` := v1;
  #L185a3c.  v0:= v0 + 1;
  #L185a40.  goto L185a0e;
  #L185a42.  v0:= -1I;
  #L185a44.  v3.`org.b.a.a.j.d` @type ^`int` := v0;
  #L185a48.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L185a4c.  v3.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L185a50.  return @kind void;
}

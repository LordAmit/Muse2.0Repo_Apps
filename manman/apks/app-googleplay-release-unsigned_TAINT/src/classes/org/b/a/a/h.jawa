record `org.b.a.a.h` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `int` `org.b.a.a.h.a` @AccessFlag PRIVATE;
  `int` `org.b.a.a.h.b` @AccessFlag PRIVATE;
  `byte` `org.b.a.a.h.c` @AccessFlag PRIVATE;
  `byte` `org.b.a.a.h.d` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.a.h.e` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.a.h.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.a.h` v1 @kind this) @signature `Lorg/b/a/a/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1851ec.  v0:= 0I;
  #L1851ee.  call `<init>`(v1) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L1851f4.  v1.`org.b.a.a.h.e` @type ^`org.b.a.a.b` := v0 @kind object;
  #L1851f8.  v1.`org.b.a.a.h.f` @type ^`org.b.a.a.b` := v0 @kind object;
  #L1851fc.  call `d`(v1) @signature `Lorg/b/a/a/h;.d:()V` @kind virtual;
  #L185202.  return @kind void;
}
procedure `boolean` `a`(`byte` v2 ) @signature `Lorg/b/a/a/h;.a:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;

  #L185214.  v0:= v2 ^& 255;
  #L185218.  v1:= 234I;
  #L18521c.  if v0 == v1 then goto L185240;
  #L185220.  v1:= 237I;
  #L185224.  if v0 == v1 then goto L185240;
  #L185228.  v1:= 239I;
  #L18522c.  if v0 == v1 then goto L185240;
  #L185230.  v1:= 243I;
  #L185234.  if v0 == v1 then goto L185240;
  #L185238.  v1:= 245I;
  #L18523c.  if v0 != v1 then goto L185244;
  #L185240.  v0:= 1I;
  #L185242.  return v0;
  #L185244.  v0:= 0I;
  #L185246.  goto L185242;
}
procedure `boolean` `b`(`byte` v2 ) @signature `Lorg/b/a/a/h;.b:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;

  #L185258.  v0:= v2 ^& 255;
  #L18525c.  v1:= 235I;
  #L185260.  if v0 == v1 then goto L18527c;
  #L185264.  v1:= 238I;
  #L185268.  if v0 == v1 then goto L18527c;
  #L18526c.  v1:= 240I;
  #L185270.  if v0 == v1 then goto L18527c;
  #L185274.  v1:= 244I;
  #L185278.  if v0 != v1 then goto L185280;
  #L18527c.  v0:= 1I;
  #L18527e.  return v0;
  #L185280.  v0:= 0I;
  #L185282.  goto L18527e;
}
procedure `java.lang.String` `a`(`org.b.a.a.h` v3 @kind this) @signature `Lorg/b/a/a/h;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L185294.  v0:= v3.`org.b.a.a.h.a` @type ^`int`;
  #L185298.  v1:= v3.`org.b.a.a.h.b` @type ^`int`;
  #L18529c.  v0:= v0 - v1 @kind int;
  #L18529e.  v1:= 5I;
  #L1852a0.  if v0 < v1 then goto L1852aa;
  #L1852a4.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L1852a8.  return v0 @kind object;
  #L1852aa.  v1:= -5I;
  #L1852ac.  if v0 > v1 then goto L1852b6;
  #L1852b0.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L1852b4.  goto L1852a8;
  #L1852b6.  v1:= v3.`org.b.a.a.h.e` @type ^`org.b.a.a.b` @kind object;
  #L1852ba.  call temp:= `b`(v1) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L1852c0.  v1:= temp;
  #L1852c2.  v2:= v3.`org.b.a.a.h.f` @type ^`org.b.a.a.b` @kind object;
  #L1852c6.  call temp:= `b`(v2) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L1852cc.  v2:= temp;
  #L1852ce.  v1:= v1 - v2 @kind float;
  #L1852d0.  v2:= 1008981770I;
  #L1852d6.  v2:= fcmpl(v1, v2);
  #L1852da.  if v2 <= 0 then goto L1852e4;
  #L1852de.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L1852e2.  goto L1852a8;
  #L1852e4.  v2:= -1138501878I;
  #L1852ea.  v1:= fcmpg(v1, v2);
  #L1852ee.  if v1 >= 0 then goto L1852f8;
  #L1852f2.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L1852f6.  goto L1852a8;
  #L1852f8.  if v0 >= 0 then goto L185302;
  #L1852fc.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L185300.  goto L1852a8;
  #L185302.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L185306.  goto L1852a8;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.h` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/b/a/a/h;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L185318.  v3:= 32I;
  #L18531c.  call temp:= `c`(v4) @signature `Lorg/b/a/a/h;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L185322.  v0:= temp @kind object;
  #L185324.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L185328.  if v0 != v1 then goto L185332;
  #L18532c.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L185330.  return v0 @kind object;
  #L185332.  v0:= v6 + v7 @kind int;
  #L185336.  if v6 >= v0 then goto L1853c0;
  #L18533a.  v1:= v5[v6] @kind byte;
  #L18533e.  if v1 != v3 then goto L185396;
  #L185342.  v2:= v4.`org.b.a.a.h.d` @type ^`byte` @kind byte;
  #L185346.  if v2 == v3 then goto L185366;
  #L18534a.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L18534e.  call temp:= `a`(v2) @signature `Lorg/b/a/a/h;.a:(B)Z` @kind static;
  #L185354.  v2:= temp;
  #L185356.  if v2 == 0 then goto L185378;
  #L18535a.  v2:= v4.`org.b.a.a.h.a` @type ^`int`;
  #L18535e.  v2:= v2 + 1;
  #L185362.  v4.`org.b.a.a.h.a` @type ^`int` := v2;
  #L185366.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L18536a.  v4.`org.b.a.a.h.d` @type ^`byte` := v2 @kind byte;
  #L18536e.  v4.`org.b.a.a.h.c` @type ^`byte` := v1 @kind byte;
  #L185372.  v6:= v6 + 1;
  #L185376.  goto L185336;
  #L185378.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L18537c.  call temp:= `b`(v2) @signature `Lorg/b/a/a/h;.b:(B)Z` @kind static;
  #L185382.  v2:= temp;
  #L185384.  if v2 == 0 then goto L185366;
  #L185388.  v2:= v4.`org.b.a.a.h.b` @type ^`int`;
  #L18538c.  v2:= v2 + 1;
  #L185390.  v4.`org.b.a.a.h.b` @type ^`int` := v2;
  #L185394.  goto L185366;
  #L185396.  v2:= v4.`org.b.a.a.h.d` @type ^`byte` @kind byte;
  #L18539a.  if v2 != v3 then goto L185366;
  #L18539e.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L1853a2.  call temp:= `a`(v2) @signature `Lorg/b/a/a/h;.a:(B)Z` @kind static;
  #L1853a8.  v2:= temp;
  #L1853aa.  if v2 == 0 then goto L185366;
  #L1853ae.  if v1 == v3 then goto L185366;
  #L1853b2.  v2:= v4.`org.b.a.a.h.b` @type ^`int`;
  #L1853b6.  v2:= v2 + 1;
  #L1853ba.  v4.`org.b.a.a.h.b` @type ^`int` := v2;
  #L1853be.  goto L185366;
  #L1853c0.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1853c4.  goto L185330;
}
procedure `void` `a`(`org.b.a.a.h` v0 @kind this, `org.b.a.a.b` v1 @kind object, `org.b.a.a.b` v2 @kind object) @signature `Lorg/b/a/a/h;.a:(Lorg/b/a/a/b;Lorg/b/a/a/b;)V` @AccessFlag PUBLIC {
    temp;

  #L1853d8.  v0.`org.b.a.a.h.e` @type ^`org.b.a.a.b` := v1 @kind object;
  #L1853dc.  v0.`org.b.a.a.h.f` @type ^`org.b.a.a.b` := v2 @kind object;
  #L1853e0.  return @kind void;
}
procedure `float` `b`(`org.b.a.a.h` v1 @kind this) @signature `Lorg/b/a/a/h;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1853f4.  v0:= 0I;
  #L1853f6.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.h` v2 @kind this) @signature `Lorg/b/a/a/h;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L185408.  v0:= v2.`org.b.a.a.h.e` @type ^`org.b.a.a.b` @kind object;
  #L18540c.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L185412.  v0:= temp @kind object;
  #L185414.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L185418.  if v0 != v1 then goto L185436;
  #L18541c.  v0:= v2.`org.b.a.a.h.f` @type ^`org.b.a.a.b` @kind object;
  #L185420.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L185426.  v0:= temp @kind object;
  #L185428.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18542c.  if v0 != v1 then goto L185436;
  #L185430.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L185434.  return v0 @kind object;
  #L185436.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18543a.  goto L185434;
}
procedure `void` `d`(`org.b.a.a.h` v2 @kind this) @signature `Lorg/b/a/a/h;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18544c.  v1:= 32I;
  #L185450.  v0:= 0I;
  #L185452.  v2.`org.b.a.a.h.a` @type ^`int` := v0;
  #L185456.  v2.`org.b.a.a.h.b` @type ^`int` := v0;
  #L18545a.  v2.`org.b.a.a.h.c` @type ^`byte` := v1 @kind byte;
  #L18545e.  v2.`org.b.a.a.h.d` @type ^`byte` := v1 @kind byte;
  #L185462.  return @kind void;
}

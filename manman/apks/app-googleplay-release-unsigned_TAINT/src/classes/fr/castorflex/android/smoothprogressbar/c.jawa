record `fr.castorflex.android.smoothprogressbar.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `android.graphics.drawable.Drawable` `a`(`int`[] v2 @kind object, `float` v3 ) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:([IF)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1616c8.  if v2 == 0 then goto L1616d2;
  #L1616cc.  v0:= length @variable v2;
  #L1616ce.  if v0 != 0 then goto L1616d6;
  #L1616d2.  v0:= 0I;
  #L1616d4.  return v0 @kind object;
  #L1616d6.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L1616da.  v1:= new `fr.castorflex.android.smoothprogressbar.a`;
  #L1616de.  call `<init>`(v1, v3, v2) @signature `Lfr/castorflex/android/smoothprogressbar/a;.<init>:(F[I)V` @kind direct;
  #L1616e4.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L1616ea.  goto L1616d4;
}
procedure `void` `a`(`float` v2 ) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(F)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1616fc.  v0:= 0I;
  #L1616fe.  v0:= fcmpg(v2, v0);
  #L161702.  if v0 > 0 then goto L161716;
  #L161706.  v0:= new `java.lang.IllegalArgumentException`;
  #L16170a.  v1:= "Speed must be >= 0" @kind object;
  #L16170e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L161714.  throw v0;
  #L161716.  return @kind void;
}
procedure `void` `a`(`float` v5 , `java.lang.String` v6 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(FLjava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L161728.  v0:= 0I;
  #L16172a.  v0:= fcmpg(v5, v0);
  #L16172e.  if v0 >= 0 then goto L161764;
  #L161732.  v0:= new `java.lang.IllegalArgumentException`;
  #L161736.  v1:= "%s %d must be positive" @kind object;
  #L16173a.  v2:= 2I;
  #L16173c.  v2:= new `java.lang.Object`[v2];
  #L161740.  v3:= 0I;
  #L161742.  v2[v3]:= v6 @kind object;
  #L161746.  v3:= 1I;
  #L161748.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L16174e.  v4:= temp @kind object;
  #L161750.  v2[v3]:= v4 @kind object;
  #L161754.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16175a.  v1:= temp @kind object;
  #L16175c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L161762.  throw v0;
  #L161764.  return @kind void;
}
procedure `void` `a`(`int` v4 , `java.lang.String` v5 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(ILjava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L161778.  if v4 > 0 then goto L1617a0;
  #L16177c.  v0:= new `java.lang.IllegalArgumentException`;
  #L161780.  v1:= "%s must not be null" @kind object;
  #L161784.  v2:= 1I;
  #L161786.  v2:= new `java.lang.Object`[v2];
  #L16178a.  v3:= 0I;
  #L16178c.  v2[v3]:= v5 @kind object;
  #L161790.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L161796.  v1:= temp @kind object;
  #L161798.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16179e.  throw v0;
  #L1617a0.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1617b4.  if v4 != 0 then goto L1617dc;
  #L1617b8.  v0:= new `java.lang.IllegalArgumentException`;
  #L1617bc.  v1:= "%s must be not null" @kind object;
  #L1617c0.  v2:= 1I;
  #L1617c2.  v2:= new `java.lang.Object`[v2];
  #L1617c6.  v3:= 0I;
  #L1617c8.  v2[v3]:= v5 @kind object;
  #L1617cc.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1617d2.  v1:= temp @kind object;
  #L1617d4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1617da.  throw v0;
  #L1617dc.  return @kind void;
}
procedure `void` `a`(`int`[] v2 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:([I)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1617f0.  if v2 == 0 then goto L1617fa;
  #L1617f4.  v0:= length @variable v2;
  #L1617f6.  if v0 != 0 then goto L16180a;
  #L1617fa.  v0:= new `java.lang.IllegalArgumentException`;
  #L1617fe.  v1:= "You must provide at least 1 color" @kind object;
  #L161802.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L161808.  throw v0;
  #L16180a.  return @kind void;
}

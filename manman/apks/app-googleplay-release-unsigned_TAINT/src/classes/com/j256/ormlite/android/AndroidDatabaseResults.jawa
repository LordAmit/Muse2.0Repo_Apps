record `com.j256.ormlite.android.AndroidDatabaseResults` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.DatabaseResults` @kind interface {
  `boolean` `com.j256.ormlite.android.AndroidDatabaseResults.cacheStore` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @AccessFlag PRIVATE_FINAL;
  `android.database.Cursor` `com.j256.ormlite.android.AndroidDatabaseResults.cursor` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.dao.ObjectCache` `com.j256.ormlite.android.AndroidDatabaseResults.objectCache` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.j256.ormlite.android.AndroidDatabaseResults.MIN_NUM_COLUMN_NAMES_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.db.DatabaseType` `@@com.j256.ormlite.android.AndroidDatabaseResults.databaseType` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1415d8.  v0:= new `com.j256.ormlite.db.SqliteAndroidDatabaseType`;
  #L1415dc.  call `<init>`(v0) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.<init>:()V` @kind direct;
  #L1415e2.  `@@com.j256.ormlite.android.AndroidDatabaseResults.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` := v0 @kind object;
  #L1415e6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidDatabaseResults` v4 @kind this, `android.database.Cursor` v5 @kind object, `com.j256.ormlite.dao.ObjectCache` v6 @kind object, `boolean` v7 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.<init>:(Landroid/database/Cursor;Lcom/j256/ormlite/dao/ObjectCache;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1415f8.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1415fe.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` := v5 @kind object;
  #L141602.  call temp:= `getColumnNames`(v5) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L141608.  v0:= temp @kind object;
  #L14160a.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] := v0 @kind object;
  #L14160e.  v0:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L141612.  v0:= length @variable v0;
  #L141614.  v1:= 8I;
  #L141618.  if v0 < v1 then goto L141656;
  #L14161c.  v0:= new `java.util.HashMap`;
  #L141620.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L141626.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` := v0 @kind object;
  #L14162a.  v0:= 0I;
  #L14162c.  v1:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L141630.  v1:= length @variable v1;
  #L141632.  if v0 >= v1 then goto L14165c;
  #L141636.  v1:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` @kind object;
  #L14163a.  v2:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L14163e.  v2:= v2[v0] @kind object;
  #L141642.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L141648.  v3:= temp @kind object;
  #L14164a.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L141650.  v0:= v0 + 1;
  #L141654.  goto L14162c;
  #L141656.  v0:= 0I;
  #L141658.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` := v0 @kind object;
  #L14165c.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.objectCache` @type ^`com.j256.ormlite.dao.ObjectCache` := v6 @kind object;
  #L141660.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.cacheStore` @type ^`boolean` := v7 @kind boolean;
  #L141664.  return @kind void;
}
procedure `int` `lookupColumn`(`com.j256.ormlite.android.AndroidDatabaseResults` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.lookupColumn:(Ljava/lang/String;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L141678.  v1:= -1I;
  #L14167a.  v0:= v3.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` @kind object;
  #L14167e.  if v0 != 0 then goto L1416ae;
  #L141682.  v0:= 0I;
  #L141684.  v2:= v3.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L141688.  v2:= length @variable v2;
  #L14168a.  if v0 >= v2 then goto L1416aa;
  #L14168e.  v2:= v3.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L141692.  v2:= v2[v0] @kind object;
  #L141696.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14169c.  v2:= temp;
  #L14169e.  if v2 == 0 then goto L1416a4;
  #L1416a2.  return v0;
  #L1416a4.  v0:= v0 + 1;
  #L1416a8.  goto L141684;
  #L1416aa.  v0:= v1;
  #L1416ac.  goto L1416a2;
  #L1416ae.  v0:= v3.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` @kind object;
  #L1416b2.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1416b8.  v0:= temp @kind object;
  #L1416ba.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L1416be.  if v0 != 0 then goto L1416c6;
  #L1416c2.  v0:= v1;
  #L1416c4.  goto L1416a2;
  #L1416c6.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1416cc.  v0:= temp;
  #L1416ce.  goto L1416a2;
}
procedure `void` `close`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1416e0.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L1416e4.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L1416ea.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.android.AndroidDatabaseResults` v0 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;

  #L1416fc.  call `close`(v0) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.close:()V` @kind virtual;
  #L141702.  return @kind void;
}
procedure `int` `findColumn`(`com.j256.ormlite.android.AndroidDatabaseResults` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.findColumn:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L141714.  call temp:= `lookupColumn`(v4, v5) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.lookupColumn:(Ljava/lang/String;)I` @kind direct;
  #L14171a.  v0:= temp;
  #L14171c.  if v0 < 0 then goto L141722;
  #L141720.  return v0;
  #L141722.  v0:= new `java.lang.StringBuilder`;
  #L141726.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14172c.  v1:= temp;
  #L14172e.  v1:= v1 + 4;
  #L141732.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L141738.  v1:= `@@com.j256.ormlite.android.AndroidDatabaseResults.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` @kind object;
  #L14173c.  call `appendEscapedEntityName`(v1, v0, v5) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L141742.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141748.  v0:= temp @kind object;
  #L14174a.  call temp:= `lookupColumn`(v4, v0) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.lookupColumn:(Ljava/lang/String;)I` @kind direct;
  #L141750.  v0:= temp;
  #L141752.  if v0 >= 0 then goto L141720;
  #L141756.  v0:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L14175a.  call temp:= `getColumnNames`(v0) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L141760.  v0:= temp @kind object;
  #L141762.  v1:= new `java.sql.SQLException`;
  #L141766.  v2:= new `java.lang.StringBuilder`;
  #L14176a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141770.  v3:= "Unknown field '" @kind object;
  #L141774.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14177a.  v2:= temp @kind object;
  #L14177c.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141782.  v2:= temp @kind object;
  #L141784.  v3:= "' from the Android sqlite cursor, not in:" @kind object;
  #L141788.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14178e.  v2:= temp @kind object;
  #L141790.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L141796.  v0:= temp @kind object;
  #L141798.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14179e.  v0:= temp @kind object;
  #L1417a0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1417a6.  v0:= temp @kind object;
  #L1417a8.  call `<init>`(v1, v0) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1417ae.  throw v1;
}
procedure `boolean` `first`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.first:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1417c0.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L1417c4.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L1417ca.  v0:= temp;
  #L1417cc.  return v0;
}
procedure `java.math.BigDecimal` `getBigDecimal`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getBigDecimal:(I)Ljava/math/BigDecimal;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1417e0.  v0:= new `java.sql.SQLException`;
  #L1417e4.  v1:= "Android does not support BigDecimal type.  Use BIG_DECIMAL or BIG_DECIMAL_STRING types" @kind object;
  #L1417e8.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1417ee.  throw v0;
}
procedure `java.io.InputStream` `getBlobStream`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getBlobStream:(I)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L141800.  v0:= new `java.io.ByteArrayInputStream`;
  #L141804.  v1:= v2.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141808.  call temp:= `getBlob`(v1, v3) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L14180e.  v1:= temp @kind object;
  #L141810.  call `<init>`(v0, v1) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L141816.  return v0 @kind object;
}
procedure `boolean` `getBoolean`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getBoolean:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141828.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L14182c.  call temp:= `isNull`(v0, v2) @signature `Landroid/database/Cursor;.isNull:(I)Z` @kind interface;
  #L141832.  v0:= temp;
  #L141834.  if v0 != 0 then goto L141848;
  #L141838.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L14183c.  call temp:= `getShort`(v0, v2) @signature `Landroid/database/Cursor;.getShort:(I)S` @kind interface;
  #L141842.  v0:= temp;
  #L141844.  if v0 != 0 then goto L14184c;
  #L141848.  v0:= 0I;
  #L14184a.  return v0;
  #L14184c.  v0:= 1I;
  #L14184e.  goto L14184a;
}
procedure `byte` `getByte`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getByte:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141860.  call temp:= `getShort`(v1, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getShort:(I)S` @kind virtual;
  #L141866.  v0:= temp;
  #L141868.  v0:= (`byte`) v0 @kind i2b;
  #L14186a.  return v0;
}
procedure `byte`[] `getBytes`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getBytes:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14187c.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141880.  call temp:= `getBlob`(v0, v2) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L141886.  v0:= temp @kind object;
  #L141888.  return v0 @kind object;
}
procedure `char` `getChar`(`com.j256.ormlite.android.AndroidDatabaseResults` v4 @kind this, `int` v5 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getChar:(I)C` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14189c.  v0:= 0I;
  #L14189e.  v1:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L1418a2.  call temp:= `getString`(v1, v5) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L1418a8.  v1:= temp @kind object;
  #L1418aa.  if v1 == 0 then goto L1418ba;
  #L1418ae.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1418b4.  v2:= temp;
  #L1418b6.  if v2 != 0 then goto L1418bc;
  #L1418ba.  return v0;
  #L1418bc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1418c2.  v2:= temp;
  #L1418c4.  v3:= 1I;
  #L1418c6.  if v2 != v3 then goto L1418d4;
  #L1418ca.  call temp:= `charAt`(v1, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1418d0.  v0:= temp;
  #L1418d2.  goto L1418ba;
  #L1418d4.  v0:= new `java.sql.SQLException`;
  #L1418d8.  v1:= new `java.lang.StringBuilder`;
  #L1418dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1418e2.  v2:= "More than 1 character stored in database column: " @kind object;
  #L1418e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1418ec.  v1:= temp @kind object;
  #L1418ee.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1418f4.  v1:= temp @kind object;
  #L1418f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1418fc.  v1:= temp @kind object;
  #L1418fe.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141904.  throw v0;
}
procedure `int` `getColumnCount`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getColumnCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141918.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L14191c.  call temp:= `getColumnCount`(v0) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L141922.  v0:= temp;
  #L141924.  return v0;
}
procedure `java.lang.String`[] `getColumnNames`(`com.j256.ormlite.android.AndroidDatabaseResults` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getColumnNames:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L141938.  call temp:= `getColumnCount`(v4) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getColumnCount:()I` @kind virtual;
  #L14193e.  v1:= temp;
  #L141940.  v2:= new `java.lang.String`[v1];
  #L141944.  v0:= 0I;
  #L141946.  if v0 >= v1 then goto L141960;
  #L14194a.  v3:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L14194e.  call temp:= `getColumnName`(v3, v0) @signature `Landroid/database/Cursor;.getColumnName:(I)Ljava/lang/String;` @kind interface;
  #L141954.  v3:= temp @kind object;
  #L141956.  v2[v0]:= v3 @kind object;
  #L14195a.  v0:= v0 + 1;
  #L14195e.  goto L141946;
  #L141960.  return v2 @kind object;
}
procedure `int` `getCount`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141974.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141978.  call temp:= `getCount`(v0) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L14197e.  v0:= temp;
  #L141980.  return v0;
}
procedure `double` `getDouble`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getDouble:(I)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L141994.  v0:= v2.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141998.  call temp:= `getDouble`(v0, v3) @signature `Landroid/database/Cursor;.getDouble:(I)D` @kind interface;
  #L14199e.  v0:= temp @kind wide;
  #L1419a0.  return v0 @kind wide;
}
procedure `float` `getFloat`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getFloat:(I)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1419b4.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L1419b8.  call temp:= `getFloat`(v0, v2) @signature `Landroid/database/Cursor;.getFloat:(I)F` @kind interface;
  #L1419be.  v0:= temp;
  #L1419c0.  return v0;
}
procedure `int` `getInt`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getInt:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1419d4.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L1419d8.  call temp:= `getInt`(v0, v2) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L1419de.  v0:= temp;
  #L1419e0.  return v0;
}
procedure `long` `getLong`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getLong:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1419f4.  v0:= v2.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L1419f8.  call temp:= `getLong`(v0, v3) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L1419fe.  v0:= temp @kind wide;
  #L141a00.  return v0 @kind wide;
}
procedure `java.lang.Object` `getObject`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getObject:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L141a14.  v0:= new `java.sql.SQLException`;
  #L141a18.  v1:= "Android does not support Object type." @kind object;
  #L141a1c.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141a22.  throw v0;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCacheForRetrieve`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getObjectCacheForRetrieve:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141a34.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.objectCache` @type ^`com.j256.ormlite.dao.ObjectCache` @kind object;
  #L141a38.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCacheForStore`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getObjectCacheForStore:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141a4c.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cacheStore` @type ^`boolean` @kind boolean;
  #L141a50.  if v0 == 0 then goto L141a5a;
  #L141a54.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.objectCache` @type ^`com.j256.ormlite.dao.ObjectCache` @kind object;
  #L141a58.  return v0 @kind object;
  #L141a5a.  v0:= 0I;
  #L141a5c.  goto L141a58;
}
procedure `int` `getPosition`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getPosition:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141a70.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141a74.  call temp:= `getPosition`(v0) @signature `Landroid/database/Cursor;.getPosition:()I` @kind interface;
  #L141a7a.  v0:= temp;
  #L141a7c.  return v0;
}
procedure `android.database.Cursor` `getRawCursor`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getRawCursor:()Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141a90.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141a94.  return v0 @kind object;
}
procedure `short` `getShort`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getShort:(I)S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141aa8.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141aac.  call temp:= `getShort`(v0, v2) @signature `Landroid/database/Cursor;.getShort:(I)S` @kind interface;
  #L141ab2.  v0:= temp;
  #L141ab4.  return v0;
}
procedure `java.lang.String` `getString`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getString:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141ac8.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141acc.  call temp:= `getString`(v0, v2) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L141ad2.  v0:= temp @kind object;
  #L141ad4.  return v0 @kind object;
}
procedure `java.sql.Timestamp` `getTimestamp`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getTimestamp:(I)Ljava/sql/Timestamp;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L141ae8.  v0:= new `java.sql.SQLException`;
  #L141aec.  v1:= "Android does not support timestamp.  Use JAVA_DATE_LONG or JAVA_DATE_STRING types" @kind object;
  #L141af0.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141af6.  throw v0;
}
procedure `boolean` `last`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.last:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141b08.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141b0c.  call temp:= `moveToLast`(v0) @signature `Landroid/database/Cursor;.moveToLast:()Z` @kind interface;
  #L141b12.  v0:= temp;
  #L141b14.  return v0;
}
procedure `boolean` `moveAbsolute`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.moveAbsolute:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141b28.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141b2c.  call temp:= `moveToPosition`(v0, v2) @signature `Landroid/database/Cursor;.moveToPosition:(I)Z` @kind interface;
  #L141b32.  v0:= temp;
  #L141b34.  return v0;
}
procedure `boolean` `moveRelative`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.moveRelative:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141b48.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141b4c.  call temp:= `move`(v0, v2) @signature `Landroid/database/Cursor;.move:(I)Z` @kind interface;
  #L141b52.  v0:= temp;
  #L141b54.  return v0;
}
procedure `boolean` `next`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.next:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141b68.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141b6c.  call temp:= `moveToNext`(v0) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L141b72.  v0:= temp;
  #L141b74.  return v0;
}
procedure `boolean` `previous`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.previous:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141b88.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141b8c.  call temp:= `moveToPrevious`(v0) @signature `Landroid/database/Cursor;.moveToPrevious:()Z` @kind interface;
  #L141b92.  v0:= temp;
  #L141b94.  return v0;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L141ba8.  v0:= new `java.lang.StringBuilder`;
  #L141bac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141bb2.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L141bb8.  v1:= temp @kind object;
  #L141bba.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L141bc0.  v1:= temp @kind object;
  #L141bc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141bc8.  v0:= temp @kind object;
  #L141bca.  v1:= "@" @kind object;
  #L141bce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141bd4.  v0:= temp @kind object;
  #L141bd6.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L141bdc.  v1:= temp;
  #L141bde.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L141be4.  v1:= temp @kind object;
  #L141be6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141bec.  v0:= temp @kind object;
  #L141bee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141bf4.  v0:= temp @kind object;
  #L141bf6.  return v0 @kind object;
}
procedure `boolean` `wasNull`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.wasNull:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141c08.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L141c0c.  call temp:= `isNull`(v0, v2) @signature `Landroid/database/Cursor;.isNull:(I)Z` @kind interface;
  #L141c12.  v0:= temp;
  #L141c14.  return v0;
}

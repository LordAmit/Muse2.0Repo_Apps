record `com.j256.ormlite.support.DatabaseConnectionProxy` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.DatabaseConnection` @kind interface {
  `com.j256.ormlite.support.DatabaseConnection` `com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.support.DatabaseConnectionProxy` v0 @kind this, `com.j256.ormlite.support.DatabaseConnection` v1 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.<init>:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15ee24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15ee2a.  v0.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L15ee2e.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ee40.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ee44.  if v0 == 0 then goto L15ee52;
  #L15ee48.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ee4c.  call `close`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.close:()V` @kind interface;
  #L15ee52.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ee64.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ee68.  if v0 == 0 then goto L15ee76;
  #L15ee6c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ee70.  call `closeQuietly`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.closeQuietly:()V` @kind interface;
  #L15ee76.  return @kind void;
}
procedure `void` `commit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.sql.Savepoint` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.commit:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ee88.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ee8c.  if v0 == 0 then goto L15ee9a;
  #L15ee90.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ee94.  call `commit`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.commit:(Ljava/sql/Savepoint;)V` @kind interface;
  #L15ee9a.  return @kind void;
}
procedure `com.j256.ormlite.support.CompiledStatement` `compileStatement`(`com.j256.ormlite.support.DatabaseConnectionProxy` v6 @kind this, `java.lang.String` v7 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v8 @kind object, `com.j256.ormlite.field.FieldType`[] v9 @kind object, `int` v10 , `boolean` v11 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15eeac.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15eeb0.  if v0 != 0 then goto L15eeb8;
  #L15eeb4.  v0:= 0I;
  #L15eeb6.  return v0 @kind object;
  #L15eeb8.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15eebc.  v1:= v7 @kind object;
  #L15eebe.  v2:= v8 @kind object;
  #L15eec0.  v3:= v9 @kind object;
  #L15eec2.  v4:= v10;
  #L15eec4.  v5:= v11;
  #L15eec6.  call temp:= `compileStatement`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @kind interface;
  #L15eecc.  v0:= temp @kind object;
  #L15eece.  goto L15eeb6;
}
procedure `int` `delete`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15eee0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15eee4.  if v0 != 0 then goto L15eeec;
  #L15eee8.  v0:= 0I;
  #L15eeea.  return v0;
  #L15eeec.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15eef0.  call temp:= `delete`(v0, v2, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L15eef6.  v0:= temp;
  #L15eef8.  goto L15eeea;
}
procedure `int` `executeStatement`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.executeStatement:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ef0c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ef10.  if v0 != 0 then goto L15ef18;
  #L15ef14.  v0:= 0I;
  #L15ef16.  return v0;
  #L15ef18.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ef1c.  call temp:= `executeStatement`(v0, v2, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.executeStatement:(Ljava/lang/String;I)I` @kind interface;
  #L15ef22.  v0:= temp;
  #L15ef24.  goto L15ef16;
}
procedure `int` `insert`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object, `com.j256.ormlite.support.GeneratedKeyHolder` v5 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ef38.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ef3c.  if v0 != 0 then goto L15ef44;
  #L15ef40.  v0:= 0I;
  #L15ef42.  return v0;
  #L15ef44.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ef48.  call temp:= `insert`(v0, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @kind interface;
  #L15ef4e.  v0:= temp;
  #L15ef50.  goto L15ef42;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isAutoCommit:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ef64.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ef68.  if v0 != 0 then goto L15ef70;
  #L15ef6c.  v0:= 0I;
  #L15ef6e.  return v0;
  #L15ef70.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ef74.  call temp:= `isAutoCommit`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommit:()Z` @kind interface;
  #L15ef7a.  v0:= temp;
  #L15ef7c.  goto L15ef6e;
}
procedure `boolean` `isAutoCommitSupported`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isAutoCommitSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ef90.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15ef94.  if v0 != 0 then goto L15ef9c;
  #L15ef98.  v0:= 0I;
  #L15ef9a.  return v0;
  #L15ef9c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15efa0.  call temp:= `isAutoCommitSupported`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommitSupported:()Z` @kind interface;
  #L15efa6.  v0:= temp;
  #L15efa8.  goto L15ef9a;
}
procedure `boolean` `isClosed`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15efbc.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15efc0.  if v0 != 0 then goto L15efc8;
  #L15efc4.  v0:= 1I;
  #L15efc6.  return v0;
  #L15efc8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15efcc.  call temp:= `isClosed`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isClosed:()Z` @kind interface;
  #L15efd2.  v0:= temp;
  #L15efd4.  goto L15efc6;
}
procedure `boolean` `isTableExists`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isTableExists:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15efe8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15efec.  if v0 != 0 then goto L15eff4;
  #L15eff0.  v0:= 0I;
  #L15eff2.  return v0;
  #L15eff4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15eff8.  call temp:= `isTableExists`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isTableExists:(Ljava/lang/String;)Z` @kind interface;
  #L15effe.  v0:= temp;
  #L15f000.  goto L15eff2;
}
procedure `long` `queryForLong`(`com.j256.ormlite.support.DatabaseConnectionProxy` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForLong:(Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15f014.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f018.  if v0 != 0 then goto L15f022;
  #L15f01c.  v0:= 0L;
  #L15f020.  return v0 @kind wide;
  #L15f022.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f026.  call temp:= `queryForLong`(v0, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;)J` @kind interface;
  #L15f02c.  v0:= temp @kind wide;
  #L15f02e.  goto L15f020;
}
procedure `long` `queryForLong`(`com.j256.ormlite.support.DatabaseConnectionProxy` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object`[] v4 @kind object, `com.j256.ormlite.field.FieldType`[] v5 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15f040.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f044.  if v0 != 0 then goto L15f04e;
  #L15f048.  v0:= 0L;
  #L15f04c.  return v0 @kind wide;
  #L15f04e.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f052.  call temp:= `queryForLong`(v0, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @kind interface;
  #L15f058.  v0:= temp @kind wide;
  #L15f05a.  goto L15f04c;
}
procedure `java.lang.Object` `queryForOne`(`com.j256.ormlite.support.DatabaseConnectionProxy` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object, `com.j256.ormlite.field.FieldType`[] v9 @kind object, `com.j256.ormlite.stmt.GenericRowMapper` v10 @kind object, `com.j256.ormlite.dao.ObjectCache` v11 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15f06c.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f070.  if v0 != 0 then goto L15f078;
  #L15f074.  v0:= 0I;
  #L15f076.  return v0 @kind object;
  #L15f078.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f07c.  v1:= v7 @kind object;
  #L15f07e.  v2:= v8 @kind object;
  #L15f080.  v3:= v9 @kind object;
  #L15f082.  v4:= v10 @kind object;
  #L15f084.  v5:= v11 @kind object;
  #L15f086.  call temp:= `queryForOne`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @kind interface;
  #L15f08c.  v0:= temp @kind object;
  #L15f08e.  goto L15f076;
}
procedure `void` `rollback`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.sql.Savepoint` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.rollback:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15f0a0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f0a4.  if v0 == 0 then goto L15f0b2;
  #L15f0a8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f0ac.  call `rollback`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.rollback:(Ljava/sql/Savepoint;)V` @kind interface;
  #L15f0b2.  return @kind void;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `boolean` v2 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.setAutoCommit:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15f0c4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f0c8.  if v0 == 0 then goto L15f0d6;
  #L15f0cc.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f0d0.  call `setAutoCommit`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setAutoCommit:(Z)V` @kind interface;
  #L15f0d6.  return @kind void;
}
procedure `java.sql.Savepoint` `setSavePoint`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15f0e8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f0ec.  if v0 != 0 then goto L15f0f4;
  #L15f0f0.  v0:= 0I;
  #L15f0f2.  return v0 @kind object;
  #L15f0f4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f0f8.  call temp:= `setSavePoint`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @kind interface;
  #L15f0fe.  v0:= temp @kind object;
  #L15f100.  goto L15f0f2;
}
procedure `int` `update`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15f114.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f118.  if v0 != 0 then goto L15f120;
  #L15f11c.  v0:= 0I;
  #L15f11e.  return v0;
  #L15f120.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f124.  call temp:= `update`(v0, v2, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L15f12a.  v0:= temp;
  #L15f12c.  goto L15f11e;
}

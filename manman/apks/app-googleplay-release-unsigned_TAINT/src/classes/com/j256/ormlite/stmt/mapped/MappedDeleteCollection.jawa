record `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedDeleteCollection` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15ce80.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L15ce86.  return @kind void;
}
procedure `void` `appendWhereIds`(`com.j256.ormlite.db.DatabaseType` v4 @kind object, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.StringBuilder` v6 @kind object, `int` v7 , `com.j256.ormlite.field.FieldType`[] v8 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendWhereIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;I[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15ce98.  v1:= 0I;
  #L15ce9a.  v0:= "WHERE " @kind object;
  #L15ce9e.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cea4.  call temp:= `getColumnName`(v5) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L15ceaa.  v0:= temp @kind object;
  #L15ceac.  call `appendEscapedEntityName`(v4, v6, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L15ceb2.  v0:= " IN (" @kind object;
  #L15ceb6.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cebc.  v0:= 1I;
  #L15cebe.  v2:= v1;
  #L15cec0.  if v2 >= v7 then goto L15ceee;
  #L15cec4.  if v0 == 0 then goto L15cee2;
  #L15cec8.  v0:= v1;
  #L15ceca.  v3:= 63I;
  #L15cece.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ced4.  if v8 == 0 then goto L15cedc;
  #L15ced8.  v8[v2]:= v5 @kind object;
  #L15cedc.  v2:= v2 + 1;
  #L15cee0.  goto L15cec0;
  #L15cee2.  v3:= 44I;
  #L15cee6.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ceec.  goto L15ceca;
  #L15ceee.  v0:= ") " @kind object;
  #L15cef2.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cef8.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` `build`(`com.j256.ormlite.db.DatabaseType` v4 @kind object, `com.j256.ormlite.table.TableInfo` v5 @kind object, `int` v6 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15cf0c.  call temp:= `getIdField`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15cf12.  v0:= temp @kind object;
  #L15cf14.  if v0 != 0 then goto L15cf5e;
  #L15cf18.  v0:= new `java.sql.SQLException`;
  #L15cf1c.  v1:= new `java.lang.StringBuilder`;
  #L15cf20.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15cf26.  v2:= "Cannot delete " @kind object;
  #L15cf2a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cf30.  v1:= temp @kind object;
  #L15cf32.  call temp:= `getDataClass`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L15cf38.  v2:= temp @kind object;
  #L15cf3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cf40.  v1:= temp @kind object;
  #L15cf42.  v2:= " because it doesn't have an id field defined" @kind object;
  #L15cf46.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cf4c.  v1:= temp @kind object;
  #L15cf4e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cf54.  v1:= temp @kind object;
  #L15cf56.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cf5c.  throw v0;
  #L15cf5e.  v1:= new `java.lang.StringBuilder`;
  #L15cf62.  v2:= 128I;
  #L15cf66.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L15cf6c.  v2:= "DELETE FROM " @kind object;
  #L15cf70.  call temp:= `getTableName`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L15cf76.  v3:= temp @kind object;
  #L15cf78.  call `appendTableName`(v4, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15cf7e.  v2:= new `com.j256.ormlite.field.FieldType`[v6];
  #L15cf82.  call `appendWhereIds`(v4, v0, v1, v6, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendWhereIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;I[Lcom/j256/ormlite/field/FieldType;)V` @kind static;
  #L15cf88.  v0:= new `com.j256.ormlite.stmt.mapped.MappedDeleteCollection`;
  #L15cf8c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cf92.  v1:= temp @kind object;
  #L15cf94.  call `<init>`(v0, v5, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L15cf9a.  return v0 @kind object;
}
procedure `int` `deleteIds`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.util.Collection` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.deleteIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/util/Collection;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15cfac.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L15cfb2.  v0:= temp;
  #L15cfb4.  call temp:= `build`(v6, v7, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @kind static;
  #L15cfba.  v1:= temp @kind object;
  #L15cfbc.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L15cfc2.  v0:= temp;
  #L15cfc4.  v2:= new `java.lang.Object`[v0];
  #L15cfc8.  call temp:= `getIdField`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15cfce.  v3:= temp @kind object;
  #L15cfd0.  v0:= 0I;
  #L15cfd2.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15cfd8.  v4:= temp @kind object;
  #L15cfda.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15cfe0.  v5:= temp;
  #L15cfe2.  if v5 == 0 then goto L15d000;
  #L15cfe6.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15cfec.  v5:= temp @kind object;
  #L15cfee.  call temp:= `convertJavaFieldToSqlArgValue`(v3, v5) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15cff4.  v5:= temp @kind object;
  #L15cff6.  v2[v0]:= v5 @kind object;
  #L15cffa.  v0:= v0 + 1;
  #L15cffe.  goto L15cfda;
  #L15d000.  call temp:= `getDataClass`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L15d006.  v0:= temp @kind object;
  #L15d008.  call temp:= `updateRows`(v8, v0, v1, v2, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind static;
  #L15d00e.  v0:= temp;
  #L15d010.  return v0;
}
procedure `int` `deleteObjects`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.util.Collection` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.deleteObjects:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/util/Collection;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15d024.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L15d02a.  v0:= temp;
  #L15d02c.  call temp:= `build`(v6, v7, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @kind static;
  #L15d032.  v1:= temp @kind object;
  #L15d034.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L15d03a.  v0:= temp;
  #L15d03c.  v2:= new `java.lang.Object`[v0];
  #L15d040.  call temp:= `getIdField`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15d046.  v3:= temp @kind object;
  #L15d048.  v0:= 0I;
  #L15d04a.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15d050.  v4:= temp @kind object;
  #L15d052.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15d058.  v5:= temp;
  #L15d05a.  if v5 == 0 then goto L15d078;
  #L15d05e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15d064.  v5:= temp @kind object;
  #L15d066.  call temp:= `extractJavaFieldToSqlArgValue`(v3, v5) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15d06c.  v5:= temp @kind object;
  #L15d06e.  v2[v0]:= v5 @kind object;
  #L15d072.  v0:= v0 + 1;
  #L15d076.  goto L15d052;
  #L15d078.  call temp:= `getDataClass`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L15d07e.  v0:= temp @kind object;
  #L15d080.  call temp:= `updateRows`(v8, v0, v1, v2, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind static;
  #L15d086.  v0:= temp;
  #L15d088.  return v0;
}
procedure `int` `updateRows`(`com.j256.ormlite.support.DatabaseConnection` v6 @kind object, `java.lang.Class` v7 @kind object, `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` v8 @kind object, `java.lang.Object`[] v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L15d09c.  v0:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L15d0a0.  v1:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L15d0a4.  call temp:= `delete`(v6, v0, v9, v1) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L15d0aa.  v1:= temp;
  #L15d0ac.  if v1 <= 0 then goto L15d0cc;
  #L15d0b0.  if v10 == 0 then goto L15d0cc;
  #L15d0b4.  v2:= length @variable v9;
  #L15d0b6.  v0:= 0I;
  #L15d0b8.  if v0 >= v2 then goto L15d0cc;
  #L15d0bc.  v3:= v9[v0] @kind object;
  #L15d0c0.  call `remove`(v10, v7, v3) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #L15d0c6.  v0:= v0 + 1;
  #L15d0ca.  goto L15d0b8;
  #L15d0cc.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15d0d0.  v2:= "delete-collection with statement '{}' and {} args, changed {} rows" @kind object;
  #L15d0d4.  v3:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L15d0d8.  v4:= length @variable v9;
  #L15d0da.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15d0e0.  v4:= temp @kind object;
  #L15d0e2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15d0e8.  v5:= temp @kind object;
  #L15d0ea.  call `debug`(v0, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L15d0f0.  v0:= length @variable v9;
  #L15d0f2.  if v0 <= 0 then goto L15d104;
  #L15d0f6.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15d0fa.  v2:= "delete-collection arguments: {}" @kind object;
  #L15d0fe.  call `trace`(v0, v2, v9) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L15d104.  return v1;
  #L15d106.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15d108.  v1:= new `java.lang.StringBuilder`;
  #L15d10c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d112.  v2:= "Unable to run delete collection stmt: " @kind object;
  #L15d116.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d11c.  v1:= temp @kind object;
  #L15d11e.  v2:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L15d122.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d128.  v1:= temp @kind object;
  #L15d12a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d130.  v1:= temp @kind object;
  #L15d132.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15d138.  v0:= temp @kind object;
  #L15d13a.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15d106;
}

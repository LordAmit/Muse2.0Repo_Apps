record `com.j256.ormlite.dao.BaseForeignCollection` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.j256.ormlite.dao.ForeignCollection` @kind interface, `java.io.Serializable` @kind interface {
  `com.j256.ormlite.dao.Dao` `com.j256.ormlite.dao.BaseForeignCollection.dao` @AccessFlag PROTECTED_FINAL_TRANSIENT;
  `com.j256.ormlite.field.FieldType` `com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `boolean` `com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.String` `com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.j256.ormlite.dao.BaseForeignCollection.parent` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.j256.ormlite.dao.BaseForeignCollection.parentId` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `com.j256.ormlite.stmt.PreparedQuery` `com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.j256.ormlite.dao.BaseForeignCollection.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.BaseForeignCollection` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L146c24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L146c2a.  v0.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` := v1 @kind object;
  #L146c2e.  v0.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` := v4 @kind object;
  #L146c32.  v0.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` := v3 @kind object;
  #L146c36.  v0.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` := v5 @kind object;
  #L146c3a.  v0.`com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @type ^`boolean` := v6 @kind boolean;
  #L146c3e.  v0.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` := v2 @kind object;
  #L146c42.  return @kind void;
}
procedure `boolean` `addElement`(`com.j256.ormlite.dao.BaseForeignCollection` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L146c54.  v0:= 1I;
  #L146c56.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146c5a.  if v1 != 0 then goto L146c62;
  #L146c5e.  v0:= 0I;
  #L146c60.  return v0;
  #L146c62.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L146c66.  if v1 == 0 then goto L146c8a;
  #L146c6a.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L146c6e.  call temp:= `getFieldValueIfNotDefault`(v1, v5) @signature `Lcom/j256/ormlite/field/FieldType;.getFieldValueIfNotDefault:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L146c74.  v1:= temp @kind object;
  #L146c76.  if v1 != 0 then goto L146c8a;
  #L146c7a.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L146c7e.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L146c82.  v3:= 0I;
  #L146c84.  call `assignField`(v1, v5, v2, v0, v3) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L146c8a.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146c8e.  call temp:= `create`(v1, v5) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @kind interface;
  #L146c94.  goto L146c60;
}
procedure `boolean` `add`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L146ca8.  call temp:= `addElement`(v3, v4) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L146cae.  v0:= temp;
  #L146cb0.  return v0;
  #L146cb2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L146cb4.  v1:= new `java.lang.IllegalStateException`;
  #L146cb8.  v2:= "Could not create data element in dao" @kind object;
  #L146cbc.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L146cc2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L146cb2;
}
procedure `boolean` `addAll`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L146ce4.  v0:= 0I;
  #L146ce6.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L146cec.  v1:= temp @kind object;
  #L146cee.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L146cf4.  v2:= temp;
  #L146cf6.  if v2 == 0 then goto L146d24;
  #L146cfa.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L146d00.  v2:= temp @kind object;
  #Try_start0.  
  #L146d02.  call temp:= `addElement`(v3, v2) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L146d08.  v2:= temp;
  #L146d0a.  if v2 == 0 then goto L146cee;
  #L146d0e.  v0:= 1I;
  #L146d10.  goto L146cee;
  #L146d12.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L146d14.  v1:= new `java.lang.IllegalStateException`;
  #L146d18.  v2:= "Could not create data elements in dao" @kind object;
  #L146d1c.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L146d22.  throw v1;
  #L146d24.  return v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L146d12;
}
procedure `void` `clear`(`com.j256.ormlite.dao.BaseForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L146d48.  v0:= v2.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146d4c.  if v0 != 0 then goto L146d52;
  #L146d50.  return @kind void;
  #L146d52.  call temp:= `closeableIterator`(v2) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L146d58.  v1:= temp @kind object;
  #Try_start0.  
  #L146d5a.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L146d60.  v0:= temp;
  #L146d62.  if v0 == 0 then goto L146d7e;
  #L146d66.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L146d6c.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L146d72.  goto L146d5a;
  #L146d74.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L146d76.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L146d7c.  throw v0;
  #L146d7e.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L146d84.  goto L146d50;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L146d74;
}
procedure `com.j256.ormlite.dao.Dao` `getDao`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.getDao:()Lcom/j256/ormlite/dao/Dao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L146da4.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146da8.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.PreparedQuery` `getPreparedQuery`(`com.j256.ormlite.dao.BaseForeignCollection` v4 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.getPreparedQuery:()Lcom/j256/ormlite/stmt/PreparedQuery;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L146dbc.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146dc0.  if v0 != 0 then goto L146dc8;
  #L146dc4.  v0:= 0I;
  #L146dc6.  return v0 @kind object;
  #L146dc8.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L146dcc.  if v0 != 0 then goto L146e50;
  #L146dd0.  v0:= new `com.j256.ormlite.stmt.SelectArg`;
  #L146dd4.  call `<init>`(v0) @signature `Lcom/j256/ormlite/stmt/SelectArg;.<init>:()V` @kind direct;
  #L146dda.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` @kind object;
  #L146dde.  call `setValue`(v0, v1) @signature `Lcom/j256/ormlite/stmt/SelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L146de4.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146de8.  call temp:= `queryBuilder`(v1) @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @kind interface;
  #L146dee.  v1:= temp @kind object;
  #L146df0.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` @kind object;
  #L146df4.  if v2 == 0 then goto L146e06;
  #L146df8.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` @kind object;
  #L146dfc.  v3:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @type ^`boolean` @kind boolean;
  #L146e00.  call temp:= `orderBy`(v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/QueryBuilder;.orderBy:(Ljava/lang/String;Z)Lcom/j256/ormlite/stmt/QueryBuilder;` @kind virtual;
  #L146e06.  call temp:= `where`(v1) @signature `Lcom/j256/ormlite/stmt/QueryBuilder;.where:()Lcom/j256/ormlite/stmt/Where;` @kind virtual;
  #L146e0c.  v1:= temp @kind object;
  #L146e0e.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L146e12.  call temp:= `getColumnName`(v2) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L146e18.  v2:= temp @kind object;
  #L146e1a.  call temp:= `eq`(v1, v2, v0) @signature `Lcom/j256/ormlite/stmt/Where;.eq:(Ljava/lang/String;Ljava/lang/Object;)Lcom/j256/ormlite/stmt/Where;` @kind virtual;
  #L146e20.  v0:= temp @kind object;
  #L146e22.  call temp:= `prepare`(v0) @signature `Lcom/j256/ormlite/stmt/Where;.prepare:()Lcom/j256/ormlite/stmt/PreparedQuery;` @kind virtual;
  #L146e28.  v0:= temp @kind object;
  #L146e2a.  v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` := v0 @kind object;
  #L146e2e.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L146e32.  v0:= instanceof @variable v0 @type ^`com.j256.ormlite.stmt.mapped.MappedPreparedStmt` @kind boolean;
  #L146e36.  if v0 == 0 then goto L146e50;
  #L146e3a.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L146e3e.  v0:= (`com.j256.ormlite.stmt.mapped.MappedPreparedStmt`) v0 @kind object;
  #L146e42.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L146e46.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` @kind object;
  #L146e4a.  call `setParentInformation`(v0, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedPreparedStmt;.setParentInformation:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L146e50.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L146e54.  goto L146dc6;
}
procedure `int` `refresh`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L146e68.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146e6c.  if v0 != 0 then goto L146e74;
  #L146e70.  v0:= 0I;
  #L146e72.  return v0;
  #L146e74.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146e78.  call temp:= `refresh`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @kind interface;
  #L146e7e.  v0:= temp;
  #L146e80.  goto L146e72;
}
procedure `boolean` `remove`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `removeAll`(`java.util.Collection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `retainAll`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L146e94.  v0:= 0I;
  #L146e96.  v1:= v3.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146e9a.  if v1 != 0 then goto L146ea0;
  #L146e9e.  return v0;
  #L146ea0.  call temp:= `closeableIterator`(v3) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L146ea6.  v1:= temp @kind object;
  #Try_start0.  
  #L146ea8.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L146eae.  v2:= temp;
  #L146eb0.  if v2 == 0 then goto L146ed2;
  #L146eb4.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L146eba.  v2:= temp @kind object;
  #L146ebc.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L146ec2.  v2:= temp;
  #L146ec4.  if v2 != 0 then goto L146ea8;
  #L146ec8.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L146ece.  v0:= 1I;
  #L146ed0.  goto L146ea8;
  #L146ed2.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L146ed8.  goto L146e9e;
  #L146eda.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L146edc.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L146ee2.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L146eda;
}
procedure `int` `update`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L146f00.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146f04.  if v0 != 0 then goto L146f0c;
  #L146f08.  v0:= 0I;
  #L146f0a.  return v0;
  #L146f0c.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L146f10.  call temp:= `update`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @kind interface;
  #L146f16.  v0:= temp;
  #L146f18.  goto L146f0a;
}

record `com.j256.ormlite.field.types.BooleanType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BooleanObjectType` @kind class {
}
global `com.j256.ormlite.field.types.BooleanType` `@@com.j256.ormlite.field.types.BooleanType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/BooleanType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L151980.  v0:= new `com.j256.ormlite.field.types.BooleanType`;
  #L151984.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/BooleanType;.<init>:()V` @kind direct;
  #L15198a.  `@@com.j256.ormlite.field.types.BooleanType.singleTon` @type ^`com.j256.ormlite.field.types.BooleanType` := v0 @kind object;
  #L15198e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.BooleanType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/BooleanType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1519a0.  v0:= `@@com.j256.ormlite.field.SqlType.BOOLEAN` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L1519a4.  v1:= 1I;
  #L1519a6.  v1:= new `java.lang.Class`[v1];
  #L1519aa.  v2:= 0I;
  #L1519ac.  v3:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L1519b0.  v1[v2]:= v3 @kind object;
  #L1519b4.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L1519ba.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.BooleanType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object) @signature `Lcom/j256/ormlite/field/types/BooleanType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L1519cc.  call `<init>`(v0, v1) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L1519d2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.BooleanType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/BooleanType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L1519e4.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L1519ea.  return @kind void;
}
procedure `com.j256.ormlite.field.types.BooleanType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/BooleanType;.getSingleton:()Lcom/j256/ormlite/field/types/BooleanType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1519fc.  v0:= `@@com.j256.ormlite.field.types.BooleanType.singleTon` @type ^`com.j256.ormlite.field.types.BooleanType` @kind object;
  #L151a00.  return v0 @kind object;
}
procedure `boolean` `isPrimitive`(`com.j256.ormlite.field.types.BooleanType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/BooleanType;.isPrimitive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L151a14.  v0:= 1I;
  #L151a16.  return v0;
}

record `com.b.a.b.g$d` @kind class @AccessFlag FINAL extends `java.util.Map$Entry` @kind interface {
  `com.b.a.b.g$d` `com.b.a.b.g$d.a` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$d.b` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$d.c` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$d.d` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$d.e` @AccessFlag ;
  `java.lang.Object` `com.b.a.b.g$d.f` @AccessFlag FINAL;
  `java.lang.Object` `com.b.a.b.g$d.g` @AccessFlag ;
  `int` `com.b.a.b.g$d.h` @AccessFlag ;
}
procedure `void` `<init>`(`com.b.a.b.g$d` v1 @kind this) @signature `Lcom/b/a/b/g$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L13c228.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13c22e.  v0:= 0I;
  #L13c230.  v1.`com.b.a.b.g$d.f` @type ^`java.lang.Object` := v0 @kind object;
  #L13c234.  v1.`com.b.a.b.g$d.e` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L13c238.  v1.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L13c23c.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.b.g$d` v1 @kind this, `com.b.a.b.g$d` v2 @kind object, `java.lang.Object` v3 @kind object, `com.b.a.b.g$d` v4 @kind object, `com.b.a.b.g$d` v5 @kind object) @signature `Lcom/b/a/b/g$d;.<init>:(Lcom/b/a/b/g$d;Ljava/lang/Object;Lcom/b/a/b/g$d;Lcom/b/a/b/g$d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L13c250.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13c256.  v1.`com.b.a.b.g$d.a` @type ^`com.b.a.b.g$d` := v2 @kind object;
  #L13c25a.  v1.`com.b.a.b.g$d.f` @type ^`java.lang.Object` := v3 @kind object;
  #L13c25e.  v0:= 1I;
  #L13c260.  v1.`com.b.a.b.g$d.h` @type ^`int` := v0;
  #L13c264.  v1.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` := v4 @kind object;
  #L13c268.  v1.`com.b.a.b.g$d.e` @type ^`com.b.a.b.g$d` := v5 @kind object;
  #L13c26c.  v5.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L13c270.  v4.`com.b.a.b.g$d.e` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L13c274.  return @kind void;
}
procedure `com.b.a.b.g$d` `a`(`com.b.a.b.g$d` v2 @kind this) @signature `Lcom/b/a/b/g$d;.a:()Lcom/b/a/b/g$d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13c288.  v0:= v2.`com.b.a.b.g$d.b` @type ^`com.b.a.b.g$d` @kind object;
  #L13c28c.  if v0 == 0 then goto L13c29a;
  #L13c290.  v1:= v0.`com.b.a.b.g$d.b` @type ^`com.b.a.b.g$d` @kind object;
  #L13c294.  v2:= v0 @kind object;
  #L13c296.  v0:= v1 @kind object;
  #L13c298.  goto L13c28c;
  #L13c29a.  return v2 @kind object;
}
procedure `com.b.a.b.g$d` `b`(`com.b.a.b.g$d` v2 @kind this) @signature `Lcom/b/a/b/g$d;.b:()Lcom/b/a/b/g$d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13c2ac.  v0:= v2.`com.b.a.b.g$d.c` @type ^`com.b.a.b.g$d` @kind object;
  #L13c2b0.  if v0 == 0 then goto L13c2be;
  #L13c2b4.  v1:= v0.`com.b.a.b.g$d.c` @type ^`com.b.a.b.g$d` @kind object;
  #L13c2b8.  v2:= v0 @kind object;
  #L13c2ba.  v0:= v1 @kind object;
  #L13c2bc.  goto L13c2b0;
  #L13c2be.  return v2 @kind object;
}
procedure `boolean` `equals`(`com.b.a.b.g$d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/g$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13c2d0.  v0:= 0I;
  #L13c2d2.  v1:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L13c2d6.  if v1 == 0 then goto L13c308;
  #L13c2da.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L13c2de.  v1:= v3.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L13c2e2.  if v1 != 0 then goto L13c30a;
  #L13c2e6.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L13c2ec.  v1:= temp @kind object;
  #L13c2ee.  if v1 != 0 then goto L13c308;
  #L13c2f2.  v1:= v3.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L13c2f6.  if v1 != 0 then goto L13c324;
  #L13c2fa.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L13c300.  v1:= temp @kind object;
  #L13c302.  if v1 != 0 then goto L13c308;
  #L13c306.  v0:= 1I;
  #L13c308.  return v0;
  #L13c30a.  v1:= v3.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L13c30e.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L13c314.  v2:= temp @kind object;
  #L13c316.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L13c31c.  v1:= temp;
  #L13c31e.  if v1 == 0 then goto L13c308;
  #L13c322.  goto L13c2f2;
  #L13c324.  v1:= v3.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L13c328.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L13c32e.  v2:= temp @kind object;
  #L13c330.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L13c336.  v1:= temp;
  #L13c338.  if v1 == 0 then goto L13c308;
  #L13c33c.  goto L13c306;
}
procedure `java.lang.Object` `getKey`(`com.b.a.b.g$d` v1 @kind this) @signature `Lcom/b/a/b/g$d;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13c350.  v0:= v1.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L13c354.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`com.b.a.b.g$d` v1 @kind this) @signature `Lcom/b/a/b/g$d;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13c368.  v0:= v1.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L13c36c.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.b.a.b.g$d` v3 @kind this) @signature `Lcom/b/a/b/g$d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13c380.  v1:= 0I;
  #L13c382.  v0:= v3.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L13c386.  if v0 != 0 then goto L13c398;
  #L13c38a.  v0:= v1;
  #L13c38c.  v2:= v3.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L13c390.  if v2 != 0 then goto L13c3a6;
  #L13c394.  v0:= v0 ^~ v1 @kind int;
  #L13c396.  return v0;
  #L13c398.  v0:= v3.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L13c39c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L13c3a2.  v0:= temp;
  #L13c3a4.  goto L13c38c;
  #L13c3a6.  v1:= v3.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L13c3aa.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L13c3b0.  v1:= temp;
  #L13c3b2.  goto L13c394;
}
procedure `java.lang.Object` `setValue`(`com.b.a.b.g$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/g$d;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13c3c4.  v0:= v1.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L13c3c8.  v1.`com.b.a.b.g$d.g` @type ^`java.lang.Object` := v2 @kind object;
  #L13c3cc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.b.a.b.g$d` v2 @kind this) @signature `Lcom/b/a/b/g$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13c3e0.  v0:= new `java.lang.StringBuilder`;
  #L13c3e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13c3ea.  v1:= v2.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L13c3ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13c3f4.  v0:= temp @kind object;
  #L13c3f6.  v1:= "=" @kind object;
  #L13c3fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13c400.  v0:= temp @kind object;
  #L13c402.  v1:= v2.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L13c406.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13c40c.  v0:= temp @kind object;
  #L13c40e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13c414.  v0:= temp @kind object;
  #L13c416.  return v0 @kind object;
}

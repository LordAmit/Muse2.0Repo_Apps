record `com.b.a.f` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.ThreadLocal` `com.b.a.f.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.b.a.f.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.b.a.f.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.c` `com.b.a.f.e` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.d` `com.b.a.f.f` @AccessFlag PRIVATE_FINAL;
  `com.b.a.e` `com.b.a.f.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.l` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.d` `com.b.a.f.m` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.c.a` `@@com.b.a.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L13de8c.  v0:= new `com.b.a.f$1`;
  #L13de90.  call `<init>`(v0) @signature `Lcom/b/a/f$1;.<init>:()V` @kind direct;
  #L13de96.  `@@com.b.a.f.a` @type ^`com.b.a.c.a` := v0 @kind object;
  #L13de9a.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.f` v13 @kind this) @signature `Lcom/b/a/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L13deac.  v4:= 0I;
  #L13deae.  v1:= `@@com.b.a.b.d.a` @type ^`com.b.a.b.d` @kind object;
  #L13deb2.  v2:= `@@com.b.a.d.a` @type ^`com.b.a.d` @kind object;
  #L13deb6.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L13debc.  v3:= temp @kind object;
  #L13debe.  v7:= 1I;
  #L13dec0.  v11:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L13dec4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L13deca.  v12:= temp @kind object;
  #L13decc.  v0:= v13 @kind object;
  #L13dece.  v5:= v4;
  #L13ded0.  v6:= v4;
  #L13ded2.  v8:= v4;
  #L13ded4.  v9:= v4;
  #L13ded6.  v10:= v4;
  #L13ded8.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @kind direct;
  #L13dede.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.f` v6 @kind this, `com.b.a.b.d` v7 @kind object, `com.b.a.e` v8 @kind object, `java.util.Map` v9 @kind object, `boolean` v10 , `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `boolean` v15 , `boolean` v16 , `com.b.a.u` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L13def0.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13def6.  v1:= new `java.lang.ThreadLocal`;
  #L13defa.  call `<init>`(v1) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L13df00.  v6.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` := v1 @kind object;
  #L13df04.  v1:= new `java.util.concurrent.ConcurrentHashMap`;
  #L13df08.  call `<init>`(v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L13df0e.  v6.`com.b.a.f.c` @type ^`java.util.Map` := v1 @kind object;
  #L13df12.  v1:= new `com.b.a.b.c`;
  #L13df16.  call `<init>`(v1, v9) @signature `Lcom/b/a/b/c;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L13df1c.  v6.`com.b.a.f.e` @type ^`com.b.a.b.c` := v1 @kind object;
  #L13df20.  v6.`com.b.a.f.f` @type ^`com.b.a.b.d` := v7 @kind object;
  #L13df24.  v6.`com.b.a.f.g` @type ^`com.b.a.e` := v8 @kind object;
  #L13df28.  v6.`com.b.a.f.h` @type ^`boolean` := v10 @kind boolean;
  #L13df2c.  v6.`com.b.a.f.j` @type ^`boolean` := v12 @kind boolean;
  #L13df30.  v6.`com.b.a.f.i` @type ^`boolean` := v13 @kind boolean;
  #L13df34.  v6.`com.b.a.f.k` @type ^`boolean` := v14 @kind boolean;
  #L13df38.  v6.`com.b.a.f.l` @type ^`boolean` := v15 @kind boolean;
  #L13df3c.  v1:= new `java.util.ArrayList`;
  #L13df40.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L13df46.  v2:= `@@com.b.a.b.a.n.Y` @type ^`com.b.a.w` @kind object;
  #L13df4a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13df50.  v2:= `@@com.b.a.b.a.h.a` @type ^`com.b.a.w` @kind object;
  #L13df54.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13df5a.  call temp:= `add`(v1, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13df60.  v0:= v18 @kind object;
  #L13df64.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L13df6a.  v2:= `@@com.b.a.b.a.n.D` @type ^`com.b.a.w` @kind object;
  #L13df6e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13df74.  v2:= `@@com.b.a.b.a.n.m` @type ^`com.b.a.w` @kind object;
  #L13df78.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13df7e.  v2:= `@@com.b.a.b.a.n.g` @type ^`com.b.a.w` @kind object;
  #L13df82.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13df88.  v2:= `@@com.b.a.b.a.n.i` @type ^`com.b.a.w` @kind object;
  #L13df8c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13df92.  v2:= `@@com.b.a.b.a.n.k` @type ^`com.b.a.w` @kind object;
  #L13df96.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13df9c.  call temp:= `a`(v17) @signature `Lcom/b/a/f;.a:(Lcom/b/a/u;)Lcom/b/a/v;` @kind static;
  #L13dfa2.  v2:= temp @kind object;
  #L13dfa4.  v3:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L13dfa8.  v4:= constclass @type ^`java.lang.Long` @kind object;
  #L13dfac.  call temp:= `a`(v3, v4, v2) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L13dfb2.  v3:= temp @kind object;
  #L13dfb4.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13dfba.  v3:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L13dfbe.  v4:= constclass @type ^`java.lang.Double` @kind object;
  #L13dfc2.  v0:= v16;
  #L13dfc6.  call temp:= `a`(v6, v0) @signature `Lcom/b/a/f;.a:(Z)Lcom/b/a/v;` @kind direct;
  #L13dfcc.  v5:= temp @kind object;
  #L13dfce.  call temp:= `a`(v3, v4, v5) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L13dfd4.  v3:= temp @kind object;
  #L13dfd6.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13dfdc.  v3:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L13dfe0.  v4:= constclass @type ^`java.lang.Float` @kind object;
  #L13dfe4.  v0:= v16;
  #L13dfe8.  call temp:= `b`(v6, v0) @signature `Lcom/b/a/f;.b:(Z)Lcom/b/a/v;` @kind direct;
  #L13dfee.  v5:= temp @kind object;
  #L13dff0.  call temp:= `a`(v3, v4, v5) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L13dff6.  v3:= temp @kind object;
  #L13dff8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13dffe.  v3:= `@@com.b.a.b.a.n.x` @type ^`com.b.a.w` @kind object;
  #L13e002.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e008.  v3:= `@@com.b.a.b.a.n.o` @type ^`com.b.a.w` @kind object;
  #L13e00c.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e012.  v3:= `@@com.b.a.b.a.n.q` @type ^`com.b.a.w` @kind object;
  #L13e016.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e01c.  v3:= constclass @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L13e020.  call temp:= `a`(v2) @signature `Lcom/b/a/f;.a:(Lcom/b/a/v;)Lcom/b/a/v;` @kind static;
  #L13e026.  v4:= temp @kind object;
  #L13e028.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L13e02e.  v3:= temp @kind object;
  #L13e030.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e036.  v3:= constclass @type ^`java.util.concurrent.atomic.AtomicLongArray` @kind object;
  #L13e03a.  call temp:= `b`(v2) @signature `Lcom/b/a/f;.b:(Lcom/b/a/v;)Lcom/b/a/v;` @kind static;
  #L13e040.  v2:= temp @kind object;
  #L13e042.  call temp:= `a`(v3, v2) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L13e048.  v2:= temp @kind object;
  #L13e04a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e050.  v2:= `@@com.b.a.b.a.n.s` @type ^`com.b.a.w` @kind object;
  #L13e054.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e05a.  v2:= `@@com.b.a.b.a.n.z` @type ^`com.b.a.w` @kind object;
  #L13e05e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e064.  v2:= `@@com.b.a.b.a.n.F` @type ^`com.b.a.w` @kind object;
  #L13e068.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e06e.  v2:= `@@com.b.a.b.a.n.H` @type ^`com.b.a.w` @kind object;
  #L13e072.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e078.  v2:= constclass @type ^`java.math.BigDecimal` @kind object;
  #L13e07c.  v3:= `@@com.b.a.b.a.n.B` @type ^`com.b.a.v` @kind object;
  #L13e080.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L13e086.  v2:= temp @kind object;
  #L13e088.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e08e.  v2:= constclass @type ^`java.math.BigInteger` @kind object;
  #L13e092.  v3:= `@@com.b.a.b.a.n.C` @type ^`com.b.a.v` @kind object;
  #L13e096.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L13e09c.  v2:= temp @kind object;
  #L13e09e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0a4.  v2:= `@@com.b.a.b.a.n.J` @type ^`com.b.a.w` @kind object;
  #L13e0a8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0ae.  v2:= `@@com.b.a.b.a.n.L` @type ^`com.b.a.w` @kind object;
  #L13e0b2.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0b8.  v2:= `@@com.b.a.b.a.n.P` @type ^`com.b.a.w` @kind object;
  #L13e0bc.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0c2.  v2:= `@@com.b.a.b.a.n.R` @type ^`com.b.a.w` @kind object;
  #L13e0c6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0cc.  v2:= `@@com.b.a.b.a.n.W` @type ^`com.b.a.w` @kind object;
  #L13e0d0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0d6.  v2:= `@@com.b.a.b.a.n.N` @type ^`com.b.a.w` @kind object;
  #L13e0da.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0e0.  v2:= `@@com.b.a.b.a.n.d` @type ^`com.b.a.w` @kind object;
  #L13e0e4.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0ea.  v2:= `@@com.b.a.b.a.c.a` @type ^`com.b.a.w` @kind object;
  #L13e0ee.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0f4.  v2:= `@@com.b.a.b.a.n.U` @type ^`com.b.a.w` @kind object;
  #L13e0f8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e0fe.  v2:= `@@com.b.a.b.a.k.a` @type ^`com.b.a.w` @kind object;
  #L13e102.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e108.  v2:= `@@com.b.a.b.a.j.a` @type ^`com.b.a.w` @kind object;
  #L13e10c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e112.  v2:= `@@com.b.a.b.a.n.S` @type ^`com.b.a.w` @kind object;
  #L13e116.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e11c.  v2:= `@@com.b.a.b.a.a.a` @type ^`com.b.a.w` @kind object;
  #L13e120.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e126.  v2:= `@@com.b.a.b.a.n.b` @type ^`com.b.a.w` @kind object;
  #L13e12a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e130.  v2:= new `com.b.a.b.a.b`;
  #L13e134.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L13e138.  call `<init>`(v2, v3) @signature `Lcom/b/a/b/a/b;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L13e13e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e144.  v2:= new `com.b.a.b.a.g`;
  #L13e148.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L13e14c.  call `<init>`(v2, v3, v11) @signature `Lcom/b/a/b/a/g;.<init>:(Lcom/b/a/b/c;Z)V` @kind direct;
  #L13e152.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e158.  v2:= new `com.b.a.b.a.d`;
  #L13e15c.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L13e160.  call `<init>`(v2, v3) @signature `Lcom/b/a/b/a/d;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L13e166.  v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` := v2 @kind object;
  #L13e16a.  v2:= v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L13e16e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e174.  v2:= `@@com.b.a.b.a.n.Z` @type ^`com.b.a.w` @kind object;
  #L13e178.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e17e.  v2:= new `com.b.a.b.a.i`;
  #L13e182.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L13e186.  v4:= v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L13e18a.  call `<init>`(v2, v3, v8, v7, v4) @signature `Lcom/b/a/b/a/i;.<init>:(Lcom/b/a/b/c;Lcom/b/a/e;Lcom/b/a/b/d;Lcom/b/a/b/a/d;)V` @kind direct;
  #L13e190.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13e196.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L13e19c.  v1:= temp @kind object;
  #L13e19e.  v6.`com.b.a.f.d` @type ^`java.util.List` := v1 @kind object;
  #L13e1a2.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.u` v1 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/u;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L13e1b4.  v0:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L13e1b8.  if v1 != v0 then goto L13e1c2;
  #L13e1bc.  v0:= `@@com.b.a.b.a.n.t` @type ^`com.b.a.v` @kind object;
  #L13e1c0.  return v0 @kind object;
  #L13e1c2.  v0:= new `com.b.a.f$4`;
  #L13e1c6.  call `<init>`(v0) @signature `Lcom/b/a/f$4;.<init>:()V` @kind direct;
  #L13e1cc.  goto L13e1c0;
}
procedure `com.b.a.v` `a`(`com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/v;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L13e1e0.  v0:= new `com.b.a.f$5`;
  #L13e1e4.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$5;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L13e1ea.  call temp:= `a`(v0) @signature `Lcom/b/a/f$5;.a:()Lcom/b/a/v;` @kind virtual;
  #L13e1f0.  v0:= temp @kind object;
  #L13e1f2.  return v0 @kind object;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v1 @kind this, `boolean` v2 ) @signature `Lcom/b/a/f;.a:(Z)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L13e204.  if v2 == 0 then goto L13e20e;
  #L13e208.  v0:= `@@com.b.a.b.a.n.v` @type ^`com.b.a.v` @kind object;
  #L13e20c.  return v0 @kind object;
  #L13e20e.  v0:= new `com.b.a.f$2`;
  #L13e212.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$2;.<init>:(Lcom/b/a/f;)V` @kind direct;
  #L13e218.  goto L13e20c;
}
procedure `void` `a`(`double` v4 ) @signature `Lcom/b/a/f;.a:(D)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13e22c.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L13e232.  v0:= temp;
  #L13e234.  if v0 != 0 then goto L13e244;
  #L13e238.  call temp:= `isInfinite`(v4) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L13e23e.  v0:= temp;
  #L13e240.  if v0 == 0 then goto L13e276;
  #L13e244.  v0:= new `java.lang.IllegalArgumentException`;
  #L13e248.  v1:= new `java.lang.StringBuilder`;
  #L13e24c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13e252.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e258.  v1:= temp @kind object;
  #L13e25a.  v2:= " is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method." @kind object;
  #L13e25e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e264.  v1:= temp @kind object;
  #L13e266.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e26c.  v1:= temp @kind object;
  #L13e26e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e274.  throw v0;
  #L13e276.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v2 @kind object, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/Object;Lcom/b/a/d/a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L13e288.  if v2 == 0 then goto L13e2c8;
  #Try_start0.  
  #L13e28c.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L13e292.  v0:= temp @kind object;
  #L13e294.  v1:= `@@com.b.a.d.b.j` @type ^`com.b.a.d.b` @kind object;
  #L13e298.  if v0 == v1 then goto L13e2c8;
  #L13e29c.  v0:= new `com.b.a.m`;
  #L13e2a0.  v1:= "JSON document was not fully consumed." @kind object;
  #L13e2a4.  call `<init>`(v0, v1) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e2aa.  throw v0;
  #Try_end0.  
  #L13e2ac.  v0:= Exception @type ^`com.b.a.d.d` @kind object;
  #L13e2ae.  v1:= new `com.b.a.t`;
  #L13e2b2.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L13e2b8.  throw v1;
  #L13e2ba.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L13e2bc.  v1:= new `com.b.a.m`;
  #L13e2c0.  call `<init>`(v1, v0) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L13e2c6.  throw v1;
  #L13e2c8.  return @kind void;
  catch `com.b.a.d.d` @[Try_start0..Try_end0] goto L13e2ac;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L13e2ba;
}
procedure `com.b.a.v` `b`(`com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f;.b:(Lcom/b/a/v;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L13e2ec.  v0:= new `com.b.a.f$6`;
  #L13e2f0.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$6;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L13e2f6.  call temp:= `a`(v0) @signature `Lcom/b/a/f$6;.a:()Lcom/b/a/v;` @kind virtual;
  #L13e2fc.  v0:= temp @kind object;
  #L13e2fe.  return v0 @kind object;
}
procedure `com.b.a.v` `b`(`com.b.a.f` v1 @kind this, `boolean` v2 ) @signature `Lcom/b/a/f;.b:(Z)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L13e310.  if v2 == 0 then goto L13e31a;
  #L13e314.  v0:= `@@com.b.a.b.a.n.u` @type ^`com.b.a.v` @kind object;
  #L13e318.  return v0 @kind object;
  #L13e31a.  v0:= new `com.b.a.f$3`;
  #L13e31e.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$3;.<init>:(Lcom/b/a/f;)V` @kind direct;
  #L13e324.  goto L13e318;
}
procedure `com.b.a.d.a` `a`(`com.b.a.f` v2 @kind this, `java.io.Reader` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;)Lcom/b/a/d/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13e338.  v0:= new `com.b.a.d.a`;
  #L13e33c.  call `<init>`(v0, v3) @signature `Lcom/b/a/d/a;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L13e342.  v1:= v2.`com.b.a.f.l` @type ^`boolean` @kind boolean;
  #L13e346.  call `a`(v0, v1) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L13e34c.  return v0 @kind object;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v5 @kind this, `com.b.a.c.a` v6 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13e360.  v1:= v5.`com.b.a.f.c` @type ^`java.util.Map` @kind object;
  #L13e364.  if v6 != 0 then goto L13e37e;
  #L13e368.  v0:= `@@com.b.a.f.a` @type ^`com.b.a.c.a` @kind object;
  #L13e36c.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13e372.  v0:= temp @kind object;
  #L13e374.  v0:= (`com.b.a.v`) v0 @kind object;
  #L13e378.  if v0 == 0 then goto L13e382;
  #L13e37c.  return v0 @kind object;
  #L13e37e.  v0:= v6 @kind object;
  #L13e380.  goto L13e36c;
  #L13e382.  v0:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L13e386.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L13e38c.  v0:= temp @kind object;
  #L13e38e.  v0:= (`java.util.Map`) v0 @kind object;
  #L13e392.  v1:= 0I;
  #L13e394.  if v0 != 0 then goto L13e472;
  #L13e398.  v1:= new `java.util.HashMap`;
  #L13e39c.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L13e3a2.  v0:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L13e3a6.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L13e3ac.  v0:= 1I;
  #L13e3ae.  v2:= v1 @kind object;
  #L13e3b0.  v1:= v0;
  #L13e3b2.  call temp:= `get`(v2, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13e3b8.  v0:= temp @kind object;
  #L13e3ba.  v0:= (`com.b.a.f$a`) v0 @kind object;
  #L13e3be.  if v0 != 0 then goto L13e37c;
  #Try_start0.  
  #L13e3c2.  v3:= new `com.b.a.f$a`;
  #L13e3c6.  call `<init>`(v3) @signature `Lcom/b/a/f$a;.<init>:()V` @kind direct;
  #L13e3cc.  call temp:= `put`(v2, v6, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13e3d2.  v0:= v5.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L13e3d6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13e3dc.  v4:= temp @kind object;
  #L13e3de.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13e3e4.  v0:= temp;
  #L13e3e6.  if v0 == 0 then goto L13e428;
  #L13e3ea.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13e3f0.  v0:= temp @kind object;
  #L13e3f2.  v0:= (`com.b.a.w`) v0 @kind object;
  #L13e3f6.  call temp:= `a`(v0, v5, v6) @signature `Lcom/b/a/w;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind interface;
  #L13e3fc.  v0:= temp @kind object;
  #L13e3fe.  if v0 == 0 then goto L13e3de;
  #L13e402.  call `a`(v3, v0) @signature `Lcom/b/a/f$a;.a:(Lcom/b/a/v;)V` @kind virtual;
  #L13e408.  v3:= v5.`com.b.a.f.c` @type ^`java.util.Map` @kind object;
  #L13e40c.  call temp:= `put`(v3, v6, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L13e412.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13e418.  if v1 == 0 then goto L13e37c;
  #L13e41c.  v1:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L13e420.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L13e426.  goto L13e37c;
  #Try_start1.  
  #L13e428.  v0:= new `java.lang.IllegalArgumentException`;
  #L13e42c.  v3:= new `java.lang.StringBuilder`;
  #L13e430.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13e436.  v4:= "GSON cannot handle " @kind object;
  #L13e43a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e440.  v3:= temp @kind object;
  #L13e442.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e448.  v3:= temp @kind object;
  #L13e44a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e450.  v3:= temp @kind object;
  #L13e452.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e458.  throw v0;
  #Try_end1.  
  #L13e45a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13e45c.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13e462.  if v1 == 0 then goto L13e470;
  #L13e466.  v1:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L13e46a.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L13e470.  throw v0;
  #L13e472.  v2:= v0 @kind object;
  #L13e474.  goto L13e3b2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L13e45a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L13e45a;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v3 @kind this, `com.b.a.w` v4 @kind object, `com.b.a.c.a` v5 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/w;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13e49c.  v0:= v3.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L13e4a0.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L13e4a6.  v0:= temp;
  #L13e4a8.  if v0 != 0 then goto L13e4b0;
  #L13e4ac.  v4:= v3.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L13e4b0.  v0:= 0I;
  #L13e4b2.  v1:= v3.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L13e4b6.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13e4bc.  v2:= temp @kind object;
  #L13e4be.  v1:= v0;
  #L13e4c0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13e4c6.  v0:= temp;
  #L13e4c8.  if v0 == 0 then goto L13e4f4;
  #L13e4cc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13e4d2.  v0:= temp @kind object;
  #L13e4d4.  v0:= (`com.b.a.w`) v0 @kind object;
  #L13e4d8.  if v1 != 0 then goto L13e4e6;
  #L13e4dc.  if v0 != v4 then goto L13e4c0;
  #L13e4e0.  v0:= 1I;
  #L13e4e2.  v1:= v0;
  #L13e4e4.  goto L13e4c0;
  #L13e4e6.  call temp:= `a`(v0, v3, v5) @signature `Lcom/b/a/w;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind interface;
  #L13e4ec.  v0:= temp @kind object;
  #L13e4ee.  if v0 == 0 then goto L13e4c0;
  #L13e4f2.  return v0 @kind object;
  #L13e4f4.  v0:= new `java.lang.IllegalArgumentException`;
  #L13e4f8.  v1:= new `java.lang.StringBuilder`;
  #L13e4fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13e502.  v2:= "GSON cannot serialize " @kind object;
  #L13e506.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e50c.  v1:= temp @kind object;
  #L13e50e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e514.  v1:= temp @kind object;
  #L13e516.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e51c.  v1:= temp @kind object;
  #L13e51e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e524.  throw v0;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/Class;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13e538.  call temp:= `b`(v2) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @kind static;
  #L13e53e.  v0:= temp @kind object;
  #L13e540.  call temp:= `a`(v1, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L13e546.  v0:= temp @kind object;
  #L13e548.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v3 @kind this, `com.b.a.d.a` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/d/a;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13e55c.  v1:= 1I;
  #L13e55e.  call temp:= `q`(v4) @signature `Lcom/b/a/d/a;.q:()Z` @kind virtual;
  #L13e564.  v2:= temp;
  #L13e566.  call `a`(v4, v1) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #Try_start0.  
  #L13e56c.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L13e572.  v1:= 0I;
  #L13e574.  call temp:= `a`(v5) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L13e57a.  v0:= temp @kind object;
  #L13e57c.  call temp:= `a`(v3, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L13e582.  v0:= temp @kind object;
  #L13e584.  call temp:= `b`(v0, v4) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L13e58a.  v0:= temp @kind object;
  #L13e58c.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L13e592.  return v0 @kind object;
  #L13e594.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L13e596.  if v1 == 0 then goto L13e5a4;
  #L13e59a.  v0:= 0I;
  #L13e59c.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L13e5a2.  goto L13e592;
  #Try_start1.  
  #L13e5a4.  v1:= new `com.b.a.t`;
  #L13e5a8.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L13e5ae.  throw v1;
  #Try_end1.  
  #L13e5b0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13e5b2.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L13e5b8.  throw v0;
  #L13e5ba.  v0:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #Try_start2.  
  #L13e5bc.  v1:= new `com.b.a.t`;
  #L13e5c0.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L13e5c6.  throw v1;
  #L13e5c8.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L13e5ca.  v1:= new `com.b.a.t`;
  #L13e5ce.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L13e5d4.  throw v1;
  #Try_end2.  
  catch `java.io.EOFException` @[Try_start0..Try_end0] goto L13e594;
  catch `java.lang.IllegalStateException` @[Try_start0..Try_end0] goto L13e5ba;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L13e5c8;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L13e5b0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L13e5b0;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L13e5b0;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v2 @kind this, `java.io.Reader` v3 @kind object, `java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13e610.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;)Lcom/b/a/d/a;` @kind virtual;
  #L13e616.  v0:= temp @kind object;
  #L13e618.  call temp:= `a`(v2, v0, v4) @signature `Lcom/b/a/f;.a:(Lcom/b/a/d/a;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L13e61e.  v1:= temp @kind object;
  #L13e620.  call `a`(v1, v0) @signature `Lcom/b/a/f;.a:(Ljava/lang/Object;Lcom/b/a/d/a;)V` @kind static;
  #L13e626.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13e638.  call temp:= `a`(v2, v3, v4) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L13e63e.  v0:= temp @kind object;
  #L13e640.  call temp:= `a`(v4) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L13e646.  v1:= temp @kind object;
  #L13e648.  call temp:= `cast`(v1, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13e64e.  v0:= temp @kind object;
  #L13e650.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13e664.  if v2 != 0 then goto L13e66c;
  #L13e668.  v0:= 0I;
  #L13e66a.  return v0 @kind object;
  #L13e66c.  v0:= new `java.io.StringReader`;
  #L13e670.  call `<init>`(v0, v2) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e676.  call temp:= `a`(v1, v0, v3) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L13e67c.  v0:= temp @kind object;
  #L13e67e.  goto L13e66a;
}
procedure `java.lang.String` `toString`(`com.b.a.f` v2 @kind this) @signature `Lcom/b/a/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13e690.  v0:= new `java.lang.StringBuilder`;
  #L13e694.  v1:= "{serializeNulls:" @kind object;
  #L13e698.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e69e.  v1:= v2.`com.b.a.f.h` @type ^`boolean` @kind boolean;
  #L13e6a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e6a8.  v0:= temp @kind object;
  #L13e6aa.  v1:= "factories:" @kind object;
  #L13e6ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e6b4.  v0:= temp @kind object;
  #L13e6b6.  v1:= v2.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L13e6ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e6c0.  v0:= temp @kind object;
  #L13e6c2.  v1:= ",instanceCreators:" @kind object;
  #L13e6c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e6cc.  v0:= temp @kind object;
  #L13e6ce.  v1:= v2.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L13e6d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e6d8.  v0:= temp @kind object;
  #L13e6da.  v1:= "}" @kind object;
  #L13e6de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13e6e4.  v0:= temp @kind object;
  #L13e6e6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13e6ec.  v0:= temp @kind object;
  #L13e6ee.  return v0 @kind object;
}

record `com.b.a.d.a$1` @kind class @AccessFlag FINAL extends `com.b.a.b.e` @kind class {
}
procedure `void` `<init>`(`com.b.a.d.a$1` v0 @kind this) @signature `Lcom/b/a/d/a$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13d710.  call `<init>`(v0) @signature `Lcom/b/a/b/e;.<init>:()V` @kind direct;
  #L13d716.  return @kind void;
}
procedure `void` `a`(`com.b.a.d.a$1` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/d/a$1;.a:(Lcom/b/a/d/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13d728.  v0:= instanceof @variable v4 @type ^`com.b.a.b.a.e` @kind boolean;
  #L13d72c.  if v0 == 0 then goto L13d73c;
  #L13d730.  v4:= (`com.b.a.b.a.e`) v4 @kind object;
  #L13d734.  call `o`(v4) @signature `Lcom/b/a/b/a/e;.o:()V` @kind virtual;
  #L13d73a.  return @kind void;
  #L13d73c.  v0:= v4.`com.b.a.d.a.a` @type ^`int`;
  #L13d740.  if v0 != 0 then goto L13d74c;
  #L13d744.  call temp:= `r`(v4) @signature `Lcom/b/a/d/a;.r:()I` @kind virtual;
  #L13d74a.  v0:= temp;
  #L13d74c.  v1:= 13I;
  #L13d750.  if v0 != v1 then goto L13d75e;
  #L13d754.  v0:= 9I;
  #L13d758.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L13d75c.  goto L13d73a;
  #L13d75e.  v1:= 12I;
  #L13d762.  if v0 != v1 then goto L13d770;
  #L13d766.  v0:= 8I;
  #L13d76a.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L13d76e.  goto L13d73a;
  #L13d770.  v1:= 14I;
  #L13d774.  if v0 != v1 then goto L13d782;
  #L13d778.  v0:= 10I;
  #L13d77c.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L13d780.  goto L13d73a;
  #L13d782.  v0:= new `java.lang.IllegalStateException`;
  #L13d786.  v1:= new `java.lang.StringBuilder`;
  #L13d78a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13d790.  v2:= "Expected a name but was " @kind object;
  #L13d794.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d79a.  v1:= temp @kind object;
  #L13d79c.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L13d7a2.  v2:= temp @kind object;
  #L13d7a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d7aa.  v1:= temp @kind object;
  #L13d7ac.  call temp:= `a`(v4) @signature `Lcom/b/a/d/a;.a:(Lcom/b/a/d/a;)Ljava/lang/String;` @kind static;
  #L13d7b2.  v2:= temp @kind object;
  #L13d7b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d7ba.  v1:= temp @kind object;
  #L13d7bc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d7c2.  v1:= temp @kind object;
  #L13d7c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13d7ca.  throw v0;
}

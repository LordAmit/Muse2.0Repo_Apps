record `com.b.a.b.a.g$a` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.b.a.g` `com.b.a.b.a.g$a.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.g$a.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.g$a.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.h` `com.b.a.b.a.g$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.g$a` v1 @kind this, `com.b.a.b.a.g` v2 @kind object, `com.b.a.f` v3 @kind object, `java.lang.reflect.Type` v4 @kind object, `com.b.a.v` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `com.b.a.v` v7 @kind object, `com.b.a.b.h` v8 @kind object) @signature `Lcom/b/a/b/a/g$a;.<init>:(Lcom/b/a/b/a/g;Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1365fc.  v1.`com.b.a.b.a.g$a.a` @type ^`com.b.a.b.a.g` := v2 @kind object;
  #L136600.  call `<init>`(v1) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L136606.  v0:= new `com.b.a.b.a.m`;
  #L13660a.  call `<init>`(v0, v3, v5, v4) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L136610.  v1.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` := v0 @kind object;
  #L136614.  v0:= new `com.b.a.b.a.m`;
  #L136618.  call `<init>`(v0, v3, v7, v6) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L13661e.  v1.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` := v0 @kind object;
  #L136622.  v1.`com.b.a.b.a.g$a.d` @type ^`com.b.a.b.h` := v8 @kind object;
  #L136626.  return @kind void;
}
procedure `java.lang.String` `a`(`com.b.a.b.a.g$a` v2 @kind this, `com.b.a.l` v3 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/l;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L136638.  call temp:= `i`(v3) @signature `Lcom/b/a/l;.i:()Z` @kind virtual;
  #L13663e.  v0:= temp;
  #L136640.  if v0 == 0 then goto L1366aa;
  #L136644.  call temp:= `m`(v3) @signature `Lcom/b/a/l;.m:()Lcom/b/a/q;` @kind virtual;
  #L13664a.  v0:= temp @kind object;
  #L13664c.  call temp:= `p`(v0) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L136652.  v1:= temp;
  #L136654.  if v1 == 0 then goto L13666a;
  #L136658.  call temp:= `a`(v0) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L13665e.  v0:= temp @kind object;
  #L136660.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L136666.  v0:= temp @kind object;
  #L136668.  return v0 @kind object;
  #L13666a.  call temp:= `o`(v0) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L136670.  v1:= temp;
  #L136672.  if v1 == 0 then goto L136688;
  #L136676.  call temp:= `f`(v0) @signature `Lcom/b/a/q;.f:()Z` @kind virtual;
  #L13667c.  v0:= temp;
  #L13667e.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L136684.  v0:= temp @kind object;
  #L136686.  goto L136668;
  #L136688.  call temp:= `q`(v0) @signature `Lcom/b/a/q;.q:()Z` @kind virtual;
  #L13668e.  v1:= temp;
  #L136690.  if v1 == 0 then goto L13669e;
  #L136694.  call temp:= `b`(v0) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L13669a.  v0:= temp @kind object;
  #L13669c.  goto L136668;
  #L13669e.  v0:= new `java.lang.AssertionError`;
  #L1366a2.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1366a8.  throw v0;
  #L1366aa.  call temp:= `j`(v3) @signature `Lcom/b/a/l;.j:()Z` @kind virtual;
  #L1366b0.  v0:= temp;
  #L1366b2.  if v0 == 0 then goto L1366bc;
  #L1366b6.  v0:= "null" @kind object;
  #L1366ba.  goto L136668;
  #L1366bc.  v0:= new `java.lang.AssertionError`;
  #L1366c0.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1366c6.  throw v0;
}
procedure `java.util.Map` `a`(`com.b.a.b.a.g$a` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/a;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1366d8.  call temp:= `f`(v5) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1366de.  v1:= temp @kind object;
  #L1366e0.  v0:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L1366e4.  if v1 != v0 then goto L1366f2;
  #L1366e8.  call `j`(v5) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L1366ee.  v0:= 0I;
  #L1366f0.  return v0 @kind object;
  #L1366f2.  v0:= v4.`com.b.a.b.a.g$a.d` @type ^`com.b.a.b.h` @kind object;
  #L1366f6.  call temp:= `a`(v0) @signature `Lcom/b/a/b/h;.a:()Ljava/lang/Object;` @kind interface;
  #L1366fc.  v0:= temp @kind object;
  #L1366fe.  v0:= (`java.util.Map`) v0 @kind object;
  #L136702.  v2:= `@@com.b.a.d.b.a` @type ^`com.b.a.d.b` @kind object;
  #L136706.  if v1 != v2 then goto L136788;
  #L13670a.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L136710.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L136716.  v1:= temp;
  #L136718.  if v1 == 0 then goto L136780;
  #L13671c.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L136722.  v1:= v4.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L136726.  call temp:= `b`(v1, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L13672c.  v1:= temp @kind object;
  #L13672e.  v2:= v4.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L136732.  call temp:= `b`(v2, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L136738.  v2:= temp @kind object;
  #L13673a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L136740.  v2:= temp @kind object;
  #L136742.  if v2 == 0 then goto L136778;
  #L136746.  v0:= new `com.b.a.t`;
  #L13674a.  v2:= new `java.lang.StringBuilder`;
  #L13674e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L136754.  v3:= "duplicate key: " @kind object;
  #L136758.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13675e.  v2:= temp @kind object;
  #L136760.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L136766.  v1:= temp @kind object;
  #L136768.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13676e.  v1:= temp @kind object;
  #L136770.  call `<init>`(v0, v1) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L136776.  throw v0;
  #L136778.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L13677e.  goto L136710;
  #L136780.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L136786.  goto L1366f0;
  #L136788.  call `c`(v5) @signature `Lcom/b/a/d/a;.c:()V` @kind virtual;
  #L13678e.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L136794.  v1:= temp;
  #L136796.  if v1 == 0 then goto L1367fa;
  #L13679a.  v1:= `@@com.b.a.b.e.a` @type ^`com.b.a.b.e` @kind object;
  #L13679e.  call `a`(v1, v5) @signature `Lcom/b/a/b/e;.a:(Lcom/b/a/d/a;)V` @kind virtual;
  #L1367a4.  v1:= v4.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L1367a8.  call temp:= `b`(v1, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L1367ae.  v1:= temp @kind object;
  #L1367b0.  v2:= v4.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L1367b4.  call temp:= `b`(v2, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L1367ba.  v2:= temp @kind object;
  #L1367bc.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1367c2.  v2:= temp @kind object;
  #L1367c4.  if v2 == 0 then goto L13678e;
  #L1367c8.  v0:= new `com.b.a.t`;
  #L1367cc.  v2:= new `java.lang.StringBuilder`;
  #L1367d0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1367d6.  v3:= "duplicate key: " @kind object;
  #L1367da.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1367e0.  v2:= temp @kind object;
  #L1367e2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1367e8.  v1:= temp @kind object;
  #L1367ea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1367f0.  v1:= temp @kind object;
  #L1367f2.  call `<init>`(v0, v1) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1367f8.  throw v0;
  #L1367fa.  call `d`(v5) @signature `Lcom/b/a/d/a;.d:()V` @kind virtual;
  #L136800.  goto L1366f0;
}
procedure `void` `a`(`com.b.a.b.a.g$a` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L136814.  v2:= (`java.util.Map`) v2 @kind object;
  #L136818.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/util/Map;)V` @kind virtual;
  #L13681e.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.g$a` v8 @kind this, `com.b.a.d.c` v9 @kind object, `java.util.Map` v10 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L136830.  v2:= 0I;
  #L136832.  if v10 != 0 then goto L13683e;
  #L136836.  call temp:= `f`(v9) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L13683c.  return @kind void;
  #L13683e.  v0:= v8.`com.b.a.b.a.g$a.a` @type ^`com.b.a.b.a.g` @kind object;
  #L136842.  v0:= v0.`com.b.a.b.a.g.a` @type ^`boolean` @kind boolean;
  #L136846.  if v0 != 0 then goto L1368aa;
  #L13684a.  call temp:= `d`(v9) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L136850.  call temp:= `entrySet`(v10) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L136856.  v0:= temp @kind object;
  #L136858.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13685e.  v1:= temp @kind object;
  #L136860.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L136866.  v0:= temp;
  #L136868.  if v0 == 0 then goto L1368a2;
  #L13686c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L136872.  v0:= temp @kind object;
  #L136874.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L136878.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L13687e.  v2:= temp @kind object;
  #L136880.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L136886.  v2:= temp @kind object;
  #L136888.  call temp:= `a`(v9, v2) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L13688e.  v2:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L136892.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L136898.  v0:= temp @kind object;
  #L13689a.  call `a`(v2, v9, v0) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1368a0.  goto L136860;
  #L1368a2.  call temp:= `e`(v9) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L1368a8.  goto L13683c;
  #L1368aa.  v3:= new `java.util.ArrayList`;
  #L1368ae.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1368b4.  v0:= temp;
  #L1368b6.  call `<init>`(v3, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1368bc.  v4:= new `java.util.ArrayList`;
  #L1368c0.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1368c6.  v0:= temp;
  #L1368c8.  call `<init>`(v4, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1368ce.  call temp:= `entrySet`(v10) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L1368d4.  v0:= temp @kind object;
  #L1368d6.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1368dc.  v5:= temp @kind object;
  #L1368de.  v1:= v2;
  #L1368e0.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1368e6.  v0:= temp;
  #L1368e8.  if v0 == 0 then goto L136944;
  #L1368ec.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1368f2.  v0:= temp @kind object;
  #L1368f4.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L1368f8.  v6:= v8.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L1368fc.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L136902.  v7:= temp @kind object;
  #L136904.  call temp:= `a`(v6, v7) @signature `Lcom/b/a/v;.a:(Ljava/lang/Object;)Lcom/b/a/l;` @kind virtual;
  #L13690a.  v6:= temp @kind object;
  #L13690c.  call temp:= `add`(v3, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L136912.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L136918.  v0:= temp @kind object;
  #L13691a.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L136920.  call temp:= `g`(v6) @signature `Lcom/b/a/l;.g:()Z` @kind virtual;
  #L136926.  v0:= temp;
  #L136928.  if v0 != 0 then goto L136938;
  #L13692c.  call temp:= `h`(v6) @signature `Lcom/b/a/l;.h:()Z` @kind virtual;
  #L136932.  v0:= temp;
  #L136934.  if v0 == 0 then goto L136940;
  #L136938.  v0:= 1I;
  #L13693a.  v0:= v0 ^| v1 @kind int;
  #L13693c.  v1:= v0;
  #L13693e.  goto L1368e0;
  #L136940.  v0:= v2;
  #L136942.  goto L13693a;
  #L136944.  if v1 == 0 then goto L13699a;
  #L136948.  call temp:= `b`(v9) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L13694e.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L136954.  v0:= temp;
  #L136956.  if v2 >= v0 then goto L136990;
  #L13695a.  call temp:= `b`(v9) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L136960.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L136966.  v0:= temp @kind object;
  #L136968.  v0:= (`com.b.a.l`) v0 @kind object;
  #L13696c.  call `a`(v0, v9) @signature `Lcom/b/a/b/j;.a:(Lcom/b/a/l;Lcom/b/a/d/c;)V` @kind static;
  #L136972.  v0:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L136976.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L13697c.  v1:= temp @kind object;
  #L13697e.  call `a`(v0, v9, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L136984.  call temp:= `c`(v9) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L13698a.  v2:= v2 + 1;
  #L13698e.  goto L13694e;
  #L136990.  call temp:= `c`(v9) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L136996.  goto L13683c;
  #L13699a.  call temp:= `d`(v9) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L1369a0.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1369a6.  v0:= temp;
  #L1369a8.  if v2 >= v0 then goto L1369de;
  #L1369ac.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1369b2.  v0:= temp @kind object;
  #L1369b4.  v0:= (`com.b.a.l`) v0 @kind object;
  #L1369b8.  call temp:= `a`(v8, v0) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/l;)Ljava/lang/String;` @kind direct;
  #L1369be.  v0:= temp @kind object;
  #L1369c0.  call temp:= `a`(v9, v0) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L1369c6.  v0:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L1369ca.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1369d0.  v1:= temp @kind object;
  #L1369d2.  call `a`(v0, v9, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1369d8.  v2:= v2 + 1;
  #L1369dc.  goto L1369a0;
  #L1369de.  call temp:= `e`(v9) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L1369e4.  goto L13683c;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.g$a` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/g$a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1369f8.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/a;)Ljava/util/Map;` @kind virtual;
  #L1369fe.  v0:= temp @kind object;
  #L136a00.  return v0 @kind object;
}

record `com.b.a.b.i` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.Map` `@@com.b.a.b.i.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@com.b.a.b.i.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13cbd0.  v2:= 16I;
  #L13cbd4.  v0:= new `java.util.HashMap`;
  #L13cbd8.  call `<init>`(v0, v2) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L13cbde.  v1:= new `java.util.HashMap`;
  #L13cbe2.  call `<init>`(v1, v2) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L13cbe8.  v2:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cbec.  v3:= constclass @type ^`java.lang.Boolean` @kind object;
  #L13cbf0.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cbf6.  v2:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cbfa.  v3:= constclass @type ^`java.lang.Byte` @kind object;
  #L13cbfe.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cc04.  v2:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cc08.  v3:= constclass @type ^`java.lang.Character` @kind object;
  #L13cc0c.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cc12.  v2:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cc16.  v3:= constclass @type ^`java.lang.Double` @kind object;
  #L13cc1a.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cc20.  v2:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cc24.  v3:= constclass @type ^`java.lang.Float` @kind object;
  #L13cc28.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cc2e.  v2:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cc32.  v3:= constclass @type ^`java.lang.Integer` @kind object;
  #L13cc36.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cc3c.  v2:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cc40.  v3:= constclass @type ^`java.lang.Long` @kind object;
  #L13cc44.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cc4a.  v2:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cc4e.  v3:= constclass @type ^`java.lang.Short` @kind object;
  #L13cc52.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cc58.  v2:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L13cc5c.  v3:= constclass @type ^`java.lang.Void` @kind object;
  #L13cc60.  call `a`(v0, v1, v2, v3) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @kind static;
  #L13cc66.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L13cc6c.  v0:= temp @kind object;
  #L13cc6e.  `@@com.b.a.b.i.a` @type ^`java.util.Map` := v0 @kind object;
  #L13cc72.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L13cc78.  v0:= temp @kind object;
  #L13cc7a.  `@@com.b.a.b.i.b` @type ^`java.util.Map` := v0 @kind object;
  #L13cc7e.  return @kind void;
}
procedure `java.lang.Class` `a`(`java.lang.Class` v2 @kind object) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L13cc90.  v0:= `@@com.b.a.b.i.a` @type ^`java.util.Map` @kind object;
  #L13cc94.  call temp:= `a`(v2) @signature `Lcom/b/a/b/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L13cc9a.  v1:= temp @kind object;
  #L13cc9c.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13cca2.  v0:= temp @kind object;
  #L13cca4.  v0:= (`java.lang.Class`) v0 @kind object;
  #L13cca8.  if v0 != 0 then goto L13ccae;
  #L13ccac.  return v2 @kind object;
  #L13ccae.  v2:= v0 @kind object;
  #L13ccb0.  goto L13ccac;
}
procedure `void` `a`(`java.util.Map` v0 @kind object, `java.util.Map` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/i;.a:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L13ccc4.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13ccca.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13ccd0.  return @kind void;
}
procedure `boolean` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/reflect/Type;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13cce4.  v0:= `@@com.b.a.b.i.a` @type ^`java.util.Map` @kind object;
  #L13cce8.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L13ccee.  v0:= temp;
  #L13ccf0.  return v0;
}

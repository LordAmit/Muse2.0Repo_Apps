record `a.ab` @kind class @AccessFlag PUBLIC_FINAL {
  `a.a` `a.ab.a` @AccessFlag FINAL;
  `java.net.Proxy` `a.ab.b` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `a.ab.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`a.ab` v2 @kind this, `a.a` v3 @kind object, `java.net.Proxy` v4 @kind object, `java.net.InetSocketAddress` v5 @kind object) @signature `La/ab;.<init>:(La/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0846c4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0846ca.  if v3 != 0 then goto L0846de;
  #L0846ce.  v0:= new `java.lang.NullPointerException`;
  #L0846d2.  v1:= "address == null" @kind object;
  #L0846d6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0846dc.  throw v0;
  #L0846de.  if v4 != 0 then goto L0846f2;
  #L0846e2.  v0:= new `java.lang.NullPointerException`;
  #L0846e6.  v1:= "proxy == null" @kind object;
  #L0846ea.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0846f0.  throw v0;
  #L0846f2.  if v5 != 0 then goto L084706;
  #L0846f6.  v0:= new `java.lang.NullPointerException`;
  #L0846fa.  v1:= "inetSocketAddress == null" @kind object;
  #L0846fe.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L084704.  throw v0;
  #L084706.  v2.`a.ab.a` @type ^`a.a` := v3 @kind object;
  #L08470a.  v2.`a.ab.b` @type ^`java.net.Proxy` := v4 @kind object;
  #L08470e.  v2.`a.ab.c` @type ^`java.net.InetSocketAddress` := v5 @kind object;
  #L084712.  return @kind void;
}
procedure `a.a` `a`(`a.ab` v1 @kind this) @signature `La/ab;.a:()La/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084724.  v0:= v1.`a.ab.a` @type ^`a.a` @kind object;
  #L084728.  return v0 @kind object;
}
procedure `java.net.Proxy` `b`(`a.ab` v1 @kind this) @signature `La/ab;.b:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08473c.  v0:= v1.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L084740.  return v0 @kind object;
}
procedure `java.net.InetSocketAddress` `c`(`a.ab` v1 @kind this) @signature `La/ab;.c:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084754.  v0:= v1.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L084758.  return v0 @kind object;
}
procedure `boolean` `d`(`a.ab` v2 @kind this) @signature `La/ab;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08476c.  v0:= v2.`a.ab.a` @type ^`a.a` @kind object;
  #L084770.  v0:= v0.`a.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L084774.  if v0 == 0 then goto L084790;
  #L084778.  v0:= v2.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L08477c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L084782.  v0:= temp @kind object;
  #L084784.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L084788.  if v0 != v1 then goto L084790;
  #L08478c.  v0:= 1I;
  #L08478e.  return v0;
  #L084790.  v0:= 0I;
  #L084792.  goto L08478e;
}
procedure `boolean` `equals`(`a.ab` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/ab;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0847a4.  v0:= 0I;
  #L0847a6.  v1:= instanceof @variable v4 @type ^`a.ab` @kind boolean;
  #L0847aa.  if v1 == 0 then goto L0847f0;
  #L0847ae.  v4:= (`a.ab`) v4 @kind object;
  #L0847b2.  v1:= v3.`a.ab.a` @type ^`a.a` @kind object;
  #L0847b6.  v2:= v4.`a.ab.a` @type ^`a.a` @kind object;
  #L0847ba.  call temp:= `equals`(v1, v2) @signature `La/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0847c0.  v1:= temp;
  #L0847c2.  if v1 == 0 then goto L0847f0;
  #L0847c6.  v1:= v3.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L0847ca.  v2:= v4.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L0847ce.  call temp:= `equals`(v1, v2) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0847d4.  v1:= temp;
  #L0847d6.  if v1 == 0 then goto L0847f0;
  #L0847da.  v1:= v3.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L0847de.  v2:= v4.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L0847e2.  call temp:= `equals`(v1, v2) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0847e8.  v1:= temp;
  #L0847ea.  if v1 == 0 then goto L0847f0;
  #L0847ee.  v0:= 1I;
  #L0847f0.  return v0;
}
procedure `int` `hashCode`(`a.ab` v2 @kind this) @signature `La/ab;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L084804.  v0:= v2.`a.ab.a` @type ^`a.a` @kind object;
  #L084808.  call temp:= `hashCode`(v0) @signature `La/a;.hashCode:()I` @kind virtual;
  #L08480e.  v0:= temp;
  #L084810.  v0:= v0 + 527;
  #L084814.  v0:= v0 * 31;
  #L084818.  v1:= v2.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L08481c.  call temp:= `hashCode`(v1) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L084822.  v1:= temp;
  #L084824.  v0:= v0 + v1 @kind int;
  #L084826.  v0:= v0 * 31;
  #L08482a.  v1:= v2.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L08482e.  call temp:= `hashCode`(v1) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L084834.  v1:= temp;
  #L084836.  v0:= v0 + v1 @kind int;
  #L084838.  return v0;
}
procedure `java.lang.String` `toString`(`a.ab` v2 @kind this) @signature `La/ab;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08484c.  v0:= new `java.lang.StringBuilder`;
  #L084850.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L084856.  v1:= "Route{" @kind object;
  #L08485a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084860.  v0:= temp @kind object;
  #L084862.  v1:= v2.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L084866.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08486c.  v0:= temp @kind object;
  #L08486e.  v1:= "}" @kind object;
  #L084872.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084878.  v0:= temp @kind object;
  #L08487a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L084880.  v0:= temp @kind object;
  #L084882.  return v0 @kind object;
}

record `a.a.b.b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `a.a.b.b.a` @AccessFlag PRIVATE_FINAL;
  `int` `a.a.b.b.b` @AccessFlag PRIVATE;
  `boolean` `a.a.b.b.c` @AccessFlag PRIVATE;
  `boolean` `a.a.b.b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.b.b` v1 @kind this, `java.util.List` v2 @kind object) @signature `La/a/b/b;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L075490.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L075496.  v0:= 0I;
  #L075498.  v1.`a.a.b.b.b` @type ^`int` := v0;
  #L07549c.  v1.`a.a.b.b.a` @type ^`java.util.List` := v2 @kind object;
  #L0754a0.  return @kind void;
}
procedure `boolean` `b`(`a.a.b.b` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object) @signature `La/a/b/b;.b:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L0754b4.  v0:= v2.`a.a.b.b.b` @type ^`int`;
  #L0754b8.  v1:= v0;
  #L0754ba.  v0:= v2.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L0754be.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0754c4.  v0:= temp;
  #L0754c6.  if v1 >= v0 then goto L0754f2;
  #L0754ca.  v0:= v2.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L0754ce.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0754d4.  v0:= temp @kind object;
  #L0754d6.  v0:= (`a.k`) v0 @kind object;
  #L0754da.  call temp:= `a`(v0, v3) @signature `La/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @kind virtual;
  #L0754e0.  v0:= temp;
  #L0754e2.  if v0 == 0 then goto L0754ea;
  #L0754e6.  v0:= 1I;
  #L0754e8.  return v0;
  #L0754ea.  v0:= v1 + 1;
  #L0754ee.  v1:= v0;
  #L0754f0.  goto L0754ba;
  #L0754f2.  v0:= 0I;
  #L0754f4.  goto L0754e8;
}
procedure `a.k` `a`(`a.a.b.b` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object) @signature `La/a/b/b;.a:(Ljavax/net/ssl/SSLSocket;)La/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L075508.  v1:= 0I;
  #L07550a.  v0:= v5.`a.a.b.b.b` @type ^`int`;
  #L07550e.  v2:= v5.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L075512.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L075518.  v3:= temp;
  #L07551a.  v2:= v0;
  #L07551c.  if v2 >= v3 then goto L0755de;
  #L075520.  v0:= v5.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L075524.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L07552a.  v0:= temp @kind object;
  #L07552c.  v0:= (`a.k`) v0 @kind object;
  #L075530.  call temp:= `a`(v0, v6) @signature `La/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @kind virtual;
  #L075536.  v4:= temp;
  #L075538.  if v4 == 0 then goto L0755ba;
  #L07553c.  v1:= v2 + 1;
  #L075540.  v5.`a.a.b.b.b` @type ^`int` := v1;
  #L075544.  if v0 != 0 then goto L0755c2;
  #L075548.  v0:= new `java.net.UnknownServiceException`;
  #L07554c.  v1:= new `java.lang.StringBuilder`;
  #L075550.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L075556.  v2:= "Unable to find acceptable protocols. isFallback=" @kind object;
  #L07555a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L075560.  v1:= temp @kind object;
  #L075562.  v2:= v5.`a.a.b.b.d` @type ^`boolean` @kind boolean;
  #L075566.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L07556c.  v1:= temp @kind object;
  #L07556e.  v2:= ", modes=" @kind object;
  #L075572.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L075578.  v1:= temp @kind object;
  #L07557a.  v2:= v5.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L07557e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L075584.  v1:= temp @kind object;
  #L075586.  v2:= ", supported protocols=" @kind object;
  #L07558a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L075590.  v1:= temp @kind object;
  #L075592.  call temp:= `getEnabledProtocols`(v6) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L075598.  v2:= temp @kind object;
  #L07559a.  call temp:= `toString`(v2) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0755a0.  v2:= temp @kind object;
  #L0755a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0755a8.  v1:= temp @kind object;
  #L0755aa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0755b0.  v1:= temp @kind object;
  #L0755b2.  call `<init>`(v0, v1) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0755b8.  throw v0;
  #L0755ba.  v0:= v2 + 1;
  #L0755be.  v2:= v0;
  #L0755c0.  goto L07551c;
  #L0755c2.  call temp:= `b`(v5, v6) @signature `La/a/b/b;.b:(Ljavax/net/ssl/SSLSocket;)Z` @kind direct;
  #L0755c8.  v1:= temp;
  #L0755ca.  v5.`a.a.b.b.c` @type ^`boolean` := v1 @kind boolean;
  #L0755ce.  v1:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L0755d2.  v2:= v5.`a.a.b.b.d` @type ^`boolean` @kind boolean;
  #L0755d6.  call `a`(v1, v0, v6, v2) @signature `La/a/a;.a:(La/k;Ljavax/net/ssl/SSLSocket;Z)V` @kind virtual;
  #L0755dc.  return v0 @kind object;
  #L0755de.  v0:= v1 @kind object;
  #L0755e0.  goto L075544;
}
procedure `boolean` `a`(`a.a.b.b` v3 @kind this, `java.io.IOException` v4 @kind object) @signature `La/a/b/b;.a:(Ljava/io/IOException;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0755f4.  v1:= 1I;
  #L0755f6.  v0:= 0I;
  #L0755f8.  v3.`a.a.b.b.d` @type ^`boolean` := v1 @kind boolean;
  #L0755fc.  v2:= v3.`a.a.b.b.c` @type ^`boolean` @kind boolean;
  #L075600.  if v2 != 0 then goto L075606;
  #L075604.  return v0;
  #L075606.  v2:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L07560a.  if v2 != 0 then goto L075604;
  #L07560e.  v2:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L075612.  if v2 != 0 then goto L075604;
  #L075616.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L07561a.  if v2 == 0 then goto L07562e;
  #L07561e.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L075624.  v2:= temp @kind object;
  #L075626.  v2:= instanceof @variable v2 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L07562a.  if v2 != 0 then goto L075604;
  #L07562e.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L075632.  if v2 != 0 then goto L075604;
  #L075636.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L07563a.  if v2 != 0 then goto L075646;
  #L07563e.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLProtocolException` @kind boolean;
  #L075642.  if v2 == 0 then goto L075604;
  #L075646.  v0:= v1;
  #L075648.  goto L075604;
}

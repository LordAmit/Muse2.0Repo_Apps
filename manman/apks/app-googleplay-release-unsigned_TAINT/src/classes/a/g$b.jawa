record `a.g$b` @kind class @AccessFlag FINAL {
  `java.lang.String` `a.g$b.a` @AccessFlag FINAL;
  `java.lang.String` `a.g$b.b` @AccessFlag FINAL;
  `java.lang.String` `a.g$b.c` @AccessFlag FINAL;
  `b.f` `a.g$b.d` @AccessFlag FINAL;
}
procedure `boolean` `a`(`a.g$b` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/g$b;.a:(Ljava/lang/String;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L085388.  v1:= 0I;
  #L08538a.  v0:= v6.`a.g$b.a` @type ^`java.lang.String` @kind object;
  #L08538e.  v2:= "*." @kind object;
  #L085392.  call temp:= `startsWith`(v0, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L085398.  v0:= temp;
  #L08539a.  if v0 == 0 then goto L0853cc;
  #L08539e.  v0:= 46I;
  #L0853a2.  call temp:= `indexOf`(v7, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L0853a8.  v0:= temp;
  #L0853aa.  v2:= v0 + 1;
  #L0853ae.  v3:= v6.`a.g$b.b` @type ^`java.lang.String` @kind object;
  #L0853b2.  v0:= v6.`a.g$b.b` @type ^`java.lang.String` @kind object;
  #L0853b6.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0853bc.  v5:= temp;
  #L0853be.  v0:= v7 @kind object;
  #L0853c0.  v4:= v1;
  #L0853c2.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L0853c8.  v0:= temp;
  #L0853ca.  return v0;
  #L0853cc.  v0:= v6.`a.g$b.b` @type ^`java.lang.String` @kind object;
  #L0853d0.  call temp:= `equals`(v7, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0853d6.  v0:= temp;
  #L0853d8.  goto L0853ca;
}
procedure `boolean` `equals`(`a.g$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/g$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0853ec.  v0:= instanceof @variable v3 @type ^`a.g$b` @kind boolean;
  #L0853f0.  if v0 == 0 then goto L085444;
  #L0853f4.  v1:= v2.`a.g$b.a` @type ^`java.lang.String` @kind object;
  #L0853f8.  v0:= v3 @kind object;
  #L0853fa.  v0:= (`a.g$b`) v0 @kind object;
  #L0853fe.  v0:= v0.`a.g$b.a` @type ^`java.lang.String` @kind object;
  #L085402.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085408.  v0:= temp;
  #L08540a.  if v0 == 0 then goto L085444;
  #L08540e.  v1:= v2.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L085412.  v0:= v3 @kind object;
  #L085414.  v0:= (`a.g$b`) v0 @kind object;
  #L085418.  v0:= v0.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L08541c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085422.  v0:= temp;
  #L085424.  if v0 == 0 then goto L085444;
  #L085428.  v0:= v2.`a.g$b.d` @type ^`b.f` @kind object;
  #L08542c.  v3:= (`a.g$b`) v3 @kind object;
  #L085430.  v1:= v3.`a.g$b.d` @type ^`b.f` @kind object;
  #L085434.  call temp:= `equals`(v0, v1) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08543a.  v0:= temp;
  #L08543c.  if v0 == 0 then goto L085444;
  #L085440.  v0:= 1I;
  #L085442.  return v0;
  #L085444.  v0:= 0I;
  #L085446.  goto L085442;
}
procedure `int` `hashCode`(`a.g$b` v2 @kind this) @signature `La/g$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L085458.  v0:= v2.`a.g$b.a` @type ^`java.lang.String` @kind object;
  #L08545c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L085462.  v0:= temp;
  #L085464.  v0:= v0 + 527;
  #L085468.  v0:= v0 * 31;
  #L08546c.  v1:= v2.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L085470.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L085476.  v1:= temp;
  #L085478.  v0:= v0 + v1 @kind int;
  #L08547a.  v0:= v0 * 31;
  #L08547e.  v1:= v2.`a.g$b.d` @type ^`b.f` @kind object;
  #L085482.  call temp:= `hashCode`(v1) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L085488.  v1:= temp;
  #L08548a.  v0:= v0 + v1 @kind int;
  #L08548c.  return v0;
}
procedure `java.lang.String` `toString`(`a.g$b` v2 @kind this) @signature `La/g$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0854a0.  v0:= new `java.lang.StringBuilder`;
  #L0854a4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0854aa.  v1:= v2.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L0854ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0854b4.  v0:= temp @kind object;
  #L0854b6.  v1:= v2.`a.g$b.d` @type ^`b.f` @kind object;
  #L0854ba.  call temp:= `b`(v1) @signature `Lb/f;.b:()Ljava/lang/String;` @kind virtual;
  #L0854c0.  v1:= temp @kind object;
  #L0854c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0854c8.  v0:= temp @kind object;
  #L0854ca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0854d0.  v0:= temp @kind object;
  #L0854d2.  return v0 @kind object;
}

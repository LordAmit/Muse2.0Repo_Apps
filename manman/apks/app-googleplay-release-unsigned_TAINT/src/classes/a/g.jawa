record `a.g` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `a.g.b` @AccessFlag PRIVATE_FINAL;
  `a.a.h.b` `a.g.c` @AccessFlag PRIVATE_FINAL;
}
global `a.g` `@@a.g.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0854e4.  v0:= new `a.g$a`;
  #L0854e8.  call `<init>`(v0) @signature `La/g$a;.<init>:()V` @kind direct;
  #L0854ee.  call temp:= `a`(v0) @signature `La/g$a;.a:()La/g;` @kind virtual;
  #L0854f4.  v0:= temp @kind object;
  #L0854f6.  `@@a.g.a` @type ^`a.g` := v0 @kind object;
  #L0854fa.  return @kind void;
}
procedure `void` `<init>`(`a.g` v0 @kind this, `java.util.Set` v1 @kind object, `a.a.h.b` v2 @kind object) @signature `La/g;.<init>:(Ljava/util/Set;La/a/h/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L08550c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L085512.  v0.`a.g.b` @type ^`java.util.Set` := v1 @kind object;
  #L085516.  v0.`a.g.c` @type ^`a.a.h.b` := v2 @kind object;
  #L08551a.  return @kind void;
}
procedure `b.f` `a`(`java.security.cert.X509Certificate` v1 @kind object) @signature `La/g;.a:(Ljava/security/cert/X509Certificate;)Lb/f;` @AccessFlag STATIC {
    temp;
    v0;

  #L08552c.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L085532.  v0:= temp @kind object;
  #L085534.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L08553a.  v0:= temp @kind object;
  #L08553c.  call temp:= `a`(v0) @signature `Lb/f;.a:([B)Lb/f;` @kind static;
  #L085542.  v0:= temp @kind object;
  #L085544.  call temp:= `c`(v0) @signature `Lb/f;.c:()Lb/f;` @kind virtual;
  #L08554a.  v0:= temp @kind object;
  #L08554c.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.security.cert.Certificate` v2 @kind object) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L085560.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L085564.  if v0 != 0 then goto L085578;
  #L085568.  v0:= new `java.lang.IllegalArgumentException`;
  #L08556c.  v1:= "Certificate pinning requires X509 certificates" @kind object;
  #L085570.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L085576.  throw v0;
  #L085578.  v0:= new `java.lang.StringBuilder`;
  #L08557c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L085582.  v1:= "sha256/" @kind object;
  #L085586.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08558c.  v0:= temp @kind object;
  #L08558e.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L085592.  call temp:= `b`(v2) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L085598.  v1:= temp @kind object;
  #L08559a.  call temp:= `b`(v1) @signature `Lb/f;.b:()Ljava/lang/String;` @kind virtual;
  #L0855a0.  v1:= temp @kind object;
  #L0855a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0855a8.  v0:= temp @kind object;
  #L0855aa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0855b0.  v0:= temp @kind object;
  #L0855b2.  return v0 @kind object;
}
procedure `b.f` `b`(`java.security.cert.X509Certificate` v1 @kind object) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @AccessFlag STATIC {
    temp;
    v0;

  #L0855c4.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L0855ca.  v0:= temp @kind object;
  #L0855cc.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L0855d2.  v0:= temp @kind object;
  #L0855d4.  call temp:= `a`(v0) @signature `Lb/f;.a:([B)Lb/f;` @kind static;
  #L0855da.  v0:= temp @kind object;
  #L0855dc.  call temp:= `d`(v0) @signature `Lb/f;.d:()Lb/f;` @kind virtual;
  #L0855e2.  v0:= temp @kind object;
  #L0855e4.  return v0 @kind object;
}
procedure `a.g` `a`(`a.g` v2 @kind this, `a.a.h.b` v3 @kind object) @signature `La/g;.a:(La/a/h/b;)La/g;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L0855f8.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L0855fc.  call temp:= `a`(v0, v3) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L085602.  v0:= temp;
  #L085604.  if v0 == 0 then goto L08560a;
  #L085608.  return v2 @kind object;
  #L08560a.  v0:= new `a.g`;
  #L08560e.  v1:= v2.`a.g.b` @type ^`java.util.Set` @kind object;
  #L085612.  call `<init>`(v0, v1, v3) @signature `La/g;.<init>:(Ljava/util/Set;La/a/h/b;)V` @kind direct;
  #L085618.  v2:= v0 @kind object;
  #L08561a.  goto L085608;
}
procedure `java.util.List` `a`(`a.g` v4 @kind this, `java.lang.String` v5 @kind object) @signature `La/g;.a:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08562c.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L085632.  v1:= temp @kind object;
  #L085634.  v0:= v4.`a.g.b` @type ^`java.util.Set` @kind object;
  #L085638.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L08563e.  v2:= temp @kind object;
  #L085640.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L085646.  v0:= temp;
  #L085648.  if v0 == 0 then goto L085682;
  #L08564c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L085652.  v0:= temp @kind object;
  #L085654.  v0:= (`a.g$b`) v0 @kind object;
  #L085658.  call temp:= `a`(v0, v5) @signature `La/g$b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L08565e.  v3:= temp;
  #L085660.  if v3 == 0 then goto L085640;
  #L085664.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L08566a.  v3:= temp;
  #L08566c.  if v3 == 0 then goto L08567a;
  #L085670.  v1:= new `java.util.ArrayList`;
  #L085674.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L08567a.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L085680.  goto L085640;
  #L085682.  return v1 @kind object;
}
procedure `void` `a`(`a.g` v13 @kind this, `java.lang.String` v14 @kind object, `java.util.List` v15 @kind object) @signature `La/g;.a:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L085694.  v6:= 0I;
  #L085696.  v4:= 0I;
  #L085698.  call temp:= `a`(v13, v14) @signature `La/g;.a:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L08569e.  v8:= temp @kind object;
  #L0856a0.  call temp:= `isEmpty`(v8) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L0856a6.  v0:= temp;
  #L0856a8.  if v0 == 0 then goto L0856ae;
  #L0856ac.  return @kind void;
  #L0856ae.  v0:= v13.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L0856b2.  if v0 == 0 then goto L0856c2;
  #L0856b6.  v0:= v13.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L0856ba.  call temp:= `a`(v0, v15, v14) @signature `La/a/h/b;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L0856c0.  v15:= temp @kind object;
  #L0856c2.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0856c8.  v9:= temp;
  #L0856ca.  v7:= v4;
  #L0856cc.  if v7 >= v9 then goto L085780;
  #L0856d0.  call temp:= `get`(v15, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0856d6.  v0:= temp @kind object;
  #L0856d8.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L0856dc.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0856e2.  v10:= temp;
  #L0856e4.  v5:= v4;
  #L0856e6.  v2:= v6 @kind object;
  #L0856e8.  v3:= v6 @kind object;
  #L0856ea.  if v5 >= v10 then goto L085778;
  #L0856ee.  call temp:= `get`(v8, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0856f4.  v1:= temp @kind object;
  #L0856f6.  v1:= (`a.g$b`) v1 @kind object;
  #L0856fa.  v11:= v1.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L0856fe.  v12:= "sha256/" @kind object;
  #L085702.  call temp:= `equals`(v11, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085708.  v11:= temp;
  #L08570a.  if v11 == 0 then goto L08573a;
  #L08570e.  if v2 != 0 then goto L08571a;
  #L085712.  call temp:= `b`(v0) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L085718.  v2:= temp @kind object;
  #L08571a.  v1:= v1.`a.g$b.d` @type ^`b.f` @kind object;
  #L08571e.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085724.  v1:= temp;
  #L085726.  if v1 != 0 then goto L0856ac;
  #L08572a.  v1:= v2 @kind object;
  #L08572c.  v2:= v3 @kind object;
  #L08572e.  v3:= v5 + 1;
  #L085732.  v5:= v3;
  #L085734.  v3:= v2 @kind object;
  #L085736.  v2:= v1 @kind object;
  #L085738.  goto L0856ea;
  #L08573a.  v11:= v1.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L08573e.  v12:= "sha1/" @kind object;
  #L085742.  call temp:= `equals`(v11, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085748.  v11:= temp;
  #L08574a.  if v11 == 0 then goto L08576c;
  #L08574e.  if v3 != 0 then goto L08575a;
  #L085752.  call temp:= `a`(v0) @signature `La/g;.a:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L085758.  v3:= temp @kind object;
  #L08575a.  v1:= v1.`a.g$b.d` @type ^`b.f` @kind object;
  #L08575e.  call temp:= `equals`(v1, v3) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085764.  v1:= temp;
  #L085766.  if v1 == 0 then goto L08572a;
  #L08576a.  goto L0856ac;
  #L08576c.  v0:= new `java.lang.AssertionError`;
  #L085770.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L085776.  throw v0;
  #L085778.  v0:= v7 + 1;
  #L08577c.  v7:= v0;
  #L08577e.  goto L0856cc;
  #L085780.  v0:= new `java.lang.StringBuilder`;
  #L085784.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08578a.  v1:= "Certificate pinning failure!" @kind object;
  #L08578e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085794.  v0:= temp @kind object;
  #L085796.  v1:= "\n  Peer certificate chain:" @kind object;
  #L08579a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0857a0.  v2:= temp @kind object;
  #L0857a2.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0857a8.  v3:= temp;
  #L0857aa.  v1:= v4;
  #L0857ac.  if v1 >= v3 then goto L085802;
  #L0857b0.  call temp:= `get`(v15, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0857b6.  v0:= temp @kind object;
  #L0857b8.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L0857bc.  v5:= "\n    " @kind object;
  #L0857c0.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0857c6.  v5:= temp @kind object;
  #L0857c8.  call temp:= `a`(v0) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L0857ce.  v6:= temp @kind object;
  #L0857d0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0857d6.  v5:= temp @kind object;
  #L0857d8.  v6:= ": " @kind object;
  #L0857dc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0857e2.  v5:= temp @kind object;
  #L0857e4.  call temp:= `getSubjectDN`(v0) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L0857ea.  v0:= temp @kind object;
  #L0857ec.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L0857f2.  v0:= temp @kind object;
  #L0857f4.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0857fa.  v0:= v1 + 1;
  #L0857fe.  v1:= v0;
  #L085800.  goto L0857ac;
  #L085802.  v0:= "\n  Pinned certificates for " @kind object;
  #L085806.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08580c.  v0:= temp @kind object;
  #L08580e.  call temp:= `append`(v0, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085814.  v0:= temp @kind object;
  #L085816.  v1:= ":" @kind object;
  #L08581a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085820.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L085826.  v3:= temp;
  #L085828.  v1:= v4;
  #L08582a.  if v1 >= v3 then goto L085854;
  #L08582e.  call temp:= `get`(v8, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L085834.  v0:= temp @kind object;
  #L085836.  v0:= (`a.g$b`) v0 @kind object;
  #L08583a.  v4:= "\n    " @kind object;
  #L08583e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085844.  v4:= temp @kind object;
  #L085846.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08584c.  v0:= v1 + 1;
  #L085850.  v1:= v0;
  #L085852.  goto L08582a;
  #L085854.  v0:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L085858.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08585e.  v1:= temp @kind object;
  #L085860.  call `<init>`(v0, v1) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L085866.  throw v0;
}
procedure `boolean` `equals`(`a.g` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L085878.  v1:= 1I;
  #L08587a.  if v4 != v3 then goto L085880;
  #L08587e.  return v1;
  #L085880.  v0:= instanceof @variable v4 @type ^`a.g` @kind boolean;
  #L085884.  if v0 == 0 then goto L0858c0;
  #L085888.  v2:= v3.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08588c.  v0:= v4 @kind object;
  #L08588e.  v0:= (`a.g`) v0 @kind object;
  #L085892.  v0:= v0.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L085896.  call temp:= `a`(v2, v0) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L08589c.  v0:= temp;
  #L08589e.  if v0 == 0 then goto L0858c0;
  #L0858a2.  v0:= v3.`a.g.b` @type ^`java.util.Set` @kind object;
  #L0858a6.  v4:= (`a.g`) v4 @kind object;
  #L0858aa.  v2:= v4.`a.g.b` @type ^`java.util.Set` @kind object;
  #L0858ae.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L0858b4.  v0:= temp;
  #L0858b6.  if v0 == 0 then goto L0858c0;
  #L0858ba.  v0:= v1;
  #L0858bc.  v1:= v0;
  #L0858be.  goto L08587e;
  #L0858c0.  v0:= 0I;
  #L0858c2.  goto L0858bc;
}
procedure `int` `hashCode`(`a.g` v2 @kind this) @signature `La/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0858d4.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L0858d8.  if v0 == 0 then goto L0858fc;
  #L0858dc.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L0858e0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0858e6.  v0:= temp;
  #L0858e8.  v0:= v0 * 31;
  #L0858ec.  v1:= v2.`a.g.b` @type ^`java.util.Set` @kind object;
  #L0858f0.  call temp:= `hashCode`(v1) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L0858f6.  v1:= temp;
  #L0858f8.  v0:= v0 + v1 @kind int;
  #L0858fa.  return v0;
  #L0858fc.  v0:= 0I;
  #L0858fe.  goto L0858e8;
}

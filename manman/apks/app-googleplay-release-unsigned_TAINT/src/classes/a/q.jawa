record `a.q` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `a.q.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.q` v2 @kind this, `a.q$a` v3 @kind object) @signature `La/q;.<init>:(La/q$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L08836c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L088372.  v0:= v3.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088376.  v1:= v3.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08837a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L088380.  v1:= temp;
  #L088382.  v1:= new `java.lang.String`[v1];
  #L088386.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L08838c.  v0:= temp @kind object;
  #L08838e.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L088392.  v2.`a.q.a` @type ^`java.lang.String`[] := v0 @kind object;
  #L088396.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L0883a8.  v0:= length @variable v2;
  #L0883aa.  v0:= v0 + -2;
  #L0883ae.  if v0 < 0 then goto L0883d2;
  #L0883b2.  v1:= v2[v0] @kind object;
  #L0883b6.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0883bc.  v1:= temp;
  #L0883be.  if v1 == 0 then goto L0883cc;
  #L0883c2.  v0:= v0 + 1;
  #L0883c6.  v0:= v2[v0] @kind object;
  #L0883ca.  return v0 @kind object;
  #L0883cc.  v0:= v0 + -2;
  #L0883d0.  goto L0883ae;
  #L0883d2.  v0:= 0I;
  #L0883d4.  goto L0883ca;
}
procedure `int` `a`(`a.q` v1 @kind this) @signature `La/q;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0883e8.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L0883ec.  v0:= length @variable v0;
  #L0883ee.  v0:= v0 / 2;
  #L0883f2.  return v0;
}
procedure `java.lang.String` `a`(`a.q` v2 @kind this, `int` v3 ) @signature `La/q;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L088404.  v0:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088408.  v1:= v3 * 2;
  #L08840c.  v0:= v0[v1] @kind object;
  #L088410.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088424.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088428.  call temp:= `a`(v0, v2) @signature `La/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L08842e.  v0:= temp @kind object;
  #L088430.  return v0 @kind object;
}
procedure `a.q$a` `b`(`a.q` v3 @kind this) @signature `La/q;.b:()La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L088444.  v0:= new `a.q$a`;
  #L088448.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L08844e.  v1:= v0.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088452.  v2:= v3.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088456.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L08845c.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`a.q` v2 @kind this, `int` v3 ) @signature `La/q;.b:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L088470.  v0:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088474.  v1:= v3 * 2;
  #L088478.  v1:= v1 + 1;
  #L08847c.  v0:= v0[v1] @kind object;
  #L088480.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.q` v5 @kind this, `java.lang.String` v6 @kind object) @signature `La/q;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L088494.  v1:= 0I;
  #L088496.  v0:= 0I;
  #L088498.  call temp:= `a`(v5) @signature `La/q;.a:()I` @kind virtual;
  #L08849e.  v2:= temp;
  #L0884a0.  v4:= v0;
  #L0884a2.  v0:= v1 @kind object;
  #L0884a4.  v1:= v4;
  #L0884a6.  if v1 >= v2 then goto L0884e2;
  #L0884aa.  call temp:= `a`(v5, v1) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L0884b0.  v3:= temp @kind object;
  #L0884b2.  call temp:= `equalsIgnoreCase`(v6, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0884b8.  v3:= temp;
  #L0884ba.  if v3 == 0 then goto L0884dc;
  #L0884be.  if v0 != 0 then goto L0884ce;
  #L0884c2.  v0:= new `java.util.ArrayList`;
  #L0884c6.  v3:= 2I;
  #L0884c8.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0884ce.  call temp:= `b`(v5, v1) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L0884d4.  v3:= temp @kind object;
  #L0884d6.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0884dc.  v1:= v1 + 1;
  #L0884e0.  goto L0884a6;
  #L0884e2.  if v0 == 0 then goto L0884f0;
  #L0884e6.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L0884ec.  v0:= temp @kind object;
  #L0884ee.  return v0 @kind object;
  #L0884f0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0884f6.  v0:= temp @kind object;
  #L0884f8.  goto L0884ee;
}
procedure `boolean` `equals`(`a.q` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08850c.  v0:= instanceof @variable v3 @type ^`a.q` @kind boolean;
  #L088510.  if v0 == 0 then goto L088530;
  #L088514.  v3:= (`a.q`) v3 @kind object;
  #L088518.  v0:= v3.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08851c.  v1:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088520.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L088526.  v0:= temp;
  #L088528.  if v0 == 0 then goto L088530;
  #L08852c.  v0:= 1I;
  #L08852e.  return v0;
  #L088530.  v0:= 0I;
  #L088532.  goto L08852e;
}
procedure `int` `hashCode`(`a.q` v1 @kind this) @signature `La/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088544.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088548.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L08854e.  v0:= temp;
  #L088550.  return v0;
}
procedure `java.lang.String` `toString`(`a.q` v5 @kind this) @signature `La/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L088564.  v1:= new `java.lang.StringBuilder`;
  #L088568.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08856e.  v0:= 0I;
  #L088570.  call temp:= `a`(v5) @signature `La/q;.a:()I` @kind virtual;
  #L088576.  v2:= temp;
  #L088578.  if v0 >= v2 then goto L0885b8;
  #L08857c.  call temp:= `a`(v5, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L088582.  v3:= temp @kind object;
  #L088584.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08858a.  v3:= temp @kind object;
  #L08858c.  v4:= ": " @kind object;
  #L088590.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088596.  v3:= temp @kind object;
  #L088598.  call temp:= `b`(v5, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L08859e.  v4:= temp @kind object;
  #L0885a0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0885a6.  v3:= temp @kind object;
  #L0885a8.  v4:= "\n" @kind object;
  #L0885ac.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0885b2.  v0:= v0 + 1;
  #L0885b6.  goto L088578;
  #L0885b8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0885be.  v0:= temp @kind object;
  #L0885c0.  return v0 @kind object;
}

record `a.a.e.h$a` @kind class @AccessFlag FINAL extends `b.r` @kind interface {
  `int` `a.a.e.h$a.a` @AccessFlag ;
  `byte` `a.a.e.h$a.b` @AccessFlag ;
  `int` `a.a.e.h$a.c` @AccessFlag ;
  `int` `a.a.e.h$a.d` @AccessFlag ;
  `short` `a.a.e.h$a.e` @AccessFlag ;
  `b.e` `a.a.e.h$a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.e.h$a` v0 @kind this, `b.e` v1 @kind object) @signature `La/a/e/h$a;.<init>:(Lb/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L07f6c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07f6ce.  v0.`a.a.e.h$a.f` @type ^`b.e` := v1 @kind object;
  #L07f6d2.  return @kind void;
}
procedure `void` `b`(`a.a.e.h$a` v8 @kind this) @signature `La/a/e/h$a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07f6e4.  v7:= 1I;
  #L07f6e6.  v6:= 0I;
  #L07f6e8.  v0:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L07f6ec.  v1:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07f6f0.  call temp:= `a`(v1) @signature `La/a/e/h;.a:(Lb/e;)I` @kind static;
  #L07f6f6.  v1:= temp;
  #L07f6f8.  v8.`a.a.e.h$a.d` @type ^`int` := v1;
  #L07f6fc.  v8.`a.a.e.h$a.a` @type ^`int` := v1;
  #L07f700.  v1:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07f704.  call temp:= `h`(v1) @signature `Lb/e;.h:()B` @kind interface;
  #L07f70a.  v1:= temp;
  #L07f70c.  v1:= v1 ^& 255;
  #L07f710.  v1:= (`byte`) v1 @kind i2b;
  #L07f712.  v2:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07f716.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07f71c.  v2:= temp;
  #L07f71e.  v2:= v2 ^& 255;
  #L07f722.  v2:= (`byte`) v2 @kind i2b;
  #L07f724.  v8.`a.a.e.h$a.b` @type ^`byte` := v2 @kind byte;
  #L07f728.  v2:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07f72c.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L07f730.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L07f736.  v2:= temp;
  #L07f738.  if v2 == 0 then goto L07f75a;
  #L07f73c.  v2:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07f740.  v3:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L07f744.  v4:= v8.`a.a.e.h$a.a` @type ^`int`;
  #L07f748.  v5:= v8.`a.a.e.h$a.b` @type ^`byte` @kind byte;
  #L07f74c.  call temp:= `a`(v7, v3, v4, v1, v5) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L07f752.  v3:= temp @kind object;
  #L07f754.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L07f75a.  v2:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07f75e.  call temp:= `j`(v2) @signature `Lb/e;.j:()I` @kind interface;
  #L07f764.  v2:= temp;
  #L07f766.  v3:= 2147483647I;
  #L07f76c.  v2:= v2 ^& v3 @kind int;
  #L07f76e.  v8.`a.a.e.h$a.c` @type ^`int` := v2;
  #L07f772.  v2:= 9I;
  #L07f776.  if v1 == v2 then goto L07f798;
  #L07f77a.  v0:= "%s != TYPE_CONTINUATION" @kind object;
  #L07f77e.  v2:= new `java.lang.Object`[v7];
  #L07f782.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L07f788.  v1:= temp @kind object;
  #L07f78a.  v2[v6]:= v1 @kind object;
  #L07f78e.  call temp:= `b`(v0, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f794.  v0:= temp @kind object;
  #L07f796.  throw v0;
  #L07f798.  v1:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L07f79c.  if v1 == v0 then goto L07f7b2;
  #L07f7a0.  v0:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L07f7a4.  v1:= new `java.lang.Object`[v6];
  #L07f7a8.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f7ae.  v0:= temp @kind object;
  #L07f7b0.  throw v0;
  #L07f7b2.  return @kind void;
}
procedure `long` `a`(`a.a.e.h$a` v6 @kind this, `b.c` v7 @kind object, `long` v8 ) @signature `La/a/e/h$a;.a:(Lb/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07f7c4.  v0:= -1L;
  #L07f7c8.  v2:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L07f7cc.  if v2 != 0 then goto L07f7fc;
  #L07f7d0.  v2:= v6.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07f7d4.  v3:= v6.`a.a.e.h$a.e` @type ^`short` @kind short;
  #L07f7d8.  v4:= (`long`) v3 @kind i2l;
  #L07f7da.  call `g`(v2, v4) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07f7e0.  v2:= 0I;
  #L07f7e2.  v6.`a.a.e.h$a.e` @type ^`short` := v2 @kind char;
  #L07f7e6.  v2:= v6.`a.a.e.h$a.b` @type ^`byte` @kind byte;
  #L07f7ea.  v2:= v2 ^& 4;
  #L07f7ee.  if v2 == 0 then goto L07f7f4;
  #L07f7f2.  return v0 @kind wide;
  #L07f7f4.  call `b`(v6) @signature `La/a/e/h$a;.b:()V` @kind direct;
  #L07f7fa.  goto L07f7c8;
  #L07f7fc.  v2:= v6.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07f800.  v3:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L07f804.  v4:= (`long`) v3 @kind i2l;
  #L07f806.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L07f80c.  v4:= temp @kind wide;
  #L07f80e.  call temp:= `a`(v2, v7, v4) @signature `Lb/e;.a:(Lb/c;J)J` @kind interface;
  #L07f814.  v2:= temp @kind wide;
  #L07f816.  v4:= lcmp(v2, v0);
  #L07f81a.  if v4 == 0 then goto L07f7f2;
  #L07f81e.  v0:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L07f822.  v0:= (`long`) v0 @kind i2l;
  #L07f824.  v0:= v0 - v2 @kind long;
  #L07f826.  v0:= (`int`) v0 @kind l2i;
  #L07f828.  v6.`a.a.e.h$a.d` @type ^`int` := v0;
  #L07f82c.  v0:= v2 @kind wide;
  #L07f82e.  goto L07f7f2;
}
procedure `b.s` `a`(`a.a.e.h$a` v1 @kind this) @signature `La/a/e/h$a;.a:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07f840.  v0:= v1.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07f844.  call temp:= `a`(v0) @signature `Lb/e;.a:()Lb/s;` @kind interface;
  #L07f84a.  v0:= temp @kind object;
  #L07f84c.  return v0 @kind object;
}
procedure `void` `close`(`a.a.e.h$a` v0 @kind this) @signature `La/a/e/h$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L07f860.  return @kind void;
}

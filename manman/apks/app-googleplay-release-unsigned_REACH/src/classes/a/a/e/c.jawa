record `a.a.e.c` @kind class @AccessFlag PUBLIC_FINAL {
  `b.f` `a.a.e.c.g` @AccessFlag PUBLIC_FINAL;
  `b.f` `a.a.e.c.h` @AccessFlag PUBLIC_FINAL;
  `int` `a.a.e.c.i` @AccessFlag FINAL;
}
global `b.f` `@@a.a.e.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L07be2c.  v0:= ":" @kind object;
  #L07be30.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07be36.  v0:= temp @kind object;
  #L07be38.  `@@a.a.e.c.a` @type ^`b.f` := v0 @kind object;
  #L07be3c.  v0:= ":status" @kind object;
  #L07be40.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07be46.  v0:= temp @kind object;
  #L07be48.  `@@a.a.e.c.b` @type ^`b.f` := v0 @kind object;
  #L07be4c.  v0:= ":method" @kind object;
  #L07be50.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07be56.  v0:= temp @kind object;
  #L07be58.  `@@a.a.e.c.c` @type ^`b.f` := v0 @kind object;
  #L07be5c.  v0:= ":path" @kind object;
  #L07be60.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07be66.  v0:= temp @kind object;
  #L07be68.  `@@a.a.e.c.d` @type ^`b.f` := v0 @kind object;
  #L07be6c.  v0:= ":scheme" @kind object;
  #L07be70.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07be76.  v0:= temp @kind object;
  #L07be78.  `@@a.a.e.c.e` @type ^`b.f` := v0 @kind object;
  #L07be7c.  v0:= ":authority" @kind object;
  #L07be80.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07be86.  v0:= temp @kind object;
  #L07be88.  `@@a.a.e.c.f` @type ^`b.f` := v0 @kind object;
  #L07be8c.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v2 @kind this, `b.f` v3 @kind object, `b.f` v4 @kind object) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L07bea0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07bea6.  v2.`a.a.e.c.g` @type ^`b.f` := v3 @kind object;
  #L07beaa.  v2.`a.a.e.c.h` @type ^`b.f` := v4 @kind object;
  #L07beae.  call temp:= `g`(v3) @signature `Lb/f;.g:()I` @kind virtual;
  #L07beb4.  v0:= temp;
  #L07beb6.  v0:= v0 + 32;
  #L07beba.  call temp:= `g`(v4) @signature `Lb/f;.g:()I` @kind virtual;
  #L07bec0.  v1:= temp;
  #L07bec2.  v0:= v0 + v1 @kind int;
  #L07bec4.  v2.`a.a.e.c.i` @type ^`int` := v0;
  #L07bec8.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v1 @kind this, `b.f` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L07bedc.  call temp:= `a`(v3) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07bee2.  v0:= temp @kind object;
  #L07bee4.  call `<init>`(v1, v2, v0) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @kind direct;
  #L07beea.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/a/e/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L07befc.  call temp:= `a`(v3) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07bf02.  v0:= temp @kind object;
  #L07bf04.  call temp:= `a`(v4) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07bf0a.  v1:= temp @kind object;
  #L07bf0c.  call `<init>`(v2, v0, v1) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @kind direct;
  #L07bf12.  return @kind void;
}
procedure `boolean` `equals`(`a.a.e.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/a/e/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07bf24.  v0:= 0I;
  #L07bf26.  v1:= instanceof @variable v4 @type ^`a.a.e.c` @kind boolean;
  #L07bf2a.  if v1 == 0 then goto L07bf5c;
  #L07bf2e.  v4:= (`a.a.e.c`) v4 @kind object;
  #L07bf32.  v1:= v3.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07bf36.  v2:= v4.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07bf3a.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07bf40.  v1:= temp;
  #L07bf42.  if v1 == 0 then goto L07bf5c;
  #L07bf46.  v1:= v3.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07bf4a.  v2:= v4.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07bf4e.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07bf54.  v1:= temp;
  #L07bf56.  if v1 == 0 then goto L07bf5c;
  #L07bf5a.  v0:= 1I;
  #L07bf5c.  return v0;
}
procedure `int` `hashCode`(`a.a.e.c` v2 @kind this) @signature `La/a/e/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07bf70.  v0:= v2.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07bf74.  call temp:= `hashCode`(v0) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L07bf7a.  v0:= temp;
  #L07bf7c.  v0:= v0 + 527;
  #L07bf80.  v0:= v0 * 31;
  #L07bf84.  v1:= v2.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07bf88.  call temp:= `hashCode`(v1) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L07bf8e.  v1:= temp;
  #L07bf90.  v0:= v0 + v1 @kind int;
  #L07bf92.  return v0;
}
procedure `java.lang.String` `toString`(`a.a.e.c` v4 @kind this) @signature `La/a/e/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07bfa4.  v0:= "%s: %s" @kind object;
  #L07bfa8.  v1:= 2I;
  #L07bfaa.  v1:= new `java.lang.Object`[v1];
  #L07bfae.  v2:= 0I;
  #L07bfb0.  v3:= v4.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07bfb4.  call temp:= `a`(v3) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07bfba.  v3:= temp @kind object;
  #L07bfbc.  v1[v2]:= v3 @kind object;
  #L07bfc0.  v2:= 1I;
  #L07bfc2.  v3:= v4.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07bfc6.  call temp:= `a`(v3) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07bfcc.  v3:= temp @kind object;
  #L07bfce.  v1[v2]:= v3 @kind object;
  #L07bfd2.  call temp:= `a`(v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07bfd8.  v0:= temp @kind object;
  #L07bfda.  return v0 @kind object;
}

record `a.a.e.f` @kind class @AccessFlag PUBLIC_FINAL extends `a.a.c.c` @kind interface {
  `a.a.b.g` `a.a.e.f.a` @AccessFlag FINAL;
  `a.u` `a.a.e.f.l` @AccessFlag PRIVATE_FINAL;
  `a.a.e.g` `a.a.e.f.m` @AccessFlag PRIVATE_FINAL;
  `a.a.e.i` `a.a.e.f.n` @AccessFlag PRIVATE;
}
global `b.f` `@@a.a.e.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@a.a.e.f.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@a.a.e.f.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07d920.  v7:= 4I;
  #L07d922.  v6:= 3I;
  #L07d924.  v5:= 2I;
  #L07d926.  v4:= 1I;
  #L07d928.  v3:= 0I;
  #L07d92a.  v0:= "connection" @kind object;
  #L07d92e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d934.  v0:= temp @kind object;
  #L07d936.  `@@a.a.e.f.b` @type ^`b.f` := v0 @kind object;
  #L07d93a.  v0:= "host" @kind object;
  #L07d93e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d944.  v0:= temp @kind object;
  #L07d946.  `@@a.a.e.f.c` @type ^`b.f` := v0 @kind object;
  #L07d94a.  v0:= "keep-alive" @kind object;
  #L07d94e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d954.  v0:= temp @kind object;
  #L07d956.  `@@a.a.e.f.d` @type ^`b.f` := v0 @kind object;
  #L07d95a.  v0:= "proxy-connection" @kind object;
  #L07d95e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d964.  v0:= temp @kind object;
  #L07d966.  `@@a.a.e.f.e` @type ^`b.f` := v0 @kind object;
  #L07d96a.  v0:= "transfer-encoding" @kind object;
  #L07d96e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d974.  v0:= temp @kind object;
  #L07d976.  `@@a.a.e.f.f` @type ^`b.f` := v0 @kind object;
  #L07d97a.  v0:= "te" @kind object;
  #L07d97e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d984.  v0:= temp @kind object;
  #L07d986.  `@@a.a.e.f.g` @type ^`b.f` := v0 @kind object;
  #L07d98a.  v0:= "encoding" @kind object;
  #L07d98e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d994.  v0:= temp @kind object;
  #L07d996.  `@@a.a.e.f.h` @type ^`b.f` := v0 @kind object;
  #L07d99a.  v0:= "upgrade" @kind object;
  #L07d99e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d9a4.  v0:= temp @kind object;
  #L07d9a6.  `@@a.a.e.f.i` @type ^`b.f` := v0 @kind object;
  #L07d9aa.  v0:= 12I;
  #L07d9ae.  v0:= new `b.f`[v0];
  #L07d9b2.  v1:= `@@a.a.e.f.b` @type ^`b.f` @kind object;
  #L07d9b6.  v0[v3]:= v1 @kind object;
  #L07d9ba.  v1:= `@@a.a.e.f.c` @type ^`b.f` @kind object;
  #L07d9be.  v0[v4]:= v1 @kind object;
  #L07d9c2.  v1:= `@@a.a.e.f.d` @type ^`b.f` @kind object;
  #L07d9c6.  v0[v5]:= v1 @kind object;
  #L07d9ca.  v1:= `@@a.a.e.f.e` @type ^`b.f` @kind object;
  #L07d9ce.  v0[v6]:= v1 @kind object;
  #L07d9d2.  v1:= `@@a.a.e.f.g` @type ^`b.f` @kind object;
  #L07d9d6.  v0[v7]:= v1 @kind object;
  #L07d9da.  v1:= 5I;
  #L07d9dc.  v2:= `@@a.a.e.f.f` @type ^`b.f` @kind object;
  #L07d9e0.  v0[v1]:= v2 @kind object;
  #L07d9e4.  v1:= 6I;
  #L07d9e6.  v2:= `@@a.a.e.f.h` @type ^`b.f` @kind object;
  #L07d9ea.  v0[v1]:= v2 @kind object;
  #L07d9ee.  v1:= 7I;
  #L07d9f0.  v2:= `@@a.a.e.f.i` @type ^`b.f` @kind object;
  #L07d9f4.  v0[v1]:= v2 @kind object;
  #L07d9f8.  v1:= 8I;
  #L07d9fc.  v2:= `@@a.a.e.c.c` @type ^`b.f` @kind object;
  #L07da00.  v0[v1]:= v2 @kind object;
  #L07da04.  v1:= 9I;
  #L07da08.  v2:= `@@a.a.e.c.d` @type ^`b.f` @kind object;
  #L07da0c.  v0[v1]:= v2 @kind object;
  #L07da10.  v1:= 10I;
  #L07da14.  v2:= `@@a.a.e.c.e` @type ^`b.f` @kind object;
  #L07da18.  v0[v1]:= v2 @kind object;
  #L07da1c.  v1:= 11I;
  #L07da20.  v2:= `@@a.a.e.c.f` @type ^`b.f` @kind object;
  #L07da24.  v0[v1]:= v2 @kind object;
  #L07da28.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L07da2e.  v0:= temp @kind object;
  #L07da30.  `@@a.a.e.f.j` @type ^`java.util.List` := v0 @kind object;
  #L07da34.  v0:= 8I;
  #L07da38.  v0:= new `b.f`[v0];
  #L07da3c.  v1:= `@@a.a.e.f.b` @type ^`b.f` @kind object;
  #L07da40.  v0[v3]:= v1 @kind object;
  #L07da44.  v1:= `@@a.a.e.f.c` @type ^`b.f` @kind object;
  #L07da48.  v0[v4]:= v1 @kind object;
  #L07da4c.  v1:= `@@a.a.e.f.d` @type ^`b.f` @kind object;
  #L07da50.  v0[v5]:= v1 @kind object;
  #L07da54.  v1:= `@@a.a.e.f.e` @type ^`b.f` @kind object;
  #L07da58.  v0[v6]:= v1 @kind object;
  #L07da5c.  v1:= `@@a.a.e.f.g` @type ^`b.f` @kind object;
  #L07da60.  v0[v7]:= v1 @kind object;
  #L07da64.  v1:= 5I;
  #L07da66.  v2:= `@@a.a.e.f.f` @type ^`b.f` @kind object;
  #L07da6a.  v0[v1]:= v2 @kind object;
  #L07da6e.  v1:= 6I;
  #L07da70.  v2:= `@@a.a.e.f.h` @type ^`b.f` @kind object;
  #L07da74.  v0[v1]:= v2 @kind object;
  #L07da78.  v1:= 7I;
  #L07da7a.  v2:= `@@a.a.e.f.i` @type ^`b.f` @kind object;
  #L07da7e.  v0[v1]:= v2 @kind object;
  #L07da82.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L07da88.  v0:= temp @kind object;
  #L07da8a.  `@@a.a.e.f.k` @type ^`java.util.List` := v0 @kind object;
  #L07da8e.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.f` v0 @kind this, `a.u` v1 @kind object, `a.a.b.g` v2 @kind object, `a.a.e.g` v3 @kind object) @signature `La/a/e/f;.<init>:(La/u;La/a/b/g;La/a/e/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L07daa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07daa6.  v0.`a.a.e.f.l` @type ^`a.u` := v1 @kind object;
  #L07daaa.  v0.`a.a.e.f.a` @type ^`a.a.b.g` := v2 @kind object;
  #L07daae.  v0.`a.a.e.f.m` @type ^`a.a.e.g` := v3 @kind object;
  #L07dab2.  return @kind void;
}
procedure `a.z$a` `a`(`java.util.List` v9 @kind object) @signature `La/a/e/f;.a:(Ljava/util/List;)La/z$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07dac4.  v2:= 0I;
  #L07dac6.  v1:= new `a.q$a`;
  #L07daca.  call `<init>`(v1) @signature `La/q$a;.<init>:()V` @kind direct;
  #L07dad0.  v0:= 0I;
  #L07dad2.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L07dad8.  v5:= temp;
  #L07dada.  v4:= v0;
  #L07dadc.  v3:= v2 @kind object;
  #L07dade.  if v4 >= v5 then goto L07db98;
  #L07dae2.  call temp:= `get`(v9, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L07dae8.  v0:= temp @kind object;
  #L07daea.  v0:= (`a.a.e.c`) v0 @kind object;
  #L07daee.  if v0 != 0 then goto L07db1a;
  #L07daf2.  if v3 == 0 then goto L07db92;
  #L07daf6.  v0:= v3.`a.a.c.k.b` @type ^`int`;
  #L07dafa.  v6:= 100I;
  #L07dafe.  if v0 != v6 then goto L07db92;
  #L07db02.  v0:= new `a.q$a`;
  #L07db06.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L07db0c.  v1:= v2 @kind object;
  #L07db0e.  v3:= v4 + 1;
  #L07db12.  v4:= v3;
  #L07db14.  v3:= v1 @kind object;
  #L07db16.  v1:= v0 @kind object;
  #L07db18.  goto L07dade;
  #L07db1a.  v6:= v0.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07db1e.  v0:= v0.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07db22.  call temp:= `a`(v0) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07db28.  v0:= temp @kind object;
  #L07db2a.  v7:= `@@a.a.e.c.b` @type ^`b.f` @kind object;
  #L07db2e.  call temp:= `equals`(v6, v7) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07db34.  v7:= temp;
  #L07db36.  if v7 == 0 then goto L07db70;
  #L07db3a.  v3:= new `java.lang.StringBuilder`;
  #L07db3e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07db44.  v6:= "HTTP/1.1 " @kind object;
  #L07db48.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07db4e.  v3:= temp @kind object;
  #L07db50.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07db56.  v0:= temp @kind object;
  #L07db58.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07db5e.  v0:= temp @kind object;
  #L07db60.  call temp:= `a`(v0) @signature `La/a/c/k;.a:(Ljava/lang/String;)La/a/c/k;` @kind static;
  #L07db66.  v0:= temp @kind object;
  #L07db68.  v8:= v1 @kind object;
  #L07db6a.  v1:= v0 @kind object;
  #L07db6c.  v0:= v8 @kind object;
  #L07db6e.  goto L07db0e;
  #L07db70.  v7:= `@@a.a.e.f.k` @type ^`java.util.List` @kind object;
  #L07db74.  call temp:= `contains`(v7, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07db7a.  v7:= temp;
  #L07db7c.  if v7 != 0 then goto L07db92;
  #L07db80.  v7:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L07db84.  call temp:= `a`(v6) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07db8a.  v6:= temp @kind object;
  #L07db8c.  call `a`(v7, v1, v6, v0) @signature `La/a/a;.a:(La/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L07db92.  v0:= v1 @kind object;
  #L07db94.  v1:= v3 @kind object;
  #L07db96.  goto L07db0e;
  #L07db98.  if v3 != 0 then goto L07dbac;
  #L07db9c.  v0:= new `java.net.ProtocolException`;
  #L07dba0.  v1:= "Expected ':status' header not present" @kind object;
  #L07dba4.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07dbaa.  throw v0;
  #L07dbac.  v0:= new `a.z$a`;
  #L07dbb0.  call `<init>`(v0) @signature `La/z$a;.<init>:()V` @kind direct;
  #L07dbb6.  v2:= `@@a.v.d` @type ^`a.v` @kind object;
  #L07dbba.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(La/v;)La/z$a;` @kind virtual;
  #L07dbc0.  v0:= temp @kind object;
  #L07dbc2.  v2:= v3.`a.a.c.k.b` @type ^`int`;
  #L07dbc6.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(I)La/z$a;` @kind virtual;
  #L07dbcc.  v0:= temp @kind object;
  #L07dbce.  v2:= v3.`a.a.c.k.c` @type ^`java.lang.String` @kind object;
  #L07dbd2.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(Ljava/lang/String;)La/z$a;` @kind virtual;
  #L07dbd8.  v0:= temp @kind object;
  #L07dbda.  call temp:= `a`(v1) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L07dbe0.  v1:= temp @kind object;
  #L07dbe2.  call temp:= `a`(v0, v1) @signature `La/z$a;.a:(La/q;)La/z$a;` @kind virtual;
  #L07dbe8.  v0:= temp @kind object;
  #L07dbea.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.x` v7 @kind object) @signature `La/a/e/f;.b:(La/x;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07dbfc.  call temp:= `c`(v7) @signature `La/x;.c:()La/q;` @kind virtual;
  #L07dc02.  v1:= temp @kind object;
  #L07dc04.  v2:= new `java.util.ArrayList`;
  #L07dc08.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L07dc0e.  v0:= temp;
  #L07dc10.  v0:= v0 + 4;
  #L07dc14.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L07dc1a.  v0:= new `a.a.e.c`;
  #L07dc1e.  v3:= `@@a.a.e.c.c` @type ^`b.f` @kind object;
  #L07dc22.  call temp:= `b`(v7) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L07dc28.  v4:= temp @kind object;
  #L07dc2a.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07dc30.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07dc36.  v0:= new `a.a.e.c`;
  #L07dc3a.  v3:= `@@a.a.e.c.d` @type ^`b.f` @kind object;
  #L07dc3e.  call temp:= `a`(v7) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07dc44.  v4:= temp @kind object;
  #L07dc46.  call temp:= `a`(v4) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @kind static;
  #L07dc4c.  v4:= temp @kind object;
  #L07dc4e.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07dc54.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07dc5a.  v0:= "Host" @kind object;
  #L07dc5e.  call temp:= `a`(v7, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07dc64.  v0:= temp @kind object;
  #L07dc66.  if v0 == 0 then goto L07dc7e;
  #L07dc6a.  v3:= new `a.a.e.c`;
  #L07dc6e.  v4:= `@@a.a.e.c.f` @type ^`b.f` @kind object;
  #L07dc72.  call `<init>`(v3, v4, v0) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07dc78.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07dc7e.  v0:= new `a.a.e.c`;
  #L07dc82.  v3:= `@@a.a.e.c.e` @type ^`b.f` @kind object;
  #L07dc86.  call temp:= `a`(v7) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07dc8c.  v4:= temp @kind object;
  #L07dc8e.  call temp:= `b`(v4) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L07dc94.  v4:= temp @kind object;
  #L07dc96.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07dc9c.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07dca2.  v0:= 0I;
  #L07dca4.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L07dcaa.  v3:= temp;
  #L07dcac.  if v0 >= v3 then goto L07dcfa;
  #L07dcb0.  call temp:= `a`(v1, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L07dcb6.  v4:= temp @kind object;
  #L07dcb8.  v5:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L07dcbc.  call temp:= `toLowerCase`(v4, v5) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L07dcc2.  v4:= temp @kind object;
  #L07dcc4.  call temp:= `a`(v4) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07dcca.  v4:= temp @kind object;
  #L07dccc.  v5:= `@@a.a.e.f.j` @type ^`java.util.List` @kind object;
  #L07dcd0.  call temp:= `contains`(v5, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07dcd6.  v5:= temp;
  #L07dcd8.  if v5 != 0 then goto L07dcf4;
  #L07dcdc.  v5:= new `a.a.e.c`;
  #L07dce0.  call temp:= `b`(v1, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L07dce6.  v6:= temp @kind object;
  #L07dce8.  call `<init>`(v5, v4, v6) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07dcee.  call temp:= `add`(v2, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07dcf4.  v0:= v0 + 1;
  #L07dcf8.  goto L07dcac;
  #L07dcfa.  return v2 @kind object;
}
procedure `a.aa` `a`(`a.a.e.f` v3 @kind this, `a.z` v4 @kind object) @signature `La/a/e/f;.a:(La/z;)La/aa;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07dd0c.  v0:= new `a.a.e.f$a`;
  #L07dd10.  v1:= v3.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07dd14.  call temp:= `g`(v1) @signature `La/a/e/i;.g:()Lb/r;` @kind virtual;
  #L07dd1a.  v1:= temp @kind object;
  #L07dd1c.  call `<init>`(v0, v3, v1) @signature `La/a/e/f$a;.<init>:(La/a/e/f;Lb/r;)V` @kind direct;
  #L07dd22.  v1:= new `a.a.c.h`;
  #L07dd26.  call temp:= `e`(v4) @signature `La/z;.e:()La/q;` @kind virtual;
  #L07dd2c.  v2:= temp @kind object;
  #L07dd2e.  call temp:= `a`(v0) @signature `Lb/k;.a:(Lb/r;)Lb/e;` @kind static;
  #L07dd34.  v0:= temp @kind object;
  #L07dd36.  call `<init>`(v1, v2, v0) @signature `La/a/c/h;.<init>:(La/q;Lb/e;)V` @kind direct;
  #L07dd3c.  return v1 @kind object;
}
procedure `a.z$a` `a`(`a.a.e.f` v3 @kind this, `boolean` v4 ) @signature `La/a/e/f;.a:(Z)La/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07dd50.  v0:= v3.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07dd54.  call temp:= `d`(v0) @signature `La/a/e/i;.d:()Ljava/util/List;` @kind virtual;
  #L07dd5a.  v0:= temp @kind object;
  #L07dd5c.  call temp:= `a`(v0) @signature `La/a/e/f;.a:(Ljava/util/List;)La/z$a;` @kind static;
  #L07dd62.  v0:= temp @kind object;
  #L07dd64.  if v4 == 0 then goto L07dd7e;
  #L07dd68.  v1:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L07dd6c.  call temp:= `a`(v1, v0) @signature `La/a/a;.a:(La/z$a;)I` @kind virtual;
  #L07dd72.  v1:= temp;
  #L07dd74.  v2:= 100I;
  #L07dd78.  if v1 != v2 then goto L07dd7e;
  #L07dd7c.  v0:= 0I;
  #L07dd7e.  return v0 @kind object;
}
procedure `b.q` `a`(`a.a.e.f` v1 @kind this, `a.x` v2 @kind object, `long` v3 ) @signature `La/a/e/f;.a:(La/x;J)Lb/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07dd90.  v0:= v1.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07dd94.  call temp:= `h`(v0) @signature `La/a/e/i;.h:()Lb/q;` @kind virtual;
  #L07dd9a.  v0:= temp @kind object;
  #L07dd9c.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.f` v1 @kind this) @signature `La/a/e/f;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07ddb0.  v0:= v1.`a.a.e.f.m` @type ^`a.a.e.g` @kind object;
  #L07ddb4.  call `b`(v0) @signature `La/a/e/g;.b:()V` @kind virtual;
  #L07ddba.  return @kind void;
}
procedure `void` `a`(`a.a.e.f` v4 @kind this, `a.x` v5 @kind object) @signature `La/a/e/f;.a:(La/x;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07ddcc.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07ddd0.  if v0 == 0 then goto L07ddd6;
  #L07ddd4.  return @kind void;
  #L07ddd6.  call temp:= `d`(v5) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07dddc.  v0:= temp @kind object;
  #L07ddde.  if v0 == 0 then goto L07de46;
  #L07dde2.  v0:= 1I;
  #L07dde4.  call temp:= `b`(v5) @signature `La/a/e/f;.b:(La/x;)Ljava/util/List;` @kind static;
  #L07ddea.  v1:= temp @kind object;
  #L07ddec.  v2:= v4.`a.a.e.f.m` @type ^`a.a.e.g` @kind object;
  #L07ddf0.  call temp:= `a`(v2, v1, v0) @signature `La/a/e/g;.a:(Ljava/util/List;Z)La/a/e/i;` @kind virtual;
  #L07ddf6.  v0:= temp @kind object;
  #L07ddf8.  v4.`a.a.e.f.n` @type ^`a.a.e.i` := v0 @kind object;
  #L07ddfc.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07de00.  call temp:= `e`(v0) @signature `La/a/e/i;.e:()Lb/s;` @kind virtual;
  #L07de06.  v0:= temp @kind object;
  #L07de08.  v1:= v4.`a.a.e.f.l` @type ^`a.u` @kind object;
  #L07de0c.  call temp:= `b`(v1) @signature `La/u;.b:()I` @kind virtual;
  #L07de12.  v1:= temp;
  #L07de14.  v2:= (`long`) v1 @kind i2l;
  #L07de16.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07de1a.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07de20.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07de24.  call temp:= `f`(v0) @signature `La/a/e/i;.f:()Lb/s;` @kind virtual;
  #L07de2a.  v0:= temp @kind object;
  #L07de2c.  v1:= v4.`a.a.e.f.l` @type ^`a.u` @kind object;
  #L07de30.  call temp:= `c`(v1) @signature `La/u;.c:()I` @kind virtual;
  #L07de36.  v1:= temp;
  #L07de38.  v2:= (`long`) v1 @kind i2l;
  #L07de3a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07de3e.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07de44.  goto L07ddd4;
  #L07de46.  v0:= 0I;
  #L07de48.  goto L07dde4;
}
procedure `void` `b`(`a.a.e.f` v1 @kind this) @signature `La/a/e/f;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07de5c.  v0:= v1.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07de60.  call temp:= `h`(v0) @signature `La/a/e/i;.h:()Lb/q;` @kind virtual;
  #L07de66.  v0:= temp @kind object;
  #L07de68.  call `close`(v0) @signature `Lb/q;.close:()V` @kind interface;
  #L07de6e.  return @kind void;
}

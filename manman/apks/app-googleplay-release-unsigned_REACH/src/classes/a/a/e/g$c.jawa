record `a.a.e.g$c` @kind class @AccessFlag  extends `a.a.b` @kind class, `a.a.e.h$b` @kind interface {
  `a.a.e.h` `a.a.e.g$c.a` @AccessFlag FINAL;
  `a.a.e.g` `a.a.e.g$c.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$c` v4 @kind this, `a.a.e.g` v5 @kind object, `a.a.e.h` v6 @kind object) @signature `La/a/e/g$c;.<init>:(La/a/e/g;La/a/e/h;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07e48c.  v4.`a.a.e.g$c.c` @type ^`a.a.e.g` := v5 @kind object;
  #L07e490.  v0:= "OkHttp %s" @kind object;
  #L07e494.  v1:= 1I;
  #L07e496.  v1:= new `java.lang.Object`[v1];
  #L07e49a.  v2:= 0I;
  #L07e49c.  v3:= v5.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07e4a0.  v1[v2]:= v3 @kind object;
  #L07e4a4.  call `<init>`(v4, v0, v1) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07e4aa.  v4.`a.a.e.g$c.a` @type ^`a.a.e.h` := v6 @kind object;
  #L07e4ae.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v6 @kind this, `a.a.e.n` v7 @kind object) @signature `La/a/e/g$c;.a:(La/a/e/n;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07e4c0.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07e4c4.  v1:= new `a.a.e.g$c$3`;
  #L07e4c8.  v2:= "OkHttp %s ACK Settings" @kind object;
  #L07e4cc.  v3:= 1I;
  #L07e4ce.  v3:= new `java.lang.Object`[v3];
  #L07e4d2.  v4:= 0I;
  #L07e4d4.  v5:= v6.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e4d8.  v5:= v5.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07e4dc.  v3[v4]:= v5 @kind object;
  #L07e4e0.  call `<init>`(v1, v6, v2, v3, v7) @signature `La/a/e/g$c$3;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/n;)V` @kind direct;
  #L07e4e6.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07e4ec.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v0 @kind this) @signature `La/a/e/g$c;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L07e500.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `La/a/e/g$c;.a:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L07e514.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v1 @kind this, `int` v2 , `int` v3 , `java.util.List` v4 @kind object) @signature `La/a/e/g$c;.a:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07e528.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e52c.  call `a`(v0, v3, v4) @signature `La/a/e/g;.a:(ILjava/util/List;)V` @kind virtual;
  #L07e532.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v4 @kind this, `int` v5 , `long` v6 ) @signature `La/a/e/g$c;.a:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07e544.  if v5 != 0 then goto L07e570;
  #L07e548.  v1:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e54c.  @monitorenter v1
  #Try_start0.  
  #L07e54e.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e552.  v2:= v0.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07e556.  v2:= v2 + v6 @kind long;
  #L07e558.  v0.`a.a.e.g.k` @type ^`long` := v2 @kind wide;
  #L07e55c.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e560.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L07e566.  @monitorexit v1
  #L07e568.  return @kind void;
  #L07e56a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e56c.  @monitorexit v1
  #Try_end0.  
  #L07e56e.  throw v0;
  #L07e570.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e574.  call temp:= `a`(v0, v5) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07e57a.  v1:= temp @kind object;
  #L07e57c.  if v1 == 0 then goto L07e568;
  #L07e580.  @monitorenter v1
  #Try_start1.  
  #L07e582.  call `a`(v1, v6) @signature `La/a/e/i;.a:(J)V` @kind virtual;
  #L07e588.  @monitorexit v1
  #L07e58a.  goto L07e568;
  #L07e58c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e58e.  @monitorexit v1
  #Try_end1.  
  #L07e590.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07e56a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07e58c;
}
procedure `void` `a`(`a.a.e.g$c` v1 @kind this, `int` v2 , `a.a.e.b` v3 @kind object) @signature `La/a/e/g$c;.a:(ILa/a/e/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07e5bc.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e5c0.  call temp:= `d`(v0, v2) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07e5c6.  v0:= temp;
  #L07e5c8.  if v0 == 0 then goto L07e5d8;
  #L07e5cc.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e5d0.  call `c`(v0, v2, v3) @signature `La/a/e/g;.c:(ILa/a/e/b;)V` @kind virtual;
  #L07e5d6.  return @kind void;
  #L07e5d8.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e5dc.  call temp:= `b`(v0, v2) @signature `La/a/e/g;.b:(I)La/a/e/i;` @kind virtual;
  #L07e5e2.  v0:= temp @kind object;
  #L07e5e4.  if v0 == 0 then goto L07e5d6;
  #L07e5e8.  call `c`(v0, v3) @signature `La/a/e/i;.c:(La/a/e/b;)V` @kind virtual;
  #L07e5ee.  goto L07e5d6;
}
procedure `void` `a`(`a.a.e.g$c` v5 @kind this, `int` v6 , `a.a.e.b` v7 @kind object, `b.f` v8 @kind object) @signature `La/a/e/g$c;.a:(ILa/a/e/b;Lb/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07e600.  call temp:= `g`(v8) @signature `Lb/f;.g:()I` @kind virtual;
  #L07e606.  v0:= temp;
  #L07e608.  if v0 <= 0 then goto L07e60c;
  #L07e60c.  v1:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e610.  @monitorenter v1
  #Try_start0.  
  #L07e612.  v0:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e616.  v0:= v0.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07e61a.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07e620.  v0:= temp @kind object;
  #L07e622.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e626.  v2:= v2.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07e62a.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07e630.  v2:= temp;
  #L07e632.  v2:= new `a.a.e.i`[v2];
  #L07e636.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07e63c.  v0:= temp @kind object;
  #L07e63e.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L07e642.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e646.  v3:= 1I;
  #L07e648.  v2.`a.a.e.g.h` @type ^`boolean` := v3 @kind boolean;
  #L07e64c.  @monitorexit v1
  #Try_end0.  
  #L07e64e.  v2:= length @variable v0;
  #L07e650.  v1:= 0I;
  #L07e652.  if v1 >= v2 then goto L07e69a;
  #L07e656.  v3:= v0[v1] @kind object;
  #L07e65a.  call temp:= `a`(v3) @signature `La/a/e/i;.a:()I` @kind virtual;
  #L07e660.  v4:= temp;
  #L07e662.  if v4 <= v6 then goto L07e68e;
  #L07e666.  call temp:= `c`(v3) @signature `La/a/e/i;.c:()Z` @kind virtual;
  #L07e66c.  v4:= temp;
  #L07e66e.  if v4 == 0 then goto L07e68e;
  #L07e672.  v4:= `@@a.a.e.b.e` @type ^`a.a.e.b` @kind object;
  #L07e676.  call `c`(v3, v4) @signature `La/a/e/i;.c:(La/a/e/b;)V` @kind virtual;
  #L07e67c.  v4:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e680.  call temp:= `a`(v3) @signature `La/a/e/i;.a:()I` @kind virtual;
  #L07e686.  v3:= temp;
  #L07e688.  call temp:= `b`(v4, v3) @signature `La/a/e/g;.b:(I)La/a/e/i;` @kind virtual;
  #L07e68e.  v1:= v1 + 1;
  #L07e692.  goto L07e652;
  #L07e694.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L07e696.  @monitorexit v1
  #Try_end1.  
  #L07e698.  throw v0;
  #L07e69a.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07e694;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07e694;
}
procedure `void` `a`(`a.a.e.g$c` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `La/a/e/g$c;.a:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07e6c0.  if v4 == 0 then goto L07e6dc;
  #L07e6c4.  v0:= v3.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e6c8.  call temp:= `c`(v0, v5) @signature `La/a/e/g;.c:(I)La/a/e/l;` @kind virtual;
  #L07e6ce.  v0:= temp @kind object;
  #L07e6d0.  if v0 == 0 then goto L07e6da;
  #L07e6d4.  call `b`(v0) @signature `La/a/e/l;.b:()V` @kind virtual;
  #L07e6da.  return @kind void;
  #L07e6dc.  v0:= v3.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e6e0.  v1:= 1I;
  #L07e6e2.  v2:= 0I;
  #L07e6e4.  call `a`(v0, v1, v5, v6, v2) @signature `La/a/e/g;.a:(ZIILa/a/e/l;)V` @kind virtual;
  #L07e6ea.  goto L07e6da;
}
procedure `void` `a`(`a.a.e.g$c` v8 @kind this, `boolean` v9 , `int` v10 , `int` v11 , `java.util.List` v12 @kind object) @signature `La/a/e/g$c;.a:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07e6fc.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e700.  call temp:= `d`(v0, v10) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07e706.  v0:= temp;
  #L07e708.  if v0 == 0 then goto L07e718;
  #L07e70c.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e710.  call `a`(v0, v10, v12, v9) @signature `La/a/e/g;.a:(ILjava/util/List;Z)V` @kind virtual;
  #L07e716.  return @kind void;
  #L07e718.  v6:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e71c.  @monitorenter v6
  #Try_start0.  
  #L07e71e.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e722.  v0:= v0.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #L07e726.  if v0 == 0 then goto L07e734;
  #L07e72a.  @monitorexit v6
  #L07e72c.  goto L07e716;
  #L07e72e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e730.  @monitorexit v6
  #Try_end0.  
  #L07e732.  throw v0;
  #Try_start1.  
  #L07e734.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e738.  call temp:= `a`(v0, v10) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07e73e.  v0:= temp @kind object;
  #L07e740.  if v0 != 0 then goto L07e7de;
  #L07e744.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e748.  v0:= v0.`a.a.e.g.f` @type ^`int`;
  #L07e74c.  if v10 > v0 then goto L07e754;
  #L07e750.  @monitorexit v6
  #L07e752.  goto L07e716;
  #L07e754.  v0:= v10 %% 2;
  #L07e758.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e75c.  v1:= v1.`a.a.e.g.g` @type ^`int`;
  #L07e760.  v1:= v1 %% 2;
  #L07e764.  if v0 != v1 then goto L07e76c;
  #L07e768.  @monitorexit v6
  #L07e76a.  goto L07e716;
  #L07e76c.  v0:= new `a.a.e.i`;
  #L07e770.  v2:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e774.  v3:= 0I;
  #L07e776.  v1:= v10;
  #L07e778.  v4:= v9;
  #L07e77a.  v5:= v12 @kind object;
  #L07e77c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/i;.<init>:(ILa/a/e/g;ZZLjava/util/List;)V` @kind direct;
  #L07e782.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e786.  v1.`a.a.e.g.f` @type ^`int` := v10;
  #L07e78a.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e78e.  v1:= v1.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07e792.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e798.  v2:= temp @kind object;
  #L07e79a.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07e7a0.  v1:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07e7a4.  v2:= new `a.a.e.g$c$1`;
  #L07e7a8.  v3:= "OkHttp %s stream %d" @kind object;
  #L07e7ac.  v4:= 2I;
  #L07e7ae.  v4:= new `java.lang.Object`[v4];
  #L07e7b2.  v5:= 0I;
  #L07e7b4.  v7:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e7b8.  v7:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07e7bc.  v4[v5]:= v7 @kind object;
  #L07e7c0.  v5:= 1I;
  #L07e7c2.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e7c8.  v7:= temp @kind object;
  #L07e7ca.  v4[v5]:= v7 @kind object;
  #L07e7ce.  call `<init>`(v2, v8, v3, v4, v0) @signature `La/a/e/g$c$1;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/i;)V` @kind direct;
  #L07e7d4.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07e7da.  @monitorexit v6
  #L07e7dc.  goto L07e716;
  #L07e7de.  @monitorexit v6
  #Try_end1.  
  #L07e7e0.  call `a`(v0, v12) @signature `La/a/e/i;.a:(Ljava/util/List;)V` @kind virtual;
  #L07e7e6.  if v9 == 0 then goto L07e716;
  #L07e7ea.  call `i`(v0) @signature `La/a/e/i;.i:()V` @kind virtual;
  #L07e7f0.  goto L07e716;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07e72e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07e72e;
}
procedure `void` `a`(`a.a.e.g$c` v2 @kind this, `boolean` v3 , `int` v4 , `b.e` v5 @kind object, `int` v6 ) @signature `La/a/e/g$c;.a:(ZILb/e;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07e818.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e81c.  call temp:= `d`(v0, v4) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07e822.  v0:= temp;
  #L07e824.  if v0 == 0 then goto L07e834;
  #L07e828.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e82c.  call `a`(v0, v4, v5, v6, v3) @signature `La/a/e/g;.a:(ILb/e;IZ)V` @kind virtual;
  #L07e832.  return @kind void;
  #L07e834.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e838.  call temp:= `a`(v0, v4) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07e83e.  v0:= temp @kind object;
  #L07e840.  if v0 != 0 then goto L07e85c;
  #L07e844.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e848.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #L07e84c.  call `a`(v0, v4, v1) @signature `La/a/e/g;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07e852.  v0:= (`long`) v6 @kind i2l;
  #L07e854.  call `g`(v5, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07e85a.  goto L07e832;
  #L07e85c.  call `a`(v0, v5, v6) @signature `La/a/e/i;.a:(Lb/e;I)V` @kind virtual;
  #L07e862.  if v3 == 0 then goto L07e832;
  #L07e866.  call `i`(v0) @signature `La/a/e/i;.i:()V` @kind virtual;
  #L07e86c.  goto L07e832;
}
procedure `void` `a`(`a.a.e.g$c` v13 @kind this, `boolean` v14 , `a.a.e.n` v15 @kind object) @signature `La/a/e/g$c;.a:(ZLa/a/e/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L07e880.  v6:= 0L;
  #L07e884.  v1:= 0I;
  #L07e886.  v0:= 0I;
  #L07e888.  v8:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e88c.  @monitorenter v8
  #Try_start0.  
  #L07e88e.  v2:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e892.  v2:= v2.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07e896.  call temp:= `d`(v2) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07e89c.  v2:= temp;
  #L07e89e.  if v14 == 0 then goto L07e8b0;
  #L07e8a2.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e8a6.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07e8aa.  call `a`(v3) @signature `La/a/e/n;.a:()V` @kind virtual;
  #L07e8b0.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e8b4.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07e8b8.  call `a`(v3, v15) @signature `La/a/e/n;.a:(La/a/e/n;)V` @kind virtual;
  #L07e8be.  call `a`(v13, v15) @signature `La/a/e/g$c;.a:(La/a/e/n;)V` @kind direct;
  #L07e8c4.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e8c8.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07e8cc.  call temp:= `d`(v3) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07e8d2.  v3:= temp;
  #L07e8d4.  v4:= -1I;
  #L07e8d6.  if v3 == v4 then goto L07e9b6;
  #L07e8da.  if v3 == v2 then goto L07e9b6;
  #L07e8de.  v2:= v3 - v2 @kind int;
  #L07e8e2.  v2:= (`long`) v2 @kind i2l;
  #L07e8e4.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e8e8.  v4:= v4.`a.a.e.g.n` @type ^`boolean` @kind boolean;
  #L07e8ec.  if v4 != 0 then goto L07e904;
  #L07e8f0.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e8f4.  call `a`(v4, v2) @signature `La/a/e/g;.a:(J)V` @kind virtual;
  #L07e8fa.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e8fe.  v5:= 1I;
  #L07e900.  v4.`a.a.e.g.n` @type ^`boolean` := v5 @kind boolean;
  #L07e904.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e908.  v4:= v4.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07e90c.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L07e912.  v4:= temp;
  #L07e914.  if v4 != 0 then goto L07e9b0;
  #L07e918.  v0:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e91c.  v0:= v0.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07e920.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07e926.  v0:= temp @kind object;
  #L07e928.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e92c.  v4:= v4.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07e930.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07e936.  v4:= temp;
  #L07e938.  v4:= new `a.a.e.i`[v4];
  #L07e93c.  call temp:= `toArray`(v0, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07e942.  v0:= temp @kind object;
  #L07e944.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L07e948.  v4:= v2 @kind wide;
  #L07e94a.  v2:= v0 @kind object;
  #L07e94c.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07e950.  v3:= new `a.a.e.g$c$2`;
  #L07e954.  v9:= "OkHttp %s settings" @kind object;
  #L07e958.  v10:= 1I;
  #L07e95a.  v10:= new `java.lang.Object`[v10];
  #L07e95e.  v11:= 0I;
  #L07e960.  v12:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07e964.  v12:= v12.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07e968.  v10[v11]:= v12 @kind object;
  #L07e96c.  call `<init>`(v3, v13, v9, v10) @signature `La/a/e/g$c$2;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07e972.  call `execute`(v0, v3) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07e978.  @monitorexit v8
  #Try_end0.  
  #L07e97a.  if v2 == 0 then goto L07e9ae;
  #L07e97e.  v0:= lcmp(v4, v6);
  #L07e982.  if v0 == 0 then goto L07e9ae;
  #L07e986.  v3:= length @variable v2;
  #L07e988.  v0:= v1;
  #L07e98a.  if v0 >= v3 then goto L07e9ae;
  #L07e98e.  v1:= v2[v0] @kind object;
  #L07e992.  @monitorenter v1
  #Try_start1.  
  #L07e994.  call `a`(v1, v4) @signature `La/a/e/i;.a:(J)V` @kind virtual;
  #L07e99a.  @monitorexit v1
  #Try_end1.  
  #L07e99c.  v0:= v0 + 1;
  #L07e9a0.  goto L07e98a;
  #L07e9a2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L07e9a4.  @monitorexit v8
  #Try_end2.  
  #L07e9a6.  throw v0;
  #L07e9a8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L07e9aa.  @monitorexit v1
  #Try_end3.  
  #L07e9ac.  throw v0;
  #L07e9ae.  return @kind void;
  #L07e9b0.  v4:= v2 @kind wide;
  #L07e9b2.  v2:= v0 @kind object;
  #L07e9b4.  goto L07e94c;
  #L07e9b6.  v2:= v0 @kind object;
  #L07e9b8.  v4:= v6 @kind wide;
  #L07e9ba.  goto L07e94c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07e9a2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07e9a8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07e9a2;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07e9a8;
}
procedure `void` `b`(`a.a.e.g$c` v5 @kind this) @signature `La/a/e/g$c;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07e9f4.  v0:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #L07e9f8.  v2:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #Try_start0.  
  #L07e9fc.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07ea00.  call `a`(v1, v5) @signature `La/a/e/h;.a:(La/a/e/h$b;)V` @kind virtual;
  #L07ea06.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07ea0a.  v3:= 0I;
  #L07ea0c.  call temp:= `a`(v1, v3, v5) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @kind virtual;
  #L07ea12.  v1:= temp;
  #L07ea14.  if v1 != 0 then goto L07ea06;
  #L07ea18.  v0:= `@@a.a.e.b.a` @type ^`a.a.e.b` @kind object;
  #L07ea1c.  v1:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #Try_end0.  
  #Try_start1.  
  #L07ea20.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07ea24.  call `a`(v2, v0, v1) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end1.  
  #L07ea2a.  v0:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07ea2e.  call `a`(v0) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07ea34.  return @kind void;
  #L07ea36.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L07ea38.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #Try_end2.  
  #Try_start3.  
  #L07ea3c.  v0:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #Try_end3.  
  #Try_start4.  
  #L07ea40.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07ea44.  call `a`(v2, v1, v0) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end4.  
  #L07ea4a.  v0:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07ea4e.  call `a`(v0) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07ea54.  goto L07ea34;
  #L07ea56.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07ea58.  v4:= v1 @kind object;
  #L07ea5a.  v1:= v0 @kind object;
  #L07ea5c.  v0:= v4 @kind object;
  #Try_start5.  
  #L07ea5e.  v3:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07ea62.  call `a`(v3, v1, v2) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end5.  
  #L07ea68.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07ea6c.  call `a`(v1) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07ea72.  throw v0;
  #L07ea74.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L07ea76.  goto L07ea68;
  #L07ea78.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07ea7a.  goto L07ea5e;
  #L07ea7c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07ea7e.  goto L07ea4a;
  #L07ea80.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07ea82.  goto L07ea2a;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07ea36;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07ea56;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L07ea80;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07ea56;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07ea78;
  catch `java.io.IOException` @[Try_start4..Try_end4] goto L07ea7c;
  catch `java.io.IOException` @[Try_start5..Try_end5] goto L07ea74;
}

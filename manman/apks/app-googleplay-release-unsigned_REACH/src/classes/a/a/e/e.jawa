record `a.a.e.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `b.f` `@@a.a.e.e.a` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@a.a.e.e.b` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@a.a.e.e.c` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@a.a.e.e.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L07d380.  v7:= 8I;
  #L07d384.  v10:= 4I;
  #L07d386.  v9:= 3I;
  #L07d388.  v6:= 1I;
  #L07d38a.  v1:= 0I;
  #L07d38c.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L07d390.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07d396.  v0:= temp @kind object;
  #L07d398.  `@@a.a.e.e.a` @type ^`b.f` := v0 @kind object;
  #L07d39c.  v0:= 10I;
  #L07d3a0.  v0:= new `java.lang.String`[v0];
  #L07d3a4.  v2:= "DATA" @kind object;
  #L07d3a8.  v0[v1]:= v2 @kind object;
  #L07d3ac.  v2:= "HEADERS" @kind object;
  #L07d3b0.  v0[v6]:= v2 @kind object;
  #L07d3b4.  v2:= 2I;
  #L07d3b6.  v3:= "PRIORITY" @kind object;
  #L07d3ba.  v0[v2]:= v3 @kind object;
  #L07d3be.  v2:= "RST_STREAM" @kind object;
  #L07d3c2.  v0[v9]:= v2 @kind object;
  #L07d3c6.  v2:= "SETTINGS" @kind object;
  #L07d3ca.  v0[v10]:= v2 @kind object;
  #L07d3ce.  v2:= 5I;
  #L07d3d0.  v3:= "PUSH_PROMISE" @kind object;
  #L07d3d4.  v0[v2]:= v3 @kind object;
  #L07d3d8.  v2:= 6I;
  #L07d3da.  v3:= "PING" @kind object;
  #L07d3de.  v0[v2]:= v3 @kind object;
  #L07d3e2.  v2:= 7I;
  #L07d3e4.  v3:= "GOAWAY" @kind object;
  #L07d3e8.  v0[v2]:= v3 @kind object;
  #L07d3ec.  v2:= "WINDOW_UPDATE" @kind object;
  #L07d3f0.  v0[v7]:= v2 @kind object;
  #L07d3f4.  v2:= 9I;
  #L07d3f8.  v3:= "CONTINUATION" @kind object;
  #L07d3fc.  v0[v2]:= v3 @kind object;
  #L07d400.  `@@a.a.e.e.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L07d404.  v0:= 64I;
  #L07d408.  v0:= new `java.lang.String`[v0];
  #L07d40c.  `@@a.a.e.e.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L07d410.  v0:= 256I;
  #L07d414.  v0:= new `java.lang.String`[v0];
  #L07d418.  `@@a.a.e.e.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L07d41c.  v0:= v1;
  #L07d41e.  v2:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07d422.  v2:= length @variable v2;
  #L07d424.  if v0 >= v2 then goto L07d462;
  #L07d428.  v2:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07d42c.  v3:= "%8s" @kind object;
  #L07d430.  v4:= new `java.lang.Object`[v6];
  #L07d434.  call temp:= `toBinaryString`(v0) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L07d43a.  v5:= temp @kind object;
  #L07d43c.  v4[v1]:= v5 @kind object;
  #L07d440.  call temp:= `a`(v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07d446.  v3:= temp @kind object;
  #L07d448.  v4:= 32I;
  #L07d44c.  v5:= 48I;
  #L07d450.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L07d456.  v3:= temp @kind object;
  #L07d458.  v2[v0]:= v3 @kind object;
  #L07d45c.  v0:= v0 + 1;
  #L07d460.  goto L07d41e;
  #L07d462.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d466.  v2:= "" @kind object;
  #L07d46a.  v0[v1]:= v2 @kind object;
  #L07d46e.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d472.  v2:= "END_STREAM" @kind object;
  #L07d476.  v0[v6]:= v2 @kind object;
  #L07d47a.  v3:= new `int`[v6];
  #L07d47e.  v3[v1]:= v6;
  #L07d482.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d486.  v2:= "PADDED" @kind object;
  #L07d48a.  v0[v7]:= v2 @kind object;
  #L07d48e.  v2:= length @variable v3;
  #L07d490.  v0:= v1;
  #L07d492.  if v0 >= v2 then goto L07d4da;
  #L07d496.  v4:= v3[v0];
  #L07d49a.  v5:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d49e.  v6:= v4 ^| 8;
  #L07d4a2.  v7:= new `java.lang.StringBuilder`;
  #L07d4a6.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07d4ac.  v8:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d4b0.  v4:= v8[v4] @kind object;
  #L07d4b4.  call temp:= `append`(v7, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d4ba.  v4:= temp @kind object;
  #L07d4bc.  v7:= "|PADDED" @kind object;
  #L07d4c0.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d4c6.  v4:= temp @kind object;
  #L07d4c8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07d4ce.  v4:= temp @kind object;
  #L07d4d0.  v5[v6]:= v4 @kind object;
  #L07d4d4.  v0:= v0 + 1;
  #L07d4d8.  goto L07d492;
  #L07d4da.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d4de.  v2:= "END_HEADERS" @kind object;
  #L07d4e2.  v0[v10]:= v2 @kind object;
  #L07d4e6.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d4ea.  v2:= 32I;
  #L07d4ee.  v4:= "PRIORITY" @kind object;
  #L07d4f2.  v0[v2]:= v4 @kind object;
  #L07d4f6.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d4fa.  v2:= 36I;
  #L07d4fe.  v4:= "END_HEADERS|PRIORITY" @kind object;
  #L07d502.  v0[v2]:= v4 @kind object;
  #L07d506.  v4:= new `int`[v9];
  #L07d50a.  goto L07d608;
  #L07d510.  v5:= length @variable v4;
  #L07d512.  v2:= v1;
  #L07d514.  if v2 >= v5 then goto L07d5da;
  #L07d518.  v6:= v4[v2];
  #L07d51c.  v7:= length @variable v3;
  #L07d51e.  v0:= v1;
  #L07d520.  if v0 >= v7 then goto L07d5d2;
  #L07d524.  v8:= v3[v0];
  #L07d528.  v9:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d52c.  v10:= v8 ^| v6 @kind int;
  #L07d530.  v11:= new `java.lang.StringBuilder`;
  #L07d534.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07d53a.  v12:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d53e.  v12:= v12[v8] @kind object;
  #L07d542.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d548.  v11:= temp @kind object;
  #L07d54a.  v12:= 124I;
  #L07d54e.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d554.  v11:= temp @kind object;
  #L07d556.  v12:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d55a.  v12:= v12[v6] @kind object;
  #L07d55e.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d564.  v11:= temp @kind object;
  #L07d566.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07d56c.  v11:= temp @kind object;
  #L07d56e.  v9[v10]:= v11 @kind object;
  #L07d572.  v9:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d576.  v10:= v8 ^| v6 @kind int;
  #L07d57a.  v10:= v10 ^| 8;
  #L07d57e.  v11:= new `java.lang.StringBuilder`;
  #L07d582.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07d588.  v12:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d58c.  v8:= v12[v8] @kind object;
  #L07d590.  call temp:= `append`(v11, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d596.  v8:= temp @kind object;
  #L07d598.  v11:= 124I;
  #L07d59c.  call temp:= `append`(v8, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d5a2.  v8:= temp @kind object;
  #L07d5a4.  v11:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d5a8.  v11:= v11[v6] @kind object;
  #L07d5ac.  call temp:= `append`(v8, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d5b2.  v8:= temp @kind object;
  #L07d5b4.  v11:= "|PADDED" @kind object;
  #L07d5b8.  call temp:= `append`(v8, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d5be.  v8:= temp @kind object;
  #L07d5c0.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07d5c6.  v8:= temp @kind object;
  #L07d5c8.  v9[v10]:= v8 @kind object;
  #L07d5cc.  v0:= v0 + 1;
  #L07d5d0.  goto L07d520;
  #L07d5d2.  v0:= v2 + 1;
  #L07d5d6.  v2:= v0;
  #L07d5d8.  goto L07d514;
  #L07d5da.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d5de.  v0:= length @variable v0;
  #L07d5e0.  if v1 >= v0 then goto L07d606;
  #L07d5e4.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d5e8.  v0:= v0[v1] @kind object;
  #L07d5ec.  if v0 != 0 then goto L07d600;
  #L07d5f0.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d5f4.  v2:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07d5f8.  v2:= v2[v1] @kind object;
  #L07d5fc.  v0[v1]:= v2 @kind object;
  #L07d600.  v1:= v1 + 1;
  #L07d604.  goto L07d5da;
  #L07d606.  return @kind void;
  #L07d608.  v4:= (4I, 32I, 36I) @kind object;
  #L07d61b.  goto L07d510;
}
procedure `void` `<init>`(`a.a.e.e` v0 @kind this) @signature `La/a/e/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L07d62c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07d632.  return @kind void;
}
procedure `java.lang.IllegalArgumentException` `a`(`java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `La/a/e/e;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L07d644.  v0:= new `java.lang.IllegalArgumentException`;
  #L07d648.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07d64e.  v1:= temp @kind object;
  #L07d650.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07d656.  throw v0;
}
procedure `java.lang.String` `a`(`byte` v3 , `byte` v4 ) @signature `La/a/e/e;.a:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L07d668.  if v4 != 0 then goto L07d672;
  #L07d66c.  v0:= "" @kind object;
  #L07d670.  return v0 @kind object;
  #L07d672.  goto L07d6f4;
  #L07d678.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d67c.  v0:= length @variable v0;
  #L07d67e.  if v4 >= v0 then goto L07d6ca;
  #L07d682.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07d686.  v0:= v0[v4] @kind object;
  #L07d68a.  v1:= 5I;
  #L07d68c.  if v3 != v1 then goto L07d6d4;
  #L07d690.  v1:= v4 ^& 4;
  #L07d694.  if v1 == 0 then goto L07d6d4;
  #L07d698.  v1:= "HEADERS" @kind object;
  #L07d69c.  v2:= "PUSH_PROMISE" @kind object;
  #L07d6a0.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L07d6a6.  v0:= temp @kind object;
  #L07d6a8.  goto L07d670;
  #L07d6aa.  v0:= 1I;
  #L07d6ac.  if v4 != v0 then goto L07d6b6;
  #L07d6b0.  v0:= "ACK" @kind object;
  #L07d6b4.  goto L07d670;
  #L07d6b6.  v0:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07d6ba.  v0:= v0[v4] @kind object;
  #L07d6be.  goto L07d670;
  #L07d6c0.  v0:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07d6c4.  v0:= v0[v4] @kind object;
  #L07d6c8.  goto L07d670;
  #L07d6ca.  v0:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07d6ce.  v0:= v0[v4] @kind object;
  #L07d6d2.  goto L07d68a;
  #L07d6d4.  if v3 != 0 then goto L07d670;
  #L07d6d8.  v1:= v4 ^& 32;
  #L07d6dc.  if v1 == 0 then goto L07d670;
  #L07d6e0.  v1:= "PRIORITY" @kind object;
  #L07d6e4.  v2:= "COMPRESSED" @kind object;
  #L07d6e8.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L07d6ee.  v0:= temp @kind object;
  #L07d6f0.  goto L07d670;
  #L07d6f2.  
  #L07d6f4.  switch v3
                  | 2 => goto L07d6c0
                  | 3 => goto L07d6c0
                  | 4 => goto L07d6aa
                  | 5 => goto L07d678
                  | 6 => goto L07d6aa
                  | 7 => goto L07d6c0
                  | 8 => goto L07d6c0
                  | else => goto L07d678;
}
procedure `java.lang.String` `a`(`boolean` v7 , `int` v8 , `int` v9 , `byte` v10 , `byte` v11 ) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07d728.  v6:= 1I;
  #L07d72a.  v5:= 0I;
  #L07d72c.  v0:= `@@a.a.e.e.d` @type ^`java.lang.String`[] @kind object;
  #L07d730.  v0:= length @variable v0;
  #L07d732.  if v10 >= v0 then goto L07d78c;
  #L07d736.  v0:= `@@a.a.e.e.d` @type ^`java.lang.String`[] @kind object;
  #L07d73a.  v0:= v0[v10] @kind object;
  #L07d73e.  call temp:= `a`(v10, v11) @signature `La/a/e/e;.a:(BB)Ljava/lang/String;` @kind static;
  #L07d744.  v2:= temp @kind object;
  #L07d746.  v3:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L07d74a.  v1:= 5I;
  #L07d74c.  v4:= new `java.lang.Object`[v1];
  #L07d750.  if v7 == 0 then goto L07d7aa;
  #L07d754.  v1:= "<<" @kind object;
  #L07d758.  v4[v5]:= v1 @kind object;
  #L07d75c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07d762.  v1:= temp @kind object;
  #L07d764.  v4[v6]:= v1 @kind object;
  #L07d768.  v1:= 2I;
  #L07d76a.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07d770.  v5:= temp @kind object;
  #L07d772.  v4[v1]:= v5 @kind object;
  #L07d776.  v1:= 3I;
  #L07d778.  v4[v1]:= v0 @kind object;
  #L07d77c.  v0:= 4I;
  #L07d77e.  v4[v0]:= v2 @kind object;
  #L07d782.  call temp:= `a`(v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07d788.  v0:= temp @kind object;
  #L07d78a.  return v0 @kind object;
  #L07d78c.  v0:= "0x%02x" @kind object;
  #L07d790.  v1:= new `java.lang.Object`[v6];
  #L07d794.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L07d79a.  v2:= temp @kind object;
  #L07d79c.  v1[v5]:= v2 @kind object;
  #L07d7a0.  call temp:= `a`(v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07d7a6.  v0:= temp @kind object;
  #L07d7a8.  goto L07d73e;
  #L07d7aa.  v1:= ">>" @kind object;
  #L07d7ae.  goto L07d758;
}
procedure `java.io.IOException` `b`(`java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L07d7c0.  v0:= new `java.io.IOException`;
  #L07d7c4.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07d7ca.  v1:= temp @kind object;
  #L07d7cc.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07d7d2.  throw v0;
}

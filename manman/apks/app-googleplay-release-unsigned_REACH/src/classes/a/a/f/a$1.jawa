record `a.a.f.a$1` @kind class @AccessFlag FINAL extends `a.a.f.a` @kind interface {
}
procedure `void` `<init>`(`a.a.f.a$1` v0 @kind this) @signature `La/a/f/a$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L082d00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L082d06.  return @kind void;
}
procedure `void` `a`(`a.a.f.a$1` v3 @kind this, `java.io.File` v4 @kind object) @signature `La/a/f/a$1;.a:(Ljava/io/File;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L082d18.  call temp:= `delete`(v4) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L082d1e.  v0:= temp;
  #L082d20.  if v0 != 0 then goto L082d62;
  #L082d24.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L082d2a.  v0:= temp;
  #L082d2c.  if v0 == 0 then goto L082d62;
  #L082d30.  v0:= new `java.io.IOException`;
  #L082d34.  v1:= new `java.lang.StringBuilder`;
  #L082d38.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L082d3e.  v2:= "failed to delete " @kind object;
  #L082d42.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082d48.  v1:= temp @kind object;
  #L082d4a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082d50.  v1:= temp @kind object;
  #L082d52.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L082d58.  v1:= temp @kind object;
  #L082d5a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L082d60.  throw v0;
  #L082d62.  return @kind void;
}
procedure `void` `a`(`a.a.f.a$1` v3 @kind this, `java.io.File` v4 @kind object, `java.io.File` v5 @kind object) @signature `La/a/f/a$1;.a:(Ljava/io/File;Ljava/io/File;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L082d74.  call `a`(v3, v5) @signature `La/a/f/a$1;.a:(Ljava/io/File;)V` @kind virtual;
  #L082d7a.  call temp:= `renameTo`(v4, v5) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L082d80.  v0:= temp;
  #L082d82.  if v0 != 0 then goto L082dcc;
  #L082d86.  v0:= new `java.io.IOException`;
  #L082d8a.  v1:= new `java.lang.StringBuilder`;
  #L082d8e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L082d94.  v2:= "failed to rename " @kind object;
  #L082d98.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082d9e.  v1:= temp @kind object;
  #L082da0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082da6.  v1:= temp @kind object;
  #L082da8.  v2:= " to " @kind object;
  #L082dac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082db2.  v1:= temp @kind object;
  #L082db4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082dba.  v1:= temp @kind object;
  #L082dbc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L082dc2.  v1:= temp @kind object;
  #L082dc4.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L082dca.  throw v0;
  #L082dcc.  return @kind void;
}
procedure `boolean` `b`(`a.a.f.a$1` v1 @kind this, `java.io.File` v2 @kind object) @signature `La/a/f/a$1;.b:(Ljava/io/File;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L082de0.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L082de6.  v0:= temp;
  #L082de8.  return v0;
}
procedure `long` `c`(`a.a.f.a$1` v2 @kind this, `java.io.File` v3 @kind object) @signature `La/a/f/a$1;.c:(Ljava/io/File;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L082dfc.  call temp:= `length`(v3) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L082e02.  v0:= temp @kind wide;
  #L082e04.  return v0 @kind wide;
}

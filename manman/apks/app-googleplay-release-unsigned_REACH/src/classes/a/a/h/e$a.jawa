record `a.a.h.e$a` @kind class @AccessFlag FINAL extends `a.a.h.e` @kind class {
  `javax.net.ssl.X509TrustManager` `a.a.h.e$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `a.a.h.e$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.h.e$a` v0 @kind this, `javax.net.ssl.X509TrustManager` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `La/a/h/e$a;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L0853dc.  call `<init>`(v0) @signature `La/a/h/e;.<init>:()V` @kind direct;
  #L0853e2.  v0.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L0853e6.  v0.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` := v1 @kind object;
  #L0853ea.  return @kind void;
}
procedure `java.security.cert.X509Certificate` `a`(`a.a.h.e$a` v5 @kind this, `java.security.cert.X509Certificate` v6 @kind object) @signature `La/a/h/e$a;.a:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0853fc.  v1:= 0I;
  #Try_start0.  
  #L0853fe.  v0:= v5.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L085402.  v2:= v5.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L085406.  v3:= 1I;
  #L085408.  v3:= new `java.lang.Object`[v3];
  #L08540c.  v4:= 0I;
  #L08540e.  v3[v4]:= v6 @kind object;
  #L085412.  call temp:= `invoke`(v0, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L085418.  v0:= temp @kind object;
  #L08541a.  v0:= (`java.security.cert.TrustAnchor`) v0 @kind object;
  #L08541e.  if v0 == 0 then goto L08542c;
  #L085422.  call temp:= `getTrustedCert`(v0) @signature `Ljava/security/cert/TrustAnchor;.getTrustedCert:()Ljava/security/cert/X509Certificate;` @kind virtual;
  #Try_end0.  
  #L085428.  v0:= temp @kind object;
  #L08542a.  return v0 @kind object;
  #L08542c.  v0:= v1 @kind object;
  #L08542e.  goto L08542a;
  #L085430.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L085432.  v0:= new `java.lang.AssertionError`;
  #L085436.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08543c.  throw v0;
  #L08543e.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L085440.  v0:= v1 @kind object;
  #L085442.  goto L08542a;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L085430;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L08543e;
}
procedure `boolean` `equals`(`a.a.h.e$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `La/a/h/e$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L085464.  v0:= 1I;
  #L085466.  v1:= 0I;
  #L085468.  if v5 != v4 then goto L08546e;
  #L08546c.  return v0;
  #L08546e.  v2:= instanceof @variable v5 @type ^`a.a.h.e$a` @kind boolean;
  #L085472.  if v2 != 0 then goto L08547a;
  #L085476.  v0:= v1;
  #L085478.  goto L08546c;
  #L08547a.  v5:= (`a.a.h.e$a`) v5 @kind object;
  #L08547e.  v2:= v4.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L085482.  v3:= v5.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L085486.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08548c.  v2:= temp;
  #L08548e.  if v2 == 0 then goto L0854a6;
  #L085492.  v2:= v4.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L085496.  v3:= v5.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L08549a.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/reflect/Method;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0854a0.  v2:= temp;
  #L0854a2.  if v2 != 0 then goto L08546c;
  #L0854a6.  v0:= v1;
  #L0854a8.  goto L08546c;
}
procedure `int` `hashCode`(`a.a.h.e$a` v2 @kind this) @signature `La/a/h/e$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0854bc.  v0:= v2.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L0854c0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0854c6.  v0:= temp;
  #L0854c8.  v1:= v2.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L0854cc.  call temp:= `hashCode`(v1) @signature `Ljava/lang/reflect/Method;.hashCode:()I` @kind virtual;
  #L0854d2.  v1:= temp;
  #L0854d4.  v1:= v1 * 31;
  #L0854d8.  v0:= v0 + v1 @kind int;
  #L0854da.  return v0;
}

record `a.a.a.c$a` @kind class @AccessFlag PUBLIC {
  `long` `a.a.a.c$a.a` @AccessFlag FINAL;
  `a.x` `a.a.a.c$a.b` @AccessFlag FINAL;
  `a.z` `a.a.a.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `a.a.a.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `a.a.a.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `a.a.a.c$a.h` @AccessFlag PRIVATE;
  `long` `a.a.a.c$a.i` @AccessFlag PRIVATE;
  `long` `a.a.a.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.k` @AccessFlag PRIVATE;
  `int` `a.a.a.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.a.c$a` v7 @kind this, `long` v8 , `a.x` v10 @kind object, `a.z` v11 @kind object) @signature `La/a/a/c$a;.<init>:(JLa/x;La/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L075b68.  v6:= -1I;
  #L075b6a.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L075b70.  v7.`a.a.a.c$a.l` @type ^`int` := v6;
  #L075b74.  v7.`a.a.a.c$a.a` @type ^`long` := v8 @kind wide;
  #L075b78.  v7.`a.a.a.c$a.b` @type ^`a.x` := v10 @kind object;
  #L075b7c.  v7.`a.a.a.c$a.c` @type ^`a.z` := v11 @kind object;
  #L075b80.  if v11 == 0 then goto L075c5c;
  #L075b84.  call temp:= `i`(v11) @signature `La/z;.i:()J` @kind virtual;
  #L075b8a.  v0:= temp @kind wide;
  #L075b8c.  v7.`a.a.a.c$a.i` @type ^`long` := v0 @kind wide;
  #L075b90.  call temp:= `j`(v11) @signature `La/z;.j:()J` @kind virtual;
  #L075b96.  v0:= temp @kind wide;
  #L075b98.  v7.`a.a.a.c$a.j` @type ^`long` := v0 @kind wide;
  #L075b9c.  call temp:= `e`(v11) @signature `La/z;.e:()La/q;` @kind virtual;
  #L075ba2.  v1:= temp @kind object;
  #L075ba4.  v0:= 0I;
  #L075ba6.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L075bac.  v2:= temp;
  #L075bae.  if v0 >= v2 then goto L075c5c;
  #L075bb2.  call temp:= `a`(v1, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L075bb8.  v3:= temp @kind object;
  #L075bba.  call temp:= `b`(v1, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L075bc0.  v4:= temp @kind object;
  #L075bc2.  v5:= "Date" @kind object;
  #L075bc6.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L075bcc.  v5:= temp;
  #L075bce.  if v5 == 0 then goto L075be8;
  #L075bd2.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L075bd8.  v3:= temp @kind object;
  #L075bda.  v7.`a.a.a.c$a.d` @type ^`java.util.Date` := v3 @kind object;
  #L075bde.  v7.`a.a.a.c$a.e` @type ^`java.lang.String` := v4 @kind object;
  #L075be2.  v0:= v0 + 1;
  #L075be6.  goto L075bae;
  #L075be8.  v5:= "Expires" @kind object;
  #L075bec.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L075bf2.  v5:= temp;
  #L075bf4.  if v5 == 0 then goto L075c06;
  #L075bf8.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L075bfe.  v3:= temp @kind object;
  #L075c00.  v7.`a.a.a.c$a.h` @type ^`java.util.Date` := v3 @kind object;
  #L075c04.  goto L075be2;
  #L075c06.  v5:= "Last-Modified" @kind object;
  #L075c0a.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L075c10.  v5:= temp;
  #L075c12.  if v5 == 0 then goto L075c28;
  #L075c16.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L075c1c.  v3:= temp @kind object;
  #L075c1e.  v7.`a.a.a.c$a.f` @type ^`java.util.Date` := v3 @kind object;
  #L075c22.  v7.`a.a.a.c$a.g` @type ^`java.lang.String` := v4 @kind object;
  #L075c26.  goto L075be2;
  #L075c28.  v5:= "ETag" @kind object;
  #L075c2c.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L075c32.  v5:= temp;
  #L075c34.  if v5 == 0 then goto L075c3e;
  #L075c38.  v7.`a.a.a.c$a.k` @type ^`java.lang.String` := v4 @kind object;
  #L075c3c.  goto L075be2;
  #L075c3e.  v5:= "Age" @kind object;
  #L075c42.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L075c48.  v3:= temp;
  #L075c4a.  if v3 == 0 then goto L075be2;
  #L075c4e.  call temp:= `b`(v4, v6) @signature `La/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L075c54.  v3:= temp;
  #L075c56.  v7.`a.a.a.c$a.l` @type ^`int` := v3;
  #L075c5a.  goto L075be2;
  #L075c5c.  return @kind void;
}
procedure `boolean` `a`(`a.x` v1 @kind object) @signature `La/a/a/c$a;.a:(La/x;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L075c70.  v0:= "If-Modified-Since" @kind object;
  #L075c74.  call temp:= `a`(v1, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L075c7a.  v0:= temp @kind object;
  #L075c7c.  if v0 != 0 then goto L075c90;
  #L075c80.  v0:= "If-None-Match" @kind object;
  #L075c84.  call temp:= `a`(v1, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L075c8a.  v0:= temp @kind object;
  #L075c8c.  if v0 == 0 then goto L075c94;
  #L075c90.  v0:= 1I;
  #L075c92.  return v0;
  #L075c94.  v0:= 0I;
  #L075c96.  goto L075c92;
}
procedure `a.a.a.c` `b`(`a.a.a.c$a` v14 @kind this) @signature `La/a/a/c$a;.b:()La/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L075ca8.  v4:= 0L;
  #L075cac.  v13:= -1I;
  #L075cae.  v12:= 0I;
  #L075cb0.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075cb4.  if v0 != 0 then goto L075cc8;
  #L075cb8.  v0:= new `a.a.a.c`;
  #L075cbc.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075cc0.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075cc6.  return v0 @kind object;
  #L075cc8.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075ccc.  call temp:= `g`(v0) @signature `La/x;.g:()Z` @kind virtual;
  #L075cd2.  v0:= temp;
  #L075cd4.  if v0 == 0 then goto L075cf8;
  #L075cd8.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075cdc.  call temp:= `d`(v0) @signature `La/z;.d:()La/p;` @kind virtual;
  #L075ce2.  v0:= temp @kind object;
  #L075ce4.  if v0 != 0 then goto L075cf8;
  #L075ce8.  v0:= new `a.a.a.c`;
  #L075cec.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075cf0.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075cf6.  goto L075cc6;
  #L075cf8.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075cfc.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075d00.  call temp:= `a`(v0, v1) @signature `La/a/a/c;.a:(La/z;La/x;)Z` @kind static;
  #L075d06.  v0:= temp;
  #L075d08.  if v0 != 0 then goto L075d1c;
  #L075d0c.  v0:= new `a.a.a.c`;
  #L075d10.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075d14.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075d1a.  goto L075cc6;
  #L075d1c.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075d20.  call temp:= `f`(v0) @signature `La/x;.f:()La/d;` @kind virtual;
  #L075d26.  v6:= temp @kind object;
  #L075d28.  call temp:= `a`(v6) @signature `La/d;.a:()Z` @kind virtual;
  #L075d2e.  v0:= temp;
  #L075d30.  if v0 != 0 then goto L075d44;
  #L075d34.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075d38.  call temp:= `a`(v0) @signature `La/a/a/c$a;.a:(La/x;)Z` @kind static;
  #L075d3e.  v0:= temp;
  #L075d40.  if v0 == 0 then goto L075d54;
  #L075d44.  v0:= new `a.a.a.c`;
  #L075d48.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075d4c.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075d52.  goto L075cc6;
  #L075d54.  call temp:= `d`(v14) @signature `La/a/a/c$a;.d:()J` @kind direct;
  #L075d5a.  v8:= temp @kind wide;
  #L075d5c.  call temp:= `c`(v14) @signature `La/a/a/c$a;.c:()J` @kind direct;
  #L075d62.  v0:= temp @kind wide;
  #L075d64.  call temp:= `c`(v6) @signature `La/d;.c:()I` @kind virtual;
  #L075d6a.  v2:= temp;
  #L075d6c.  if v2 == v13 then goto L075d8e;
  #L075d70.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L075d74.  call temp:= `c`(v6) @signature `La/d;.c:()I` @kind virtual;
  #L075d7a.  v3:= temp;
  #L075d7c.  v10:= (`long`) v3 @kind i2l;
  #L075d7e.  call temp:= `toMillis`(v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L075d84.  v2:= temp @kind wide;
  #L075d86.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L075d8c.  v0:= temp @kind wide;
  #L075d8e.  call temp:= `h`(v6) @signature `La/d;.h:()I` @kind virtual;
  #L075d94.  v2:= temp;
  #L075d96.  if v2 == v13 then goto L075f00;
  #L075d9a.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L075d9e.  call temp:= `h`(v6) @signature `La/d;.h:()I` @kind virtual;
  #L075da4.  v3:= temp;
  #L075da6.  v10:= (`long`) v3 @kind i2l;
  #L075da8.  call temp:= `toMillis`(v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L075dae.  v2:= temp @kind wide;
  #L075db0.  v7:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075db4.  call temp:= `h`(v7) @signature `La/z;.h:()La/d;` @kind virtual;
  #L075dba.  v7:= temp @kind object;
  #L075dbc.  call temp:= `f`(v7) @signature `La/d;.f:()Z` @kind virtual;
  #L075dc2.  v10:= temp;
  #L075dc4.  if v10 != 0 then goto L075dea;
  #L075dc8.  call temp:= `g`(v6) @signature `La/d;.g:()I` @kind virtual;
  #L075dce.  v10:= temp;
  #L075dd0.  if v10 == v13 then goto L075dea;
  #L075dd4.  v4:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L075dd8.  call temp:= `g`(v6) @signature `La/d;.g:()I` @kind virtual;
  #L075dde.  v5:= temp;
  #L075de0.  v10:= (`long`) v5 @kind i2l;
  #L075de2.  call temp:= `toMillis`(v4, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L075de8.  v4:= temp @kind wide;
  #L075dea.  call temp:= `a`(v7) @signature `La/d;.a:()Z` @kind virtual;
  #L075df0.  v6:= temp;
  #L075df2.  if v6 != 0 then goto L075e66;
  #L075df6.  v6:= v8 + v2 @kind long;
  #L075dfa.  v4:= v4 + v0 @kind long;
  #L075dfc.  v4:= lcmp(v6, v4);
  #L075e00.  if v4 >= 0 then goto L075e66;
  #L075e04.  v4:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075e08.  call temp:= `g`(v4) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L075e0e.  v4:= temp @kind object;
  #L075e10.  v2:= v2 + v8 @kind long;
  #L075e12.  v0:= lcmp(v2, v0);
  #L075e16.  if v0 < 0 then goto L075e28;
  #L075e1a.  v0:= "Warning" @kind object;
  #L075e1e.  v1:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L075e22.  call temp:= `a`(v4, v0, v1) @signature `La/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/z$a;` @kind virtual;
  #L075e28.  v0:= 86400000L;
  #L075e2e.  v0:= lcmp(v8, v0);
  #L075e32.  if v0 <= 0 then goto L075e50;
  #L075e36.  call temp:= `e`(v14) @signature `La/a/a/c$a;.e:()Z` @kind direct;
  #L075e3c.  v0:= temp;
  #L075e3e.  if v0 == 0 then goto L075e50;
  #L075e42.  v0:= "Warning" @kind object;
  #L075e46.  v1:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L075e4a.  call temp:= `a`(v4, v0, v1) @signature `La/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/z$a;` @kind virtual;
  #L075e50.  v0:= new `a.a.a.c`;
  #L075e54.  call temp:= `a`(v4) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L075e5a.  v1:= temp @kind object;
  #L075e5c.  call `<init>`(v0, v12, v1) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075e62.  goto L075cc6;
  #L075e66.  v0:= v14.`a.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L075e6a.  if v0 == 0 then goto L075eca;
  #L075e6e.  v1:= "If-None-Match" @kind object;
  #L075e72.  v0:= v14.`a.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L075e76.  v2:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075e7a.  call temp:= `c`(v2) @signature `La/x;.c:()La/q;` @kind virtual;
  #L075e80.  v2:= temp @kind object;
  #L075e82.  call temp:= `b`(v2) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L075e88.  v2:= temp @kind object;
  #L075e8a.  v3:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L075e8e.  call `a`(v3, v2, v1, v0) @signature `La/a/a;.a:(La/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L075e94.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075e98.  call temp:= `e`(v0) @signature `La/x;.e:()La/x$a;` @kind virtual;
  #L075e9e.  v0:= temp @kind object;
  #L075ea0.  call temp:= `a`(v2) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L075ea6.  v1:= temp @kind object;
  #L075ea8.  call temp:= `a`(v0, v1) @signature `La/x$a;.a:(La/q;)La/x$a;` @kind virtual;
  #L075eae.  v0:= temp @kind object;
  #L075eb0.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L075eb6.  v1:= temp @kind object;
  #L075eb8.  v0:= new `a.a.a.c`;
  #L075ebc.  v2:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075ec0.  call `<init>`(v0, v1, v2) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075ec6.  goto L075cc6;
  #L075eca.  v0:= v14.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L075ece.  if v0 == 0 then goto L075edc;
  #L075ed2.  v1:= "If-Modified-Since" @kind object;
  #L075ed6.  v0:= v14.`a.a.a.c$a.g` @type ^`java.lang.String` @kind object;
  #L075eda.  goto L075e76;
  #L075edc.  v0:= v14.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L075ee0.  if v0 == 0 then goto L075eee;
  #L075ee4.  v1:= "If-Modified-Since" @kind object;
  #L075ee8.  v0:= v14.`a.a.a.c$a.e` @type ^`java.lang.String` @kind object;
  #L075eec.  goto L075e76;
  #L075eee.  v0:= new `a.a.a.c`;
  #L075ef2.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075ef6.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075efc.  goto L075cc6;
  #L075f00.  v2:= v4 @kind wide;
  #L075f02.  goto L075db0;
}
procedure `long` `c`(`a.a.a.c$a` v6 @kind this) @signature `La/a/a/c$a;.c:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L075f18.  v2:= 0L;
  #L075f1c.  v0:= v6.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075f20.  call temp:= `h`(v0) @signature `La/z;.h:()La/d;` @kind virtual;
  #L075f26.  v0:= temp @kind object;
  #L075f28.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L075f2e.  v1:= temp;
  #L075f30.  v4:= -1I;
  #L075f32.  if v1 == v4 then goto L075f4e;
  #L075f36.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L075f3a.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L075f40.  v0:= temp;
  #L075f42.  v2:= (`long`) v0 @kind i2l;
  #L075f44.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L075f4a.  v2:= temp @kind wide;
  #L075f4c.  return v2 @kind wide;
  #L075f4e.  v0:= v6.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L075f52.  if v0 == 0 then goto L075f90;
  #L075f56.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L075f5a.  if v0 == 0 then goto L075f86;
  #L075f5e.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L075f62.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L075f68.  v0:= temp @kind wide;
  #L075f6a.  v4:= v6.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L075f6e.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L075f74.  v4:= temp @kind wide;
  #L075f76.  v0:= v4 - v0 @kind long;
  #L075f7a.  v4:= lcmp(v0, v2);
  #L075f7e.  if v4 <= 0 then goto L075f8c;
  #L075f82.  v2:= v0 @kind wide;
  #L075f84.  goto L075f4c;
  #L075f86.  v0:= v6.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L075f8a.  goto L075f6a;
  #L075f8c.  v0:= v2 @kind wide;
  #L075f8e.  goto L075f82;
  #L075f90.  v0:= v6.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L075f94.  if v0 == 0 then goto L075f4c;
  #L075f98.  v0:= v6.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075f9c.  call temp:= `a`(v0) @signature `La/z;.a:()La/x;` @kind virtual;
  #L075fa2.  v0:= temp @kind object;
  #L075fa4.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L075faa.  v0:= temp @kind object;
  #L075fac.  call temp:= `k`(v0) @signature `La/r;.k:()Ljava/lang/String;` @kind virtual;
  #L075fb2.  v0:= temp @kind object;
  #L075fb4.  if v0 != 0 then goto L075f4c;
  #L075fb8.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L075fbc.  if v0 == 0 then goto L075fec;
  #L075fc0.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L075fc4.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L075fca.  v0:= temp @kind wide;
  #L075fcc.  v4:= v6.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L075fd0.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L075fd6.  v4:= temp @kind wide;
  #L075fd8.  v0:= v0 - v4 @kind long;
  #L075fda.  v4:= lcmp(v0, v2);
  #L075fde.  if v4 <= 0 then goto L075f4c;
  #L075fe2.  v2:= 10L;
  #L075fe6.  v2:= v0 / v2 @kind long;
  #L075fea.  goto L075f4c;
  #L075fec.  v0:= v6.`a.a.a.c$a.i` @type ^`long` @kind wide;
  #L075ff0.  goto L075fcc;
}
procedure `long` `d`(`a.a.a.c$a` v8 @kind this) @signature `La/a/a/c$a;.d:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L076004.  v0:= 0L;
  #L076008.  v2:= v8.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07600c.  if v2 == 0 then goto L07602a;
  #L076010.  v2:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L076014.  v4:= v8.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L076018.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L07601e.  v4:= temp @kind wide;
  #L076020.  v2:= v2 - v4 @kind long;
  #L076022.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L076028.  v0:= temp @kind wide;
  #L07602a.  v2:= v8.`a.a.a.c$a.l` @type ^`int`;
  #L07602e.  v3:= -1I;
  #L076030.  if v2 == v3 then goto L07604e;
  #L076034.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L076038.  v3:= v8.`a.a.a.c$a.l` @type ^`int`;
  #L07603c.  v4:= (`long`) v3 @kind i2l;
  #L07603e.  call temp:= `toMillis`(v2, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L076044.  v2:= temp @kind wide;
  #L076046.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L07604c.  v0:= temp @kind wide;
  #L07604e.  v2:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L076052.  v4:= v8.`a.a.a.c$a.i` @type ^`long` @kind wide;
  #L076056.  v2:= v2 - v4 @kind long;
  #L076058.  v4:= v8.`a.a.a.c$a.a` @type ^`long` @kind wide;
  #L07605c.  v6:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L076060.  v4:= v4 - v6 @kind long;
  #L076062.  v0:= v0 + v2 @kind long;
  #L076064.  v0:= v0 + v4 @kind long;
  #L076066.  return v0 @kind wide;
}
procedure `boolean` `e`(`a.a.a.c$a` v2 @kind this) @signature `La/a/a/c$a;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L076078.  v0:= v2.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07607c.  call temp:= `h`(v0) @signature `La/z;.h:()La/d;` @kind virtual;
  #L076082.  v0:= temp @kind object;
  #L076084.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L07608a.  v0:= temp;
  #L07608c.  v1:= -1I;
  #L07608e.  if v0 != v1 then goto L07609e;
  #L076092.  v0:= v2.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L076096.  if v0 != 0 then goto L07609e;
  #L07609a.  v0:= 1I;
  #L07609c.  return v0;
  #L07609e.  v0:= 0I;
  #L0760a0.  goto L07609c;
}
procedure `a.a.a.c` `a`(`a.a.a.c$a` v3 @kind this) @signature `La/a/a/c$a;.a:()La/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0760b4.  v2:= 0I;
  #L0760b6.  call temp:= `b`(v3) @signature `La/a/a/c$a;.b:()La/a/a/c;` @kind direct;
  #L0760bc.  v0:= temp @kind object;
  #L0760be.  v1:= v0.`a.a.a.c.a` @type ^`a.x` @kind object;
  #L0760c2.  if v1 == 0 then goto L0760e8;
  #L0760c6.  v1:= v3.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L0760ca.  call temp:= `f`(v1) @signature `La/x;.f:()La/d;` @kind virtual;
  #L0760d0.  v1:= temp @kind object;
  #L0760d2.  call temp:= `i`(v1) @signature `La/d;.i:()Z` @kind virtual;
  #L0760d8.  v1:= temp;
  #L0760da.  if v1 == 0 then goto L0760e8;
  #L0760de.  v0:= new `a.a.a.c`;
  #L0760e2.  call `<init>`(v0, v2, v2) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L0760e8.  return v0 @kind object;
}

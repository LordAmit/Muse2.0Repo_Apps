record `a.a.c.j` @kind class @AccessFlag PUBLIC_FINAL extends `a.s` @kind interface {
  `a.u` `a.a.c.j.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.c.j.b` @AccessFlag PRIVATE_FINAL;
  `a.a.b.g` `a.a.c.j.c` @AccessFlag PRIVATE;
  `java.lang.Object` `a.a.c.j.d` @AccessFlag PRIVATE;
  `boolean` `a.a.c.j.e` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`a.a.c.j` v0 @kind this, `a.u` v1 @kind object, `boolean` v2 ) @signature `La/a/c/j;.<init>:(La/u;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L079a24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L079a2a.  v0.`a.a.c.j.a` @type ^`a.u` := v1 @kind object;
  #L079a2e.  v0.`a.a.c.j.b` @type ^`boolean` := v2 @kind boolean;
  #L079a32.  return @kind void;
}
procedure `a.a` `a`(`a.a.c.j` v13 @kind this, `a.r` v14 @kind object) @signature `La/a/c/j;.a:(La/r;)La/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L079a44.  v7:= 0I;
  #L079a46.  call temp:= `c`(v14) @signature `La/r;.c:()Z` @kind virtual;
  #L079a4c.  v0:= temp;
  #L079a4e.  if v0 == 0 then goto L079ae6;
  #L079a52.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079a56.  call temp:= `j`(v0) @signature `La/u;.j:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L079a5c.  v5:= temp @kind object;
  #L079a5e.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079a62.  call temp:= `k`(v0) @signature `La/u;.k:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L079a68.  v6:= temp @kind object;
  #L079a6a.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079a6e.  call temp:= `l`(v0) @signature `La/u;.l:()La/g;` @kind virtual;
  #L079a74.  v7:= temp @kind object;
  #L079a76.  v0:= new `a.a`;
  #L079a7a.  call temp:= `f`(v14) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L079a80.  v1:= temp @kind object;
  #L079a82.  call temp:= `g`(v14) @signature `La/r;.g:()I` @kind virtual;
  #L079a88.  v2:= temp;
  #L079a8a.  v3:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079a8e.  call temp:= `h`(v3) @signature `La/u;.h:()La/o;` @kind virtual;
  #L079a94.  v3:= temp @kind object;
  #L079a96.  v4:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079a9a.  call temp:= `i`(v4) @signature `La/u;.i:()Ljavax/net/SocketFactory;` @kind virtual;
  #L079aa0.  v4:= temp @kind object;
  #L079aa2.  v8:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079aa6.  call temp:= `n`(v8) @signature `La/u;.n:()La/b;` @kind virtual;
  #L079aac.  v8:= temp @kind object;
  #L079aae.  v9:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079ab2.  call temp:= `d`(v9) @signature `La/u;.d:()Ljava/net/Proxy;` @kind virtual;
  #L079ab8.  v9:= temp @kind object;
  #L079aba.  v10:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079abe.  call temp:= `t`(v10) @signature `La/u;.t:()Ljava/util/List;` @kind virtual;
  #L079ac4.  v10:= temp @kind object;
  #L079ac6.  v11:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079aca.  call temp:= `u`(v11) @signature `La/u;.u:()Ljava/util/List;` @kind virtual;
  #L079ad0.  v11:= temp @kind object;
  #L079ad2.  v12:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079ad6.  call temp:= `e`(v12) @signature `La/u;.e:()Ljava/net/ProxySelector;` @kind virtual;
  #L079adc.  v12:= temp @kind object;
  #L079ade.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `La/a;.<init>:(Ljava/lang/String;ILa/o;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;La/g;La/b;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L079ae4.  return v0 @kind object;
  #L079ae6.  v6:= v7 @kind object;
  #L079ae8.  v5:= v7 @kind object;
  #L079aea.  goto L079a76;
}
procedure `a.x` `a`(`a.a.c.j` v6 @kind this, `a.z` v7 @kind object) @signature `La/a/c/j;.a:(La/z;)La/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L079afc.  v1:= 0I;
  #L079afe.  if v7 != 0 then goto L079b0e;
  #L079b02.  v0:= new `java.lang.IllegalStateException`;
  #L079b06.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L079b0c.  throw v0;
  #L079b0e.  v0:= v6.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079b12.  call temp:= `b`(v0) @signature `La/a/b/g;.b:()La/a/b/c;` @kind virtual;
  #L079b18.  v0:= temp @kind object;
  #L079b1a.  if v0 == 0 then goto L079b46;
  #L079b1e.  call temp:= `a`(v0) @signature `La/i;.a:()La/ab;` @kind interface;
  #L079b24.  v0:= temp @kind object;
  #L079b26.  call temp:= `b`(v7) @signature `La/z;.b:()I` @kind virtual;
  #L079b2c.  v2:= temp;
  #L079b2e.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079b34.  v3:= temp @kind object;
  #L079b36.  call temp:= `b`(v3) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L079b3c.  v3:= temp @kind object;
  #L079b3e.  goto L079d10;
  #L079b44.  return v1 @kind object;
  #L079b46.  v0:= v1 @kind object;
  #L079b48.  goto L079b26;
  #L079b4a.  if v0 == 0 then goto L079b76;
  #L079b4e.  call temp:= `b`(v0) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L079b54.  v1:= temp @kind object;
  #L079b56.  call temp:= `type`(v1) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L079b5c.  v1:= temp @kind object;
  #L079b5e.  v2:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L079b62.  if v1 == v2 then goto L079b84;
  #L079b66.  v0:= new `java.net.ProtocolException`;
  #L079b6a.  v1:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L079b6e.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L079b74.  throw v0;
  #L079b76.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079b7a.  call temp:= `d`(v1) @signature `La/u;.d:()Ljava/net/Proxy;` @kind virtual;
  #L079b80.  v1:= temp @kind object;
  #L079b82.  goto L079b56;
  #L079b84.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079b88.  call temp:= `n`(v1) @signature `La/u;.n:()La/b;` @kind virtual;
  #L079b8e.  v1:= temp @kind object;
  #L079b90.  call temp:= `a`(v1, v0, v7) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L079b96.  v1:= temp @kind object;
  #L079b98.  goto L079b44;
  #L079b9a.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079b9e.  call temp:= `m`(v1) @signature `La/u;.m:()La/b;` @kind virtual;
  #L079ba4.  v1:= temp @kind object;
  #L079ba6.  call temp:= `a`(v1, v0, v7) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L079bac.  v1:= temp @kind object;
  #L079bae.  goto L079b44;
  #L079bb0.  v0:= "GET" @kind object;
  #L079bb4.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L079bba.  v0:= temp;
  #L079bbc.  if v0 != 0 then goto L079bd0;
  #L079bc0.  v0:= "HEAD" @kind object;
  #L079bc4.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L079bca.  v0:= temp;
  #L079bcc.  if v0 == 0 then goto L079b44;
  #L079bd0.  v0:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079bd4.  call temp:= `q`(v0) @signature `La/u;.q:()Z` @kind virtual;
  #L079bda.  v0:= temp;
  #L079bdc.  if v0 == 0 then goto L079b44;
  #L079be0.  v0:= "Location" @kind object;
  #L079be4.  call temp:= `a`(v7, v0) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L079bea.  v0:= temp @kind object;
  #L079bec.  if v0 == 0 then goto L079b44;
  #L079bf0.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079bf6.  v2:= temp @kind object;
  #L079bf8.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L079bfe.  v2:= temp @kind object;
  #L079c00.  call temp:= `c`(v2, v0) @signature `La/r;.c:(Ljava/lang/String;)La/r;` @kind virtual;
  #L079c06.  v0:= temp @kind object;
  #L079c08.  if v0 == 0 then goto L079b44;
  #L079c0c.  call temp:= `b`(v0) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L079c12.  v2:= temp @kind object;
  #L079c14.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079c1a.  v4:= temp @kind object;
  #L079c1c.  call temp:= `a`(v4) @signature `La/x;.a:()La/r;` @kind virtual;
  #L079c22.  v4:= temp @kind object;
  #L079c24.  call temp:= `b`(v4) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L079c2a.  v4:= temp @kind object;
  #L079c2c.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L079c32.  v2:= temp;
  #L079c34.  if v2 != 0 then goto L079c48;
  #L079c38.  v2:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079c3c.  call temp:= `p`(v2) @signature `La/u;.p:()Z` @kind virtual;
  #L079c42.  v2:= temp;
  #L079c44.  if v2 == 0 then goto L079b44;
  #L079c48.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079c4e.  v2:= temp @kind object;
  #L079c50.  call temp:= `e`(v2) @signature `La/x;.e:()La/x$a;` @kind virtual;
  #L079c56.  v2:= temp @kind object;
  #L079c58.  call temp:= `c`(v3) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L079c5e.  v4:= temp;
  #L079c60.  if v4 == 0 then goto L079ca4;
  #L079c64.  call temp:= `d`(v3) @signature `La/a/c/f;.d:(Ljava/lang/String;)Z` @kind static;
  #L079c6a.  v4:= temp;
  #L079c6c.  call temp:= `e`(v3) @signature `La/a/c/f;.e:(Ljava/lang/String;)Z` @kind static;
  #L079c72.  v5:= temp;
  #L079c74.  if v5 == 0 then goto L079cce;
  #L079c78.  v3:= "GET" @kind object;
  #L079c7c.  call temp:= `a`(v2, v3, v1) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @kind virtual;
  #L079c82.  if v4 != 0 then goto L079ca4;
  #L079c86.  v1:= "Transfer-Encoding" @kind object;
  #L079c8a.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L079c90.  v1:= "Content-Length" @kind object;
  #L079c94.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L079c9a.  v1:= "Content-Type" @kind object;
  #L079c9e.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L079ca4.  call temp:= `a`(v6, v7, v0) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @kind direct;
  #L079caa.  v1:= temp;
  #L079cac.  if v1 != 0 then goto L079cba;
  #L079cb0.  v1:= "Authorization" @kind object;
  #L079cb4.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L079cba.  call temp:= `a`(v2, v0) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L079cc0.  v0:= temp @kind object;
  #L079cc2.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L079cc8.  v1:= temp @kind object;
  #L079cca.  goto L079b44;
  #L079cce.  if v4 == 0 then goto L079ce2;
  #L079cd2.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079cd8.  v1:= temp @kind object;
  #L079cda.  call temp:= `d`(v1) @signature `La/x;.d:()La/y;` @kind virtual;
  #L079ce0.  v1:= temp @kind object;
  #L079ce2.  call temp:= `a`(v2, v3, v1) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @kind virtual;
  #L079ce8.  goto L079c82;
  #L079cea.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079cf0.  v0:= temp @kind object;
  #L079cf2.  call temp:= `d`(v0) @signature `La/x;.d:()La/y;` @kind virtual;
  #L079cf8.  v0:= temp @kind object;
  #L079cfa.  v0:= instanceof @variable v0 @type ^`a.a.c.l` @kind boolean;
  #L079cfe.  if v0 != 0 then goto L079b44;
  #L079d02.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079d08.  v1:= temp @kind object;
  #L079d0a.  goto L079b44;
  #L079d0e.  
  #L079d10.  switch v2
                  | 300 => goto L079bd0
                  | 301 => goto L079bd0
                  | 302 => goto L079bd0
                  | 303 => goto L079bd0
                  | 307 => goto L079bb0
                  | 308 => goto L079bb0
                  | 401 => goto L079b9a
                  | 407 => goto L079b4a
                  | 408 => goto L079cea
                  | else => goto L079b44;
}
procedure `boolean` `a`(`a.a.c.j` v3 @kind this, `a.z` v4 @kind object, `a.r` v5 @kind object) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L079d6c.  call temp:= `a`(v4) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079d72.  v0:= temp @kind object;
  #L079d74.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L079d7a.  v0:= temp @kind object;
  #L079d7c.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L079d82.  v1:= temp @kind object;
  #L079d84.  call temp:= `f`(v5) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L079d8a.  v2:= temp @kind object;
  #L079d8c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L079d92.  v1:= temp;
  #L079d94.  if v1 == 0 then goto L079dcc;
  #L079d98.  call temp:= `g`(v0) @signature `La/r;.g:()I` @kind virtual;
  #L079d9e.  v1:= temp;
  #L079da0.  call temp:= `g`(v5) @signature `La/r;.g:()I` @kind virtual;
  #L079da6.  v2:= temp;
  #L079da8.  if v1 != v2 then goto L079dcc;
  #L079dac.  call temp:= `b`(v0) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L079db2.  v0:= temp @kind object;
  #L079db4.  call temp:= `b`(v5) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L079dba.  v1:= temp @kind object;
  #L079dbc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L079dc2.  v0:= temp;
  #L079dc4.  if v0 == 0 then goto L079dcc;
  #L079dc8.  v0:= 1I;
  #L079dca.  return v0;
  #L079dcc.  v0:= 0I;
  #L079dce.  goto L079dca;
}
procedure `boolean` `a`(`a.a.c.j` v3 @kind this, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `La/a/c/j;.a:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L079de0.  v0:= 1I;
  #L079de2.  v1:= 0I;
  #L079de4.  v2:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L079de8.  if v2 == 0 then goto L079dee;
  #L079dec.  return v1;
  #L079dee.  v2:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L079df2.  if v2 == 0 then goto L079e0a;
  #L079df6.  v2:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L079dfa.  if v2 == 0 then goto L079e06;
  #L079dfe.  if v5 != 0 then goto L079e06;
  #L079e02.  v1:= v0;
  #L079e04.  goto L079dec;
  #L079e06.  v0:= v1;
  #L079e08.  goto L079e02;
  #L079e0a.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L079e0e.  if v2 == 0 then goto L079e22;
  #L079e12.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L079e18.  v2:= temp @kind object;
  #L079e1a.  v2:= instanceof @variable v2 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L079e1e.  if v2 != 0 then goto L079dec;
  #L079e22.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L079e26.  if v2 != 0 then goto L079dec;
  #L079e2a.  v1:= v0;
  #L079e2c.  goto L079dec;
}
procedure `boolean` `a`(`a.a.c.j` v2 @kind this, `java.io.IOException` v3 @kind object, `boolean` v4 , `a.x` v5 @kind object) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L079e40.  v0:= 0I;
  #L079e42.  v1:= v2.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079e46.  call `a`(v1, v3) @signature `La/a/b/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L079e4c.  v1:= v2.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079e50.  call temp:= `r`(v1) @signature `La/u;.r:()Z` @kind virtual;
  #L079e56.  v1:= temp;
  #L079e58.  if v1 != 0 then goto L079e5e;
  #L079e5c.  return v0;
  #L079e5e.  if v4 == 0 then goto L079e72;
  #L079e62.  call temp:= `d`(v5) @signature `La/x;.d:()La/y;` @kind virtual;
  #L079e68.  v1:= temp @kind object;
  #L079e6a.  v1:= instanceof @variable v1 @type ^`a.a.c.l` @kind boolean;
  #L079e6e.  if v1 != 0 then goto L079e5c;
  #L079e72.  call temp:= `a`(v2, v3, v4) @signature `La/a/c/j;.a:(Ljava/io/IOException;Z)Z` @kind direct;
  #L079e78.  v1:= temp;
  #L079e7a.  if v1 == 0 then goto L079e5c;
  #L079e7e.  v1:= v2.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079e82.  call temp:= `e`(v1) @signature `La/a/b/g;.e:()Z` @kind virtual;
  #L079e88.  v1:= temp;
  #L079e8a.  if v1 == 0 then goto L079e5c;
  #L079e8e.  v0:= 1I;
  #L079e90.  goto L079e5c;
}
procedure `a.z` `a`(`a.a.c.j` v10 @kind this, `a.s$a` v11 @kind object) @signature `La/a/c/j;.a:(La/s$a;)La/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L079ea4.  v5:= 0I;
  #L079ea6.  v3:= 0I;
  #L079ea8.  call temp:= `a`(v11) @signature `La/s$a;.a:()La/x;` @kind interface;
  #L079eae.  v1:= temp @kind object;
  #L079eb0.  v2:= new `a.a.b.g`;
  #L079eb4.  v4:= v10.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079eb8.  call temp:= `o`(v4) @signature `La/u;.o:()La/j;` @kind virtual;
  #L079ebe.  v4:= temp @kind object;
  #L079ec0.  call temp:= `a`(v1) @signature `La/x;.a:()La/r;` @kind virtual;
  #L079ec6.  v6:= temp @kind object;
  #L079ec8.  call temp:= `a`(v10, v6) @signature `La/a/c/j;.a:(La/r;)La/a;` @kind direct;
  #L079ece.  v6:= temp @kind object;
  #L079ed0.  v7:= v10.`a.a.c.j.d` @type ^`java.lang.Object` @kind object;
  #L079ed4.  call `<init>`(v2, v4, v6, v7) @signature `La/a/b/g;.<init>:(La/j;La/a;Ljava/lang/Object;)V` @kind direct;
  #L079eda.  v10.`a.a.c.j.c` @type ^`a.a.b.g` := v2 @kind object;
  #L079ede.  v2:= v3 @kind object;
  #L079ee0.  v4:= v5;
  #L079ee2.  v6:= v1 @kind object;
  #L079ee4.  v1:= v10.`a.a.c.j.e` @type ^`boolean` @kind boolean;
  #L079ee8.  if v1 == 0 then goto L079f06;
  #L079eec.  v1:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079ef0.  call `c`(v1) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L079ef6.  v1:= new `java.io.IOException`;
  #L079efa.  v2:= "Canceled" @kind object;
  #L079efe.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L079f04.  throw v1;
  #Try_start0.  
  #L079f06.  v0:= v11 @kind object;
  #L079f08.  v0:= (`a.a.c.g`) v0 @kind object;
  #L079f0c.  v1:= v0 @kind object;
  #L079f0e.  v7:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079f12.  v8:= 0I;
  #L079f14.  v9:= 0I;
  #L079f16.  call temp:= `a`(v1, v6, v7, v8, v9) @signature `La/a/c/g;.a:(La/x;La/a/b/g;La/a/c/c;La/i;)La/z;` @kind virtual;
  #Try_end0.  
  #L079f1c.  v1:= temp @kind object;
  #L079f1e.  if v2 == 0 then goto L079f52;
  #L079f22.  call temp:= `g`(v1) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L079f28.  v1:= temp @kind object;
  #L079f2a.  call temp:= `g`(v2) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L079f30.  v2:= temp @kind object;
  #L079f32.  call temp:= `a`(v2, v3) @signature `La/z$a;.a:(La/aa;)La/z$a;` @kind virtual;
  #L079f38.  v2:= temp @kind object;
  #L079f3a.  call temp:= `a`(v2) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L079f40.  v2:= temp @kind object;
  #L079f42.  call temp:= `c`(v1, v2) @signature `La/z$a;.c:(La/z;)La/z$a;` @kind virtual;
  #L079f48.  v1:= temp @kind object;
  #L079f4a.  call temp:= `a`(v1) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L079f50.  v1:= temp @kind object;
  #L079f52.  call temp:= `a`(v10, v1) @signature `La/a/c/j;.a:(La/z;)La/x;` @kind direct;
  #L079f58.  v6:= temp @kind object;
  #L079f5a.  if v6 != 0 then goto L079fca;
  #L079f5e.  v2:= v10.`a.a.c.j.b` @type ^`boolean` @kind boolean;
  #L079f62.  if v2 != 0 then goto L079f70;
  #L079f66.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079f6a.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L079f70.  return v1 @kind object;
  #L079f72.  v1:= Exception @type ^`a.a.b.e` @kind object;
  #Try_start1.  
  #L079f74.  call temp:= `a`(v1) @signature `La/a/b/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L079f7a.  v7:= temp @kind object;
  #L079f7c.  v8:= 0I;
  #L079f7e.  call temp:= `a`(v10, v7, v8, v6) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @kind direct;
  #L079f84.  v7:= temp;
  #L079f86.  if v7 != 0 then goto L079ee4;
  #L079f8a.  call temp:= `a`(v1) @signature `La/a/b/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L079f90.  v1:= temp @kind object;
  #L079f92.  throw v1;
  #Try_end1.  
  #L079f94.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L079f96.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079f9a.  call `a`(v2, v3) @signature `La/a/b/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L079fa0.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079fa4.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L079faa.  throw v1;
  #L079fac.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L079fae.  v7:= instanceof @variable v1 @type ^`a.a.e.a` @kind boolean;
  #L079fb2.  if v7 != 0 then goto L079fc6;
  #L079fb6.  v7:= 1I;
  #L079fb8.  call temp:= `a`(v10, v1, v7, v6) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @kind direct;
  #L079fbe.  v7:= temp;
  #L079fc0.  if v7 != 0 then goto L079ee4;
  #L079fc4.  throw v1;
  #Try_end2.  
  #L079fc6.  v7:= v5;
  #L079fc8.  goto L079fb8;
  #L079fca.  call temp:= `f`(v1) @signature `La/z;.f:()La/aa;` @kind virtual;
  #L079fd0.  v2:= temp @kind object;
  #L079fd2.  call `a`(v2) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L079fd8.  v2:= v4 + 1;
  #L079fdc.  v4:= 20I;
  #L079fe0.  if v2 <= v4 then goto L07a020;
  #L079fe4.  v1:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079fe8.  call `c`(v1) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L079fee.  v1:= new `java.net.ProtocolException`;
  #L079ff2.  v3:= new `java.lang.StringBuilder`;
  #L079ff6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L079ffc.  v4:= "Too many follow-up requests: " @kind object;
  #L07a000.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07a006.  v3:= temp @kind object;
  #L07a008.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L07a00e.  v2:= temp @kind object;
  #L07a010.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07a016.  v2:= temp @kind object;
  #L07a018.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07a01e.  throw v1;
  #L07a020.  call temp:= `d`(v6) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07a026.  v4:= temp @kind object;
  #L07a028.  v4:= instanceof @variable v4 @type ^`a.a.c.l` @kind boolean;
  #L07a02c.  if v4 == 0 then goto L07a052;
  #L07a030.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07a034.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07a03a.  v2:= new `java.net.HttpRetryException`;
  #L07a03e.  v3:= "Cannot retry streamed HTTP body" @kind object;
  #L07a042.  call temp:= `b`(v1) @signature `La/z;.b:()I` @kind virtual;
  #L07a048.  v1:= temp;
  #L07a04a.  call `<init>`(v2, v3, v1) @signature `Ljava/net/HttpRetryException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L07a050.  throw v2;
  #L07a052.  call temp:= `a`(v6) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07a058.  v4:= temp @kind object;
  #L07a05a.  call temp:= `a`(v10, v1, v4) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @kind direct;
  #L07a060.  v4:= temp;
  #L07a062.  if v4 != 0 then goto L07a0a6;
  #L07a066.  v4:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07a06a.  call `c`(v4) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07a070.  v4:= new `a.a.b.g`;
  #L07a074.  v7:= v10.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07a078.  call temp:= `o`(v7) @signature `La/u;.o:()La/j;` @kind virtual;
  #L07a07e.  v7:= temp @kind object;
  #L07a080.  call temp:= `a`(v6) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07a086.  v8:= temp @kind object;
  #L07a088.  call temp:= `a`(v10, v8) @signature `La/a/c/j;.a:(La/r;)La/a;` @kind direct;
  #L07a08e.  v8:= temp @kind object;
  #L07a090.  v9:= v10.`a.a.c.j.d` @type ^`java.lang.Object` @kind object;
  #L07a094.  call `<init>`(v4, v7, v8, v9) @signature `La/a/b/g;.<init>:(La/j;La/a;Ljava/lang/Object;)V` @kind direct;
  #L07a09a.  v10.`a.a.c.j.c` @type ^`a.a.b.g` := v4 @kind object;
  #L07a09e.  v4:= v2;
  #L07a0a0.  v2:= v1 @kind object;
  #L07a0a2.  goto L079ee4;
  #L07a0a6.  v4:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07a0aa.  call temp:= `a`(v4) @signature `La/a/b/g;.a:()La/a/c/c;` @kind virtual;
  #L07a0b0.  v4:= temp @kind object;
  #L07a0b2.  if v4 == 0 then goto L07a09e;
  #L07a0b6.  v2:= new `java.lang.IllegalStateException`;
  #L07a0ba.  v3:= new `java.lang.StringBuilder`;
  #L07a0be.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07a0c4.  v4:= "Closing the body of " @kind object;
  #L07a0c8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07a0ce.  v3:= temp @kind object;
  #L07a0d0.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07a0d6.  v1:= temp @kind object;
  #L07a0d8.  v3:= " didn't close its backing stream. Bad interceptor?" @kind object;
  #L07a0dc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07a0e2.  v1:= temp @kind object;
  #L07a0e4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07a0ea.  v1:= temp @kind object;
  #L07a0ec.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07a0f2.  throw v2;
  catch `a.a.b.e` @[Try_start0..Try_end0] goto L079f72;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L079fac;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L079f94;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L079f94;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L079f94;
}
procedure `void` `a`(`a.a.c.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `La/a/c/j;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L07a128.  v0.`a.a.c.j.d` @type ^`java.lang.Object` := v1 @kind object;
  #L07a12c.  return @kind void;
}
procedure `boolean` `a`(`a.a.c.j` v1 @kind this) @signature `La/a/c/j;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07a140.  v0:= v1.`a.a.c.j.e` @type ^`boolean` @kind boolean;
  #L07a144.  return v0;
}

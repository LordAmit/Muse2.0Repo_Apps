record `a.a.c.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.regex.Pattern` `@@a.a.c.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/c/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L079080.  v0:= " +([^ \"=]*)=(:?\"([^\"]*)\"|([^ \"=]*)) *(:?,|$)" @kind object;
  #L079084.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L07908a.  v0:= temp @kind object;
  #L07908c.  `@@a.a.c.e.a` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L079090.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `La/a/c/e;.a:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0790a4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0790aa.  v0:= temp;
  #L0790ac.  if v3 >= v0 then goto L0790c8;
  #L0790b0.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0790b6.  v0:= temp;
  #L0790b8.  v1:= 32I;
  #L0790bc.  if v0 == v1 then goto L0790ca;
  #L0790c0.  v1:= 9I;
  #L0790c4.  if v0 == v1 then goto L0790ca;
  #L0790c8.  return v3;
  #L0790ca.  v3:= v3 + 1;
  #L0790ce.  goto L0790a4;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object) @signature `La/a/c/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0790e0.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0790e6.  v0:= temp;
  #L0790e8.  if v3 >= v0 then goto L079102;
  #L0790ec.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0790f2.  v0:= temp;
  #L0790f4.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L0790fa.  v0:= temp;
  #L0790fc.  v1:= -1I;
  #L0790fe.  if v0 == v1 then goto L079104;
  #L079102.  return v3;
  #L079104.  v3:= v3 + 1;
  #L079108.  goto L0790e0;
}
procedure `long` `a`(`a.q` v2 @kind object) @signature `La/a/c/e;.a:(La/q;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L07911c.  v0:= "Content-Length" @kind object;
  #L079120.  call temp:= `a`(v2, v0) @signature `La/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L079126.  v0:= temp @kind object;
  #L079128.  call temp:= `a`(v0) @signature `La/a/c/e;.a:(Ljava/lang/String;)J` @kind static;
  #L07912e.  v0:= temp @kind wide;
  #L079130.  return v0 @kind wide;
}
procedure `long` `a`(`a.z` v2 @kind object) @signature `La/a/c/e;.a:(La/z;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079144.  call temp:= `e`(v2) @signature `La/z;.e:()La/q;` @kind virtual;
  #L07914a.  v0:= temp @kind object;
  #L07914c.  call temp:= `a`(v0) @signature `La/a/c/e;.a:(La/q;)J` @kind static;
  #L079152.  v0:= temp @kind wide;
  #L079154.  return v0 @kind wide;
}
procedure `long` `a`(`java.lang.String` v3 @kind object) @signature `La/a/c/e;.a:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L079168.  v0:= -1L;
  #L07916c.  if v3 != 0 then goto L079172;
  #L079170.  return v0 @kind wide;
  #Try_start0.  
  #L079172.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #Try_end0.  
  #L079178.  v0:= temp @kind wide;
  #L07917a.  goto L079170;
  #L07917c.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L07917e.  goto L079170;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L07917c;
}
procedure `void` `a`(`a.m` v2 @kind object, `a.r` v3 @kind object, `a.q` v4 @kind object) @signature `La/a/c/e;.a:(La/m;La/r;La/q;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0791a0.  v0:= `@@a.m.a` @type ^`a.m` @kind object;
  #L0791a4.  if v2 != v0 then goto L0791aa;
  #L0791a8.  return @kind void;
  #L0791aa.  call temp:= `a`(v3, v4) @signature `La/l;.a:(La/r;La/q;)Ljava/util/List;` @kind static;
  #L0791b0.  v0:= temp @kind object;
  #L0791b2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L0791b8.  v1:= temp;
  #L0791ba.  if v1 != 0 then goto L0791a8;
  #L0791be.  call `a`(v2, v3, v0) @signature `La/m;.a:(La/r;Ljava/util/List;)V` @kind interface;
  #L0791c4.  goto L0791a8;
}
procedure `int` `b`(`java.lang.String` v4 @kind object, `int` v5 ) @signature `La/a/c/e;.b:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L0791d8.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #Try_end0.  
  #L0791de.  v0:= temp @kind wide;
  #L0791e0.  v2:= 2147483647L;
  #L0791e6.  v2:= lcmp(v0, v2);
  #L0791ea.  if v2 <= 0 then goto L0791f6;
  #L0791ee.  v5:= 2147483647I;
  #L0791f4.  return v5;
  #L0791f6.  v2:= 0L;
  #L0791fa.  v2:= lcmp(v0, v2);
  #L0791fe.  if v2 >= 0 then goto L079206;
  #L079202.  v5:= 0I;
  #L079204.  goto L0791f4;
  #L079206.  v5:= (`int`) v0 @kind l2i;
  #L079208.  goto L0791f4;
  #L07920a.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L07920c.  goto L0791f4;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L07920a;
}
procedure `boolean` `b`(`a.z` v6 @kind object) @signature `La/a/c/e;.b:(La/z;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L079230.  v1:= 1I;
  #L079232.  v0:= 0I;
  #L079234.  call temp:= `a`(v6) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07923a.  v2:= temp @kind object;
  #L07923c.  call temp:= `b`(v2) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L079242.  v2:= temp @kind object;
  #L079244.  v3:= "HEAD" @kind object;
  #L079248.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07924e.  v2:= temp;
  #L079250.  if v2 == 0 then goto L079256;
  #L079254.  return v0;
  #L079256.  call temp:= `b`(v6) @signature `La/z;.b:()I` @kind virtual;
  #L07925c.  v2:= temp;
  #L07925e.  v3:= 100I;
  #L079262.  if v2 < v3 then goto L07926e;
  #L079266.  v3:= 200I;
  #L07926a.  if v2 < v3 then goto L079282;
  #L07926e.  v3:= 204I;
  #L079272.  if v2 == v3 then goto L079282;
  #L079276.  v3:= 304I;
  #L07927a.  if v2 == v3 then goto L079282;
  #L07927e.  v0:= v1;
  #L079280.  goto L079254;
  #L079282.  call temp:= `a`(v6) @signature `La/a/c/e;.a:(La/z;)J` @kind static;
  #L079288.  v2:= temp @kind wide;
  #L07928a.  v4:= -1L;
  #L07928e.  v2:= lcmp(v2, v4);
  #L079292.  if v2 != 0 then goto L0792b2;
  #L079296.  v2:= "chunked" @kind object;
  #L07929a.  v3:= "Transfer-Encoding" @kind object;
  #L07929e.  call temp:= `a`(v6, v3) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L0792a4.  v3:= temp @kind object;
  #L0792a6.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0792ac.  v2:= temp;
  #L0792ae.  if v2 == 0 then goto L079254;
  #L0792b2.  v0:= v1;
  #L0792b4.  goto L079254;
}

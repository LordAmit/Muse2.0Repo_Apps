record `a.q` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `a.q.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.q` v2 @kind this, `a.q$a` v3 @kind object) @signature `La/q;.<init>:(La/q$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0897dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0897e2.  v0:= v3.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L0897e6.  v1:= v3.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L0897ea.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0897f0.  v1:= temp;
  #L0897f2.  v1:= new `java.lang.String`[v1];
  #L0897f6.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L0897fc.  v0:= temp @kind object;
  #L0897fe.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L089802.  v2.`a.q.a` @type ^`java.lang.String`[] := v0 @kind object;
  #L089806.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L089818.  v0:= length @variable v2;
  #L08981a.  v0:= v0 + -2;
  #L08981e.  if v0 < 0 then goto L089842;
  #L089822.  v1:= v2[v0] @kind object;
  #L089826.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08982c.  v1:= temp;
  #L08982e.  if v1 == 0 then goto L08983c;
  #L089832.  v0:= v0 + 1;
  #L089836.  v0:= v2[v0] @kind object;
  #L08983a.  return v0 @kind object;
  #L08983c.  v0:= v0 + -2;
  #L089840.  goto L08981e;
  #L089842.  v0:= 0I;
  #L089844.  goto L08983a;
}
procedure `int` `a`(`a.q` v1 @kind this) @signature `La/q;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L089858.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08985c.  v0:= length @variable v0;
  #L08985e.  v0:= v0 / 2;
  #L089862.  return v0;
}
procedure `java.lang.String` `a`(`a.q` v2 @kind this, `int` v3 ) @signature `La/q;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L089874.  v0:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L089878.  v1:= v3 * 2;
  #L08987c.  v0:= v0[v1] @kind object;
  #L089880.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L089894.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L089898.  call temp:= `a`(v0, v2) @signature `La/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L08989e.  v0:= temp @kind object;
  #L0898a0.  return v0 @kind object;
}
procedure `a.q$a` `b`(`a.q` v3 @kind this) @signature `La/q;.b:()La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0898b4.  v0:= new `a.q$a`;
  #L0898b8.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L0898be.  v1:= v0.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L0898c2.  v2:= v3.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L0898c6.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L0898cc.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`a.q` v2 @kind this, `int` v3 ) @signature `La/q;.b:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0898e0.  v0:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L0898e4.  v1:= v3 * 2;
  #L0898e8.  v1:= v1 + 1;
  #L0898ec.  v0:= v0[v1] @kind object;
  #L0898f0.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.q` v5 @kind this, `java.lang.String` v6 @kind object) @signature `La/q;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089904.  v1:= 0I;
  #L089906.  v0:= 0I;
  #L089908.  call temp:= `a`(v5) @signature `La/q;.a:()I` @kind virtual;
  #L08990e.  v2:= temp;
  #L089910.  v4:= v0;
  #L089912.  v0:= v1 @kind object;
  #L089914.  v1:= v4;
  #L089916.  if v1 >= v2 then goto L089952;
  #L08991a.  call temp:= `a`(v5, v1) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L089920.  v3:= temp @kind object;
  #L089922.  call temp:= `equalsIgnoreCase`(v6, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L089928.  v3:= temp;
  #L08992a.  if v3 == 0 then goto L08994c;
  #L08992e.  if v0 != 0 then goto L08993e;
  #L089932.  v0:= new `java.util.ArrayList`;
  #L089936.  v3:= 2I;
  #L089938.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L08993e.  call temp:= `b`(v5, v1) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L089944.  v3:= temp @kind object;
  #L089946.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08994c.  v1:= v1 + 1;
  #L089950.  goto L089916;
  #L089952.  if v0 == 0 then goto L089960;
  #L089956.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08995c.  v0:= temp @kind object;
  #L08995e.  return v0 @kind object;
  #L089960.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L089966.  v0:= temp @kind object;
  #L089968.  goto L08995e;
}
procedure `boolean` `equals`(`a.q` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08997c.  v0:= instanceof @variable v3 @type ^`a.q` @kind boolean;
  #L089980.  if v0 == 0 then goto L0899a0;
  #L089984.  v3:= (`a.q`) v3 @kind object;
  #L089988.  v0:= v3.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08998c.  v1:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L089990.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L089996.  v0:= temp;
  #L089998.  if v0 == 0 then goto L0899a0;
  #L08999c.  v0:= 1I;
  #L08999e.  return v0;
  #L0899a0.  v0:= 0I;
  #L0899a2.  goto L08999e;
}
procedure `int` `hashCode`(`a.q` v1 @kind this) @signature `La/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0899b4.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L0899b8.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L0899be.  v0:= temp;
  #L0899c0.  return v0;
}
procedure `java.lang.String` `toString`(`a.q` v5 @kind this) @signature `La/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0899d4.  v1:= new `java.lang.StringBuilder`;
  #L0899d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0899de.  v0:= 0I;
  #L0899e0.  call temp:= `a`(v5) @signature `La/q;.a:()I` @kind virtual;
  #L0899e6.  v2:= temp;
  #L0899e8.  if v0 >= v2 then goto L089a28;
  #L0899ec.  call temp:= `a`(v5, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L0899f2.  v3:= temp @kind object;
  #L0899f4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0899fa.  v3:= temp @kind object;
  #L0899fc.  v4:= ": " @kind object;
  #L089a00.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089a06.  v3:= temp @kind object;
  #L089a08.  call temp:= `b`(v5, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L089a0e.  v4:= temp @kind object;
  #L089a10.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089a16.  v3:= temp @kind object;
  #L089a18.  v4:= "\n" @kind object;
  #L089a1c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089a22.  v0:= v0 + 1;
  #L089a26.  goto L0899e8;
  #L089a28.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089a2e.  v0:= temp @kind object;
  #L089a30.  return v0 @kind object;
}

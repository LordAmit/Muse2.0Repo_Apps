record `a.g` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `a.g.b` @AccessFlag PRIVATE_FINAL;
  `a.a.h.b` `a.g.c` @AccessFlag PRIVATE_FINAL;
}
global `a.g` `@@a.g.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L086954.  v0:= new `a.g$a`;
  #L086958.  call `<init>`(v0) @signature `La/g$a;.<init>:()V` @kind direct;
  #L08695e.  call temp:= `a`(v0) @signature `La/g$a;.a:()La/g;` @kind virtual;
  #L086964.  v0:= temp @kind object;
  #L086966.  `@@a.g.a` @type ^`a.g` := v0 @kind object;
  #L08696a.  return @kind void;
}
procedure `void` `<init>`(`a.g` v0 @kind this, `java.util.Set` v1 @kind object, `a.a.h.b` v2 @kind object) @signature `La/g;.<init>:(Ljava/util/Set;La/a/h/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L08697c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L086982.  v0.`a.g.b` @type ^`java.util.Set` := v1 @kind object;
  #L086986.  v0.`a.g.c` @type ^`a.a.h.b` := v2 @kind object;
  #L08698a.  return @kind void;
}
procedure `b.f` `a`(`java.security.cert.X509Certificate` v1 @kind object) @signature `La/g;.a:(Ljava/security/cert/X509Certificate;)Lb/f;` @AccessFlag STATIC {
    temp;
    v0;

  #L08699c.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L0869a2.  v0:= temp @kind object;
  #L0869a4.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L0869aa.  v0:= temp @kind object;
  #L0869ac.  call temp:= `a`(v0) @signature `Lb/f;.a:([B)Lb/f;` @kind static;
  #L0869b2.  v0:= temp @kind object;
  #L0869b4.  call temp:= `c`(v0) @signature `Lb/f;.c:()Lb/f;` @kind virtual;
  #L0869ba.  v0:= temp @kind object;
  #L0869bc.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.security.cert.Certificate` v2 @kind object) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0869d0.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L0869d4.  if v0 != 0 then goto L0869e8;
  #L0869d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L0869dc.  v1:= "Certificate pinning requires X509 certificates" @kind object;
  #L0869e0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0869e6.  throw v0;
  #L0869e8.  v0:= new `java.lang.StringBuilder`;
  #L0869ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0869f2.  v1:= "sha256/" @kind object;
  #L0869f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0869fc.  v0:= temp @kind object;
  #L0869fe.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L086a02.  call temp:= `b`(v2) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L086a08.  v1:= temp @kind object;
  #L086a0a.  call temp:= `b`(v1) @signature `Lb/f;.b:()Ljava/lang/String;` @kind virtual;
  #L086a10.  v1:= temp @kind object;
  #L086a12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086a18.  v0:= temp @kind object;
  #L086a1a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L086a20.  v0:= temp @kind object;
  #L086a22.  return v0 @kind object;
}
procedure `b.f` `b`(`java.security.cert.X509Certificate` v1 @kind object) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @AccessFlag STATIC {
    temp;
    v0;

  #L086a34.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L086a3a.  v0:= temp @kind object;
  #L086a3c.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L086a42.  v0:= temp @kind object;
  #L086a44.  call temp:= `a`(v0) @signature `Lb/f;.a:([B)Lb/f;` @kind static;
  #L086a4a.  v0:= temp @kind object;
  #L086a4c.  call temp:= `d`(v0) @signature `Lb/f;.d:()Lb/f;` @kind virtual;
  #L086a52.  v0:= temp @kind object;
  #L086a54.  return v0 @kind object;
}
procedure `a.g` `a`(`a.g` v2 @kind this, `a.a.h.b` v3 @kind object) @signature `La/g;.a:(La/a/h/b;)La/g;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L086a68.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086a6c.  call temp:= `a`(v0, v3) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L086a72.  v0:= temp;
  #L086a74.  if v0 == 0 then goto L086a7a;
  #L086a78.  return v2 @kind object;
  #L086a7a.  v0:= new `a.g`;
  #L086a7e.  v1:= v2.`a.g.b` @type ^`java.util.Set` @kind object;
  #L086a82.  call `<init>`(v0, v1, v3) @signature `La/g;.<init>:(Ljava/util/Set;La/a/h/b;)V` @kind direct;
  #L086a88.  v2:= v0 @kind object;
  #L086a8a.  goto L086a78;
}
procedure `java.util.List` `a`(`a.g` v4 @kind this, `java.lang.String` v5 @kind object) @signature `La/g;.a:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L086a9c.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L086aa2.  v1:= temp @kind object;
  #L086aa4.  v0:= v4.`a.g.b` @type ^`java.util.Set` @kind object;
  #L086aa8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L086aae.  v2:= temp @kind object;
  #L086ab0.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L086ab6.  v0:= temp;
  #L086ab8.  if v0 == 0 then goto L086af2;
  #L086abc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L086ac2.  v0:= temp @kind object;
  #L086ac4.  v0:= (`a.g$b`) v0 @kind object;
  #L086ac8.  call temp:= `a`(v0, v5) @signature `La/g$b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L086ace.  v3:= temp;
  #L086ad0.  if v3 == 0 then goto L086ab0;
  #L086ad4.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L086ada.  v3:= temp;
  #L086adc.  if v3 == 0 then goto L086aea;
  #L086ae0.  v1:= new `java.util.ArrayList`;
  #L086ae4.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L086aea.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L086af0.  goto L086ab0;
  #L086af2.  return v1 @kind object;
}
procedure `void` `a`(`a.g` v13 @kind this, `java.lang.String` v14 @kind object, `java.util.List` v15 @kind object) @signature `La/g;.a:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L086b04.  v6:= 0I;
  #L086b06.  v4:= 0I;
  #L086b08.  call temp:= `a`(v13, v14) @signature `La/g;.a:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L086b0e.  v8:= temp @kind object;
  #L086b10.  call temp:= `isEmpty`(v8) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L086b16.  v0:= temp;
  #L086b18.  if v0 == 0 then goto L086b1e;
  #L086b1c.  return @kind void;
  #L086b1e.  v0:= v13.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086b22.  if v0 == 0 then goto L086b32;
  #L086b26.  v0:= v13.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086b2a.  call temp:= `a`(v0, v15, v14) @signature `La/a/h/b;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L086b30.  v15:= temp @kind object;
  #L086b32.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L086b38.  v9:= temp;
  #L086b3a.  v7:= v4;
  #L086b3c.  if v7 >= v9 then goto L086bf0;
  #L086b40.  call temp:= `get`(v15, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L086b46.  v0:= temp @kind object;
  #L086b48.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L086b4c.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L086b52.  v10:= temp;
  #L086b54.  v5:= v4;
  #L086b56.  v2:= v6 @kind object;
  #L086b58.  v3:= v6 @kind object;
  #L086b5a.  if v5 >= v10 then goto L086be8;
  #L086b5e.  call temp:= `get`(v8, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L086b64.  v1:= temp @kind object;
  #L086b66.  v1:= (`a.g$b`) v1 @kind object;
  #L086b6a.  v11:= v1.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L086b6e.  v12:= "sha256/" @kind object;
  #L086b72.  call temp:= `equals`(v11, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L086b78.  v11:= temp;
  #L086b7a.  if v11 == 0 then goto L086baa;
  #L086b7e.  if v2 != 0 then goto L086b8a;
  #L086b82.  call temp:= `b`(v0) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L086b88.  v2:= temp @kind object;
  #L086b8a.  v1:= v1.`a.g$b.d` @type ^`b.f` @kind object;
  #L086b8e.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L086b94.  v1:= temp;
  #L086b96.  if v1 != 0 then goto L086b1c;
  #L086b9a.  v1:= v2 @kind object;
  #L086b9c.  v2:= v3 @kind object;
  #L086b9e.  v3:= v5 + 1;
  #L086ba2.  v5:= v3;
  #L086ba4.  v3:= v2 @kind object;
  #L086ba6.  v2:= v1 @kind object;
  #L086ba8.  goto L086b5a;
  #L086baa.  v11:= v1.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L086bae.  v12:= "sha1/" @kind object;
  #L086bb2.  call temp:= `equals`(v11, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L086bb8.  v11:= temp;
  #L086bba.  if v11 == 0 then goto L086bdc;
  #L086bbe.  if v3 != 0 then goto L086bca;
  #L086bc2.  call temp:= `a`(v0) @signature `La/g;.a:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L086bc8.  v3:= temp @kind object;
  #L086bca.  v1:= v1.`a.g$b.d` @type ^`b.f` @kind object;
  #L086bce.  call temp:= `equals`(v1, v3) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L086bd4.  v1:= temp;
  #L086bd6.  if v1 == 0 then goto L086b9a;
  #L086bda.  goto L086b1c;
  #L086bdc.  v0:= new `java.lang.AssertionError`;
  #L086be0.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L086be6.  throw v0;
  #L086be8.  v0:= v7 + 1;
  #L086bec.  v7:= v0;
  #L086bee.  goto L086b3c;
  #L086bf0.  v0:= new `java.lang.StringBuilder`;
  #L086bf4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L086bfa.  v1:= "Certificate pinning failure!" @kind object;
  #L086bfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c04.  v0:= temp @kind object;
  #L086c06.  v1:= "\n  Peer certificate chain:" @kind object;
  #L086c0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c10.  v2:= temp @kind object;
  #L086c12.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L086c18.  v3:= temp;
  #L086c1a.  v1:= v4;
  #L086c1c.  if v1 >= v3 then goto L086c72;
  #L086c20.  call temp:= `get`(v15, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L086c26.  v0:= temp @kind object;
  #L086c28.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L086c2c.  v5:= "\n    " @kind object;
  #L086c30.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c36.  v5:= temp @kind object;
  #L086c38.  call temp:= `a`(v0) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L086c3e.  v6:= temp @kind object;
  #L086c40.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c46.  v5:= temp @kind object;
  #L086c48.  v6:= ": " @kind object;
  #L086c4c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c52.  v5:= temp @kind object;
  #L086c54.  call temp:= `getSubjectDN`(v0) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L086c5a.  v0:= temp @kind object;
  #L086c5c.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L086c62.  v0:= temp @kind object;
  #L086c64.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c6a.  v0:= v1 + 1;
  #L086c6e.  v1:= v0;
  #L086c70.  goto L086c1c;
  #L086c72.  v0:= "\n  Pinned certificates for " @kind object;
  #L086c76.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c7c.  v0:= temp @kind object;
  #L086c7e.  call temp:= `append`(v0, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c84.  v0:= temp @kind object;
  #L086c86.  v1:= ":" @kind object;
  #L086c8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086c90.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L086c96.  v3:= temp;
  #L086c98.  v1:= v4;
  #L086c9a.  if v1 >= v3 then goto L086cc4;
  #L086c9e.  call temp:= `get`(v8, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L086ca4.  v0:= temp @kind object;
  #L086ca6.  v0:= (`a.g$b`) v0 @kind object;
  #L086caa.  v4:= "\n    " @kind object;
  #L086cae.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086cb4.  v4:= temp @kind object;
  #L086cb6.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086cbc.  v0:= v1 + 1;
  #L086cc0.  v1:= v0;
  #L086cc2.  goto L086c9a;
  #L086cc4.  v0:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L086cc8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L086cce.  v1:= temp @kind object;
  #L086cd0.  call `<init>`(v0, v1) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L086cd6.  throw v0;
}
procedure `boolean` `equals`(`a.g` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L086ce8.  v1:= 1I;
  #L086cea.  if v4 != v3 then goto L086cf0;
  #L086cee.  return v1;
  #L086cf0.  v0:= instanceof @variable v4 @type ^`a.g` @kind boolean;
  #L086cf4.  if v0 == 0 then goto L086d30;
  #L086cf8.  v2:= v3.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086cfc.  v0:= v4 @kind object;
  #L086cfe.  v0:= (`a.g`) v0 @kind object;
  #L086d02.  v0:= v0.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086d06.  call temp:= `a`(v2, v0) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L086d0c.  v0:= temp;
  #L086d0e.  if v0 == 0 then goto L086d30;
  #L086d12.  v0:= v3.`a.g.b` @type ^`java.util.Set` @kind object;
  #L086d16.  v4:= (`a.g`) v4 @kind object;
  #L086d1a.  v2:= v4.`a.g.b` @type ^`java.util.Set` @kind object;
  #L086d1e.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L086d24.  v0:= temp;
  #L086d26.  if v0 == 0 then goto L086d30;
  #L086d2a.  v0:= v1;
  #L086d2c.  v1:= v0;
  #L086d2e.  goto L086cee;
  #L086d30.  v0:= 0I;
  #L086d32.  goto L086d2c;
}
procedure `int` `hashCode`(`a.g` v2 @kind this) @signature `La/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L086d44.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086d48.  if v0 == 0 then goto L086d6c;
  #L086d4c.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086d50.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L086d56.  v0:= temp;
  #L086d58.  v0:= v0 * 31;
  #L086d5c.  v1:= v2.`a.g.b` @type ^`java.util.Set` @kind object;
  #L086d60.  call temp:= `hashCode`(v1) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L086d66.  v1:= temp;
  #L086d68.  v0:= v0 + v1 @kind int;
  #L086d6a.  return v0;
  #L086d6c.  v0:= 0I;
  #L086d6e.  goto L086d58;
}

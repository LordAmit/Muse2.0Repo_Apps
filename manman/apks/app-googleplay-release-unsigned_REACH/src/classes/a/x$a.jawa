record `a.x$a` @kind class @AccessFlag PUBLIC {
  `a.r` `a.x$a.a` @AccessFlag ;
  `java.lang.String` `a.x$a.b` @AccessFlag ;
  `a.q$a` `a.x$a.c` @AccessFlag ;
  `a.y` `a.x$a.d` @AccessFlag ;
  `java.lang.Object` `a.x$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`a.x$a` v1 @kind this) @signature `La/x$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L08c728.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08c72e.  v0:= "GET" @kind object;
  #L08c732.  v1.`a.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08c736.  v0:= new `a.q$a`;
  #L08c73a.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L08c740.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08c744.  return @kind void;
}
procedure `void` `<init>`(`a.x$a` v1 @kind this, `a.x` v2 @kind object) @signature `La/x$a;.<init>:(La/x;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L08c758.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08c75e.  v0:= v2.`a.x.a` @type ^`a.r` @kind object;
  #L08c762.  v1.`a.x$a.a` @type ^`a.r` := v0 @kind object;
  #L08c766.  v0:= v2.`a.x.b` @type ^`java.lang.String` @kind object;
  #L08c76a.  v1.`a.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08c76e.  v0:= v2.`a.x.d` @type ^`a.y` @kind object;
  #L08c772.  v1.`a.x$a.d` @type ^`a.y` := v0 @kind object;
  #L08c776.  v0:= v2.`a.x.e` @type ^`java.lang.Object` @kind object;
  #L08c77a.  v1.`a.x$a.e` @type ^`java.lang.Object` := v0 @kind object;
  #L08c77e.  v0:= v2.`a.x.c` @type ^`a.q` @kind object;
  #L08c782.  call temp:= `b`(v0) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L08c788.  v0:= temp @kind object;
  #L08c78a.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08c78e.  return @kind void;
}
procedure `a.x$a` `a`(`a.x$a` v1 @kind this, `a.q` v2 @kind object) @signature `La/x$a;.a:(La/q;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c7a0.  call temp:= `b`(v2) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L08c7a6.  v0:= temp @kind object;
  #L08c7a8.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08c7ac.  return v1 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v2 @kind this, `a.r` v3 @kind object) @signature `La/x$a;.a:(La/r;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08c7c0.  if v3 != 0 then goto L08c7d4;
  #L08c7c4.  v0:= new `java.lang.NullPointerException`;
  #L08c7c8.  v1:= "url == null" @kind object;
  #L08c7cc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c7d2.  throw v0;
  #L08c7d4.  v2.`a.x$a.a` @type ^`a.r` := v3 @kind object;
  #L08c7d8.  return v2 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L08c7ec.  v6:= 4I;
  #L08c7ee.  v5:= 3I;
  #L08c7f0.  v1:= 1I;
  #L08c7f2.  v2:= 0I;
  #L08c7f4.  if v8 != 0 then goto L08c808;
  #L08c7f8.  v0:= new `java.lang.NullPointerException`;
  #L08c7fc.  v1:= "url == null" @kind object;
  #L08c800.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c806.  throw v0;
  #L08c808.  v3:= "ws:" @kind object;
  #L08c80c.  v0:= v8 @kind object;
  #L08c80e.  v4:= v2;
  #L08c810.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08c816.  v0:= temp;
  #L08c818.  if v0 == 0 then goto L08c888;
  #L08c81c.  v0:= new `java.lang.StringBuilder`;
  #L08c820.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08c826.  v1:= "http:" @kind object;
  #L08c82a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c830.  v0:= temp @kind object;
  #L08c832.  call temp:= `substring`(v8, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08c838.  v1:= temp @kind object;
  #L08c83a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c840.  v0:= temp @kind object;
  #L08c842.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08c848.  v8:= temp @kind object;
  #L08c84a.  call temp:= `e`(v8) @signature `La/r;.e:(Ljava/lang/String;)La/r;` @kind static;
  #L08c850.  v0:= temp @kind object;
  #L08c852.  if v0 != 0 then goto L08c8ce;
  #L08c856.  v0:= new `java.lang.IllegalArgumentException`;
  #L08c85a.  v1:= new `java.lang.StringBuilder`;
  #L08c85e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08c864.  v2:= "unexpected url: " @kind object;
  #L08c868.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c86e.  v1:= temp @kind object;
  #L08c870.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c876.  v1:= temp @kind object;
  #L08c878.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08c87e.  v1:= temp @kind object;
  #L08c880.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c886.  throw v0;
  #L08c888.  v3:= "wss:" @kind object;
  #L08c88c.  v0:= v8 @kind object;
  #L08c88e.  v4:= v2;
  #L08c890.  v5:= v6;
  #L08c892.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08c898.  v0:= temp;
  #L08c89a.  if v0 == 0 then goto L08c84a;
  #L08c89e.  v0:= new `java.lang.StringBuilder`;
  #L08c8a2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08c8a8.  v1:= "https:" @kind object;
  #L08c8ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c8b2.  v0:= temp @kind object;
  #L08c8b4.  call temp:= `substring`(v8, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08c8ba.  v1:= temp @kind object;
  #L08c8bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c8c2.  v0:= temp @kind object;
  #L08c8c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08c8ca.  v8:= temp @kind object;
  #L08c8cc.  goto L08c84a;
  #L08c8ce.  call temp:= `a`(v7, v0) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L08c8d4.  v0:= temp @kind object;
  #L08c8d6.  return v0 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v3 @kind this, `java.lang.String` v4 @kind object, `a.y` v5 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08c8e8.  if v4 != 0 then goto L08c8fc;
  #L08c8ec.  v0:= new `java.lang.NullPointerException`;
  #L08c8f0.  v1:= "method == null" @kind object;
  #L08c8f4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c8fa.  throw v0;
  #L08c8fc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08c902.  v0:= temp;
  #L08c904.  if v0 != 0 then goto L08c918;
  #L08c908.  v0:= new `java.lang.IllegalArgumentException`;
  #L08c90c.  v1:= "method.length() == 0" @kind object;
  #L08c910.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c916.  throw v0;
  #L08c918.  if v5 == 0 then goto L08c966;
  #L08c91c.  call temp:= `c`(v4) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L08c922.  v0:= temp;
  #L08c924.  if v0 != 0 then goto L08c966;
  #L08c928.  v0:= new `java.lang.IllegalArgumentException`;
  #L08c92c.  v1:= new `java.lang.StringBuilder`;
  #L08c930.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08c936.  v2:= "method " @kind object;
  #L08c93a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c940.  v1:= temp @kind object;
  #L08c942.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c948.  v1:= temp @kind object;
  #L08c94a.  v2:= " must not have a request body." @kind object;
  #L08c94e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c954.  v1:= temp @kind object;
  #L08c956.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08c95c.  v1:= temp @kind object;
  #L08c95e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c964.  throw v0;
  #L08c966.  if v5 != 0 then goto L08c9b4;
  #L08c96a.  call temp:= `b`(v4) @signature `La/a/c/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L08c970.  v0:= temp;
  #L08c972.  if v0 == 0 then goto L08c9b4;
  #L08c976.  v0:= new `java.lang.IllegalArgumentException`;
  #L08c97a.  v1:= new `java.lang.StringBuilder`;
  #L08c97e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08c984.  v2:= "method " @kind object;
  #L08c988.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c98e.  v1:= temp @kind object;
  #L08c990.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c996.  v1:= temp @kind object;
  #L08c998.  v2:= " must have a request body." @kind object;
  #L08c99c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c9a2.  v1:= temp @kind object;
  #L08c9a4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08c9aa.  v1:= temp @kind object;
  #L08c9ac.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c9b2.  throw v0;
  #L08c9b4.  v3.`a.x$a.b` @type ^`java.lang.String` := v4 @kind object;
  #L08c9b8.  v3.`a.x$a.d` @type ^`a.y` := v5 @kind object;
  #L08c9bc.  return v3 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c9d0.  v0:= v1.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L08c9d4.  call temp:= `c`(v0, v2, v3) @signature `La/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08c9da.  return v1 @kind object;
}
procedure `a.x` `a`(`a.x$a` v2 @kind this) @signature `La/x$a;.a:()La/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08c9ec.  v0:= v2.`a.x$a.a` @type ^`a.r` @kind object;
  #L08c9f0.  if v0 != 0 then goto L08ca04;
  #L08c9f4.  v0:= new `java.lang.IllegalStateException`;
  #L08c9f8.  v1:= "url == null" @kind object;
  #L08c9fc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08ca02.  throw v0;
  #L08ca04.  v0:= new `a.x`;
  #L08ca08.  call `<init>`(v0, v2) @signature `La/x;.<init>:(La/x$a;)V` @kind direct;
  #L08ca0e.  return v0 @kind object;
}
procedure `a.x$a` `b`(`a.x$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ca20.  v0:= v1.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L08ca24.  call temp:= `b`(v0, v2) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08ca2a.  return v1 @kind object;
}

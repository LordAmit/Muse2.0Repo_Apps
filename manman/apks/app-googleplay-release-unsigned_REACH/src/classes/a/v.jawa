record `a.v` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `a.v.e` @AccessFlag PRIVATE_FINAL;
}
global `a.v` `@@a.v.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v`[] `@@a.v.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L08c104.  v6:= 3I;
  #L08c106.  v5:= 2I;
  #L08c108.  v4:= 1I;
  #L08c10a.  v3:= 0I;
  #L08c10c.  v0:= new `a.v`;
  #L08c110.  v1:= "HTTP_1_0" @kind object;
  #L08c114.  v2:= "http/1.0" @kind object;
  #L08c118.  call `<init>`(v0, v1, v3, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08c11e.  `@@a.v.a` @type ^`a.v` := v0 @kind object;
  #L08c122.  v0:= new `a.v`;
  #L08c126.  v1:= "HTTP_1_1" @kind object;
  #L08c12a.  v2:= "http/1.1" @kind object;
  #L08c12e.  call `<init>`(v0, v1, v4, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08c134.  `@@a.v.b` @type ^`a.v` := v0 @kind object;
  #L08c138.  v0:= new `a.v`;
  #L08c13c.  v1:= "SPDY_3" @kind object;
  #L08c140.  v2:= "spdy/3.1" @kind object;
  #L08c144.  call `<init>`(v0, v1, v5, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08c14a.  `@@a.v.c` @type ^`a.v` := v0 @kind object;
  #L08c14e.  v0:= new `a.v`;
  #L08c152.  v1:= "HTTP_2" @kind object;
  #L08c156.  v2:= "h2" @kind object;
  #L08c15a.  call `<init>`(v0, v1, v6, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08c160.  `@@a.v.d` @type ^`a.v` := v0 @kind object;
  #L08c164.  v0:= 4I;
  #L08c166.  v0:= new `a.v`[v0];
  #L08c16a.  v1:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08c16e.  v0[v3]:= v1 @kind object;
  #L08c172.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08c176.  v0[v4]:= v1 @kind object;
  #L08c17a.  v1:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08c17e.  v0[v5]:= v1 @kind object;
  #L08c182.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08c186.  v0[v6]:= v1 @kind object;
  #L08c18a.  `@@a.v.f` @type ^`a.v`[] := v0 @kind object;
  #L08c18e.  return @kind void;
}
procedure `void` `<init>`(`a.v` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L08c1a0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L08c1a6.  v0.`a.v.e` @type ^`java.lang.String` := v3 @kind object;
  #L08c1aa.  return @kind void;
}
procedure `a.v` `a`(`java.lang.String` v3 @kind object) @signature `La/v;.a:(Ljava/lang/String;)La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08c1bc.  v0:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08c1c0.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08c1c4.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08c1ca.  v0:= temp;
  #L08c1cc.  if v0 == 0 then goto L08c1d6;
  #L08c1d0.  v0:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08c1d4.  return v0 @kind object;
  #L08c1d6.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08c1da.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08c1de.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08c1e4.  v0:= temp;
  #L08c1e6.  if v0 == 0 then goto L08c1f0;
  #L08c1ea.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08c1ee.  goto L08c1d4;
  #L08c1f0.  v0:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08c1f4.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08c1f8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08c1fe.  v0:= temp;
  #L08c200.  if v0 == 0 then goto L08c20a;
  #L08c204.  v0:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08c208.  goto L08c1d4;
  #L08c20a.  v0:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08c20e.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08c212.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08c218.  v0:= temp;
  #L08c21a.  if v0 == 0 then goto L08c224;
  #L08c21e.  v0:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08c222.  goto L08c1d4;
  #L08c224.  v0:= new `java.io.IOException`;
  #L08c228.  v1:= new `java.lang.StringBuilder`;
  #L08c22c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08c232.  v2:= "Unexpected protocol: " @kind object;
  #L08c236.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c23c.  v1:= temp @kind object;
  #L08c23e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c244.  v1:= temp @kind object;
  #L08c246.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08c24c.  v1:= temp @kind object;
  #L08c24e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c254.  throw v0;
}
procedure `a.v` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/v;.valueOf:(Ljava/lang/String;)La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08c268.  v0:= constclass @type ^`a.v` @kind object;
  #L08c26c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L08c272.  v0:= temp @kind object;
  #L08c274.  v0:= (`a.v`) v0 @kind object;
  #L08c278.  return v0 @kind object;
}
procedure `a.v`[] `values`() @signature `La/v;.values:()[La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08c28c.  v0:= `@@a.v.f` @type ^`a.v`[] @kind object;
  #L08c290.  call temp:= `clone`(v0) @signature `[La/v;.clone:()Ljava/lang/Object;` @kind virtual;
  #L08c296.  v0:= temp @kind object;
  #L08c298.  v0:= (`a.v`[]) v0 @kind object;
  #L08c29c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`a.v` v1 @kind this) @signature `La/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c2b0.  v0:= v1.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08c2b4.  return v0 @kind object;
}

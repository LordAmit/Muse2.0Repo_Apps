record `a.q$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `a.q$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`a.q$a` v2 @kind this) @signature `La/q$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L089514.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08951a.  v0:= new `java.util.ArrayList`;
  #L08951e.  v1:= 20I;
  #L089522.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L089528.  v2.`a.q$a.a` @type ^`java.util.List` := v0 @kind object;
  #L08952c.  return @kind void;
}
procedure `void` `d`(`a.q$a` v9 @kind this, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L089540.  v5:= 127I;
  #L089544.  v8:= 3I;
  #L089546.  v7:= 2I;
  #L089548.  v6:= 1I;
  #L08954a.  v1:= 0I;
  #L08954c.  if v10 != 0 then goto L089560;
  #L089550.  v0:= new `java.lang.NullPointerException`;
  #L089554.  v1:= "name == null" @kind object;
  #L089558.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08955e.  throw v0;
  #L089560.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L089566.  v0:= temp;
  #L089568.  if v0 == 0 then goto L08957c;
  #L08956c.  v0:= new `java.lang.IllegalArgumentException`;
  #L089570.  v1:= "name is empty" @kind object;
  #L089574.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08957a.  throw v0;
  #L08957c.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089582.  v2:= temp;
  #L089584.  v0:= v1;
  #L089586.  if v0 >= v2 then goto L0895dc;
  #L08958a.  call temp:= `charAt`(v10, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089590.  v3:= temp;
  #L089592.  v4:= 32I;
  #L089596.  if v3 <= v4 then goto L08959e;
  #L08959a.  if v3 < v5 then goto L0895d6;
  #L08959e.  v2:= new `java.lang.IllegalArgumentException`;
  #L0895a2.  v4:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L0895a6.  v5:= new `java.lang.Object`[v8];
  #L0895aa.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0895b0.  v3:= temp @kind object;
  #L0895b2.  v5[v1]:= v3 @kind object;
  #L0895b6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0895bc.  v0:= temp @kind object;
  #L0895be.  v5[v6]:= v0 @kind object;
  #L0895c2.  v5[v7]:= v10 @kind object;
  #L0895c6.  call temp:= `a`(v4, v5) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0895cc.  v0:= temp @kind object;
  #L0895ce.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0895d4.  throw v2;
  #L0895d6.  v0:= v0 + 1;
  #L0895da.  goto L089586;
  #L0895dc.  if v11 != 0 then goto L0895f0;
  #L0895e0.  v0:= new `java.lang.NullPointerException`;
  #L0895e4.  v1:= "value == null" @kind object;
  #L0895e8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0895ee.  throw v0;
  #L0895f0.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0895f6.  v2:= temp;
  #L0895f8.  v0:= v1;
  #L0895fa.  if v0 >= v2 then goto L08965e;
  #L0895fe.  call temp:= `charAt`(v11, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089604.  v3:= temp;
  #L089606.  v4:= 31I;
  #L08960a.  if v3 > v4 then goto L089616;
  #L08960e.  v4:= 9I;
  #L089612.  if v3 != v4 then goto L08961a;
  #L089616.  if v3 < v5 then goto L089658;
  #L08961a.  v2:= new `java.lang.IllegalArgumentException`;
  #L08961e.  v4:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L089622.  v5:= 4I;
  #L089624.  v5:= new `java.lang.Object`[v5];
  #L089628.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08962e.  v3:= temp @kind object;
  #L089630.  v5[v1]:= v3 @kind object;
  #L089634.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08963a.  v0:= temp @kind object;
  #L08963c.  v5[v6]:= v0 @kind object;
  #L089640.  v5[v7]:= v10 @kind object;
  #L089644.  v5[v8]:= v11 @kind object;
  #L089648.  call temp:= `a`(v4, v5) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L08964e.  v0:= temp @kind object;
  #L089650.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089656.  throw v2;
  #L089658.  v0:= v0 + 1;
  #L08965c.  goto L0895fa;
  #L08965e.  return @kind void;
}
procedure `a.q$a` `a`(`a.q$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/q$a;.a:(Ljava/lang/String;)La/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L089670.  v2:= 1I;
  #L089672.  v0:= ":" @kind object;
  #L089676.  call temp:= `indexOf`(v4, v0, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L08967c.  v0:= temp;
  #L08967e.  v1:= -1I;
  #L089680.  if v0 == v1 then goto L0896a4;
  #L089684.  v1:= 0I;
  #L089686.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08968c.  v1:= temp @kind object;
  #L08968e.  v0:= v0 + 1;
  #L089692.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L089698.  v0:= temp @kind object;
  #L08969a.  call temp:= `b`(v3, v1, v0) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L0896a0.  v0:= temp @kind object;
  #L0896a2.  return v0 @kind object;
  #L0896a4.  v0:= ":" @kind object;
  #L0896a8.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0896ae.  v0:= temp;
  #L0896b0.  if v0 == 0 then goto L0896ca;
  #L0896b4.  v0:= "" @kind object;
  #L0896b8.  call temp:= `substring`(v4, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0896be.  v1:= temp @kind object;
  #L0896c0.  call temp:= `b`(v3, v0, v1) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L0896c6.  v0:= temp @kind object;
  #L0896c8.  goto L0896a2;
  #L0896ca.  v0:= "" @kind object;
  #L0896ce.  call temp:= `b`(v3, v0, v4) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L0896d4.  v0:= temp @kind object;
  #L0896d6.  goto L0896a2;
}
procedure `a.q$a` `a`(`a.q$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/q$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0896e8.  call `d`(v1, v2, v3) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L0896ee.  call temp:= `b`(v1, v2, v3) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L0896f4.  v0:= temp @kind object;
  #L0896f6.  return v0 @kind object;
}
procedure `a.q` `a`(`a.q$a` v1 @kind this) @signature `La/q$a;.a:()La/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L089708.  v0:= new `a.q`;
  #L08970c.  call `<init>`(v0, v1) @signature `La/q;.<init>:(La/q$a;)V` @kind direct;
  #L089712.  return v0 @kind object;
}
procedure `a.q$a` `b`(`a.q$a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L089724.  v0:= 0I;
  #L089726.  v1:= v0;
  #L089728.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08972c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089732.  v0:= temp;
  #L089734.  if v1 >= v0 then goto L089774;
  #L089738.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08973c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089742.  v0:= temp @kind object;
  #L089744.  v0:= (`java.lang.String`) v0 @kind object;
  #L089748.  call temp:= `equalsIgnoreCase`(v3, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08974e.  v0:= temp;
  #L089750.  if v0 == 0 then goto L08976c;
  #L089754.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L089758.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L08975e.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L089762.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L089768.  v1:= v1 + -2;
  #L08976c.  v0:= v1 + 2;
  #L089770.  v1:= v0;
  #L089772.  goto L089728;
  #L089774.  return v2 @kind object;
}
procedure `a.q$a` `b`(`a.q$a` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L089788.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08978c.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089792.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L089796.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L08979c.  v1:= temp @kind object;
  #L08979e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0897a4.  return v2 @kind object;
}
procedure `a.q$a` `c`(`a.q$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `La/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;

  #L0897b8.  call `d`(v0, v1, v2) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L0897be.  call temp:= `b`(v0, v1) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @kind virtual;
  #L0897c4.  call temp:= `b`(v0, v1, v2) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L0897ca.  return v0 @kind object;
}

record `a.ac` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `a.ac.f` @AccessFlag FINAL;
}
global `a.ac` `@@a.ac.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac`[] `@@a.ac.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/ac;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L085d04.  v7:= 4I;
  #L085d06.  v6:= 3I;
  #L085d08.  v5:= 2I;
  #L085d0a.  v4:= 1I;
  #L085d0c.  v3:= 0I;
  #L085d0e.  v0:= new `a.ac`;
  #L085d12.  v1:= "TLS_1_3" @kind object;
  #L085d16.  v2:= "TLSv1.3" @kind object;
  #L085d1a.  call `<init>`(v0, v1, v3, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L085d20.  `@@a.ac.a` @type ^`a.ac` := v0 @kind object;
  #L085d24.  v0:= new `a.ac`;
  #L085d28.  v1:= "TLS_1_2" @kind object;
  #L085d2c.  v2:= "TLSv1.2" @kind object;
  #L085d30.  call `<init>`(v0, v1, v4, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L085d36.  `@@a.ac.b` @type ^`a.ac` := v0 @kind object;
  #L085d3a.  v0:= new `a.ac`;
  #L085d3e.  v1:= "TLS_1_1" @kind object;
  #L085d42.  v2:= "TLSv1.1" @kind object;
  #L085d46.  call `<init>`(v0, v1, v5, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L085d4c.  `@@a.ac.c` @type ^`a.ac` := v0 @kind object;
  #L085d50.  v0:= new `a.ac`;
  #L085d54.  v1:= "TLS_1_0" @kind object;
  #L085d58.  v2:= "TLSv1" @kind object;
  #L085d5c.  call `<init>`(v0, v1, v6, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L085d62.  `@@a.ac.d` @type ^`a.ac` := v0 @kind object;
  #L085d66.  v0:= new `a.ac`;
  #L085d6a.  v1:= "SSL_3_0" @kind object;
  #L085d6e.  v2:= "SSLv3" @kind object;
  #L085d72.  call `<init>`(v0, v1, v7, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L085d78.  `@@a.ac.e` @type ^`a.ac` := v0 @kind object;
  #L085d7c.  v0:= 5I;
  #L085d7e.  v0:= new `a.ac`[v0];
  #L085d82.  v1:= `@@a.ac.a` @type ^`a.ac` @kind object;
  #L085d86.  v0[v3]:= v1 @kind object;
  #L085d8a.  v1:= `@@a.ac.b` @type ^`a.ac` @kind object;
  #L085d8e.  v0[v4]:= v1 @kind object;
  #L085d92.  v1:= `@@a.ac.c` @type ^`a.ac` @kind object;
  #L085d96.  v0[v5]:= v1 @kind object;
  #L085d9a.  v1:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L085d9e.  v0[v6]:= v1 @kind object;
  #L085da2.  v1:= `@@a.ac.e` @type ^`a.ac` @kind object;
  #L085da6.  v0[v7]:= v1 @kind object;
  #L085daa.  `@@a.ac.g` @type ^`a.ac`[] := v0 @kind object;
  #L085dae.  return @kind void;
}
procedure `void` `<init>`(`a.ac` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L085dc0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L085dc6.  v0.`a.ac.f` @type ^`java.lang.String` := v3 @kind object;
  #L085dca.  return @kind void;
}
procedure `a.ac` `a`(`java.lang.String` v3 @kind object) @signature `La/ac;.a:(Ljava/lang/String;)La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L085ddc.  v0:= -1I;
  #L085dde.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L085de4.  v1:= temp;
  #L085de6.  goto L085ea8;
  #L085dec.  goto L085ed4;
  #L085df2.  v0:= new `java.lang.IllegalArgumentException`;
  #L085df6.  v1:= new `java.lang.StringBuilder`;
  #L085dfa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L085e00.  v2:= "Unexpected TLS version: " @kind object;
  #L085e04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085e0a.  v1:= temp @kind object;
  #L085e0c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085e12.  v1:= temp @kind object;
  #L085e14.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L085e1a.  v1:= temp @kind object;
  #L085e1c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L085e22.  throw v0;
  #L085e24.  v1:= "TLSv1.3" @kind object;
  #L085e28.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085e2e.  v1:= temp;
  #L085e30.  if v1 == 0 then goto L085dec;
  #L085e34.  v0:= 0I;
  #L085e36.  goto L085dec;
  #L085e38.  v1:= "TLSv1.2" @kind object;
  #L085e3c.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085e42.  v1:= temp;
  #L085e44.  if v1 == 0 then goto L085dec;
  #L085e48.  v0:= 1I;
  #L085e4a.  goto L085dec;
  #L085e4c.  v1:= "TLSv1.1" @kind object;
  #L085e50.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085e56.  v1:= temp;
  #L085e58.  if v1 == 0 then goto L085dec;
  #L085e5c.  v0:= 2I;
  #L085e5e.  goto L085dec;
  #L085e60.  v1:= "TLSv1" @kind object;
  #L085e64.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085e6a.  v1:= temp;
  #L085e6c.  if v1 == 0 then goto L085dec;
  #L085e70.  v0:= 3I;
  #L085e72.  goto L085dec;
  #L085e74.  v1:= "SSLv3" @kind object;
  #L085e78.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085e7e.  v1:= temp;
  #L085e80.  if v1 == 0 then goto L085dec;
  #L085e84.  v0:= 4I;
  #L085e86.  goto L085dec;
  #L085e88.  v0:= `@@a.ac.a` @type ^`a.ac` @kind object;
  #L085e8c.  return v0 @kind object;
  #L085e8e.  v0:= `@@a.ac.b` @type ^`a.ac` @kind object;
  #L085e92.  goto L085e8c;
  #L085e94.  v0:= `@@a.ac.c` @type ^`a.ac` @kind object;
  #L085e98.  goto L085e8c;
  #L085e9a.  v0:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L085e9e.  goto L085e8c;
  #L085ea0.  v0:= `@@a.ac.e` @type ^`a.ac` @kind object;
  #L085ea4.  goto L085e8c;
  #L085ea6.  
  #L085ea8.  switch v1
                  | -503070503 => goto L085e4c
                  | -503070502 => goto L085e38
                  | -503070501 => goto L085e24
                  | 79201641 => goto L085e74
                  | 79923350 => goto L085e60
                  | else => goto L085dec;
  #L085ed4.  switch v0
                  | 0 => goto L085e88
                  | 1 => goto L085e8e
                  | 2 => goto L085e94
                  | 3 => goto L085e9a
                  | 4 => goto L085ea0
                  | else => goto L085df2;
}
procedure `a.ac` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/ac;.valueOf:(Ljava/lang/String;)La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L085f00.  v0:= constclass @type ^`a.ac` @kind object;
  #L085f04.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L085f0a.  v0:= temp @kind object;
  #L085f0c.  v0:= (`a.ac`) v0 @kind object;
  #L085f10.  return v0 @kind object;
}
procedure `a.ac`[] `values`() @signature `La/ac;.values:()[La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L085f24.  v0:= `@@a.ac.g` @type ^`a.ac`[] @kind object;
  #L085f28.  call temp:= `clone`(v0) @signature `[La/ac;.clone:()Ljava/lang/Object;` @kind virtual;
  #L085f2e.  v0:= temp @kind object;
  #L085f30.  v0:= (`a.ac`[]) v0 @kind object;
  #L085f34.  return v0 @kind object;
}

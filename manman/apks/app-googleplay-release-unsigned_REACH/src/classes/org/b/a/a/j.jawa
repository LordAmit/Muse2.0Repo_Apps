record `org.b.a.a.j` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.b$a` `org.b.a.a.j.a` @AccessFlag PRIVATE;
  `org.b.a.a.b`[] `org.b.a.a.j.b` @AccessFlag PRIVATE;
  `boolean`[] `org.b.a.a.j.c` @AccessFlag PRIVATE;
  `int` `org.b.a.a.j.d` @AccessFlag PRIVATE;
  `int` `org.b.a.a.j.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.a.j` v3 @kind this) @signature `Lorg/b/a/a/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L18f4e4.  v1:= 7I;
  #L18f4e6.  call `<init>`(v3) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L18f4ec.  v0:= new `org.b.a.a.b`[v1];
  #L18f4f0.  v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] := v0 @kind object;
  #L18f4f4.  v0:= new `boolean`[v1];
  #L18f4f8.  v3.`org.b.a.a.j.c` @type ^`boolean`[] := v0 @kind object;
  #L18f4fc.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f500.  v1:= 0I;
  #L18f502.  v2:= new `org.b.a.a.n`;
  #L18f506.  call `<init>`(v2) @signature `Lorg/b/a/a/n;.<init>:()V` @kind direct;
  #L18f50c.  v0[v1]:= v2 @kind object;
  #L18f510.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f514.  v1:= 1I;
  #L18f516.  v2:= new `org.b.a.a.l`;
  #L18f51a.  call `<init>`(v2) @signature `Lorg/b/a/a/l;.<init>:()V` @kind direct;
  #L18f520.  v0[v1]:= v2 @kind object;
  #L18f524.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f528.  v1:= 2I;
  #L18f52a.  v2:= new `org.b.a.a.c`;
  #L18f52e.  call `<init>`(v2) @signature `Lorg/b/a/a/c;.<init>:()V` @kind direct;
  #L18f534.  v0[v1]:= v2 @kind object;
  #L18f538.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f53c.  v1:= 3I;
  #L18f53e.  v2:= new `org.b.a.a.g`;
  #L18f542.  call `<init>`(v2) @signature `Lorg/b/a/a/g;.<init>:()V` @kind direct;
  #L18f548.  v0[v1]:= v2 @kind object;
  #L18f54c.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f550.  v1:= 4I;
  #L18f552.  v2:= new `org.b.a.a.d`;
  #L18f556.  call `<init>`(v2) @signature `Lorg/b/a/a/d;.<init>:()V` @kind direct;
  #L18f55c.  v0[v1]:= v2 @kind object;
  #L18f560.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f564.  v1:= 5I;
  #L18f566.  v2:= new `org.b.a.a.a`;
  #L18f56a.  call `<init>`(v2) @signature `Lorg/b/a/a/a;.<init>:()V` @kind direct;
  #L18f570.  v0[v1]:= v2 @kind object;
  #L18f574.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f578.  v1:= 6I;
  #L18f57a.  v2:= new `org.b.a.a.e`;
  #L18f57e.  call `<init>`(v2) @signature `Lorg/b/a/a/e;.<init>:()V` @kind direct;
  #L18f584.  v0[v1]:= v2 @kind object;
  #L18f588.  call `d`(v3) @signature `Lorg/b/a/a/j;.d:()V` @kind virtual;
  #L18f58e.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.j` v2 @kind this) @signature `Lorg/b/a/a/j;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18f5a0.  v1:= -1I;
  #L18f5a2.  v0:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L18f5a6.  if v0 != v1 then goto L18f5be;
  #L18f5aa.  call temp:= `b`(v2) @signature `Lorg/b/a/a/j;.b:()F` @kind virtual;
  #L18f5b0.  v0:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L18f5b4.  if v0 != v1 then goto L18f5be;
  #L18f5b8.  v0:= 0I;
  #L18f5ba.  v2.`org.b.a.a.j.d` @type ^`int` := v0;
  #L18f5be.  v0:= v2.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f5c2.  v1:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L18f5c6.  v0:= v0[v1] @kind object;
  #L18f5ca.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L18f5d0.  v0:= temp @kind object;
  #L18f5d2.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.j` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lorg/b/a/a/j;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L18f5e4.  v2:= 1I;
  #L18f5e6.  v3:= 0I;
  #L18f5e8.  v4:= new `byte`[v11];
  #L18f5ec.  v5:= v10 + v11 @kind int;
  #L18f5f0.  v1:= v3;
  #L18f5f2.  v0:= v2;
  #L18f5f4.  if v10 >= v5 then goto L18f632;
  #L18f5f8.  v6:= v9[v10] @kind byte;
  #L18f5fc.  v6:= v6 ^& 128;
  #L18f600.  if v6 == 0 then goto L18f61e;
  #L18f604.  v0:= v1 + 1;
  #L18f608.  v6:= v9[v10] @kind byte;
  #L18f60c.  v4[v1]:= v6 @kind byte;
  #L18f610.  v1:= v2;
  #L18f612.  v10:= v10 + 1;
  #L18f616.  v7:= v0;
  #L18f618.  v0:= v1;
  #L18f61a.  v1:= v7;
  #L18f61c.  goto L18f5f4;
  #L18f61e.  if v0 == 0 then goto L18f6a8;
  #L18f622.  v0:= v1 + 1;
  #L18f626.  v6:= v9[v10] @kind byte;
  #L18f62a.  v4[v1]:= v6 @kind byte;
  #L18f62e.  v1:= v3;
  #L18f630.  goto L18f612;
  #L18f632.  v0:= v3;
  #L18f634.  v2:= v8.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f638.  v2:= length @variable v2;
  #L18f63a.  if v0 >= v2 then goto L18f674;
  #L18f63e.  v2:= v8.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L18f642.  v2:= v2[v0] @kind boolean;
  #L18f646.  if v2 != 0 then goto L18f650;
  #L18f64a.  v0:= v0 + 1;
  #L18f64e.  goto L18f634;
  #L18f650.  v2:= v8.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f654.  v2:= v2[v0] @kind object;
  #L18f658.  call temp:= `a`(v2, v4, v3, v1) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @kind virtual;
  #L18f65e.  v2:= temp @kind object;
  #L18f660.  v5:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18f664.  if v2 != v5 then goto L18f67a;
  #L18f668.  v8.`org.b.a.a.j.d` @type ^`int` := v0;
  #L18f66c.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18f670.  v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18f674.  v0:= v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18f678.  return v0 @kind object;
  #L18f67a.  v5:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18f67e.  if v2 != v5 then goto L18f64a;
  #L18f682.  v2:= v8.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L18f686.  v2[v0]:= v3 @kind boolean;
  #L18f68a.  v2:= v8.`org.b.a.a.j.e` @type ^`int`;
  #L18f68e.  v2:= v2 + -1;
  #L18f692.  v8.`org.b.a.a.j.e` @type ^`int` := v2;
  #L18f696.  v2:= v8.`org.b.a.a.j.e` @type ^`int`;
  #L18f69a.  if v2 > 0 then goto L18f64a;
  #L18f69e.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18f6a2.  v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18f6a6.  goto L18f674;
  #L18f6a8.  v7:= v1;
  #L18f6aa.  v1:= v0;
  #L18f6ac.  v0:= v7;
  #L18f6ae.  goto L18f612;
}
procedure `float` `b`(`org.b.a.a.j` v4 @kind this) @signature `Lorg/b/a/a/j;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L18f6c0.  v1:= 0I;
  #L18f6c2.  v0:= v4.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18f6c6.  v2:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18f6ca.  if v0 != v2 then goto L18f6d6;
  #L18f6ce.  v1:= 1065185444I;
  #L18f6d4.  return v1;
  #L18f6d6.  v0:= v4.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18f6da.  v2:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18f6de.  if v0 != v2 then goto L18f6ea;
  #L18f6e2.  v1:= 1008981770I;
  #L18f6e8.  goto L18f6d4;
  #L18f6ea.  v0:= 0I;
  #L18f6ec.  v2:= v4.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f6f0.  v2:= length @variable v2;
  #L18f6f2.  if v0 >= v2 then goto L18f6d4;
  #L18f6f6.  v2:= v4.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L18f6fa.  v2:= v2[v0] @kind boolean;
  #L18f6fe.  if v2 != 0 then goto L18f708;
  #L18f702.  v0:= v0 + 1;
  #L18f706.  goto L18f6ec;
  #L18f708.  v2:= v4.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f70c.  v2:= v2[v0] @kind object;
  #L18f710.  call temp:= `b`(v2) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L18f716.  v2:= temp;
  #L18f718.  v3:= fcmpg(v1, v2);
  #L18f71c.  if v3 >= 0 then goto L18f702;
  #L18f720.  v4.`org.b.a.a.j.d` @type ^`int` := v0;
  #L18f724.  v1:= v2;
  #L18f726.  goto L18f702;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.j` v1 @kind this) @signature `Lorg/b/a/a/j;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f738.  v0:= v1.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18f73c.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.j` v3 @kind this) @signature `Lorg/b/a/a/j;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18f750.  v0:= 0I;
  #L18f752.  v3.`org.b.a.a.j.e` @type ^`int` := v0;
  #L18f756.  v1:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f75a.  v1:= length @variable v1;
  #L18f75c.  if v0 >= v1 then goto L18f78a;
  #L18f760.  v1:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L18f764.  v1:= v1[v0] @kind object;
  #L18f768.  call `d`(v1) @signature `Lorg/b/a/a/b;.d:()V` @kind virtual;
  #L18f76e.  v1:= v3.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L18f772.  v2:= 1I;
  #L18f774.  v1[v0]:= v2 @kind boolean;
  #L18f778.  v1:= v3.`org.b.a.a.j.e` @type ^`int`;
  #L18f77c.  v1:= v1 + 1;
  #L18f780.  v3.`org.b.a.a.j.e` @type ^`int` := v1;
  #L18f784.  v0:= v0 + 1;
  #L18f788.  goto L18f756;
  #L18f78a.  v0:= -1I;
  #L18f78c.  v3.`org.b.a.a.j.d` @type ^`int` := v0;
  #L18f790.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18f794.  v3.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18f798.  return @kind void;
}

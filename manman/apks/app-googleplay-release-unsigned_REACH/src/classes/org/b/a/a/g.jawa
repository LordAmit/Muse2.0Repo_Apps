record `org.b.a.a.g` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.g.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.g.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.f` `org.b.a.a.g.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.g.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.g.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L18ed60.  v0:= new `org.b.a.a.d.f`;
  #L18ed64.  call `<init>`(v0) @signature `Lorg/b/a/a/d/f;.<init>:()V` @kind direct;
  #L18ed6a.  `@@org.b.a.a.g.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L18ed6e.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.g` v2 @kind this) @signature `Lorg/b/a/a/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L18ed80.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L18ed86.  v0:= new `org.b.a.a.d.b`;
  #L18ed8a.  v1:= `@@org.b.a.a.g.e` @type ^`org.b.a.a.d.m` @kind object;
  #L18ed8e.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L18ed94.  v2.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L18ed98.  v0:= new `org.b.a.a.b.f`;
  #L18ed9c.  call `<init>`(v0) @signature `Lorg/b/a/a/b/f;.<init>:()V` @kind direct;
  #L18eda2.  v2.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` := v0 @kind object;
  #L18eda6.  v0:= 2I;
  #L18eda8.  v0:= new `byte`[v0];
  #L18edac.  v2.`org.b.a.a.g.d` @type ^`byte`[] := v0 @kind object;
  #L18edb0.  call `d`(v2) @signature `Lorg/b/a/a/g;.d:()V` @kind virtual;
  #L18edb6.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18edc8.  v0:= `@@org.b.a.b.h` @type ^`java.lang.String` @kind object;
  #L18edcc.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.g` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/g;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L18ede0.  v6:= 1I;
  #L18ede2.  v5:= 0I;
  #L18ede4.  v1:= v9 + v10 @kind int;
  #L18ede8.  v0:= v9;
  #L18edea.  if v0 >= v1 then goto L18ee0a;
  #L18edee.  v2:= v7.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18edf2.  v3:= v8[v0] @kind byte;
  #L18edf6.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L18edfc.  v2:= temp;
  #L18edfe.  if v2 != v6 then goto L18ee5a;
  #L18ee02.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18ee06.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18ee0a.  v0:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L18ee0e.  v1:= v1 + -1;
  #L18ee12.  v1:= v8[v1] @kind byte;
  #L18ee16.  v0[v5]:= v1 @kind byte;
  #L18ee1a.  v0:= v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18ee1e.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18ee22.  if v0 != v1 then goto L18ee54;
  #L18ee26.  v0:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L18ee2a.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/f;.c:()Z` @kind virtual;
  #L18ee30.  v0:= temp;
  #L18ee32.  if v0 == 0 then goto L18ee54;
  #L18ee36.  call temp:= `b`(v7) @signature `Lorg/b/a/a/g;.b:()F` @kind virtual;
  #L18ee3c.  v0:= temp;
  #L18ee3e.  v1:= 1064514355I;
  #L18ee44.  v0:= fcmpl(v0, v1);
  #L18ee48.  if v0 <= 0 then goto L18ee54;
  #L18ee4c.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18ee50.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18ee54.  v0:= v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18ee58.  return v0 @kind object;
  #L18ee5a.  v3:= 2I;
  #L18ee5c.  if v2 != v3 then goto L18ee6a;
  #L18ee60.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18ee64.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18ee68.  goto L18ee0a;
  #L18ee6a.  if v2 != 0 then goto L18ee98;
  #L18ee6e.  v2:= v7.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18ee72.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L18ee78.  v2:= temp;
  #L18ee7a.  if v0 != v9 then goto L18ee9e;
  #L18ee7e.  v3:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L18ee82.  v4:= v8[v9] @kind byte;
  #L18ee86.  v3[v6]:= v4 @kind byte;
  #L18ee8a.  v3:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L18ee8e.  v4:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L18ee92.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/f;.a:([BII)V` @kind virtual;
  #L18ee98.  v0:= v0 + 1;
  #L18ee9c.  goto L18edea;
  #L18ee9e.  v3:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L18eea2.  v4:= v0 + -1;
  #L18eea6.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/f;.a:([BII)V` @kind virtual;
  #L18eeac.  goto L18ee98;
}
procedure `float` `b`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18eec0.  v0:= v1.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L18eec4.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/f;.a:()F` @kind virtual;
  #L18eeca.  v0:= temp;
  #L18eecc.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18eee0.  v0:= v1.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18eee4.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.g` v2 @kind this) @signature `Lorg/b/a/a/g;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18eef8.  v0:= v2.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18eefc.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L18ef02.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18ef06.  v2.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18ef0a.  v0:= v2.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L18ef0e.  call `b`(v0) @signature `Lorg/b/a/a/b/f;.b:()V` @kind virtual;
  #L18ef14.  v0:= v2.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L18ef18.  v1:= 0I;
  #L18ef1a.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L18ef20.  return @kind void;
}

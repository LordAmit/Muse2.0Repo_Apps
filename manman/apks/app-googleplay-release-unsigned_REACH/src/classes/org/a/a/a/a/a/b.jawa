record `org.a.a.a.a.a.b` @kind class @AccessFlag PUBLIC {
  `int` `org.a.a.a.a.a.b.a` @AccessFlag PRIVATE;
  `long` `org.a.a.a.a.a.b.b` @AccessFlag PRIVATE;
  `java.lang.String` `org.a.a.a.a.a.b.c` @AccessFlag PRIVATE;
  `java.lang.String` `org.a.a.a.a.a.b.d` @AccessFlag PRIVATE;
  `int` `org.a.a.a.a.a.b.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.a.a.a.a.a.b` v1 @kind this) @signature `Lorg/a/a/a/a/a/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16d074.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16d07a.  v0:= -1I;
  #L16d07c.  v1.`org.a.a.a.a.a.b.a` @type ^`int` := v0;
  #L16d080.  v0:= 255I;
  #L16d084.  v1.`org.a.a.a.a.a.b.e` @type ^`int` := v0;
  #L16d088.  return @kind void;
}
procedure `void` `a`(`org.a.a.a.a.a.b` v3 @kind this, `int` v4 ) @signature `Lorg/a/a/a/a/a/b;.a:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L16d09c.  v0:= -1I;
  #L16d09e.  if v4 < v0 then goto L16d0aa;
  #L16d0a2.  v0:= 9I;
  #L16d0a6.  if v4 <= v0 then goto L16d0dc;
  #L16d0aa.  v0:= new `java.lang.IllegalArgumentException`;
  #L16d0ae.  v1:= new `java.lang.StringBuilder`;
  #L16d0b2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16d0b8.  v2:= "Invalid gzip compression level: " @kind object;
  #L16d0bc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d0c2.  v1:= temp @kind object;
  #L16d0c4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d0ca.  v1:= temp @kind object;
  #L16d0cc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16d0d2.  v1:= temp @kind object;
  #L16d0d4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16d0da.  throw v0;
  #L16d0dc.  v3.`org.a.a.a.a.a.b.a` @type ^`int` := v4;
  #L16d0e0.  return @kind void;
}
procedure `void` `a`(`org.a.a.a.a.a.b` v1 @kind this, `long` v2 ) @signature `Lorg/a/a/a/a/a/b;.a:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16d0f4.  v1.`org.a.a.a.a.a.b.b` @type ^`long` := v2 @kind wide;
  #L16d0f8.  return @kind void;
}
procedure `void` `a`(`org.a.a.a.a.a.b` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/a/a/a/a/a/b;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L16d10c.  v0.`org.a.a.a.a.a.b.c` @type ^`java.lang.String` := v1 @kind object;
  #L16d110.  return @kind void;
}
procedure `void` `b`(`org.a.a.a.a.a.b` v0 @kind this, `int` v1 ) @signature `Lorg/a/a/a/a/a/b;.b:(I)V` @AccessFlag PUBLIC {
    temp;

  #L16d124.  v0.`org.a.a.a.a.a.b.e` @type ^`int` := v1;
  #L16d128.  return @kind void;
}
procedure `void` `b`(`org.a.a.a.a.a.b` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/a/a/a/a/a/b;.b:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L16d13c.  v0.`org.a.a.a.a.a.b.d` @type ^`java.lang.String` := v1 @kind object;
  #L16d140.  return @kind void;
}

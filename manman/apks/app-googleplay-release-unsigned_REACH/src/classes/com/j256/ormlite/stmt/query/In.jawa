record `com.j256.ormlite.stmt.query.In` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.BaseComparison` @kind class {
  `boolean` `com.j256.ormlite.stmt.query.In.in` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `com.j256.ormlite.stmt.query.In.objects` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.In` v2 @kind this, `java.lang.String` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.Iterable` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/stmt/query/In;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Iterable;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L168048.  v0:= 0I;
  #L16804a.  v1:= 1I;
  #L16804c.  call `<init>`(v2, v3, v4, v0, v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Z)V` @kind direct;
  #L168052.  v2.`com.j256.ormlite.stmt.query.In.objects` @type ^`java.lang.Iterable` := v5 @kind object;
  #L168056.  v2.`com.j256.ormlite.stmt.query.In.in` @type ^`boolean` := v6 @kind boolean;
  #L16805a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.In` v2 @kind this, `java.lang.String` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.Object`[] v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/stmt/query/In;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;[Ljava/lang/Object;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L16806c.  v0:= 0I;
  #L16806e.  v1:= 1I;
  #L168070.  call `<init>`(v2, v3, v4, v0, v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Z)V` @kind direct;
  #L168076.  call temp:= `asList`(v5) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L16807c.  v0:= temp @kind object;
  #L16807e.  v2.`com.j256.ormlite.stmt.query.In.objects` @type ^`java.lang.Iterable` := v0 @kind object;
  #L168082.  v2.`com.j256.ormlite.stmt.query.In.in` @type ^`boolean` := v6 @kind boolean;
  #L168086.  return @kind void;
}
procedure `void` `appendOperation`(`com.j256.ormlite.stmt.query.In` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/query/In;.appendOperation:(Ljava/lang/StringBuilder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168098.  v0:= v1.`com.j256.ormlite.stmt.query.In.in` @type ^`boolean` @kind boolean;
  #L16809c.  if v0 == 0 then goto L1680ac;
  #L1680a0.  v0:= "IN " @kind object;
  #L1680a4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1680aa.  return @kind void;
  #L1680ac.  v0:= "NOT IN " @kind object;
  #L1680b0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1680b6.  goto L1680aa;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.In` v0 @kind this, `com.j256.ormlite.db.DatabaseType` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/In;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1680c8.  call `appendSql`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind super;
  #L1680ce.  return @kind void;
}
procedure `void` `appendValue`(`com.j256.ormlite.stmt.query.In` v8 @kind this, `com.j256.ormlite.db.DatabaseType` v9 @kind object, `java.lang.StringBuilder` v10 @kind object, `java.util.List` v11 @kind object) @signature `Lcom/j256/ormlite/stmt/query/In;.appendValue:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1680e0.  v0:= 40I;
  #L1680e4.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1680ea.  v0:= 1I;
  #L1680ec.  v1:= v8.`com.j256.ormlite.stmt.query.In.objects` @type ^`java.lang.Iterable` @kind object;
  #L1680f0.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1680f6.  v7:= temp @kind object;
  #L1680f8.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1680fe.  v1:= temp;
  #L168100.  if v1 == 0 then goto L16817c;
  #L168104.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16810a.  v5:= temp @kind object;
  #L16810c.  if v5 != 0 then goto L168152;
  #L168110.  v0:= new `java.lang.IllegalArgumentException`;
  #L168114.  v1:= new `java.lang.StringBuilder`;
  #L168118.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16811e.  v2:= "one of the IN values for '" @kind object;
  #L168122.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L168128.  v1:= temp @kind object;
  #L16812a.  v2:= v8.`com.j256.ormlite.stmt.query.In.columnName` @type ^`java.lang.String` @kind object;
  #L16812e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L168134.  v1:= temp @kind object;
  #L168136.  v2:= "' is null" @kind object;
  #L16813a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L168140.  v1:= temp @kind object;
  #L168142.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L168148.  v1:= temp @kind object;
  #L16814a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L168150.  throw v0;
  #L168152.  if v0 == 0 then goto L16816e;
  #L168156.  v6:= 0I;
  #L168158.  v2:= v8.`com.j256.ormlite.stmt.query.In.fieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16815c.  v0:= v8 @kind object;
  #L16815e.  v1:= v9 @kind object;
  #L168160.  v3:= v10 @kind object;
  #L168162.  v4:= v11 @kind object;
  #L168164.  call `appendArgOrValue`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendArgOrValue:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;Ljava/lang/Object;)V` @kind super;
  #L16816a.  v0:= v6;
  #L16816c.  goto L1680f8;
  #L16816e.  v1:= 44I;
  #L168172.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L168178.  v6:= v0;
  #L16817a.  goto L168158;
  #L16817c.  v0:= ") " @kind object;
  #L168180.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L168186.  return @kind void;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.stmt.query.In` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/In;.getColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L168198.  call temp:= `getColumnName`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.getColumnName:()Ljava/lang/String;` @kind super;
  #L16819e.  v0:= temp @kind object;
  #L1681a0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.stmt.query.In` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/In;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1681b4.  call temp:= `toString`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.toString:()Ljava/lang/String;` @kind super;
  #L1681ba.  v0:= temp @kind object;
  #L1681bc.  return v0 @kind object;
}

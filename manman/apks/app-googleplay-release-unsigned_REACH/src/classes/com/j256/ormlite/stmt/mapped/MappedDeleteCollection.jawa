record `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedDeleteCollection` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L166bc8.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L166bce.  return @kind void;
}
procedure `void` `appendWhereIds`(`com.j256.ormlite.db.DatabaseType` v4 @kind object, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.StringBuilder` v6 @kind object, `int` v7 , `com.j256.ormlite.field.FieldType`[] v8 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendWhereIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;I[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L166be0.  v1:= 0I;
  #L166be2.  v0:= "WHERE " @kind object;
  #L166be6.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166bec.  call temp:= `getColumnName`(v5) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L166bf2.  v0:= temp @kind object;
  #L166bf4.  call `appendEscapedEntityName`(v4, v6, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L166bfa.  v0:= " IN (" @kind object;
  #L166bfe.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166c04.  v0:= 1I;
  #L166c06.  v2:= v1;
  #L166c08.  if v2 >= v7 then goto L166c36;
  #L166c0c.  if v0 == 0 then goto L166c2a;
  #L166c10.  v0:= v1;
  #L166c12.  v3:= 63I;
  #L166c16.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L166c1c.  if v8 == 0 then goto L166c24;
  #L166c20.  v8[v2]:= v5 @kind object;
  #L166c24.  v2:= v2 + 1;
  #L166c28.  goto L166c08;
  #L166c2a.  v3:= 44I;
  #L166c2e.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L166c34.  goto L166c12;
  #L166c36.  v0:= ") " @kind object;
  #L166c3a.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166c40.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` `build`(`com.j256.ormlite.db.DatabaseType` v4 @kind object, `com.j256.ormlite.table.TableInfo` v5 @kind object, `int` v6 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L166c54.  call temp:= `getIdField`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L166c5a.  v0:= temp @kind object;
  #L166c5c.  if v0 != 0 then goto L166ca6;
  #L166c60.  v0:= new `java.sql.SQLException`;
  #L166c64.  v1:= new `java.lang.StringBuilder`;
  #L166c68.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L166c6e.  v2:= "Cannot delete " @kind object;
  #L166c72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166c78.  v1:= temp @kind object;
  #L166c7a.  call temp:= `getDataClass`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L166c80.  v2:= temp @kind object;
  #L166c82.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166c88.  v1:= temp @kind object;
  #L166c8a.  v2:= " because it doesn't have an id field defined" @kind object;
  #L166c8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166c94.  v1:= temp @kind object;
  #L166c96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L166c9c.  v1:= temp @kind object;
  #L166c9e.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L166ca4.  throw v0;
  #L166ca6.  v1:= new `java.lang.StringBuilder`;
  #L166caa.  v2:= 128I;
  #L166cae.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L166cb4.  v2:= "DELETE FROM " @kind object;
  #L166cb8.  call temp:= `getTableName`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L166cbe.  v3:= temp @kind object;
  #L166cc0.  call `appendTableName`(v4, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L166cc6.  v2:= new `com.j256.ormlite.field.FieldType`[v6];
  #L166cca.  call `appendWhereIds`(v4, v0, v1, v6, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendWhereIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;I[Lcom/j256/ormlite/field/FieldType;)V` @kind static;
  #L166cd0.  v0:= new `com.j256.ormlite.stmt.mapped.MappedDeleteCollection`;
  #L166cd4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L166cda.  v1:= temp @kind object;
  #L166cdc.  call `<init>`(v0, v5, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L166ce2.  return v0 @kind object;
}
procedure `int` `deleteIds`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.util.Collection` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.deleteIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/util/Collection;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L166cf4.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L166cfa.  v0:= temp;
  #L166cfc.  call temp:= `build`(v6, v7, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @kind static;
  #L166d02.  v1:= temp @kind object;
  #L166d04.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L166d0a.  v0:= temp;
  #L166d0c.  v2:= new `java.lang.Object`[v0];
  #L166d10.  call temp:= `getIdField`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L166d16.  v3:= temp @kind object;
  #L166d18.  v0:= 0I;
  #L166d1a.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L166d20.  v4:= temp @kind object;
  #L166d22.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L166d28.  v5:= temp;
  #L166d2a.  if v5 == 0 then goto L166d48;
  #L166d2e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L166d34.  v5:= temp @kind object;
  #L166d36.  call temp:= `convertJavaFieldToSqlArgValue`(v3, v5) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L166d3c.  v5:= temp @kind object;
  #L166d3e.  v2[v0]:= v5 @kind object;
  #L166d42.  v0:= v0 + 1;
  #L166d46.  goto L166d22;
  #L166d48.  call temp:= `getDataClass`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L166d4e.  v0:= temp @kind object;
  #L166d50.  call temp:= `updateRows`(v8, v0, v1, v2, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind static;
  #L166d56.  v0:= temp;
  #L166d58.  return v0;
}
procedure `int` `deleteObjects`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.util.Collection` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.deleteObjects:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/util/Collection;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L166d6c.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L166d72.  v0:= temp;
  #L166d74.  call temp:= `build`(v6, v7, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @kind static;
  #L166d7a.  v1:= temp @kind object;
  #L166d7c.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L166d82.  v0:= temp;
  #L166d84.  v2:= new `java.lang.Object`[v0];
  #L166d88.  call temp:= `getIdField`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L166d8e.  v3:= temp @kind object;
  #L166d90.  v0:= 0I;
  #L166d92.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L166d98.  v4:= temp @kind object;
  #L166d9a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L166da0.  v5:= temp;
  #L166da2.  if v5 == 0 then goto L166dc0;
  #L166da6.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L166dac.  v5:= temp @kind object;
  #L166dae.  call temp:= `extractJavaFieldToSqlArgValue`(v3, v5) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L166db4.  v5:= temp @kind object;
  #L166db6.  v2[v0]:= v5 @kind object;
  #L166dba.  v0:= v0 + 1;
  #L166dbe.  goto L166d9a;
  #L166dc0.  call temp:= `getDataClass`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L166dc6.  v0:= temp @kind object;
  #L166dc8.  call temp:= `updateRows`(v8, v0, v1, v2, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind static;
  #L166dce.  v0:= temp;
  #L166dd0.  return v0;
}
procedure `int` `updateRows`(`com.j256.ormlite.support.DatabaseConnection` v6 @kind object, `java.lang.Class` v7 @kind object, `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` v8 @kind object, `java.lang.Object`[] v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L166de4.  v0:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L166de8.  v1:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L166dec.  call temp:= `delete`(v6, v0, v9, v1) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L166df2.  v1:= temp;
  #L166df4.  if v1 <= 0 then goto L166e14;
  #L166df8.  if v10 == 0 then goto L166e14;
  #L166dfc.  v2:= length @variable v9;
  #L166dfe.  v0:= 0I;
  #L166e00.  if v0 >= v2 then goto L166e14;
  #L166e04.  v3:= v9[v0] @kind object;
  #L166e08.  call `remove`(v10, v7, v3) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #L166e0e.  v0:= v0 + 1;
  #L166e12.  goto L166e00;
  #L166e14.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L166e18.  v2:= "delete-collection with statement '{}' and {} args, changed {} rows" @kind object;
  #L166e1c.  v3:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L166e20.  v4:= length @variable v9;
  #L166e22.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L166e28.  v4:= temp @kind object;
  #L166e2a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L166e30.  v5:= temp @kind object;
  #L166e32.  call `debug`(v0, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L166e38.  v0:= length @variable v9;
  #L166e3a.  if v0 <= 0 then goto L166e4c;
  #L166e3e.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L166e42.  v2:= "delete-collection arguments: {}" @kind object;
  #L166e46.  call `trace`(v0, v2, v9) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L166e4c.  return v1;
  #L166e4e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L166e50.  v1:= new `java.lang.StringBuilder`;
  #L166e54.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L166e5a.  v2:= "Unable to run delete collection stmt: " @kind object;
  #L166e5e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166e64.  v1:= temp @kind object;
  #L166e66.  v2:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L166e6a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166e70.  v1:= temp @kind object;
  #L166e72.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L166e78.  v1:= temp @kind object;
  #L166e7a.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L166e80.  v0:= temp @kind object;
  #L166e82.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L166e4e;
}

record `com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` @kind class @AccessFlag  extends `com.j256.ormlite.support.GeneratedKeyHolder` @kind interface {
  `java.lang.Number` `com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @AccessFlag ;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` v0 @kind this) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L166214.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16621a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` v0 @kind this, `com.j256.ormlite.stmt.mapped.MappedCreate$1` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.<init>:(Lcom/j256/ormlite/stmt/mapped/MappedCreate$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L16622c.  call `<init>`(v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.<init>:()V` @kind direct;
  #L166232.  return @kind void;
}
procedure `void` `addKey`(`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` v3 @kind this, `java.lang.Number` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.addKey:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L166244.  v0:= v3.`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @type ^`java.lang.Number` @kind object;
  #L166248.  if v0 != 0 then goto L166252;
  #L16624c.  v3.`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @type ^`java.lang.Number` := v4 @kind object;
  #L166250.  return @kind void;
  #L166252.  v0:= new `java.sql.SQLException`;
  #L166256.  v1:= new `java.lang.StringBuilder`;
  #L16625a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L166260.  v2:= "generated key has already been set to " @kind object;
  #L166264.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16626a.  v1:= temp @kind object;
  #L16626c.  v2:= v3.`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @type ^`java.lang.Number` @kind object;
  #L166270.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166276.  v1:= temp @kind object;
  #L166278.  v2:= ", now set to " @kind object;
  #L16627c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166282.  v1:= temp @kind object;
  #L166284.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16628a.  v1:= temp @kind object;
  #L16628c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L166292.  v1:= temp @kind object;
  #L166294.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16629a.  throw v0;
}
procedure `java.lang.Number` `getKey`(`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.getKey:()Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1662ac.  v0:= v1.`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @type ^`java.lang.Number` @kind object;
  #L1662b0.  return v0 @kind object;
}

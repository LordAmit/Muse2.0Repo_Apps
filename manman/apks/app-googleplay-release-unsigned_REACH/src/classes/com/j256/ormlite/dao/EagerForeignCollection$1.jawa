record `com.j256.ormlite.dao.EagerForeignCollection$1` @kind class @AccessFlag  extends `com.j256.ormlite.dao.CloseableIterator` @kind interface {
  `int` `com.j256.ormlite.dao.EagerForeignCollection$1.offset` @AccessFlag PRIVATE;
  `com.j256.ormlite.dao.EagerForeignCollection` `com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.j256.ormlite.dao.EagerForeignCollection$1` v1 @kind this, `com.j256.ormlite.dao.EagerForeignCollection` v2 @kind object) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.<init>:(Lcom/j256/ormlite/dao/EagerForeignCollection;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1517d8.  v1.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` := v2 @kind object;
  #L1517dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1517e2.  v0:= -1I;
  #L1517e4.  v1.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v0;
  #L1517e8.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.dao.EagerForeignCollection$1` v0 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L1517fc.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.dao.EagerForeignCollection$1` v0 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;

  #L151810.  return @kind void;
}
procedure `java.lang.Object` `current`(`com.j256.ormlite.dao.EagerForeignCollection$1` v2 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.current:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L151824.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151828.  if v0 >= 0 then goto L151832;
  #L15182c.  v0:= 0I;
  #L15182e.  v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v0;
  #L151832.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151836.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L15183a.  call temp:= `access$000`(v1) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L151840.  v1:= temp @kind object;
  #L151842.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L151848.  v1:= temp;
  #L15184a.  if v0 < v1 then goto L151852;
  #L15184e.  v0:= 0I;
  #L151850.  return v0 @kind object;
  #L151852.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L151856.  call temp:= `access$000`(v0) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L15185c.  v0:= temp @kind object;
  #L15185e.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151862.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L151868.  v0:= temp @kind object;
  #L15186a.  goto L151850;
}
procedure `java.lang.Object` `first`(`com.j256.ormlite.dao.EagerForeignCollection$1` v3 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.first:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15187c.  v2:= 0I;
  #L15187e.  v3.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v2;
  #L151882.  v0:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151886.  v1:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L15188a.  call temp:= `access$000`(v1) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L151890.  v1:= temp @kind object;
  #L151892.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L151898.  v1:= temp;
  #L15189a.  if v0 < v1 then goto L1518a2;
  #L15189e.  v0:= 0I;
  #L1518a0.  return v0 @kind object;
  #L1518a2.  v0:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L1518a6.  call temp:= `access$000`(v0) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L1518ac.  v0:= temp @kind object;
  #L1518ae.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1518b4.  v0:= temp @kind object;
  #L1518b6.  goto L1518a0;
}
procedure `com.j256.ormlite.support.DatabaseResults` `getRawResults`(`com.j256.ormlite.dao.EagerForeignCollection$1` v1 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.getRawResults:()Lcom/j256/ormlite/support/DatabaseResults;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1518c8.  v0:= 0I;
  #L1518ca.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`com.j256.ormlite.dao.EagerForeignCollection$1` v2 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1518dc.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L1518e0.  v0:= v0 + 1;
  #L1518e4.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L1518e8.  call temp:= `access$000`(v1) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L1518ee.  v1:= temp @kind object;
  #L1518f0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1518f6.  v1:= temp;
  #L1518f8.  if v0 >= v1 then goto L151900;
  #L1518fc.  v0:= 1I;
  #L1518fe.  return v0;
  #L151900.  v0:= 0I;
  #L151902.  goto L1518fe;
}
procedure `java.lang.Object` `moveRelative`(`com.j256.ormlite.dao.EagerForeignCollection$1` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.moveRelative:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L151914.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151918.  v0:= v0 + v3 @kind int;
  #L15191a.  v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v0;
  #L15191e.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151922.  if v0 < 0 then goto L151942;
  #L151926.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L15192a.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L15192e.  call temp:= `access$000`(v1) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L151934.  v1:= temp @kind object;
  #L151936.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15193c.  v1:= temp;
  #L15193e.  if v0 < v1 then goto L151946;
  #L151942.  v0:= 0I;
  #L151944.  return v0 @kind object;
  #L151946.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L15194a.  call temp:= `access$000`(v0) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L151950.  v0:= temp @kind object;
  #L151952.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151956.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15195c.  v0:= temp @kind object;
  #L15195e.  goto L151944;
}
procedure `void` `moveToNext`(`com.j256.ormlite.dao.EagerForeignCollection$1` v1 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.moveToNext:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L151970.  v0:= v1.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151974.  v0:= v0 + 1;
  #L151978.  v1.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v0;
  #L15197c.  return @kind void;
}
procedure `java.lang.Object` `next`(`com.j256.ormlite.dao.EagerForeignCollection$1` v2 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L151990.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151994.  v0:= v0 + 1;
  #L151998.  v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v0;
  #L15199c.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L1519a0.  call temp:= `access$000`(v0) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L1519a6.  v0:= temp @kind object;
  #L1519a8.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L1519ac.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1519b2.  v0:= temp @kind object;
  #L1519b4.  return v0 @kind object;
}
procedure `java.lang.Object` `nextThrow`(`com.j256.ormlite.dao.EagerForeignCollection$1` v2 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.nextThrow:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1519c8.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L1519cc.  v0:= v0 + 1;
  #L1519d0.  v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v0;
  #L1519d4.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L1519d8.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L1519dc.  call temp:= `access$000`(v1) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L1519e2.  v1:= temp @kind object;
  #L1519e4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1519ea.  v1:= temp;
  #L1519ec.  if v0 < v1 then goto L1519f4;
  #L1519f0.  v0:= 0I;
  #L1519f2.  return v0 @kind object;
  #L1519f4.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L1519f8.  call temp:= `access$000`(v0) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L1519fe.  v0:= temp @kind object;
  #L151a00.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151a04.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L151a0a.  v0:= temp @kind object;
  #L151a0c.  goto L1519f2;
}
procedure `java.lang.Object` `previous`(`com.j256.ormlite.dao.EagerForeignCollection$1` v2 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L151a20.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151a24.  v0:= v0 + -1;
  #L151a28.  v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v0;
  #L151a2c.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151a30.  if v0 < 0 then goto L151a50;
  #L151a34.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151a38.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L151a3c.  call temp:= `access$000`(v1) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L151a42.  v1:= temp @kind object;
  #L151a44.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L151a4a.  v1:= temp;
  #L151a4c.  if v0 < v1 then goto L151a54;
  #L151a50.  v0:= 0I;
  #L151a52.  return v0 @kind object;
  #L151a54.  v0:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L151a58.  call temp:= `access$000`(v0) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L151a5e.  v0:= temp @kind object;
  #L151a60.  v1:= v2.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151a64.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L151a6a.  v0:= temp @kind object;
  #L151a6c.  goto L151a52;
}
procedure `void` `remove`(`com.j256.ormlite.dao.EagerForeignCollection$1` v3 @kind this) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection$1;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L151a80.  v0:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151a84.  if v0 >= 0 then goto L151a98;
  #L151a88.  v0:= new `java.lang.IllegalStateException`;
  #L151a8c.  v1:= "next() must be called before remove()" @kind object;
  #L151a90.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L151a96.  throw v0;
  #L151a98.  v0:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151a9c.  v1:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L151aa0.  call temp:= `access$000`(v1) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L151aa6.  v1:= temp @kind object;
  #L151aa8.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L151aae.  v1:= temp;
  #L151ab0.  if v0 < v1 then goto L151af6;
  #L151ab4.  v0:= new `java.lang.IllegalStateException`;
  #L151ab8.  v1:= new `java.lang.StringBuilder`;
  #L151abc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151ac2.  v2:= "current results position (" @kind object;
  #L151ac6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151acc.  v1:= temp @kind object;
  #L151ace.  v2:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151ad2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L151ad8.  v1:= temp @kind object;
  #L151ada.  v2:= ") is out of bounds" @kind object;
  #L151ade.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151ae4.  v1:= temp @kind object;
  #L151ae6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151aec.  v1:= temp @kind object;
  #L151aee.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L151af4.  throw v0;
  #L151af6.  v0:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L151afa.  call temp:= `access$000`(v0) @signature `Lcom/j256/ormlite/dao/EagerForeignCollection;.access$000:(Lcom/j256/ormlite/dao/EagerForeignCollection;)Ljava/util/List;` @kind static;
  #L151b00.  v0:= temp @kind object;
  #L151b02.  v1:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151b06.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L151b0c.  v0:= temp @kind object;
  #L151b0e.  v1:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int`;
  #L151b12.  v1:= v1 + -1;
  #L151b16.  v3.`com.j256.ormlite.dao.EagerForeignCollection$1.offset` @type ^`int` := v1;
  #L151b1a.  v1:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L151b1e.  v1:= v1.`com.j256.ormlite.dao.EagerForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L151b22.  if v1 == 0 then goto L151b34;
  #Try_start0.  
  #L151b26.  v1:= v3.`com.j256.ormlite.dao.EagerForeignCollection$1.this$0` @type ^`com.j256.ormlite.dao.EagerForeignCollection` @kind object;
  #L151b2a.  v1:= v1.`com.j256.ormlite.dao.EagerForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L151b2e.  call temp:= `delete`(v1, v0) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L151b34.  return @kind void;
  #L151b36.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L151b38.  v1:= new `java.lang.RuntimeException`;
  #L151b3c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L151b42.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L151b36;
}

record `com.j256.ormlite.support.DatabaseConnectionProxy` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.DatabaseConnection` @kind interface {
  `com.j256.ormlite.support.DatabaseConnection` `com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.support.DatabaseConnectionProxy` v0 @kind this, `com.j256.ormlite.support.DatabaseConnection` v1 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.<init>:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L168b6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L168b72.  v0.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L168b76.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168b88.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168b8c.  if v0 == 0 then goto L168b9a;
  #L168b90.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168b94.  call `close`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.close:()V` @kind interface;
  #L168b9a.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168bac.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168bb0.  if v0 == 0 then goto L168bbe;
  #L168bb4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168bb8.  call `closeQuietly`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.closeQuietly:()V` @kind interface;
  #L168bbe.  return @kind void;
}
procedure `void` `commit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.sql.Savepoint` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.commit:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168bd0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168bd4.  if v0 == 0 then goto L168be2;
  #L168bd8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168bdc.  call `commit`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.commit:(Ljava/sql/Savepoint;)V` @kind interface;
  #L168be2.  return @kind void;
}
procedure `com.j256.ormlite.support.CompiledStatement` `compileStatement`(`com.j256.ormlite.support.DatabaseConnectionProxy` v6 @kind this, `java.lang.String` v7 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v8 @kind object, `com.j256.ormlite.field.FieldType`[] v9 @kind object, `int` v10 , `boolean` v11 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L168bf4.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168bf8.  if v0 != 0 then goto L168c00;
  #L168bfc.  v0:= 0I;
  #L168bfe.  return v0 @kind object;
  #L168c00.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168c04.  v1:= v7 @kind object;
  #L168c06.  v2:= v8 @kind object;
  #L168c08.  v3:= v9 @kind object;
  #L168c0a.  v4:= v10;
  #L168c0c.  v5:= v11;
  #L168c0e.  call temp:= `compileStatement`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @kind interface;
  #L168c14.  v0:= temp @kind object;
  #L168c16.  goto L168bfe;
}
procedure `int` `delete`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168c28.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168c2c.  if v0 != 0 then goto L168c34;
  #L168c30.  v0:= 0I;
  #L168c32.  return v0;
  #L168c34.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168c38.  call temp:= `delete`(v0, v2, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L168c3e.  v0:= temp;
  #L168c40.  goto L168c32;
}
procedure `int` `executeStatement`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.executeStatement:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168c54.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168c58.  if v0 != 0 then goto L168c60;
  #L168c5c.  v0:= 0I;
  #L168c5e.  return v0;
  #L168c60.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168c64.  call temp:= `executeStatement`(v0, v2, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.executeStatement:(Ljava/lang/String;I)I` @kind interface;
  #L168c6a.  v0:= temp;
  #L168c6c.  goto L168c5e;
}
procedure `int` `insert`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object, `com.j256.ormlite.support.GeneratedKeyHolder` v5 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168c80.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168c84.  if v0 != 0 then goto L168c8c;
  #L168c88.  v0:= 0I;
  #L168c8a.  return v0;
  #L168c8c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168c90.  call temp:= `insert`(v0, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @kind interface;
  #L168c96.  v0:= temp;
  #L168c98.  goto L168c8a;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isAutoCommit:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168cac.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168cb0.  if v0 != 0 then goto L168cb8;
  #L168cb4.  v0:= 0I;
  #L168cb6.  return v0;
  #L168cb8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168cbc.  call temp:= `isAutoCommit`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommit:()Z` @kind interface;
  #L168cc2.  v0:= temp;
  #L168cc4.  goto L168cb6;
}
procedure `boolean` `isAutoCommitSupported`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isAutoCommitSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168cd8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168cdc.  if v0 != 0 then goto L168ce4;
  #L168ce0.  v0:= 0I;
  #L168ce2.  return v0;
  #L168ce4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168ce8.  call temp:= `isAutoCommitSupported`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommitSupported:()Z` @kind interface;
  #L168cee.  v0:= temp;
  #L168cf0.  goto L168ce2;
}
procedure `boolean` `isClosed`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168d04.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168d08.  if v0 != 0 then goto L168d10;
  #L168d0c.  v0:= 1I;
  #L168d0e.  return v0;
  #L168d10.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168d14.  call temp:= `isClosed`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isClosed:()Z` @kind interface;
  #L168d1a.  v0:= temp;
  #L168d1c.  goto L168d0e;
}
procedure `boolean` `isTableExists`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isTableExists:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168d30.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168d34.  if v0 != 0 then goto L168d3c;
  #L168d38.  v0:= 0I;
  #L168d3a.  return v0;
  #L168d3c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168d40.  call temp:= `isTableExists`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isTableExists:(Ljava/lang/String;)Z` @kind interface;
  #L168d46.  v0:= temp;
  #L168d48.  goto L168d3a;
}
procedure `long` `queryForLong`(`com.j256.ormlite.support.DatabaseConnectionProxy` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForLong:(Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L168d5c.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168d60.  if v0 != 0 then goto L168d6a;
  #L168d64.  v0:= 0L;
  #L168d68.  return v0 @kind wide;
  #L168d6a.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168d6e.  call temp:= `queryForLong`(v0, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;)J` @kind interface;
  #L168d74.  v0:= temp @kind wide;
  #L168d76.  goto L168d68;
}
procedure `long` `queryForLong`(`com.j256.ormlite.support.DatabaseConnectionProxy` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object`[] v4 @kind object, `com.j256.ormlite.field.FieldType`[] v5 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L168d88.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168d8c.  if v0 != 0 then goto L168d96;
  #L168d90.  v0:= 0L;
  #L168d94.  return v0 @kind wide;
  #L168d96.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168d9a.  call temp:= `queryForLong`(v0, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @kind interface;
  #L168da0.  v0:= temp @kind wide;
  #L168da2.  goto L168d94;
}
procedure `java.lang.Object` `queryForOne`(`com.j256.ormlite.support.DatabaseConnectionProxy` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object, `com.j256.ormlite.field.FieldType`[] v9 @kind object, `com.j256.ormlite.stmt.GenericRowMapper` v10 @kind object, `com.j256.ormlite.dao.ObjectCache` v11 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L168db4.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168db8.  if v0 != 0 then goto L168dc0;
  #L168dbc.  v0:= 0I;
  #L168dbe.  return v0 @kind object;
  #L168dc0.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168dc4.  v1:= v7 @kind object;
  #L168dc6.  v2:= v8 @kind object;
  #L168dc8.  v3:= v9 @kind object;
  #L168dca.  v4:= v10 @kind object;
  #L168dcc.  v5:= v11 @kind object;
  #L168dce.  call temp:= `queryForOne`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @kind interface;
  #L168dd4.  v0:= temp @kind object;
  #L168dd6.  goto L168dbe;
}
procedure `void` `rollback`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.sql.Savepoint` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.rollback:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168de8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168dec.  if v0 == 0 then goto L168dfa;
  #L168df0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168df4.  call `rollback`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.rollback:(Ljava/sql/Savepoint;)V` @kind interface;
  #L168dfa.  return @kind void;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `boolean` v2 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.setAutoCommit:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168e0c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168e10.  if v0 == 0 then goto L168e1e;
  #L168e14.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168e18.  call `setAutoCommit`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setAutoCommit:(Z)V` @kind interface;
  #L168e1e.  return @kind void;
}
procedure `java.sql.Savepoint` `setSavePoint`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168e30.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168e34.  if v0 != 0 then goto L168e3c;
  #L168e38.  v0:= 0I;
  #L168e3a.  return v0 @kind object;
  #L168e3c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168e40.  call temp:= `setSavePoint`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @kind interface;
  #L168e46.  v0:= temp @kind object;
  #L168e48.  goto L168e3a;
}
procedure `int` `update`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L168e5c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168e60.  if v0 != 0 then goto L168e68;
  #L168e64.  v0:= 0I;
  #L168e66.  return v0;
  #L168e68.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L168e6c.  call temp:= `update`(v0, v2, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L168e72.  v0:= temp;
  #L168e74.  goto L168e66;
}

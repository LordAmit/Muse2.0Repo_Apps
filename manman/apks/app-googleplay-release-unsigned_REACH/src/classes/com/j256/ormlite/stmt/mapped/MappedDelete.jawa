record `com.j256.ormlite.stmt.mapped.MappedDelete` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedDelete` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16694c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L166952.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedDelete` `build`(`com.j256.ormlite.db.DatabaseType` v5 @kind object, `com.j256.ormlite.table.TableInfo` v6 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedDelete;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L166964.  call temp:= `getIdField`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16696a.  v0:= temp @kind object;
  #L16696c.  if v0 != 0 then goto L1669b6;
  #L166970.  v0:= new `java.sql.SQLException`;
  #L166974.  v1:= new `java.lang.StringBuilder`;
  #L166978.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16697e.  v2:= "Cannot delete from " @kind object;
  #L166982.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166988.  v1:= temp @kind object;
  #L16698a.  call temp:= `getDataClass`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L166990.  v2:= temp @kind object;
  #L166992.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166998.  v1:= temp @kind object;
  #L16699a.  v2:= " because it doesn't have an id field" @kind object;
  #L16699e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1669a4.  v1:= temp @kind object;
  #L1669a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1669ac.  v1:= temp @kind object;
  #L1669ae.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1669b4.  throw v0;
  #L1669b6.  v1:= new `java.lang.StringBuilder`;
  #L1669ba.  v2:= 64I;
  #L1669be.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1669c4.  v2:= "DELETE FROM " @kind object;
  #L1669c8.  call temp:= `getTableName`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L1669ce.  v3:= temp @kind object;
  #L1669d0.  call `appendTableName`(v5, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1669d6.  v2:= 0I;
  #L1669d8.  call `appendWhereFieldEq`(v5, v0, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L1669de.  v2:= new `com.j256.ormlite.stmt.mapped.MappedDelete`;
  #L1669e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1669e8.  v1:= temp @kind object;
  #L1669ea.  v3:= 1I;
  #L1669ec.  v3:= new `com.j256.ormlite.field.FieldType`[v3];
  #L1669f0.  v4:= 0I;
  #L1669f2.  v3[v4]:= v0 @kind object;
  #L1669f6.  call `<init>`(v2, v6, v1, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L1669fc.  return v2 @kind object;
}
procedure `int` `delete`(`com.j256.ormlite.stmt.mapped.MappedDelete` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.delete:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L166a10.  call temp:= `getFieldObjects`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L166a16.  v0:= temp @kind object;
  #L166a18.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L166a1c.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L166a20.  call temp:= `delete`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L166a26.  v1:= temp;
  #L166a28.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L166a2c.  v3:= "delete data with statement '{}' and {} args, changed {} rows" @kind object;
  #L166a30.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L166a34.  v5:= length @variable v0;
  #L166a36.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L166a3c.  v5:= temp @kind object;
  #L166a3e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L166a44.  v6:= temp @kind object;
  #L166a46.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L166a4c.  v2:= length @variable v0;
  #L166a4e.  if v2 <= 0 then goto L166a60;
  #L166a52.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L166a56.  v3:= "delete arguments: {}" @kind object;
  #L166a5a.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L166a60.  if v1 <= 0 then goto L166a7e;
  #L166a64.  if v10 == 0 then goto L166a7e;
  #L166a68.  v0:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L166a6c.  call temp:= `extractJavaFieldToSqlArgValue`(v0, v9) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L166a72.  v0:= temp @kind object;
  #L166a74.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.clazz` @type ^`java.lang.Class` @kind object;
  #L166a78.  call `remove`(v10, v2, v0) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #Try_end0.  
  #L166a7e.  return v1;
  #L166a80.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L166a82.  v1:= new `java.lang.StringBuilder`;
  #L166a86.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L166a8c.  v2:= "Unable to run delete stmt on object " @kind object;
  #L166a90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166a96.  v1:= temp @kind object;
  #L166a98.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166a9e.  v1:= temp @kind object;
  #L166aa0.  v2:= ": " @kind object;
  #L166aa4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166aaa.  v1:= temp @kind object;
  #L166aac.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L166ab0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166ab6.  v1:= temp @kind object;
  #L166ab8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L166abe.  v1:= temp @kind object;
  #L166ac0.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L166ac6.  v0:= temp @kind object;
  #L166ac8.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L166a80;
}
procedure `int` `deleteById`(`com.j256.ormlite.stmt.mapped.MappedDelete` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.deleteById:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L166aec.  v0:= 1I;
  #Try_start0.  
  #L166aee.  v0:= new `java.lang.Object`[v0];
  #L166af2.  v1:= 0I;
  #L166af4.  call temp:= `convertIdToFieldObject`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.convertIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L166afa.  v2:= temp @kind object;
  #L166afc.  v0[v1]:= v2 @kind object;
  #L166b00.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L166b04.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L166b08.  call temp:= `delete`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L166b0e.  v1:= temp;
  #L166b10.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L166b14.  v3:= "delete data with statement '{}' and {} args, changed {} rows" @kind object;
  #L166b18.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L166b1c.  v5:= length @variable v0;
  #L166b1e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L166b24.  v5:= temp @kind object;
  #L166b26.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L166b2c.  v6:= temp @kind object;
  #L166b2e.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L166b34.  v2:= length @variable v0;
  #L166b36.  if v2 <= 0 then goto L166b48;
  #L166b3a.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L166b3e.  v3:= "delete arguments: {}" @kind object;
  #L166b42.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L166b48.  if v1 <= 0 then goto L166b5a;
  #L166b4c.  if v10 == 0 then goto L166b5a;
  #L166b50.  v0:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.clazz` @type ^`java.lang.Class` @kind object;
  #L166b54.  call `remove`(v10, v0, v9) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #Try_end0.  
  #L166b5a.  return v1;
  #L166b5c.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L166b5e.  v1:= new `java.lang.StringBuilder`;
  #L166b62.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L166b68.  v2:= "Unable to run deleteById stmt on id " @kind object;
  #L166b6c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166b72.  v1:= temp @kind object;
  #L166b74.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166b7a.  v1:= temp @kind object;
  #L166b7c.  v2:= ": " @kind object;
  #L166b80.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166b86.  v1:= temp @kind object;
  #L166b88.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L166b8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166b92.  v1:= temp @kind object;
  #L166b94.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L166b9a.  v1:= temp @kind object;
  #L166b9c.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L166ba2.  v0:= temp @kind object;
  #L166ba4.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L166b5c;
}

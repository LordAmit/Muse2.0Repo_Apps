record `com.j256.ormlite.dao.BaseForeignCollection` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.j256.ormlite.dao.ForeignCollection` @kind interface, `java.io.Serializable` @kind interface {
  `com.j256.ormlite.dao.Dao` `com.j256.ormlite.dao.BaseForeignCollection.dao` @AccessFlag PROTECTED_FINAL_TRANSIENT;
  `com.j256.ormlite.field.FieldType` `com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `boolean` `com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.String` `com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.j256.ormlite.dao.BaseForeignCollection.parent` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.j256.ormlite.dao.BaseForeignCollection.parentId` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `com.j256.ormlite.stmt.PreparedQuery` `com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.j256.ormlite.dao.BaseForeignCollection.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.BaseForeignCollection` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L15096c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L150972.  v0.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` := v1 @kind object;
  #L150976.  v0.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` := v4 @kind object;
  #L15097a.  v0.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` := v3 @kind object;
  #L15097e.  v0.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` := v5 @kind object;
  #L150982.  v0.`com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @type ^`boolean` := v6 @kind boolean;
  #L150986.  v0.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` := v2 @kind object;
  #L15098a.  return @kind void;
}
procedure `boolean` `addElement`(`com.j256.ormlite.dao.BaseForeignCollection` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15099c.  v0:= 1I;
  #L15099e.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1509a2.  if v1 != 0 then goto L1509aa;
  #L1509a6.  v0:= 0I;
  #L1509a8.  return v0;
  #L1509aa.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L1509ae.  if v1 == 0 then goto L1509d2;
  #L1509b2.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L1509b6.  call temp:= `getFieldValueIfNotDefault`(v1, v5) @signature `Lcom/j256/ormlite/field/FieldType;.getFieldValueIfNotDefault:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1509bc.  v1:= temp @kind object;
  #L1509be.  if v1 != 0 then goto L1509d2;
  #L1509c2.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L1509c6.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L1509ca.  v3:= 0I;
  #L1509cc.  call `assignField`(v1, v5, v2, v0, v3) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L1509d2.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1509d6.  call temp:= `create`(v1, v5) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @kind interface;
  #L1509dc.  goto L1509a8;
}
procedure `boolean` `add`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1509f0.  call temp:= `addElement`(v3, v4) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L1509f6.  v0:= temp;
  #L1509f8.  return v0;
  #L1509fa.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1509fc.  v1:= new `java.lang.IllegalStateException`;
  #L150a00.  v2:= "Could not create data element in dao" @kind object;
  #L150a04.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L150a0a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1509fa;
}
procedure `boolean` `addAll`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L150a2c.  v0:= 0I;
  #L150a2e.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L150a34.  v1:= temp @kind object;
  #L150a36.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L150a3c.  v2:= temp;
  #L150a3e.  if v2 == 0 then goto L150a6c;
  #L150a42.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L150a48.  v2:= temp @kind object;
  #Try_start0.  
  #L150a4a.  call temp:= `addElement`(v3, v2) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L150a50.  v2:= temp;
  #L150a52.  if v2 == 0 then goto L150a36;
  #L150a56.  v0:= 1I;
  #L150a58.  goto L150a36;
  #L150a5a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L150a5c.  v1:= new `java.lang.IllegalStateException`;
  #L150a60.  v2:= "Could not create data elements in dao" @kind object;
  #L150a64.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L150a6a.  throw v1;
  #L150a6c.  return v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L150a5a;
}
procedure `void` `clear`(`com.j256.ormlite.dao.BaseForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L150a90.  v0:= v2.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150a94.  if v0 != 0 then goto L150a9a;
  #L150a98.  return @kind void;
  #L150a9a.  call temp:= `closeableIterator`(v2) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L150aa0.  v1:= temp @kind object;
  #Try_start0.  
  #L150aa2.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L150aa8.  v0:= temp;
  #L150aaa.  if v0 == 0 then goto L150ac6;
  #L150aae.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L150ab4.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L150aba.  goto L150aa2;
  #L150abc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150abe.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L150ac4.  throw v0;
  #L150ac6.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L150acc.  goto L150a98;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L150abc;
}
procedure `com.j256.ormlite.dao.Dao` `getDao`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.getDao:()Lcom/j256/ormlite/dao/Dao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L150aec.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150af0.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.PreparedQuery` `getPreparedQuery`(`com.j256.ormlite.dao.BaseForeignCollection` v4 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.getPreparedQuery:()Lcom/j256/ormlite/stmt/PreparedQuery;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L150b04.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150b08.  if v0 != 0 then goto L150b10;
  #L150b0c.  v0:= 0I;
  #L150b0e.  return v0 @kind object;
  #L150b10.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L150b14.  if v0 != 0 then goto L150b98;
  #L150b18.  v0:= new `com.j256.ormlite.stmt.SelectArg`;
  #L150b1c.  call `<init>`(v0) @signature `Lcom/j256/ormlite/stmt/SelectArg;.<init>:()V` @kind direct;
  #L150b22.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` @kind object;
  #L150b26.  call `setValue`(v0, v1) @signature `Lcom/j256/ormlite/stmt/SelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L150b2c.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150b30.  call temp:= `queryBuilder`(v1) @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @kind interface;
  #L150b36.  v1:= temp @kind object;
  #L150b38.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` @kind object;
  #L150b3c.  if v2 == 0 then goto L150b4e;
  #L150b40.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` @kind object;
  #L150b44.  v3:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @type ^`boolean` @kind boolean;
  #L150b48.  call temp:= `orderBy`(v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/QueryBuilder;.orderBy:(Ljava/lang/String;Z)Lcom/j256/ormlite/stmt/QueryBuilder;` @kind virtual;
  #L150b4e.  call temp:= `where`(v1) @signature `Lcom/j256/ormlite/stmt/QueryBuilder;.where:()Lcom/j256/ormlite/stmt/Where;` @kind virtual;
  #L150b54.  v1:= temp @kind object;
  #L150b56.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L150b5a.  call temp:= `getColumnName`(v2) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L150b60.  v2:= temp @kind object;
  #L150b62.  call temp:= `eq`(v1, v2, v0) @signature `Lcom/j256/ormlite/stmt/Where;.eq:(Ljava/lang/String;Ljava/lang/Object;)Lcom/j256/ormlite/stmt/Where;` @kind virtual;
  #L150b68.  v0:= temp @kind object;
  #L150b6a.  call temp:= `prepare`(v0) @signature `Lcom/j256/ormlite/stmt/Where;.prepare:()Lcom/j256/ormlite/stmt/PreparedQuery;` @kind virtual;
  #L150b70.  v0:= temp @kind object;
  #L150b72.  v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` := v0 @kind object;
  #L150b76.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L150b7a.  v0:= instanceof @variable v0 @type ^`com.j256.ormlite.stmt.mapped.MappedPreparedStmt` @kind boolean;
  #L150b7e.  if v0 == 0 then goto L150b98;
  #L150b82.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L150b86.  v0:= (`com.j256.ormlite.stmt.mapped.MappedPreparedStmt`) v0 @kind object;
  #L150b8a.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L150b8e.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` @kind object;
  #L150b92.  call `setParentInformation`(v0, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedPreparedStmt;.setParentInformation:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L150b98.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L150b9c.  goto L150b0e;
}
procedure `int` `refresh`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L150bb0.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150bb4.  if v0 != 0 then goto L150bbc;
  #L150bb8.  v0:= 0I;
  #L150bba.  return v0;
  #L150bbc.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150bc0.  call temp:= `refresh`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @kind interface;
  #L150bc6.  v0:= temp;
  #L150bc8.  goto L150bba;
}
procedure `boolean` `remove`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `removeAll`(`java.util.Collection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `retainAll`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L150bdc.  v0:= 0I;
  #L150bde.  v1:= v3.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150be2.  if v1 != 0 then goto L150be8;
  #L150be6.  return v0;
  #L150be8.  call temp:= `closeableIterator`(v3) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L150bee.  v1:= temp @kind object;
  #Try_start0.  
  #L150bf0.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L150bf6.  v2:= temp;
  #L150bf8.  if v2 == 0 then goto L150c1a;
  #L150bfc.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L150c02.  v2:= temp @kind object;
  #L150c04.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L150c0a.  v2:= temp;
  #L150c0c.  if v2 != 0 then goto L150bf0;
  #L150c10.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L150c16.  v0:= 1I;
  #L150c18.  goto L150bf0;
  #L150c1a.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L150c20.  goto L150be6;
  #L150c22.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L150c24.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L150c2a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L150c22;
}
procedure `int` `update`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L150c48.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150c4c.  if v0 != 0 then goto L150c54;
  #L150c50.  v0:= 0I;
  #L150c52.  return v0;
  #L150c54.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L150c58.  call temp:= `update`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @kind interface;
  #L150c5e.  v0:= temp;
  #L150c60.  goto L150c52;
}

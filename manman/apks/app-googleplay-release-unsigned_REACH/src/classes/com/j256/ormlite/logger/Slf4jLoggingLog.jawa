record `com.j256.ormlite.logger.Slf4jLoggingLog` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.logger.Log` @kind interface {
  `org.slf4j.Logger` `com.j256.ormlite.logger.Slf4jLoggingLog.logger` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.logger.Slf4jLoggingLog` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15fed8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15fede.  call temp:= `getLogger`(v2) @signature `Lorg/slf4j/LoggerFactory;.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;` @kind static;
  #L15fee4.  v0:= temp @kind object;
  #L15fee6.  v1.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` := v0 @kind object;
  #L15feea.  return @kind void;
}
procedure `boolean` `isLevelEnabled`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.isLevelEnabled:(Lcom/j256/ormlite/logger/Log$Level;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15fefc.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L15ff00.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L15ff06.  v1:= temp;
  #L15ff08.  v0:= v0[v1];
  #L15ff0c.  goto L15ff74;
  #L15ff12.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ff16.  call temp:= `isInfoEnabled`(v0) @signature `Lorg/slf4j/Logger;.isInfoEnabled:()Z` @kind interface;
  #L15ff1c.  v0:= temp;
  #L15ff1e.  return v0;
  #L15ff20.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ff24.  call temp:= `isTraceEnabled`(v0) @signature `Lorg/slf4j/Logger;.isTraceEnabled:()Z` @kind interface;
  #L15ff2a.  v0:= temp;
  #L15ff2c.  goto L15ff1e;
  #L15ff2e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ff32.  call temp:= `isDebugEnabled`(v0) @signature `Lorg/slf4j/Logger;.isDebugEnabled:()Z` @kind interface;
  #L15ff38.  v0:= temp;
  #L15ff3a.  goto L15ff1e;
  #L15ff3c.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ff40.  call temp:= `isInfoEnabled`(v0) @signature `Lorg/slf4j/Logger;.isInfoEnabled:()Z` @kind interface;
  #L15ff46.  v0:= temp;
  #L15ff48.  goto L15ff1e;
  #L15ff4a.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ff4e.  call temp:= `isWarnEnabled`(v0) @signature `Lorg/slf4j/Logger;.isWarnEnabled:()Z` @kind interface;
  #L15ff54.  v0:= temp;
  #L15ff56.  goto L15ff1e;
  #L15ff58.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ff5c.  call temp:= `isErrorEnabled`(v0) @signature `Lorg/slf4j/Logger;.isErrorEnabled:()Z` @kind interface;
  #L15ff62.  v0:= temp;
  #L15ff64.  goto L15ff1e;
  #L15ff66.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ff6a.  call temp:= `isErrorEnabled`(v0) @signature `Lorg/slf4j/Logger;.isErrorEnabled:()Z` @kind interface;
  #L15ff70.  v0:= temp;
  #L15ff72.  goto L15ff1e;
  #L15ff74.  switch v0
                  | 1 => goto L15ff20
                  | 2 => goto L15ff2e
                  | 3 => goto L15ff3c
                  | 4 => goto L15ff4a
                  | 5 => goto L15ff58
                  | 6 => goto L15ff66
                  | else => goto L15ff12;
}
procedure `void` `log`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ffa4.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L15ffa8.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L15ffae.  v1:= temp;
  #L15ffb0.  v0:= v0[v1];
  #L15ffb4.  goto L160010;
  #L15ffba.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ffbe.  call `info`(v0, v4) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;)V` @kind interface;
  #L15ffc4.  return @kind void;
  #L15ffc6.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ffca.  call `trace`(v0, v4) @signature `Lorg/slf4j/Logger;.trace:(Ljava/lang/String;)V` @kind interface;
  #L15ffd0.  goto L15ffc4;
  #L15ffd2.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ffd6.  call `debug`(v0, v4) @signature `Lorg/slf4j/Logger;.debug:(Ljava/lang/String;)V` @kind interface;
  #L15ffdc.  goto L15ffc4;
  #L15ffde.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ffe2.  call `info`(v0, v4) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;)V` @kind interface;
  #L15ffe8.  goto L15ffc4;
  #L15ffea.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15ffee.  call `warn`(v0, v4) @signature `Lorg/slf4j/Logger;.warn:(Ljava/lang/String;)V` @kind interface;
  #L15fff4.  goto L15ffc4;
  #L15fff6.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15fffa.  call `error`(v0, v4) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;)V` @kind interface;
  #L160000.  goto L15ffc4;
  #L160002.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L160006.  call `error`(v0, v4) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;)V` @kind interface;
  #L16000c.  goto L15ffc4;
  #L16000e.  
  #L160010.  switch v0
                  | 1 => goto L15ffc6
                  | 2 => goto L15ffd2
                  | 3 => goto L15ffde
                  | 4 => goto L15ffea
                  | 5 => goto L15fff6
                  | 6 => goto L160002
                  | else => goto L15ffba;
}
procedure `void` `log`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L160040.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L160044.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L16004a.  v1:= temp;
  #L16004c.  v0:= v0[v1];
  #L160050.  goto L1600ac;
  #L160056.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L16005a.  call `info`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L160060.  return @kind void;
  #L160062.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L160066.  call `trace`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L16006c.  goto L160060;
  #L16006e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L160072.  call `debug`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L160078.  goto L160060;
  #L16007a.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L16007e.  call `info`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L160084.  goto L160060;
  #L160086.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L16008a.  call `warn`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L160090.  goto L160060;
  #L160092.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L160096.  call `error`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L16009c.  goto L160060;
  #L16009e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L1600a2.  call `error`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L1600a8.  goto L160060;
  #L1600aa.  
  #L1600ac.  switch v0
                  | 1 => goto L160062
                  | 2 => goto L16006e
                  | 3 => goto L16007a
                  | 4 => goto L160086
                  | 5 => goto L160092
                  | 6 => goto L16009e
                  | else => goto L160056;
}

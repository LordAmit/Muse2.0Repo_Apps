record `com.j256.ormlite.stmt.PreparedStmt` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `com.j256.ormlite.stmt.GenericRowMapper` @kind interface {
}
procedure `com.j256.ormlite.support.CompiledStatement` `compile`(`com.j256.ormlite.support.DatabaseConnection` v0 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/PreparedStmt;.compile:(Lcom/j256/ormlite/support/DatabaseConnection;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;)Lcom/j256/ormlite/support/CompiledStatement;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.support.CompiledStatement` `compile`(`com.j256.ormlite.support.DatabaseConnection` v0 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v1 @kind object, `int` v2 ) @signature `Lcom/j256/ormlite/stmt/PreparedStmt;.compile:(Lcom/j256/ormlite/support/DatabaseConnection;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;I)Lcom/j256/ormlite/support/CompiledStatement;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getStatement`() @signature `Lcom/j256/ormlite/stmt/PreparedStmt;.getStatement:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.stmt.StatementBuilder$StatementType` `getType`() @signature `Lcom/j256/ormlite/stmt/PreparedStmt;.getType:()Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setArgumentHolderValue`(`int` v0 , `java.lang.Object` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/PreparedStmt;.setArgumentHolderValue:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}

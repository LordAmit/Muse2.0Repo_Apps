record `com.j256.ormlite.table.TableUtils` @kind class @AccessFlag PUBLIC {
}
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.table.TableUtils.logger` @AccessFlag PRIVATE_STATIC;
global `com.j256.ormlite.field.FieldType`[] `@@com.j256.ormlite.table.TableUtils.noFieldTypes` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/table/TableUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L169fac.  v0:= constclass @type ^`com.j256.ormlite.table.TableUtils` @kind object;
  #L169fb0.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L169fb6.  v0:= temp @kind object;
  #L169fb8.  `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L169fbc.  v0:= 0I;
  #L169fbe.  v0:= new `com.j256.ormlite.field.FieldType`[v0];
  #L169fc2.  `@@com.j256.ormlite.table.TableUtils.noFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] := v0 @kind object;
  #L169fc6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.table.TableUtils` v0 @kind this) @signature `Lcom/j256/ormlite/table/TableUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L169fd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L169fde.  return @kind void;
}
procedure `void` `addCreateIndexStatements`(`com.j256.ormlite.db.DatabaseType` v8 @kind object, `com.j256.ormlite.table.TableInfo` v9 @kind object, `java.util.List` v10 @kind object, `boolean` v11 , `boolean` v12 ) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateIndexStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;ZZ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L169ff0.  v3:= 0I;
  #L169ff2.  v4:= new `java.util.HashMap`;
  #L169ff6.  call `<init>`(v4) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L169ffc.  call temp:= `getFieldTypes`(v9) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16a002.  v5:= temp @kind object;
  #L16a004.  v6:= length @variable v5;
  #L16a006.  v2:= v3;
  #L16a008.  if v2 >= v6 then goto L16a066;
  #L16a00c.  v7:= v5[v2] @kind object;
  #L16a010.  if v12 == 0 then goto L16a02a;
  #L16a014.  call temp:= `getUniqueIndexName`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.getUniqueIndexName:()Ljava/lang/String;` @kind virtual;
  #L16a01a.  v0:= temp @kind object;
  #L16a01c.  v1:= v0 @kind object;
  #L16a01e.  if v1 != 0 then goto L16a036;
  #L16a022.  v0:= v2 + 1;
  #L16a026.  v2:= v0;
  #L16a028.  goto L16a008;
  #L16a02a.  call temp:= `getIndexName`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.getIndexName:()Ljava/lang/String;` @kind virtual;
  #L16a030.  v0:= temp @kind object;
  #L16a032.  v1:= v0 @kind object;
  #L16a034.  goto L16a01e;
  #L16a036.  call temp:= `get`(v4, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16a03c.  v0:= temp @kind object;
  #L16a03e.  v0:= (`java.util.List`) v0 @kind object;
  #L16a042.  if v0 != 0 then goto L16a056;
  #L16a046.  v0:= new `java.util.ArrayList`;
  #L16a04a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a050.  call temp:= `put`(v4, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16a056.  call temp:= `getColumnName`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L16a05c.  v1:= temp @kind object;
  #L16a05e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16a064.  goto L16a022;
  #L16a066.  v5:= new `java.lang.StringBuilder`;
  #L16a06a.  v0:= 128I;
  #L16a06e.  call `<init>`(v5, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L16a074.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L16a07a.  v0:= temp @kind object;
  #L16a07c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16a082.  v4:= temp @kind object;
  #L16a084.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16a08a.  v0:= temp;
  #L16a08c.  if v0 == 0 then goto L16a198;
  #L16a090.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16a096.  v0:= temp @kind object;
  #L16a098.  v1:= v0 @kind object;
  #L16a09a.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L16a09e.  v0:= `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16a0a2.  v2:= "creating index '{}' for table '{}" @kind object;
  #L16a0a6.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L16a0ac.  v6:= temp @kind object;
  #L16a0ae.  call temp:= `getTableName`(v9) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a0b4.  v7:= temp @kind object;
  #L16a0b6.  call `info`(v0, v2, v6, v7) @signature `Lcom/j256/ormlite/logger/Logger;.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L16a0bc.  v0:= "CREATE " @kind object;
  #L16a0c0.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a0c6.  if v12 == 0 then goto L16a0d4;
  #L16a0ca.  v0:= "UNIQUE " @kind object;
  #L16a0ce.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a0d4.  v0:= "INDEX " @kind object;
  #L16a0d8.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a0de.  if v11 == 0 then goto L16a0f8;
  #L16a0e2.  call temp:= `isCreateIndexIfNotExistsSupported`(v8) @signature `Lcom/j256/ormlite/db/DatabaseType;.isCreateIndexIfNotExistsSupported:()Z` @kind interface;
  #L16a0e8.  v0:= temp;
  #L16a0ea.  if v0 == 0 then goto L16a0f8;
  #L16a0ee.  v0:= "IF NOT EXISTS " @kind object;
  #L16a0f2.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a0f8.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L16a0fe.  v0:= temp @kind object;
  #L16a100.  v0:= (`java.lang.String`) v0 @kind object;
  #L16a104.  call `appendEscapedEntityName`(v8, v5, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16a10a.  v0:= " ON " @kind object;
  #L16a10e.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a114.  call temp:= `getTableName`(v9) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a11a.  v0:= temp @kind object;
  #L16a11c.  call `appendEscapedEntityName`(v8, v5, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16a122.  v0:= " ( " @kind object;
  #L16a126.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a12c.  v2:= 1I;
  #L16a12e.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L16a134.  v0:= temp @kind object;
  #L16a136.  v0:= (`java.util.List`) v0 @kind object;
  #L16a13a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16a140.  v6:= temp @kind object;
  #L16a142.  v1:= v2;
  #L16a144.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16a14a.  v0:= temp;
  #L16a14c.  if v0 == 0 then goto L16a176;
  #L16a150.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16a156.  v0:= temp @kind object;
  #L16a158.  v0:= (`java.lang.String`) v0 @kind object;
  #L16a15c.  if v1 == 0 then goto L16a16a;
  #L16a160.  v1:= v3;
  #L16a162.  call `appendEscapedEntityName`(v8, v5, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16a168.  goto L16a144;
  #L16a16a.  v2:= ", " @kind object;
  #L16a16e.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a174.  goto L16a162;
  #L16a176.  v0:= " )" @kind object;
  #L16a17a.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a180.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a186.  v0:= temp @kind object;
  #L16a188.  call temp:= `add`(v10, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16a18e.  call `setLength`(v5, v3) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L16a194.  goto L16a084;
  #L16a198.  return @kind void;
}
procedure `java.util.List` `addCreateTableStatements`(`com.j256.ormlite.support.ConnectionSource` v3 @kind object, `com.j256.ormlite.table.TableInfo` v4 @kind object, `boolean` v5 ) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateTableStatements:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L16a1ac.  v0:= new `java.util.ArrayList`;
  #L16a1b0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a1b6.  v1:= new `java.util.ArrayList`;
  #L16a1ba.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a1c0.  call temp:= `getDatabaseType`(v3) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L16a1c6.  v2:= temp @kind object;
  #L16a1c8.  call `addCreateTableStatements`(v2, v4, v0, v1, v5) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateTableStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;Ljava/util/List;Z)V` @kind static;
  #L16a1ce.  return v0 @kind object;
}
procedure `void` `addCreateTableStatements`(`com.j256.ormlite.db.DatabaseType` v17 @kind object, `com.j256.ormlite.table.TableInfo` v18 @kind object, `java.util.List` v19 @kind object, `java.util.List` v20 @kind object, `boolean` v21 ) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateTableStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;Ljava/util/List;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L16a1e0.  v6:= new `java.lang.StringBuilder`;
  #L16a1e4.  v4:= 256I;
  #L16a1e8.  call `<init>`(v6, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L16a1ee.  v4:= "CREATE TABLE " @kind object;
  #L16a1f2.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a1f8.  if v21 == 0 then goto L16a212;
  #L16a1fc.  call temp:= `isCreateIfNotExistsSupported`(v17) @signature `Lcom/j256/ormlite/db/DatabaseType;.isCreateIfNotExistsSupported:()Z` @kind interface;
  #L16a202.  v4:= temp;
  #L16a204.  if v4 == 0 then goto L16a212;
  #L16a208.  v4:= "IF NOT EXISTS " @kind object;
  #L16a20c.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a212.  call temp:= `getTableName`(v18) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a218.  v4:= temp @kind object;
  #L16a21a.  v0:= v17 @kind object;
  #L16a21e.  call `appendEscapedEntityName`(v0, v6, v4) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16a224.  v4:= " (" @kind object;
  #L16a228.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a22e.  v8:= new `java.util.ArrayList`;
  #L16a232.  call `<init>`(v8) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a238.  v9:= new `java.util.ArrayList`;
  #L16a23c.  call `<init>`(v9) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a242.  v10:= new `java.util.ArrayList`;
  #L16a246.  call `<init>`(v10) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a24c.  v12:= 1I;
  #L16a24e.  call temp:= `getFieldTypes`(v18) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16a254.  v14:= temp @kind object;
  #L16a256.  v15:= length @variable v14;
  #L16a258.  v4:= 0I;
  #L16a25a.  v13:= v4;
  #L16a25c.  v4:= v12;
  #L16a25e.  if v13 >= v15 then goto L16a2ea;
  #L16a262.  v7:= v14[v13] @kind object;
  #L16a266.  call temp:= `isForeignCollection`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.isForeignCollection:()Z` @kind virtual;
  #L16a26c.  v5:= temp;
  #L16a26e.  if v5 == 0 then goto L16a27e;
  #L16a272.  v12:= v4;
  #L16a274.  v4:= v13 + 1;
  #L16a278.  v13:= v4;
  #L16a27a.  v4:= v12;
  #L16a27c.  goto L16a25e;
  #L16a27e.  if v4 == 0 then goto L16a2aa;
  #L16a282.  v4:= 0I;
  #L16a284.  v12:= v4;
  #L16a286.  call temp:= `getColumnDefinition`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnDefinition:()Ljava/lang/String;` @kind virtual;
  #L16a28c.  v4:= temp @kind object;
  #L16a28e.  if v4 != 0 then goto L16a2b8;
  #L16a292.  call temp:= `getTableName`(v18) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a298.  v5:= temp @kind object;
  #L16a29a.  v4:= v17 @kind object;
  #L16a29e.  v11:= v20 @kind object;
  #L16a2a2.  call `appendColumnArg`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendColumnArg:(Ljava/lang/String;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @kind interface;
  #L16a2a8.  goto L16a274;
  #L16a2aa.  v5:= ", " @kind object;
  #L16a2ae.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a2b4.  v12:= v4;
  #L16a2b6.  goto L16a286;
  #L16a2b8.  call temp:= `getColumnName`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L16a2be.  v5:= temp @kind object;
  #L16a2c0.  v0:= v17 @kind object;
  #L16a2c4.  call `appendEscapedEntityName`(v0, v6, v5) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16a2ca.  v5:= 32I;
  #L16a2ce.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a2d4.  v5:= temp @kind object;
  #L16a2d6.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a2dc.  v4:= temp @kind object;
  #L16a2de.  v5:= 32I;
  #L16a2e2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a2e8.  goto L16a274;
  #L16a2ea.  call temp:= `getFieldTypes`(v18) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16a2f0.  v12:= temp @kind object;
  #L16a2f2.  v11:= v17 @kind object;
  #L16a2f6.  v13:= v8 @kind object;
  #L16a2f8.  v14:= v9 @kind object;
  #L16a2fa.  v15:= v10 @kind object;
  #L16a2fc.  v16:= v20 @kind object;
  #L16a300.  call `addPrimaryKeySql`(v11, v12, v13, v14, v15, v16) @signature `Lcom/j256/ormlite/db/DatabaseType;.addPrimaryKeySql:([Lcom/j256/ormlite/field/FieldType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @kind interface;
  #L16a306.  call temp:= `getFieldTypes`(v18) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16a30c.  v12:= temp @kind object;
  #L16a30e.  v11:= v17 @kind object;
  #L16a312.  v13:= v8 @kind object;
  #L16a314.  v14:= v9 @kind object;
  #L16a316.  v15:= v10 @kind object;
  #L16a318.  v16:= v20 @kind object;
  #L16a31c.  call `addUniqueComboSql`(v11, v12, v13, v14, v15, v16) @signature `Lcom/j256/ormlite/db/DatabaseType;.addUniqueComboSql:([Lcom/j256/ormlite/field/FieldType;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @kind interface;
  #L16a322.  call temp:= `iterator`(v8) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16a328.  v5:= temp @kind object;
  #L16a32a.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16a330.  v4:= temp;
  #L16a332.  if v4 == 0 then goto L16a356;
  #L16a336.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16a33c.  v4:= temp @kind object;
  #L16a33e.  v4:= (`java.lang.String`) v4 @kind object;
  #L16a342.  v7:= ", " @kind object;
  #L16a346.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a34c.  v7:= temp @kind object;
  #L16a34e.  call temp:= `append`(v7, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a354.  goto L16a32a;
  #L16a356.  v4:= ") " @kind object;
  #L16a35a.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a360.  v0:= v17 @kind object;
  #L16a364.  call `appendCreateTableSuffix`(v0, v6) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendCreateTableSuffix:(Ljava/lang/StringBuilder;)V` @kind interface;
  #L16a36a.  v0:= v19 @kind object;
  #L16a36e.  call temp:= `addAll`(v0, v9) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L16a374.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a37a.  v4:= temp @kind object;
  #L16a37c.  v0:= v19 @kind object;
  #L16a380.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16a386.  v0:= v19 @kind object;
  #L16a38a.  call temp:= `addAll`(v0, v10) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L16a390.  v4:= 0I;
  #L16a392.  v0:= v17 @kind object;
  #L16a396.  v1:= v18 @kind object;
  #L16a39a.  v2:= v19 @kind object;
  #L16a39e.  v3:= v21;
  #L16a3a2.  call `addCreateIndexStatements`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateIndexStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;ZZ)V` @kind static;
  #L16a3a8.  v4:= 1I;
  #L16a3aa.  v0:= v17 @kind object;
  #L16a3ae.  v1:= v18 @kind object;
  #L16a3b2.  v2:= v19 @kind object;
  #L16a3b6.  v3:= v21;
  #L16a3ba.  call `addCreateIndexStatements`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateIndexStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;ZZ)V` @kind static;
  #L16a3c0.  return @kind void;
}
procedure `void` `addDropIndexStatements`(`com.j256.ormlite.db.DatabaseType` v7 @kind object, `com.j256.ormlite.table.TableInfo` v8 @kind object, `java.util.List` v9 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.addDropIndexStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16a3d4.  v1:= 0I;
  #L16a3d6.  v2:= new `java.util.HashSet`;
  #L16a3da.  call `<init>`(v2) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L16a3e0.  call temp:= `getFieldTypes`(v8) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16a3e6.  v3:= temp @kind object;
  #L16a3e8.  v4:= length @variable v3;
  #L16a3ea.  v0:= v1;
  #L16a3ec.  if v0 >= v4 then goto L16a41e;
  #L16a3f0.  v5:= v3[v0] @kind object;
  #L16a3f4.  call temp:= `getIndexName`(v5) @signature `Lcom/j256/ormlite/field/FieldType;.getIndexName:()Ljava/lang/String;` @kind virtual;
  #L16a3fa.  v6:= temp @kind object;
  #L16a3fc.  if v6 == 0 then goto L16a406;
  #L16a400.  call temp:= `add`(v2, v6) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16a406.  call temp:= `getUniqueIndexName`(v5) @signature `Lcom/j256/ormlite/field/FieldType;.getUniqueIndexName:()Ljava/lang/String;` @kind virtual;
  #L16a40c.  v5:= temp @kind object;
  #L16a40e.  if v5 == 0 then goto L16a418;
  #L16a412.  call temp:= `add`(v2, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16a418.  v0:= v0 + 1;
  #L16a41c.  goto L16a3ec;
  #L16a41e.  v3:= new `java.lang.StringBuilder`;
  #L16a422.  v0:= 48I;
  #L16a426.  call `<init>`(v3, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L16a42c.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16a432.  v2:= temp @kind object;
  #L16a434.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16a43a.  v0:= temp;
  #L16a43c.  if v0 == 0 then goto L16a488;
  #L16a440.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16a446.  v0:= temp @kind object;
  #L16a448.  v0:= (`java.lang.String`) v0 @kind object;
  #L16a44c.  v4:= `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16a450.  v5:= "dropping index '{}' for table '{}" @kind object;
  #L16a454.  call temp:= `getTableName`(v8) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a45a.  v6:= temp @kind object;
  #L16a45c.  call `info`(v4, v5, v0, v6) @signature `Lcom/j256/ormlite/logger/Logger;.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L16a462.  v4:= "DROP INDEX " @kind object;
  #L16a466.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a46c.  call `appendEscapedEntityName`(v7, v3, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16a472.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a478.  v0:= temp @kind object;
  #L16a47a.  call temp:= `add`(v9, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16a480.  call `setLength`(v3, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L16a486.  goto L16a434;
  #L16a488.  return @kind void;
}
procedure `void` `addDropTableStatements`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.addDropTableStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16a49c.  v1:= new `java.util.ArrayList`;
  #L16a4a0.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a4a6.  v2:= new `java.util.ArrayList`;
  #L16a4aa.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a4b0.  call temp:= `getFieldTypes`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16a4b6.  v3:= temp @kind object;
  #L16a4b8.  v4:= length @variable v3;
  #L16a4ba.  v0:= 0I;
  #L16a4bc.  if v0 >= v4 then goto L16a4d0;
  #L16a4c0.  v5:= v3[v0] @kind object;
  #L16a4c4.  call `dropColumnArg`(v6, v5, v1, v2) @signature `Lcom/j256/ormlite/db/DatabaseType;.dropColumnArg:(Lcom/j256/ormlite/field/FieldType;Ljava/util/List;Ljava/util/List;)V` @kind interface;
  #L16a4ca.  v0:= v0 + 1;
  #L16a4ce.  goto L16a4bc;
  #L16a4d0.  v0:= new `java.lang.StringBuilder`;
  #L16a4d4.  v3:= 64I;
  #L16a4d8.  call `<init>`(v0, v3) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L16a4de.  v3:= "DROP TABLE " @kind object;
  #L16a4e2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a4e8.  call temp:= `getTableName`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a4ee.  v3:= temp @kind object;
  #L16a4f0.  call `appendEscapedEntityName`(v6, v0, v3) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16a4f6.  v3:= 32I;
  #L16a4fa.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a500.  call temp:= `addAll`(v8, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L16a506.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a50c.  v0:= temp @kind object;
  #L16a50e.  call temp:= `add`(v8, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16a514.  call temp:= `addAll`(v8, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L16a51a.  return @kind void;
}
procedure `int` `clearTable`(`com.j256.ormlite.support.ConnectionSource` v1 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v2 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.clearTable:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16a52c.  call temp:= `getTableName`(v2) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a532.  v0:= temp @kind object;
  #L16a534.  call temp:= `clearTable`(v1, v0) @signature `Lcom/j256/ormlite/table/TableUtils;.clearTable:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;)I` @kind static;
  #L16a53a.  v0:= temp;
  #L16a53c.  return v0;
}
procedure `int` `clearTable`(`com.j256.ormlite.support.ConnectionSource` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.clearTable:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L16a550.  call temp:= `extractTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L16a556.  v0:= temp @kind object;
  #L16a558.  call temp:= `getDatabaseType`(v3) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L16a55e.  v1:= temp @kind object;
  #L16a560.  call temp:= `isEntityNamesMustBeUpCase`(v1) @signature `Lcom/j256/ormlite/db/DatabaseType;.isEntityNamesMustBeUpCase:()Z` @kind interface;
  #L16a566.  v2:= temp;
  #L16a568.  if v2 == 0 then goto L16a574;
  #L16a56c.  call temp:= `upCaseEntityName`(v1, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.upCaseEntityName:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L16a572.  v0:= temp @kind object;
  #L16a574.  call temp:= `clearTable`(v3, v0) @signature `Lcom/j256/ormlite/table/TableUtils;.clearTable:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;)I` @kind static;
  #L16a57a.  v0:= temp;
  #L16a57c.  return v0;
}
procedure `int` `clearTable`(`com.j256.ormlite.support.ConnectionSource` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.clearTable:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16a590.  call temp:= `getDatabaseType`(v7) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L16a596.  v0:= temp @kind object;
  #L16a598.  v1:= new `java.lang.StringBuilder`;
  #L16a59c.  v2:= 48I;
  #L16a5a0.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L16a5a6.  call temp:= `isTruncateSupported`(v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.isTruncateSupported:()Z` @kind interface;
  #L16a5ac.  v2:= temp;
  #L16a5ae.  if v2 == 0 then goto L16a610;
  #L16a5b2.  v2:= "TRUNCATE TABLE " @kind object;
  #L16a5b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a5bc.  call `appendEscapedEntityName`(v0, v1, v8) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16a5c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a5c8.  v1:= temp @kind object;
  #L16a5ca.  v0:= `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16a5ce.  v2:= "clearing table '{}' with '{}" @kind object;
  #L16a5d2.  call `info`(v0, v2, v8, v1) @signature `Lcom/j256/ormlite/logger/Logger;.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L16a5d8.  v6:= 0I;
  #L16a5da.  call temp:= `getReadWriteConnection`(v7, v8) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getReadWriteConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L16a5e0.  v0:= temp @kind object;
  #Try_start0.  
  #L16a5e2.  v2:= `@@com.j256.ormlite.stmt.StatementBuilder$StatementType.EXECUTE` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L16a5e6.  v3:= `@@com.j256.ormlite.table.TableUtils.noFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16a5ea.  v4:= -1I;
  #L16a5ec.  v5:= 0I;
  #L16a5ee.  call temp:= `compileStatement`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @kind interface;
  #Try_end0.  
  #L16a5f4.  v2:= temp @kind object;
  #Try_start1.  
  #L16a5f6.  call temp:= `runExecute`(v2) @signature `Lcom/j256/ormlite/support/CompiledStatement;.runExecute:()I` @kind interface;
  #Try_end1.  
  #L16a5fc.  v1:= temp;
  #L16a5fe.  v3:= "compiled statement" @kind object;
  #L16a602.  call `closeThrowSqlException`(v2, v3) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L16a608.  call `releaseConnection`(v7, v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.releaseConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L16a60e.  return v1;
  #L16a610.  v2:= "DELETE FROM " @kind object;
  #L16a614.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a61a.  goto L16a5bc;
  #L16a61c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16a61e.  v2:= v6 @kind object;
  #L16a620.  v3:= "compiled statement" @kind object;
  #L16a624.  call `closeThrowSqlException`(v2, v3) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L16a62a.  call `releaseConnection`(v7, v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.releaseConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L16a630.  throw v1;
  #L16a632.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16a634.  goto L16a620;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16a61c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L16a632;
}
procedure `int` `createTable`(`com.j256.ormlite.dao.Dao` v1 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.createTable:(Lcom/j256/ormlite/dao/Dao;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16a660.  v0:= 0I;
  #L16a662.  call temp:= `doCreateTable`(v1, v0) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/dao/Dao;Z)I` @kind static;
  #L16a668.  v0:= temp;
  #L16a66a.  return v0;
}
procedure `int` `createTable`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.createTable:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L16a67c.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16a682.  v0:= temp @kind object;
  #L16a684.  v1:= 0I;
  #L16a686.  call temp:= `doCreateTable`(v0, v1) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/dao/Dao;Z)I` @kind static;
  #L16a68c.  v0:= temp;
  #L16a68e.  return v0;
}
procedure `int` `createTable`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.createTable:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L16a6a0.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16a6a6.  v0:= temp @kind object;
  #L16a6a8.  v1:= 0I;
  #L16a6aa.  call temp:= `doCreateTable`(v0, v1) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/dao/Dao;Z)I` @kind static;
  #L16a6b0.  v0:= temp;
  #L16a6b2.  return v0;
}
procedure `int` `createTableIfNotExists`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.createTableIfNotExists:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L16a6c4.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16a6ca.  v0:= temp @kind object;
  #L16a6cc.  v1:= 1I;
  #L16a6ce.  call temp:= `doCreateTable`(v0, v1) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/dao/Dao;Z)I` @kind static;
  #L16a6d4.  v0:= temp;
  #L16a6d6.  return v0;
}
procedure `int` `createTableIfNotExists`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.createTableIfNotExists:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L16a6e8.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16a6ee.  v0:= temp @kind object;
  #L16a6f0.  v1:= 1I;
  #L16a6f2.  call temp:= `doCreateTable`(v0, v1) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/dao/Dao;Z)I` @kind static;
  #L16a6f8.  v0:= temp;
  #L16a6fa.  return v0;
}
procedure `int` `doCreateTable`(`com.j256.ormlite.dao.Dao` v4 @kind object, `boolean` v5 ) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/dao/Dao;Z)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16a70c.  v0:= instanceof @variable v4 @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind boolean;
  #L16a710.  if v0 == 0 then goto L16a732;
  #L16a714.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind interface;
  #L16a71a.  v0:= temp @kind object;
  #L16a71c.  v4:= (`com.j256.ormlite.dao.BaseDaoImpl`) v4 @kind object;
  #L16a720.  call temp:= `getTableInfo`(v4) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl;.getTableInfo:()Lcom/j256/ormlite/table/TableInfo;` @kind virtual;
  #L16a726.  v1:= temp @kind object;
  #L16a728.  call temp:= `doCreateTable`(v0, v1, v5) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)I` @kind static;
  #L16a72e.  v0:= temp;
  #L16a730.  return v0;
  #L16a732.  v0:= new `com.j256.ormlite.table.TableInfo`;
  #L16a736.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind interface;
  #L16a73c.  v1:= temp @kind object;
  #L16a73e.  v2:= 0I;
  #L16a740.  call temp:= `getDataClass`(v4) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L16a746.  v3:= temp @kind object;
  #L16a748.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/table/TableInfo;.<init>:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/dao/BaseDaoImpl;Ljava/lang/Class;)V` @kind direct;
  #L16a74e.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind interface;
  #L16a754.  v1:= temp @kind object;
  #L16a756.  call temp:= `doCreateTable`(v1, v0, v5) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)I` @kind static;
  #L16a75c.  v0:= temp;
  #L16a75e.  goto L16a730;
}
procedure `int` `doCreateTable`(`com.j256.ormlite.support.ConnectionSource` v8 @kind object, `com.j256.ormlite.table.TableInfo` v9 @kind object, `boolean` v10 ) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTable:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16a770.  call temp:= `getDatabaseType`(v8) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L16a776.  v6:= temp @kind object;
  #L16a778.  v0:= `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16a77c.  v1:= "creating table '{}'" @kind object;
  #L16a780.  call temp:= `getTableName`(v9) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a786.  v2:= temp @kind object;
  #L16a788.  call `info`(v0, v1, v2) @signature `Lcom/j256/ormlite/logger/Logger;.info:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L16a78e.  v2:= new `java.util.ArrayList`;
  #L16a792.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a798.  v7:= new `java.util.ArrayList`;
  #L16a79c.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a7a2.  call `addCreateTableStatements`(v6, v9, v2, v7, v10) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateTableStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;Ljava/util/List;Z)V` @kind static;
  #L16a7a8.  call temp:= `getTableName`(v9) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a7ae.  v0:= temp @kind object;
  #L16a7b0.  call temp:= `getReadWriteConnection`(v8, v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getReadWriteConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L16a7b6.  v0:= temp @kind object;
  #Try_start0.  
  #L16a7b8.  v1:= "create" @kind object;
  #L16a7bc.  v3:= 0I;
  #L16a7be.  call temp:= `isCreateTableReturnsNegative`(v6) @signature `Lcom/j256/ormlite/db/DatabaseType;.isCreateTableReturnsNegative:()Z` @kind interface;
  #L16a7c4.  v4:= temp;
  #L16a7c6.  call temp:= `isCreateTableReturnsZero`(v6) @signature `Lcom/j256/ormlite/db/DatabaseType;.isCreateTableReturnsZero:()Z` @kind interface;
  #L16a7cc.  v5:= temp;
  #L16a7ce.  call temp:= `doStatements`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/table/TableUtils;.doStatements:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/String;Ljava/util/Collection;ZZZ)I` @kind static;
  #L16a7d4.  v1:= temp;
  #L16a7d6.  call temp:= `doCreateTestQueries`(v0, v6, v7) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTestQueries:(Lcom/j256/ormlite/support/DatabaseConnection;Lcom/j256/ormlite/db/DatabaseType;Ljava/util/List;)I` @kind static;
  #Try_end0.  
  #L16a7dc.  v2:= temp;
  #L16a7de.  v1:= v1 + v2 @kind int;
  #L16a7e0.  call `releaseConnection`(v8, v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.releaseConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L16a7e6.  return v1;
  #L16a7e8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16a7ea.  call `releaseConnection`(v8, v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.releaseConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L16a7f0.  throw v1;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16a7e8;
}
procedure `int` `doCreateTestQueries`(`com.j256.ormlite.support.DatabaseConnection` v10 @kind object, `com.j256.ormlite.db.DatabaseType` v11 @kind object, `java.util.List` v12 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.doCreateTestQueries:(Lcom/j256/ormlite/support/DatabaseConnection;Lcom/j256/ormlite/db/DatabaseType;Ljava/util/List;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L16a810.  v8:= 0I;
  #L16a812.  v7:= 0I;
  #L16a814.  call temp:= `iterator`(v12) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16a81a.  v9:= temp @kind object;
  #L16a81c.  v6:= v7;
  #L16a81e.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16a824.  v0:= temp;
  #L16a826.  if v0 == 0 then goto L16a8dc;
  #L16a82a.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16a830.  v1:= temp @kind object;
  #L16a832.  v1:= (`java.lang.String`) v1 @kind object;
  #Try_start0.  
  #L16a836.  v2:= `@@com.j256.ormlite.stmt.StatementBuilder$StatementType.SELECT` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L16a83a.  v3:= `@@com.j256.ormlite.table.TableUtils.noFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16a83e.  v4:= -1I;
  #L16a840.  v5:= 0I;
  #L16a842.  v0:= v10 @kind object;
  #L16a844.  call temp:= `compileStatement`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @kind interface;
  #Try_end0.  
  #L16a84a.  v2:= temp @kind object;
  #L16a84c.  v0:= 0I;
  #Try_start1.  
  #L16a84e.  call temp:= `runQuery`(v2, v0) @signature `Lcom/j256/ormlite/support/CompiledStatement;.runQuery:(Lcom/j256/ormlite/dao/ObjectCache;)Lcom/j256/ormlite/support/DatabaseResults;` @kind interface;
  #L16a854.  v4:= temp @kind object;
  #L16a856.  call temp:= `first`(v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.first:()Z` @kind interface;
  #L16a85c.  v0:= temp;
  #L16a85e.  v3:= v7;
  #L16a860.  if v0 == 0 then goto L16a872;
  #L16a864.  v3:= v3 + 1;
  #L16a868.  call temp:= `next`(v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.next:()Z` @kind interface;
  #L16a86e.  v0:= temp;
  #L16a870.  goto L16a860;
  #L16a872.  v0:= `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16a876.  v4:= "executing create table after-query got {} results: {}" @kind object;
  #L16a87a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16a880.  v3:= temp @kind object;
  #L16a882.  call `info`(v0, v4, v3, v1) @signature `Lcom/j256/ormlite/logger/Logger;.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #Try_end1.  
  #L16a888.  v0:= "compiled statement" @kind object;
  #L16a88c.  call `closeThrowSqlException`(v2, v0) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L16a892.  v0:= v6 + 1;
  #L16a896.  v6:= v0;
  #L16a898.  goto L16a81e;
  #L16a89a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16a89c.  v2:= v8 @kind object;
  #Try_start2.  
  #L16a89e.  v3:= new `java.lang.StringBuilder`;
  #L16a8a2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16a8a8.  v4:= "executing create table after-query failed: " @kind object;
  #L16a8ac.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a8b2.  v3:= temp @kind object;
  #L16a8b4.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a8ba.  v1:= temp @kind object;
  #L16a8bc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a8c2.  v1:= temp @kind object;
  #L16a8c4.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16a8ca.  v0:= temp @kind object;
  #L16a8cc.  throw v0;
  #Try_end2.  
  #L16a8ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16a8d0.  v1:= "compiled statement" @kind object;
  #L16a8d4.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L16a8da.  throw v0;
  #L16a8dc.  return v6;
  #L16a8de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16a8e0.  v2:= v8 @kind object;
  #L16a8e2.  goto L16a8d0;
  #L16a8e4.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16a8e6.  goto L16a89e;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16a89a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16a8de;
  catch `java.sql.SQLException` @[Try_start1..Try_end1] goto L16a8e4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L16a8ce;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L16a8ce;
}
procedure `int` `doDropTable`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.support.ConnectionSource` v7 @kind object, `com.j256.ormlite.table.TableInfo` v8 @kind object, `boolean` v9 ) @signature `Lcom/j256/ormlite/table/TableUtils;.doDropTable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16a920.  v0:= `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16a924.  v1:= "dropping table '{}'" @kind object;
  #L16a928.  call temp:= `getTableName`(v8) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a92e.  v2:= temp @kind object;
  #L16a930.  call `info`(v0, v1, v2) @signature `Lcom/j256/ormlite/logger/Logger;.info:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L16a936.  v2:= new `java.util.ArrayList`;
  #L16a93a.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16a940.  call `addDropIndexStatements`(v6, v8, v2) @signature `Lcom/j256/ormlite/table/TableUtils;.addDropIndexStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;)V` @kind static;
  #L16a946.  call `addDropTableStatements`(v6, v8, v2) @signature `Lcom/j256/ormlite/table/TableUtils;.addDropTableStatements:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Ljava/util/List;)V` @kind static;
  #L16a94c.  call temp:= `getTableName`(v8) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16a952.  v0:= temp @kind object;
  #L16a954.  call temp:= `getReadWriteConnection`(v7, v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getReadWriteConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L16a95a.  v0:= temp @kind object;
  #Try_start0.  
  #L16a95c.  v1:= "drop" @kind object;
  #L16a960.  call temp:= `isCreateTableReturnsNegative`(v6) @signature `Lcom/j256/ormlite/db/DatabaseType;.isCreateTableReturnsNegative:()Z` @kind interface;
  #L16a966.  v4:= temp;
  #L16a968.  v5:= 0I;
  #L16a96a.  v3:= v9;
  #L16a96c.  call temp:= `doStatements`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/table/TableUtils;.doStatements:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/String;Ljava/util/Collection;ZZZ)I` @kind static;
  #Try_end0.  
  #L16a972.  v1:= temp;
  #L16a974.  call `releaseConnection`(v7, v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.releaseConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L16a97a.  return v1;
  #L16a97c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16a97e.  call `releaseConnection`(v7, v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.releaseConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L16a984.  throw v1;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16a97c;
}
procedure `int` `doStatements`(`com.j256.ormlite.support.DatabaseConnection` v10 @kind object, `java.lang.String` v11 @kind object, `java.util.Collection` v12 @kind object, `boolean` v13 , `boolean` v14 , `boolean` v15 ) @signature `Lcom/j256/ormlite/table/TableUtils;.doStatements:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/String;Ljava/util/Collection;ZZZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L16a9a4.  v7:= 0I;
  #L16a9a6.  call temp:= `iterator`(v12) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16a9ac.  v9:= temp @kind object;
  #L16a9ae.  v6:= v7;
  #L16a9b0.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16a9b6.  v0:= temp;
  #L16a9b8.  if v0 == 0 then goto L16ab1c;
  #L16a9bc.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16a9c2.  v1:= temp @kind object;
  #L16a9c4.  v1:= (`java.lang.String`) v1 @kind object;
  #L16a9c8.  v8:= 0I;
  #Try_start0.  
  #L16a9ca.  v2:= `@@com.j256.ormlite.stmt.StatementBuilder$StatementType.EXECUTE` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L16a9ce.  v3:= `@@com.j256.ormlite.table.TableUtils.noFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16a9d2.  v4:= -1I;
  #L16a9d4.  v5:= 0I;
  #L16a9d6.  v0:= v10 @kind object;
  #L16a9d8.  call temp:= `compileStatement`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @kind interface;
  #Try_end0.  
  #L16a9de.  v2:= temp @kind object;
  #Try_start1.  
  #L16a9e0.  call temp:= `runExecute`(v2) @signature `Lcom/j256/ormlite/support/CompiledStatement;.runExecute:()I` @kind interface;
  #Try_end1.  
  #L16a9e6.  v3:= temp;
  #Try_start2.  
  #L16a9e8.  v0:= `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16a9ec.  v4:= "executed {} table statement changed {} rows: {}" @kind object;
  #L16a9f0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16a9f6.  v5:= temp @kind object;
  #L16a9f8.  call `info`(v0, v4, v11, v5, v1) @signature `Lcom/j256/ormlite/logger/Logger;.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #Try_end2.  
  #L16a9fe.  v0:= "compiled statement" @kind object;
  #L16aa02.  call `closeThrowSqlException`(v2, v0) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L16aa08.  if v3 >= 0 then goto L16aac4;
  #L16aa0c.  if v14 != 0 then goto L16ab12;
  #L16aa10.  v0:= new `java.sql.SQLException`;
  #L16aa14.  v2:= new `java.lang.StringBuilder`;
  #L16aa18.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16aa1e.  v4:= "SQL statement " @kind object;
  #L16aa22.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aa28.  v2:= temp @kind object;
  #L16aa2a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aa30.  v1:= temp @kind object;
  #L16aa32.  v2:= " updated " @kind object;
  #L16aa36.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aa3c.  v1:= temp @kind object;
  #L16aa3e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aa44.  v1:= temp @kind object;
  #L16aa46.  v2:= " rows, we were expecting >= 0" @kind object;
  #L16aa4a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aa50.  v1:= temp @kind object;
  #L16aa52.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16aa58.  v1:= temp @kind object;
  #L16aa5a.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16aa60.  throw v0;
  #L16aa62.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16aa64.  v2:= v8 @kind object;
  #L16aa66.  v3:= v7;
  #L16aa68.  if v13 == 0 then goto L16aa86;
  #Try_start3.  
  #L16aa6c.  v4:= `@@com.j256.ormlite.table.TableUtils.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16aa70.  v5:= "ignoring {} error '{}' for statement: {}" @kind object;
  #L16aa74.  call `info`(v4, v5, v11, v0, v1) @signature `Lcom/j256/ormlite/logger/Logger;.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #Try_end3.  
  #L16aa7a.  v0:= "compiled statement" @kind object;
  #L16aa7e.  call `closeThrowSqlException`(v2, v0) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L16aa84.  goto L16aa08;
  #Try_start4.  
  #L16aa86.  v3:= new `java.lang.StringBuilder`;
  #L16aa8a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16aa90.  v4:= "SQL statement failed: " @kind object;
  #L16aa94.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aa9a.  v3:= temp @kind object;
  #L16aa9c.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aaa2.  v1:= temp @kind object;
  #L16aaa4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16aaaa.  v1:= temp @kind object;
  #L16aaac.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16aab2.  v0:= temp @kind object;
  #L16aab4.  throw v0;
  #Try_end4.  
  #L16aab6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16aab8.  v1:= "compiled statement" @kind object;
  #L16aabc.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L16aac2.  throw v0;
  #L16aac4.  if v3 <= 0 then goto L16ab12;
  #L16aac8.  if v15 == 0 then goto L16ab12;
  #L16aacc.  v0:= new `java.sql.SQLException`;
  #L16aad0.  v2:= new `java.lang.StringBuilder`;
  #L16aad4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16aada.  v4:= "SQL statement updated " @kind object;
  #L16aade.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aae4.  v2:= temp @kind object;
  #L16aae6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aaec.  v2:= temp @kind object;
  #L16aaee.  v3:= " rows, we were expecting == 0: " @kind object;
  #L16aaf2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16aaf8.  v2:= temp @kind object;
  #L16aafa.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16ab00.  v1:= temp @kind object;
  #L16ab02.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16ab08.  v1:= temp @kind object;
  #L16ab0a.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16ab10.  throw v0;
  #L16ab12.  v0:= v6 + 1;
  #L16ab16.  v6:= v0;
  #L16ab18.  goto L16a9b0;
  #L16ab1c.  return v6;
  #L16ab1e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16ab20.  v2:= v8 @kind object;
  #L16ab22.  goto L16aab8;
  #L16ab24.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16ab26.  v3:= v7;
  #L16ab28.  goto L16aa68;
  #L16ab2a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16ab2c.  goto L16aa68;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16aa62;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16ab1e;
  catch `java.sql.SQLException` @[Try_start1..Try_end1] goto L16ab24;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L16aab6;
  catch `java.sql.SQLException` @[Try_start2..Try_end2] goto L16ab2a;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L16aab6;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L16aab6;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L16aab6;
}
procedure `int` `dropTable`(`com.j256.ormlite.dao.Dao` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/table/TableUtils;.dropTable:(Lcom/j256/ormlite/dao/Dao;Z)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16ab80.  call temp:= `getConnectionSource`(v5) @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind interface;
  #L16ab86.  v0:= temp @kind object;
  #L16ab88.  call temp:= `getDataClass`(v5) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L16ab8e.  v1:= temp @kind object;
  #L16ab90.  call temp:= `getDatabaseType`(v0) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L16ab96.  v2:= temp @kind object;
  #L16ab98.  v3:= instanceof @variable v5 @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind boolean;
  #L16ab9c.  if v3 == 0 then goto L16abb6;
  #L16aba0.  v5:= (`com.j256.ormlite.dao.BaseDaoImpl`) v5 @kind object;
  #L16aba4.  call temp:= `getTableInfo`(v5) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl;.getTableInfo:()Lcom/j256/ormlite/table/TableInfo;` @kind virtual;
  #L16abaa.  v1:= temp @kind object;
  #L16abac.  call temp:= `doDropTable`(v2, v0, v1, v6) @signature `Lcom/j256/ormlite/table/TableUtils;.doDropTable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)I` @kind static;
  #L16abb2.  v0:= temp;
  #L16abb4.  return v0;
  #L16abb6.  v3:= new `com.j256.ormlite.table.TableInfo`;
  #L16abba.  v4:= 0I;
  #L16abbc.  call `<init>`(v3, v0, v4, v1) @signature `Lcom/j256/ormlite/table/TableInfo;.<init>:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/dao/BaseDaoImpl;Ljava/lang/Class;)V` @kind direct;
  #L16abc2.  call temp:= `doDropTable`(v2, v0, v3, v6) @signature `Lcom/j256/ormlite/table/TableUtils;.doDropTable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)I` @kind static;
  #L16abc8.  v0:= temp;
  #L16abca.  goto L16abb4;
}
procedure `int` `dropTable`(`com.j256.ormlite.support.ConnectionSource` v3 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v4 @kind object, `boolean` v5 ) @signature `Lcom/j256/ormlite/table/TableUtils;.dropTable:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;Z)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L16abdc.  call temp:= `getDatabaseType`(v3) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L16abe2.  v1:= temp @kind object;
  #L16abe4.  call temp:= `createDao`(v3, v4) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16abea.  v0:= temp @kind object;
  #L16abec.  v2:= instanceof @variable v0 @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind boolean;
  #L16abf0.  if v2 == 0 then goto L16ac0a;
  #L16abf4.  v0:= (`com.j256.ormlite.dao.BaseDaoImpl`) v0 @kind object;
  #L16abf8.  call temp:= `getTableInfo`(v0) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl;.getTableInfo:()Lcom/j256/ormlite/table/TableInfo;` @kind virtual;
  #L16abfe.  v0:= temp @kind object;
  #L16ac00.  call temp:= `doDropTable`(v1, v3, v0, v5) @signature `Lcom/j256/ormlite/table/TableUtils;.doDropTable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)I` @kind static;
  #L16ac06.  v0:= temp;
  #L16ac08.  return v0;
  #L16ac0a.  call `extractFieldTypes`(v4, v3) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;)V` @kind virtual;
  #L16ac10.  v0:= new `com.j256.ormlite.table.TableInfo`;
  #L16ac14.  v2:= 0I;
  #L16ac16.  call `<init>`(v0, v1, v2, v4) @signature `Lcom/j256/ormlite/table/TableInfo;.<init>:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/dao/BaseDaoImpl;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @kind direct;
  #L16ac1c.  call temp:= `doDropTable`(v1, v3, v0, v5) @signature `Lcom/j256/ormlite/table/TableUtils;.doDropTable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)I` @kind static;
  #L16ac22.  v0:= temp;
  #L16ac24.  goto L16ac08;
}
procedure `int` `dropTable`(`com.j256.ormlite.support.ConnectionSource` v1 @kind object, `java.lang.Class` v2 @kind object, `boolean` v3 ) @signature `Lcom/j256/ormlite/table/TableUtils;.dropTable:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;Z)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16ac38.  call temp:= `createDao`(v1, v2) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16ac3e.  v0:= temp @kind object;
  #L16ac40.  call temp:= `dropTable`(v0, v3) @signature `Lcom/j256/ormlite/table/TableUtils;.dropTable:(Lcom/j256/ormlite/dao/Dao;Z)I` @kind static;
  #L16ac46.  v0:= temp;
  #L16ac48.  return v0;
}
procedure `java.util.List` `getCreateTableStatements`(`com.j256.ormlite.support.ConnectionSource` v4 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v5 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.getCreateTableStatements:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16ac5c.  v3:= 0I;
  #L16ac5e.  call temp:= `createDao`(v4, v5) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16ac64.  v0:= temp @kind object;
  #L16ac66.  v1:= instanceof @variable v0 @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind boolean;
  #L16ac6a.  if v1 == 0 then goto L16ac84;
  #L16ac6e.  v0:= (`com.j256.ormlite.dao.BaseDaoImpl`) v0 @kind object;
  #L16ac72.  call temp:= `getTableInfo`(v0) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl;.getTableInfo:()Lcom/j256/ormlite/table/TableInfo;` @kind virtual;
  #L16ac78.  v0:= temp @kind object;
  #L16ac7a.  call temp:= `addCreateTableStatements`(v4, v0, v3) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateTableStatements:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)Ljava/util/List;` @kind static;
  #L16ac80.  v0:= temp @kind object;
  #L16ac82.  return v0 @kind object;
  #L16ac84.  call `extractFieldTypes`(v5, v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;)V` @kind virtual;
  #L16ac8a.  v0:= new `com.j256.ormlite.table.TableInfo`;
  #L16ac8e.  call temp:= `getDatabaseType`(v4) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L16ac94.  v1:= temp @kind object;
  #L16ac96.  v2:= 0I;
  #L16ac98.  call `<init>`(v0, v1, v2, v5) @signature `Lcom/j256/ormlite/table/TableInfo;.<init>:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/dao/BaseDaoImpl;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @kind direct;
  #L16ac9e.  call temp:= `addCreateTableStatements`(v4, v0, v3) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateTableStatements:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)Ljava/util/List;` @kind static;
  #L16aca4.  v0:= temp @kind object;
  #L16aca6.  goto L16ac82;
}
procedure `java.util.List` `getCreateTableStatements`(`com.j256.ormlite.support.ConnectionSource` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/j256/ormlite/table/TableUtils;.getCreateTableStatements:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L16acb8.  v2:= 0I;
  #L16acba.  call temp:= `createDao`(v3, v4) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16acc0.  v0:= temp @kind object;
  #L16acc2.  v1:= instanceof @variable v0 @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind boolean;
  #L16acc6.  if v1 == 0 then goto L16ace0;
  #L16acca.  v0:= (`com.j256.ormlite.dao.BaseDaoImpl`) v0 @kind object;
  #L16acce.  call temp:= `getTableInfo`(v0) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl;.getTableInfo:()Lcom/j256/ormlite/table/TableInfo;` @kind virtual;
  #L16acd4.  v0:= temp @kind object;
  #L16acd6.  call temp:= `addCreateTableStatements`(v3, v0, v2) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateTableStatements:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)Ljava/util/List;` @kind static;
  #L16acdc.  v0:= temp @kind object;
  #L16acde.  return v0 @kind object;
  #L16ace0.  v0:= new `com.j256.ormlite.table.TableInfo`;
  #L16ace4.  v1:= 0I;
  #L16ace6.  call `<init>`(v0, v3, v1, v4) @signature `Lcom/j256/ormlite/table/TableInfo;.<init>:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/dao/BaseDaoImpl;Ljava/lang/Class;)V` @kind direct;
  #L16acec.  call temp:= `addCreateTableStatements`(v3, v0, v2) @signature `Lcom/j256/ormlite/table/TableUtils;.addCreateTableStatements:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/TableInfo;Z)Ljava/util/List;` @kind static;
  #L16acf2.  v0:= temp @kind object;
  #L16acf4.  goto L16acde;
}

record `com.j256.ormlite.table.DatabaseTableConfig` @kind class @AccessFlag PUBLIC {
  `java.lang.reflect.Constructor` `com.j256.ormlite.table.DatabaseTableConfig.constructor` @AccessFlag PRIVATE;
  `java.lang.Class` `com.j256.ormlite.table.DatabaseTableConfig.dataClass` @AccessFlag PRIVATE;
  `java.util.List` `com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @AccessFlag PRIVATE;
  `com.j256.ormlite.field.FieldType`[] `com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.table.DatabaseTableConfig.tableName` @AccessFlag PRIVATE;
}
global `com.j256.ormlite.misc.JavaxPersistenceConfigurer` `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L168f78.  v0:= "javax.persistence.Entity" @kind object;
  #L168f7c.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L168f82.  v0:= "com.j256.ormlite.misc.JavaxPersistenceImpl" @kind object;
  #L168f86.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L168f8c.  v0:= temp @kind object;
  #L168f8e.  v1:= 0I;
  #L168f90.  v1:= new `java.lang.Class`[v1];
  #L168f94.  call temp:= `getConstructor`(v0, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L168f9a.  v0:= temp @kind object;
  #L168f9c.  v1:= 0I;
  #L168f9e.  v1:= new `java.lang.Object`[v1];
  #L168fa2.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L168fa8.  v0:= temp @kind object;
  #L168faa.  v0:= (`com.j256.ormlite.misc.JavaxPersistenceConfigurer`) v0 @kind object;
  #L168fae.  `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` := v0 @kind object;
  #Try_end0.  
  #L168fb2.  return @kind void;
  #L168fb4.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L168fb6.  v0:= 0I;
  #L168fb8.  `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` := v0 @kind object;
  #L168fbc.  goto L168fb2;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L168fb4;
}
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L168fe0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L168fe6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L168ff8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L168ffe.  v0.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` := v1 @kind object;
  #L169002.  v0.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` := v2 @kind object;
  #L169006.  v0.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` := v3 @kind object;
  #L16900a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16901c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L169022.  v0.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` := v1 @kind object;
  #L169026.  v0.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` := v2 @kind object;
  #L16902a.  v0.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] := v3 @kind object;
  #L16902e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this, `java.lang.Class` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L169040.  call temp:= `extractTableName`(v2) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L169046.  v0:= temp @kind object;
  #L169048.  call `<init>`(v1, v2, v0, v3) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L16904e.  return @kind void;
}
procedure `com.j256.ormlite.field.FieldType`[] `convertFieldConfigs`(`com.j256.ormlite.table.DatabaseTableConfig` v8 @kind this, `com.j256.ormlite.support.ConnectionSource` v9 @kind object, `java.lang.String` v10 @kind object, `java.util.List` v11 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.convertFieldConfigs:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;Ljava/util/List;)[Lcom/j256/ormlite/field/FieldType;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L169060.  v6:= new `java.util.ArrayList`;
  #L169064.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16906a.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L169070.  v7:= temp @kind object;
  #L169072.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L169078.  v0:= temp;
  #L16907a.  if v0 == 0 then goto L169124;
  #L16907e.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L169084.  v4:= temp @kind object;
  #L169086.  v4:= (`com.j256.ormlite.field.DatabaseFieldConfig`) v4 @kind object;
  #L16908a.  v0:= 0I;
  #L16908c.  v1:= v8.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L169090.  if v1 == 0 then goto L1690ba;
  #Try_start0.  
  #L169094.  call temp:= `getFieldName`(v4) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFieldName:()Ljava/lang/String;` @kind virtual;
  #L16909a.  v2:= temp @kind object;
  #L16909c.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #Try_end0.  
  #L1690a2.  v3:= temp @kind object;
  #L1690a4.  if v3 == 0 then goto L169112;
  #L1690a8.  v0:= new `com.j256.ormlite.field.FieldType`;
  #L1690ac.  v5:= v8.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L1690b0.  v1:= v9 @kind object;
  #L1690b2.  v2:= v10 @kind object;
  #L1690b4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/field/FieldType;.<init>:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;Ljava/lang/reflect/Field;Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/Class;)V` @kind direct;
  #L1690ba.  if v0 != 0 then goto L16911c;
  #L1690be.  v0:= new `java.sql.SQLException`;
  #L1690c2.  v1:= new `java.lang.StringBuilder`;
  #L1690c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1690cc.  v2:= "Could not find declared field with name '" @kind object;
  #L1690d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1690d6.  v1:= temp @kind object;
  #L1690d8.  call temp:= `getFieldName`(v4) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFieldName:()Ljava/lang/String;` @kind virtual;
  #L1690de.  v2:= temp @kind object;
  #L1690e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1690e6.  v1:= temp @kind object;
  #L1690e8.  v2:= "' for " @kind object;
  #L1690ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1690f2.  v1:= temp @kind object;
  #L1690f4.  v2:= v8.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L1690f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1690fe.  v1:= temp @kind object;
  #L169100.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L169106.  v1:= temp @kind object;
  #L169108.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16910e.  throw v0;
  #L169110.  v2:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L169112.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L169118.  v1:= temp @kind object;
  #L16911a.  goto L169090;
  #L16911c.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L169122.  goto L169072;
  #L169124.  call temp:= `isEmpty`(v6) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L16912a.  v0:= temp;
  #L16912c.  if v0 == 0 then goto L169166;
  #L169130.  v0:= new `java.sql.SQLException`;
  #L169134.  v1:= new `java.lang.StringBuilder`;
  #L169138.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16913e.  v2:= "No fields were configured for class " @kind object;
  #L169142.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169148.  v1:= temp @kind object;
  #L16914a.  v2:= v8.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L16914e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169154.  v1:= temp @kind object;
  #L169156.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16915c.  v1:= temp @kind object;
  #L16915e.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L169164.  throw v0;
  #L169166.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L16916c.  v0:= temp;
  #L16916e.  v0:= new `com.j256.ormlite.field.FieldType`[v0];
  #L169172.  call temp:= `toArray`(v6, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L169178.  v0:= temp @kind object;
  #L16917a.  v0:= (`com.j256.ormlite.field.FieldType`[]) v0 @kind object;
  #L16917e.  return v0 @kind object;
  catch `java.lang.NoSuchFieldException` @[Try_start0..Try_end0] goto L169110;
}
procedure `com.j256.ormlite.field.FieldType`[] `extractFieldTypes`(`com.j256.ormlite.support.ConnectionSource` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;Ljava/lang/String;)[Lcom/j256/ormlite/field/FieldType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1691a0.  v2:= new `java.util.ArrayList`;
  #L1691a4.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1691aa.  v1:= v7 @kind object;
  #L1691ac.  if v1 == 0 then goto L1691e8;
  #L1691b0.  call temp:= `getDeclaredFields`(v1) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L1691b6.  v3:= temp @kind object;
  #L1691b8.  v4:= length @variable v3;
  #L1691ba.  v0:= 0I;
  #L1691bc.  if v0 >= v4 then goto L1691dc;
  #L1691c0.  v5:= v3[v0] @kind object;
  #L1691c4.  call temp:= `createFieldType`(v6, v8, v5, v7) @signature `Lcom/j256/ormlite/field/FieldType;.createFieldType:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;Ljava/lang/reflect/Field;Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @kind static;
  #L1691ca.  v5:= temp @kind object;
  #L1691cc.  if v5 == 0 then goto L1691d6;
  #L1691d0.  call temp:= `add`(v2, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1691d6.  v0:= v0 + 1;
  #L1691da.  goto L1691bc;
  #L1691dc.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1691e2.  v0:= temp @kind object;
  #L1691e4.  v1:= v0 @kind object;
  #L1691e6.  goto L1691ac;
  #L1691e8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1691ee.  v0:= temp;
  #L1691f0.  if v0 == 0 then goto L169246;
  #L1691f4.  v0:= new `java.lang.IllegalArgumentException`;
  #L1691f8.  v1:= new `java.lang.StringBuilder`;
  #L1691fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L169202.  v2:= "No fields have a " @kind object;
  #L169206.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16920c.  v1:= temp @kind object;
  #L16920e.  v2:= constclass @type ^`com.j256.ormlite.field.DatabaseField` @kind object;
  #L169212.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L169218.  v2:= temp @kind object;
  #L16921a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169220.  v1:= temp @kind object;
  #L169222.  v2:= " annotation in " @kind object;
  #L169226.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16922c.  v1:= temp @kind object;
  #L16922e.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169234.  v1:= temp @kind object;
  #L169236.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16923c.  v1:= temp @kind object;
  #L16923e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L169244.  throw v0;
  #L169246.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L16924c.  v0:= temp;
  #L16924e.  v0:= new `com.j256.ormlite.field.FieldType`[v0];
  #L169252.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L169258.  v0:= temp @kind object;
  #L16925a.  v0:= (`com.j256.ormlite.field.FieldType`[]) v0 @kind object;
  #L16925e.  return v0 @kind object;
}
procedure `java.lang.String` `extractTableName`(`java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L169270.  v0:= constclass @type ^`com.j256.ormlite.table.DatabaseTable` @kind object;
  #L169274.  call temp:= `getAnnotation`(v3, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L16927a.  v0:= temp @kind object;
  #L16927c.  v0:= (`com.j256.ormlite.table.DatabaseTable`) v0 @kind object;
  #L169280.  v1:= 0I;
  #L169282.  if v0 == 0 then goto L1692dc;
  #L169286.  call temp:= `tableName`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTable;.tableName:()Ljava/lang/String;` @kind interface;
  #L16928c.  v2:= temp @kind object;
  #L16928e.  if v2 == 0 then goto L1692dc;
  #L169292.  call temp:= `tableName`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTable;.tableName:()Ljava/lang/String;` @kind interface;
  #L169298.  v2:= temp @kind object;
  #L16929a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1692a0.  v2:= temp;
  #L1692a2.  if v2 <= 0 then goto L1692dc;
  #L1692a6.  call temp:= `tableName`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTable;.tableName:()Ljava/lang/String;` @kind interface;
  #L1692ac.  v0:= temp @kind object;
  #L1692ae.  if v0 != 0 then goto L1692c6;
  #L1692b2.  v1:= `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` @kind object;
  #L1692b6.  if v1 == 0 then goto L1692c6;
  #L1692ba.  v0:= `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` @kind object;
  #L1692be.  call temp:= `getEntityName`(v0, v3) @signature `Lcom/j256/ormlite/misc/JavaxPersistenceConfigurer;.getEntityName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L1692c4.  v0:= temp @kind object;
  #L1692c6.  if v0 != 0 then goto L1692da;
  #L1692ca.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1692d0.  v0:= temp @kind object;
  #L1692d2.  call temp:= `toLowerCase`(v0) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L1692d8.  v0:= temp @kind object;
  #L1692da.  return v0 @kind object;
  #L1692dc.  v0:= v1 @kind object;
  #L1692de.  goto L1692ae;
}
procedure `java.lang.reflect.Constructor` `findNoArgConstructor`(`java.lang.Class` v5 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.findNoArgConstructor:(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L1692f0.  call temp:= `getDeclaredConstructors`(v5) @signature `Ljava/lang/Class;.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L1692f6.  v0:= temp @kind object;
  #L1692f8.  v0:= (`java.lang.reflect.Constructor`[]) v0 @kind object;
  #Try_end0.  
  #L1692fc.  v2:= length @variable v0;
  #L1692fe.  v1:= 0I;
  #L169300.  if v1 >= v2 then goto L16939a;
  #L169304.  v3:= v0[v1] @kind object;
  #L169308.  call temp:= `getParameterTypes`(v3) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L16930e.  v4:= temp @kind object;
  #L169310.  v4:= length @variable v4;
  #L169312.  if v4 != 0 then goto L169394;
  #L169316.  call temp:= `isAccessible`(v3) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L16931c.  v0:= temp;
  #L16931e.  if v0 != 0 then goto L16932a;
  #L169322.  v0:= 1I;
  #Try_start1.  
  #L169324.  call `setAccessible`(v3, v0) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #Try_end1.  
  #L16932a.  return v3 @kind object;
  #L16932c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L16932e.  v1:= new `java.lang.IllegalArgumentException`;
  #L169332.  v2:= new `java.lang.StringBuilder`;
  #L169336.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16933c.  v3:= "Can't lookup declared constructors for " @kind object;
  #L169340.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169346.  v2:= temp @kind object;
  #L169348.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16934e.  v2:= temp @kind object;
  #L169350.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L169356.  v2:= temp @kind object;
  #L169358.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L16935e.  throw v1;
  #L169360.  v0:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L169362.  v0:= new `java.lang.IllegalArgumentException`;
  #L169366.  v1:= new `java.lang.StringBuilder`;
  #L16936a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L169370.  v2:= "Could not open access to constructor for " @kind object;
  #L169374.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16937a.  v1:= temp @kind object;
  #L16937c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169382.  v1:= temp @kind object;
  #L169384.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16938a.  v1:= temp @kind object;
  #L16938c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L169392.  throw v0;
  #L169394.  v1:= v1 + 1;
  #L169398.  goto L169300;
  #L16939a.  call temp:= `getEnclosingClass`(v5) @signature `Ljava/lang/Class;.getEnclosingClass:()Ljava/lang/Class;` @kind virtual;
  #L1693a0.  v0:= temp @kind object;
  #L1693a2.  if v0 != 0 then goto L1693d8;
  #L1693a6.  v0:= new `java.lang.IllegalArgumentException`;
  #L1693aa.  v1:= new `java.lang.StringBuilder`;
  #L1693ae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1693b4.  v2:= "Can't find a no-arg constructor for " @kind object;
  #L1693b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1693be.  v1:= temp @kind object;
  #L1693c0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1693c6.  v1:= temp @kind object;
  #L1693c8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1693ce.  v1:= temp @kind object;
  #L1693d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1693d6.  throw v0;
  #L1693d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L1693dc.  v1:= new `java.lang.StringBuilder`;
  #L1693e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1693e6.  v2:= "Can't find a no-arg constructor for " @kind object;
  #L1693ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1693f0.  v1:= temp @kind object;
  #L1693f2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1693f8.  v1:= temp @kind object;
  #L1693fa.  v2:= ".  Missing static on inner class?" @kind object;
  #L1693fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L169404.  v1:= temp @kind object;
  #L169406.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16940c.  v1:= temp @kind object;
  #L16940e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L169414.  throw v0;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L16932c;
  catch `java.lang.SecurityException` @[Try_start1..Try_end1] goto L169360;
}
procedure `com.j256.ormlite.table.DatabaseTableConfig` `fromClass`(`com.j256.ormlite.support.ConnectionSource` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.fromClass:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L169444.  call temp:= `extractTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L16944a.  v0:= temp @kind object;
  #L16944c.  call temp:= `getDatabaseType`(v3) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L169452.  v1:= temp @kind object;
  #L169454.  call temp:= `isEntityNamesMustBeUpCase`(v1) @signature `Lcom/j256/ormlite/db/DatabaseType;.isEntityNamesMustBeUpCase:()Z` @kind interface;
  #L16945a.  v2:= temp;
  #L16945c.  if v2 == 0 then goto L169468;
  #L169460.  call temp:= `upCaseEntityName`(v1, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.upCaseEntityName:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L169466.  v0:= temp @kind object;
  #L169468.  v1:= new `com.j256.ormlite.table.DatabaseTableConfig`;
  #L16946c.  call temp:= `extractFieldTypes`(v3, v4, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;Ljava/lang/String;)[Lcom/j256/ormlite/field/FieldType;` @kind static;
  #L169472.  v2:= temp @kind object;
  #L169474.  call `<init>`(v1, v4, v0, v2) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L16947a.  return v1 @kind object;
}
procedure `void` `extractFieldTypes`(`com.j256.ormlite.table.DatabaseTableConfig` v2 @kind this, `com.j256.ormlite.support.ConnectionSource` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16948c.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L169490.  if v0 != 0 then goto L1694b0;
  #L169494.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` @kind object;
  #L169498.  if v0 != 0 then goto L1694b2;
  #L16949c.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L1694a0.  v1:= v2.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` @kind object;
  #L1694a4.  call temp:= `extractFieldTypes`(v3, v0, v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;Ljava/lang/String;)[Lcom/j256/ormlite/field/FieldType;` @kind static;
  #L1694aa.  v0:= temp @kind object;
  #L1694ac.  v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] := v0 @kind object;
  #L1694b0.  return @kind void;
  #L1694b2.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` @kind object;
  #L1694b6.  v1:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` @kind object;
  #L1694ba.  call temp:= `convertFieldConfigs`(v2, v3, v0, v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.convertFieldConfigs:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;Ljava/util/List;)[Lcom/j256/ormlite/field/FieldType;` @kind direct;
  #L1694c0.  v0:= temp @kind object;
  #L1694c2.  v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] := v0 @kind object;
  #L1694c6.  goto L1694b0;
}
procedure `java.lang.reflect.Constructor` `getConstructor`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getConstructor:()Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1694d8.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.constructor` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1694dc.  if v0 != 0 then goto L1694f0;
  #L1694e0.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L1694e4.  call temp:= `findNoArgConstructor`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.findNoArgConstructor:(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind static;
  #L1694ea.  v0:= temp @kind object;
  #L1694ec.  v1.`com.j256.ormlite.table.DatabaseTableConfig.constructor` @type ^`java.lang.reflect.Constructor` := v0 @kind object;
  #L1694f0.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.constructor` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1694f4.  return v0 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L169508.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L16950c.  return v0 @kind object;
}
procedure `java.util.List` `getFieldConfigs`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldConfigs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L169520.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` @kind object;
  #L169524.  return v0 @kind object;
}
procedure `com.j256.ormlite.field.FieldType`[] `getFieldTypes`(`com.j256.ormlite.table.DatabaseTableConfig` v2 @kind this, `com.j256.ormlite.db.DatabaseType` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldTypes:(Lcom/j256/ormlite/db/DatabaseType;)[Lcom/j256/ormlite/field/FieldType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L169538.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16953c.  if v0 != 0 then goto L169550;
  #L169540.  v0:= new `java.sql.SQLException`;
  #L169544.  v1:= "Field types have not been extracted in table config" @kind object;
  #L169548.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16954e.  throw v0;
  #L169550.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L169554.  return v0 @kind object;
}
procedure `java.lang.String` `getTableName`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L169568.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` @kind object;
  #L16956c.  return v0 @kind object;
}
procedure `void` `initialize`(`com.j256.ormlite.table.DatabaseTableConfig` v3 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.initialize:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L169580.  v0:= v3.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L169584.  if v0 != 0 then goto L1695ca;
  #L169588.  v0:= new `java.lang.IllegalStateException`;
  #L16958c.  v1:= new `java.lang.StringBuilder`;
  #L169590.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L169596.  v2:= "dataClass was never set on " @kind object;
  #L16959a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1695a0.  v1:= temp @kind object;
  #L1695a2.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1695a8.  v2:= temp @kind object;
  #L1695aa.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1695b0.  v2:= temp @kind object;
  #L1695b2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1695b8.  v1:= temp @kind object;
  #L1695ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1695c0.  v1:= temp @kind object;
  #L1695c2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1695c8.  throw v0;
  #L1695ca.  v0:= v3.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` @kind object;
  #L1695ce.  if v0 != 0 then goto L1695e2;
  #L1695d2.  v0:= v3.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L1695d6.  call temp:= `extractTableName`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L1695dc.  v0:= temp @kind object;
  #L1695de.  v3.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` := v0 @kind object;
  #L1695e2.  return @kind void;
}
procedure `void` `setConstructor`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.reflect.Constructor` v1 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setConstructor:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC {
    temp;

  #L1695f4.  v0.`com.j256.ormlite.table.DatabaseTableConfig.constructor` @type ^`java.lang.reflect.Constructor` := v1 @kind object;
  #L1695f8.  return @kind void;
}
procedure `void` `setDataClass`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setDataClass:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L16960c.  v0.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` := v1 @kind object;
  #L169610.  return @kind void;
}
procedure `void` `setFieldConfigs`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setFieldConfigs:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L169624.  v0.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` := v1 @kind object;
  #L169628.  return @kind void;
}
procedure `void` `setTableName`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setTableName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L16963c.  v0.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` := v1 @kind object;
  #L169640.  return @kind void;
}

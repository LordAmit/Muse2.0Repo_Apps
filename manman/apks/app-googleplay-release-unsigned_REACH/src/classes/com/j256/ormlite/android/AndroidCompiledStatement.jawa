record `com.j256.ormlite.android.AndroidCompiledStatement` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.CompiledStatement` @kind interface {
  `java.util.List` `com.j256.ormlite.android.AndroidCompiledStatement.args` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` `com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @AccessFlag PRIVATE;
  `android.database.Cursor` `com.j256.ormlite.android.AndroidCompiledStatement.cursor` @AccessFlag PRIVATE;
  `android.database.sqlite.SQLiteDatabase` `com.j256.ormlite.android.AndroidCompiledStatement.db` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `com.j256.ormlite.android.AndroidCompiledStatement.max` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.android.AndroidCompiledStatement.sql` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.StatementBuilder$StatementType` `com.j256.ormlite.android.AndroidCompiledStatement.type` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.android.compat.ApiCompatibility` `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L14974c.  v0:= constclass @type ^`com.j256.ormlite.android.AndroidCompiledStatement` @kind object;
  #L149750.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L149756.  v0:= temp @kind object;
  #L149758.  `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L14975c.  v0:= 0I;
  #L14975e.  v0:= new `java.lang.String`[v0];
  #L149762.  `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] := v0 @kind object;
  #L149766.  call temp:= `getCompatibility`() @signature `Lcom/j256/ormlite/android/compat/ApiCompatibilityUtils;.getCompatibility:()Lcom/j256/ormlite/android/compat/ApiCompatibility;` @kind static;
  #L14976c.  v0:= temp @kind object;
  #L14976e.  `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` := v0 @kind object;
  #L149772.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidCompiledStatement` v0 @kind this, `java.lang.String` v1 @kind object, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.<init>:(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L149784.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14978a.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` := v1 @kind object;
  #L14978e.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` := v2 @kind object;
  #L149792.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` := v3 @kind object;
  #L149796.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @type ^`boolean` := v4 @kind boolean;
  #L14979a.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @type ^`boolean` := v5 @kind boolean;
  #L14979e.  return @kind void;
}
procedure `int` `execSql`(`android.database.sqlite.SQLiteDatabase` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L1497b0.  call `execSQL`(v5, v7, v8) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L1497b6.  v0:= 0I;
  #Try_start1.  
  #L1497b8.  v1:= "SELECT CHANGES()" @kind object;
  #L1497bc.  call temp:= `compileStatement`(v5, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #Try_end1.  
  #L1497c2.  v1:= temp @kind object;
  #Try_start2.  
  #L1497c4.  call temp:= `simpleQueryForLong`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.simpleQueryForLong:()J` @kind virtual;
  #Try_end2.  
  #L1497ca.  v2:= temp @kind wide;
  #L1497cc.  v0:= (`int`) v2 @kind l2i;
  #L1497ce.  if v1 == 0 then goto L1497d8;
  #L1497d2.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L1497d8.  v1:= `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L1497dc.  v2:= "executing statement {} changed {} rows: {}" @kind object;
  #L1497e0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1497e6.  v3:= temp @kind object;
  #L1497e8.  call `trace`(v1, v2, v6, v3, v7) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L1497ee.  return v0;
  #L1497f0.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L1497f2.  v1:= new `java.lang.StringBuilder`;
  #L1497f6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1497fc.  v2:= "Problems executing " @kind object;
  #L149800.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149806.  v1:= temp @kind object;
  #L149808.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14980e.  v1:= temp @kind object;
  #L149810.  v2:= " Android statement: " @kind object;
  #L149814.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14981a.  v1:= temp @kind object;
  #L14981c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149822.  v1:= temp @kind object;
  #L149824.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14982a.  v1:= temp @kind object;
  #L14982c.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L149832.  v0:= temp @kind object;
  #L149834.  throw v0;
  #L149836.  v1:= Exception @type ^`android.database.SQLException` @kind object;
  #L149838.  v1:= v0 @kind object;
  #L14983a.  v0:= 1I;
  #L14983c.  if v1 == 0 then goto L1497d8;
  #L149840.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L149846.  goto L1497d8;
  #L149848.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14984a.  v4:= v1 @kind object;
  #L14984c.  v1:= v0 @kind object;
  #L14984e.  v0:= v4 @kind object;
  #L149850.  if v1 == 0 then goto L14985a;
  #L149854.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L14985a.  throw v0;
  #L14985c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14985e.  goto L149850;
  #L149860.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L149862.  goto L14983a;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L1497f0;
  catch `android.database.SQLException` @[Try_start1..Try_end1] goto L149836;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L149848;
  catch `android.database.SQLException` @[Try_start2..Try_end2] goto L149860;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L14985c;
}
procedure `java.lang.Object`[] `getArgArray`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L14989c.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L1498a0.  if v0 != 0 then goto L1498aa;
  #L1498a4.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] @kind object;
  #L1498a8.  return v0 @kind object;
  #L1498aa.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L1498ae.  v1:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L1498b2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1498b8.  v1:= temp;
  #L1498ba.  v1:= new `java.lang.Object`[v1];
  #L1498be.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1498c4.  v0:= temp @kind object;
  #L1498c6.  goto L1498a8;
}
procedure `java.lang.String`[] `getStringArray`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getStringArray:()[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1498d8.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L1498dc.  if v0 != 0 then goto L1498e6;
  #L1498e0.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] @kind object;
  #L1498e4.  return v0 @kind object;
  #L1498e6.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L1498ea.  v1:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L1498ee.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1498f4.  v1:= temp;
  #L1498f6.  v1:= new `java.lang.String`[v1];
  #L1498fa.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L149900.  v0:= temp @kind object;
  #L149902.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L149906.  goto L1498e4;
}
procedure `void` `isInPrep`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L149918.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14991c.  if v0 == 0 then goto L149930;
  #L149920.  v0:= new `java.sql.SQLException`;
  #L149924.  v1:= "Query already run. Cannot add argument values." @kind object;
  #L149928.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14992e.  throw v0;
  #L149930.  return @kind void;
}
procedure `void` `cancel`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149944.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L149948.  if v0 == 0 then goto L149956;
  #L14994c.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L149950.  call `cancel`(v0) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;.cancel:()V` @kind interface;
  #L149956.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L149968.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14996c.  if v0 == 0 then goto L14998a;
  #L149970.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L149974.  call temp:= `isClosed`(v0) @signature `Landroid/database/Cursor;.isClosed:()Z` @kind interface;
  #L14997a.  v0:= temp;
  #L14997c.  if v0 != 0 then goto L14998a;
  #Try_start0.  
  #L149980.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L149984.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #Try_end0.  
  #L14998a.  v0:= 0I;
  #L14998c.  v3.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` := v0 @kind object;
  #L149990.  return @kind void;
  #L149992.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L149994.  v1:= new `java.io.IOException`;
  #L149998.  v2:= "Problems closing Android cursor" @kind object;
  #L14999c.  call `<init>`(v1, v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1499a2.  throw v1;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L149992;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1499c4.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L1499c8.  if v0 == 0 then goto L1499d6;
  #L1499cc.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L1499d0.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L1499d6.  return @kind void;
}
procedure `int` `getColumnCount`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getColumnCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1499e8.  call temp:= `getCursor`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L1499ee.  v0:= temp @kind object;
  #L1499f0.  call temp:= `getColumnCount`(v0) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L1499f6.  v0:= temp;
  #L1499f8.  return v0;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getColumnName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149a0c.  call temp:= `getCursor`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L149a12.  v0:= temp @kind object;
  #L149a14.  call temp:= `getColumnName`(v0, v2) @signature `Landroid/database/Cursor;.getColumnName:(I)Ljava/lang/String;` @kind interface;
  #L149a1a.  v0:= temp @kind object;
  #L149a1c.  return v0 @kind object;
}
procedure `android.database.Cursor` `getCursor`(`com.j256.ormlite.android.AndroidCompiledStatement` v5 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L149a30.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L149a34.  if v0 != 0 then goto L149a96;
  #L149a38.  v1:= 0I;
  #Try_start0.  
  #L149a3a.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L149a3e.  if v0 != 0 then goto L149a9c;
  #L149a42.  v1:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L149a46.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L149a4a.  if v0 == 0 then goto L149a5e;
  #L149a4e.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` @kind object;
  #L149a52.  call temp:= `createCancellationHook`(v0) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility;.createCancellationHook:()Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;` @kind interface;
  #L149a58.  v0:= temp @kind object;
  #L149a5a.  v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` := v0 @kind object;
  #L149a5e.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` @kind object;
  #L149a62.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L149a66.  call temp:= `getStringArray`(v5) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getStringArray:()[Ljava/lang/String;` @kind direct;
  #L149a6c.  v3:= temp @kind object;
  #L149a6e.  v4:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L149a72.  call temp:= `rawQuery`(v0, v2, v1, v3, v4) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility;.rawQuery:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;)Landroid/database/Cursor;` @kind interface;
  #L149a78.  v0:= temp @kind object;
  #L149a7a.  v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` := v0 @kind object;
  #L149a7e.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L149a82.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L149a88.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L149a8c.  v2:= "{}: started rawQuery cursor for: {}" @kind object;
  #L149a90.  call `trace`(v0, v2, v5, v1) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L149a96.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L149a9a.  return v0 @kind object;
  #Try_start1.  
  #L149a9c.  v0:= new `java.lang.StringBuilder`;
  #L149aa0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149aa6.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L149aaa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149ab0.  v0:= temp @kind object;
  #L149ab2.  v2:= " LIMIT " @kind object;
  #L149ab6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149abc.  v0:= temp @kind object;
  #L149abe.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L149ac2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149ac8.  v0:= temp @kind object;
  #L149aca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #Try_end1.  
  #L149ad0.  v1:= temp @kind object;
  #L149ad2.  goto L149a46;
  #L149ad4.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L149ad6.  v2:= new `java.lang.StringBuilder`;
  #L149ada.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149ae0.  v3:= "Problems executing Android query: " @kind object;
  #L149ae4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149aea.  v2:= temp @kind object;
  #L149aec.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149af2.  v1:= temp @kind object;
  #L149af4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149afa.  v1:= temp @kind object;
  #L149afc.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L149b02.  v0:= temp @kind object;
  #L149b04.  throw v0;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L149ad4;
  catch `android.database.SQLException` @[Try_start1..Try_end1] goto L149ad4;
}
procedure `int` `runExecute`(`com.j256.ormlite.android.AndroidCompiledStatement` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runExecute:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L149b30.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L149b34.  call temp:= `isOkForExecute`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForExecute:()Z` @kind virtual;
  #L149b3a.  v0:= temp;
  #L149b3c.  if v0 != 0 then goto L149b82;
  #L149b40.  v0:= new `java.lang.IllegalArgumentException`;
  #L149b44.  v1:= new `java.lang.StringBuilder`;
  #L149b48.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149b4e.  v2:= "Cannot call execute on a " @kind object;
  #L149b52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149b58.  v1:= temp @kind object;
  #L149b5a.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L149b5e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149b64.  v1:= temp @kind object;
  #L149b66.  v2:= " statement" @kind object;
  #L149b6a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149b70.  v1:= temp @kind object;
  #L149b72.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149b78.  v1:= temp @kind object;
  #L149b7a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149b80.  throw v0;
  #L149b82.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L149b86.  v1:= "runExecute" @kind object;
  #L149b8a.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L149b8e.  call temp:= `getArgArray`(v4) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @kind direct;
  #L149b94.  v3:= temp @kind object;
  #L149b96.  call temp:= `execSql`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @kind static;
  #L149b9c.  v0:= temp;
  #L149b9e.  return v0;
}
procedure `com.j256.ormlite.support.DatabaseResults` `runQuery`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runQuery:(Lcom/j256/ormlite/dao/ObjectCache;)Lcom/j256/ormlite/support/DatabaseResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L149bb0.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L149bb4.  call temp:= `isOkForQuery`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForQuery:()Z` @kind virtual;
  #L149bba.  v0:= temp;
  #L149bbc.  if v0 != 0 then goto L149c02;
  #L149bc0.  v0:= new `java.lang.IllegalArgumentException`;
  #L149bc4.  v1:= new `java.lang.StringBuilder`;
  #L149bc8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149bce.  v2:= "Cannot call query on a " @kind object;
  #L149bd2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149bd8.  v1:= temp @kind object;
  #L149bda.  v2:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L149bde.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149be4.  v1:= temp @kind object;
  #L149be6.  v2:= " statement" @kind object;
  #L149bea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149bf0.  v1:= temp @kind object;
  #L149bf2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149bf8.  v1:= temp @kind object;
  #L149bfa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149c00.  throw v0;
  #L149c02.  v0:= new `com.j256.ormlite.android.AndroidDatabaseResults`;
  #L149c06.  call temp:= `getCursor`(v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L149c0c.  v1:= temp @kind object;
  #L149c0e.  v2:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @type ^`boolean` @kind boolean;
  #L149c12.  call `<init>`(v0, v1, v4, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.<init>:(Landroid/database/Cursor;Lcom/j256/ormlite/dao/ObjectCache;Z)V` @kind direct;
  #L149c18.  return v0 @kind object;
}
procedure `int` `runUpdate`(`com.j256.ormlite.android.AndroidCompiledStatement` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runUpdate:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L149c2c.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L149c30.  call temp:= `isOkForUpdate`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForUpdate:()Z` @kind virtual;
  #L149c36.  v0:= temp;
  #L149c38.  if v0 != 0 then goto L149c7e;
  #L149c3c.  v0:= new `java.lang.IllegalArgumentException`;
  #L149c40.  v1:= new `java.lang.StringBuilder`;
  #L149c44.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149c4a.  v2:= "Cannot call update on a " @kind object;
  #L149c4e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c54.  v1:= temp @kind object;
  #L149c56.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L149c5a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c60.  v1:= temp @kind object;
  #L149c62.  v2:= " statement" @kind object;
  #L149c66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149c6c.  v1:= temp @kind object;
  #L149c6e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149c74.  v1:= temp @kind object;
  #L149c76.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149c7c.  throw v0;
  #L149c7e.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L149c82.  if v0 != 0 then goto L149ca4;
  #L149c86.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L149c8a.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L149c8e.  v2:= "runUpdate" @kind object;
  #L149c92.  call temp:= `getArgArray`(v4) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @kind direct;
  #L149c98.  v3:= temp @kind object;
  #L149c9a.  call temp:= `execSql`(v1, v2, v0, v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @kind static;
  #L149ca0.  v0:= temp;
  #L149ca2.  return v0;
  #L149ca4.  v0:= new `java.lang.StringBuilder`;
  #L149ca8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149cae.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L149cb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149cb8.  v0:= temp @kind object;
  #L149cba.  v1:= " " @kind object;
  #L149cbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149cc4.  v0:= temp @kind object;
  #L149cc6.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L149cca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149cd0.  v0:= temp @kind object;
  #L149cd2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149cd8.  v0:= temp @kind object;
  #L149cda.  goto L149c8a;
}
procedure `void` `setMaxRows`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setMaxRows:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149cec.  call `isInPrep`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @kind direct;
  #L149cf2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L149cf8.  v0:= temp @kind object;
  #L149cfa.  v1.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` := v0 @kind object;
  #L149cfe.  return @kind void;
}
procedure `void` `setObject`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object, `com.j256.ormlite.field.SqlType` v6 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setObject:(ILjava/lang/Object;Lcom/j256/ormlite/field/SqlType;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L149d10.  call `isInPrep`(v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @kind direct;
  #L149d16.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L149d1a.  if v0 != 0 then goto L149d2c;
  #L149d1e.  v0:= new `java.util.ArrayList`;
  #L149d22.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L149d28.  v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` := v0 @kind object;
  #L149d2c.  if v5 != 0 then goto L149d3e;
  #L149d30.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L149d34.  v1:= 0I;
  #L149d36.  call `add`(v0, v4, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L149d3c.  return @kind void;
  #L149d3e.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement$1.$SwitchMap$com$j256$ormlite$field$SqlType` @type ^`int`[] @kind object;
  #L149d42.  call temp:= `ordinal`(v6) @signature `Lcom/j256/ormlite/field/SqlType;.ordinal:()I` @kind virtual;
  #L149d48.  v1:= temp;
  #L149d4a.  v0:= v0[v1];
  #L149d4e.  goto L149dd8;
  #L149d54.  v0:= new `java.sql.SQLException`;
  #L149d58.  v1:= new `java.lang.StringBuilder`;
  #L149d5c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149d62.  v2:= "Unknown sql argument type: " @kind object;
  #L149d66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149d6c.  v1:= temp @kind object;
  #L149d6e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149d74.  v1:= temp @kind object;
  #L149d76.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149d7c.  v1:= temp @kind object;
  #L149d7e.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149d84.  throw v0;
  #L149d86.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L149d8a.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L149d90.  v1:= temp @kind object;
  #L149d92.  call `add`(v0, v4, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L149d98.  goto L149d3c;
  #L149d9a.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L149d9e.  call `add`(v0, v4, v5) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L149da4.  goto L149d3c;
  #L149da6.  v0:= new `java.sql.SQLException`;
  #L149daa.  v1:= new `java.lang.StringBuilder`;
  #L149dae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149db4.  v2:= "Invalid Android type: " @kind object;
  #L149db8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149dbe.  v1:= temp @kind object;
  #L149dc0.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149dc6.  v1:= temp @kind object;
  #L149dc8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149dce.  v1:= temp @kind object;
  #L149dd0.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149dd6.  throw v0;
  #L149dd8.  switch v0
                  | 1 => goto L149d86
                  | 2 => goto L149d86
                  | 3 => goto L149d86
                  | 4 => goto L149d86
                  | 5 => goto L149d86
                  | 6 => goto L149d86
                  | 7 => goto L149d86
                  | 8 => goto L149d86
                  | 9 => goto L149d86
                  | 10 => goto L149d86
                  | 11 => goto L149d86
                  | 12 => goto L149d9a
                  | 13 => goto L149d9a
                  | 14 => goto L149da6
                  | 15 => goto L149da6
                  | else => goto L149d54;
}
procedure `void` `setQueryTimeout`(`com.j256.ormlite.android.AndroidCompiledStatement` v0 @kind this, `long` v1 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setQueryTimeout:(J)V` @AccessFlag PUBLIC {
    temp;

  #L149e2c.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L149e40.  v0:= new `java.lang.StringBuilder`;
  #L149e44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149e4a.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L149e50.  v1:= temp @kind object;
  #L149e52.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L149e58.  v1:= temp @kind object;
  #L149e5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149e60.  v0:= temp @kind object;
  #L149e62.  v1:= "@" @kind object;
  #L149e66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149e6c.  v0:= temp @kind object;
  #L149e6e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L149e74.  v1:= temp;
  #L149e76.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L149e7c.  v1:= temp @kind object;
  #L149e7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149e84.  v0:= temp @kind object;
  #L149e86.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149e8c.  v0:= temp @kind object;
  #L149e8e.  return v0 @kind object;
}

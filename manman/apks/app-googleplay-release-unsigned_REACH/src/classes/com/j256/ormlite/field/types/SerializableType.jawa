record `com.j256.ormlite.field.types.SerializableType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
global `com.j256.ormlite.field.types.SerializableType` `@@com.j256.ormlite.field.types.SerializableType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/SerializableType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15d7d4.  v0:= new `com.j256.ormlite.field.types.SerializableType`;
  #L15d7d8.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:()V` @kind direct;
  #L15d7de.  `@@com.j256.ormlite.field.types.SerializableType.singleTon` @type ^`com.j256.ormlite.field.types.SerializableType` := v0 @kind object;
  #L15d7e2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L15d7f4.  v0:= `@@com.j256.ormlite.field.SqlType.SERIALIZABLE` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L15d7f8.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L15d7fe.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.SerializableType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L15d810.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L15d816.  return @kind void;
}
procedure `com.j256.ormlite.field.types.SerializableType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/SerializableType;.getSingleton:()Lcom/j256/ormlite/field/types/SerializableType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15d828.  v0:= `@@com.j256.ormlite.field.types.SerializableType.singleTon` @type ^`com.j256.ormlite.field.types.SerializableType` @kind object;
  #L15d82c.  return v0 @kind object;
}
procedure `java.lang.Class` `getPrimaryClass`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.getPrimaryClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d840.  v0:= constclass @type ^`java.io.Serializable` @kind object;
  #L15d844.  return v0 @kind object;
}
procedure `boolean` `isAppropriateId`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isAppropriateId:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d858.  v0:= 0I;
  #L15d85a.  return v0;
}
procedure `boolean` `isArgumentHolderRequired`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isArgumentHolderRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d86c.  v0:= 1I;
  #L15d86e.  return v0;
}
procedure `boolean` `isComparable`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isComparable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d880.  v0:= 0I;
  #L15d882.  return v0;
}
procedure `boolean` `isStreamType`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isStreamType:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d894.  v0:= 1I;
  #L15d896.  return v0;
}
procedure `boolean` `isValidForField`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `java.lang.reflect.Field` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isValidForField:(Ljava/lang/reflect/Field;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15d8a8.  v0:= constclass @type ^`java.io.Serializable` @kind object;
  #L15d8ac.  call temp:= `getType`(v3) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L15d8b2.  v1:= temp @kind object;
  #L15d8b4.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L15d8ba.  v0:= temp;
  #L15d8bc.  return v0;
}
procedure `java.lang.Object` `javaToSqlArg`(`com.j256.ormlite.field.types.SerializableType` v4 @kind this, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.javaToSqlArg:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15d8d0.  v1:= 0I;
  #Try_start0.  
  #L15d8d2.  v0:= new `java.io.ByteArrayOutputStream`;
  #L15d8d6.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L15d8dc.  v2:= new `java.io.ObjectOutputStream`;
  #L15d8e0.  call `<init>`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L15d8e6.  call `writeObject`(v2, v6) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L15d8ec.  call `close`(v2) @signature `Ljava/io/ObjectOutputStream;.close:()V` @kind virtual;
  #Try_end1.  
  #Try_start2.  
  #L15d8f2.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #Try_end2.  
  #L15d8f8.  v0:= temp @kind object;
  #L15d8fa.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15d900.  return v0 @kind object;
  #L15d902.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #Try_start3.  
  #L15d904.  v2:= new `java.lang.StringBuilder`;
  #L15d908.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d90e.  v3:= "Could not write serialized object to byte array: " @kind object;
  #L15d912.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d918.  v2:= temp @kind object;
  #L15d91a.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d920.  v2:= temp @kind object;
  #L15d922.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d928.  v2:= temp @kind object;
  #L15d92a.  call temp:= `create`(v2, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15d930.  v0:= temp @kind object;
  #L15d932.  throw v0;
  #Try_end3.  
  #L15d934.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15d936.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15d93c.  throw v0;
  #L15d93e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15d940.  v1:= v2 @kind object;
  #L15d942.  goto L15d936;
  #L15d944.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15d946.  v1:= v2 @kind object;
  #L15d948.  goto L15d904;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15d902;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L15d934;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L15d944;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L15d93e;
  catch `java.lang.Exception` @[Try_start2..Try_end2] goto L15d902;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L15d934;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L15d934;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15d98c.  v0:= new `java.sql.SQLException`;
  #L15d990.  v1:= "Default values for serializable types are not supported" @kind object;
  #L15d994.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d99a.  throw v0;
}
procedure `java.lang.Object` `resultStringToJava`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.resultStringToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15d9ac.  v0:= new `java.sql.SQLException`;
  #L15d9b0.  v1:= "Serializable type cannot be converted from string to Java" @kind object;
  #L15d9b4.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d9ba.  throw v0;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d9cc.  call temp:= `getBytes`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getBytes:(I)[B` @kind interface;
  #L15d9d2.  v0:= temp @kind object;
  #L15d9d4.  return v0 @kind object;
}
procedure `java.lang.Object` `sqlArgToJava`(`com.j256.ormlite.field.types.SerializableType` v4 @kind this, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.Object` v6 @kind object, `int` v7 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.sqlArgToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15d9e8.  v6:= (`byte`[]) v6 @kind object;
  #L15d9ec.  v6:= (`byte`[]) v6 @kind object;
  #L15d9f0.  v2:= 0I;
  #Try_start0.  
  #L15d9f2.  v1:= new `java.io.ObjectInputStream`;
  #L15d9f6.  v0:= new `java.io.ByteArrayInputStream`;
  #L15d9fa.  call `<init>`(v0, v6) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L15da00.  call `<init>`(v1, v0) @signature `Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L15da06.  call temp:= `readObject`(v1) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #Try_end1.  
  #L15da0c.  v0:= temp @kind object;
  #L15da0e.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15da14.  return v0 @kind object;
  #L15da16.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15da18.  v1:= v2 @kind object;
  #Try_start2.  
  #L15da1a.  v2:= new `java.lang.StringBuilder`;
  #L15da1e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15da24.  v3:= "Could not read serialized object from byte array: " @kind object;
  #L15da28.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da2e.  v2:= temp @kind object;
  #L15da30.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([B)Ljava/lang/String;` @kind static;
  #L15da36.  v3:= temp @kind object;
  #L15da38.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da3e.  v2:= temp @kind object;
  #L15da40.  v3:= "(len " @kind object;
  #L15da44.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da4a.  v2:= temp @kind object;
  #L15da4c.  v3:= length @variable v6;
  #L15da4e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da54.  v2:= temp @kind object;
  #L15da56.  v3:= ")" @kind object;
  #L15da5a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da60.  v2:= temp @kind object;
  #L15da62.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15da68.  v2:= temp @kind object;
  #L15da6a.  call temp:= `create`(v2, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15da70.  v0:= temp @kind object;
  #L15da72.  throw v0;
  #Try_end2.  
  #L15da74.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15da76.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15da7c.  throw v0;
  #L15da7e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15da80.  v1:= v2 @kind object;
  #L15da82.  goto L15da76;
  #L15da84.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15da86.  goto L15da1a;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15da16;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L15da7e;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L15da84;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L15da74;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L15da74;
}

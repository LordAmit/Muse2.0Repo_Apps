record `com.adonai.manman.ManChaptersFragment$CountingInputStream` @kind class @AccessFlag  extends `java.io.FilterInputStream` @kind class {
  `java.lang.String` `com.adonai.manman.ManChaptersFragment$CountingInputStream.dataLeAk271` @AccessFlag ;
  `int` `com.adonai.manman.ManChaptersFragment$CountingInputStream.length` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.adonai.manman.ManChaptersFragment$CountingInputStream.shouldCount` @AccessFlag PRIVATE;
  `boolean` `com.adonai.manman.ManChaptersFragment$CountingInputStream.shouldWarn` @AccessFlag PRIVATE;
  `com.adonai.manman.ManChaptersFragment` `com.adonai.manman.ManChaptersFragment$CountingInputStream.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `com.adonai.manman.ManChaptersFragment$CountingInputStream.throwawayLeAk271` @AccessFlag ;
  `int` `com.adonai.manman.ManChaptersFragment$CountingInputStream.transferred` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.adonai.manman.ManChaptersFragment$CountingInputStream` v3 @kind this, `com.adonai.manman.ManChaptersFragment` v4 @kind object, `java.io.InputStream` v5 @kind object, `int` v6 ) @signature `Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;.<init>:(Lcom/adonai/manman/ManChaptersFragment;Ljava/io/InputStream;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L126170.  v2:= 1I;
  #L126172.  v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.this$0` @type ^`com.adonai.manman.ManChaptersFragment` := v4 @kind object;
  #L126176.  call `<init>`(v3, v5) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L12617c.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L126182.  v0:= temp @kind object;
  #L126184.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L12618a.  v0:= temp @kind object;
  #L12618c.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L126192.  v0:= temp @kind object;
  #L126194.  v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.dataLeAk271` @type ^`java.lang.String` := v0 @kind object;
  #L126198.  v0:= "leak-271" @kind object;
  #L12619c.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.dataLeAk271` @type ^`java.lang.String` @kind object;
  #L1261a0.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1261a6.  v0:= temp;
  #L1261a8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1261ae.  v0:= temp @kind object;
  #L1261b0.  v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.throwawayLeAk271` @type ^`java.lang.Object` := v0 @kind object;
  #L1261b4.  v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.shouldCount` @type ^`boolean` := v2 @kind boolean;
  #L1261b8.  v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.shouldWarn` @type ^`boolean` := v2 @kind boolean;
  #L1261bc.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L1261c2.  v0:= temp @kind object;
  #L1261c4.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L1261ca.  v0:= temp @kind object;
  #L1261cc.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L1261d2.  v0:= temp @kind object;
  #L1261d4.  v1:= "leak-272" @kind object;
  #L1261d8.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1261de.  v0:= temp;
  #L1261e0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1261e6.  v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.length` @type ^`int` := v6;
  #L1261ea.  return @kind void;
}
procedure `int` `access$1600`(`com.adonai.manman.ManChaptersFragment$CountingInputStream` v1 @kind object) @signature `Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;.access$1600:(Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1261fc.  v0:= v1.`com.adonai.manman.ManChaptersFragment$CountingInputStream.length` @type ^`int`;
  #L126200.  return v0;
}
procedure `void` `access$1700`(`com.adonai.manman.ManChaptersFragment$CountingInputStream` v0 @kind object) @signature `Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;.access$1700:(Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L126214.  call `stopCounting`(v0) @signature `Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;.stopCounting:()V` @kind direct;
  #L12621a.  return @kind void;
}
procedure `int` `access$1800`(`com.adonai.manman.ManChaptersFragment$CountingInputStream` v1 @kind object) @signature `Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;.access$1800:(Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L12622c.  v0:= v1.`com.adonai.manman.ManChaptersFragment$CountingInputStream.transferred` @type ^`int`;
  #L126230.  return v0;
}
procedure `void` `stopCounting`(`com.adonai.manman.ManChaptersFragment$CountingInputStream` v2 @kind this) @signature `Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;.stopCounting:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L126244.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L12624a.  v0:= temp @kind object;
  #L12624c.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L126252.  v0:= temp @kind object;
  #L126254.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L12625a.  v0:= temp @kind object;
  #L12625c.  v1:= "leak-282" @kind object;
  #L126260.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L126266.  v0:= temp;
  #L126268.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L12626e.  v0:= v2.`com.adonai.manman.ManChaptersFragment$CountingInputStream.this$0` @type ^`com.adonai.manman.ManChaptersFragment` @kind object;
  #L126272.  call temp:= `access$300`(v0) @signature `Lcom/adonai/manman/ManChaptersFragment;.access$300:(Lcom/adonai/manman/ManChaptersFragment;)Lcom/adonai/manman/views/ProgressBarWrapper;` @kind static;
  #L126278.  v0:= temp @kind object;
  #L12627a.  v1:= 1I;
  #L12627c.  call `setIndeterminate`(v0, v1) @signature `Lcom/adonai/manman/views/ProgressBarWrapper;.setIndeterminate:(Z)V` @kind virtual;
  #L126282.  v0:= 0I;
  #L126284.  v2.`com.adonai.manman.ManChaptersFragment$CountingInputStream.shouldCount` @type ^`boolean` := v0 @kind boolean;
  #L126288.  return @kind void;
}
procedure `int` `read`(`com.adonai.manman.ManChaptersFragment$CountingInputStream` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12629c.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L1262a2.  v0:= temp @kind object;
  #L1262a4.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L1262aa.  v0:= temp @kind object;
  #L1262ac.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L1262b2.  v0:= temp @kind object;
  #L1262b4.  v1:= "leak-273" @kind object;
  #L1262b8.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1262be.  v0:= temp;
  #L1262c0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1262c6.  call temp:= `read`(v3, v4, v5, v6) @signature `Ljava/io/FilterInputStream;.read:([BII)I` @kind super;
  #L1262cc.  v0:= temp;
  #L1262ce.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.shouldWarn` @type ^`boolean` @kind boolean;
  #L1262d2.  if v1 == 0 then goto L12635c;
  #L1262d6.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L1262dc.  v1:= temp @kind object;
  #L1262de.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L1262e4.  v1:= temp @kind object;
  #L1262e6.  call temp:= `getDisplayName`(v1) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L1262ec.  v1:= temp @kind object;
  #L1262ee.  v2:= "leak-274" @kind object;
  #L1262f2.  call temp:= `d`(v2, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1262f8.  v1:= temp;
  #L1262fa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L126300.  v1:= 0I;
  #L126302.  v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.shouldWarn` @type ^`boolean` := v1 @kind boolean;
  #L126306.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.length` @type ^`int`;
  #L12630a.  if v1 <= 0 then goto L12631a;
  #L12630e.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.length` @type ^`int`;
  #L126312.  v2:= 25600I;
  #L126316.  if v1 <= v2 then goto L12635c;
  #L12631a.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L126320.  v1:= temp @kind object;
  #L126322.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L126328.  v1:= temp @kind object;
  #L12632a.  call temp:= `getDisplayName`(v1) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L126330.  v1:= temp @kind object;
  #L126332.  v2:= "leak-275" @kind object;
  #L126336.  call temp:= `d`(v2, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12633c.  v1:= temp;
  #L12633e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L126344.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.this$0` @type ^`com.adonai.manman.ManChaptersFragment` @kind object;
  #L126348.  call temp:= `getActivity`(v1) @signature `Lcom/adonai/manman/ManChaptersFragment;.getActivity:()Landroid/support/v4/b/r;` @kind virtual;
  #L12634e.  v1:= temp @kind object;
  #L126350.  v2:= 2131558496I;
  #L126356.  call `showToastFromAnyThread`(v1, v2) @signature `Lcom/adonai/manman/Utils;.showToastFromAnyThread:(Landroid/app/Activity;I)V` @kind static;
  #L12635c.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.shouldCount` @type ^`boolean` @kind boolean;
  #L126360.  if v1 == 0 then goto L1263ee;
  #L126364.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L12636a.  v1:= temp @kind object;
  #L12636c.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L126372.  v1:= temp @kind object;
  #L126374.  call temp:= `getDisplayName`(v1) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L12637a.  v1:= temp @kind object;
  #L12637c.  v2:= "leak-276" @kind object;
  #L126380.  call temp:= `d`(v2, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L126386.  v1:= temp;
  #L126388.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L12638e.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.transferred` @type ^`int`;
  #L126392.  v1:= v1 + v0 @kind int;
  #L126394.  v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.transferred` @type ^`int` := v1;
  #L126398.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.this$0` @type ^`com.adonai.manman.ManChaptersFragment` @kind object;
  #L12639c.  call temp:= `getActivity`(v1) @signature `Lcom/adonai/manman/ManChaptersFragment;.getActivity:()Landroid/support/v4/b/r;` @kind virtual;
  #L1263a2.  v1:= temp @kind object;
  #L1263a4.  if v1 == 0 then goto L1263ee;
  #L1263a8.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L1263ae.  v1:= temp @kind object;
  #L1263b0.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L1263b6.  v1:= temp @kind object;
  #L1263b8.  call temp:= `getDisplayName`(v1) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L1263be.  v1:= temp @kind object;
  #L1263c0.  v2:= "leak-277" @kind object;
  #L1263c4.  call temp:= `d`(v2, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1263ca.  v1:= temp;
  #L1263cc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1263d2.  v1:= v3.`com.adonai.manman.ManChaptersFragment$CountingInputStream.this$0` @type ^`com.adonai.manman.ManChaptersFragment` @kind object;
  #L1263d6.  call temp:= `getActivity`(v1) @signature `Lcom/adonai/manman/ManChaptersFragment;.getActivity:()Landroid/support/v4/b/r;` @kind virtual;
  #L1263dc.  v1:= temp @kind object;
  #L1263de.  v2:= new `com.adonai.manman.ManChaptersFragment$CountingInputStream$1`;
  #L1263e2.  call `<init>`(v2, v3) @signature `Lcom/adonai/manman/ManChaptersFragment$CountingInputStream$1;.<init>:(Lcom/adonai/manman/ManChaptersFragment$CountingInputStream;)V` @kind direct;
  #L1263e8.  call `runOnUiThread`(v1, v2) @signature `Landroid/support/v4/b/r;.runOnUiThread:(Ljava/lang/Runnable;)V` @kind virtual;
  #L1263ee.  return v0;
}

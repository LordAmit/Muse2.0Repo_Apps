record `com.b.a.b.k$1` @kind class @AccessFlag FINAL extends `com.b.a.b.k` @kind class {
  `java.lang.reflect.Method` `com.b.a.b.k$1.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `com.b.a.b.k$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.k$1` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/k$1;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L146d30.  v0.`com.b.a.b.k$1.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L146d34.  v0.`com.b.a.b.k$1.b` @type ^`java.lang.Object` := v2 @kind object;
  #L146d38.  call `<init>`(v0) @signature `Lcom/b/a/b/k;.<init>:()V` @kind direct;
  #L146d3e.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.b.a.b.k$1` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/b/a/b/k$1;.a:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L146d50.  call `b`(v5) @signature `Lcom/b/a/b/k;.b:(Ljava/lang/Class;)V` @kind static;
  #L146d56.  v0:= v4.`com.b.a.b.k$1.a` @type ^`java.lang.reflect.Method` @kind object;
  #L146d5a.  v1:= v4.`com.b.a.b.k$1.b` @type ^`java.lang.Object` @kind object;
  #L146d5e.  v2:= 1I;
  #L146d60.  v2:= new `java.lang.Object`[v2];
  #L146d64.  v3:= 0I;
  #L146d66.  v2[v3]:= v5 @kind object;
  #L146d6a.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L146d70.  v0:= temp @kind object;
  #L146d72.  return v0 @kind object;
}

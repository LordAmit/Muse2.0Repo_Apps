record `com.b.a.f$3` @kind class @AccessFlag  extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.f$3.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.f$3` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/f$3;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1477c0.  v0.`com.b.a.f$3.a` @type ^`com.b.a.f` := v1 @kind object;
  #L1477c4.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L1477ca.  return @kind void;
}
procedure `java.lang.Float` `a`(`com.b.a.f$3` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/a;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1477dc.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1477e2.  v0:= temp @kind object;
  #L1477e4.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L1477e8.  if v0 != v1 then goto L1477f6;
  #L1477ec.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L1477f2.  v0:= 0I;
  #L1477f4.  return v0 @kind object;
  #L1477f6.  call temp:= `k`(v3) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L1477fc.  v0:= temp @kind wide;
  #L1477fe.  v0:= (`float`) v0 @kind d2f;
  #L147800.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L147806.  v0:= temp @kind object;
  #L147808.  goto L1477f4;
}
procedure `void` `a`(`com.b.a.f$3` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Number` v4 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14781c.  if v4 != 0 then goto L147828;
  #L147820.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L147826.  return @kind void;
  #L147828.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L14782e.  v0:= temp;
  #L147830.  v0:= (`double`) v0 @kind f2d;
  #L147832.  call `a`(v0) @signature `Lcom/b/a/f;.a:(D)V` @kind static;
  #L147838.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/Number;)Lcom/b/a/d/c;` @kind virtual;
  #L14783e.  goto L147826;
}
procedure `void` `a`(`com.b.a.f$3` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L147850.  v2:= (`java.lang.Number`) v2 @kind object;
  #L147854.  call `a`(v0, v1, v2) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @kind virtual;
  #L14785a.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$3` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$3;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L14786c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/a;)Ljava/lang/Float;` @kind virtual;
  #L147872.  v0:= temp @kind object;
  #L147874.  return v0 @kind object;
}

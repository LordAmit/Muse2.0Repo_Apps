record `com.b.a.b.a.n$28$1` @kind class @AccessFlag  extends `com.b.a.v` @kind class {
  `java.lang.Class` `com.b.a.b.a.n$28$1.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.b.a.n$28` `com.b.a.b.a.n$28$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.n$28$1` v0 @kind this, `com.b.a.b.a.n$28` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/b/a/b/a/n$28$1;.<init>:(Lcom/b/a/b/a/n$28;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L142b40.  v0.`com.b.a.b.a.n$28$1.b` @type ^`com.b.a.b.a.n$28` := v1 @kind object;
  #L142b44.  v0.`com.b.a.b.a.n$28$1.a` @type ^`java.lang.Class` := v2 @kind object;
  #L142b48.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L142b4e.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$28$1` v1 @kind this, `com.b.a.d.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/b/a/n$28$1;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L142b60.  v0:= v1.`com.b.a.b.a.n$28$1.b` @type ^`com.b.a.b.a.n$28` @kind object;
  #L142b64.  v0:= v0.`com.b.a.b.a.n$28.b` @type ^`com.b.a.v` @kind object;
  #L142b68.  call `a`(v0, v2, v3) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L142b6e.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$28$1` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/n$28$1;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L142b80.  v0:= v4.`com.b.a.b.a.n$28$1.b` @type ^`com.b.a.b.a.n$28` @kind object;
  #L142b84.  v0:= v0.`com.b.a.b.a.n$28.b` @type ^`com.b.a.v` @kind object;
  #L142b88.  call temp:= `b`(v0, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L142b8e.  v0:= temp @kind object;
  #L142b90.  if v0 == 0 then goto L142c06;
  #L142b94.  v1:= v4.`com.b.a.b.a.n$28$1.a` @type ^`java.lang.Class` @kind object;
  #L142b98.  call temp:= `isInstance`(v1, v0) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L142b9e.  v1:= temp;
  #L142ba0.  if v1 != 0 then goto L142c06;
  #L142ba4.  v1:= new `com.b.a.t`;
  #L142ba8.  v2:= new `java.lang.StringBuilder`;
  #L142bac.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L142bb2.  v3:= "Expected a " @kind object;
  #L142bb6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142bbc.  v2:= temp @kind object;
  #L142bbe.  v3:= v4.`com.b.a.b.a.n$28$1.a` @type ^`java.lang.Class` @kind object;
  #L142bc2.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L142bc8.  v3:= temp @kind object;
  #L142bca.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142bd0.  v2:= temp @kind object;
  #L142bd2.  v3:= " but was " @kind object;
  #L142bd6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142bdc.  v2:= temp @kind object;
  #L142bde.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L142be4.  v0:= temp @kind object;
  #L142be6.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L142bec.  v0:= temp @kind object;
  #L142bee.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142bf4.  v0:= temp @kind object;
  #L142bf6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L142bfc.  v0:= temp @kind object;
  #L142bfe.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L142c04.  throw v1;
  #L142c06.  return v0 @kind object;
}

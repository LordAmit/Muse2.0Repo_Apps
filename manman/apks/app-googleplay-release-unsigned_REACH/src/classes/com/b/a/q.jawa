record `com.b.a.q` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.l` @kind class {
  `java.lang.Object` `com.b.a.q.b` @AccessFlag PRIVATE;
}
global `java.lang.Class`[] `@@com.b.a.q.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L148d10.  v0:= 16I;
  #L148d14.  v0:= new `java.lang.Class`[v0];
  #L148d18.  v1:= 0I;
  #L148d1a.  v2:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L148d1e.  v0[v1]:= v2 @kind object;
  #L148d22.  v1:= 1I;
  #L148d24.  v2:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L148d28.  v0[v1]:= v2 @kind object;
  #L148d2c.  v1:= 2I;
  #L148d2e.  v2:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L148d32.  v0[v1]:= v2 @kind object;
  #L148d36.  v1:= 3I;
  #L148d38.  v2:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L148d3c.  v0[v1]:= v2 @kind object;
  #L148d40.  v1:= 4I;
  #L148d42.  v2:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L148d46.  v0[v1]:= v2 @kind object;
  #L148d4a.  v1:= 5I;
  #L148d4c.  v2:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L148d50.  v0[v1]:= v2 @kind object;
  #L148d54.  v1:= 6I;
  #L148d56.  v2:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L148d5a.  v0[v1]:= v2 @kind object;
  #L148d5e.  v1:= 7I;
  #L148d60.  v2:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L148d64.  v0[v1]:= v2 @kind object;
  #L148d68.  v1:= 8I;
  #L148d6c.  v2:= constclass @type ^`java.lang.Integer` @kind object;
  #L148d70.  v0[v1]:= v2 @kind object;
  #L148d74.  v1:= 9I;
  #L148d78.  v2:= constclass @type ^`java.lang.Long` @kind object;
  #L148d7c.  v0[v1]:= v2 @kind object;
  #L148d80.  v1:= 10I;
  #L148d84.  v2:= constclass @type ^`java.lang.Short` @kind object;
  #L148d88.  v0[v1]:= v2 @kind object;
  #L148d8c.  v1:= 11I;
  #L148d90.  v2:= constclass @type ^`java.lang.Float` @kind object;
  #L148d94.  v0[v1]:= v2 @kind object;
  #L148d98.  v1:= 12I;
  #L148d9c.  v2:= constclass @type ^`java.lang.Double` @kind object;
  #L148da0.  v0[v1]:= v2 @kind object;
  #L148da4.  v1:= 13I;
  #L148da8.  v2:= constclass @type ^`java.lang.Byte` @kind object;
  #L148dac.  v0[v1]:= v2 @kind object;
  #L148db0.  v1:= 14I;
  #L148db4.  v2:= constclass @type ^`java.lang.Boolean` @kind object;
  #L148db8.  v0[v1]:= v2 @kind object;
  #L148dbc.  v1:= 15I;
  #L148dc0.  v2:= constclass @type ^`java.lang.Character` @kind object;
  #L148dc4.  v0[v1]:= v2 @kind object;
  #L148dc8.  `@@com.b.a.q.a` @type ^`java.lang.Class`[] := v0 @kind object;
  #L148dcc.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.Boolean` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/Boolean;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L148de0.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L148de6.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L148dec.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L148e00.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L148e06.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L148e0c.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L148e20.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L148e26.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L148e2c.  return @kind void;
}
procedure `boolean` `a`(`com.b.a.q` v3 @kind object) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L148e40.  v1:= 0I;
  #L148e42.  v0:= v3.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L148e46.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L148e4a.  if v0 == 0 then goto L148e86;
  #L148e4e.  v0:= v3.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L148e52.  v0:= (`java.lang.Number`) v0 @kind object;
  #L148e56.  v2:= instanceof @variable v0 @type ^`java.math.BigInteger` @kind boolean;
  #L148e5a.  if v2 != 0 then goto L148e7e;
  #L148e5e.  v2:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L148e62.  if v2 != 0 then goto L148e7e;
  #L148e66.  v2:= instanceof @variable v0 @type ^`java.lang.Integer` @kind boolean;
  #L148e6a.  if v2 != 0 then goto L148e7e;
  #L148e6e.  v2:= instanceof @variable v0 @type ^`java.lang.Short` @kind boolean;
  #L148e72.  if v2 != 0 then goto L148e7e;
  #L148e76.  v0:= instanceof @variable v0 @type ^`java.lang.Byte` @kind boolean;
  #L148e7a.  if v0 == 0 then goto L148e82;
  #L148e7e.  v0:= 1I;
  #L148e80.  return v0;
  #L148e82.  v0:= v1;
  #L148e84.  goto L148e80;
  #L148e86.  v0:= v1;
  #L148e88.  goto L148e80;
}
procedure `boolean` `b`(`java.lang.Object` v7 @kind object) @signature `Lcom/b/a/q;.b:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L148e9c.  v0:= 1I;
  #L148e9e.  v1:= 0I;
  #L148ea0.  v2:= instanceof @variable v7 @type ^`java.lang.String` @kind boolean;
  #L148ea4.  if v2 == 0 then goto L148eaa;
  #L148ea8.  return v0;
  #L148eaa.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L148eb0.  v3:= temp @kind object;
  #L148eb2.  v4:= `@@com.b.a.q.a` @type ^`java.lang.Class`[] @kind object;
  #L148eb6.  v5:= length @variable v4;
  #L148eb8.  v2:= v1;
  #L148eba.  if v2 >= v5 then goto L148ed4;
  #L148ebe.  v6:= v4[v2] @kind object;
  #L148ec2.  call temp:= `isAssignableFrom`(v6, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L148ec8.  v6:= temp;
  #L148eca.  if v6 != 0 then goto L148ea8;
  #L148ece.  v2:= v2 + 1;
  #L148ed2.  goto L148eba;
  #L148ed4.  v0:= v1;
  #L148ed6.  goto L148ea8;
}
procedure `java.lang.Number` `a`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148ee8.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L148eec.  v0:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L148ef0.  if v0 == 0 then goto L148f0a;
  #L148ef4.  v1:= new `com.b.a.b.f`;
  #L148ef8.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L148efc.  v0:= (`java.lang.String`) v0 @kind object;
  #L148f00.  call `<init>`(v1, v0) @signature `Lcom/b/a/b/f;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L148f06.  v0:= v1 @kind object;
  #L148f08.  return v0 @kind object;
  #L148f0a.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L148f0e.  v0:= (`java.lang.Number`) v0 @kind object;
  #L148f12.  goto L148f08;
}
procedure `void` `a`(`com.b.a.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L148f24.  v0:= instanceof @variable v2 @type ^`java.lang.Character` @kind boolean;
  #L148f28.  if v0 == 0 then goto L148f46;
  #L148f2c.  v2:= (`java.lang.Character`) v2 @kind object;
  #L148f30.  call temp:= `charValue`(v2) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L148f36.  v0:= temp;
  #L148f38.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L148f3e.  v0:= temp @kind object;
  #L148f40.  v1.`com.b.a.q.b` @type ^`java.lang.Object` := v0 @kind object;
  #L148f44.  return @kind void;
  #L148f46.  v0:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L148f4a.  if v0 != 0 then goto L148f5a;
  #L148f4e.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:(Ljava/lang/Object;)Z` @kind static;
  #L148f54.  v0:= temp;
  #L148f56.  if v0 == 0 then goto L148f68;
  #L148f5a.  v0:= 1I;
  #L148f5c.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L148f62.  v1.`com.b.a.q.b` @type ^`java.lang.Object` := v2 @kind object;
  #L148f66.  goto L148f44;
  #L148f68.  v0:= 0I;
  #L148f6a.  goto L148f5c;
}
procedure `java.lang.String` `b`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148f7c.  call temp:= `p`(v1) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L148f82.  v0:= temp;
  #L148f84.  if v0 == 0 then goto L148f9a;
  #L148f88.  call temp:= `a`(v1) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L148f8e.  v0:= temp @kind object;
  #L148f90.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L148f96.  v0:= temp @kind object;
  #L148f98.  return v0 @kind object;
  #L148f9a.  call temp:= `o`(v1) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L148fa0.  v0:= temp;
  #L148fa2.  if v0 == 0 then goto L148fb8;
  #L148fa6.  call temp:= `n`(v1) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @kind virtual;
  #L148fac.  v0:= temp @kind object;
  #L148fae.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:()Ljava/lang/String;` @kind virtual;
  #L148fb4.  v0:= temp @kind object;
  #L148fb6.  goto L148f98;
  #L148fb8.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L148fbc.  v0:= (`java.lang.String`) v0 @kind object;
  #L148fc0.  goto L148f98;
}
procedure `double` `c`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.c:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148fd4.  call temp:= `p`(v2) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L148fda.  v0:= temp;
  #L148fdc.  if v0 == 0 then goto L148ff2;
  #L148fe0.  call temp:= `a`(v2) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L148fe6.  v0:= temp @kind object;
  #L148fe8.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L148fee.  v0:= temp @kind wide;
  #L148ff0.  return v0 @kind wide;
  #L148ff2.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L148ff8.  v0:= temp @kind object;
  #L148ffa.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L149000.  v0:= temp @kind wide;
  #L149002.  goto L148ff0;
}
procedure `long` `d`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L149014.  call temp:= `p`(v2) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L14901a.  v0:= temp;
  #L14901c.  if v0 == 0 then goto L149032;
  #L149020.  call temp:= `a`(v2) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L149026.  v0:= temp @kind object;
  #L149028.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L14902e.  v0:= temp @kind wide;
  #L149030.  return v0 @kind wide;
  #L149032.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L149038.  v0:= temp @kind object;
  #L14903a.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L149040.  v0:= temp @kind wide;
  #L149042.  goto L149030;
}
procedure `int` `e`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149054.  call temp:= `p`(v1) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L14905a.  v0:= temp;
  #L14905c.  if v0 == 0 then goto L149072;
  #L149060.  call temp:= `a`(v1) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L149066.  v0:= temp @kind object;
  #L149068.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L14906e.  v0:= temp;
  #L149070.  return v0;
  #L149072.  call temp:= `b`(v1) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L149078.  v0:= temp @kind object;
  #L14907a.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L149080.  v0:= temp;
  #L149082.  goto L149070;
}
procedure `boolean` `equals`(`com.b.a.q` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/b/a/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L149094.  v0:= 1I;
  #L149096.  v1:= 0I;
  #L149098.  if v7 != v8 then goto L14909e;
  #L14909c.  return v0;
  #L14909e.  if v8 == 0 then goto L1490b6;
  #L1490a2.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1490a8.  v2:= temp @kind object;
  #L1490aa.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1490b0.  v3:= temp @kind object;
  #L1490b2.  if v2 == v3 then goto L1490ba;
  #L1490b6.  v0:= v1;
  #L1490b8.  goto L14909c;
  #L1490ba.  v8:= (`com.b.a.q`) v8 @kind object;
  #L1490be.  v2:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L1490c2.  if v2 != 0 then goto L1490d2;
  #L1490c6.  v2:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L1490ca.  if v2 == 0 then goto L14909c;
  #L1490ce.  v0:= v1;
  #L1490d0.  goto L14909c;
  #L1490d2.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L1490d8.  v2:= temp;
  #L1490da.  if v2 == 0 then goto L149116;
  #L1490de.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L1490e4.  v2:= temp;
  #L1490e6.  if v2 == 0 then goto L149116;
  #L1490ea.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L1490f0.  v2:= temp @kind object;
  #L1490f2.  call temp:= `longValue`(v2) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L1490f8.  v2:= temp @kind wide;
  #L1490fa.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L149100.  v4:= temp @kind object;
  #L149102.  call temp:= `longValue`(v4) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L149108.  v4:= temp @kind wide;
  #L14910a.  v2:= lcmp(v2, v4);
  #L14910e.  if v2 == 0 then goto L14909c;
  #L149112.  v0:= v1;
  #L149114.  goto L14909c;
  #L149116.  v2:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14911a.  v2:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L14911e.  if v2 == 0 then goto L149174;
  #L149122.  v2:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L149126.  v2:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L14912a.  if v2 == 0 then goto L149174;
  #L14912e.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L149134.  v2:= temp @kind object;
  #L149136.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L14913c.  v2:= temp @kind wide;
  #L14913e.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L149144.  v4:= temp @kind object;
  #L149146.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L14914c.  v4:= temp @kind wide;
  #L14914e.  v6:= dcmpl(v2, v4);
  #L149152.  if v6 == 0 then goto L14916e;
  #L149156.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L14915c.  v2:= temp;
  #L14915e.  if v2 == 0 then goto L149170;
  #L149162.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L149168.  v2:= temp;
  #L14916a.  if v2 == 0 then goto L149170;
  #L14916e.  v1:= v0;
  #L149170.  v0:= v1;
  #L149172.  goto L14909c;
  #L149174.  v0:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L149178.  v1:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14917c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L149182.  v0:= temp;
  #L149184.  goto L14909c;
}
procedure `boolean` `f`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149198.  call temp:= `o`(v1) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L14919e.  v0:= temp;
  #L1491a0.  if v0 == 0 then goto L1491b6;
  #L1491a4.  call temp:= `n`(v1) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @kind virtual;
  #L1491aa.  v0:= temp @kind object;
  #L1491ac.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1491b2.  v0:= temp;
  #L1491b4.  return v0;
  #L1491b6.  call temp:= `b`(v1) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L1491bc.  v0:= temp @kind object;
  #L1491be.  call temp:= `parseBoolean`(v0) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L1491c4.  v0:= temp;
  #L1491c6.  goto L1491b4;
}
procedure `int` `hashCode`(`com.b.a.q` v4 @kind this) @signature `Lcom/b/a/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1491d8.  v2:= 32I;
  #L1491dc.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L1491e0.  if v0 != 0 then goto L1491ea;
  #L1491e4.  v0:= 31I;
  #L1491e8.  return v0;
  #L1491ea.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L1491f0.  v0:= temp;
  #L1491f2.  if v0 == 0 then goto L149210;
  #L1491f6.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L1491fc.  v0:= temp @kind object;
  #L1491fe.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L149204.  v0:= temp @kind wide;
  #L149206.  v2:= v0 ^>> v2 @kind long;
  #L14920a.  v0:= v0 ^~ v2 @kind long;
  #L14920c.  v0:= (`int`) v0 @kind l2i;
  #L14920e.  goto L1491e8;
  #L149210.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L149214.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L149218.  if v0 == 0 then goto L14923e;
  #L14921c.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L149222.  v0:= temp @kind object;
  #L149224.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L14922a.  v0:= temp @kind wide;
  #L14922c.  call temp:= `doubleToLongBits`(v0) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L149232.  v0:= temp @kind wide;
  #L149234.  v2:= v0 ^>> v2 @kind long;
  #L149238.  v0:= v0 ^~ v2 @kind long;
  #L14923a.  v0:= (`int`) v0 @kind l2i;
  #L14923c.  goto L1491e8;
  #L14923e.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L149242.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L149248.  v0:= temp;
  #L14924a.  goto L1491e8;
}
procedure `java.lang.Boolean` `n`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @AccessFlag  {
    temp;
    v0;

  #L14925c.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L149260.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L149264.  return v0 @kind object;
}
procedure `boolean` `o`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.o:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149278.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14927c.  v0:= instanceof @variable v0 @type ^`java.lang.Boolean` @kind boolean;
  #L149280.  return v0;
}
procedure `boolean` `p`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.p:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149294.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L149298.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L14929c.  return v0;
}
procedure `boolean` `q`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1492b0.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L1492b4.  v0:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L1492b8.  return v0;
}

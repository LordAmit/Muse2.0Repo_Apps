record `com.b.a.b.a.l$b` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `com.b.a.c.a` `com.b.a.b.a.l$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.b.a.l$b.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.b.a.b.a.l$b.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.s` `com.b.a.b.a.l$b.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.k` `com.b.a.b.a.l$b.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.l$b` v2 @kind this, `java.lang.Object` v3 @kind object, `com.b.a.c.a` v4 @kind object, `boolean` v5 , `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/a/l$b;.<init>:(Ljava/lang/Object;Lcom/b/a/c/a;ZLjava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L141474.  v1:= 0I;
  #L141476.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14147c.  v0:= instanceof @variable v3 @type ^`com.b.a.s` @kind boolean;
  #L141480.  if v0 == 0 then goto L1414c4;
  #L141484.  v0:= v3 @kind object;
  #L141486.  v0:= (`com.b.a.s`) v0 @kind object;
  #L14148a.  v2.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` := v0 @kind object;
  #L14148e.  v0:= instanceof @variable v3 @type ^`com.b.a.k` @kind boolean;
  #L141492.  if v0 == 0 then goto L1414c8;
  #L141496.  v3:= (`com.b.a.k`) v3 @kind object;
  #L14149a.  v2.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` := v3 @kind object;
  #L14149e.  v0:= v2.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` @kind object;
  #L1414a2.  if v0 != 0 then goto L1414ae;
  #L1414a6.  v0:= v2.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` @kind object;
  #L1414aa.  if v0 == 0 then goto L1414cc;
  #L1414ae.  v0:= 1I;
  #L1414b0.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L1414b6.  v2.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` := v4 @kind object;
  #L1414ba.  v2.`com.b.a.b.a.l$b.b` @type ^`boolean` := v5 @kind boolean;
  #L1414be.  v2.`com.b.a.b.a.l$b.c` @type ^`java.lang.Class` := v6 @kind object;
  #L1414c2.  return @kind void;
  #L1414c4.  v0:= v1 @kind object;
  #L1414c6.  goto L14148a;
  #L1414c8.  v3:= v1 @kind object;
  #L1414ca.  goto L14149a;
  #L1414cc.  v0:= 0I;
  #L1414ce.  goto L1414b0;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.l$b` v6 @kind this, `com.b.a.f` v7 @kind object, `com.b.a.c.a` v8 @kind object) @signature `Lcom/b/a/b/a/l$b;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1414e0.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L1414e4.  if v0 == 0 then goto L14153c;
  #L1414e8.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L1414ec.  call temp:= `equals`(v0, v8) @signature `Lcom/b/a/c/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1414f2.  v0:= temp;
  #L1414f4.  if v0 != 0 then goto L141518;
  #L1414f8.  v0:= v6.`com.b.a.b.a.l$b.b` @type ^`boolean` @kind boolean;
  #L1414fc.  if v0 == 0 then goto L141538;
  #L141500.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L141504.  call temp:= `b`(v0) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L14150a.  v0:= temp @kind object;
  #L14150c.  call temp:= `a`(v8) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L141512.  v1:= temp @kind object;
  #L141514.  if v0 != v1 then goto L141538;
  #L141518.  v0:= 1I;
  #L14151a.  if v0 == 0 then goto L141552;
  #L14151e.  v0:= new `com.b.a.b.a.l`;
  #L141522.  v1:= v6.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` @kind object;
  #L141526.  v2:= v6.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` @kind object;
  #L14152a.  v3:= v7 @kind object;
  #L14152c.  v4:= v8 @kind object;
  #L14152e.  v5:= v6 @kind object;
  #L141530.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/b/a/b/a/l;.<init>:(Lcom/b/a/s;Lcom/b/a/k;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/w;)V` @kind direct;
  #L141536.  return v0 @kind object;
  #L141538.  v0:= 0I;
  #L14153a.  goto L14151a;
  #L14153c.  v0:= v6.`com.b.a.b.a.l$b.c` @type ^`java.lang.Class` @kind object;
  #L141540.  call temp:= `a`(v8) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L141546.  v1:= temp @kind object;
  #L141548.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14154e.  v0:= temp;
  #L141550.  goto L14151a;
  #L141552.  v0:= 0I;
  #L141554.  goto L141536;
}

record `com.b.a.b.g$c` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `com.b.a.b.g$d` `com.b.a.b.g$c.b` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$c.c` @AccessFlag ;
  `int` `com.b.a.b.g$c.d` @AccessFlag ;
  `com.b.a.b.g` `com.b.a.b.g$c.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.g$c` v1 @kind this, `com.b.a.b.g` v2 @kind object) @signature `Lcom/b/a/b/g$c;.<init>:(Lcom/b/a/b/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L145c34.  v1.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` := v2 @kind object;
  #L145c38.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L145c3e.  v0:= v1.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L145c42.  v0:= v0.`com.b.a.b.g.e` @type ^`com.b.a.b.g$d` @kind object;
  #L145c46.  v0:= v0.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` @kind object;
  #L145c4a.  v1.`com.b.a.b.g$c.b` @type ^`com.b.a.b.g$d` := v0 @kind object;
  #L145c4e.  v0:= 0I;
  #L145c50.  v1.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` := v0 @kind object;
  #L145c54.  v0:= v1.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L145c58.  v0:= v0.`com.b.a.b.g.d` @type ^`int`;
  #L145c5c.  v1.`com.b.a.b.g$c.d` @type ^`int` := v0;
  #L145c60.  return @kind void;
}
procedure `com.b.a.b.g$d` `b`(`com.b.a.b.g$c` v3 @kind this) @signature `Lcom/b/a/b/g$c;.b:()Lcom/b/a/b/g$d;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L145c74.  v0:= v3.`com.b.a.b.g$c.b` @type ^`com.b.a.b.g$d` @kind object;
  #L145c78.  v1:= v3.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L145c7c.  v1:= v1.`com.b.a.b.g.e` @type ^`com.b.a.b.g$d` @kind object;
  #L145c80.  if v0 != v1 then goto L145c90;
  #L145c84.  v0:= new `java.util.NoSuchElementException`;
  #L145c88.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L145c8e.  throw v0;
  #L145c90.  v1:= v3.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L145c94.  v1:= v1.`com.b.a.b.g.d` @type ^`int`;
  #L145c98.  v2:= v3.`com.b.a.b.g$c.d` @type ^`int`;
  #L145c9c.  if v1 == v2 then goto L145cac;
  #L145ca0.  v0:= new `java.util.ConcurrentModificationException`;
  #L145ca4.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L145caa.  throw v0;
  #L145cac.  v1:= v0.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` @kind object;
  #L145cb0.  v3.`com.b.a.b.g$c.b` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L145cb4.  v3.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` := v0 @kind object;
  #L145cb8.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`com.b.a.b.g$c` v2 @kind this) @signature `Lcom/b/a/b/g$c;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L145ccc.  v0:= v2.`com.b.a.b.g$c.b` @type ^`com.b.a.b.g$d` @kind object;
  #L145cd0.  v1:= v2.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L145cd4.  v1:= v1.`com.b.a.b.g.e` @type ^`com.b.a.b.g$d` @kind object;
  #L145cd8.  if v0 == v1 then goto L145ce0;
  #L145cdc.  v0:= 1I;
  #L145cde.  return v0;
  #L145ce0.  v0:= 0I;
  #L145ce2.  goto L145cde;
}
procedure `void` `remove`(`com.b.a.b.g$c` v3 @kind this) @signature `Lcom/b/a/b/g$c;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L145cf4.  v0:= v3.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` @kind object;
  #L145cf8.  if v0 != 0 then goto L145d08;
  #L145cfc.  v0:= new `java.lang.IllegalStateException`;
  #L145d00.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L145d06.  throw v0;
  #L145d08.  v0:= v3.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L145d0c.  v1:= v3.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` @kind object;
  #L145d10.  v2:= 1I;
  #L145d12.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/g;.a:(Lcom/b/a/b/g$d;Z)V` @kind virtual;
  #L145d18.  v0:= 0I;
  #L145d1a.  v3.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` := v0 @kind object;
  #L145d1e.  v0:= v3.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L145d22.  v0:= v0.`com.b.a.b.g.d` @type ^`int`;
  #L145d26.  v3.`com.b.a.b.g$c.d` @type ^`int` := v0;
  #L145d2a.  return @kind void;
}

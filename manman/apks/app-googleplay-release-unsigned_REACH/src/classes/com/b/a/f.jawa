record `com.b.a.f` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.ThreadLocal` `com.b.a.f.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.b.a.f.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.b.a.f.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.c` `com.b.a.f.e` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.d` `com.b.a.f.f` @AccessFlag PRIVATE_FINAL;
  `com.b.a.e` `com.b.a.f.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.l` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.d` `com.b.a.f.m` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.c.a` `@@com.b.a.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L147bd4.  v0:= new `com.b.a.f$1`;
  #L147bd8.  call `<init>`(v0) @signature `Lcom/b/a/f$1;.<init>:()V` @kind direct;
  #L147bde.  `@@com.b.a.f.a` @type ^`com.b.a.c.a` := v0 @kind object;
  #L147be2.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.f` v13 @kind this) @signature `Lcom/b/a/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L147bf4.  v4:= 0I;
  #L147bf6.  v1:= `@@com.b.a.b.d.a` @type ^`com.b.a.b.d` @kind object;
  #L147bfa.  v2:= `@@com.b.a.d.a` @type ^`com.b.a.d` @kind object;
  #L147bfe.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L147c04.  v3:= temp @kind object;
  #L147c06.  v7:= 1I;
  #L147c08.  v11:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L147c0c.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L147c12.  v12:= temp @kind object;
  #L147c14.  v0:= v13 @kind object;
  #L147c16.  v5:= v4;
  #L147c18.  v6:= v4;
  #L147c1a.  v8:= v4;
  #L147c1c.  v9:= v4;
  #L147c1e.  v10:= v4;
  #L147c20.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @kind direct;
  #L147c26.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.f` v6 @kind this, `com.b.a.b.d` v7 @kind object, `com.b.a.e` v8 @kind object, `java.util.Map` v9 @kind object, `boolean` v10 , `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `boolean` v15 , `boolean` v16 , `com.b.a.u` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L147c38.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L147c3e.  v1:= new `java.lang.ThreadLocal`;
  #L147c42.  call `<init>`(v1) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L147c48.  v6.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` := v1 @kind object;
  #L147c4c.  v1:= new `java.util.concurrent.ConcurrentHashMap`;
  #L147c50.  call `<init>`(v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L147c56.  v6.`com.b.a.f.c` @type ^`java.util.Map` := v1 @kind object;
  #L147c5a.  v1:= new `com.b.a.b.c`;
  #L147c5e.  call `<init>`(v1, v9) @signature `Lcom/b/a/b/c;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L147c64.  v6.`com.b.a.f.e` @type ^`com.b.a.b.c` := v1 @kind object;
  #L147c68.  v6.`com.b.a.f.f` @type ^`com.b.a.b.d` := v7 @kind object;
  #L147c6c.  v6.`com.b.a.f.g` @type ^`com.b.a.e` := v8 @kind object;
  #L147c70.  v6.`com.b.a.f.h` @type ^`boolean` := v10 @kind boolean;
  #L147c74.  v6.`com.b.a.f.j` @type ^`boolean` := v12 @kind boolean;
  #L147c78.  v6.`com.b.a.f.i` @type ^`boolean` := v13 @kind boolean;
  #L147c7c.  v6.`com.b.a.f.k` @type ^`boolean` := v14 @kind boolean;
  #L147c80.  v6.`com.b.a.f.l` @type ^`boolean` := v15 @kind boolean;
  #L147c84.  v1:= new `java.util.ArrayList`;
  #L147c88.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L147c8e.  v2:= `@@com.b.a.b.a.n.Y` @type ^`com.b.a.w` @kind object;
  #L147c92.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147c98.  v2:= `@@com.b.a.b.a.h.a` @type ^`com.b.a.w` @kind object;
  #L147c9c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147ca2.  call temp:= `add`(v1, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147ca8.  v0:= v18 @kind object;
  #L147cac.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L147cb2.  v2:= `@@com.b.a.b.a.n.D` @type ^`com.b.a.w` @kind object;
  #L147cb6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147cbc.  v2:= `@@com.b.a.b.a.n.m` @type ^`com.b.a.w` @kind object;
  #L147cc0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147cc6.  v2:= `@@com.b.a.b.a.n.g` @type ^`com.b.a.w` @kind object;
  #L147cca.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147cd0.  v2:= `@@com.b.a.b.a.n.i` @type ^`com.b.a.w` @kind object;
  #L147cd4.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147cda.  v2:= `@@com.b.a.b.a.n.k` @type ^`com.b.a.w` @kind object;
  #L147cde.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147ce4.  call temp:= `a`(v17) @signature `Lcom/b/a/f;.a:(Lcom/b/a/u;)Lcom/b/a/v;` @kind static;
  #L147cea.  v2:= temp @kind object;
  #L147cec.  v3:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L147cf0.  v4:= constclass @type ^`java.lang.Long` @kind object;
  #L147cf4.  call temp:= `a`(v3, v4, v2) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L147cfa.  v3:= temp @kind object;
  #L147cfc.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147d02.  v3:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L147d06.  v4:= constclass @type ^`java.lang.Double` @kind object;
  #L147d0a.  v0:= v16;
  #L147d0e.  call temp:= `a`(v6, v0) @signature `Lcom/b/a/f;.a:(Z)Lcom/b/a/v;` @kind direct;
  #L147d14.  v5:= temp @kind object;
  #L147d16.  call temp:= `a`(v3, v4, v5) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L147d1c.  v3:= temp @kind object;
  #L147d1e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147d24.  v3:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L147d28.  v4:= constclass @type ^`java.lang.Float` @kind object;
  #L147d2c.  v0:= v16;
  #L147d30.  call temp:= `b`(v6, v0) @signature `Lcom/b/a/f;.b:(Z)Lcom/b/a/v;` @kind direct;
  #L147d36.  v5:= temp @kind object;
  #L147d38.  call temp:= `a`(v3, v4, v5) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L147d3e.  v3:= temp @kind object;
  #L147d40.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147d46.  v3:= `@@com.b.a.b.a.n.x` @type ^`com.b.a.w` @kind object;
  #L147d4a.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147d50.  v3:= `@@com.b.a.b.a.n.o` @type ^`com.b.a.w` @kind object;
  #L147d54.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147d5a.  v3:= `@@com.b.a.b.a.n.q` @type ^`com.b.a.w` @kind object;
  #L147d5e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147d64.  v3:= constclass @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L147d68.  call temp:= `a`(v2) @signature `Lcom/b/a/f;.a:(Lcom/b/a/v;)Lcom/b/a/v;` @kind static;
  #L147d6e.  v4:= temp @kind object;
  #L147d70.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L147d76.  v3:= temp @kind object;
  #L147d78.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147d7e.  v3:= constclass @type ^`java.util.concurrent.atomic.AtomicLongArray` @kind object;
  #L147d82.  call temp:= `b`(v2) @signature `Lcom/b/a/f;.b:(Lcom/b/a/v;)Lcom/b/a/v;` @kind static;
  #L147d88.  v2:= temp @kind object;
  #L147d8a.  call temp:= `a`(v3, v2) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L147d90.  v2:= temp @kind object;
  #L147d92.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147d98.  v2:= `@@com.b.a.b.a.n.s` @type ^`com.b.a.w` @kind object;
  #L147d9c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147da2.  v2:= `@@com.b.a.b.a.n.z` @type ^`com.b.a.w` @kind object;
  #L147da6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147dac.  v2:= `@@com.b.a.b.a.n.F` @type ^`com.b.a.w` @kind object;
  #L147db0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147db6.  v2:= `@@com.b.a.b.a.n.H` @type ^`com.b.a.w` @kind object;
  #L147dba.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147dc0.  v2:= constclass @type ^`java.math.BigDecimal` @kind object;
  #L147dc4.  v3:= `@@com.b.a.b.a.n.B` @type ^`com.b.a.v` @kind object;
  #L147dc8.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L147dce.  v2:= temp @kind object;
  #L147dd0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147dd6.  v2:= constclass @type ^`java.math.BigInteger` @kind object;
  #L147dda.  v3:= `@@com.b.a.b.a.n.C` @type ^`com.b.a.v` @kind object;
  #L147dde.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L147de4.  v2:= temp @kind object;
  #L147de6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147dec.  v2:= `@@com.b.a.b.a.n.J` @type ^`com.b.a.w` @kind object;
  #L147df0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147df6.  v2:= `@@com.b.a.b.a.n.L` @type ^`com.b.a.w` @kind object;
  #L147dfa.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e00.  v2:= `@@com.b.a.b.a.n.P` @type ^`com.b.a.w` @kind object;
  #L147e04.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e0a.  v2:= `@@com.b.a.b.a.n.R` @type ^`com.b.a.w` @kind object;
  #L147e0e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e14.  v2:= `@@com.b.a.b.a.n.W` @type ^`com.b.a.w` @kind object;
  #L147e18.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e1e.  v2:= `@@com.b.a.b.a.n.N` @type ^`com.b.a.w` @kind object;
  #L147e22.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e28.  v2:= `@@com.b.a.b.a.n.d` @type ^`com.b.a.w` @kind object;
  #L147e2c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e32.  v2:= `@@com.b.a.b.a.c.a` @type ^`com.b.a.w` @kind object;
  #L147e36.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e3c.  v2:= `@@com.b.a.b.a.n.U` @type ^`com.b.a.w` @kind object;
  #L147e40.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e46.  v2:= `@@com.b.a.b.a.k.a` @type ^`com.b.a.w` @kind object;
  #L147e4a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e50.  v2:= `@@com.b.a.b.a.j.a` @type ^`com.b.a.w` @kind object;
  #L147e54.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e5a.  v2:= `@@com.b.a.b.a.n.S` @type ^`com.b.a.w` @kind object;
  #L147e5e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e64.  v2:= `@@com.b.a.b.a.a.a` @type ^`com.b.a.w` @kind object;
  #L147e68.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e6e.  v2:= `@@com.b.a.b.a.n.b` @type ^`com.b.a.w` @kind object;
  #L147e72.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e78.  v2:= new `com.b.a.b.a.b`;
  #L147e7c.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L147e80.  call `<init>`(v2, v3) @signature `Lcom/b/a/b/a/b;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L147e86.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147e8c.  v2:= new `com.b.a.b.a.g`;
  #L147e90.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L147e94.  call `<init>`(v2, v3, v11) @signature `Lcom/b/a/b/a/g;.<init>:(Lcom/b/a/b/c;Z)V` @kind direct;
  #L147e9a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147ea0.  v2:= new `com.b.a.b.a.d`;
  #L147ea4.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L147ea8.  call `<init>`(v2, v3) @signature `Lcom/b/a/b/a/d;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L147eae.  v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` := v2 @kind object;
  #L147eb2.  v2:= v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L147eb6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147ebc.  v2:= `@@com.b.a.b.a.n.Z` @type ^`com.b.a.w` @kind object;
  #L147ec0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147ec6.  v2:= new `com.b.a.b.a.i`;
  #L147eca.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L147ece.  v4:= v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L147ed2.  call `<init>`(v2, v3, v8, v7, v4) @signature `Lcom/b/a/b/a/i;.<init>:(Lcom/b/a/b/c;Lcom/b/a/e;Lcom/b/a/b/d;Lcom/b/a/b/a/d;)V` @kind direct;
  #L147ed8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147ede.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L147ee4.  v1:= temp @kind object;
  #L147ee6.  v6.`com.b.a.f.d` @type ^`java.util.List` := v1 @kind object;
  #L147eea.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.u` v1 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/u;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L147efc.  v0:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L147f00.  if v1 != v0 then goto L147f0a;
  #L147f04.  v0:= `@@com.b.a.b.a.n.t` @type ^`com.b.a.v` @kind object;
  #L147f08.  return v0 @kind object;
  #L147f0a.  v0:= new `com.b.a.f$4`;
  #L147f0e.  call `<init>`(v0) @signature `Lcom/b/a/f$4;.<init>:()V` @kind direct;
  #L147f14.  goto L147f08;
}
procedure `com.b.a.v` `a`(`com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/v;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L147f28.  v0:= new `com.b.a.f$5`;
  #L147f2c.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$5;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L147f32.  call temp:= `a`(v0) @signature `Lcom/b/a/f$5;.a:()Lcom/b/a/v;` @kind virtual;
  #L147f38.  v0:= temp @kind object;
  #L147f3a.  return v0 @kind object;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v1 @kind this, `boolean` v2 ) @signature `Lcom/b/a/f;.a:(Z)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L147f4c.  if v2 == 0 then goto L147f56;
  #L147f50.  v0:= `@@com.b.a.b.a.n.v` @type ^`com.b.a.v` @kind object;
  #L147f54.  return v0 @kind object;
  #L147f56.  v0:= new `com.b.a.f$2`;
  #L147f5a.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$2;.<init>:(Lcom/b/a/f;)V` @kind direct;
  #L147f60.  goto L147f54;
}
procedure `void` `a`(`double` v4 ) @signature `Lcom/b/a/f;.a:(D)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L147f74.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L147f7a.  v0:= temp;
  #L147f7c.  if v0 != 0 then goto L147f8c;
  #L147f80.  call temp:= `isInfinite`(v4) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L147f86.  v0:= temp;
  #L147f88.  if v0 == 0 then goto L147fbe;
  #L147f8c.  v0:= new `java.lang.IllegalArgumentException`;
  #L147f90.  v1:= new `java.lang.StringBuilder`;
  #L147f94.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L147f9a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L147fa0.  v1:= temp @kind object;
  #L147fa2.  v2:= " is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method." @kind object;
  #L147fa6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L147fac.  v1:= temp @kind object;
  #L147fae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L147fb4.  v1:= temp @kind object;
  #L147fb6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L147fbc.  throw v0;
  #L147fbe.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v2 @kind object, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/Object;Lcom/b/a/d/a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L147fd0.  if v2 == 0 then goto L148010;
  #Try_start0.  
  #L147fd4.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L147fda.  v0:= temp @kind object;
  #L147fdc.  v1:= `@@com.b.a.d.b.j` @type ^`com.b.a.d.b` @kind object;
  #L147fe0.  if v0 == v1 then goto L148010;
  #L147fe4.  v0:= new `com.b.a.m`;
  #L147fe8.  v1:= "JSON document was not fully consumed." @kind object;
  #L147fec.  call `<init>`(v0, v1) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L147ff2.  throw v0;
  #Try_end0.  
  #L147ff4.  v0:= Exception @type ^`com.b.a.d.d` @kind object;
  #L147ff6.  v1:= new `com.b.a.t`;
  #L147ffa.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L148000.  throw v1;
  #L148002.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L148004.  v1:= new `com.b.a.m`;
  #L148008.  call `<init>`(v1, v0) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14800e.  throw v1;
  #L148010.  return @kind void;
  catch `com.b.a.d.d` @[Try_start0..Try_end0] goto L147ff4;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L148002;
}
procedure `com.b.a.v` `b`(`com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f;.b:(Lcom/b/a/v;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L148034.  v0:= new `com.b.a.f$6`;
  #L148038.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$6;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L14803e.  call temp:= `a`(v0) @signature `Lcom/b/a/f$6;.a:()Lcom/b/a/v;` @kind virtual;
  #L148044.  v0:= temp @kind object;
  #L148046.  return v0 @kind object;
}
procedure `com.b.a.v` `b`(`com.b.a.f` v1 @kind this, `boolean` v2 ) @signature `Lcom/b/a/f;.b:(Z)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L148058.  if v2 == 0 then goto L148062;
  #L14805c.  v0:= `@@com.b.a.b.a.n.u` @type ^`com.b.a.v` @kind object;
  #L148060.  return v0 @kind object;
  #L148062.  v0:= new `com.b.a.f$3`;
  #L148066.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$3;.<init>:(Lcom/b/a/f;)V` @kind direct;
  #L14806c.  goto L148060;
}
procedure `com.b.a.d.a` `a`(`com.b.a.f` v2 @kind this, `java.io.Reader` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;)Lcom/b/a/d/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148080.  v0:= new `com.b.a.d.a`;
  #L148084.  call `<init>`(v0, v3) @signature `Lcom/b/a/d/a;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L14808a.  v1:= v2.`com.b.a.f.l` @type ^`boolean` @kind boolean;
  #L14808e.  call `a`(v0, v1) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L148094.  return v0 @kind object;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v5 @kind this, `com.b.a.c.a` v6 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1480a8.  v1:= v5.`com.b.a.f.c` @type ^`java.util.Map` @kind object;
  #L1480ac.  if v6 != 0 then goto L1480c6;
  #L1480b0.  v0:= `@@com.b.a.f.a` @type ^`com.b.a.c.a` @kind object;
  #L1480b4.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1480ba.  v0:= temp @kind object;
  #L1480bc.  v0:= (`com.b.a.v`) v0 @kind object;
  #L1480c0.  if v0 == 0 then goto L1480ca;
  #L1480c4.  return v0 @kind object;
  #L1480c6.  v0:= v6 @kind object;
  #L1480c8.  goto L1480b4;
  #L1480ca.  v0:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L1480ce.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1480d4.  v0:= temp @kind object;
  #L1480d6.  v0:= (`java.util.Map`) v0 @kind object;
  #L1480da.  v1:= 0I;
  #L1480dc.  if v0 != 0 then goto L1481ba;
  #L1480e0.  v1:= new `java.util.HashMap`;
  #L1480e4.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1480ea.  v0:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L1480ee.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L1480f4.  v0:= 1I;
  #L1480f6.  v2:= v1 @kind object;
  #L1480f8.  v1:= v0;
  #L1480fa.  call temp:= `get`(v2, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L148100.  v0:= temp @kind object;
  #L148102.  v0:= (`com.b.a.f$a`) v0 @kind object;
  #L148106.  if v0 != 0 then goto L1480c4;
  #Try_start0.  
  #L14810a.  v3:= new `com.b.a.f$a`;
  #L14810e.  call `<init>`(v3) @signature `Lcom/b/a/f$a;.<init>:()V` @kind direct;
  #L148114.  call temp:= `put`(v2, v6, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14811a.  v0:= v5.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L14811e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L148124.  v4:= temp @kind object;
  #L148126.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L14812c.  v0:= temp;
  #L14812e.  if v0 == 0 then goto L148170;
  #L148132.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L148138.  v0:= temp @kind object;
  #L14813a.  v0:= (`com.b.a.w`) v0 @kind object;
  #L14813e.  call temp:= `a`(v0, v5, v6) @signature `Lcom/b/a/w;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind interface;
  #L148144.  v0:= temp @kind object;
  #L148146.  if v0 == 0 then goto L148126;
  #L14814a.  call `a`(v3, v0) @signature `Lcom/b/a/f$a;.a:(Lcom/b/a/v;)V` @kind virtual;
  #L148150.  v3:= v5.`com.b.a.f.c` @type ^`java.util.Map` @kind object;
  #L148154.  call temp:= `put`(v3, v6, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L14815a.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L148160.  if v1 == 0 then goto L1480c4;
  #L148164.  v1:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L148168.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L14816e.  goto L1480c4;
  #Try_start1.  
  #L148170.  v0:= new `java.lang.IllegalArgumentException`;
  #L148174.  v3:= new `java.lang.StringBuilder`;
  #L148178.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14817e.  v4:= "GSON cannot handle " @kind object;
  #L148182.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148188.  v3:= temp @kind object;
  #L14818a.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148190.  v3:= temp @kind object;
  #L148192.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148198.  v3:= temp @kind object;
  #L14819a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1481a0.  throw v0;
  #Try_end1.  
  #L1481a2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1481a4.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1481aa.  if v1 == 0 then goto L1481b8;
  #L1481ae.  v1:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L1481b2.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L1481b8.  throw v0;
  #L1481ba.  v2:= v0 @kind object;
  #L1481bc.  goto L1480fa;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1481a2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1481a2;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v3 @kind this, `com.b.a.w` v4 @kind object, `com.b.a.c.a` v5 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/w;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1481e4.  v0:= v3.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L1481e8.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1481ee.  v0:= temp;
  #L1481f0.  if v0 != 0 then goto L1481f8;
  #L1481f4.  v4:= v3.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L1481f8.  v0:= 0I;
  #L1481fa.  v1:= v3.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L1481fe.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L148204.  v2:= temp @kind object;
  #L148206.  v1:= v0;
  #L148208.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L14820e.  v0:= temp;
  #L148210.  if v0 == 0 then goto L14823c;
  #L148214.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14821a.  v0:= temp @kind object;
  #L14821c.  v0:= (`com.b.a.w`) v0 @kind object;
  #L148220.  if v1 != 0 then goto L14822e;
  #L148224.  if v0 != v4 then goto L148208;
  #L148228.  v0:= 1I;
  #L14822a.  v1:= v0;
  #L14822c.  goto L148208;
  #L14822e.  call temp:= `a`(v0, v3, v5) @signature `Lcom/b/a/w;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind interface;
  #L148234.  v0:= temp @kind object;
  #L148236.  if v0 == 0 then goto L148208;
  #L14823a.  return v0 @kind object;
  #L14823c.  v0:= new `java.lang.IllegalArgumentException`;
  #L148240.  v1:= new `java.lang.StringBuilder`;
  #L148244.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14824a.  v2:= "GSON cannot serialize " @kind object;
  #L14824e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148254.  v1:= temp @kind object;
  #L148256.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14825c.  v1:= temp @kind object;
  #L14825e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148264.  v1:= temp @kind object;
  #L148266.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14826c.  throw v0;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/Class;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148280.  call temp:= `b`(v2) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @kind static;
  #L148286.  v0:= temp @kind object;
  #L148288.  call temp:= `a`(v1, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L14828e.  v0:= temp @kind object;
  #L148290.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v3 @kind this, `com.b.a.d.a` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/d/a;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1482a4.  v1:= 1I;
  #L1482a6.  call temp:= `q`(v4) @signature `Lcom/b/a/d/a;.q:()Z` @kind virtual;
  #L1482ac.  v2:= temp;
  #L1482ae.  call `a`(v4, v1) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #Try_start0.  
  #L1482b4.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1482ba.  v1:= 0I;
  #L1482bc.  call temp:= `a`(v5) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L1482c2.  v0:= temp @kind object;
  #L1482c4.  call temp:= `a`(v3, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L1482ca.  v0:= temp @kind object;
  #L1482cc.  call temp:= `b`(v0, v4) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L1482d2.  v0:= temp @kind object;
  #L1482d4.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L1482da.  return v0 @kind object;
  #L1482dc.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L1482de.  if v1 == 0 then goto L1482ec;
  #L1482e2.  v0:= 0I;
  #L1482e4.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L1482ea.  goto L1482da;
  #Try_start1.  
  #L1482ec.  v1:= new `com.b.a.t`;
  #L1482f0.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1482f6.  throw v1;
  #Try_end1.  
  #L1482f8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1482fa.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L148300.  throw v0;
  #L148302.  v0:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #Try_start2.  
  #L148304.  v1:= new `com.b.a.t`;
  #L148308.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14830e.  throw v1;
  #L148310.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L148312.  v1:= new `com.b.a.t`;
  #L148316.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14831c.  throw v1;
  #Try_end2.  
  catch `java.io.EOFException` @[Try_start0..Try_end0] goto L1482dc;
  catch `java.lang.IllegalStateException` @[Try_start0..Try_end0] goto L148302;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L148310;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1482f8;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1482f8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1482f8;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v2 @kind this, `java.io.Reader` v3 @kind object, `java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148358.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;)Lcom/b/a/d/a;` @kind virtual;
  #L14835e.  v0:= temp @kind object;
  #L148360.  call temp:= `a`(v2, v0, v4) @signature `Lcom/b/a/f;.a:(Lcom/b/a/d/a;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L148366.  v1:= temp @kind object;
  #L148368.  call `a`(v1, v0) @signature `Lcom/b/a/f;.a:(Ljava/lang/Object;Lcom/b/a/d/a;)V` @kind static;
  #L14836e.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148380.  call temp:= `a`(v2, v3, v4) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L148386.  v0:= temp @kind object;
  #L148388.  call temp:= `a`(v4) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L14838e.  v1:= temp @kind object;
  #L148390.  call temp:= `cast`(v1, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L148396.  v0:= temp @kind object;
  #L148398.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1483ac.  if v2 != 0 then goto L1483b4;
  #L1483b0.  v0:= 0I;
  #L1483b2.  return v0 @kind object;
  #L1483b4.  v0:= new `java.io.StringReader`;
  #L1483b8.  call `<init>`(v0, v2) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1483be.  call temp:= `a`(v1, v0, v3) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L1483c4.  v0:= temp @kind object;
  #L1483c6.  goto L1483b2;
}
procedure `java.lang.String` `toString`(`com.b.a.f` v2 @kind this) @signature `Lcom/b/a/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1483d8.  v0:= new `java.lang.StringBuilder`;
  #L1483dc.  v1:= "{serializeNulls:" @kind object;
  #L1483e0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1483e6.  v1:= v2.`com.b.a.f.h` @type ^`boolean` @kind boolean;
  #L1483ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1483f0.  v0:= temp @kind object;
  #L1483f2.  v1:= "factories:" @kind object;
  #L1483f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1483fc.  v0:= temp @kind object;
  #L1483fe.  v1:= v2.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L148402.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148408.  v0:= temp @kind object;
  #L14840a.  v1:= ",instanceCreators:" @kind object;
  #L14840e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148414.  v0:= temp @kind object;
  #L148416.  v1:= v2.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L14841a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148420.  v0:= temp @kind object;
  #L148422.  v1:= "}" @kind object;
  #L148426.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14842c.  v0:= temp @kind object;
  #L14842e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148434.  v0:= temp @kind object;
  #L148436.  return v0 @kind object;
}

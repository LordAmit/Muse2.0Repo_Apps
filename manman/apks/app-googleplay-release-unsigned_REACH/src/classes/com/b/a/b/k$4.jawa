record `com.b.a.b.k$4` @kind class @AccessFlag FINAL extends `com.b.a.b.k` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.k$4` v0 @kind this) @signature `Lcom/b/a/b/k$4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L146e40.  call `<init>`(v0) @signature `Lcom/b/a/b/k;.<init>:()V` @kind direct;
  #L146e46.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.b.a.b.k$4` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/b/k$4;.a:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L146e58.  v0:= new `java.lang.UnsupportedOperationException`;
  #L146e5c.  v1:= new `java.lang.StringBuilder`;
  #L146e60.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L146e66.  v2:= "Cannot allocate " @kind object;
  #L146e6a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L146e70.  v1:= temp @kind object;
  #L146e72.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L146e78.  v1:= temp @kind object;
  #L146e7a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L146e80.  v1:= temp @kind object;
  #L146e82.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L146e88.  throw v0;
}

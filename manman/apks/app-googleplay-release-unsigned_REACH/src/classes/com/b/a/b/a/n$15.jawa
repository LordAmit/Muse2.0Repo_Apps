record `com.b.a.b.a.n$15` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$15` v0 @kind this) @signature `Lcom/b/a/b/a/n$15;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L141c80.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L141c86.  return @kind void;
}
procedure `java.net.URI` `a`(`com.b.a.b.a.n$15` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/b/a/n$15;.a:(Lcom/b/a/d/a;)Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L141c98.  v0:= 0I;
  #L141c9a.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L141ca0.  v1:= temp @kind object;
  #L141ca2.  v2:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L141ca6.  if v1 != v2 then goto L141cb2;
  #L141caa.  call `j`(v4) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L141cb0.  return v0 @kind object;
  #Try_start0.  
  #L141cb2.  call temp:= `h`(v4) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L141cb8.  v1:= temp @kind object;
  #L141cba.  v2:= "null" @kind object;
  #L141cbe.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L141cc4.  v2:= temp;
  #L141cc6.  if v2 != 0 then goto L141cb0;
  #L141cca.  v0:= new `java.net.URI`;
  #L141cce.  call `<init>`(v0, v1) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L141cd4.  goto L141cb0;
  #L141cd6.  v0:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L141cd8.  v1:= new `com.b.a.m`;
  #L141cdc.  call `<init>`(v1, v0) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L141ce2.  throw v1;
  catch `java.net.URISyntaxException` @[Try_start0..Try_end0] goto L141cd6;
}
procedure `void` `a`(`com.b.a.b.a.n$15` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$15;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L141d04.  v2:= (`java.net.URI`) v2 @kind object;
  #L141d08.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$15;.a:(Lcom/b/a/d/c;Ljava/net/URI;)V` @kind virtual;
  #L141d0e.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$15` v1 @kind this, `com.b.a.d.c` v2 @kind object, `java.net.URI` v3 @kind object) @signature `Lcom/b/a/b/a/n$15;.a:(Lcom/b/a/d/c;Ljava/net/URI;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L141d20.  if v3 != 0 then goto L141d2e;
  #L141d24.  v0:= 0I;
  #L141d26.  call temp:= `b`(v2, v0) @signature `Lcom/b/a/d/c;.b:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L141d2c.  return @kind void;
  #L141d2e.  call temp:= `toASCIIString`(v3) @signature `Ljava/net/URI;.toASCIIString:()Ljava/lang/String;` @kind virtual;
  #L141d34.  v0:= temp @kind object;
  #L141d36.  goto L141d26;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$15` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$15;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L141d48.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$15;.a:(Lcom/b/a/d/a;)Ljava/net/URI;` @kind virtual;
  #L141d4e.  v0:= temp @kind object;
  #L141d50.  return v0 @kind object;
}

record `com.b.a.c.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.b.a.c.a.a` @AccessFlag FINAL;
  `java.lang.reflect.Type` `com.b.a.c.a.b` @AccessFlag FINAL;
  `int` `com.b.a.c.a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L146e9c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L146ea2.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L146ea8.  v0:= temp @kind object;
  #L146eaa.  call temp:= `a`(v0) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L146eb0.  v0:= temp @kind object;
  #L146eb2.  v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L146eb6.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L146eba.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L146ec0.  v0:= temp @kind object;
  #L146ec2.  v1.`com.b.a.c.a.a` @type ^`java.lang.Class` := v0 @kind object;
  #L146ec6.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L146eca.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L146ed0.  v0:= temp;
  #L146ed2.  v1.`com.b.a.c.a.c` @type ^`int` := v0;
  #L146ed6.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.c.a` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L146ee8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L146eee.  call temp:= `a`(v2) @signature `Lcom/b/a/b/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L146ef4.  v0:= temp @kind object;
  #L146ef6.  v0:= (`java.lang.reflect.Type`) v0 @kind object;
  #L146efa.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L146f00.  v0:= temp @kind object;
  #L146f02.  v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L146f06.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L146f0a.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L146f10.  v0:= temp @kind object;
  #L146f12.  v1.`com.b.a.c.a.a` @type ^`java.lang.Class` := v0 @kind object;
  #L146f16.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L146f1a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L146f20.  v0:= temp;
  #L146f22.  v1.`com.b.a.c.a.c` @type ^`int` := v0;
  #L146f26.  return @kind void;
}
procedure `com.b.a.c.a` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L146f38.  v0:= new `com.b.a.c.a`;
  #L146f3c.  call `<init>`(v0, v1) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L146f42.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.Class` v2 @kind object) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L146f54.  call temp:= `getGenericSuperclass`(v2) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L146f5a.  v0:= temp @kind object;
  #L146f5c.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L146f60.  if v1 == 0 then goto L146f74;
  #L146f64.  v0:= new `java.lang.RuntimeException`;
  #L146f68.  v1:= "Missing type parameter." @kind object;
  #L146f6c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L146f72.  throw v0;
  #L146f74.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L146f78.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L146f7e.  v0:= temp @kind object;
  #L146f80.  v1:= 0I;
  #L146f82.  v0:= v0[v1] @kind object;
  #L146f86.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L146f8c.  v0:= temp @kind object;
  #L146f8e.  return v0 @kind object;
}
procedure `com.b.a.c.a` `b`(`java.lang.Class` v1 @kind object) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L146fa0.  v0:= new `com.b.a.c.a`;
  #L146fa4.  call `<init>`(v0, v1) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L146faa.  return v0 @kind object;
}
procedure `java.lang.Class` `a`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L146fbc.  v0:= v1.`com.b.a.c.a.a` @type ^`java.lang.Class` @kind object;
  #L146fc0.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `b`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L146fd4.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L146fd8.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.b.a.c.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/c/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L146fec.  v0:= instanceof @variable v3 @type ^`com.b.a.c.a` @kind boolean;
  #L146ff0.  if v0 == 0 then goto L147010;
  #L146ff4.  v0:= v2.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L146ff8.  v3:= (`com.b.a.c.a`) v3 @kind object;
  #L146ffc.  v1:= v3.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L147000.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L147006.  v0:= temp;
  #L147008.  if v0 == 0 then goto L147010;
  #L14700c.  v0:= 1I;
  #L14700e.  return v0;
  #L147010.  v0:= 0I;
  #L147012.  goto L14700e;
}
procedure `int` `hashCode`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L147024.  v0:= v1.`com.b.a.c.a.c` @type ^`int`;
  #L147028.  return v0;
}
procedure `java.lang.String` `toString`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14703c.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L147040.  call temp:= `f`(v0) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L147046.  v0:= temp @kind object;
  #L147048.  return v0 @kind object;
}

record `com.b.a.i` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.l` @kind class, `java.lang.Iterable` @kind interface {
  `java.util.List` `com.b.a.i.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.i` v1 @kind this) @signature `Lcom/b/a/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1488c4.  call `<init>`(v1) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L1488ca.  v0:= new `java.util.ArrayList`;
  #L1488ce.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1488d4.  v1.`com.b.a.i.a` @type ^`java.util.List` := v0 @kind object;
  #L1488d8.  return @kind void;
}
procedure `java.lang.Number` `a`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.a:()Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1488ec.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L1488f0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1488f6.  v0:= temp;
  #L1488f8.  v1:= 1I;
  #L1488fa.  if v0 != v1 then goto L14891a;
  #L1488fe.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148902.  v1:= 0I;
  #L148904.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14890a.  v0:= temp @kind object;
  #L14890c.  v0:= (`com.b.a.l`) v0 @kind object;
  #L148910.  call temp:= `a`(v0) @signature `Lcom/b/a/l;.a:()Ljava/lang/Number;` @kind virtual;
  #L148916.  v0:= temp @kind object;
  #L148918.  return v0 @kind object;
  #L14891a.  v0:= new `java.lang.IllegalStateException`;
  #L14891e.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L148924.  throw v0;
}
procedure `void` `a`(`com.b.a.i` v1 @kind this, `com.b.a.l` v2 @kind object) @signature `Lcom/b/a/i;.a:(Lcom/b/a/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148938.  if v2 != 0 then goto L148940;
  #L14893c.  v2:= `@@com.b.a.n.a` @type ^`com.b.a.n` @kind object;
  #L148940.  v0:= v1.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148944.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14894a.  return @kind void;
}
procedure `java.lang.String` `b`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14895c.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148960.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L148966.  v0:= temp;
  #L148968.  v1:= 1I;
  #L14896a.  if v0 != v1 then goto L14898a;
  #L14896e.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148972.  v1:= 0I;
  #L148974.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14897a.  v0:= temp @kind object;
  #L14897c.  v0:= (`com.b.a.l`) v0 @kind object;
  #L148980.  call temp:= `b`(v0) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L148986.  v0:= temp @kind object;
  #L148988.  return v0 @kind object;
  #L14898a.  v0:= new `java.lang.IllegalStateException`;
  #L14898e.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L148994.  throw v0;
}
procedure `double` `c`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.c:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1489a8.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L1489ac.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1489b2.  v0:= temp;
  #L1489b4.  v1:= 1I;
  #L1489b6.  if v0 != v1 then goto L1489d6;
  #L1489ba.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L1489be.  v1:= 0I;
  #L1489c0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1489c6.  v0:= temp @kind object;
  #L1489c8.  v0:= (`com.b.a.l`) v0 @kind object;
  #L1489cc.  call temp:= `c`(v0) @signature `Lcom/b/a/l;.c:()D` @kind virtual;
  #L1489d2.  v0:= temp @kind wide;
  #L1489d4.  return v0 @kind wide;
  #L1489d6.  v0:= new `java.lang.IllegalStateException`;
  #L1489da.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1489e0.  throw v0;
}
procedure `long` `d`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1489f4.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L1489f8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1489fe.  v0:= temp;
  #L148a00.  v1:= 1I;
  #L148a02.  if v0 != v1 then goto L148a22;
  #L148a06.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148a0a.  v1:= 0I;
  #L148a0c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L148a12.  v0:= temp @kind object;
  #L148a14.  v0:= (`com.b.a.l`) v0 @kind object;
  #L148a18.  call temp:= `d`(v0) @signature `Lcom/b/a/l;.d:()J` @kind virtual;
  #L148a1e.  v0:= temp @kind wide;
  #L148a20.  return v0 @kind wide;
  #L148a22.  v0:= new `java.lang.IllegalStateException`;
  #L148a26.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L148a2c.  throw v0;
}
procedure `int` `e`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148a40.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148a44.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L148a4a.  v0:= temp;
  #L148a4c.  v1:= 1I;
  #L148a4e.  if v0 != v1 then goto L148a6e;
  #L148a52.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148a56.  v1:= 0I;
  #L148a58.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L148a5e.  v0:= temp @kind object;
  #L148a60.  v0:= (`com.b.a.l`) v0 @kind object;
  #L148a64.  call temp:= `e`(v0) @signature `Lcom/b/a/l;.e:()I` @kind virtual;
  #L148a6a.  v0:= temp;
  #L148a6c.  return v0;
  #L148a6e.  v0:= new `java.lang.IllegalStateException`;
  #L148a72.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L148a78.  throw v0;
}
procedure `boolean` `equals`(`com.b.a.i` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148a8c.  if v3 == v2 then goto L148ab0;
  #L148a90.  v0:= instanceof @variable v3 @type ^`com.b.a.i` @kind boolean;
  #L148a94.  if v0 == 0 then goto L148ab4;
  #L148a98.  v3:= (`com.b.a.i`) v3 @kind object;
  #L148a9c.  v0:= v3.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148aa0.  v1:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148aa4.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L148aaa.  v0:= temp;
  #L148aac.  if v0 == 0 then goto L148ab4;
  #L148ab0.  v0:= 1I;
  #L148ab2.  return v0;
  #L148ab4.  v0:= 0I;
  #L148ab6.  goto L148ab2;
}
procedure `boolean` `f`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148ac8.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148acc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L148ad2.  v0:= temp;
  #L148ad4.  v1:= 1I;
  #L148ad6.  if v0 != v1 then goto L148af6;
  #L148ada.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148ade.  v1:= 0I;
  #L148ae0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L148ae6.  v0:= temp @kind object;
  #L148ae8.  v0:= (`com.b.a.l`) v0 @kind object;
  #L148aec.  call temp:= `f`(v0) @signature `Lcom/b/a/l;.f:()Z` @kind virtual;
  #L148af2.  v0:= temp;
  #L148af4.  return v0;
  #L148af6.  v0:= new `java.lang.IllegalStateException`;
  #L148afa.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L148b00.  throw v0;
}
procedure `int` `hashCode`(`com.b.a.i` v1 @kind this) @signature `Lcom/b/a/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148b14.  v0:= v1.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148b18.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L148b1e.  v0:= temp;
  #L148b20.  return v0;
}
procedure `java.util.Iterator` `iterator`(`com.b.a.i` v1 @kind this) @signature `Lcom/b/a/i;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148b34.  v0:= v1.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L148b38.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L148b3e.  v0:= temp @kind object;
  #L148b40.  return v0 @kind object;
}

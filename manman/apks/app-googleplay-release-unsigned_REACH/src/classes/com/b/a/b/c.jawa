record `com.b.a.b.c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `com.b.a.b.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.c` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/b/a/b/c;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1452a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1452ae.  v0.`com.b.a.b.c.a` @type ^`java.util.Map` := v1 @kind object;
  #L1452b2.  return @kind void;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1452c4.  v0:= 0I;
  #Try_start0.  
  #L1452c6.  v0:= new `java.lang.Class`[v0];
  #L1452ca.  call temp:= `getDeclaredConstructor`(v3, v0) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L1452d0.  v1:= temp @kind object;
  #L1452d2.  call temp:= `isAccessible`(v1) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L1452d8.  v0:= temp;
  #L1452da.  if v0 != 0 then goto L1452e6;
  #L1452de.  v0:= 1I;
  #L1452e0.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L1452e6.  v0:= new `com.b.a.b.c$8`;
  #L1452ea.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/c$8;.<init>:(Lcom/b/a/b/c;Ljava/lang/reflect/Constructor;)V` @kind direct;
  #Try_end0.  
  #L1452f0.  return v0 @kind object;
  #L1452f2.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L1452f4.  v0:= 0I;
  #L1452f6.  goto L1452f0;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L1452f2;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v3 @kind this, `java.lang.reflect.Type` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L145318.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L14531c.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L145322.  v0:= temp;
  #L145324.  if v0 == 0 then goto L1453a4;
  #L145328.  v0:= constclass @type ^`java.util.SortedSet` @kind object;
  #L14532c.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L145332.  v0:= temp;
  #L145334.  if v0 == 0 then goto L145344;
  #L145338.  v0:= new `com.b.a.b.c$9`;
  #L14533c.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$9;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L145342.  return v0 @kind object;
  #L145344.  v0:= constclass @type ^`java.util.EnumSet` @kind object;
  #L145348.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14534e.  v0:= temp;
  #L145350.  if v0 == 0 then goto L145360;
  #L145354.  v0:= new `com.b.a.b.c$10`;
  #L145358.  call `<init>`(v0, v3, v4) @signature `Lcom/b/a/b/c$10;.<init>:(Lcom/b/a/b/c;Ljava/lang/reflect/Type;)V` @kind direct;
  #L14535e.  goto L145342;
  #L145360.  v0:= constclass @type ^`java.util.Set` @kind object;
  #L145364.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14536a.  v0:= temp;
  #L14536c.  if v0 == 0 then goto L14537c;
  #L145370.  v0:= new `com.b.a.b.c$11`;
  #L145374.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$11;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14537a.  goto L145342;
  #L14537c.  v0:= constclass @type ^`java.util.Queue` @kind object;
  #L145380.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L145386.  v0:= temp;
  #L145388.  if v0 == 0 then goto L145398;
  #L14538c.  v0:= new `com.b.a.b.c$12`;
  #L145390.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$12;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L145396.  goto L145342;
  #L145398.  v0:= new `com.b.a.b.c$13`;
  #L14539c.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$13;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L1453a2.  goto L145342;
  #L1453a4.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L1453a8.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1453ae.  v0:= temp;
  #L1453b0.  if v0 == 0 then goto L14545e;
  #L1453b4.  v0:= constclass @type ^`java.util.concurrent.ConcurrentNavigableMap` @kind object;
  #L1453b8.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1453be.  v0:= temp;
  #L1453c0.  if v0 == 0 then goto L1453d0;
  #L1453c4.  v0:= new `com.b.a.b.c$14`;
  #L1453c8.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$14;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L1453ce.  goto L145342;
  #L1453d0.  v0:= constclass @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L1453d4.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1453da.  v0:= temp;
  #L1453dc.  if v0 == 0 then goto L1453ec;
  #L1453e0.  v0:= new `com.b.a.b.c$2`;
  #L1453e4.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$2;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L1453ea.  goto L145342;
  #L1453ec.  v0:= constclass @type ^`java.util.SortedMap` @kind object;
  #L1453f0.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1453f6.  v0:= temp;
  #L1453f8.  if v0 == 0 then goto L145408;
  #L1453fc.  v0:= new `com.b.a.b.c$3`;
  #L145400.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$3;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L145406.  goto L145342;
  #L145408.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14540c.  if v0 == 0 then goto L145450;
  #L145410.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L145414.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L145418.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14541e.  v1:= temp @kind object;
  #L145420.  v2:= 0I;
  #L145422.  v1:= v1[v2] @kind object;
  #L145426.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L14542c.  v1:= temp @kind object;
  #L14542e.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L145434.  v1:= temp @kind object;
  #L145436.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14543c.  v0:= temp;
  #L14543e.  if v0 != 0 then goto L145450;
  #L145442.  v0:= new `com.b.a.b.c$4`;
  #L145446.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$4;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14544c.  goto L145342;
  #L145450.  v0:= new `com.b.a.b.c$5`;
  #L145454.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$5;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14545a.  goto L145342;
  #L14545e.  v0:= 0I;
  #L145460.  goto L145342;
}
procedure `com.b.a.b.h` `b`(`com.b.a.b.c` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/c;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L145474.  v0:= new `com.b.a.b.c$6`;
  #L145478.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/b/a/b/c$6;.<init>:(Lcom/b/a/b/c;Ljava/lang/Class;Ljava/lang/reflect/Type;)V` @kind direct;
  #L14547e.  return v0 @kind object;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v3 @kind this, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L145490.  call temp:= `b`(v4) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L145496.  v2:= temp @kind object;
  #L145498.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L14549e.  v1:= temp @kind object;
  #L1454a0.  v0:= v3.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L1454a4.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1454aa.  v0:= temp @kind object;
  #L1454ac.  v0:= (`com.b.a.h`) v0 @kind object;
  #L1454b0.  if v0 == 0 then goto L1454c2;
  #L1454b4.  v1:= new `com.b.a.b.c$1`;
  #L1454b8.  call `<init>`(v1, v3, v0, v2) @signature `Lcom/b/a/b/c$1;.<init>:(Lcom/b/a/b/c;Lcom/b/a/h;Ljava/lang/reflect/Type;)V` @kind direct;
  #L1454be.  v0:= v1 @kind object;
  #L1454c0.  return v0 @kind object;
  #L1454c2.  v0:= v3.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L1454c6.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1454cc.  v0:= temp @kind object;
  #L1454ce.  v0:= (`com.b.a.h`) v0 @kind object;
  #L1454d2.  if v0 == 0 then goto L1454e4;
  #L1454d6.  v1:= new `com.b.a.b.c$7`;
  #L1454da.  call `<init>`(v1, v3, v0, v2) @signature `Lcom/b/a/b/c$7;.<init>:(Lcom/b/a/b/c;Lcom/b/a/h;Ljava/lang/reflect/Type;)V` @kind direct;
  #L1454e0.  v0:= v1 @kind object;
  #L1454e2.  goto L1454c0;
  #L1454e4.  call temp:= `a`(v3, v1) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L1454ea.  v0:= temp @kind object;
  #L1454ec.  if v0 != 0 then goto L1454c0;
  #L1454f0.  call temp:= `a`(v3, v2, v1) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L1454f6.  v0:= temp @kind object;
  #L1454f8.  if v0 != 0 then goto L1454c0;
  #L1454fc.  call temp:= `b`(v3, v2, v1) @signature `Lcom/b/a/b/c;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L145502.  v0:= temp @kind object;
  #L145504.  goto L1454c0;
}
procedure `java.lang.String` `toString`(`com.b.a.b.c` v1 @kind this) @signature `Lcom/b/a/b/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L145518.  v0:= v1.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L14551c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L145522.  v0:= temp @kind object;
  #L145524.  return v0 @kind object;
}

record `com.b.a.f$6` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.v` `com.b.a.f$6.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.f$6` v0 @kind this, `com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f$6;.<init>:(Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1479f4.  v0.`com.b.a.f$6.a` @type ^`com.b.a.v` := v1 @kind object;
  #L1479f8.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L1479fe.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicLongArray` `a`(`com.b.a.f$6` v8 @kind this, `com.b.a.d.a` v9 @kind object) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicLongArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L147a10.  v2:= new `java.util.ArrayList`;
  #L147a14.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L147a1a.  call `a`(v9) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L147a20.  call temp:= `e`(v9) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L147a26.  v0:= temp;
  #L147a28.  if v0 == 0 then goto L147a54;
  #L147a2c.  v0:= v8.`com.b.a.f$6.a` @type ^`com.b.a.v` @kind object;
  #L147a30.  call temp:= `b`(v0, v9) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L147a36.  v0:= temp @kind object;
  #L147a38.  v0:= (`java.lang.Number`) v0 @kind object;
  #L147a3c.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L147a42.  v0:= temp @kind wide;
  #L147a44.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L147a4a.  v0:= temp @kind object;
  #L147a4c.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L147a52.  goto L147a20;
  #L147a54.  call `b`(v9) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L147a5a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L147a60.  v3:= temp;
  #L147a62.  v4:= new `java.util.concurrent.atomic.AtomicLongArray`;
  #L147a66.  call `<init>`(v4, v3) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.<init>:(I)V` @kind direct;
  #L147a6c.  v0:= 0I;
  #L147a6e.  v1:= v0;
  #L147a70.  if v1 >= v3 then goto L147a96;
  #L147a74.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L147a7a.  v0:= temp @kind object;
  #L147a7c.  v0:= (`java.lang.Long`) v0 @kind object;
  #L147a80.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L147a86.  v6:= temp @kind wide;
  #L147a88.  call `set`(v4, v1, v6) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.set:(IJ)V` @kind virtual;
  #L147a8e.  v0:= v1 + 1;
  #L147a92.  v1:= v0;
  #L147a94.  goto L147a70;
  #L147a96.  return v4 @kind object;
}
procedure `void` `a`(`com.b.a.f$6` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L147aa8.  v2:= (`java.util.concurrent.atomic.AtomicLongArray`) v2 @kind object;
  #L147aac.  call `a`(v0, v1, v2) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicLongArray;)V` @kind virtual;
  #L147ab2.  return @kind void;
}
procedure `void` `a`(`com.b.a.f$6` v6 @kind this, `com.b.a.d.c` v7 @kind object, `java.util.concurrent.atomic.AtomicLongArray` v8 @kind object) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicLongArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L147ac4.  call temp:= `b`(v7) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L147aca.  v0:= 0I;
  #L147acc.  call temp:= `length`(v8) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.length:()I` @kind virtual;
  #L147ad2.  v1:= temp;
  #L147ad4.  if v0 >= v1 then goto L147af8;
  #L147ad8.  v2:= v6.`com.b.a.f$6.a` @type ^`com.b.a.v` @kind object;
  #L147adc.  call temp:= `get`(v8, v0) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.get:(I)J` @kind virtual;
  #L147ae2.  v4:= temp @kind wide;
  #L147ae4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L147aea.  v3:= temp @kind object;
  #L147aec.  call `a`(v2, v7, v3) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L147af2.  v0:= v0 + 1;
  #L147af6.  goto L147ad4;
  #L147af8.  call temp:= `c`(v7) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L147afe.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$6` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$6;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L147b10.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicLongArray;` @kind virtual;
  #L147b16.  v0:= temp @kind object;
  #L147b18.  return v0 @kind object;
}

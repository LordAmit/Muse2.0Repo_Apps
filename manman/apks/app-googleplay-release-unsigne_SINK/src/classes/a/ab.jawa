record `a.ab` @kind class @AccessFlag PUBLIC_FINAL {
  `a.a` `a.ab.a` @AccessFlag FINAL;
  `java.net.Proxy` `a.ab.b` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `a.ab.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`a.ab` v2 @kind this, `a.a` v3 @kind object, `java.net.Proxy` v4 @kind object, `java.net.InetSocketAddress` v5 @kind object) @signature `La/ab;.<init>:(La/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L08a684.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08a68a.  if v3 != 0 then goto L08a69e;
  #L08a68e.  v0:= new `java.lang.NullPointerException`;
  #L08a692.  v1:= "address == null" @kind object;
  #L08a696.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a69c.  throw v0;
  #L08a69e.  if v4 != 0 then goto L08a6b2;
  #L08a6a2.  v0:= new `java.lang.NullPointerException`;
  #L08a6a6.  v1:= "proxy == null" @kind object;
  #L08a6aa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a6b0.  throw v0;
  #L08a6b2.  if v5 != 0 then goto L08a6c6;
  #L08a6b6.  v0:= new `java.lang.NullPointerException`;
  #L08a6ba.  v1:= "inetSocketAddress == null" @kind object;
  #L08a6be.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a6c4.  throw v0;
  #L08a6c6.  v2.`a.ab.a` @type ^`a.a` := v3 @kind object;
  #L08a6ca.  v2.`a.ab.b` @type ^`java.net.Proxy` := v4 @kind object;
  #L08a6ce.  v2.`a.ab.c` @type ^`java.net.InetSocketAddress` := v5 @kind object;
  #L08a6d2.  return @kind void;
}
procedure `a.a` `a`(`a.ab` v1 @kind this) @signature `La/ab;.a:()La/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a6e4.  v0:= v1.`a.ab.a` @type ^`a.a` @kind object;
  #L08a6e8.  return v0 @kind object;
}
procedure `java.net.Proxy` `b`(`a.ab` v1 @kind this) @signature `La/ab;.b:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a6fc.  v0:= v1.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L08a700.  return v0 @kind object;
}
procedure `java.net.InetSocketAddress` `c`(`a.ab` v1 @kind this) @signature `La/ab;.c:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a714.  v0:= v1.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L08a718.  return v0 @kind object;
}
procedure `boolean` `d`(`a.ab` v2 @kind this) @signature `La/ab;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a72c.  v0:= v2.`a.ab.a` @type ^`a.a` @kind object;
  #L08a730.  v0:= v0.`a.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08a734.  if v0 == 0 then goto L08a750;
  #L08a738.  v0:= v2.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L08a73c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L08a742.  v0:= temp @kind object;
  #L08a744.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L08a748.  if v0 != v1 then goto L08a750;
  #L08a74c.  v0:= 1I;
  #L08a74e.  return v0;
  #L08a750.  v0:= 0I;
  #L08a752.  goto L08a74e;
}
procedure `boolean` `equals`(`a.ab` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/ab;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08a764.  v0:= 0I;
  #L08a766.  v1:= instanceof @variable v4 @type ^`a.ab` @kind boolean;
  #L08a76a.  if v1 == 0 then goto L08a7b0;
  #L08a76e.  v4:= (`a.ab`) v4 @kind object;
  #L08a772.  v1:= v3.`a.ab.a` @type ^`a.a` @kind object;
  #L08a776.  v2:= v4.`a.ab.a` @type ^`a.a` @kind object;
  #L08a77a.  call temp:= `equals`(v1, v2) @signature `La/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a780.  v1:= temp;
  #L08a782.  if v1 == 0 then goto L08a7b0;
  #L08a786.  v1:= v3.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L08a78a.  v2:= v4.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L08a78e.  call temp:= `equals`(v1, v2) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a794.  v1:= temp;
  #L08a796.  if v1 == 0 then goto L08a7b0;
  #L08a79a.  v1:= v3.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L08a79e.  v2:= v4.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L08a7a2.  call temp:= `equals`(v1, v2) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a7a8.  v1:= temp;
  #L08a7aa.  if v1 == 0 then goto L08a7b0;
  #L08a7ae.  v0:= 1I;
  #L08a7b0.  return v0;
}
procedure `int` `hashCode`(`a.ab` v2 @kind this) @signature `La/ab;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a7c4.  v0:= v2.`a.ab.a` @type ^`a.a` @kind object;
  #L08a7c8.  call temp:= `hashCode`(v0) @signature `La/a;.hashCode:()I` @kind virtual;
  #L08a7ce.  v0:= temp;
  #L08a7d0.  v0:= v0 + 527;
  #L08a7d4.  v0:= v0 * 31;
  #L08a7d8.  v1:= v2.`a.ab.b` @type ^`java.net.Proxy` @kind object;
  #L08a7dc.  call temp:= `hashCode`(v1) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L08a7e2.  v1:= temp;
  #L08a7e4.  v0:= v0 + v1 @kind int;
  #L08a7e6.  v0:= v0 * 31;
  #L08a7ea.  v1:= v2.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L08a7ee.  call temp:= `hashCode`(v1) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L08a7f4.  v1:= temp;
  #L08a7f6.  v0:= v0 + v1 @kind int;
  #L08a7f8.  return v0;
}
procedure `java.lang.String` `toString`(`a.ab` v2 @kind this) @signature `La/ab;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a80c.  v0:= new `java.lang.StringBuilder`;
  #L08a810.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a816.  v1:= "Route{" @kind object;
  #L08a81a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a820.  v0:= temp @kind object;
  #L08a822.  v1:= v2.`a.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L08a826.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a82c.  v0:= temp @kind object;
  #L08a82e.  v1:= "}" @kind object;
  #L08a832.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a838.  v0:= temp @kind object;
  #L08a83a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a840.  v0:= temp @kind object;
  #L08a842.  return v0 @kind object;
}

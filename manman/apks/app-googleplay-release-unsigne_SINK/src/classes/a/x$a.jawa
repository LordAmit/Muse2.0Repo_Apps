record `a.x$a` @kind class @AccessFlag PUBLIC {
  `a.r` `a.x$a.a` @AccessFlag ;
  `java.lang.String` `a.x$a.b` @AccessFlag ;
  `a.q$a` `a.x$a.c` @AccessFlag ;
  `a.y` `a.x$a.d` @AccessFlag ;
  `java.lang.Object` `a.x$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`a.x$a` v1 @kind this) @signature `La/x$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L091278.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L09127e.  v0:= "GET" @kind object;
  #L091282.  v1.`a.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L091286.  v0:= new `a.q$a`;
  #L09128a.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L091290.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L091294.  return @kind void;
}
procedure `void` `<init>`(`a.x$a` v1 @kind this, `a.x` v2 @kind object) @signature `La/x$a;.<init>:(La/x;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L0912a8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0912ae.  v0:= v2.`a.x.a` @type ^`a.r` @kind object;
  #L0912b2.  v1.`a.x$a.a` @type ^`a.r` := v0 @kind object;
  #L0912b6.  v0:= v2.`a.x.b` @type ^`java.lang.String` @kind object;
  #L0912ba.  v1.`a.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L0912be.  v0:= v2.`a.x.d` @type ^`a.y` @kind object;
  #L0912c2.  v1.`a.x$a.d` @type ^`a.y` := v0 @kind object;
  #L0912c6.  v0:= v2.`a.x.e` @type ^`java.lang.Object` @kind object;
  #L0912ca.  v1.`a.x$a.e` @type ^`java.lang.Object` := v0 @kind object;
  #L0912ce.  v0:= v2.`a.x.c` @type ^`a.q` @kind object;
  #L0912d2.  call temp:= `b`(v0) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L0912d8.  v0:= temp @kind object;
  #L0912da.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L0912de.  return @kind void;
}
procedure `a.x$a` `a`(`a.x$a` v1 @kind this, `a.q` v2 @kind object) @signature `La/x$a;.a:(La/q;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0912f0.  call temp:= `b`(v2) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L0912f6.  v0:= temp @kind object;
  #L0912f8.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L0912fc.  return v1 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v2 @kind this, `a.r` v3 @kind object) @signature `La/x$a;.a:(La/r;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L091310.  if v3 != 0 then goto L091324;
  #L091314.  v0:= new `java.lang.NullPointerException`;
  #L091318.  v1:= "url == null" @kind object;
  #L09131c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L091322.  throw v0;
  #L091324.  v2.`a.x$a.a` @type ^`a.r` := v3 @kind object;
  #L091328.  return v2 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L09133c.  v6:= 4I;
  #L09133e.  v5:= 3I;
  #L091340.  v1:= 1I;
  #L091342.  v2:= 0I;
  #L091344.  if v8 != 0 then goto L091358;
  #L091348.  v0:= new `java.lang.NullPointerException`;
  #L09134c.  v1:= "url == null" @kind object;
  #L091350.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L091356.  throw v0;
  #L091358.  v3:= "ws:" @kind object;
  #L09135c.  v0:= v8 @kind object;
  #L09135e.  v4:= v2;
  #L091360.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L091366.  v0:= temp;
  #L091368.  if v0 == 0 then goto L0913d8;
  #L09136c.  v0:= new `java.lang.StringBuilder`;
  #L091370.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L091376.  v1:= "http:" @kind object;
  #L09137a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091380.  v0:= temp @kind object;
  #L091382.  call temp:= `substring`(v8, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L091388.  v1:= temp @kind object;
  #L09138a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091390.  v0:= temp @kind object;
  #L091392.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L091398.  v8:= temp @kind object;
  #L09139a.  call temp:= `e`(v8) @signature `La/r;.e:(Ljava/lang/String;)La/r;` @kind static;
  #L0913a0.  v0:= temp @kind object;
  #L0913a2.  if v0 != 0 then goto L09141e;
  #L0913a6.  v0:= new `java.lang.IllegalArgumentException`;
  #L0913aa.  v1:= new `java.lang.StringBuilder`;
  #L0913ae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0913b4.  v2:= "unexpected url: " @kind object;
  #L0913b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0913be.  v1:= temp @kind object;
  #L0913c0.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0913c6.  v1:= temp @kind object;
  #L0913c8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0913ce.  v1:= temp @kind object;
  #L0913d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0913d6.  throw v0;
  #L0913d8.  v3:= "wss:" @kind object;
  #L0913dc.  v0:= v8 @kind object;
  #L0913de.  v4:= v2;
  #L0913e0.  v5:= v6;
  #L0913e2.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L0913e8.  v0:= temp;
  #L0913ea.  if v0 == 0 then goto L09139a;
  #L0913ee.  v0:= new `java.lang.StringBuilder`;
  #L0913f2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0913f8.  v1:= "https:" @kind object;
  #L0913fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091402.  v0:= temp @kind object;
  #L091404.  call temp:= `substring`(v8, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L09140a.  v1:= temp @kind object;
  #L09140c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091412.  v0:= temp @kind object;
  #L091414.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L09141a.  v8:= temp @kind object;
  #L09141c.  goto L09139a;
  #L09141e.  call temp:= `a`(v7, v0) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L091424.  v0:= temp @kind object;
  #L091426.  return v0 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v3 @kind this, `java.lang.String` v4 @kind object, `a.y` v5 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L091438.  if v4 != 0 then goto L09144c;
  #L09143c.  v0:= new `java.lang.NullPointerException`;
  #L091440.  v1:= "method == null" @kind object;
  #L091444.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L09144a.  throw v0;
  #L09144c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L091452.  v0:= temp;
  #L091454.  if v0 != 0 then goto L091468;
  #L091458.  v0:= new `java.lang.IllegalArgumentException`;
  #L09145c.  v1:= "method.length() == 0" @kind object;
  #L091460.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L091466.  throw v0;
  #L091468.  if v5 == 0 then goto L0914b6;
  #L09146c.  call temp:= `c`(v4) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L091472.  v0:= temp;
  #L091474.  if v0 != 0 then goto L0914b6;
  #L091478.  v0:= new `java.lang.IllegalArgumentException`;
  #L09147c.  v1:= new `java.lang.StringBuilder`;
  #L091480.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L091486.  v2:= "method " @kind object;
  #L09148a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091490.  v1:= temp @kind object;
  #L091492.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091498.  v1:= temp @kind object;
  #L09149a.  v2:= " must not have a request body." @kind object;
  #L09149e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0914a4.  v1:= temp @kind object;
  #L0914a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0914ac.  v1:= temp @kind object;
  #L0914ae.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0914b4.  throw v0;
  #L0914b6.  if v5 != 0 then goto L091504;
  #L0914ba.  call temp:= `b`(v4) @signature `La/a/c/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L0914c0.  v0:= temp;
  #L0914c2.  if v0 == 0 then goto L091504;
  #L0914c6.  v0:= new `java.lang.IllegalArgumentException`;
  #L0914ca.  v1:= new `java.lang.StringBuilder`;
  #L0914ce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0914d4.  v2:= "method " @kind object;
  #L0914d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0914de.  v1:= temp @kind object;
  #L0914e0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0914e6.  v1:= temp @kind object;
  #L0914e8.  v2:= " must have a request body." @kind object;
  #L0914ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0914f2.  v1:= temp @kind object;
  #L0914f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0914fa.  v1:= temp @kind object;
  #L0914fc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L091502.  throw v0;
  #L091504.  v3.`a.x$a.b` @type ^`java.lang.String` := v4 @kind object;
  #L091508.  v3.`a.x$a.d` @type ^`a.y` := v5 @kind object;
  #L09150c.  return v3 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091520.  v0:= v1.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L091524.  call temp:= `c`(v0, v2, v3) @signature `La/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L09152a.  return v1 @kind object;
}
procedure `a.x` `a`(`a.x$a` v2 @kind this) @signature `La/x$a;.a:()La/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L09153c.  v0:= v2.`a.x$a.a` @type ^`a.r` @kind object;
  #L091540.  if v0 != 0 then goto L091554;
  #L091544.  v0:= new `java.lang.IllegalStateException`;
  #L091548.  v1:= "url == null" @kind object;
  #L09154c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L091552.  throw v0;
  #L091554.  v0:= new `a.x`;
  #L091558.  call `<init>`(v0, v2) @signature `La/x;.<init>:(La/x$a;)V` @kind direct;
  #L09155e.  return v0 @kind object;
}
procedure `a.x$a` `b`(`a.x$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091570.  v0:= v1.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L091574.  call temp:= `b`(v0, v2) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @kind virtual;
  #L09157a.  return v1 @kind object;
}

record `a.a.e.g$c$3` @kind class @AccessFlag  extends `a.a.b` @kind class {
  `a.a.e.n` `a.a.e.g$c$3.a` @AccessFlag FINAL_SYNTHETIC;
  `a.a.e.g$c` `a.a.e.g$c$3.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$c$3` v0 @kind this, `a.a.e.g$c` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `a.a.e.n` v4 @kind object) @signature `La/a/e/g$c$3;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/n;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L082f80.  v0.`a.a.e.g$c$3.c` @type ^`a.a.e.g$c` := v1 @kind object;
  #L082f84.  v0.`a.a.e.g$c$3.a` @type ^`a.a.e.n` := v4 @kind object;
  #L082f88.  call `<init>`(v0, v2, v3) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L082f8e.  return @kind void;
}
procedure `void` `b`(`a.a.e.g$c$3` v2 @kind this) @signature `La/a/e/g$c$3;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L082fa0.  v0:= v2.`a.a.e.g$c$3.c` @type ^`a.a.e.g$c` @kind object;
  #L082fa4.  v0:= v0.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L082fa8.  v0:= v0.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L082fac.  v1:= v2.`a.a.e.g$c$3.a` @type ^`a.a.e.n` @kind object;
  #L082fb0.  call `a`(v0, v1) @signature `La/a/e/j;.a:(La/a/e/n;)V` @kind virtual;
  #Try_end0.  
  #L082fb6.  return @kind void;
  #L082fb8.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L082fba.  goto L082fb6;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L082fb8;
}

record `a.a.e.l` @kind class @AccessFlag FINAL {
  `java.util.concurrent.CountDownLatch` `a.a.e.l.a` @AccessFlag PRIVATE_FINAL;
  `long` `a.a.e.l.b` @AccessFlag PRIVATE;
  `long` `a.a.e.l.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L087470.  v2:= -1L;
  #L087474.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08747a.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L08747e.  v1:= 1I;
  #L087480.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L087486.  v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L08748a.  v4.`a.a.e.l.b` @type ^`long` := v2 @kind wide;
  #L08748e.  v4.`a.a.e.l.c` @type ^`long` := v2 @kind wide;
  #L087492.  return @kind void;
}
procedure `void` `a`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0874a4.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L0874a8.  v2:= -1L;
  #L0874ac.  v0:= lcmp(v0, v2);
  #L0874b0.  if v0 == 0 then goto L0874c0;
  #L0874b4.  v0:= new `java.lang.IllegalStateException`;
  #L0874b8.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L0874be.  throw v0;
  #L0874c0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0874c6.  v0:= temp @kind wide;
  #L0874c8.  v4.`a.a.e.l.b` @type ^`long` := v0 @kind wide;
  #L0874cc.  return @kind void;
}
procedure `void` `b`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0874e0.  v2:= -1L;
  #L0874e4.  v0:= v4.`a.a.e.l.c` @type ^`long` @kind wide;
  #L0874e8.  v0:= lcmp(v0, v2);
  #L0874ec.  if v0 != 0 then goto L0874fc;
  #L0874f0.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L0874f4.  v0:= lcmp(v0, v2);
  #L0874f8.  if v0 != 0 then goto L087508;
  #L0874fc.  v0:= new `java.lang.IllegalStateException`;
  #L087500.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L087506.  throw v0;
  #L087508.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L08750e.  v0:= temp @kind wide;
  #L087510.  v4.`a.a.e.l.c` @type ^`long` := v0 @kind wide;
  #L087514.  v0:= v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L087518.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L08751e.  return @kind void;
}
procedure `void` `c`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L087530.  v2:= -1L;
  #L087534.  v0:= v4.`a.a.e.l.c` @type ^`long` @kind wide;
  #L087538.  v0:= lcmp(v0, v2);
  #L08753c.  if v0 != 0 then goto L08754c;
  #L087540.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L087544.  v0:= lcmp(v0, v2);
  #L087548.  if v0 != 0 then goto L087558;
  #L08754c.  v0:= new `java.lang.IllegalStateException`;
  #L087550.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L087556.  throw v0;
  #L087558.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L08755c.  v2:= 1L;
  #L087560.  v0:= v0 - v2 @kind long;
  #L087562.  v4.`a.a.e.l.c` @type ^`long` := v0 @kind wide;
  #L087566.  v0:= v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L08756a.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L087570.  return @kind void;
}

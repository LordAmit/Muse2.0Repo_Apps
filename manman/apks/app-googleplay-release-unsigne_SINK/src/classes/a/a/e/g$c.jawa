record `a.a.e.g$c` @kind class @AccessFlag  extends `a.a.b` @kind class, `a.a.e.h$b` @kind interface {
  `a.a.e.h` `a.a.e.g$c.a` @AccessFlag FINAL;
  `a.a.e.g` `a.a.e.g$c.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$c` v4 @kind this, `a.a.e.g` v5 @kind object, `a.a.e.h` v6 @kind object) @signature `La/a/e/g$c;.<init>:(La/a/e/g;La/a/e/h;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L082fdc.  v4.`a.a.e.g$c.c` @type ^`a.a.e.g` := v5 @kind object;
  #L082fe0.  v0:= "OkHttp %s" @kind object;
  #L082fe4.  v1:= 1I;
  #L082fe6.  v1:= new `java.lang.Object`[v1];
  #L082fea.  v2:= 0I;
  #L082fec.  v3:= v5.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L082ff0.  v1[v2]:= v3 @kind object;
  #L082ff4.  call `<init>`(v4, v0, v1) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L082ffa.  v4.`a.a.e.g$c.a` @type ^`a.a.e.h` := v6 @kind object;
  #L082ffe.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v6 @kind this, `a.a.e.n` v7 @kind object) @signature `La/a/e/g$c;.a:(La/a/e/n;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L083010.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L083014.  v1:= new `a.a.e.g$c$3`;
  #L083018.  v2:= "OkHttp %s ACK Settings" @kind object;
  #L08301c.  v3:= 1I;
  #L08301e.  v3:= new `java.lang.Object`[v3];
  #L083022.  v4:= 0I;
  #L083024.  v5:= v6.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083028.  v5:= v5.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L08302c.  v3[v4]:= v5 @kind object;
  #L083030.  call `<init>`(v1, v6, v2, v3, v7) @signature `La/a/e/g$c$3;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/n;)V` @kind direct;
  #L083036.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L08303c.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v0 @kind this) @signature `La/a/e/g$c;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L083050.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `La/a/e/g$c;.a:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L083064.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v1 @kind this, `int` v2 , `int` v3 , `java.util.List` v4 @kind object) @signature `La/a/e/g$c;.a:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L083078.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08307c.  call `a`(v0, v3, v4) @signature `La/a/e/g;.a:(ILjava/util/List;)V` @kind virtual;
  #L083082.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v4 @kind this, `int` v5 , `long` v6 ) @signature `La/a/e/g$c;.a:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L083094.  if v5 != 0 then goto L0830c0;
  #L083098.  v1:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08309c.  @monitorenter v1
  #Try_start0.  
  #L08309e.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0830a2.  v2:= v0.`a.a.e.g.k` @type ^`long` @kind wide;
  #L0830a6.  v2:= v2 + v6 @kind long;
  #L0830a8.  v0.`a.a.e.g.k` @type ^`long` := v2 @kind wide;
  #L0830ac.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0830b0.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L0830b6.  @monitorexit v1
  #L0830b8.  return @kind void;
  #L0830ba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0830bc.  @monitorexit v1
  #Try_end0.  
  #L0830be.  throw v0;
  #L0830c0.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0830c4.  call temp:= `a`(v0, v5) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L0830ca.  v1:= temp @kind object;
  #L0830cc.  if v1 == 0 then goto L0830b8;
  #L0830d0.  @monitorenter v1
  #Try_start1.  
  #L0830d2.  call `a`(v1, v6) @signature `La/a/e/i;.a:(J)V` @kind virtual;
  #L0830d8.  @monitorexit v1
  #L0830da.  goto L0830b8;
  #L0830dc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0830de.  @monitorexit v1
  #Try_end1.  
  #L0830e0.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0830ba;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0830dc;
}
procedure `void` `a`(`a.a.e.g$c` v1 @kind this, `int` v2 , `a.a.e.b` v3 @kind object) @signature `La/a/e/g$c;.a:(ILa/a/e/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08310c.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083110.  call temp:= `d`(v0, v2) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L083116.  v0:= temp;
  #L083118.  if v0 == 0 then goto L083128;
  #L08311c.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083120.  call `c`(v0, v2, v3) @signature `La/a/e/g;.c:(ILa/a/e/b;)V` @kind virtual;
  #L083126.  return @kind void;
  #L083128.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08312c.  call temp:= `b`(v0, v2) @signature `La/a/e/g;.b:(I)La/a/e/i;` @kind virtual;
  #L083132.  v0:= temp @kind object;
  #L083134.  if v0 == 0 then goto L083126;
  #L083138.  call `c`(v0, v3) @signature `La/a/e/i;.c:(La/a/e/b;)V` @kind virtual;
  #L08313e.  goto L083126;
}
procedure `void` `a`(`a.a.e.g$c` v5 @kind this, `int` v6 , `a.a.e.b` v7 @kind object, `b.f` v8 @kind object) @signature `La/a/e/g$c;.a:(ILa/a/e/b;Lb/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083150.  call temp:= `g`(v8) @signature `Lb/f;.g:()I` @kind virtual;
  #L083156.  v0:= temp;
  #L083158.  if v0 <= 0 then goto L08315c;
  #L08315c.  v1:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083160.  @monitorenter v1
  #Try_start0.  
  #L083162.  v0:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083166.  v0:= v0.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L08316a.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L083170.  v0:= temp @kind object;
  #L083172.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083176.  v2:= v2.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L08317a.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L083180.  v2:= temp;
  #L083182.  v2:= new `a.a.e.i`[v2];
  #L083186.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L08318c.  v0:= temp @kind object;
  #L08318e.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L083192.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083196.  v3:= 1I;
  #L083198.  v2.`a.a.e.g.h` @type ^`boolean` := v3 @kind boolean;
  #L08319c.  @monitorexit v1
  #Try_end0.  
  #L08319e.  v2:= length @variable v0;
  #L0831a0.  v1:= 0I;
  #L0831a2.  if v1 >= v2 then goto L0831ea;
  #L0831a6.  v3:= v0[v1] @kind object;
  #L0831aa.  call temp:= `a`(v3) @signature `La/a/e/i;.a:()I` @kind virtual;
  #L0831b0.  v4:= temp;
  #L0831b2.  if v4 <= v6 then goto L0831de;
  #L0831b6.  call temp:= `c`(v3) @signature `La/a/e/i;.c:()Z` @kind virtual;
  #L0831bc.  v4:= temp;
  #L0831be.  if v4 == 0 then goto L0831de;
  #L0831c2.  v4:= `@@a.a.e.b.e` @type ^`a.a.e.b` @kind object;
  #L0831c6.  call `c`(v3, v4) @signature `La/a/e/i;.c:(La/a/e/b;)V` @kind virtual;
  #L0831cc.  v4:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0831d0.  call temp:= `a`(v3) @signature `La/a/e/i;.a:()I` @kind virtual;
  #L0831d6.  v3:= temp;
  #L0831d8.  call temp:= `b`(v4, v3) @signature `La/a/e/g;.b:(I)La/a/e/i;` @kind virtual;
  #L0831de.  v1:= v1 + 1;
  #L0831e2.  goto L0831a2;
  #L0831e4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L0831e6.  @monitorexit v1
  #Try_end1.  
  #L0831e8.  throw v0;
  #L0831ea.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0831e4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0831e4;
}
procedure `void` `a`(`a.a.e.g$c` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `La/a/e/g$c;.a:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L083210.  if v4 == 0 then goto L08322c;
  #L083214.  v0:= v3.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083218.  call temp:= `c`(v0, v5) @signature `La/a/e/g;.c:(I)La/a/e/l;` @kind virtual;
  #L08321e.  v0:= temp @kind object;
  #L083220.  if v0 == 0 then goto L08322a;
  #L083224.  call `b`(v0) @signature `La/a/e/l;.b:()V` @kind virtual;
  #L08322a.  return @kind void;
  #L08322c.  v0:= v3.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083230.  v1:= 1I;
  #L083232.  v2:= 0I;
  #L083234.  call `a`(v0, v1, v5, v6, v2) @signature `La/a/e/g;.a:(ZIILa/a/e/l;)V` @kind virtual;
  #L08323a.  goto L08322a;
}
procedure `void` `a`(`a.a.e.g$c` v8 @kind this, `boolean` v9 , `int` v10 , `int` v11 , `java.util.List` v12 @kind object) @signature `La/a/e/g$c;.a:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08324c.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083250.  call temp:= `d`(v0, v10) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L083256.  v0:= temp;
  #L083258.  if v0 == 0 then goto L083268;
  #L08325c.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083260.  call `a`(v0, v10, v12, v9) @signature `La/a/e/g;.a:(ILjava/util/List;Z)V` @kind virtual;
  #L083266.  return @kind void;
  #L083268.  v6:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08326c.  @monitorenter v6
  #Try_start0.  
  #L08326e.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083272.  v0:= v0.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #L083276.  if v0 == 0 then goto L083284;
  #L08327a.  @monitorexit v6
  #L08327c.  goto L083266;
  #L08327e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L083280.  @monitorexit v6
  #Try_end0.  
  #L083282.  throw v0;
  #Try_start1.  
  #L083284.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083288.  call temp:= `a`(v0, v10) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L08328e.  v0:= temp @kind object;
  #L083290.  if v0 != 0 then goto L08332e;
  #L083294.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083298.  v0:= v0.`a.a.e.g.f` @type ^`int`;
  #L08329c.  if v10 > v0 then goto L0832a4;
  #L0832a0.  @monitorexit v6
  #L0832a2.  goto L083266;
  #L0832a4.  v0:= v10 %% 2;
  #L0832a8.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0832ac.  v1:= v1.`a.a.e.g.g` @type ^`int`;
  #L0832b0.  v1:= v1 %% 2;
  #L0832b4.  if v0 != v1 then goto L0832bc;
  #L0832b8.  @monitorexit v6
  #L0832ba.  goto L083266;
  #L0832bc.  v0:= new `a.a.e.i`;
  #L0832c0.  v2:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0832c4.  v3:= 0I;
  #L0832c6.  v1:= v10;
  #L0832c8.  v4:= v9;
  #L0832ca.  v5:= v12 @kind object;
  #L0832cc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/i;.<init>:(ILa/a/e/g;ZZLjava/util/List;)V` @kind direct;
  #L0832d2.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0832d6.  v1.`a.a.e.g.f` @type ^`int` := v10;
  #L0832da.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0832de.  v1:= v1.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L0832e2.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0832e8.  v2:= temp @kind object;
  #L0832ea.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0832f0.  v1:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L0832f4.  v2:= new `a.a.e.g$c$1`;
  #L0832f8.  v3:= "OkHttp %s stream %d" @kind object;
  #L0832fc.  v4:= 2I;
  #L0832fe.  v4:= new `java.lang.Object`[v4];
  #L083302.  v5:= 0I;
  #L083304.  v7:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083308.  v7:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L08330c.  v4[v5]:= v7 @kind object;
  #L083310.  v5:= 1I;
  #L083312.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L083318.  v7:= temp @kind object;
  #L08331a.  v4[v5]:= v7 @kind object;
  #L08331e.  call `<init>`(v2, v8, v3, v4, v0) @signature `La/a/e/g$c$1;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/i;)V` @kind direct;
  #L083324.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L08332a.  @monitorexit v6
  #L08332c.  goto L083266;
  #L08332e.  @monitorexit v6
  #Try_end1.  
  #L083330.  call `a`(v0, v12) @signature `La/a/e/i;.a:(Ljava/util/List;)V` @kind virtual;
  #L083336.  if v9 == 0 then goto L083266;
  #L08333a.  call `i`(v0) @signature `La/a/e/i;.i:()V` @kind virtual;
  #L083340.  goto L083266;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L08327e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L08327e;
}
procedure `void` `a`(`a.a.e.g$c` v2 @kind this, `boolean` v3 , `int` v4 , `b.e` v5 @kind object, `int` v6 ) @signature `La/a/e/g$c;.a:(ZILb/e;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L083368.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08336c.  call temp:= `d`(v0, v4) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L083372.  v0:= temp;
  #L083374.  if v0 == 0 then goto L083384;
  #L083378.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08337c.  call `a`(v0, v4, v5, v6, v3) @signature `La/a/e/g;.a:(ILb/e;IZ)V` @kind virtual;
  #L083382.  return @kind void;
  #L083384.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083388.  call temp:= `a`(v0, v4) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L08338e.  v0:= temp @kind object;
  #L083390.  if v0 != 0 then goto L0833ac;
  #L083394.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083398.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #L08339c.  call `a`(v0, v4, v1) @signature `La/a/e/g;.a:(ILa/a/e/b;)V` @kind virtual;
  #L0833a2.  v0:= (`long`) v6 @kind i2l;
  #L0833a4.  call `g`(v5, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L0833aa.  goto L083382;
  #L0833ac.  call `a`(v0, v5, v6) @signature `La/a/e/i;.a:(Lb/e;I)V` @kind virtual;
  #L0833b2.  if v3 == 0 then goto L083382;
  #L0833b6.  call `i`(v0) @signature `La/a/e/i;.i:()V` @kind virtual;
  #L0833bc.  goto L083382;
}
procedure `void` `a`(`a.a.e.g$c` v13 @kind this, `boolean` v14 , `a.a.e.n` v15 @kind object) @signature `La/a/e/g$c;.a:(ZLa/a/e/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L0833d0.  v6:= 0L;
  #L0833d4.  v1:= 0I;
  #L0833d6.  v0:= 0I;
  #L0833d8.  v8:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0833dc.  @monitorenter v8
  #Try_start0.  
  #L0833de.  v2:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0833e2.  v2:= v2.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L0833e6.  call temp:= `d`(v2) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L0833ec.  v2:= temp;
  #L0833ee.  if v14 == 0 then goto L083400;
  #L0833f2.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0833f6.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L0833fa.  call `a`(v3) @signature `La/a/e/n;.a:()V` @kind virtual;
  #L083400.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083404.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L083408.  call `a`(v3, v15) @signature `La/a/e/n;.a:(La/a/e/n;)V` @kind virtual;
  #L08340e.  call `a`(v13, v15) @signature `La/a/e/g$c;.a:(La/a/e/n;)V` @kind direct;
  #L083414.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083418.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L08341c.  call temp:= `d`(v3) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L083422.  v3:= temp;
  #L083424.  v4:= -1I;
  #L083426.  if v3 == v4 then goto L083506;
  #L08342a.  if v3 == v2 then goto L083506;
  #L08342e.  v2:= v3 - v2 @kind int;
  #L083432.  v2:= (`long`) v2 @kind i2l;
  #L083434.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083438.  v4:= v4.`a.a.e.g.n` @type ^`boolean` @kind boolean;
  #L08343c.  if v4 != 0 then goto L083454;
  #L083440.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083444.  call `a`(v4, v2) @signature `La/a/e/g;.a:(J)V` @kind virtual;
  #L08344a.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08344e.  v5:= 1I;
  #L083450.  v4.`a.a.e.g.n` @type ^`boolean` := v5 @kind boolean;
  #L083454.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083458.  v4:= v4.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L08345c.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L083462.  v4:= temp;
  #L083464.  if v4 != 0 then goto L083500;
  #L083468.  v0:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08346c.  v0:= v0.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L083470.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L083476.  v0:= temp @kind object;
  #L083478.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L08347c.  v4:= v4.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L083480.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L083486.  v4:= temp;
  #L083488.  v4:= new `a.a.e.i`[v4];
  #L08348c.  call temp:= `toArray`(v0, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L083492.  v0:= temp @kind object;
  #L083494.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L083498.  v4:= v2 @kind wide;
  #L08349a.  v2:= v0 @kind object;
  #L08349c.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L0834a0.  v3:= new `a.a.e.g$c$2`;
  #L0834a4.  v9:= "OkHttp %s settings" @kind object;
  #L0834a8.  v10:= 1I;
  #L0834aa.  v10:= new `java.lang.Object`[v10];
  #L0834ae.  v11:= 0I;
  #L0834b0.  v12:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0834b4.  v12:= v12.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L0834b8.  v10[v11]:= v12 @kind object;
  #L0834bc.  call `<init>`(v3, v13, v9, v10) @signature `La/a/e/g$c$2;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L0834c2.  call `execute`(v0, v3) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L0834c8.  @monitorexit v8
  #Try_end0.  
  #L0834ca.  if v2 == 0 then goto L0834fe;
  #L0834ce.  v0:= lcmp(v4, v6);
  #L0834d2.  if v0 == 0 then goto L0834fe;
  #L0834d6.  v3:= length @variable v2;
  #L0834d8.  v0:= v1;
  #L0834da.  if v0 >= v3 then goto L0834fe;
  #L0834de.  v1:= v2[v0] @kind object;
  #L0834e2.  @monitorenter v1
  #Try_start1.  
  #L0834e4.  call `a`(v1, v4) @signature `La/a/e/i;.a:(J)V` @kind virtual;
  #L0834ea.  @monitorexit v1
  #Try_end1.  
  #L0834ec.  v0:= v0 + 1;
  #L0834f0.  goto L0834da;
  #L0834f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L0834f4.  @monitorexit v8
  #Try_end2.  
  #L0834f6.  throw v0;
  #L0834f8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L0834fa.  @monitorexit v1
  #Try_end3.  
  #L0834fc.  throw v0;
  #L0834fe.  return @kind void;
  #L083500.  v4:= v2 @kind wide;
  #L083502.  v2:= v0 @kind object;
  #L083504.  goto L08349c;
  #L083506.  v2:= v0 @kind object;
  #L083508.  v4:= v6 @kind wide;
  #L08350a.  goto L08349c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0834f2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0834f8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L0834f2;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L0834f8;
}
procedure `void` `b`(`a.a.e.g$c` v5 @kind this) @signature `La/a/e/g$c;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083544.  v0:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #L083548.  v2:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #Try_start0.  
  #L08354c.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L083550.  call `a`(v1, v5) @signature `La/a/e/h;.a:(La/a/e/h$b;)V` @kind virtual;
  #L083556.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L08355a.  v3:= 0I;
  #L08355c.  call temp:= `a`(v1, v3, v5) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @kind virtual;
  #L083562.  v1:= temp;
  #L083564.  if v1 != 0 then goto L083556;
  #L083568.  v0:= `@@a.a.e.b.a` @type ^`a.a.e.b` @kind object;
  #L08356c.  v1:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #Try_end0.  
  #Try_start1.  
  #L083570.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083574.  call `a`(v2, v0, v1) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end1.  
  #L08357a.  v0:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L08357e.  call `a`(v0) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L083584.  return @kind void;
  #L083586.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L083588.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #Try_end2.  
  #Try_start3.  
  #L08358c.  v0:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #Try_end3.  
  #Try_start4.  
  #L083590.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L083594.  call `a`(v2, v1, v0) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end4.  
  #L08359a.  v0:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L08359e.  call `a`(v0) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L0835a4.  goto L083584;
  #L0835a6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0835a8.  v4:= v1 @kind object;
  #L0835aa.  v1:= v0 @kind object;
  #L0835ac.  v0:= v4 @kind object;
  #Try_start5.  
  #L0835ae.  v3:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L0835b2.  call `a`(v3, v1, v2) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end5.  
  #L0835b8.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L0835bc.  call `a`(v1) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L0835c2.  throw v0;
  #L0835c4.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L0835c6.  goto L0835b8;
  #L0835c8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0835ca.  goto L0835ae;
  #L0835cc.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L0835ce.  goto L08359a;
  #L0835d0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L0835d2.  goto L08357a;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L083586;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0835a6;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L0835d0;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L0835a6;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L0835c8;
  catch `java.io.IOException` @[Try_start4..Try_end4] goto L0835cc;
  catch `java.io.IOException` @[Try_start5..Try_end5] goto L0835c4;
}

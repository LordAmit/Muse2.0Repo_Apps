record `a.a.e.h` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `a.a.e.d$a` `a.a.e.h.b` @AccessFlag FINAL;
  `b.e` `a.a.e.h.c` @AccessFlag PRIVATE_FINAL;
  `a.a.e.h$a` `a.a.e.h.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.e.h.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@a.a.e.h.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0843c4.  v0:= constclass @type ^`a.a.e.e` @kind object;
  #L0843c8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0843ce.  v0:= temp @kind object;
  #L0843d0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L0843d6.  v0:= temp @kind object;
  #L0843d8.  `@@a.a.e.h.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L0843dc.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.h` v3 @kind this, `b.e` v4 @kind object, `boolean` v5 ) @signature `La/a/e/h;.<init>:(Lb/e;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L0843f0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0843f6.  v3.`a.a.e.h.c` @type ^`b.e` := v4 @kind object;
  #L0843fa.  v3.`a.a.e.h.e` @type ^`boolean` := v5 @kind boolean;
  #L0843fe.  v0:= new `a.a.e.h$a`;
  #L084402.  v1:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084406.  call `<init>`(v0, v1) @signature `La/a/e/h$a;.<init>:(Lb/e;)V` @kind direct;
  #L08440c.  v3.`a.a.e.h.d` @type ^`a.a.e.h$a` := v0 @kind object;
  #L084410.  v0:= new `a.a.e.d$a`;
  #L084414.  v1:= 4096I;
  #L084418.  v2:= v3.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L08441c.  call `<init>`(v0, v1, v2) @signature `La/a/e/d$a;.<init>:(ILb/r;)V` @kind direct;
  #L084422.  v3.`a.a.e.h.b` @type ^`a.a.e.d$a` := v0 @kind object;
  #L084426.  return @kind void;
}
procedure `int` `a`(`int` v4 , `byte` v5 , `short` v6 ) @signature `La/a/e/h;.a:(IBS)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L084438.  v0:= v5 ^& 8;
  #L08443c.  if v0 == 0 then goto L084444;
  #L084440.  v4:= v4 + -1;
  #L084444.  if v6 <= v4 then goto L084478;
  #L084448.  v0:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L08444c.  v1:= 2I;
  #L08444e.  v1:= new `java.lang.Object`[v1];
  #L084452.  v2:= 0I;
  #L084454.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L08445a.  v3:= temp @kind object;
  #L08445c.  v1[v2]:= v3 @kind object;
  #L084460.  v2:= 1I;
  #L084462.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L084468.  v3:= temp @kind object;
  #L08446a.  v1[v2]:= v3 @kind object;
  #L08446e.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084474.  v0:= temp @kind object;
  #L084476.  throw v0;
  #L084478.  v0:= v4 - v6 @kind int;
  #L08447c.  v0:= (`short`) v0 @kind i2s;
  #L08447e.  return v0;
}
procedure `int` `a`(`b.e` v2 @kind object) @signature `La/a/e/h;.a:(Lb/e;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L084490.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L084496.  v0:= temp;
  #L084498.  v0:= v0 ^& 255;
  #L08449c.  v0:= v0 ^< 16;
  #L0844a0.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L0844a6.  v1:= temp;
  #L0844a8.  v1:= v1 ^& 255;
  #L0844ac.  v1:= v1 ^< 8;
  #L0844b0.  v0:= v0 ^| v1 @kind int;
  #L0844b2.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L0844b8.  v1:= temp;
  #L0844ba.  v1:= v1 ^& 255;
  #L0844be.  v0:= v0 ^| v1 @kind int;
  #L0844c0.  return v0;
}
procedure `java.util.List` `a`(`a.a.e.h` v2 @kind this, `int` v3 , `short` v4 , `byte` v5 , `int` v6 ) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L0844d4.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L0844d8.  v1:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L0844dc.  v1.`a.a.e.h$a.d` @type ^`int` := v3;
  #L0844e0.  v0.`a.a.e.h$a.a` @type ^`int` := v3;
  #L0844e4.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L0844e8.  v0.`a.a.e.h$a.e` @type ^`short` := v4 @kind char;
  #L0844ec.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L0844f0.  v0.`a.a.e.h$a.b` @type ^`byte` := v5 @kind byte;
  #L0844f4.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L0844f8.  v0.`a.a.e.h$a.c` @type ^`int` := v6;
  #L0844fc.  v0:= v2.`a.a.e.h.b` @type ^`a.a.e.d$a` @kind object;
  #L084500.  call `a`(v0) @signature `La/a/e/d$a;.a:()V` @kind virtual;
  #L084506.  v0:= v2.`a.a.e.h.b` @type ^`a.a.e.d$a` @kind object;
  #L08450a.  call temp:= `b`(v0) @signature `La/a/e/d$a;.b:()Ljava/util/List;` @kind virtual;
  #L084510.  v0:= temp @kind object;
  #L084512.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 ) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L084524.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084528.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L08452e.  v1:= temp;
  #L084530.  v0:= -2147483648I;
  #L084534.  v0:= v0 ^& v1 @kind int;
  #L084536.  if v0 == 0 then goto L084560;
  #L08453a.  v0:= 1I;
  #L08453c.  v2:= 2147483647I;
  #L084542.  v1:= v1 ^& v2 @kind int;
  #L084544.  v2:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084548.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L08454e.  v2:= temp;
  #L084550.  v2:= v2 ^& 255;
  #L084554.  v2:= v2 + 1;
  #L084558.  call `a`(v4, v5, v1, v2, v0) @signature `La/a/e/h$b;.a:(IIIZ)V` @kind interface;
  #L08455e.  return @kind void;
  #L084560.  v0:= 0I;
  #L084562.  goto L08453c;
}
procedure `void` `a`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `La/a/e/h;.a:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L084574.  v0:= 0I;
  #L084576.  if v7 != 0 then goto L08458c;
  #L08457a.  v1:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L08457e.  v0:= new `java.lang.Object`[v0];
  #L084582.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084588.  v0:= temp @kind object;
  #L08458a.  throw v0;
  #L08458c.  v1:= v6 ^& 1;
  #L084590.  if v1 == 0 then goto L0845dc;
  #L084594.  v1:= 1I;
  #L084596.  v2:= v6 ^& 8;
  #L08459a.  if v2 == 0 then goto L0845b0;
  #L08459e.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0845a2.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L0845a8.  v0:= temp;
  #L0845aa.  v0:= v0 ^& 255;
  #L0845ae.  v0:= (`short`) v0 @kind i2s;
  #L0845b0.  v2:= v6 ^& 32;
  #L0845b4.  if v2 == 0 then goto L0845c2;
  #L0845b8.  call `a`(v3, v4, v7) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @kind direct;
  #L0845be.  v5:= v5 + -5;
  #L0845c2.  call temp:= `a`(v5, v6, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L0845c8.  v2:= temp;
  #L0845ca.  call temp:= `a`(v3, v2, v0, v6, v7) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L0845d0.  v0:= temp @kind object;
  #L0845d2.  v2:= -1I;
  #L0845d4.  call `a`(v4, v1, v7, v2, v0) @signature `La/a/e/h$b;.a:(ZIILjava/util/List;)V` @kind interface;
  #L0845da.  return @kind void;
  #L0845dc.  v1:= v0;
  #L0845de.  goto L084596;
}
procedure `void` `b`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.b:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0845f0.  v1:= 1I;
  #L0845f2.  v0:= 0I;
  #L0845f4.  v2:= v7 ^& 1;
  #L0845f8.  if v2 == 0 then goto L08461c;
  #L0845fc.  v2:= v1;
  #L0845fe.  v3:= v7 ^& 32;
  #L084602.  if v3 == 0 then goto L084620;
  #L084606.  if v1 == 0 then goto L084624;
  #L08460a.  v1:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L08460e.  v0:= new `java.lang.Object`[v0];
  #L084612.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084618.  v0:= temp @kind object;
  #L08461a.  throw v0;
  #L08461c.  v2:= v0;
  #L08461e.  goto L0845fe;
  #L084620.  v1:= v0;
  #L084622.  goto L084606;
  #L084624.  v1:= v7 ^& 8;
  #L084628.  if v1 == 0 then goto L08463e;
  #L08462c.  v0:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084630.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L084636.  v0:= temp;
  #L084638.  v0:= v0 ^& 255;
  #L08463c.  v0:= (`short`) v0 @kind i2s;
  #L08463e.  call temp:= `a`(v6, v7, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L084644.  v1:= temp;
  #L084646.  v3:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L08464a.  call `a`(v5, v2, v8, v3, v1) @signature `La/a/e/h$b;.a:(ZILb/e;I)V` @kind interface;
  #L084650.  v1:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084654.  v2:= (`long`) v0 @kind i2l;
  #L084656.  call `g`(v1, v2) @signature `Lb/e;.g:(J)V` @kind interface;
  #L08465c.  return @kind void;
}
procedure `void` `c`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.c:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L084670.  v3:= 0I;
  #L084672.  v0:= 5I;
  #L084674.  if v6 == v0 then goto L084698;
  #L084678.  v0:= "TYPE_PRIORITY length: %d != 5" @kind object;
  #L08467c.  v1:= 1I;
  #L08467e.  v1:= new `java.lang.Object`[v1];
  #L084682.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L084688.  v2:= temp @kind object;
  #L08468a.  v1[v3]:= v2 @kind object;
  #L08468e.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084694.  v0:= temp @kind object;
  #L084696.  throw v0;
  #L084698.  if v8 != 0 then goto L0846ae;
  #L08469c.  v0:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L0846a0.  v1:= new `java.lang.Object`[v3];
  #L0846a4.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0846aa.  v0:= temp @kind object;
  #L0846ac.  throw v0;
  #L0846ae.  call `a`(v4, v5, v8) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @kind direct;
  #L0846b4.  return @kind void;
}
procedure `void` `d`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.d:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0846c8.  v2:= 1I;
  #L0846ca.  v3:= 0I;
  #L0846cc.  v0:= 4I;
  #L0846ce.  if v6 == v0 then goto L0846f0;
  #L0846d2.  v0:= "TYPE_RST_STREAM length: %d != 4" @kind object;
  #L0846d6.  v1:= new `java.lang.Object`[v2];
  #L0846da.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0846e0.  v2:= temp @kind object;
  #L0846e2.  v1[v3]:= v2 @kind object;
  #L0846e6.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0846ec.  v0:= temp @kind object;
  #L0846ee.  throw v0;
  #L0846f0.  if v8 != 0 then goto L084706;
  #L0846f4.  v0:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L0846f8.  v1:= new `java.lang.Object`[v3];
  #L0846fc.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084702.  v0:= temp @kind object;
  #L084704.  throw v0;
  #L084706.  v0:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L08470a.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L084710.  v0:= temp;
  #L084712.  call temp:= `a`(v0) @signature `La/a/e/b;.a:(I)La/a/e/b;` @kind static;
  #L084718.  v1:= temp @kind object;
  #L08471a.  if v1 != 0 then goto L08473c;
  #L08471e.  v1:= "TYPE_RST_STREAM unexpected error code: %d" @kind object;
  #L084722.  v2:= new `java.lang.Object`[v2];
  #L084726.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08472c.  v0:= temp @kind object;
  #L08472e.  v2[v3]:= v0 @kind object;
  #L084732.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084738.  v0:= temp @kind object;
  #L08473a.  throw v0;
  #L08473c.  call `a`(v5, v8, v1) @signature `La/a/e/h$b;.a:(ILa/a/e/b;)V` @kind interface;
  #L084742.  return @kind void;
}
procedure `void` `e`(`a.a.e.h` v7 @kind this, `a.a.e.h$b` v8 @kind object, `int` v9 , `byte` v10 , `int` v11 ) @signature `La/a/e/h;.e:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L084754.  v6:= 1I;
  #L084756.  v2:= 0I;
  #L084758.  if v11 == 0 then goto L08476e;
  #L08475c.  v0:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L084760.  v1:= new `java.lang.Object`[v2];
  #L084764.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L08476a.  v0:= temp @kind object;
  #L08476c.  throw v0;
  #L08476e.  v0:= v10 ^& 1;
  #L084772.  if v0 == 0 then goto L084794;
  #L084776.  if v9 == 0 then goto L08478c;
  #L08477a.  v0:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L08477e.  v1:= new `java.lang.Object`[v2];
  #L084782.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084788.  v0:= temp @kind object;
  #L08478a.  throw v0;
  #L08478c.  call `a`(v8) @signature `La/a/e/h$b;.a:()V` @kind interface;
  #L084792.  return @kind void;
  #L084794.  v0:= v9 %% 6;
  #L084798.  if v0 == 0 then goto L0847ba;
  #L08479c.  v0:= "TYPE_SETTINGS length %% 6 != 0: %s" @kind object;
  #L0847a0.  v1:= new `java.lang.Object`[v6];
  #L0847a4.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0847aa.  v3:= temp @kind object;
  #L0847ac.  v1[v2]:= v3 @kind object;
  #L0847b0.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0847b6.  v0:= temp @kind object;
  #L0847b8.  throw v0;
  #L0847ba.  v3:= new `a.a.e.n`;
  #L0847be.  call `<init>`(v3) @signature `La/a/e/n;.<init>:()V` @kind direct;
  #L0847c4.  v1:= v2;
  #L0847c6.  if v1 >= v9 then goto L08485c;
  #L0847ca.  v0:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0847ce.  call temp:= `i`(v0) @signature `Lb/e;.i:()S` @kind interface;
  #L0847d4.  v0:= temp;
  #L0847d6.  v4:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0847da.  call temp:= `j`(v4) @signature `Lb/e;.j:()I` @kind interface;
  #L0847e0.  v4:= temp;
  #L0847e2.  goto L084864;
  #L0847e8.  call temp:= `a`(v3, v0, v4) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L0847ee.  v0:= v1 + 6;
  #L0847f2.  v1:= v0;
  #L0847f4.  goto L0847c6;
  #L0847f6.  if v4 == 0 then goto L0847e8;
  #L0847fa.  if v4 == v6 then goto L0847e8;
  #L0847fe.  v0:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L084802.  v1:= new `java.lang.Object`[v2];
  #L084806.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L08480c.  v0:= temp @kind object;
  #L08480e.  throw v0;
  #L084810.  v0:= 4I;
  #L084812.  goto L0847e8;
  #L084814.  v0:= 7I;
  #L084816.  if v4 >= 0 then goto L0847e8;
  #L08481a.  v0:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L08481e.  v1:= new `java.lang.Object`[v2];
  #L084822.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084828.  v0:= temp @kind object;
  #L08482a.  throw v0;
  #L08482c.  v5:= 16384I;
  #L084830.  if v4 < v5 then goto L08483e;
  #L084834.  v5:= 16777215I;
  #L08483a.  if v4 <= v5 then goto L0847e8;
  #L08483e.  v0:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s" @kind object;
  #L084842.  v1:= new `java.lang.Object`[v6];
  #L084846.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08484c.  v3:= temp @kind object;
  #L08484e.  v1[v2]:= v3 @kind object;
  #L084852.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084858.  v0:= temp @kind object;
  #L08485a.  throw v0;
  #L08485c.  call `a`(v8, v2, v3) @signature `La/a/e/h$b;.a:(ZLa/a/e/n;)V` @kind interface;
  #L084862.  goto L084792;
  #L084864.  switch v0
                  | 1 => goto L0847e8
                  | 2 => goto L0847f6
                  | 3 => goto L084810
                  | 4 => goto L084814
                  | 5 => goto L08482c
                  | 6 => goto L0847e8
                  | else => goto L0847e8;
}
procedure `void` `f`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `La/a/e/h;.f:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L084894.  v0:= 0I;
  #L084896.  if v7 != 0 then goto L0848ac;
  #L08489a.  v1:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L08489e.  v0:= new `java.lang.Object`[v0];
  #L0848a2.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0848a8.  v0:= temp @kind object;
  #L0848aa.  throw v0;
  #L0848ac.  v1:= v6 ^& 8;
  #L0848b0.  if v1 == 0 then goto L0848c6;
  #L0848b4.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0848b8.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L0848be.  v0:= temp;
  #L0848c0.  v0:= v0 ^& 255;
  #L0848c4.  v0:= (`short`) v0 @kind i2s;
  #L0848c6.  v1:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0848ca.  call temp:= `j`(v1) @signature `Lb/e;.j:()I` @kind interface;
  #L0848d0.  v1:= temp;
  #L0848d2.  v2:= 2147483647I;
  #L0848d8.  v1:= v1 ^& v2 @kind int;
  #L0848da.  v2:= v5 + -4;
  #L0848de.  call temp:= `a`(v2, v6, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L0848e4.  v2:= temp;
  #L0848e6.  call temp:= `a`(v3, v2, v0, v6, v7) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L0848ec.  v0:= temp @kind object;
  #L0848ee.  call `a`(v4, v7, v1, v0) @signature `La/a/e/h$b;.a:(IILjava/util/List;)V` @kind interface;
  #L0848f4.  return @kind void;
}
procedure `void` `g`(`a.a.e.h` v5 @kind this, `a.a.e.h$b` v6 @kind object, `int` v7 , `byte` v8 , `int` v9 ) @signature `La/a/e/h;.g:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L084908.  v0:= 1I;
  #L08490a.  v1:= 0I;
  #L08490c.  v2:= 8I;
  #L084910.  if v7 == v2 then goto L084932;
  #L084914.  v2:= "TYPE_PING length != 8: %s" @kind object;
  #L084918.  v0:= new `java.lang.Object`[v0];
  #L08491c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L084922.  v3:= temp @kind object;
  #L084924.  v0[v1]:= v3 @kind object;
  #L084928.  call temp:= `b`(v2, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L08492e.  v0:= temp @kind object;
  #L084930.  throw v0;
  #L084932.  if v9 == 0 then goto L084948;
  #L084936.  v0:= "TYPE_PING streamId != 0" @kind object;
  #L08493a.  v1:= new `java.lang.Object`[v1];
  #L08493e.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084944.  v0:= temp @kind object;
  #L084946.  throw v0;
  #L084948.  v2:= v5.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L08494c.  call temp:= `j`(v2) @signature `Lb/e;.j:()I` @kind interface;
  #L084952.  v2:= temp;
  #L084954.  v3:= v5.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084958.  call temp:= `j`(v3) @signature `Lb/e;.j:()I` @kind interface;
  #L08495e.  v3:= temp;
  #L084960.  v4:= v8 ^& 1;
  #L084964.  if v4 == 0 then goto L084970;
  #L084968.  call `a`(v6, v0, v2, v3) @signature `La/a/e/h$b;.a:(ZII)V` @kind interface;
  #L08496e.  return @kind void;
  #L084970.  v0:= v1;
  #L084972.  goto L084968;
}
procedure `void` `h`(`a.a.e.h` v6 @kind this, `a.a.e.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `La/a/e/h;.h:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L084984.  v5:= 1I;
  #L084986.  v4:= 0I;
  #L084988.  v0:= 8I;
  #L08498c.  if v8 >= v0 then goto L0849ae;
  #L084990.  v0:= "TYPE_GOAWAY length < 8: %s" @kind object;
  #L084994.  v1:= new `java.lang.Object`[v5];
  #L084998.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08499e.  v2:= temp @kind object;
  #L0849a0.  v1[v4]:= v2 @kind object;
  #L0849a4.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0849aa.  v0:= temp @kind object;
  #L0849ac.  throw v0;
  #L0849ae.  if v10 == 0 then goto L0849c4;
  #L0849b2.  v0:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L0849b6.  v1:= new `java.lang.Object`[v4];
  #L0849ba.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0849c0.  v0:= temp @kind object;
  #L0849c2.  throw v0;
  #L0849c4.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0849c8.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L0849ce.  v1:= temp;
  #L0849d0.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0849d4.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L0849da.  v0:= temp;
  #L0849dc.  v2:= v8 + -8;
  #L0849e0.  call temp:= `a`(v0) @signature `La/a/e/b;.a:(I)La/a/e/b;` @kind static;
  #L0849e6.  v3:= temp @kind object;
  #L0849e8.  if v3 != 0 then goto L084a0a;
  #L0849ec.  v1:= "TYPE_GOAWAY unexpected error code: %d" @kind object;
  #L0849f0.  v2:= new `java.lang.Object`[v5];
  #L0849f4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0849fa.  v0:= temp @kind object;
  #L0849fc.  v2[v4]:= v0 @kind object;
  #L084a00.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084a06.  v0:= temp @kind object;
  #L084a08.  throw v0;
  #L084a0a.  v0:= `@@b.f.b` @type ^`b.f` @kind object;
  #L084a0e.  if v2 <= 0 then goto L084a20;
  #L084a12.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084a16.  v4:= (`long`) v2 @kind i2l;
  #L084a18.  call temp:= `c`(v0, v4) @signature `Lb/e;.c:(J)Lb/f;` @kind interface;
  #L084a1e.  v0:= temp @kind object;
  #L084a20.  call `a`(v7, v1, v3, v0) @signature `La/a/e/h$b;.a:(ILa/a/e/b;Lb/f;)V` @kind interface;
  #L084a26.  return @kind void;
}
procedure `void` `i`(`a.a.e.h` v6 @kind this, `a.a.e.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `La/a/e/h;.i:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L084a38.  v5:= 1I;
  #L084a3a.  v4:= 0I;
  #L084a3c.  v0:= 4I;
  #L084a3e.  if v8 == v0 then goto L084a60;
  #L084a42.  v0:= "TYPE_WINDOW_UPDATE length !=4: %s" @kind object;
  #L084a46.  v1:= new `java.lang.Object`[v5];
  #L084a4a.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L084a50.  v2:= temp @kind object;
  #L084a52.  v1[v4]:= v2 @kind object;
  #L084a56.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084a5c.  v0:= temp @kind object;
  #L084a5e.  throw v0;
  #L084a60.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084a64.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L084a6a.  v0:= temp;
  #L084a6c.  v0:= (`long`) v0 @kind i2l;
  #L084a6e.  v2:= 2147483647L;
  #L084a74.  v0:= v0 ^& v2 @kind long;
  #L084a76.  v2:= 0L;
  #L084a7a.  v2:= lcmp(v0, v2);
  #L084a7e.  if v2 != 0 then goto L084aa0;
  #L084a82.  v2:= "windowSizeIncrement was 0" @kind object;
  #L084a86.  v3:= new `java.lang.Object`[v5];
  #L084a8a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L084a90.  v0:= temp @kind object;
  #L084a92.  v3[v4]:= v0 @kind object;
  #L084a96.  call temp:= `b`(v2, v3) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084a9c.  v0:= temp @kind object;
  #L084a9e.  throw v0;
  #L084aa0.  call `a`(v7, v10, v0) @signature `La/a/e/h$b;.a:(IJ)V` @kind interface;
  #L084aa6.  return @kind void;
}
procedure `void` `a`(`a.a.e.h` v7 @kind this, `a.a.e.h$b` v8 @kind object) @signature `La/a/e/h;.a:(La/a/e/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L084ab8.  v6:= 1I;
  #L084aba.  v5:= 0I;
  #L084abc.  v0:= v7.`a.a.e.h.e` @type ^`boolean` @kind boolean;
  #L084ac0.  if v0 == 0 then goto L084ae2;
  #L084ac4.  call temp:= `a`(v7, v6, v8) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @kind virtual;
  #L084aca.  v0:= temp;
  #L084acc.  if v0 != 0 then goto L084b64;
  #L084ad0.  v0:= "Required SETTINGS preface not received" @kind object;
  #L084ad4.  v1:= new `java.lang.Object`[v5];
  #L084ad8.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084ade.  v0:= temp @kind object;
  #L084ae0.  throw v0;
  #L084ae2.  v0:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084ae6.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L084aea.  call temp:= `g`(v1) @signature `Lb/f;.g:()I` @kind virtual;
  #L084af0.  v1:= temp;
  #L084af2.  v2:= (`long`) v1 @kind i2l;
  #L084af4.  call temp:= `c`(v0, v2) @signature `Lb/e;.c:(J)Lb/f;` @kind interface;
  #L084afa.  v0:= temp @kind object;
  #L084afc.  v1:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L084b00.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L084b04.  call temp:= `isLoggable`(v1, v2) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L084b0a.  v1:= temp;
  #L084b0c.  if v1 == 0 then goto L084b36;
  #L084b10.  v1:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L084b14.  v2:= "<< CONNECTION %s" @kind object;
  #L084b18.  v3:= new `java.lang.Object`[v6];
  #L084b1c.  call temp:= `e`(v0) @signature `Lb/f;.e:()Ljava/lang/String;` @kind virtual;
  #L084b22.  v4:= temp @kind object;
  #L084b24.  v3[v5]:= v4 @kind object;
  #L084b28.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L084b2e.  v2:= temp @kind object;
  #L084b30.  call `fine`(v1, v2) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L084b36.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L084b3a.  call temp:= `equals`(v1, v0) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L084b40.  v1:= temp;
  #L084b42.  if v1 != 0 then goto L084b64;
  #L084b46.  v1:= "Expected a connection header but was %s" @kind object;
  #L084b4a.  v2:= new `java.lang.Object`[v6];
  #L084b4e.  call temp:= `a`(v0) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L084b54.  v0:= temp @kind object;
  #L084b56.  v2[v5]:= v0 @kind object;
  #L084b5a.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084b60.  v0:= temp @kind object;
  #L084b62.  throw v0;
  #L084b64.  return @kind void;
}
procedure `boolean` `a`(`a.a.e.h` v7 @kind this, `boolean` v8 , `a.a.e.h$b` v9 @kind object) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L084b78.  v1:= 0I;
  #L084b7a.  v0:= 1I;
  #Try_start0.  
  #L084b7c.  v2:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084b80.  v4:= 9L;
  #L084b84.  call `a`(v2, v4) @signature `Lb/e;.a:(J)V` @kind interface;
  #Try_end0.  
  #L084b8a.  v2:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084b8e.  call temp:= `a`(v2) @signature `La/a/e/h;.a:(Lb/e;)I` @kind static;
  #L084b94.  v2:= temp;
  #L084b96.  if v2 < 0 then goto L084ba2;
  #L084b9a.  v3:= 16384I;
  #L084b9e.  if v2 <= v3 then goto L084bc6;
  #L084ba2.  v3:= "FRAME_SIZE_ERROR: %s" @kind object;
  #L084ba6.  v0:= new `java.lang.Object`[v0];
  #L084baa.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L084bb0.  v2:= temp @kind object;
  #L084bb2.  v0[v1]:= v2 @kind object;
  #L084bb6.  call temp:= `b`(v3, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084bbc.  v0:= temp @kind object;
  #L084bbe.  throw v0;
  #L084bc0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L084bc2.  v0:= v1;
  #L084bc4.  return v0;
  #L084bc6.  v3:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084bca.  call temp:= `h`(v3) @signature `Lb/e;.h:()B` @kind interface;
  #L084bd0.  v3:= temp;
  #L084bd2.  v3:= v3 ^& 255;
  #L084bd6.  v3:= (`byte`) v3 @kind i2b;
  #L084bd8.  if v8 == 0 then goto L084c00;
  #L084bdc.  v4:= 4I;
  #L084bde.  if v3 == v4 then goto L084c00;
  #L084be2.  v2:= "Expected a SETTINGS frame but was %s" @kind object;
  #L084be6.  v0:= new `java.lang.Object`[v0];
  #L084bea.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L084bf0.  v3:= temp @kind object;
  #L084bf2.  v0[v1]:= v3 @kind object;
  #L084bf6.  call temp:= `b`(v2, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L084bfc.  v0:= temp @kind object;
  #L084bfe.  throw v0;
  #L084c00.  v1:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084c04.  call temp:= `h`(v1) @signature `Lb/e;.h:()B` @kind interface;
  #L084c0a.  v1:= temp;
  #L084c0c.  v1:= v1 ^& 255;
  #L084c10.  v1:= (`byte`) v1 @kind i2b;
  #L084c12.  v4:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084c16.  call temp:= `j`(v4) @signature `Lb/e;.j:()I` @kind interface;
  #L084c1c.  v4:= temp;
  #L084c1e.  v5:= 2147483647I;
  #L084c24.  v4:= v4 ^& v5 @kind int;
  #L084c26.  v5:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L084c2a.  v6:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L084c2e.  call temp:= `isLoggable`(v5, v6) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L084c34.  v5:= temp;
  #L084c36.  if v5 == 0 then goto L084c4c;
  #L084c3a.  v5:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L084c3e.  call temp:= `a`(v0, v4, v2, v3, v1) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L084c44.  v6:= temp @kind object;
  #L084c46.  call `fine`(v5, v6) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L084c4c.  goto L084ca8;
  #L084c52.  v1:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084c56.  v2:= (`long`) v2 @kind i2l;
  #L084c58.  call `g`(v1, v2) @signature `Lb/e;.g:(J)V` @kind interface;
  #L084c5e.  goto L084bc4;
  #L084c60.  call `b`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.b:(La/a/e/h$b;IBI)V` @kind direct;
  #L084c66.  goto L084bc4;
  #L084c68.  call `a`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.a:(La/a/e/h$b;IBI)V` @kind direct;
  #L084c6e.  goto L084bc4;
  #L084c70.  call `c`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.c:(La/a/e/h$b;IBI)V` @kind direct;
  #L084c76.  goto L084bc4;
  #L084c78.  call `d`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.d:(La/a/e/h$b;IBI)V` @kind direct;
  #L084c7e.  goto L084bc4;
  #L084c80.  call `e`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.e:(La/a/e/h$b;IBI)V` @kind direct;
  #L084c86.  goto L084bc4;
  #L084c88.  call `f`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.f:(La/a/e/h$b;IBI)V` @kind direct;
  #L084c8e.  goto L084bc4;
  #L084c90.  call `g`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.g:(La/a/e/h$b;IBI)V` @kind direct;
  #L084c96.  goto L084bc4;
  #L084c98.  call `h`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.h:(La/a/e/h$b;IBI)V` @kind direct;
  #L084c9e.  goto L084bc4;
  #L084ca0.  call `i`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.i:(La/a/e/h$b;IBI)V` @kind direct;
  #L084ca6.  goto L084bc4;
  #L084ca8.  switch v3
                  | 0 => goto L084c60
                  | 1 => goto L084c68
                  | 2 => goto L084c70
                  | 3 => goto L084c78
                  | 4 => goto L084c80
                  | 5 => goto L084c88
                  | 6 => goto L084c90
                  | 7 => goto L084c98
                  | 8 => goto L084ca0
                  | else => goto L084c52;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L084bc0;
}
procedure `void` `close`(`a.a.e.h` v1 @kind this) @signature `La/a/e/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084cf4.  v0:= v1.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L084cf8.  call `close`(v0) @signature `Lb/e;.close:()V` @kind interface;
  #L084cfe.  return @kind void;
}

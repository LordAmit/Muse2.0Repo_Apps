record `a.a.e.g$c$2` @kind class @AccessFlag  extends `a.a.b` @kind class {
  `a.a.e.g$c` `a.a.e.g$c$2.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$c$2` v0 @kind this, `a.a.e.g$c` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `La/a/e/g$c$2;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L082f38.  v0.`a.a.e.g$c$2.a` @type ^`a.a.e.g$c` := v1 @kind object;
  #L082f3c.  call `<init>`(v0, v2, v3) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L082f42.  return @kind void;
}
procedure `void` `b`(`a.a.e.g$c$2` v2 @kind this) @signature `La/a/e/g$c$2;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L082f54.  v0:= v2.`a.a.e.g$c$2.a` @type ^`a.a.e.g$c` @kind object;
  #L082f58.  v0:= v0.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L082f5c.  v0:= v0.`a.a.e.g.c` @type ^`a.a.e.g$b` @kind object;
  #L082f60.  v1:= v2.`a.a.e.g$c$2.a` @type ^`a.a.e.g$c` @kind object;
  #L082f64.  v1:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L082f68.  call `a`(v0, v1) @signature `La/a/e/g$b;.a:(La/a/e/g;)V` @kind virtual;
  #L082f6e.  return @kind void;
}

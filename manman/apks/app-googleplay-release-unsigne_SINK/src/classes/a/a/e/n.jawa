record `a.a.e.n` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `a.a.e.n.a` @AccessFlag PRIVATE;
  `int`[] `a.a.e.n.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.e.n` v1 @kind this) @signature `La/a/e/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L087614.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08761a.  v0:= 10I;
  #L08761e.  v0:= new `int`[v0];
  #L087622.  v1.`a.a.e.n.b` @type ^`int`[] := v0 @kind object;
  #L087626.  return @kind void;
}
procedure `a.a.e.n` `a`(`a.a.e.n` v2 @kind this, `int` v3 , `int` v4 ) @signature `La/a/e/n;.a:(II)La/a/e/n;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L087638.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L08763c.  v0:= length @variable v0;
  #L08763e.  if v3 < v0 then goto L087644;
  #L087642.  return v2 @kind object;
  #L087644.  v0:= 1I;
  #L087646.  v0:= v0 ^< v3 @kind int;
  #L087648.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L08764c.  v0:= v0 ^| v1 @kind int;
  #L08764e.  v2.`a.a.e.n.a` @type ^`int` := v0;
  #L087652.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L087656.  v0[v3]:= v4;
  #L08765a.  goto L087642;
}
procedure `void` `a`(`a.a.e.n` v2 @kind this) @signature `La/a/e/n;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L08766c.  v1:= 0I;
  #L08766e.  v2.`a.a.e.n.a` @type ^`int` := v1;
  #L087672.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L087676.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L08767c.  return @kind void;
}
procedure `void` `a`(`a.a.e.n` v2 @kind this, `a.a.e.n` v3 @kind object) @signature `La/a/e/n;.a:(La/a/e/n;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L087690.  v0:= 0I;
  #L087692.  v1:= 10I;
  #L087696.  if v0 >= v1 then goto L0876bc;
  #L08769a.  call temp:= `a`(v3, v0) @signature `La/a/e/n;.a:(I)Z` @kind virtual;
  #L0876a0.  v1:= temp;
  #L0876a2.  if v1 != 0 then goto L0876ac;
  #L0876a6.  v0:= v0 + 1;
  #L0876aa.  goto L087692;
  #L0876ac.  call temp:= `b`(v3, v0) @signature `La/a/e/n;.b:(I)I` @kind virtual;
  #L0876b2.  v1:= temp;
  #L0876b4.  call temp:= `a`(v2, v0, v1) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L0876ba.  goto L0876a6;
  #L0876bc.  return @kind void;
}
procedure `boolean` `a`(`a.a.e.n` v3 @kind this, `int` v4 ) @signature `La/a/e/n;.a:(I)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L0876d0.  v0:= 1I;
  #L0876d2.  v1:= v0 ^< v4 @kind int;
  #L0876d6.  v2:= v3.`a.a.e.n.a` @type ^`int`;
  #L0876da.  v1:= v1 ^& v2 @kind int;
  #L0876dc.  if v1 == 0 then goto L0876e2;
  #L0876e0.  return v0;
  #L0876e2.  v0:= 0I;
  #L0876e4.  goto L0876e0;
}
procedure `int` `b`(`a.a.e.n` v1 @kind this) @signature `La/a/e/n;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L0876f8.  v0:= v1.`a.a.e.n.a` @type ^`int`;
  #L0876fc.  call temp:= `bitCount`(v0) @signature `Ljava/lang/Integer;.bitCount:(I)I` @kind static;
  #L087702.  v0:= temp;
  #L087704.  return v0;
}
procedure `int` `b`(`a.a.e.n` v1 @kind this, `int` v2 ) @signature `La/a/e/n;.b:(I)I` @AccessFlag  {
    temp;
    v0;

  #L087718.  v0:= v1.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L08771c.  v0:= v0[v2];
  #L087720.  return v0;
}
procedure `int` `c`(`a.a.e.n` v2 @kind this) @signature `La/a/e/n;.c:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L087734.  v0:= 2I;
  #L087736.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L08773a.  v0:= v0 ^& v1 @kind int;
  #L08773c.  if v0 == 0 then goto L08774c;
  #L087740.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L087744.  v1:= 1I;
  #L087746.  v0:= v0[v1];
  #L08774a.  return v0;
  #L08774c.  v0:= -1I;
  #L08774e.  goto L08774a;
}
procedure `int` `c`(`a.a.e.n` v2 @kind this, `int` v3 ) @signature `La/a/e/n;.c:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L087760.  v0:= 16I;
  #L087764.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L087768.  v0:= v0 ^& v1 @kind int;
  #L08776a.  if v0 == 0 then goto L087778;
  #L08776e.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L087772.  v1:= 4I;
  #L087774.  v3:= v0[v1];
  #L087778.  return v3;
}
procedure `int` `d`(`a.a.e.n` v2 @kind this) @signature `La/a/e/n;.d:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L08778c.  v0:= 128I;
  #L087790.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L087794.  v0:= v0 ^& v1 @kind int;
  #L087796.  if v0 == 0 then goto L0877a6;
  #L08779a.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L08779e.  v1:= 7I;
  #L0877a0.  v0:= v0[v1];
  #L0877a4.  return v0;
  #L0877a6.  v0:= 65535I;
  #L0877ac.  goto L0877a4;
}
procedure `int` `d`(`a.a.e.n` v2 @kind this, `int` v3 ) @signature `La/a/e/n;.d:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L0877c0.  v0:= 32I;
  #L0877c4.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L0877c8.  v0:= v0 ^& v1 @kind int;
  #L0877ca.  if v0 == 0 then goto L0877d8;
  #L0877ce.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L0877d2.  v1:= 5I;
  #L0877d4.  v3:= v0[v1];
  #L0877d8.  return v3;
}

record `a.a.c.f` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07de18.  v0:= "POST" @kind object;
  #L07de1c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07de22.  v0:= temp;
  #L07de24.  if v0 != 0 then goto L07de68;
  #L07de28.  v0:= "PATCH" @kind object;
  #L07de2c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07de32.  v0:= temp;
  #L07de34.  if v0 != 0 then goto L07de68;
  #L07de38.  v0:= "PUT" @kind object;
  #L07de3c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07de42.  v0:= temp;
  #L07de44.  if v0 != 0 then goto L07de68;
  #L07de48.  v0:= "DELETE" @kind object;
  #L07de4c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07de52.  v0:= temp;
  #L07de54.  if v0 != 0 then goto L07de68;
  #L07de58.  v0:= "MOVE" @kind object;
  #L07de5c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07de62.  v0:= temp;
  #L07de64.  if v0 == 0 then goto L07de6c;
  #L07de68.  v0:= 1I;
  #L07de6a.  return v0;
  #L07de6c.  v0:= 0I;
  #L07de6e.  goto L07de6a;
}
procedure `boolean` `b`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07de80.  v0:= "POST" @kind object;
  #L07de84.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07de8a.  v0:= temp;
  #L07de8c.  if v0 != 0 then goto L07ded0;
  #L07de90.  v0:= "PUT" @kind object;
  #L07de94.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07de9a.  v0:= temp;
  #L07de9c.  if v0 != 0 then goto L07ded0;
  #L07dea0.  v0:= "PATCH" @kind object;
  #L07dea4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07deaa.  v0:= temp;
  #L07deac.  if v0 != 0 then goto L07ded0;
  #L07deb0.  v0:= "PROPPATCH" @kind object;
  #L07deb4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07deba.  v0:= temp;
  #L07debc.  if v0 != 0 then goto L07ded0;
  #L07dec0.  v0:= "REPORT" @kind object;
  #L07dec4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07deca.  v0:= temp;
  #L07decc.  if v0 == 0 then goto L07ded4;
  #L07ded0.  v0:= 1I;
  #L07ded2.  return v0;
  #L07ded4.  v0:= 0I;
  #L07ded6.  goto L07ded2;
}
procedure `boolean` `c`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07dee8.  call temp:= `b`(v1) @signature `La/a/c/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L07deee.  v0:= temp;
  #L07def0.  if v0 != 0 then goto L07df44;
  #L07def4.  v0:= "OPTIONS" @kind object;
  #L07def8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07defe.  v0:= temp;
  #L07df00.  if v0 != 0 then goto L07df44;
  #L07df04.  v0:= "DELETE" @kind object;
  #L07df08.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07df0e.  v0:= temp;
  #L07df10.  if v0 != 0 then goto L07df44;
  #L07df14.  v0:= "PROPFIND" @kind object;
  #L07df18.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07df1e.  v0:= temp;
  #L07df20.  if v0 != 0 then goto L07df44;
  #L07df24.  v0:= "MKCOL" @kind object;
  #L07df28.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07df2e.  v0:= temp;
  #L07df30.  if v0 != 0 then goto L07df44;
  #L07df34.  v0:= "LOCK" @kind object;
  #L07df38.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07df3e.  v0:= temp;
  #L07df40.  if v0 == 0 then goto L07df48;
  #L07df44.  v0:= 1I;
  #L07df46.  return v0;
  #L07df48.  v0:= 0I;
  #L07df4a.  goto L07df46;
}
procedure `boolean` `d`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.d:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07df5c.  v0:= "PROPFIND" @kind object;
  #L07df60.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07df66.  v0:= temp;
  #L07df68.  return v0;
}
procedure `boolean` `e`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.e:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07df7c.  v0:= "PROPFIND" @kind object;
  #L07df80.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07df86.  v0:= temp;
  #L07df88.  if v0 != 0 then goto L07df90;
  #L07df8c.  v0:= 1I;
  #L07df8e.  return v0;
  #L07df90.  v0:= 0I;
  #L07df92.  goto L07df8e;
}

record `a.a.c.j` @kind class @AccessFlag PUBLIC_FINAL extends `a.s` @kind interface {
  `a.u` `a.a.c.j.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.c.j.b` @AccessFlag PRIVATE_FINAL;
  `a.a.b.g` `a.a.c.j.c` @AccessFlag PRIVATE;
  `java.lang.Object` `a.a.c.j.d` @AccessFlag PRIVATE;
  `boolean` `a.a.c.j.e` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`a.a.c.j` v0 @kind this, `a.u` v1 @kind object, `boolean` v2 ) @signature `La/a/c/j;.<init>:(La/u;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L07e574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07e57a.  v0.`a.a.c.j.a` @type ^`a.u` := v1 @kind object;
  #L07e57e.  v0.`a.a.c.j.b` @type ^`boolean` := v2 @kind boolean;
  #L07e582.  return @kind void;
}
procedure `a.a` `a`(`a.a.c.j` v13 @kind this, `a.r` v14 @kind object) @signature `La/a/c/j;.a:(La/r;)La/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L07e594.  v7:= 0I;
  #L07e596.  call temp:= `c`(v14) @signature `La/r;.c:()Z` @kind virtual;
  #L07e59c.  v0:= temp;
  #L07e59e.  if v0 == 0 then goto L07e636;
  #L07e5a2.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e5a6.  call temp:= `j`(v0) @signature `La/u;.j:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L07e5ac.  v5:= temp @kind object;
  #L07e5ae.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e5b2.  call temp:= `k`(v0) @signature `La/u;.k:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L07e5b8.  v6:= temp @kind object;
  #L07e5ba.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e5be.  call temp:= `l`(v0) @signature `La/u;.l:()La/g;` @kind virtual;
  #L07e5c4.  v7:= temp @kind object;
  #L07e5c6.  v0:= new `a.a`;
  #L07e5ca.  call temp:= `f`(v14) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07e5d0.  v1:= temp @kind object;
  #L07e5d2.  call temp:= `g`(v14) @signature `La/r;.g:()I` @kind virtual;
  #L07e5d8.  v2:= temp;
  #L07e5da.  v3:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e5de.  call temp:= `h`(v3) @signature `La/u;.h:()La/o;` @kind virtual;
  #L07e5e4.  v3:= temp @kind object;
  #L07e5e6.  v4:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e5ea.  call temp:= `i`(v4) @signature `La/u;.i:()Ljavax/net/SocketFactory;` @kind virtual;
  #L07e5f0.  v4:= temp @kind object;
  #L07e5f2.  v8:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e5f6.  call temp:= `n`(v8) @signature `La/u;.n:()La/b;` @kind virtual;
  #L07e5fc.  v8:= temp @kind object;
  #L07e5fe.  v9:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e602.  call temp:= `d`(v9) @signature `La/u;.d:()Ljava/net/Proxy;` @kind virtual;
  #L07e608.  v9:= temp @kind object;
  #L07e60a.  v10:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e60e.  call temp:= `t`(v10) @signature `La/u;.t:()Ljava/util/List;` @kind virtual;
  #L07e614.  v10:= temp @kind object;
  #L07e616.  v11:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e61a.  call temp:= `u`(v11) @signature `La/u;.u:()Ljava/util/List;` @kind virtual;
  #L07e620.  v11:= temp @kind object;
  #L07e622.  v12:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e626.  call temp:= `e`(v12) @signature `La/u;.e:()Ljava/net/ProxySelector;` @kind virtual;
  #L07e62c.  v12:= temp @kind object;
  #L07e62e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `La/a;.<init>:(Ljava/lang/String;ILa/o;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;La/g;La/b;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L07e634.  return v0 @kind object;
  #L07e636.  v6:= v7 @kind object;
  #L07e638.  v5:= v7 @kind object;
  #L07e63a.  goto L07e5c6;
}
procedure `a.x` `a`(`a.a.c.j` v6 @kind this, `a.z` v7 @kind object) @signature `La/a/c/j;.a:(La/z;)La/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07e64c.  v1:= 0I;
  #L07e64e.  if v7 != 0 then goto L07e65e;
  #L07e652.  v0:= new `java.lang.IllegalStateException`;
  #L07e656.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L07e65c.  throw v0;
  #L07e65e.  v0:= v6.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07e662.  call temp:= `b`(v0) @signature `La/a/b/g;.b:()La/a/b/c;` @kind virtual;
  #L07e668.  v0:= temp @kind object;
  #L07e66a.  if v0 == 0 then goto L07e696;
  #L07e66e.  call temp:= `a`(v0) @signature `La/i;.a:()La/ab;` @kind interface;
  #L07e674.  v0:= temp @kind object;
  #L07e676.  call temp:= `b`(v7) @signature `La/z;.b:()I` @kind virtual;
  #L07e67c.  v2:= temp;
  #L07e67e.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07e684.  v3:= temp @kind object;
  #L07e686.  call temp:= `b`(v3) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L07e68c.  v3:= temp @kind object;
  #L07e68e.  goto L07e860;
  #L07e694.  return v1 @kind object;
  #L07e696.  v0:= v1 @kind object;
  #L07e698.  goto L07e676;
  #L07e69a.  if v0 == 0 then goto L07e6c6;
  #L07e69e.  call temp:= `b`(v0) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L07e6a4.  v1:= temp @kind object;
  #L07e6a6.  call temp:= `type`(v1) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L07e6ac.  v1:= temp @kind object;
  #L07e6ae.  v2:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L07e6b2.  if v1 == v2 then goto L07e6d4;
  #L07e6b6.  v0:= new `java.net.ProtocolException`;
  #L07e6ba.  v1:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L07e6be.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07e6c4.  throw v0;
  #L07e6c6.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e6ca.  call temp:= `d`(v1) @signature `La/u;.d:()Ljava/net/Proxy;` @kind virtual;
  #L07e6d0.  v1:= temp @kind object;
  #L07e6d2.  goto L07e6a6;
  #L07e6d4.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e6d8.  call temp:= `n`(v1) @signature `La/u;.n:()La/b;` @kind virtual;
  #L07e6de.  v1:= temp @kind object;
  #L07e6e0.  call temp:= `a`(v1, v0, v7) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L07e6e6.  v1:= temp @kind object;
  #L07e6e8.  goto L07e694;
  #L07e6ea.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e6ee.  call temp:= `m`(v1) @signature `La/u;.m:()La/b;` @kind virtual;
  #L07e6f4.  v1:= temp @kind object;
  #L07e6f6.  call temp:= `a`(v1, v0, v7) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L07e6fc.  v1:= temp @kind object;
  #L07e6fe.  goto L07e694;
  #L07e700.  v0:= "GET" @kind object;
  #L07e704.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07e70a.  v0:= temp;
  #L07e70c.  if v0 != 0 then goto L07e720;
  #L07e710.  v0:= "HEAD" @kind object;
  #L07e714.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07e71a.  v0:= temp;
  #L07e71c.  if v0 == 0 then goto L07e694;
  #L07e720.  v0:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e724.  call temp:= `q`(v0) @signature `La/u;.q:()Z` @kind virtual;
  #L07e72a.  v0:= temp;
  #L07e72c.  if v0 == 0 then goto L07e694;
  #L07e730.  v0:= "Location" @kind object;
  #L07e734.  call temp:= `a`(v7, v0) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07e73a.  v0:= temp @kind object;
  #L07e73c.  if v0 == 0 then goto L07e694;
  #L07e740.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07e746.  v2:= temp @kind object;
  #L07e748.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07e74e.  v2:= temp @kind object;
  #L07e750.  call temp:= `c`(v2, v0) @signature `La/r;.c:(Ljava/lang/String;)La/r;` @kind virtual;
  #L07e756.  v0:= temp @kind object;
  #L07e758.  if v0 == 0 then goto L07e694;
  #L07e75c.  call temp:= `b`(v0) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L07e762.  v2:= temp @kind object;
  #L07e764.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07e76a.  v4:= temp @kind object;
  #L07e76c.  call temp:= `a`(v4) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07e772.  v4:= temp @kind object;
  #L07e774.  call temp:= `b`(v4) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L07e77a.  v4:= temp @kind object;
  #L07e77c.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07e782.  v2:= temp;
  #L07e784.  if v2 != 0 then goto L07e798;
  #L07e788.  v2:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e78c.  call temp:= `p`(v2) @signature `La/u;.p:()Z` @kind virtual;
  #L07e792.  v2:= temp;
  #L07e794.  if v2 == 0 then goto L07e694;
  #L07e798.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07e79e.  v2:= temp @kind object;
  #L07e7a0.  call temp:= `e`(v2) @signature `La/x;.e:()La/x$a;` @kind virtual;
  #L07e7a6.  v2:= temp @kind object;
  #L07e7a8.  call temp:= `c`(v3) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L07e7ae.  v4:= temp;
  #L07e7b0.  if v4 == 0 then goto L07e7f4;
  #L07e7b4.  call temp:= `d`(v3) @signature `La/a/c/f;.d:(Ljava/lang/String;)Z` @kind static;
  #L07e7ba.  v4:= temp;
  #L07e7bc.  call temp:= `e`(v3) @signature `La/a/c/f;.e:(Ljava/lang/String;)Z` @kind static;
  #L07e7c2.  v5:= temp;
  #L07e7c4.  if v5 == 0 then goto L07e81e;
  #L07e7c8.  v3:= "GET" @kind object;
  #L07e7cc.  call temp:= `a`(v2, v3, v1) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @kind virtual;
  #L07e7d2.  if v4 != 0 then goto L07e7f4;
  #L07e7d6.  v1:= "Transfer-Encoding" @kind object;
  #L07e7da.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07e7e0.  v1:= "Content-Length" @kind object;
  #L07e7e4.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07e7ea.  v1:= "Content-Type" @kind object;
  #L07e7ee.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07e7f4.  call temp:= `a`(v6, v7, v0) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @kind direct;
  #L07e7fa.  v1:= temp;
  #L07e7fc.  if v1 != 0 then goto L07e80a;
  #L07e800.  v1:= "Authorization" @kind object;
  #L07e804.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07e80a.  call temp:= `a`(v2, v0) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L07e810.  v0:= temp @kind object;
  #L07e812.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L07e818.  v1:= temp @kind object;
  #L07e81a.  goto L07e694;
  #L07e81e.  if v4 == 0 then goto L07e832;
  #L07e822.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07e828.  v1:= temp @kind object;
  #L07e82a.  call temp:= `d`(v1) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07e830.  v1:= temp @kind object;
  #L07e832.  call temp:= `a`(v2, v3, v1) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @kind virtual;
  #L07e838.  goto L07e7d2;
  #L07e83a.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07e840.  v0:= temp @kind object;
  #L07e842.  call temp:= `d`(v0) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07e848.  v0:= temp @kind object;
  #L07e84a.  v0:= instanceof @variable v0 @type ^`a.a.c.l` @kind boolean;
  #L07e84e.  if v0 != 0 then goto L07e694;
  #L07e852.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07e858.  v1:= temp @kind object;
  #L07e85a.  goto L07e694;
  #L07e85e.  
  #L07e860.  switch v2
                  | 300 => goto L07e720
                  | 301 => goto L07e720
                  | 302 => goto L07e720
                  | 303 => goto L07e720
                  | 307 => goto L07e700
                  | 308 => goto L07e700
                  | 401 => goto L07e6ea
                  | 407 => goto L07e69a
                  | 408 => goto L07e83a
                  | else => goto L07e694;
}
procedure `boolean` `a`(`a.a.c.j` v3 @kind this, `a.z` v4 @kind object, `a.r` v5 @kind object) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07e8bc.  call temp:= `a`(v4) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07e8c2.  v0:= temp @kind object;
  #L07e8c4.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07e8ca.  v0:= temp @kind object;
  #L07e8cc.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07e8d2.  v1:= temp @kind object;
  #L07e8d4.  call temp:= `f`(v5) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07e8da.  v2:= temp @kind object;
  #L07e8dc.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07e8e2.  v1:= temp;
  #L07e8e4.  if v1 == 0 then goto L07e91c;
  #L07e8e8.  call temp:= `g`(v0) @signature `La/r;.g:()I` @kind virtual;
  #L07e8ee.  v1:= temp;
  #L07e8f0.  call temp:= `g`(v5) @signature `La/r;.g:()I` @kind virtual;
  #L07e8f6.  v2:= temp;
  #L07e8f8.  if v1 != v2 then goto L07e91c;
  #L07e8fc.  call temp:= `b`(v0) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L07e902.  v0:= temp @kind object;
  #L07e904.  call temp:= `b`(v5) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L07e90a.  v1:= temp @kind object;
  #L07e90c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07e912.  v0:= temp;
  #L07e914.  if v0 == 0 then goto L07e91c;
  #L07e918.  v0:= 1I;
  #L07e91a.  return v0;
  #L07e91c.  v0:= 0I;
  #L07e91e.  goto L07e91a;
}
procedure `boolean` `a`(`a.a.c.j` v3 @kind this, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `La/a/c/j;.a:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07e930.  v0:= 1I;
  #L07e932.  v1:= 0I;
  #L07e934.  v2:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L07e938.  if v2 == 0 then goto L07e93e;
  #L07e93c.  return v1;
  #L07e93e.  v2:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L07e942.  if v2 == 0 then goto L07e95a;
  #L07e946.  v2:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L07e94a.  if v2 == 0 then goto L07e956;
  #L07e94e.  if v5 != 0 then goto L07e956;
  #L07e952.  v1:= v0;
  #L07e954.  goto L07e93c;
  #L07e956.  v0:= v1;
  #L07e958.  goto L07e952;
  #L07e95a.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L07e95e.  if v2 == 0 then goto L07e972;
  #L07e962.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L07e968.  v2:= temp @kind object;
  #L07e96a.  v2:= instanceof @variable v2 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L07e96e.  if v2 != 0 then goto L07e93c;
  #L07e972.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L07e976.  if v2 != 0 then goto L07e93c;
  #L07e97a.  v1:= v0;
  #L07e97c.  goto L07e93c;
}
procedure `boolean` `a`(`a.a.c.j` v2 @kind this, `java.io.IOException` v3 @kind object, `boolean` v4 , `a.x` v5 @kind object) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L07e990.  v0:= 0I;
  #L07e992.  v1:= v2.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07e996.  call `a`(v1, v3) @signature `La/a/b/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L07e99c.  v1:= v2.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07e9a0.  call temp:= `r`(v1) @signature `La/u;.r:()Z` @kind virtual;
  #L07e9a6.  v1:= temp;
  #L07e9a8.  if v1 != 0 then goto L07e9ae;
  #L07e9ac.  return v0;
  #L07e9ae.  if v4 == 0 then goto L07e9c2;
  #L07e9b2.  call temp:= `d`(v5) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07e9b8.  v1:= temp @kind object;
  #L07e9ba.  v1:= instanceof @variable v1 @type ^`a.a.c.l` @kind boolean;
  #L07e9be.  if v1 != 0 then goto L07e9ac;
  #L07e9c2.  call temp:= `a`(v2, v3, v4) @signature `La/a/c/j;.a:(Ljava/io/IOException;Z)Z` @kind direct;
  #L07e9c8.  v1:= temp;
  #L07e9ca.  if v1 == 0 then goto L07e9ac;
  #L07e9ce.  v1:= v2.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07e9d2.  call temp:= `e`(v1) @signature `La/a/b/g;.e:()Z` @kind virtual;
  #L07e9d8.  v1:= temp;
  #L07e9da.  if v1 == 0 then goto L07e9ac;
  #L07e9de.  v0:= 1I;
  #L07e9e0.  goto L07e9ac;
}
procedure `a.z` `a`(`a.a.c.j` v10 @kind this, `a.s$a` v11 @kind object) @signature `La/a/c/j;.a:(La/s$a;)La/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L07e9f4.  v5:= 0I;
  #L07e9f6.  v3:= 0I;
  #L07e9f8.  call temp:= `a`(v11) @signature `La/s$a;.a:()La/x;` @kind interface;
  #L07e9fe.  v1:= temp @kind object;
  #L07ea00.  v2:= new `a.a.b.g`;
  #L07ea04.  v4:= v10.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07ea08.  call temp:= `o`(v4) @signature `La/u;.o:()La/j;` @kind virtual;
  #L07ea0e.  v4:= temp @kind object;
  #L07ea10.  call temp:= `a`(v1) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07ea16.  v6:= temp @kind object;
  #L07ea18.  call temp:= `a`(v10, v6) @signature `La/a/c/j;.a:(La/r;)La/a;` @kind direct;
  #L07ea1e.  v6:= temp @kind object;
  #L07ea20.  v7:= v10.`a.a.c.j.d` @type ^`java.lang.Object` @kind object;
  #L07ea24.  call `<init>`(v2, v4, v6, v7) @signature `La/a/b/g;.<init>:(La/j;La/a;Ljava/lang/Object;)V` @kind direct;
  #L07ea2a.  v10.`a.a.c.j.c` @type ^`a.a.b.g` := v2 @kind object;
  #L07ea2e.  v2:= v3 @kind object;
  #L07ea30.  v4:= v5;
  #L07ea32.  v6:= v1 @kind object;
  #L07ea34.  v1:= v10.`a.a.c.j.e` @type ^`boolean` @kind boolean;
  #L07ea38.  if v1 == 0 then goto L07ea56;
  #L07ea3c.  v1:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07ea40.  call `c`(v1) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07ea46.  v1:= new `java.io.IOException`;
  #L07ea4a.  v2:= "Canceled" @kind object;
  #L07ea4e.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07ea54.  throw v1;
  #Try_start0.  
  #L07ea56.  v0:= v11 @kind object;
  #L07ea58.  v0:= (`a.a.c.g`) v0 @kind object;
  #L07ea5c.  v1:= v0 @kind object;
  #L07ea5e.  v7:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07ea62.  v8:= 0I;
  #L07ea64.  v9:= 0I;
  #L07ea66.  call temp:= `a`(v1, v6, v7, v8, v9) @signature `La/a/c/g;.a:(La/x;La/a/b/g;La/a/c/c;La/i;)La/z;` @kind virtual;
  #Try_end0.  
  #L07ea6c.  v1:= temp @kind object;
  #L07ea6e.  if v2 == 0 then goto L07eaa2;
  #L07ea72.  call temp:= `g`(v1) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L07ea78.  v1:= temp @kind object;
  #L07ea7a.  call temp:= `g`(v2) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L07ea80.  v2:= temp @kind object;
  #L07ea82.  call temp:= `a`(v2, v3) @signature `La/z$a;.a:(La/aa;)La/z$a;` @kind virtual;
  #L07ea88.  v2:= temp @kind object;
  #L07ea8a.  call temp:= `a`(v2) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07ea90.  v2:= temp @kind object;
  #L07ea92.  call temp:= `c`(v1, v2) @signature `La/z$a;.c:(La/z;)La/z$a;` @kind virtual;
  #L07ea98.  v1:= temp @kind object;
  #L07ea9a.  call temp:= `a`(v1) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07eaa0.  v1:= temp @kind object;
  #L07eaa2.  call temp:= `a`(v10, v1) @signature `La/a/c/j;.a:(La/z;)La/x;` @kind direct;
  #L07eaa8.  v6:= temp @kind object;
  #L07eaaa.  if v6 != 0 then goto L07eb1a;
  #L07eaae.  v2:= v10.`a.a.c.j.b` @type ^`boolean` @kind boolean;
  #L07eab2.  if v2 != 0 then goto L07eac0;
  #L07eab6.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07eaba.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07eac0.  return v1 @kind object;
  #L07eac2.  v1:= Exception @type ^`a.a.b.e` @kind object;
  #Try_start1.  
  #L07eac4.  call temp:= `a`(v1) @signature `La/a/b/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L07eaca.  v7:= temp @kind object;
  #L07eacc.  v8:= 0I;
  #L07eace.  call temp:= `a`(v10, v7, v8, v6) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @kind direct;
  #L07ead4.  v7:= temp;
  #L07ead6.  if v7 != 0 then goto L07ea34;
  #L07eada.  call temp:= `a`(v1) @signature `La/a/b/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L07eae0.  v1:= temp @kind object;
  #L07eae2.  throw v1;
  #Try_end1.  
  #L07eae4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07eae6.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07eaea.  call `a`(v2, v3) @signature `La/a/b/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L07eaf0.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07eaf4.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07eafa.  throw v1;
  #L07eafc.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L07eafe.  v7:= instanceof @variable v1 @type ^`a.a.e.a` @kind boolean;
  #L07eb02.  if v7 != 0 then goto L07eb16;
  #L07eb06.  v7:= 1I;
  #L07eb08.  call temp:= `a`(v10, v1, v7, v6) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @kind direct;
  #L07eb0e.  v7:= temp;
  #L07eb10.  if v7 != 0 then goto L07ea34;
  #L07eb14.  throw v1;
  #Try_end2.  
  #L07eb16.  v7:= v5;
  #L07eb18.  goto L07eb08;
  #L07eb1a.  call temp:= `f`(v1) @signature `La/z;.f:()La/aa;` @kind virtual;
  #L07eb20.  v2:= temp @kind object;
  #L07eb22.  call `a`(v2) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07eb28.  v2:= v4 + 1;
  #L07eb2c.  v4:= 20I;
  #L07eb30.  if v2 <= v4 then goto L07eb70;
  #L07eb34.  v1:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07eb38.  call `c`(v1) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07eb3e.  v1:= new `java.net.ProtocolException`;
  #L07eb42.  v3:= new `java.lang.StringBuilder`;
  #L07eb46.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07eb4c.  v4:= "Too many follow-up requests: " @kind object;
  #L07eb50.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07eb56.  v3:= temp @kind object;
  #L07eb58.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L07eb5e.  v2:= temp @kind object;
  #L07eb60.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07eb66.  v2:= temp @kind object;
  #L07eb68.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07eb6e.  throw v1;
  #L07eb70.  call temp:= `d`(v6) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07eb76.  v4:= temp @kind object;
  #L07eb78.  v4:= instanceof @variable v4 @type ^`a.a.c.l` @kind boolean;
  #L07eb7c.  if v4 == 0 then goto L07eba2;
  #L07eb80.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07eb84.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07eb8a.  v2:= new `java.net.HttpRetryException`;
  #L07eb8e.  v3:= "Cannot retry streamed HTTP body" @kind object;
  #L07eb92.  call temp:= `b`(v1) @signature `La/z;.b:()I` @kind virtual;
  #L07eb98.  v1:= temp;
  #L07eb9a.  call `<init>`(v2, v3, v1) @signature `Ljava/net/HttpRetryException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L07eba0.  throw v2;
  #L07eba2.  call temp:= `a`(v6) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07eba8.  v4:= temp @kind object;
  #L07ebaa.  call temp:= `a`(v10, v1, v4) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @kind direct;
  #L07ebb0.  v4:= temp;
  #L07ebb2.  if v4 != 0 then goto L07ebf6;
  #L07ebb6.  v4:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07ebba.  call `c`(v4) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07ebc0.  v4:= new `a.a.b.g`;
  #L07ebc4.  v7:= v10.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07ebc8.  call temp:= `o`(v7) @signature `La/u;.o:()La/j;` @kind virtual;
  #L07ebce.  v7:= temp @kind object;
  #L07ebd0.  call temp:= `a`(v6) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07ebd6.  v8:= temp @kind object;
  #L07ebd8.  call temp:= `a`(v10, v8) @signature `La/a/c/j;.a:(La/r;)La/a;` @kind direct;
  #L07ebde.  v8:= temp @kind object;
  #L07ebe0.  v9:= v10.`a.a.c.j.d` @type ^`java.lang.Object` @kind object;
  #L07ebe4.  call `<init>`(v4, v7, v8, v9) @signature `La/a/b/g;.<init>:(La/j;La/a;Ljava/lang/Object;)V` @kind direct;
  #L07ebea.  v10.`a.a.c.j.c` @type ^`a.a.b.g` := v4 @kind object;
  #L07ebee.  v4:= v2;
  #L07ebf0.  v2:= v1 @kind object;
  #L07ebf2.  goto L07ea34;
  #L07ebf6.  v4:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07ebfa.  call temp:= `a`(v4) @signature `La/a/b/g;.a:()La/a/c/c;` @kind virtual;
  #L07ec00.  v4:= temp @kind object;
  #L07ec02.  if v4 == 0 then goto L07ebee;
  #L07ec06.  v2:= new `java.lang.IllegalStateException`;
  #L07ec0a.  v3:= new `java.lang.StringBuilder`;
  #L07ec0e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07ec14.  v4:= "Closing the body of " @kind object;
  #L07ec18.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07ec1e.  v3:= temp @kind object;
  #L07ec20.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07ec26.  v1:= temp @kind object;
  #L07ec28.  v3:= " didn't close its backing stream. Bad interceptor?" @kind object;
  #L07ec2c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07ec32.  v1:= temp @kind object;
  #L07ec34.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07ec3a.  v1:= temp @kind object;
  #L07ec3c.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07ec42.  throw v2;
  catch `a.a.b.e` @[Try_start0..Try_end0] goto L07eac2;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07eafc;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07eae4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07eae4;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07eae4;
}
procedure `void` `a`(`a.a.c.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `La/a/c/j;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L07ec78.  v0.`a.a.c.j.d` @type ^`java.lang.Object` := v1 @kind object;
  #L07ec7c.  return @kind void;
}
procedure `boolean` `a`(`a.a.c.j` v1 @kind this) @signature `La/a/c/j;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07ec90.  v0:= v1.`a.a.c.j.e` @type ^`boolean` @kind boolean;
  #L07ec94.  return v0;
}

record `a.a.a.c$a` @kind class @AccessFlag PUBLIC {
  `long` `a.a.a.c$a.a` @AccessFlag FINAL;
  `a.x` `a.a.a.c$a.b` @AccessFlag FINAL;
  `a.z` `a.a.a.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `a.a.a.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `a.a.a.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `a.a.a.c$a.h` @AccessFlag PRIVATE;
  `long` `a.a.a.c$a.i` @AccessFlag PRIVATE;
  `long` `a.a.a.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.k` @AccessFlag PRIVATE;
  `int` `a.a.a.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.a.c$a` v7 @kind this, `long` v8 , `a.x` v10 @kind object, `a.z` v11 @kind object) @signature `La/a/a/c$a;.<init>:(JLa/x;La/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07a6b8.  v6:= -1I;
  #L07a6ba.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07a6c0.  v7.`a.a.a.c$a.l` @type ^`int` := v6;
  #L07a6c4.  v7.`a.a.a.c$a.a` @type ^`long` := v8 @kind wide;
  #L07a6c8.  v7.`a.a.a.c$a.b` @type ^`a.x` := v10 @kind object;
  #L07a6cc.  v7.`a.a.a.c$a.c` @type ^`a.z` := v11 @kind object;
  #L07a6d0.  if v11 == 0 then goto L07a7ac;
  #L07a6d4.  call temp:= `i`(v11) @signature `La/z;.i:()J` @kind virtual;
  #L07a6da.  v0:= temp @kind wide;
  #L07a6dc.  v7.`a.a.a.c$a.i` @type ^`long` := v0 @kind wide;
  #L07a6e0.  call temp:= `j`(v11) @signature `La/z;.j:()J` @kind virtual;
  #L07a6e6.  v0:= temp @kind wide;
  #L07a6e8.  v7.`a.a.a.c$a.j` @type ^`long` := v0 @kind wide;
  #L07a6ec.  call temp:= `e`(v11) @signature `La/z;.e:()La/q;` @kind virtual;
  #L07a6f2.  v1:= temp @kind object;
  #L07a6f4.  v0:= 0I;
  #L07a6f6.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L07a6fc.  v2:= temp;
  #L07a6fe.  if v0 >= v2 then goto L07a7ac;
  #L07a702.  call temp:= `a`(v1, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L07a708.  v3:= temp @kind object;
  #L07a70a.  call temp:= `b`(v1, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L07a710.  v4:= temp @kind object;
  #L07a712.  v5:= "Date" @kind object;
  #L07a716.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07a71c.  v5:= temp;
  #L07a71e.  if v5 == 0 then goto L07a738;
  #L07a722.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L07a728.  v3:= temp @kind object;
  #L07a72a.  v7.`a.a.a.c$a.d` @type ^`java.util.Date` := v3 @kind object;
  #L07a72e.  v7.`a.a.a.c$a.e` @type ^`java.lang.String` := v4 @kind object;
  #L07a732.  v0:= v0 + 1;
  #L07a736.  goto L07a6fe;
  #L07a738.  v5:= "Expires" @kind object;
  #L07a73c.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07a742.  v5:= temp;
  #L07a744.  if v5 == 0 then goto L07a756;
  #L07a748.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L07a74e.  v3:= temp @kind object;
  #L07a750.  v7.`a.a.a.c$a.h` @type ^`java.util.Date` := v3 @kind object;
  #L07a754.  goto L07a732;
  #L07a756.  v5:= "Last-Modified" @kind object;
  #L07a75a.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07a760.  v5:= temp;
  #L07a762.  if v5 == 0 then goto L07a778;
  #L07a766.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L07a76c.  v3:= temp @kind object;
  #L07a76e.  v7.`a.a.a.c$a.f` @type ^`java.util.Date` := v3 @kind object;
  #L07a772.  v7.`a.a.a.c$a.g` @type ^`java.lang.String` := v4 @kind object;
  #L07a776.  goto L07a732;
  #L07a778.  v5:= "ETag" @kind object;
  #L07a77c.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07a782.  v5:= temp;
  #L07a784.  if v5 == 0 then goto L07a78e;
  #L07a788.  v7.`a.a.a.c$a.k` @type ^`java.lang.String` := v4 @kind object;
  #L07a78c.  goto L07a732;
  #L07a78e.  v5:= "Age" @kind object;
  #L07a792.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07a798.  v3:= temp;
  #L07a79a.  if v3 == 0 then goto L07a732;
  #L07a79e.  call temp:= `b`(v4, v6) @signature `La/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L07a7a4.  v3:= temp;
  #L07a7a6.  v7.`a.a.a.c$a.l` @type ^`int` := v3;
  #L07a7aa.  goto L07a732;
  #L07a7ac.  return @kind void;
}
procedure `boolean` `a`(`a.x` v1 @kind object) @signature `La/a/a/c$a;.a:(La/x;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L07a7c0.  v0:= "If-Modified-Since" @kind object;
  #L07a7c4.  call temp:= `a`(v1, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07a7ca.  v0:= temp @kind object;
  #L07a7cc.  if v0 != 0 then goto L07a7e0;
  #L07a7d0.  v0:= "If-None-Match" @kind object;
  #L07a7d4.  call temp:= `a`(v1, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07a7da.  v0:= temp @kind object;
  #L07a7dc.  if v0 == 0 then goto L07a7e4;
  #L07a7e0.  v0:= 1I;
  #L07a7e2.  return v0;
  #L07a7e4.  v0:= 0I;
  #L07a7e6.  goto L07a7e2;
}
procedure `a.a.a.c` `b`(`a.a.a.c$a` v14 @kind this) @signature `La/a/a/c$a;.b:()La/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L07a7f8.  v4:= 0L;
  #L07a7fc.  v13:= -1I;
  #L07a7fe.  v12:= 0I;
  #L07a800.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07a804.  if v0 != 0 then goto L07a818;
  #L07a808.  v0:= new `a.a.a.c`;
  #L07a80c.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a810.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07a816.  return v0 @kind object;
  #L07a818.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a81c.  call temp:= `g`(v0) @signature `La/x;.g:()Z` @kind virtual;
  #L07a822.  v0:= temp;
  #L07a824.  if v0 == 0 then goto L07a848;
  #L07a828.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07a82c.  call temp:= `d`(v0) @signature `La/z;.d:()La/p;` @kind virtual;
  #L07a832.  v0:= temp @kind object;
  #L07a834.  if v0 != 0 then goto L07a848;
  #L07a838.  v0:= new `a.a.a.c`;
  #L07a83c.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a840.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07a846.  goto L07a816;
  #L07a848.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07a84c.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a850.  call temp:= `a`(v0, v1) @signature `La/a/a/c;.a:(La/z;La/x;)Z` @kind static;
  #L07a856.  v0:= temp;
  #L07a858.  if v0 != 0 then goto L07a86c;
  #L07a85c.  v0:= new `a.a.a.c`;
  #L07a860.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a864.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07a86a.  goto L07a816;
  #L07a86c.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a870.  call temp:= `f`(v0) @signature `La/x;.f:()La/d;` @kind virtual;
  #L07a876.  v6:= temp @kind object;
  #L07a878.  call temp:= `a`(v6) @signature `La/d;.a:()Z` @kind virtual;
  #L07a87e.  v0:= temp;
  #L07a880.  if v0 != 0 then goto L07a894;
  #L07a884.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a888.  call temp:= `a`(v0) @signature `La/a/a/c$a;.a:(La/x;)Z` @kind static;
  #L07a88e.  v0:= temp;
  #L07a890.  if v0 == 0 then goto L07a8a4;
  #L07a894.  v0:= new `a.a.a.c`;
  #L07a898.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a89c.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07a8a2.  goto L07a816;
  #L07a8a4.  call temp:= `d`(v14) @signature `La/a/a/c$a;.d:()J` @kind direct;
  #L07a8aa.  v8:= temp @kind wide;
  #L07a8ac.  call temp:= `c`(v14) @signature `La/a/a/c$a;.c:()J` @kind direct;
  #L07a8b2.  v0:= temp @kind wide;
  #L07a8b4.  call temp:= `c`(v6) @signature `La/d;.c:()I` @kind virtual;
  #L07a8ba.  v2:= temp;
  #L07a8bc.  if v2 == v13 then goto L07a8de;
  #L07a8c0.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07a8c4.  call temp:= `c`(v6) @signature `La/d;.c:()I` @kind virtual;
  #L07a8ca.  v3:= temp;
  #L07a8cc.  v10:= (`long`) v3 @kind i2l;
  #L07a8ce.  call temp:= `toMillis`(v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L07a8d4.  v2:= temp @kind wide;
  #L07a8d6.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L07a8dc.  v0:= temp @kind wide;
  #L07a8de.  call temp:= `h`(v6) @signature `La/d;.h:()I` @kind virtual;
  #L07a8e4.  v2:= temp;
  #L07a8e6.  if v2 == v13 then goto L07aa50;
  #L07a8ea.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07a8ee.  call temp:= `h`(v6) @signature `La/d;.h:()I` @kind virtual;
  #L07a8f4.  v3:= temp;
  #L07a8f6.  v10:= (`long`) v3 @kind i2l;
  #L07a8f8.  call temp:= `toMillis`(v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L07a8fe.  v2:= temp @kind wide;
  #L07a900.  v7:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07a904.  call temp:= `h`(v7) @signature `La/z;.h:()La/d;` @kind virtual;
  #L07a90a.  v7:= temp @kind object;
  #L07a90c.  call temp:= `f`(v7) @signature `La/d;.f:()Z` @kind virtual;
  #L07a912.  v10:= temp;
  #L07a914.  if v10 != 0 then goto L07a93a;
  #L07a918.  call temp:= `g`(v6) @signature `La/d;.g:()I` @kind virtual;
  #L07a91e.  v10:= temp;
  #L07a920.  if v10 == v13 then goto L07a93a;
  #L07a924.  v4:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07a928.  call temp:= `g`(v6) @signature `La/d;.g:()I` @kind virtual;
  #L07a92e.  v5:= temp;
  #L07a930.  v10:= (`long`) v5 @kind i2l;
  #L07a932.  call temp:= `toMillis`(v4, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L07a938.  v4:= temp @kind wide;
  #L07a93a.  call temp:= `a`(v7) @signature `La/d;.a:()Z` @kind virtual;
  #L07a940.  v6:= temp;
  #L07a942.  if v6 != 0 then goto L07a9b6;
  #L07a946.  v6:= v8 + v2 @kind long;
  #L07a94a.  v4:= v4 + v0 @kind long;
  #L07a94c.  v4:= lcmp(v6, v4);
  #L07a950.  if v4 >= 0 then goto L07a9b6;
  #L07a954.  v4:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07a958.  call temp:= `g`(v4) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L07a95e.  v4:= temp @kind object;
  #L07a960.  v2:= v2 + v8 @kind long;
  #L07a962.  v0:= lcmp(v2, v0);
  #L07a966.  if v0 < 0 then goto L07a978;
  #L07a96a.  v0:= "Warning" @kind object;
  #L07a96e.  v1:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L07a972.  call temp:= `a`(v4, v0, v1) @signature `La/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/z$a;` @kind virtual;
  #L07a978.  v0:= 86400000L;
  #L07a97e.  v0:= lcmp(v8, v0);
  #L07a982.  if v0 <= 0 then goto L07a9a0;
  #L07a986.  call temp:= `e`(v14) @signature `La/a/a/c$a;.e:()Z` @kind direct;
  #L07a98c.  v0:= temp;
  #L07a98e.  if v0 == 0 then goto L07a9a0;
  #L07a992.  v0:= "Warning" @kind object;
  #L07a996.  v1:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L07a99a.  call temp:= `a`(v4, v0, v1) @signature `La/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/z$a;` @kind virtual;
  #L07a9a0.  v0:= new `a.a.a.c`;
  #L07a9a4.  call temp:= `a`(v4) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07a9aa.  v1:= temp @kind object;
  #L07a9ac.  call `<init>`(v0, v12, v1) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07a9b2.  goto L07a816;
  #L07a9b6.  v0:= v14.`a.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L07a9ba.  if v0 == 0 then goto L07aa1a;
  #L07a9be.  v1:= "If-None-Match" @kind object;
  #L07a9c2.  v0:= v14.`a.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L07a9c6.  v2:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a9ca.  call temp:= `c`(v2) @signature `La/x;.c:()La/q;` @kind virtual;
  #L07a9d0.  v2:= temp @kind object;
  #L07a9d2.  call temp:= `b`(v2) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L07a9d8.  v2:= temp @kind object;
  #L07a9da.  v3:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L07a9de.  call `a`(v3, v2, v1, v0) @signature `La/a/a;.a:(La/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L07a9e4.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07a9e8.  call temp:= `e`(v0) @signature `La/x;.e:()La/x$a;` @kind virtual;
  #L07a9ee.  v0:= temp @kind object;
  #L07a9f0.  call temp:= `a`(v2) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L07a9f6.  v1:= temp @kind object;
  #L07a9f8.  call temp:= `a`(v0, v1) @signature `La/x$a;.a:(La/q;)La/x$a;` @kind virtual;
  #L07a9fe.  v0:= temp @kind object;
  #L07aa00.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L07aa06.  v1:= temp @kind object;
  #L07aa08.  v0:= new `a.a.a.c`;
  #L07aa0c.  v2:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07aa10.  call `<init>`(v0, v1, v2) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07aa16.  goto L07a816;
  #L07aa1a.  v0:= v14.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L07aa1e.  if v0 == 0 then goto L07aa2c;
  #L07aa22.  v1:= "If-Modified-Since" @kind object;
  #L07aa26.  v0:= v14.`a.a.a.c$a.g` @type ^`java.lang.String` @kind object;
  #L07aa2a.  goto L07a9c6;
  #L07aa2c.  v0:= v14.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07aa30.  if v0 == 0 then goto L07aa3e;
  #L07aa34.  v1:= "If-Modified-Since" @kind object;
  #L07aa38.  v0:= v14.`a.a.a.c$a.e` @type ^`java.lang.String` @kind object;
  #L07aa3c.  goto L07a9c6;
  #L07aa3e.  v0:= new `a.a.a.c`;
  #L07aa42.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07aa46.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07aa4c.  goto L07a816;
  #L07aa50.  v2:= v4 @kind wide;
  #L07aa52.  goto L07a900;
}
procedure `long` `c`(`a.a.a.c$a` v6 @kind this) @signature `La/a/a/c$a;.c:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07aa68.  v2:= 0L;
  #L07aa6c.  v0:= v6.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07aa70.  call temp:= `h`(v0) @signature `La/z;.h:()La/d;` @kind virtual;
  #L07aa76.  v0:= temp @kind object;
  #L07aa78.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L07aa7e.  v1:= temp;
  #L07aa80.  v4:= -1I;
  #L07aa82.  if v1 == v4 then goto L07aa9e;
  #L07aa86.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07aa8a.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L07aa90.  v0:= temp;
  #L07aa92.  v2:= (`long`) v0 @kind i2l;
  #L07aa94.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L07aa9a.  v2:= temp @kind wide;
  #L07aa9c.  return v2 @kind wide;
  #L07aa9e.  v0:= v6.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L07aaa2.  if v0 == 0 then goto L07aae0;
  #L07aaa6.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07aaaa.  if v0 == 0 then goto L07aad6;
  #L07aaae.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07aab2.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L07aab8.  v0:= temp @kind wide;
  #L07aaba.  v4:= v6.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L07aabe.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L07aac4.  v4:= temp @kind wide;
  #L07aac6.  v0:= v4 - v0 @kind long;
  #L07aaca.  v4:= lcmp(v0, v2);
  #L07aace.  if v4 <= 0 then goto L07aadc;
  #L07aad2.  v2:= v0 @kind wide;
  #L07aad4.  goto L07aa9c;
  #L07aad6.  v0:= v6.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L07aada.  goto L07aaba;
  #L07aadc.  v0:= v2 @kind wide;
  #L07aade.  goto L07aad2;
  #L07aae0.  v0:= v6.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L07aae4.  if v0 == 0 then goto L07aa9c;
  #L07aae8.  v0:= v6.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07aaec.  call temp:= `a`(v0) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07aaf2.  v0:= temp @kind object;
  #L07aaf4.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07aafa.  v0:= temp @kind object;
  #L07aafc.  call temp:= `k`(v0) @signature `La/r;.k:()Ljava/lang/String;` @kind virtual;
  #L07ab02.  v0:= temp @kind object;
  #L07ab04.  if v0 != 0 then goto L07aa9c;
  #L07ab08.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07ab0c.  if v0 == 0 then goto L07ab3c;
  #L07ab10.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07ab14.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L07ab1a.  v0:= temp @kind wide;
  #L07ab1c.  v4:= v6.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L07ab20.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L07ab26.  v4:= temp @kind wide;
  #L07ab28.  v0:= v0 - v4 @kind long;
  #L07ab2a.  v4:= lcmp(v0, v2);
  #L07ab2e.  if v4 <= 0 then goto L07aa9c;
  #L07ab32.  v2:= 10L;
  #L07ab36.  v2:= v0 / v2 @kind long;
  #L07ab3a.  goto L07aa9c;
  #L07ab3c.  v0:= v6.`a.a.a.c$a.i` @type ^`long` @kind wide;
  #L07ab40.  goto L07ab1c;
}
procedure `long` `d`(`a.a.a.c$a` v8 @kind this) @signature `La/a/a/c$a;.d:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07ab54.  v0:= 0L;
  #L07ab58.  v2:= v8.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07ab5c.  if v2 == 0 then goto L07ab7a;
  #L07ab60.  v2:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L07ab64.  v4:= v8.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07ab68.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L07ab6e.  v4:= temp @kind wide;
  #L07ab70.  v2:= v2 - v4 @kind long;
  #L07ab72.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L07ab78.  v0:= temp @kind wide;
  #L07ab7a.  v2:= v8.`a.a.a.c$a.l` @type ^`int`;
  #L07ab7e.  v3:= -1I;
  #L07ab80.  if v2 == v3 then goto L07ab9e;
  #L07ab84.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07ab88.  v3:= v8.`a.a.a.c$a.l` @type ^`int`;
  #L07ab8c.  v4:= (`long`) v3 @kind i2l;
  #L07ab8e.  call temp:= `toMillis`(v2, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L07ab94.  v2:= temp @kind wide;
  #L07ab96.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L07ab9c.  v0:= temp @kind wide;
  #L07ab9e.  v2:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L07aba2.  v4:= v8.`a.a.a.c$a.i` @type ^`long` @kind wide;
  #L07aba6.  v2:= v2 - v4 @kind long;
  #L07aba8.  v4:= v8.`a.a.a.c$a.a` @type ^`long` @kind wide;
  #L07abac.  v6:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L07abb0.  v4:= v4 - v6 @kind long;
  #L07abb2.  v0:= v0 + v2 @kind long;
  #L07abb4.  v0:= v0 + v4 @kind long;
  #L07abb6.  return v0 @kind wide;
}
procedure `boolean` `e`(`a.a.a.c$a` v2 @kind this) @signature `La/a/a/c$a;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L07abc8.  v0:= v2.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07abcc.  call temp:= `h`(v0) @signature `La/z;.h:()La/d;` @kind virtual;
  #L07abd2.  v0:= temp @kind object;
  #L07abd4.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L07abda.  v0:= temp;
  #L07abdc.  v1:= -1I;
  #L07abde.  if v0 != v1 then goto L07abee;
  #L07abe2.  v0:= v2.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L07abe6.  if v0 != 0 then goto L07abee;
  #L07abea.  v0:= 1I;
  #L07abec.  return v0;
  #L07abee.  v0:= 0I;
  #L07abf0.  goto L07abec;
}
procedure `a.a.a.c` `a`(`a.a.a.c$a` v3 @kind this) @signature `La/a/a/c$a;.a:()La/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07ac04.  v2:= 0I;
  #L07ac06.  call temp:= `b`(v3) @signature `La/a/a/c$a;.b:()La/a/a/c;` @kind direct;
  #L07ac0c.  v0:= temp @kind object;
  #L07ac0e.  v1:= v0.`a.a.a.c.a` @type ^`a.x` @kind object;
  #L07ac12.  if v1 == 0 then goto L07ac38;
  #L07ac16.  v1:= v3.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07ac1a.  call temp:= `f`(v1) @signature `La/x;.f:()La/d;` @kind virtual;
  #L07ac20.  v1:= temp @kind object;
  #L07ac22.  call temp:= `i`(v1) @signature `La/d;.i:()Z` @kind virtual;
  #L07ac28.  v1:= temp;
  #L07ac2a.  if v1 == 0 then goto L07ac38;
  #L07ac2e.  v0:= new `a.a.a.c`;
  #L07ac32.  call `<init>`(v0, v2, v2) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07ac38.  return v0 @kind object;
}

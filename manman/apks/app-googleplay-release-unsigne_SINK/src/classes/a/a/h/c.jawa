record `a.a.h.c` @kind class @AccessFlag FINAL {
  `java.lang.String` `a.a.h.c.a` @AccessFlag PRIVATE_FINAL;
  `int` `a.a.h.c.b` @AccessFlag PRIVATE_FINAL;
  `int` `a.a.h.c.c` @AccessFlag PRIVATE;
  `int` `a.a.h.c.d` @AccessFlag PRIVATE;
  `int` `a.a.h.c.e` @AccessFlag PRIVATE;
  `int` `a.a.h.c.f` @AccessFlag PRIVATE;
  `char`[] `a.a.h.c.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.h.c` v1 @kind this, `javax.security.auth.x500.X500Principal` v2 @kind object) @signature `La/a/h/c;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L088dd8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L088dde.  v0:= "RFC2253" @kind object;
  #L088de2.  call temp:= `getName`(v2, v0) @signature `Ljavax/security/auth/x500/X500Principal;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L088de8.  v0:= temp @kind object;
  #L088dea.  v1.`a.a.h.c.a` @type ^`java.lang.String` := v0 @kind object;
  #L088dee.  v0:= v1.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L088df2.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088df8.  v0:= temp;
  #L088dfa.  v1.`a.a.h.c.b` @type ^`int` := v0;
  #L088dfe.  return @kind void;
}
procedure `int` `a`(`a.a.h.c` v8 @kind this, `int` v9 ) @signature `La/a/h/c;.a:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L088e10.  v7:= 97I;
  #L088e14.  v6:= 70I;
  #L088e18.  v5:= 65I;
  #L088e1c.  v4:= 57I;
  #L088e20.  v3:= 48I;
  #L088e24.  v0:= v9 + 1;
  #L088e28.  v1:= v8.`a.a.h.c.b` @type ^`int`;
  #L088e2c.  if v0 < v1 then goto L088e66;
  #L088e30.  v0:= new `java.lang.IllegalStateException`;
  #L088e34.  v1:= new `java.lang.StringBuilder`;
  #L088e38.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L088e3e.  v2:= "Malformed DN: " @kind object;
  #L088e42.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088e48.  v1:= temp @kind object;
  #L088e4a.  v2:= v8.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L088e4e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088e54.  v1:= temp @kind object;
  #L088e56.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L088e5c.  v1:= temp @kind object;
  #L088e5e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L088e64.  throw v0;
  #L088e66.  v0:= v8.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L088e6a.  v0:= v0[v9] @kind char;
  #L088e6e.  if v0 < v3 then goto L088e9a;
  #L088e72.  if v0 > v4 then goto L088e9a;
  #L088e76.  v0:= v0 + -48;
  #L088e7a.  v1:= v8.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L088e7e.  v2:= v9 + 1;
  #L088e82.  v1:= v1[v2] @kind char;
  #L088e86.  if v1 < v3 then goto L088ef0;
  #L088e8a.  if v1 > v4 then goto L088ef0;
  #L088e8e.  v1:= v1 + -48;
  #L088e92.  v0:= v0 ^< 4;
  #L088e96.  v0:= v0 + v1 @kind int;
  #L088e98.  return v0;
  #L088e9a.  if v0 < v7 then goto L088eac;
  #L088e9e.  v1:= 102I;
  #L088ea2.  if v0 > v1 then goto L088eac;
  #L088ea6.  v0:= v0 + -87;
  #L088eaa.  goto L088e7a;
  #L088eac.  if v0 < v5 then goto L088eba;
  #L088eb0.  if v0 > v6 then goto L088eba;
  #L088eb4.  v0:= v0 + -55;
  #L088eb8.  goto L088e7a;
  #L088eba.  v0:= new `java.lang.IllegalStateException`;
  #L088ebe.  v1:= new `java.lang.StringBuilder`;
  #L088ec2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L088ec8.  v2:= "Malformed DN: " @kind object;
  #L088ecc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088ed2.  v1:= temp @kind object;
  #L088ed4.  v2:= v8.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L088ed8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088ede.  v1:= temp @kind object;
  #L088ee0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L088ee6.  v1:= temp @kind object;
  #L088ee8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L088eee.  throw v0;
  #L088ef0.  if v1 < v7 then goto L088f02;
  #L088ef4.  v2:= 102I;
  #L088ef8.  if v1 > v2 then goto L088f02;
  #L088efc.  v1:= v1 + -87;
  #L088f00.  goto L088e92;
  #L088f02.  if v1 < v5 then goto L088f10;
  #L088f06.  if v1 > v6 then goto L088f10;
  #L088f0a.  v1:= v1 + -55;
  #L088f0e.  goto L088e92;
  #L088f10.  v0:= new `java.lang.IllegalStateException`;
  #L088f14.  v1:= new `java.lang.StringBuilder`;
  #L088f18.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L088f1e.  v2:= "Malformed DN: " @kind object;
  #L088f22.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088f28.  v1:= temp @kind object;
  #L088f2a.  v2:= v8.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L088f2e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088f34.  v1:= temp @kind object;
  #L088f36.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L088f3c.  v1:= temp @kind object;
  #L088f3e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L088f44.  throw v0;
}
procedure `java.lang.String` `a`(`a.a.h.c` v5 @kind this) @signature `La/a/h/c;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L088f58.  v3:= 61I;
  #L088f5c.  v2:= 32I;
  #L088f60.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L088f64.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L088f68.  if v0 >= v1 then goto L088f8a;
  #L088f6c.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L088f70.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L088f74.  v0:= v0[v1] @kind char;
  #L088f78.  if v0 != v2 then goto L088f8a;
  #L088f7c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L088f80.  v0:= v0 + 1;
  #L088f84.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L088f88.  goto L088f60;
  #L088f8a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L088f8e.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L088f92.  if v0 != v1 then goto L088f9a;
  #L088f96.  v0:= 0I;
  #L088f98.  return v0 @kind object;
  #L088f9a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L088f9e.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L088fa2.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L088fa6.  v0:= v0 + 1;
  #L088faa.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L088fae.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L088fb2.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L088fb6.  if v0 >= v1 then goto L088fe8;
  #L088fba.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L088fbe.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L088fc2.  v0:= v0[v1] @kind char;
  #L088fc6.  if v0 == v3 then goto L088fe8;
  #L088fca.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L088fce.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L088fd2.  v0:= v0[v1] @kind char;
  #L088fd6.  if v0 == v2 then goto L088fe8;
  #L088fda.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L088fde.  v0:= v0 + 1;
  #L088fe2.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L088fe6.  goto L088fae;
  #L088fe8.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L088fec.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L088ff0.  if v0 < v1 then goto L08902a;
  #L088ff4.  v0:= new `java.lang.IllegalStateException`;
  #L088ff8.  v1:= new `java.lang.StringBuilder`;
  #L088ffc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089002.  v2:= "Unexpected end of DN: " @kind object;
  #L089006.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08900c.  v1:= temp @kind object;
  #L08900e.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L089012.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089018.  v1:= temp @kind object;
  #L08901a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089020.  v1:= temp @kind object;
  #L089022.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089028.  throw v0;
  #L08902a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08902e.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L089032.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089036.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08903a.  v0:= v0[v1] @kind char;
  #L08903e.  if v0 != v2 then goto L0890ce;
  #L089042.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089046.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L08904a.  if v0 >= v1 then goto L08907c;
  #L08904e.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089052.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L089056.  v0:= v0[v1] @kind char;
  #L08905a.  if v0 == v3 then goto L08907c;
  #L08905e.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089062.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L089066.  v0:= v0[v1] @kind char;
  #L08906a.  if v0 != v2 then goto L08907c;
  #L08906e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089072.  v0:= v0 + 1;
  #L089076.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L08907a.  goto L089042;
  #L08907c.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089080.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L089084.  v0:= v0[v1] @kind char;
  #L089088.  if v0 != v3 then goto L089098;
  #L08908c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089090.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L089094.  if v0 != v1 then goto L0890ce;
  #L089098.  v0:= new `java.lang.IllegalStateException`;
  #L08909c.  v1:= new `java.lang.StringBuilder`;
  #L0890a0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0890a6.  v2:= "Unexpected end of DN: " @kind object;
  #L0890aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0890b0.  v1:= temp @kind object;
  #L0890b2.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L0890b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0890bc.  v1:= temp @kind object;
  #L0890be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0890c4.  v1:= temp @kind object;
  #L0890c6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0890cc.  throw v0;
  #L0890ce.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0890d2.  v0:= v0 + 1;
  #L0890d6.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0890da.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0890de.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L0890e2.  if v0 >= v1 then goto L089104;
  #L0890e6.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0890ea.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0890ee.  v0:= v0[v1] @kind char;
  #L0890f2.  if v0 != v2 then goto L089104;
  #L0890f6.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0890fa.  v0:= v0 + 1;
  #L0890fe.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L089102.  goto L0890da;
  #L089104.  v0:= v5.`a.a.h.c.e` @type ^`int`;
  #L089108.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L08910c.  v0:= v0 - v1 @kind int;
  #L08910e.  v1:= 4I;
  #L089110.  if v0 <= v1 then goto L0891c0;
  #L089114.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089118.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L08911c.  v1:= v1 + 3;
  #L089120.  v0:= v0[v1] @kind char;
  #L089124.  v1:= 46I;
  #L089128.  if v0 != v1 then goto L0891c0;
  #L08912c.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089130.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L089134.  v0:= v0[v1] @kind char;
  #L089138.  v1:= 79I;
  #L08913c.  if v0 == v1 then goto L089154;
  #L089140.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089144.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L089148.  v0:= v0[v1] @kind char;
  #L08914c.  v1:= 111I;
  #L089150.  if v0 != v1 then goto L0891c0;
  #L089154.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089158.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L08915c.  v1:= v1 + 1;
  #L089160.  v0:= v0[v1] @kind char;
  #L089164.  v1:= 73I;
  #L089168.  if v0 == v1 then goto L089184;
  #L08916c.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089170.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L089174.  v1:= v1 + 1;
  #L089178.  v0:= v0[v1] @kind char;
  #L08917c.  v1:= 105I;
  #L089180.  if v0 != v1 then goto L0891c0;
  #L089184.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089188.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L08918c.  v1:= v1 + 2;
  #L089190.  v0:= v0[v1] @kind char;
  #L089194.  v1:= 68I;
  #L089198.  if v0 == v1 then goto L0891b4;
  #L08919c.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0891a0.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L0891a4.  v1:= v1 + 2;
  #L0891a8.  v0:= v0[v1] @kind char;
  #L0891ac.  v1:= 100I;
  #L0891b0.  if v0 != v1 then goto L0891c0;
  #L0891b4.  v0:= v5.`a.a.h.c.d` @type ^`int`;
  #L0891b8.  v0:= v0 + 4;
  #L0891bc.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L0891c0.  v0:= new `java.lang.String`;
  #L0891c4.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0891c8.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L0891cc.  v3:= v5.`a.a.h.c.e` @type ^`int`;
  #L0891d0.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L0891d4.  v3:= v3 - v4 @kind int;
  #L0891d6.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L0891dc.  goto L088f98;
}
procedure `java.lang.String` `b`(`a.a.h.c` v5 @kind this) @signature `La/a/h/c;.b:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0891f0.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0891f4.  v0:= v0 + 1;
  #L0891f8.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0891fc.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089200.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L089204.  v0:= v5.`a.a.h.c.d` @type ^`int`;
  #L089208.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L08920c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089210.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L089214.  if v0 != v1 then goto L08924e;
  #L089218.  v0:= new `java.lang.IllegalStateException`;
  #L08921c.  v1:= new `java.lang.StringBuilder`;
  #L089220.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089226.  v2:= "Unexpected end of DN: " @kind object;
  #L08922a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089230.  v1:= temp @kind object;
  #L089232.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L089236.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08923c.  v1:= temp @kind object;
  #L08923e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089244.  v1:= temp @kind object;
  #L089246.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08924c.  throw v0;
  #L08924e.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089252.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L089256.  v0:= v0[v1] @kind char;
  #L08925a.  v1:= 34I;
  #L08925e.  if v0 != v1 then goto L08929c;
  #L089262.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089266.  v0:= v0 + 1;
  #L08926a.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L08926e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089272.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L089276.  if v0 >= v1 then goto L0892f8;
  #L08927a.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08927e.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L089282.  v0:= v0[v1] @kind char;
  #L089286.  v1:= 32I;
  #L08928a.  if v0 != v1 then goto L0892f8;
  #L08928e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089292.  v0:= v0 + 1;
  #L089296.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L08929a.  goto L08926e;
  #L08929c.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0892a0.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0892a4.  v0:= v0[v1] @kind char;
  #L0892a8.  v1:= 92I;
  #L0892ac.  if v0 != v1 then goto L0892de;
  #L0892b0.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0892b4.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L0892b8.  call temp:= `e`(v5) @signature `La/a/h/c;.e:()C` @kind direct;
  #L0892be.  v2:= temp;
  #L0892c0.  v0[v1]:= v2 @kind char;
  #L0892c4.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0892c8.  v0:= v0 + 1;
  #L0892cc.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0892d0.  v0:= v5.`a.a.h.c.e` @type ^`int`;
  #L0892d4.  v0:= v0 + 1;
  #L0892d8.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L0892dc.  goto L08920c;
  #L0892de.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0892e2.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L0892e6.  v2:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0892ea.  v3:= v5.`a.a.h.c.c` @type ^`int`;
  #L0892ee.  v2:= v2[v3] @kind char;
  #L0892f2.  v0[v1]:= v2 @kind char;
  #L0892f6.  goto L0892c4;
  #L0892f8.  v0:= new `java.lang.String`;
  #L0892fc.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089300.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L089304.  v3:= v5.`a.a.h.c.e` @type ^`int`;
  #L089308.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L08930c.  v3:= v3 - v4 @kind int;
  #L08930e.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L089314.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`a.a.h.c` v5 @kind this) @signature `La/a/h/c;.c:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089328.  v3:= 32I;
  #L08932c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089330.  v0:= v0 + 4;
  #L089334.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L089338.  if v0 < v1 then goto L089372;
  #L08933c.  v0:= new `java.lang.IllegalStateException`;
  #L089340.  v1:= new `java.lang.StringBuilder`;
  #L089344.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08934a.  v2:= "Unexpected end of DN: " @kind object;
  #L08934e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089354.  v1:= temp @kind object;
  #L089356.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L08935a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089360.  v1:= temp @kind object;
  #L089362.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089368.  v1:= temp @kind object;
  #L08936a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089370.  throw v0;
  #L089372.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089376.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L08937a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08937e.  v0:= v0 + 1;
  #L089382.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L089386.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08938a.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L08938e.  if v0 == v1 then goto L0893ce;
  #L089392.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089396.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08939a.  v0:= v0[v1] @kind char;
  #L08939e.  v1:= 43I;
  #L0893a2.  if v0 == v1 then goto L0893ce;
  #L0893a6.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0893aa.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0893ae.  v0:= v0[v1] @kind char;
  #L0893b2.  v1:= 44I;
  #L0893b6.  if v0 == v1 then goto L0893ce;
  #L0893ba.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0893be.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0893c2.  v0:= v0[v1] @kind char;
  #L0893c6.  v1:= 59I;
  #L0893ca.  if v0 != v1 then goto L089426;
  #L0893ce.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0893d2.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L0893d6.  v0:= v5.`a.a.h.c.e` @type ^`int`;
  #L0893da.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L0893de.  v2:= v0 - v1 @kind int;
  #L0893e2.  v0:= 5I;
  #L0893e4.  if v2 < v0 then goto L0893f0;
  #L0893e8.  v0:= v2 ^& 1;
  #L0893ec.  if v0 != 0 then goto L0894c2;
  #L0893f0.  v0:= new `java.lang.IllegalStateException`;
  #L0893f4.  v1:= new `java.lang.StringBuilder`;
  #L0893f8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0893fe.  v2:= "Unexpected end of DN: " @kind object;
  #L089402.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089408.  v1:= temp @kind object;
  #L08940a.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L08940e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089414.  v1:= temp @kind object;
  #L089416.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08941c.  v1:= temp @kind object;
  #L08941e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089424.  throw v0;
  #L089426.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08942a.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08942e.  v0:= v0[v1] @kind char;
  #L089432.  if v0 != v3 then goto L089474;
  #L089436.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08943a.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L08943e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089442.  v0:= v0 + 1;
  #L089446.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L08944a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08944e.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L089452.  if v0 >= v1 then goto L0893d6;
  #L089456.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08945a.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08945e.  v0:= v0[v1] @kind char;
  #L089462.  if v0 != v3 then goto L0893d6;
  #L089466.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08946a.  v0:= v0 + 1;
  #L08946e.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L089472.  goto L08944a;
  #L089474.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089478.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08947c.  v0:= v0[v1] @kind char;
  #L089480.  v1:= 65I;
  #L089484.  if v0 < v1 then goto L0894b2;
  #L089488.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08948c.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L089490.  v0:= v0[v1] @kind char;
  #L089494.  v1:= 70I;
  #L089498.  if v0 > v1 then goto L0894b2;
  #L08949c.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0894a0.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0894a4.  v2:= v0[v1] @kind char;
  #L0894a8.  v2:= v2 + 32;
  #L0894ac.  v2:= (`char`) v2 @kind i2c;
  #L0894ae.  v0[v1]:= v2 @kind char;
  #L0894b2.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0894b6.  v0:= v0 + 1;
  #L0894ba.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0894be.  goto L089386;
  #L0894c2.  v0:= v2 / 2;
  #L0894c6.  v3:= new `byte`[v0];
  #L0894ca.  v1:= 0I;
  #L0894cc.  v0:= v5.`a.a.h.c.d` @type ^`int`;
  #L0894d0.  v0:= v0 + 1;
  #L0894d4.  v4:= length @variable v3;
  #L0894d6.  if v1 >= v4 then goto L0894f2;
  #L0894da.  call temp:= `a`(v5, v0) @signature `La/a/h/c;.a:(I)I` @kind direct;
  #L0894e0.  v4:= temp;
  #L0894e2.  v4:= (`byte`) v4 @kind i2b;
  #L0894e4.  v3[v1]:= v4 @kind byte;
  #L0894e8.  v0:= v0 + 2;
  #L0894ec.  v1:= v1 + 1;
  #L0894f0.  goto L0894d4;
  #L0894f2.  v0:= new `java.lang.String`;
  #L0894f6.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0894fa.  v3:= v5.`a.a.h.c.d` @type ^`int`;
  #L0894fe.  call `<init>`(v0, v1, v3, v2) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L089504.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`a.a.h.c` v5 @kind this) @signature `La/a/h/c;.d:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089518.  v4:= 32I;
  #L08951c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089520.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L089524.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089528.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L08952c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089530.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L089534.  if v0 < v1 then goto L089556;
  #L089538.  v0:= new `java.lang.String`;
  #L08953c.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089540.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L089544.  v3:= v5.`a.a.h.c.e` @type ^`int`;
  #L089548.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L08954c.  v3:= v3 - v4 @kind int;
  #L08954e.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L089554.  return v0 @kind object;
  #L089556.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08955a.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08955e.  v0:= v0[v1] @kind char;
  #L089562.  goto L0896ac;
  #L089568.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08956c.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L089570.  v2:= v1 + 1;
  #L089574.  v5.`a.a.h.c.e` @type ^`int` := v2;
  #L089578.  v2:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08957c.  v3:= v5.`a.a.h.c.c` @type ^`int`;
  #L089580.  v2:= v2[v3] @kind char;
  #L089584.  v0[v1]:= v2 @kind char;
  #L089588.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08958c.  v0:= v0 + 1;
  #L089590.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L089594.  goto L08952c;
  #L089596.  v0:= new `java.lang.String`;
  #L08959a.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08959e.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L0895a2.  v3:= v5.`a.a.h.c.e` @type ^`int`;
  #L0895a6.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L0895aa.  v3:= v3 - v4 @kind int;
  #L0895ac.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L0895b2.  goto L089554;
  #L0895b4.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0895b8.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L0895bc.  v2:= v1 + 1;
  #L0895c0.  v5.`a.a.h.c.e` @type ^`int` := v2;
  #L0895c4.  call temp:= `e`(v5) @signature `La/a/h/c;.e:()C` @kind direct;
  #L0895ca.  v2:= temp;
  #L0895cc.  v0[v1]:= v2 @kind char;
  #L0895d0.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0895d4.  v0:= v0 + 1;
  #L0895d8.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0895dc.  goto L08952c;
  #L0895de.  v0:= v5.`a.a.h.c.e` @type ^`int`;
  #L0895e2.  v5.`a.a.h.c.f` @type ^`int` := v0;
  #L0895e6.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0895ea.  v0:= v0 + 1;
  #L0895ee.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0895f2.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0895f6.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L0895fa.  v2:= v1 + 1;
  #L0895fe.  v5.`a.a.h.c.e` @type ^`int` := v2;
  #L089602.  v0[v1]:= v4 @kind char;
  #L089606.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08960a.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L08960e.  if v0 >= v1 then goto L089644;
  #L089612.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089616.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08961a.  v0:= v0[v1] @kind char;
  #L08961e.  if v0 != v4 then goto L089644;
  #L089622.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089626.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L08962a.  v2:= v1 + 1;
  #L08962e.  v5.`a.a.h.c.e` @type ^`int` := v2;
  #L089632.  v0[v1]:= v4 @kind char;
  #L089636.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08963a.  v0:= v0 + 1;
  #L08963e.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L089642.  goto L089606;
  #L089644.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089648.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L08964c.  if v0 == v1 then goto L08968c;
  #L089650.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089654.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L089658.  v0:= v0[v1] @kind char;
  #L08965c.  v1:= 44I;
  #L089660.  if v0 == v1 then goto L08968c;
  #L089664.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089668.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08966c.  v0:= v0[v1] @kind char;
  #L089670.  v1:= 43I;
  #L089674.  if v0 == v1 then goto L08968c;
  #L089678.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08967c.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L089680.  v0:= v0[v1] @kind char;
  #L089684.  v1:= 59I;
  #L089688.  if v0 != v1 then goto L08952c;
  #L08968c.  v0:= new `java.lang.String`;
  #L089690.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089694.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L089698.  v3:= v5.`a.a.h.c.f` @type ^`int`;
  #L08969c.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L0896a0.  v3:= v3 - v4 @kind int;
  #L0896a2.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L0896a8.  goto L089554;
  #L0896ac.  switch v0
                  | 32 => goto L0895de
                  | 43 => goto L089596
                  | 44 => goto L089596
                  | 59 => goto L089596
                  | 92 => goto L0895b4
                  | else => goto L089568;
}
procedure `char` `e`(`a.a.h.c` v3 @kind this) @signature `La/a/h/c;.e:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L0896e8.  v0:= v3.`a.a.h.c.c` @type ^`int`;
  #L0896ec.  v0:= v0 + 1;
  #L0896f0.  v3.`a.a.h.c.c` @type ^`int` := v0;
  #L0896f4.  v0:= v3.`a.a.h.c.c` @type ^`int`;
  #L0896f8.  v1:= v3.`a.a.h.c.b` @type ^`int`;
  #L0896fc.  if v0 != v1 then goto L089736;
  #L089700.  v0:= new `java.lang.IllegalStateException`;
  #L089704.  v1:= new `java.lang.StringBuilder`;
  #L089708.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08970e.  v2:= "Unexpected end of DN: " @kind object;
  #L089712.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089718.  v1:= temp @kind object;
  #L08971a.  v2:= v3.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L08971e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089724.  v1:= temp @kind object;
  #L089726.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08972c.  v1:= temp @kind object;
  #L08972e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089734.  throw v0;
  #L089736.  v0:= v3.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08973a.  v1:= v3.`a.a.h.c.c` @type ^`int`;
  #L08973e.  v0:= v0[v1] @kind char;
  #L089742.  goto L089760;
  #L089748.  call temp:= `f`(v3) @signature `La/a/h/c;.f:()C` @kind direct;
  #L08974e.  v0:= temp;
  #L089750.  return v0;
  #L089752.  v0:= v3.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089756.  v1:= v3.`a.a.h.c.c` @type ^`int`;
  #L08975a.  v0:= v0[v1] @kind char;
  #L08975e.  goto L089750;
  #L089760.  switch v0
                  | 32 => goto L089752
                  | 34 => goto L089752
                  | 35 => goto L089752
                  | 37 => goto L089752
                  | 42 => goto L089752
                  | 43 => goto L089752
                  | 44 => goto L089752
                  | 59 => goto L089752
                  | 60 => goto L089752
                  | 61 => goto L089752
                  | 62 => goto L089752
                  | 92 => goto L089752
                  | 95 => goto L089752
                  | else => goto L089748;
}
procedure `char` `f`(`a.a.h.c` v8 @kind this) @signature `La/a/h/c;.f:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0897dc.  v6:= 128I;
  #L0897e0.  v2:= 63I;
  #L0897e4.  v0:= v8.`a.a.h.c.c` @type ^`int`;
  #L0897e8.  call temp:= `a`(v8, v0) @signature `La/a/h/c;.a:(I)I` @kind direct;
  #L0897ee.  v1:= temp;
  #L0897f0.  v0:= v8.`a.a.h.c.c` @type ^`int`;
  #L0897f4.  v0:= v0 + 1;
  #L0897f8.  v8.`a.a.h.c.c` @type ^`int` := v0;
  #L0897fc.  if v1 >= v6 then goto L089804;
  #L089800.  v0:= (`char`) v1 @kind i2c;
  #L089802.  return v0;
  #L089804.  v0:= 192I;
  #L089808.  if v1 < v0 then goto L0898ba;
  #L08980c.  v0:= 247I;
  #L089810.  if v1 > v0 then goto L0898ba;
  #L089814.  v0:= 223I;
  #L089818.  if v1 > v0 then goto L08985e;
  #L08981c.  v0:= 1I;
  #L08981e.  v1:= v1 ^& 31;
  #L089822.  v3:= 0I;
  #L089824.  v7:= v3;
  #L089826.  v3:= v1;
  #L089828.  v1:= v7;
  #L08982a.  if v1 >= v0 then goto L0898b6;
  #L08982e.  v4:= v8.`a.a.h.c.c` @type ^`int`;
  #L089832.  v4:= v4 + 1;
  #L089836.  v8.`a.a.h.c.c` @type ^`int` := v4;
  #L08983a.  v4:= v8.`a.a.h.c.c` @type ^`int`;
  #L08983e.  v5:= v8.`a.a.h.c.b` @type ^`int`;
  #L089842.  if v4 == v5 then goto L08985a;
  #L089846.  v4:= v8.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08984a.  v5:= v8.`a.a.h.c.c` @type ^`int`;
  #L08984e.  v4:= v4[v5] @kind char;
  #L089852.  v5:= 92I;
  #L089856.  if v4 == v5 then goto L089876;
  #L08985a.  v0:= v2;
  #L08985c.  goto L089802;
  #L08985e.  v0:= 239I;
  #L089862.  if v1 > v0 then goto L08986e;
  #L089866.  v0:= 2I;
  #L089868.  v1:= v1 ^& 15;
  #L08986c.  goto L089822;
  #L08986e.  v0:= 3I;
  #L089870.  v1:= v1 ^& 7;
  #L089874.  goto L089822;
  #L089876.  v4:= v8.`a.a.h.c.c` @type ^`int`;
  #L08987a.  v4:= v4 + 1;
  #L08987e.  v8.`a.a.h.c.c` @type ^`int` := v4;
  #L089882.  v4:= v8.`a.a.h.c.c` @type ^`int`;
  #L089886.  call temp:= `a`(v8, v4) @signature `La/a/h/c;.a:(I)I` @kind direct;
  #L08988c.  v4:= temp;
  #L08988e.  v5:= v8.`a.a.h.c.c` @type ^`int`;
  #L089892.  v5:= v5 + 1;
  #L089896.  v8.`a.a.h.c.c` @type ^`int` := v5;
  #L08989a.  v5:= v4 ^& 192;
  #L08989e.  if v5 == v6 then goto L0898a6;
  #L0898a2.  v0:= v2;
  #L0898a4.  goto L089802;
  #L0898a6.  v3:= v3 ^< 6;
  #L0898aa.  v4:= v4 ^& 63;
  #L0898ae.  v3:= v3 + v4 @kind int;
  #L0898b0.  v1:= v1 + 1;
  #L0898b4.  goto L08982a;
  #L0898b6.  v0:= (`char`) v3 @kind i2c;
  #L0898b8.  goto L089802;
  #L0898ba.  v0:= v2;
  #L0898bc.  goto L089802;
}
procedure `java.lang.String` `a`(`a.a.h.c` v5 @kind this, `java.lang.String` v6 @kind object) @signature `La/a/h/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0898d0.  v2:= 0I;
  #L0898d2.  v0:= 0I;
  #L0898d4.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0898d8.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L0898dc.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L0898e0.  v5.`a.a.h.c.f` @type ^`int` := v0;
  #L0898e4.  v0:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L0898e8.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L0898ee.  v0:= temp @kind object;
  #L0898f0.  v5.`a.a.h.c.g` @type ^`char`[] := v0 @kind object;
  #L0898f4.  call temp:= `a`(v5) @signature `La/a/h/c;.a:()Ljava/lang/String;` @kind direct;
  #L0898fa.  v0:= temp @kind object;
  #L0898fc.  if v0 != 0 then goto L089904;
  #L089900.  v1:= v2 @kind object;
  #L089902.  return v1 @kind object;
  #L089904.  v1:= "" @kind object;
  #L089908.  v3:= v5.`a.a.h.c.c` @type ^`int`;
  #L08990c.  v4:= v5.`a.a.h.c.b` @type ^`int`;
  #L089910.  if v3 != v4 then goto L089918;
  #L089914.  v1:= v2 @kind object;
  #L089916.  goto L089902;
  #L089918.  v3:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08991c.  v4:= v5.`a.a.h.c.c` @type ^`int`;
  #L089920.  v3:= v3[v4] @kind char;
  #L089924.  goto L089a24;
  #L08992a.  call temp:= `d`(v5) @signature `La/a/h/c;.d:()Ljava/lang/String;` @kind direct;
  #L089930.  v1:= temp @kind object;
  #L089932.  call temp:= `equalsIgnoreCase`(v6, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L089938.  v0:= temp;
  #L08993a.  if v0 != 0 then goto L089902;
  #L08993e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L089942.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L089946.  if v0 < v1 then goto L089962;
  #L08994a.  v1:= v2 @kind object;
  #L08994c.  goto L089902;
  #L08994e.  call temp:= `b`(v5) @signature `La/a/h/c;.b:()Ljava/lang/String;` @kind direct;
  #L089954.  v1:= temp @kind object;
  #L089956.  goto L089932;
  #L089958.  call temp:= `c`(v5) @signature `La/a/h/c;.c:()Ljava/lang/String;` @kind direct;
  #L08995e.  v1:= temp @kind object;
  #L089960.  goto L089932;
  #L089962.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L089966.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08996a.  v0:= v0[v1] @kind char;
  #L08996e.  v1:= 44I;
  #L089972.  if v0 == v1 then goto L08998a;
  #L089976.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08997a.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08997e.  v0:= v0[v1] @kind char;
  #L089982.  v1:= 59I;
  #L089986.  if v0 != v1 then goto L0899d8;
  #L08998a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08998e.  v0:= v0 + 1;
  #L089992.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L089996.  call temp:= `a`(v5) @signature `La/a/h/c;.a:()Ljava/lang/String;` @kind direct;
  #L08999c.  v0:= temp @kind object;
  #L08999e.  if v0 != 0 then goto L089904;
  #L0899a2.  v0:= new `java.lang.IllegalStateException`;
  #L0899a6.  v1:= new `java.lang.StringBuilder`;
  #L0899aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0899b0.  v2:= "Malformed DN: " @kind object;
  #L0899b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0899ba.  v1:= temp @kind object;
  #L0899bc.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L0899c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0899c6.  v1:= temp @kind object;
  #L0899c8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0899ce.  v1:= temp @kind object;
  #L0899d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0899d6.  throw v0;
  #L0899d8.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0899dc.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0899e0.  v0:= v0[v1] @kind char;
  #L0899e4.  v1:= 43I;
  #L0899e8.  if v0 == v1 then goto L08998a;
  #L0899ec.  v0:= new `java.lang.IllegalStateException`;
  #L0899f0.  v1:= new `java.lang.StringBuilder`;
  #L0899f4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0899fa.  v2:= "Malformed DN: " @kind object;
  #L0899fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089a04.  v1:= temp @kind object;
  #L089a06.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L089a0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089a10.  v1:= temp @kind object;
  #L089a12.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089a18.  v1:= temp @kind object;
  #L089a1a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089a20.  throw v0;
  #L089a22.  
  #L089a24.  switch v3
                  | 34 => goto L08994e
                  | 35 => goto L089958
                  | 43 => goto L089932
                  | 44 => goto L089932
                  | 59 => goto L089932
                  | else => goto L08992a;
}

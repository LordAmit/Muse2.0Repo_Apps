record `a.a.g.a` @kind class @AccessFlag  extends `a.a.g.e` @kind class {
  `java.lang.Class` `a.a.g.a.a` @AccessFlag PRIVATE_FINAL;
  `a.a.g.d` `a.a.g.a.b` @AccessFlag PRIVATE_FINAL;
  `a.a.g.d` `a.a.g.a.c` @AccessFlag PRIVATE_FINAL;
  `a.a.g.d` `a.a.g.a.d` @AccessFlag PRIVATE_FINAL;
  `a.a.g.d` `a.a.g.a.e` @AccessFlag PRIVATE_FINAL;
  `a.a.g.a$b` `a.a.g.a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.g.a` v1 @kind this, `java.lang.Class` v2 @kind object, `a.a.g.d` v3 @kind object, `a.a.g.d` v4 @kind object, `a.a.g.d` v5 @kind object, `a.a.g.d` v6 @kind object) @signature `La/a/g/a;.<init>:(Ljava/lang/Class;La/a/g/d;La/a/g/d;La/a/g/d;La/a/g/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L087e80.  call `<init>`(v1) @signature `La/a/g/e;.<init>:()V` @kind direct;
  #L087e86.  call temp:= `a`() @signature `La/a/g/a$b;.a:()La/a/g/a$b;` @kind static;
  #L087e8c.  v0:= temp @kind object;
  #L087e8e.  v1.`a.a.g.a.f` @type ^`a.a.g.a$b` := v0 @kind object;
  #L087e92.  v1.`a.a.g.a.a` @type ^`java.lang.Class` := v2 @kind object;
  #L087e96.  v1.`a.a.g.a.b` @type ^`a.a.g.d` := v3 @kind object;
  #L087e9a.  v1.`a.a.g.a.c` @type ^`a.a.g.d` := v4 @kind object;
  #L087e9e.  v1.`a.a.g.a.d` @type ^`a.a.g.d` := v5 @kind object;
  #L087ea2.  v1.`a.a.g.a.e` @type ^`a.a.g.d` := v6 @kind object;
  #L087ea6.  return @kind void;
}
procedure `a.a.g.e` `a`() @signature `La/a/g/a;.a:()La/a/g/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L087eb8.  v6:= 0I;
  #Try_start0.  
  #L087eba.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L087ebe.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L087ec4.  v1:= temp @kind object;
  #Try_start1.  
  #L087ec6.  v2:= new `a.a.g.d`;
  #L087eca.  v0:= 0I;
  #L087ecc.  v3:= "setUseSessionTickets" @kind object;
  #L087ed0.  v4:= 1I;
  #L087ed2.  v4:= new `java.lang.Class`[v4];
  #L087ed6.  v5:= 0I;
  #L087ed8.  v7:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L087edc.  v4[v5]:= v7 @kind object;
  #L087ee0.  call `<init>`(v2, v0, v3, v4) @signature `La/a/g/d;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L087ee6.  v3:= new `a.a.g.d`;
  #L087eea.  v0:= 0I;
  #L087eec.  v4:= "setHostname" @kind object;
  #L087ef0.  v5:= 1I;
  #L087ef2.  v5:= new `java.lang.Class`[v5];
  #L087ef6.  v7:= 0I;
  #L087ef8.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L087efc.  v5[v7]:= v8 @kind object;
  #L087f00.  call `<init>`(v3, v0, v4, v5) @signature `La/a/g/d;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #Try_end1.  
  #Try_start2.  
  #L087f06.  v0:= "android.net.Network" @kind object;
  #L087f0a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L087f10.  v0:= new `a.a.g.d`;
  #L087f14.  v4:= constclass @type ^`byte`[] @kind object;
  #L087f18.  v5:= "getAlpnSelectedProtocol" @kind object;
  #L087f1c.  v7:= 0I;
  #L087f1e.  v7:= new `java.lang.Class`[v7];
  #L087f22.  call `<init>`(v0, v4, v5, v7) @signature `La/a/g/d;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #Try_end2.  
  #Try_start3.  
  #L087f28.  v5:= new `a.a.g.d`;
  #L087f2c.  v4:= 0I;
  #L087f2e.  v7:= "setAlpnProtocols" @kind object;
  #L087f32.  v8:= 1I;
  #L087f34.  v8:= new `java.lang.Class`[v8];
  #L087f38.  v9:= 0I;
  #L087f3a.  v10:= constclass @type ^`byte`[] @kind object;
  #L087f3e.  v8[v9]:= v10 @kind object;
  #L087f42.  call `<init>`(v5, v4, v7, v8) @signature `La/a/g/d;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #Try_end3.  
  #L087f48.  v4:= v0 @kind object;
  #Try_start4.  
  #L087f4a.  v0:= new `a.a.g.a`;
  #L087f4e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/g/a;.<init>:(Ljava/lang/Class;La/a/g/d;La/a/g/d;La/a/g/d;La/a/g/d;)V` @kind direct;
  #L087f54.  return v0 @kind object;
  #L087f56.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L087f58.  v0:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L087f5c.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end4.  
  #L087f62.  v1:= temp @kind object;
  #L087f64.  goto L087ec6;
  #L087f66.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L087f68.  v0:= v6 @kind object;
  #L087f6a.  v5:= v6 @kind object;
  #L087f6c.  v4:= v0 @kind object;
  #L087f6e.  goto L087f4a;
  #L087f70.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L087f72.  v0:= v6 @kind object;
  #L087f74.  goto L087f54;
  #L087f76.  v4:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L087f78.  goto L087f6a;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L087f56;
  catch `java.lang.ClassNotFoundException` @[Try_start1..Try_end1] goto L087f70;
  catch `java.lang.ClassNotFoundException` @[Try_start2..Try_end2] goto L087f66;
  catch `java.lang.ClassNotFoundException` @[Try_start3..Try_end3] goto L087f76;
  catch `java.lang.ClassNotFoundException` @[Try_start4..Try_end4] goto L087f70;
}
procedure `a.a.h.b` `a`(`a.a.g.a` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `La/a/g/a;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L087fc8.  v0:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L087fcc.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L087fd2.  v0:= temp @kind object;
  #L087fd4.  v1:= 1I;
  #L087fd6.  v1:= new `java.lang.Class`[v1];
  #L087fda.  v2:= 0I;
  #L087fdc.  v3:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L087fe0.  v1[v2]:= v3 @kind object;
  #L087fe4.  call temp:= `getConstructor`(v0, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L087fea.  v1:= temp @kind object;
  #L087fec.  v2:= 1I;
  #L087fee.  v2:= new `java.lang.Object`[v2];
  #L087ff2.  v3:= 0I;
  #L087ff4.  v2[v3]:= v7 @kind object;
  #L087ff8.  call temp:= `newInstance`(v1, v2) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L087ffe.  v1:= temp @kind object;
  #L088000.  v2:= "checkServerTrusted" @kind object;
  #L088004.  v3:= 3I;
  #L088006.  v3:= new `java.lang.Class`[v3];
  #L08800a.  v4:= 0I;
  #L08800c.  v5:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L088010.  v3[v4]:= v5 @kind object;
  #L088014.  v4:= 1I;
  #L088016.  v5:= constclass @type ^`java.lang.String` @kind object;
  #L08801a.  v3[v4]:= v5 @kind object;
  #L08801e.  v4:= 2I;
  #L088020.  v5:= constclass @type ^`java.lang.String` @kind object;
  #L088024.  v3[v4]:= v5 @kind object;
  #L088028.  call temp:= `getMethod`(v0, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L08802e.  v2:= temp @kind object;
  #L088030.  v0:= new `a.a.g.a$a`;
  #L088034.  call `<init>`(v0, v1, v2) @signature `La/a/g/a$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L08803a.  return v0 @kind object;
  #L08803c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L08803e.  call temp:= `a`(v6, v7) @signature `La/a/g/e;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/b;` @kind super;
  #L088044.  v0:= temp @kind object;
  #L088046.  goto L08803a;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L08803c;
}
procedure `java.lang.Object` `a`(`a.a.g.a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/a/g/a;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088068.  v0:= v1.`a.a.g.a.f` @type ^`a.a.g.a$b` @kind object;
  #L08806c.  call temp:= `a`(v0, v2) @signature `La/a/g/a$b;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L088072.  v0:= temp @kind object;
  #L088074.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.a.g.a` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `La/a/g/a;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L088088.  v1:= 0I;
  #L08808a.  v0:= v3.`a.a.g.a.d` @type ^`a.a.g.d` @kind object;
  #L08808e.  if v0 != 0 then goto L088094;
  #L088092.  return v1 @kind object;
  #L088094.  v0:= v3.`a.a.g.a.d` @type ^`a.a.g.d` @kind object;
  #L088098.  call temp:= `a`(v0, v4) @signature `La/a/g/d;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L08809e.  v0:= temp;
  #L0880a0.  if v0 == 0 then goto L088092;
  #L0880a4.  v0:= v3.`a.a.g.a.d` @type ^`a.a.g.d` @kind object;
  #L0880a8.  v2:= 0I;
  #L0880aa.  v2:= new `java.lang.Object`[v2];
  #L0880ae.  call temp:= `d`(v0, v4, v2) @signature `La/a/g/d;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0880b4.  v0:= temp @kind object;
  #L0880b6.  v0:= (`byte`[]) v0 @kind object;
  #L0880ba.  v0:= (`byte`[]) v0 @kind object;
  #L0880be.  if v0 == 0 then goto L0880d6;
  #L0880c2.  v1:= new `java.lang.String`;
  #L0880c6.  v2:= `@@a.a.c.e` @type ^`java.nio.charset.Charset` @kind object;
  #L0880ca.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L0880d0.  v0:= v1 @kind object;
  #L0880d2.  v1:= v0 @kind object;
  #L0880d4.  goto L088092;
  #L0880d6.  v0:= v1 @kind object;
  #L0880d8.  goto L0880d2;
}
procedure `void` `a`(`a.a.g.a` v7 @kind this, `int` v8 , `java.lang.String` v9 @kind object, `java.lang.Throwable` v10 @kind object) @signature `La/a/g/a;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0880ec.  v6:= 10I;
  #L0880f0.  v0:= 5I;
  #L0880f2.  if v8 != v0 then goto L088172;
  #L0880f6.  v4:= v0;
  #L0880f8.  if v10 == 0 then goto L08812e;
  #L0880fc.  v0:= new `java.lang.StringBuilder`;
  #L088100.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L088106.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08810c.  v0:= temp @kind object;
  #L08810e.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L088114.  v0:= temp @kind object;
  #L088116.  call temp:= `getStackTraceString`(v10) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L08811c.  v1:= temp @kind object;
  #L08811e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088124.  v0:= temp @kind object;
  #L088126.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08812c.  v9:= temp @kind object;
  #L08812e.  v2:= 0I;
  #L088130.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088136.  v1:= temp;
  #L088138.  if v2 >= v1 then goto L08817c;
  #L08813c.  call temp:= `indexOf`(v9, v6, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L088142.  v0:= temp;
  #L088144.  v3:= -1I;
  #L088146.  if v0 == v3 then goto L088178;
  #L08814a.  v3:= v2 + 4000;
  #L08814e.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L088154.  v3:= temp;
  #L088156.  v5:= "OkHttp" @kind object;
  #L08815a.  call temp:= `substring`(v9, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L088160.  v2:= temp @kind object;
  #L088162.  call temp:= `println`(v4, v5, v2) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L088168.  if v3 < v0 then goto L08817e;
  #L08816c.  v2:= v3 + 1;
  #L088170.  goto L088138;
  #L088172.  v0:= 3I;
  #L088174.  v4:= v0;
  #L088176.  goto L0880f8;
  #L088178.  v0:= v1;
  #L08817a.  goto L08814a;
  #L08817c.  return @kind void;
  #L08817e.  v2:= v3;
  #L088180.  goto L08814a;
}
procedure `void` `a`(`a.a.g.a` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `La/a/g/a;.a:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L088194.  v0:= v2.`a.a.g.a.f` @type ^`a.a.g.a$b` @kind object;
  #L088198.  call temp:= `a`(v0, v4) @signature `La/a/g/a$b;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L08819e.  v0:= temp;
  #L0881a0.  if v0 != 0 then goto L0881ae;
  #L0881a4.  v0:= 5I;
  #L0881a6.  v1:= 0I;
  #L0881a8.  call `a`(v2, v0, v3, v1) @signature `La/a/g/a;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L0881ae.  return @kind void;
}
procedure `void` `a`(`a.a.g.a` v3 @kind this, `java.net.Socket` v4 @kind object, `java.net.InetSocketAddress` v5 @kind object, `int` v6 ) @signature `La/a/g/a;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L0881c0.  call `connect`(v4, v5, v6) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #Try_end0.  
  #L0881c6.  return @kind void;
  #L0881c8.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L0881ca.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L0881d0.  v1:= temp;
  #L0881d2.  if v1 == 0 then goto L0881e2;
  #L0881d6.  v1:= new `java.io.IOException`;
  #L0881da.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L0881e0.  throw v1;
  #L0881e2.  throw v0;
  #L0881e4.  v0:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L0881e6.  v1:= new `java.io.IOException`;
  #L0881ea.  v2:= "Exception in connect" @kind object;
  #L0881ee.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0881f4.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L0881fa.  throw v1;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L0881c8;
  catch `java.lang.SecurityException` @[Try_start0..Try_end0] goto L0881e4;
}
procedure `void` `a`(`a.a.g.a` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `La/a/g/a;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08821c.  v4:= 0I;
  #L08821e.  v3:= 1I;
  #L088220.  if v7 == 0 then goto L088250;
  #L088224.  v0:= v5.`a.a.g.a.b` @type ^`a.a.g.d` @kind object;
  #L088228.  v1:= new `java.lang.Object`[v3];
  #L08822c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L088232.  v2:= temp @kind object;
  #L088234.  v1[v4]:= v2 @kind object;
  #L088238.  call temp:= `b`(v0, v6, v1) @signature `La/a/g/d;.b:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L08823e.  v0:= v5.`a.a.g.a.c` @type ^`a.a.g.d` @kind object;
  #L088242.  v1:= new `java.lang.Object`[v3];
  #L088246.  v1[v4]:= v7 @kind object;
  #L08824a.  call temp:= `b`(v0, v6, v1) @signature `La/a/g/d;.b:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L088250.  v0:= v5.`a.a.g.a.e` @type ^`a.a.g.d` @kind object;
  #L088254.  if v0 == 0 then goto L088282;
  #L088258.  v0:= v5.`a.a.g.a.e` @type ^`a.a.g.d` @kind object;
  #L08825c.  call temp:= `a`(v0, v6) @signature `La/a/g/d;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L088262.  v0:= temp;
  #L088264.  if v0 == 0 then goto L088282;
  #L088268.  v0:= new `java.lang.Object`[v3];
  #L08826c.  call temp:= `b`(v8) @signature `La/a/g/a;.b:(Ljava/util/List;)[B` @kind static;
  #L088272.  v1:= temp @kind object;
  #L088274.  v0[v4]:= v1 @kind object;
  #L088278.  v1:= v5.`a.a.g.a.e` @type ^`a.a.g.d` @kind object;
  #L08827c.  call temp:= `d`(v1, v6, v0) @signature `La/a/g/d;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L088282.  return @kind void;
}
procedure `boolean` `b`(`a.a.g.a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/a/g/a;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L088294.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L088298.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L08829e.  v0:= temp @kind object;
  #L0882a0.  v1:= "getInstance" @kind object;
  #L0882a4.  v2:= 0I;
  #L0882a6.  v2:= new `java.lang.Class`[v2];
  #L0882aa.  call temp:= `getMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L0882b0.  v1:= temp @kind object;
  #L0882b2.  v2:= 0I;
  #L0882b4.  v3:= 0I;
  #L0882b6.  v3:= new `java.lang.Object`[v3];
  #L0882ba.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0882c0.  v1:= temp @kind object;
  #L0882c2.  v2:= "isCleartextTrafficPermitted" @kind object;
  #L0882c6.  v3:= 1I;
  #L0882c8.  v3:= new `java.lang.Class`[v3];
  #L0882cc.  v4:= 0I;
  #L0882ce.  v5:= constclass @type ^`java.lang.String` @kind object;
  #L0882d2.  v3[v4]:= v5 @kind object;
  #L0882d6.  call temp:= `getMethod`(v0, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L0882dc.  v0:= temp @kind object;
  #L0882de.  v2:= 1I;
  #L0882e0.  v2:= new `java.lang.Object`[v2];
  #L0882e4.  v3:= 0I;
  #L0882e6.  v2[v3]:= v7 @kind object;
  #L0882ea.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0882f0.  v0:= temp @kind object;
  #L0882f2.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L0882f6.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #Try_end0.  
  #L0882fc.  v0:= temp;
  #L0882fe.  return v0;
  #L088300.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L088302.  call temp:= `b`(v6, v7) @signature `La/a/g/e;.b:(Ljava/lang/String;)Z` @kind super;
  #L088308.  v0:= temp;
  #L08830a.  goto L0882fe;
  #L08830c.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L08830e.  v0:= new `java.lang.AssertionError`;
  #L088312.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L088318.  throw v0;
  #L08831a.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L08831c.  goto L08830e;
  #L08831e.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L088320.  goto L08830e;
  #L088322.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L088324.  goto L088302;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L088300;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L088322;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L08830c;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L08831a;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L08831e;
}

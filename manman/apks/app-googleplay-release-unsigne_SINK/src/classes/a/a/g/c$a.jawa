record `a.a.g.c$a` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `boolean` `a.a.g.c$a.a` @AccessFlag ;
  `java.lang.String` `a.a.g.c$a.b` @AccessFlag ;
  `java.util.List` `a.a.g.c$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.g.c$a` v0 @kind this, `java.util.List` v1 @kind object) @signature `La/a/g/c$a;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0884b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0884b6.  v0.`a.a.g.c$a.c` @type ^`java.util.List` := v1 @kind object;
  #L0884ba.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`a.a.g.c$a` v6 @kind this, `java.lang.Object` v7 @kind object, `java.lang.reflect.Method` v8 @kind object, `java.lang.Object`[] v9 @kind object) @signature `La/a/g/c$a;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0884cc.  v1:= 0I;
  #L0884ce.  v5:= 1I;
  #L0884d0.  v2:= 0I;
  #L0884d2.  call temp:= `getName`(v8) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L0884d8.  v0:= temp @kind object;
  #L0884da.  call temp:= `getReturnType`(v8) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L0884e0.  v3:= temp @kind object;
  #L0884e2.  if v9 != 0 then goto L0884ea;
  #L0884e6.  v9:= `@@a.a.c.b` @type ^`java.lang.String`[] @kind object;
  #L0884ea.  v4:= "supports" @kind object;
  #L0884ee.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0884f4.  v4:= temp;
  #L0884f6.  if v4 == 0 then goto L08850c;
  #L0884fa.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L0884fe.  if v4 != v3 then goto L08850c;
  #L088502.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L088508.  v0:= temp @kind object;
  #L08850a.  return v0 @kind object;
  #L08850c.  v4:= "unsupported" @kind object;
  #L088510.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L088516.  v4:= temp;
  #L088518.  if v4 == 0 then goto L08852c;
  #L08851c.  v4:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L088520.  if v4 != v3 then goto L08852c;
  #L088524.  v6.`a.a.g.c$a.a` @type ^`boolean` := v5 @kind boolean;
  #L088528.  v0:= v1 @kind object;
  #L08852a.  goto L08850a;
  #L08852c.  v4:= "protocols" @kind object;
  #L088530.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L088536.  v4:= temp;
  #L088538.  if v4 == 0 then goto L088548;
  #L08853c.  v4:= length @variable v9;
  #L08853e.  if v4 != 0 then goto L088548;
  #L088542.  v0:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L088546.  goto L08850a;
  #L088548.  v4:= "selectProtocol" @kind object;
  #L08854c.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L088552.  v4:= temp;
  #L088554.  if v4 != 0 then goto L088568;
  #L088558.  v4:= "select" @kind object;
  #L08855c.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L088562.  v4:= temp;
  #L088564.  if v4 == 0 then goto L0885de;
  #L088568.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L08856c.  if v4 != v3 then goto L0885de;
  #L088570.  v3:= length @variable v9;
  #L088572.  if v3 != v5 then goto L0885de;
  #L088576.  v3:= v9[v2] @kind object;
  #L08857a.  v3:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L08857e.  if v3 == 0 then goto L0885de;
  #L088582.  v0:= v9[v2] @kind object;
  #L088586.  v0:= (`java.util.List`) v0 @kind object;
  #L08858a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L088590.  v3:= temp;
  #L088592.  v1:= v2;
  #L088594.  if v1 >= v3 then goto L0885c8;
  #L088598.  v4:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L08859c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0885a2.  v5:= temp @kind object;
  #L0885a4.  call temp:= `contains`(v4, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L0885aa.  v4:= temp;
  #L0885ac.  if v4 == 0 then goto L0885c2;
  #L0885b0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0885b6.  v0:= temp @kind object;
  #L0885b8.  v0:= (`java.lang.String`) v0 @kind object;
  #L0885bc.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L0885c0.  goto L08850a;
  #L0885c2.  v1:= v1 + 1;
  #L0885c6.  goto L088594;
  #L0885c8.  v0:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L0885cc.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0885d2.  v0:= temp @kind object;
  #L0885d4.  v0:= (`java.lang.String`) v0 @kind object;
  #L0885d8.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L0885dc.  goto L08850a;
  #L0885de.  v3:= "protocolSelected" @kind object;
  #L0885e2.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0885e8.  v3:= temp;
  #L0885ea.  if v3 != 0 then goto L0885fe;
  #L0885ee.  v3:= "selected" @kind object;
  #L0885f2.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0885f8.  v0:= temp;
  #L0885fa.  if v0 == 0 then goto L088616;
  #L0885fe.  v0:= length @variable v9;
  #L088600.  if v0 != v5 then goto L088616;
  #L088604.  v0:= v9[v2] @kind object;
  #L088608.  v0:= (`java.lang.String`) v0 @kind object;
  #L08860c.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L088610.  v0:= v1 @kind object;
  #L088612.  goto L08850a;
  #L088616.  call temp:= `invoke`(v8, v6, v9) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L08861c.  v0:= temp @kind object;
  #L08861e.  goto L08850a;
}

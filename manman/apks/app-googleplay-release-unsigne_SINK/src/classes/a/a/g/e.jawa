record `a.a.g.e` @kind class @AccessFlag PUBLIC {
}
global `a.a.g.e` `@@a.a.g.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@a.a.g.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/g/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L087bc8.  call temp:= `a`() @signature `La/a/g/e;.a:()La/a/g/e;` @kind static;
  #L087bce.  v0:= temp @kind object;
  #L087bd0.  `@@a.a.g.e.a` @type ^`a.a.g.e` := v0 @kind object;
  #L087bd4.  v0:= constclass @type ^`a.u` @kind object;
  #L087bd8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L087bde.  v0:= temp @kind object;
  #L087be0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L087be6.  v0:= temp @kind object;
  #L087be8.  `@@a.a.g.e.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L087bec.  return @kind void;
}
procedure `void` `<init>`(`a.a.g.e` v0 @kind this) @signature `La/a/g/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L087c00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L087c06.  return @kind void;
}
procedure `a.a.g.e` `a`() @signature `La/a/g/e;.a:()La/a/g/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L087c18.  call temp:= `a`() @signature `La/a/g/a;.a:()La/a/g/e;` @kind static;
  #L087c1e.  v0:= temp @kind object;
  #L087c20.  if v0 == 0 then goto L087c26;
  #L087c24.  return v0 @kind object;
  #L087c26.  call temp:= `a`() @signature `La/a/g/b;.a:()La/a/g/b;` @kind static;
  #L087c2c.  v0:= temp @kind object;
  #L087c2e.  if v0 != 0 then goto L087c24;
  #L087c32.  call temp:= `a`() @signature `La/a/g/c;.a:()La/a/g/e;` @kind static;
  #L087c38.  v0:= temp @kind object;
  #L087c3a.  if v0 != 0 then goto L087c24;
  #L087c3e.  v0:= new `a.a.g.e`;
  #L087c42.  call `<init>`(v0) @signature `La/a/g/e;.<init>:()V` @kind direct;
  #L087c48.  goto L087c24;
}
procedure `java.util.List` `a`(`java.util.List` v5 @kind object) @signature `La/a/g/e;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L087c5c.  v2:= new `java.util.ArrayList`;
  #L087c60.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L087c66.  v0:= temp;
  #L087c68.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L087c6e.  v0:= 0I;
  #L087c70.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L087c76.  v3:= temp;
  #L087c78.  v1:= v0;
  #L087c7a.  if v1 >= v3 then goto L087caa;
  #L087c7e.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L087c84.  v0:= temp @kind object;
  #L087c86.  v0:= (`a.v`) v0 @kind object;
  #L087c8a.  v4:= `@@a.v.a` @type ^`a.v` @kind object;
  #L087c8e.  if v0 != v4 then goto L087c9a;
  #L087c92.  v0:= v1 + 1;
  #L087c96.  v1:= v0;
  #L087c98.  goto L087c7a;
  #L087c9a.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L087ca0.  v0:= temp @kind object;
  #L087ca2.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L087ca8.  goto L087c92;
  #L087caa.  return v2 @kind object;
}
procedure `a.a.g.e` `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L087cbc.  v0:= `@@a.a.g.e.a` @type ^`a.a.g.e` @kind object;
  #L087cc0.  return v0 @kind object;
}
procedure `byte`[] `b`(`java.util.List` v5 @kind object) @signature `La/a/g/e;.b:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L087cd4.  v2:= new `b.c`;
  #L087cd8.  call `<init>`(v2) @signature `Lb/c;.<init>:()V` @kind direct;
  #L087cde.  v0:= 0I;
  #L087ce0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L087ce6.  v3:= temp;
  #L087ce8.  v1:= v0;
  #L087cea.  if v1 >= v3 then goto L087d30;
  #L087cee.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L087cf4.  v0:= temp @kind object;
  #L087cf6.  v0:= (`a.v`) v0 @kind object;
  #L087cfa.  v4:= `@@a.v.a` @type ^`a.v` @kind object;
  #L087cfe.  if v0 != v4 then goto L087d0a;
  #L087d02.  v0:= v1 + 1;
  #L087d06.  v1:= v0;
  #L087d08.  goto L087cea;
  #L087d0a.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L087d10.  v4:= temp @kind object;
  #L087d12.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L087d18.  v4:= temp;
  #L087d1a.  call temp:= `b`(v2, v4) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L087d20.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L087d26.  v0:= temp @kind object;
  #L087d28.  call temp:= `a`(v2, v0) @signature `Lb/c;.a:(Ljava/lang/String;)Lb/c;` @kind virtual;
  #L087d2e.  goto L087d02;
  #L087d30.  call temp:= `q`(v2) @signature `Lb/c;.q:()[B` @kind virtual;
  #L087d36.  v0:= temp @kind object;
  #L087d38.  return v0 @kind object;
}
procedure `a.a.h.b` `a`(`a.a.g.e` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L087d4c.  v0:= new `a.a.h.a`;
  #L087d50.  call temp:= `a`(v3) @signature `La/a/h/e;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/e;` @kind static;
  #L087d56.  v1:= temp @kind object;
  #L087d58.  call `<init>`(v0, v1) @signature `La/a/h/a;.<init>:(La/a/h/e;)V` @kind direct;
  #L087d5e.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`a.a.g.e` v2 @kind this, `java.lang.String` v3 @kind object) @signature `La/a/g/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L087d70.  v0:= `@@a.a.g.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L087d74.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L087d78.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L087d7e.  v0:= temp;
  #L087d80.  if v0 == 0 then goto L087d90;
  #L087d84.  v0:= new `java.lang.Throwable`;
  #L087d88.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L087d8e.  return v0 @kind object;
  #L087d90.  v0:= 0I;
  #L087d92.  goto L087d8e;
}
procedure `java.lang.String` `a`(`a.a.g.e` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L087da4.  v0:= 0I;
  #L087da6.  return v0 @kind object;
}
procedure `void` `a`(`a.a.g.e` v2 @kind this, `int` v3 , `java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `La/a/g/e;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L087db8.  v0:= 5I;
  #L087dba.  if v3 != v0 then goto L087dce;
  #L087dbe.  v0:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L087dc2.  v1:= `@@a.a.g.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L087dc6.  call `log`(v1, v0, v4, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L087dcc.  return @kind void;
  #L087dce.  v0:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L087dd2.  goto L087dc2;
}
procedure `void` `a`(`a.a.g.e` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `La/a/g/e;.a:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L087de4.  if v4 != 0 then goto L087e0e;
  #L087de8.  v0:= new `java.lang.StringBuilder`;
  #L087dec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L087df2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L087df8.  v0:= temp @kind object;
  #L087dfa.  v1:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L087dfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L087e04.  v0:= temp @kind object;
  #L087e06.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L087e0c.  v3:= temp @kind object;
  #L087e0e.  v0:= 5I;
  #L087e10.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L087e14.  call `a`(v2, v0, v3, v4) @signature `La/a/g/e;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L087e1a.  return @kind void;
}
procedure `void` `a`(`a.a.g.e` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `La/a/g/e;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L087e2c.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L087e32.  return @kind void;
}
procedure `void` `a`(`a.a.g.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L087e44.  return @kind void;
}
procedure `void` `b`(`a.a.g.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `La/a/g/e;.b:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L087e58.  return @kind void;
}
procedure `boolean` `b`(`a.a.g.e` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/a/g/e;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L087e6c.  v0:= 1I;
  #L087e6e.  return v0;
}

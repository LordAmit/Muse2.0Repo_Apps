record `a.z` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `a.x` `a.z.a` @AccessFlag FINAL;
  `a.v` `a.z.b` @AccessFlag FINAL;
  `int` `a.z.c` @AccessFlag FINAL;
  `java.lang.String` `a.z.d` @AccessFlag FINAL;
  `a.p` `a.z.e` @AccessFlag FINAL;
  `a.q` `a.z.f` @AccessFlag FINAL;
  `a.aa` `a.z.g` @AccessFlag FINAL;
  `a.z` `a.z.h` @AccessFlag FINAL;
  `a.z` `a.z.i` @AccessFlag FINAL;
  `a.z` `a.z.j` @AccessFlag FINAL;
  `long` `a.z.k` @AccessFlag FINAL;
  `long` `a.z.l` @AccessFlag FINAL;
  `a.d` `a.z.m` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`a.z` v2 @kind this, `a.z$a` v3 @kind object) @signature `La/z;.<init>:(La/z$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L091c24.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L091c2a.  v0:= v3.`a.z$a.a` @type ^`a.x` @kind object;
  #L091c2e.  v2.`a.z.a` @type ^`a.x` := v0 @kind object;
  #L091c32.  v0:= v3.`a.z$a.b` @type ^`a.v` @kind object;
  #L091c36.  v2.`a.z.b` @type ^`a.v` := v0 @kind object;
  #L091c3a.  v0:= v3.`a.z$a.c` @type ^`int`;
  #L091c3e.  v2.`a.z.c` @type ^`int` := v0;
  #L091c42.  v0:= v3.`a.z$a.d` @type ^`java.lang.String` @kind object;
  #L091c46.  v2.`a.z.d` @type ^`java.lang.String` := v0 @kind object;
  #L091c4a.  v0:= v3.`a.z$a.e` @type ^`a.p` @kind object;
  #L091c4e.  v2.`a.z.e` @type ^`a.p` := v0 @kind object;
  #L091c52.  v0:= v3.`a.z$a.f` @type ^`a.q$a` @kind object;
  #L091c56.  call temp:= `a`(v0) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L091c5c.  v0:= temp @kind object;
  #L091c5e.  v2.`a.z.f` @type ^`a.q` := v0 @kind object;
  #L091c62.  v0:= v3.`a.z$a.g` @type ^`a.aa` @kind object;
  #L091c66.  v2.`a.z.g` @type ^`a.aa` := v0 @kind object;
  #L091c6a.  v0:= v3.`a.z$a.h` @type ^`a.z` @kind object;
  #L091c6e.  v2.`a.z.h` @type ^`a.z` := v0 @kind object;
  #L091c72.  v0:= v3.`a.z$a.i` @type ^`a.z` @kind object;
  #L091c76.  v2.`a.z.i` @type ^`a.z` := v0 @kind object;
  #L091c7a.  v0:= v3.`a.z$a.j` @type ^`a.z` @kind object;
  #L091c7e.  v2.`a.z.j` @type ^`a.z` := v0 @kind object;
  #L091c82.  v0:= v3.`a.z$a.k` @type ^`long` @kind wide;
  #L091c86.  v2.`a.z.k` @type ^`long` := v0 @kind wide;
  #L091c8a.  v0:= v3.`a.z$a.l` @type ^`long` @kind wide;
  #L091c8e.  v2.`a.z.l` @type ^`long` := v0 @kind wide;
  #L091c92.  return @kind void;
}
procedure `a.x` `a`(`a.z` v1 @kind this) @signature `La/z;.a:()La/x;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091ca4.  v0:= v1.`a.z.a` @type ^`a.x` @kind object;
  #L091ca8.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.z` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091cbc.  v0:= 0I;
  #L091cbe.  call temp:= `a`(v1, v2, v0) @signature `La/z;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L091cc4.  v0:= temp @kind object;
  #L091cc6.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.z` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/z;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091cd8.  v0:= v1.`a.z.f` @type ^`a.q` @kind object;
  #L091cdc.  call temp:= `a`(v0, v2) @signature `La/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L091ce2.  v0:= temp @kind object;
  #L091ce4.  if v0 == 0 then goto L091cea;
  #L091ce8.  v3:= v0 @kind object;
  #L091cea.  return v3 @kind object;
}
procedure `int` `b`(`a.z` v1 @kind this) @signature `La/z;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091cfc.  v0:= v1.`a.z.c` @type ^`int`;
  #L091d00.  return v0;
}
procedure `boolean` `c`(`a.z` v2 @kind this) @signature `La/z;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L091d14.  v0:= v2.`a.z.c` @type ^`int`;
  #L091d18.  v1:= 200I;
  #L091d1c.  if v0 < v1 then goto L091d30;
  #L091d20.  v0:= v2.`a.z.c` @type ^`int`;
  #L091d24.  v1:= 300I;
  #L091d28.  if v0 >= v1 then goto L091d30;
  #L091d2c.  v0:= 1I;
  #L091d2e.  return v0;
  #L091d30.  v0:= 0I;
  #L091d32.  goto L091d2e;
}
procedure `void` `close`(`a.z` v1 @kind this) @signature `La/z;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091d44.  v0:= v1.`a.z.g` @type ^`a.aa` @kind object;
  #L091d48.  call `close`(v0) @signature `La/aa;.close:()V` @kind virtual;
  #L091d4e.  return @kind void;
}
procedure `a.p` `d`(`a.z` v1 @kind this) @signature `La/z;.d:()La/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091d60.  v0:= v1.`a.z.e` @type ^`a.p` @kind object;
  #L091d64.  return v0 @kind object;
}
procedure `a.q` `e`(`a.z` v1 @kind this) @signature `La/z;.e:()La/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091d78.  v0:= v1.`a.z.f` @type ^`a.q` @kind object;
  #L091d7c.  return v0 @kind object;
}
procedure `a.aa` `f`(`a.z` v1 @kind this) @signature `La/z;.f:()La/aa;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091d90.  v0:= v1.`a.z.g` @type ^`a.aa` @kind object;
  #L091d94.  return v0 @kind object;
}
procedure `a.z$a` `g`(`a.z` v1 @kind this) @signature `La/z;.g:()La/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091da8.  v0:= new `a.z$a`;
  #L091dac.  call `<init>`(v0, v1) @signature `La/z$a;.<init>:(La/z;)V` @kind direct;
  #L091db2.  return v0 @kind object;
}
procedure `a.d` `h`(`a.z` v1 @kind this) @signature `La/z;.h:()La/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L091dc4.  v0:= v1.`a.z.m` @type ^`a.d` @kind object;
  #L091dc8.  if v0 == 0 then goto L091dce;
  #L091dcc.  return v0 @kind object;
  #L091dce.  v0:= v1.`a.z.f` @type ^`a.q` @kind object;
  #L091dd2.  call temp:= `a`(v0) @signature `La/d;.a:(La/q;)La/d;` @kind static;
  #L091dd8.  v0:= temp @kind object;
  #L091dda.  v1.`a.z.m` @type ^`a.d` := v0 @kind object;
  #L091dde.  goto L091dcc;
}
procedure `long` `i`(`a.z` v2 @kind this) @signature `La/z;.i:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L091df0.  v0:= v2.`a.z.k` @type ^`long` @kind wide;
  #L091df4.  return v0 @kind wide;
}
procedure `long` `j`(`a.z` v2 @kind this) @signature `La/z;.j:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L091e08.  v0:= v2.`a.z.l` @type ^`long` @kind wide;
  #L091e0c.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`a.z` v2 @kind this) @signature `La/z;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L091e20.  v0:= new `java.lang.StringBuilder`;
  #L091e24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L091e2a.  v1:= "Response{protocol=" @kind object;
  #L091e2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e34.  v0:= temp @kind object;
  #L091e36.  v1:= v2.`a.z.b` @type ^`a.v` @kind object;
  #L091e3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e40.  v0:= temp @kind object;
  #L091e42.  v1:= ", code=" @kind object;
  #L091e46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e4c.  v0:= temp @kind object;
  #L091e4e.  v1:= v2.`a.z.c` @type ^`int`;
  #L091e52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e58.  v0:= temp @kind object;
  #L091e5a.  v1:= ", message=" @kind object;
  #L091e5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e64.  v0:= temp @kind object;
  #L091e66.  v1:= v2.`a.z.d` @type ^`java.lang.String` @kind object;
  #L091e6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e70.  v0:= temp @kind object;
  #L091e72.  v1:= ", url=" @kind object;
  #L091e76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e7c.  v0:= temp @kind object;
  #L091e7e.  v1:= v2.`a.z.a` @type ^`a.x` @kind object;
  #L091e82.  call temp:= `a`(v1) @signature `La/x;.a:()La/r;` @kind virtual;
  #L091e88.  v1:= temp @kind object;
  #L091e8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e90.  v0:= temp @kind object;
  #L091e92.  v1:= 125I;
  #L091e96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L091e9c.  v0:= temp @kind object;
  #L091e9e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L091ea4.  v0:= temp @kind object;
  #L091ea6.  return v0 @kind object;
}

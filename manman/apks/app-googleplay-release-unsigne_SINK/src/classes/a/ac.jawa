record `a.ac` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `a.ac.f` @AccessFlag FINAL;
}
global `a.ac` `@@a.ac.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac`[] `@@a.ac.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/ac;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08a854.  v7:= 4I;
  #L08a856.  v6:= 3I;
  #L08a858.  v5:= 2I;
  #L08a85a.  v4:= 1I;
  #L08a85c.  v3:= 0I;
  #L08a85e.  v0:= new `a.ac`;
  #L08a862.  v1:= "TLS_1_3" @kind object;
  #L08a866.  v2:= "TLSv1.3" @kind object;
  #L08a86a.  call `<init>`(v0, v1, v3, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08a870.  `@@a.ac.a` @type ^`a.ac` := v0 @kind object;
  #L08a874.  v0:= new `a.ac`;
  #L08a878.  v1:= "TLS_1_2" @kind object;
  #L08a87c.  v2:= "TLSv1.2" @kind object;
  #L08a880.  call `<init>`(v0, v1, v4, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08a886.  `@@a.ac.b` @type ^`a.ac` := v0 @kind object;
  #L08a88a.  v0:= new `a.ac`;
  #L08a88e.  v1:= "TLS_1_1" @kind object;
  #L08a892.  v2:= "TLSv1.1" @kind object;
  #L08a896.  call `<init>`(v0, v1, v5, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08a89c.  `@@a.ac.c` @type ^`a.ac` := v0 @kind object;
  #L08a8a0.  v0:= new `a.ac`;
  #L08a8a4.  v1:= "TLS_1_0" @kind object;
  #L08a8a8.  v2:= "TLSv1" @kind object;
  #L08a8ac.  call `<init>`(v0, v1, v6, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08a8b2.  `@@a.ac.d` @type ^`a.ac` := v0 @kind object;
  #L08a8b6.  v0:= new `a.ac`;
  #L08a8ba.  v1:= "SSL_3_0" @kind object;
  #L08a8be.  v2:= "SSLv3" @kind object;
  #L08a8c2.  call `<init>`(v0, v1, v7, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08a8c8.  `@@a.ac.e` @type ^`a.ac` := v0 @kind object;
  #L08a8cc.  v0:= 5I;
  #L08a8ce.  v0:= new `a.ac`[v0];
  #L08a8d2.  v1:= `@@a.ac.a` @type ^`a.ac` @kind object;
  #L08a8d6.  v0[v3]:= v1 @kind object;
  #L08a8da.  v1:= `@@a.ac.b` @type ^`a.ac` @kind object;
  #L08a8de.  v0[v4]:= v1 @kind object;
  #L08a8e2.  v1:= `@@a.ac.c` @type ^`a.ac` @kind object;
  #L08a8e6.  v0[v5]:= v1 @kind object;
  #L08a8ea.  v1:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L08a8ee.  v0[v6]:= v1 @kind object;
  #L08a8f2.  v1:= `@@a.ac.e` @type ^`a.ac` @kind object;
  #L08a8f6.  v0[v7]:= v1 @kind object;
  #L08a8fa.  `@@a.ac.g` @type ^`a.ac`[] := v0 @kind object;
  #L08a8fe.  return @kind void;
}
procedure `void` `<init>`(`a.ac` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L08a910.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L08a916.  v0.`a.ac.f` @type ^`java.lang.String` := v3 @kind object;
  #L08a91a.  return @kind void;
}
procedure `a.ac` `a`(`java.lang.String` v3 @kind object) @signature `La/ac;.a:(Ljava/lang/String;)La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08a92c.  v0:= -1I;
  #L08a92e.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L08a934.  v1:= temp;
  #L08a936.  goto L08a9f8;
  #L08a93c.  goto L08aa24;
  #L08a942.  v0:= new `java.lang.IllegalArgumentException`;
  #L08a946.  v1:= new `java.lang.StringBuilder`;
  #L08a94a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a950.  v2:= "Unexpected TLS version: " @kind object;
  #L08a954.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a95a.  v1:= temp @kind object;
  #L08a95c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a962.  v1:= temp @kind object;
  #L08a964.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a96a.  v1:= temp @kind object;
  #L08a96c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a972.  throw v0;
  #L08a974.  v1:= "TLSv1.3" @kind object;
  #L08a978.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a97e.  v1:= temp;
  #L08a980.  if v1 == 0 then goto L08a93c;
  #L08a984.  v0:= 0I;
  #L08a986.  goto L08a93c;
  #L08a988.  v1:= "TLSv1.2" @kind object;
  #L08a98c.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a992.  v1:= temp;
  #L08a994.  if v1 == 0 then goto L08a93c;
  #L08a998.  v0:= 1I;
  #L08a99a.  goto L08a93c;
  #L08a99c.  v1:= "TLSv1.1" @kind object;
  #L08a9a0.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a9a6.  v1:= temp;
  #L08a9a8.  if v1 == 0 then goto L08a93c;
  #L08a9ac.  v0:= 2I;
  #L08a9ae.  goto L08a93c;
  #L08a9b0.  v1:= "TLSv1" @kind object;
  #L08a9b4.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a9ba.  v1:= temp;
  #L08a9bc.  if v1 == 0 then goto L08a93c;
  #L08a9c0.  v0:= 3I;
  #L08a9c2.  goto L08a93c;
  #L08a9c4.  v1:= "SSLv3" @kind object;
  #L08a9c8.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a9ce.  v1:= temp;
  #L08a9d0.  if v1 == 0 then goto L08a93c;
  #L08a9d4.  v0:= 4I;
  #L08a9d6.  goto L08a93c;
  #L08a9d8.  v0:= `@@a.ac.a` @type ^`a.ac` @kind object;
  #L08a9dc.  return v0 @kind object;
  #L08a9de.  v0:= `@@a.ac.b` @type ^`a.ac` @kind object;
  #L08a9e2.  goto L08a9dc;
  #L08a9e4.  v0:= `@@a.ac.c` @type ^`a.ac` @kind object;
  #L08a9e8.  goto L08a9dc;
  #L08a9ea.  v0:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L08a9ee.  goto L08a9dc;
  #L08a9f0.  v0:= `@@a.ac.e` @type ^`a.ac` @kind object;
  #L08a9f4.  goto L08a9dc;
  #L08a9f6.  
  #L08a9f8.  switch v1
                  | -503070503 => goto L08a99c
                  | -503070502 => goto L08a988
                  | -503070501 => goto L08a974
                  | 79201641 => goto L08a9c4
                  | 79923350 => goto L08a9b0
                  | else => goto L08a93c;
  #L08aa24.  switch v0
                  | 0 => goto L08a9d8
                  | 1 => goto L08a9de
                  | 2 => goto L08a9e4
                  | 3 => goto L08a9ea
                  | 4 => goto L08a9f0
                  | else => goto L08a942;
}
procedure `a.ac` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/ac;.valueOf:(Ljava/lang/String;)La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08aa50.  v0:= constclass @type ^`a.ac` @kind object;
  #L08aa54.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L08aa5a.  v0:= temp @kind object;
  #L08aa5c.  v0:= (`a.ac`) v0 @kind object;
  #L08aa60.  return v0 @kind object;
}
procedure `a.ac`[] `values`() @signature `La/ac;.values:()[La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08aa74.  v0:= `@@a.ac.g` @type ^`a.ac`[] @kind object;
  #L08aa78.  call temp:= `clone`(v0) @signature `[La/ac;.clone:()Ljava/lang/Object;` @kind virtual;
  #L08aa7e.  v0:= temp @kind object;
  #L08aa80.  v0:= (`a.ac`[]) v0 @kind object;
  #L08aa84.  return v0 @kind object;
}

record `a.r` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.r.a` @AccessFlag FINAL;
  `java.lang.String` `a.r.b` @AccessFlag FINAL;
  `int` `a.r.c` @AccessFlag FINAL;
  `java.lang.String` `a.r.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.r.g` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.r.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.j` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@a.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L08f694.  v0:= 16I;
  #L08f698.  v0:= new `char`[v0];
  #L08f69c.  goto L08f6a8;
  #L08f6a2.  `@@a.r.d` @type ^`char`[] := v0 @kind object;
  #L08f6a6.  return @kind void;
  #L08f6a8.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L08f6cf.  goto L08f6a2;
}
procedure `void` `<init>`(`a.r` v4 @kind this, `a.r$a` v5 @kind object) @signature `La/r;.<init>:(La/r$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08f6e0.  v1:= 0I;
  #L08f6e2.  v3:= 0I;
  #L08f6e4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08f6ea.  v0:= v5.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08f6ee.  v4.`a.r.a` @type ^`java.lang.String` := v0 @kind object;
  #L08f6f2.  v0:= v5.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L08f6f6.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L08f6fc.  v0:= temp @kind object;
  #L08f6fe.  v4.`a.r.e` @type ^`java.lang.String` := v0 @kind object;
  #L08f702.  v0:= v5.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08f706.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L08f70c.  v0:= temp @kind object;
  #L08f70e.  v4.`a.r.f` @type ^`java.lang.String` := v0 @kind object;
  #L08f712.  v0:= v5.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08f716.  v4.`a.r.b` @type ^`java.lang.String` := v0 @kind object;
  #L08f71a.  call temp:= `a`(v5) @signature `La/r$a;.a:()I` @kind virtual;
  #L08f720.  v0:= temp;
  #L08f722.  v4.`a.r.c` @type ^`int` := v0;
  #L08f726.  v0:= v5.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08f72a.  call temp:= `a`(v4, v0, v3) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L08f730.  v0:= temp @kind object;
  #L08f732.  v4.`a.r.g` @type ^`java.util.List` := v0 @kind object;
  #L08f736.  v0:= v5.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08f73a.  if v0 == 0 then goto L08f776;
  #L08f73e.  v0:= v5.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08f742.  v2:= 1I;
  #L08f744.  call temp:= `a`(v4, v0, v2) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L08f74a.  v0:= temp @kind object;
  #L08f74c.  v4.`a.r.h` @type ^`java.util.List` := v0 @kind object;
  #L08f750.  v0:= v5.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08f754.  if v0 == 0 then goto L08f764;
  #L08f758.  v0:= v5.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08f75c.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L08f762.  v1:= temp @kind object;
  #L08f764.  v4.`a.r.i` @type ^`java.lang.String` := v1 @kind object;
  #L08f768.  call temp:= `toString`(v5) @signature `La/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L08f76e.  v0:= temp @kind object;
  #L08f770.  v4.`a.r.j` @type ^`java.lang.String` := v0 @kind object;
  #L08f774.  return @kind void;
  #L08f776.  v0:= v1 @kind object;
  #L08f778.  goto L08f74c;
}
procedure `int` `a`(`char` v1 ) @signature `La/r;.a:(C)I` @AccessFlag STATIC {
    temp;
    v0;

  #L08f78c.  v0:= 48I;
  #L08f790.  if v1 < v0 then goto L08f7a2;
  #L08f794.  v0:= 57I;
  #L08f798.  if v1 > v0 then goto L08f7a2;
  #L08f79c.  v0:= v1 + -48;
  #L08f7a0.  return v0;
  #L08f7a2.  v0:= 97I;
  #L08f7a6.  if v1 < v0 then goto L08f7bc;
  #L08f7aa.  v0:= 102I;
  #L08f7ae.  if v1 > v0 then goto L08f7bc;
  #L08f7b2.  v0:= v1 + -97;
  #L08f7b6.  v0:= v0 + 10;
  #L08f7ba.  goto L08f7a0;
  #L08f7bc.  v0:= 65I;
  #L08f7c0.  if v1 < v0 then goto L08f7d6;
  #L08f7c4.  v0:= 70I;
  #L08f7c8.  if v1 > v0 then goto L08f7d6;
  #L08f7cc.  v0:= v1 + -65;
  #L08f7d0.  v0:= v0 + 10;
  #L08f7d4.  goto L08f7a0;
  #L08f7d6.  v0:= -1I;
  #L08f7d8.  goto L08f7a0;
}
procedure `int` `a`(`java.lang.String` v1 @kind object) @signature `La/r;.a:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08f7ec.  v0:= "http" @kind object;
  #L08f7f0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08f7f6.  v0:= temp;
  #L08f7f8.  if v0 == 0 then goto L08f802;
  #L08f7fc.  v0:= 80I;
  #L08f800.  return v0;
  #L08f802.  v0:= "https" @kind object;
  #L08f806.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08f80c.  v0:= temp;
  #L08f80e.  if v0 == 0 then goto L08f818;
  #L08f812.  v0:= 443I;
  #L08f816.  goto L08f800;
  #L08f818.  v0:= -1I;
  #L08f81a.  goto L08f800;
}
procedure `java.lang.String` `a`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 , `java.lang.String` v12 @kind object, `boolean` v13 , `boolean` v14 , `boolean` v15 , `boolean` v16 ) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L08f82c.  v2:= v10;
  #L08f82e.  if v2 >= v11 then goto L08f8c8;
  #L08f832.  call temp:= `codePointAt`(v9, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L08f838.  v0:= temp;
  #L08f83a.  v1:= 32I;
  #L08f83e.  if v0 < v1 then goto L08f88c;
  #L08f842.  v1:= 127I;
  #L08f846.  if v0 == v1 then goto L08f88c;
  #L08f84a.  v1:= 128I;
  #L08f84e.  if v0 < v1 then goto L08f856;
  #L08f852.  if v16 != 0 then goto L08f88c;
  #L08f856.  call temp:= `indexOf`(v12, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08f85c.  v1:= temp;
  #L08f85e.  v3:= -1I;
  #L08f860.  if v1 != v3 then goto L08f88c;
  #L08f864.  v1:= 37I;
  #L08f868.  if v0 != v1 then goto L08f880;
  #L08f86c.  if v13 == 0 then goto L08f88c;
  #L08f870.  if v14 == 0 then goto L08f880;
  #L08f874.  call temp:= `a`(v9, v2, v11) @signature `La/r;.a:(Ljava/lang/String;II)Z` @kind static;
  #L08f87a.  v1:= temp;
  #L08f87c.  if v1 == 0 then goto L08f88c;
  #L08f880.  v1:= 43I;
  #L08f884.  if v0 != v1 then goto L08f8bc;
  #L08f888.  if v15 == 0 then goto L08f8bc;
  #L08f88c.  v0:= new `b.c`;
  #L08f890.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08f896.  call temp:= `a`(v0, v9, v10, v2) @signature `Lb/c;.a:(Ljava/lang/String;II)Lb/c;` @kind virtual;
  #L08f89c.  v1:= v9 @kind object;
  #L08f89e.  v3:= v11;
  #L08f8a0.  v4:= v12 @kind object;
  #L08f8a2.  v5:= v13;
  #L08f8a4.  v6:= v14;
  #L08f8a6.  v7:= v15;
  #L08f8a8.  v8:= v16;
  #L08f8ac.  call `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IILjava/lang/String;ZZZZ)V` @kind static;
  #L08f8b2.  call temp:= `o`(v0) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L08f8b8.  v0:= temp @kind object;
  #L08f8ba.  return v0 @kind object;
  #L08f8bc.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L08f8c2.  v0:= temp;
  #L08f8c4.  v2:= v2 + v0 @kind int;
  #L08f8c6.  goto L08f82e;
  #L08f8c8.  call temp:= `substring`(v9, v10, v11) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08f8ce.  v0:= temp @kind object;
  #L08f8d0.  goto L08f8ba;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08f8e4.  v0:= v4;
  #L08f8e6.  if v0 >= v5 then goto L08f92c;
  #L08f8ea.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08f8f0.  v1:= temp;
  #L08f8f2.  v2:= 37I;
  #L08f8f6.  if v1 == v2 then goto L08f906;
  #L08f8fa.  v2:= 43I;
  #L08f8fe.  if v1 != v2 then goto L08f926;
  #L08f902.  if v6 == 0 then goto L08f926;
  #L08f906.  v1:= new `b.c`;
  #L08f90a.  call `<init>`(v1) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08f910.  call temp:= `a`(v1, v3, v4, v0) @signature `Lb/c;.a:(Ljava/lang/String;II)Lb/c;` @kind virtual;
  #L08f916.  call `a`(v1, v3, v0, v5, v6) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IIZ)V` @kind static;
  #L08f91c.  call temp:= `o`(v1) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L08f922.  v0:= temp @kind object;
  #L08f924.  return v0 @kind object;
  #L08f926.  v0:= v0 + 1;
  #L08f92a.  goto L08f8e6;
  #L08f92c.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08f932.  v0:= temp @kind object;
  #L08f934.  goto L08f924;
}
procedure `java.lang.String` `a`(`java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `boolean` v10 , `boolean` v11 , `boolean` v12 , `boolean` v13 ) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08f948.  v1:= 0I;
  #L08f94a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08f950.  v2:= temp;
  #L08f952.  v0:= v8 @kind object;
  #L08f954.  v3:= v9 @kind object;
  #L08f956.  v4:= v10;
  #L08f958.  v5:= v11;
  #L08f95a.  v6:= v12;
  #L08f95c.  v7:= v13;
  #L08f95e.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f964.  v0:= temp @kind object;
  #L08f966.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L08f978.  v0:= 0I;
  #L08f97a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08f980.  v1:= temp;
  #L08f982.  call temp:= `a`(v2, v0, v1, v3) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L08f988.  v0:= temp @kind object;
  #L08f98a.  return v0 @kind object;
}
procedure `java.util.List` `a`(`a.r` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08f99c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08f9a2.  v2:= temp;
  #L08f9a4.  v3:= new `java.util.ArrayList`;
  #L08f9a8.  call `<init>`(v3, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L08f9ae.  v0:= 0I;
  #L08f9b0.  v1:= v0;
  #L08f9b2.  if v1 >= v2 then goto L08f9e0;
  #L08f9b6.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08f9bc.  v0:= temp @kind object;
  #L08f9be.  v0:= (`java.lang.String`) v0 @kind object;
  #L08f9c2.  if v0 == 0 then goto L08f9dc;
  #L08f9c6.  call temp:= `a`(v0, v6) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L08f9cc.  v0:= temp @kind object;
  #L08f9ce.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08f9d4.  v0:= v1 + 1;
  #L08f9d8.  v1:= v0;
  #L08f9da.  goto L08f9b2;
  #L08f9dc.  v0:= 0I;
  #L08f9de.  goto L08f9ce;
  #L08f9e0.  call temp:= `unmodifiableList`(v3) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08f9e6.  v0:= temp @kind object;
  #L08f9e8.  return v0 @kind object;
}
procedure `void` `a`(`b.c` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IILjava/lang/String;ZZZZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08f9fc.  v5:= 37I;
  #L08fa00.  v0:= 0I;
  #L08fa02.  if v8 >= v9 then goto L08fb06;
  #L08fa06.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L08fa0c.  v2:= temp;
  #L08fa0e.  if v11 == 0 then goto L08fa3e;
  #L08fa12.  v1:= 9I;
  #L08fa16.  if v2 == v1 then goto L08fa32;
  #L08fa1a.  v1:= 10I;
  #L08fa1e.  if v2 == v1 then goto L08fa32;
  #L08fa22.  v1:= 12I;
  #L08fa26.  if v2 == v1 then goto L08fa32;
  #L08fa2a.  v1:= 13I;
  #L08fa2e.  if v2 != v1 then goto L08fa3e;
  #L08fa32.  call temp:= `charCount`(v2) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L08fa38.  v1:= temp;
  #L08fa3a.  v8:= v8 + v1 @kind int;
  #L08fa3c.  goto L08fa02;
  #L08fa3e.  v1:= 43I;
  #L08fa42.  if v2 != v1 then goto L08fa60;
  #L08fa46.  if v13 == 0 then goto L08fa60;
  #L08fa4a.  if v11 == 0 then goto L08fa5a;
  #L08fa4e.  v1:= "+" @kind object;
  #L08fa52.  call temp:= `a`(v6, v1) @signature `Lb/c;.a:(Ljava/lang/String;)Lb/c;` @kind virtual;
  #L08fa58.  goto L08fa32;
  #L08fa5a.  v1:= "%2B" @kind object;
  #L08fa5e.  goto L08fa52;
  #L08fa60.  v1:= 32I;
  #L08fa64.  if v2 < v1 then goto L08faa2;
  #L08fa68.  v1:= 127I;
  #L08fa6c.  if v2 == v1 then goto L08faa2;
  #L08fa70.  v1:= 128I;
  #L08fa74.  if v2 < v1 then goto L08fa7c;
  #L08fa78.  if v14 != 0 then goto L08faa2;
  #L08fa7c.  call temp:= `indexOf`(v10, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08fa82.  v1:= temp;
  #L08fa84.  v3:= -1I;
  #L08fa86.  if v1 != v3 then goto L08faa2;
  #L08fa8a.  if v2 != v5 then goto L08fafe;
  #L08fa8e.  if v11 == 0 then goto L08faa2;
  #L08fa92.  if v12 == 0 then goto L08fafe;
  #L08fa96.  call temp:= `a`(v7, v8, v9) @signature `La/r;.a:(Ljava/lang/String;II)Z` @kind static;
  #L08fa9c.  v1:= temp;
  #L08fa9e.  if v1 != 0 then goto L08fafe;
  #L08faa2.  if v0 != 0 then goto L08fab0;
  #L08faa6.  v0:= new `b.c`;
  #L08faaa.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08fab0.  call temp:= `a`(v0, v2) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L08fab6.  call temp:= `e`(v0) @signature `Lb/c;.e:()Z` @kind virtual;
  #L08fabc.  v1:= temp;
  #L08fabe.  if v1 != 0 then goto L08fa32;
  #L08fac2.  call temp:= `h`(v0) @signature `Lb/c;.h:()B` @kind virtual;
  #L08fac8.  v1:= temp;
  #L08faca.  v1:= v1 ^& 255;
  #L08face.  call temp:= `b`(v6, v5) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08fad4.  v3:= `@@a.r.d` @type ^`char`[] @kind object;
  #L08fad8.  v4:= v1 ^> 4;
  #L08fadc.  v4:= v4 ^& 15;
  #L08fae0.  v3:= v3[v4] @kind char;
  #L08fae4.  call temp:= `b`(v6, v3) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08faea.  v3:= `@@a.r.d` @type ^`char`[] @kind object;
  #L08faee.  v1:= v1 ^& 15;
  #L08faf2.  v1:= v3[v1] @kind char;
  #L08faf6.  call temp:= `b`(v6, v1) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08fafc.  goto L08fab6;
  #L08fafe.  call temp:= `a`(v6, v2) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L08fb04.  goto L08fa32;
  #L08fb06.  return @kind void;
}
procedure `void` `a`(`b.c` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08fb18.  v4:= -1I;
  #L08fb1a.  v0:= v7;
  #L08fb1c.  if v0 >= v8 then goto L08fba4;
  #L08fb20.  call temp:= `codePointAt`(v6, v0) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L08fb26.  v1:= temp;
  #L08fb28.  v2:= 37I;
  #L08fb2c.  if v1 != v2 then goto L08fb84;
  #L08fb30.  v2:= v0 + 2;
  #L08fb34.  if v2 >= v8 then goto L08fb84;
  #L08fb38.  v2:= v0 + 1;
  #L08fb3c.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08fb42.  v2:= temp;
  #L08fb44.  call temp:= `a`(v2) @signature `La/r;.a:(C)I` @kind static;
  #L08fb4a.  v2:= temp;
  #L08fb4c.  v3:= v0 + 2;
  #L08fb50.  call temp:= `charAt`(v6, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08fb56.  v3:= temp;
  #L08fb58.  call temp:= `a`(v3) @signature `La/r;.a:(C)I` @kind static;
  #L08fb5e.  v3:= temp;
  #L08fb60.  if v2 == v4 then goto L08fb9c;
  #L08fb64.  if v3 == v4 then goto L08fb9c;
  #L08fb68.  v2:= v2 ^< 4;
  #L08fb6c.  v2:= v2 + v3 @kind int;
  #L08fb6e.  call temp:= `b`(v5, v2) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08fb74.  v0:= v0 + 2;
  #L08fb78.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L08fb7e.  v1:= temp;
  #L08fb80.  v0:= v0 + v1 @kind int;
  #L08fb82.  goto L08fb1c;
  #L08fb84.  v2:= 43I;
  #L08fb88.  if v1 != v2 then goto L08fb9c;
  #L08fb8c.  if v9 == 0 then goto L08fb9c;
  #L08fb90.  v2:= 32I;
  #L08fb94.  call temp:= `b`(v5, v2) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08fb9a.  goto L08fb78;
  #L08fb9c.  call temp:= `a`(v5, v1) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L08fba2.  goto L08fb78;
  #L08fba4.  return @kind void;
}
procedure `void` `a`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `La/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08fbb8.  v0:= 0I;
  #L08fbba.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08fbc0.  v2:= temp;
  #L08fbc2.  v1:= v0;
  #L08fbc4.  if v1 >= v2 then goto L08fbec;
  #L08fbc8.  v0:= 47I;
  #L08fbcc.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08fbd2.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08fbd8.  v0:= temp @kind object;
  #L08fbda.  v0:= (`java.lang.String`) v0 @kind object;
  #L08fbde.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08fbe4.  v0:= v1 + 1;
  #L08fbe8.  v1:= v0;
  #L08fbea.  goto L08fbc4;
  #L08fbec.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r;.a:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08fc00.  v2:= -1I;
  #L08fc02.  v0:= v4 + 2;
  #L08fc06.  if v0 >= v5 then goto L08fc4e;
  #L08fc0a.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08fc10.  v0:= temp;
  #L08fc12.  v1:= 37I;
  #L08fc16.  if v0 != v1 then goto L08fc4e;
  #L08fc1a.  v0:= v4 + 1;
  #L08fc1e.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08fc24.  v0:= temp;
  #L08fc26.  call temp:= `a`(v0) @signature `La/r;.a:(C)I` @kind static;
  #L08fc2c.  v0:= temp;
  #L08fc2e.  if v0 == v2 then goto L08fc4e;
  #L08fc32.  v0:= v4 + 2;
  #L08fc36.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08fc3c.  v0:= temp;
  #L08fc3e.  call temp:= `a`(v0) @signature `La/r;.a:(C)I` @kind static;
  #L08fc44.  v0:= temp;
  #L08fc46.  if v0 == v2 then goto L08fc4e;
  #L08fc4a.  v0:= 1I;
  #L08fc4c.  return v0;
  #L08fc4e.  v0:= 0I;
  #L08fc50.  goto L08fc4c;
}
procedure `java.util.List` `b`(`java.lang.String` v5 @kind object) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08fc64.  v4:= -1I;
  #L08fc66.  v2:= new `java.util.ArrayList`;
  #L08fc6a.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L08fc70.  v0:= 0I;
  #L08fc72.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08fc78.  v1:= temp;
  #L08fc7a.  if v0 > v1 then goto L08fce8;
  #L08fc7e.  v1:= 38I;
  #L08fc82.  call temp:= `indexOf`(v5, v1, v0) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08fc88.  v1:= temp;
  #L08fc8a.  if v1 != v4 then goto L08fc96;
  #L08fc8e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08fc94.  v1:= temp;
  #L08fc96.  v3:= 61I;
  #L08fc9a.  call temp:= `indexOf`(v5, v3, v0) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08fca0.  v3:= temp;
  #L08fca2.  if v3 == v4 then goto L08fcaa;
  #L08fca6.  if v3 <= v1 then goto L08fcc6;
  #L08fcaa.  call temp:= `substring`(v5, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08fcb0.  v0:= temp @kind object;
  #L08fcb2.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08fcb8.  v0:= 0I;
  #L08fcba.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08fcc0.  v0:= v1 + 1;
  #L08fcc4.  goto L08fc72;
  #L08fcc6.  call temp:= `substring`(v5, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08fccc.  v0:= temp @kind object;
  #L08fcce.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08fcd4.  v0:= v3 + 1;
  #L08fcd8.  call temp:= `substring`(v5, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08fcde.  v0:= temp @kind object;
  #L08fce0.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08fce6.  goto L08fcc0;
  #L08fce8.  return v2 @kind object;
}
procedure `void` `b`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08fcfc.  v0:= 0I;
  #L08fcfe.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08fd04.  v3:= temp;
  #L08fd06.  v2:= v0;
  #L08fd08.  if v2 >= v3 then goto L08fd58;
  #L08fd0c.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08fd12.  v0:= temp @kind object;
  #L08fd14.  v0:= (`java.lang.String`) v0 @kind object;
  #L08fd18.  v1:= v2 + 1;
  #L08fd1c.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08fd22.  v1:= temp @kind object;
  #L08fd24.  v1:= (`java.lang.String`) v1 @kind object;
  #L08fd28.  if v2 <= 0 then goto L08fd36;
  #L08fd2c.  v4:= 38I;
  #L08fd30.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08fd36.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08fd3c.  if v1 == 0 then goto L08fd50;
  #L08fd40.  v0:= 61I;
  #L08fd44.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08fd4a.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08fd50.  v0:= v2 + 2;
  #L08fd54.  v2:= v0;
  #L08fd56.  goto L08fd08;
  #L08fd58.  return @kind void;
}
procedure `a.r` `e`(`java.lang.String` v4 @kind object) @signature `La/r;.e:(Ljava/lang/String;)La/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08fd6c.  v0:= 0I;
  #L08fd6e.  v1:= new `a.r$a`;
  #L08fd72.  call `<init>`(v1) @signature `La/r$a;.<init>:()V` @kind direct;
  #L08fd78.  call temp:= `a`(v1, v0, v4) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @kind virtual;
  #L08fd7e.  v2:= temp @kind object;
  #L08fd80.  v3:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L08fd84.  if v2 != v3 then goto L08fd90;
  #L08fd88.  call temp:= `c`(v1) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L08fd8e.  v0:= temp @kind object;
  #L08fd90.  return v0 @kind object;
}
procedure `java.net.URI` `a`(`a.r` v4 @kind this) @signature `La/r;.a:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08fda4.  call temp:= `n`(v4) @signature `La/r;.n:()La/r$a;` @kind virtual;
  #L08fdaa.  v0:= temp @kind object;
  #L08fdac.  call temp:= `b`(v0) @signature `La/r$a;.b:()La/r$a;` @kind virtual;
  #L08fdb2.  v0:= temp @kind object;
  #L08fdb4.  call temp:= `toString`(v0) @signature `La/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L08fdba.  v1:= temp @kind object;
  #Try_start0.  
  #L08fdbc.  v0:= new `java.net.URI`;
  #L08fdc0.  call `<init>`(v0, v1) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L08fdc6.  return v0 @kind object;
  #L08fdc8.  v0:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #Try_start1.  
  #L08fdca.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L08fdce.  v3:= "" @kind object;
  #L08fdd2.  call temp:= `replaceAll`(v1, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L08fdd8.  v1:= temp @kind object;
  #L08fdda.  call temp:= `create`(v1) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #Try_end1.  
  #L08fde0.  v0:= temp @kind object;
  #L08fde2.  goto L08fdc6;
  #L08fde4.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L08fde6.  v1:= new `java.lang.RuntimeException`;
  #L08fdea.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L08fdf0.  throw v1;
  catch `java.net.URISyntaxException` @[Try_start0..Try_end0] goto L08fdc8;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L08fde4;
}
procedure `java.lang.String` `b`(`a.r` v1 @kind this) @signature `La/r;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08fe20.  v0:= v1.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08fe24.  return v0 @kind object;
}
procedure `a.r` `c`(`a.r` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r;.c:(Ljava/lang/String;)La/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08fe38.  call temp:= `d`(v1, v2) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08fe3e.  v0:= temp @kind object;
  #L08fe40.  if v0 == 0 then goto L08fe4e;
  #L08fe44.  call temp:= `c`(v0) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L08fe4a.  v0:= temp @kind object;
  #L08fe4c.  return v0 @kind object;
  #L08fe4e.  v0:= 0I;
  #L08fe50.  goto L08fe4c;
}
procedure `boolean` `c`(`a.r` v2 @kind this) @signature `La/r;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08fe64.  v0:= v2.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08fe68.  v1:= "https" @kind object;
  #L08fe6c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08fe72.  v0:= temp;
  #L08fe74.  return v0;
}
procedure `a.r$a` `d`(`a.r` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08fe88.  v0:= new `a.r$a`;
  #L08fe8c.  call `<init>`(v0) @signature `La/r$a;.<init>:()V` @kind direct;
  #L08fe92.  call temp:= `a`(v0, v3, v4) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @kind virtual;
  #L08fe98.  v1:= temp @kind object;
  #L08fe9a.  v2:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L08fe9e.  if v1 != v2 then goto L08fea4;
  #L08fea2.  return v0 @kind object;
  #L08fea4.  v0:= 0I;
  #L08fea6.  goto L08fea2;
}
procedure `java.lang.String` `d`(`a.r` v4 @kind this) @signature `La/r;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08feb8.  v0:= v4.`a.r.e` @type ^`java.lang.String` @kind object;
  #L08febc.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08fec2.  v0:= temp;
  #L08fec4.  if v0 == 0 then goto L08fece;
  #L08fec8.  v0:= "" @kind object;
  #L08fecc.  return v0 @kind object;
  #L08fece.  v0:= v4.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08fed2.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08fed8.  v0:= temp;
  #L08feda.  v0:= v0 + 3;
  #L08fede.  v1:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08fee2.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08fee6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08feec.  v2:= temp;
  #L08feee.  v3:= ":@" @kind object;
  #L08fef2.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08fef8.  v1:= temp;
  #L08fefa.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08fefe.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08ff04.  v0:= temp @kind object;
  #L08ff06.  goto L08fecc;
}
procedure `java.lang.String` `e`(`a.r` v3 @kind this) @signature `La/r;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08ff18.  v0:= v3.`a.r.f` @type ^`java.lang.String` @kind object;
  #L08ff1c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08ff22.  v0:= temp;
  #L08ff24.  if v0 == 0 then goto L08ff2e;
  #L08ff28.  v0:= "" @kind object;
  #L08ff2c.  return v0 @kind object;
  #L08ff2e.  v0:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08ff32.  v1:= 58I;
  #L08ff36.  v2:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08ff3a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08ff40.  v2:= temp;
  #L08ff42.  v2:= v2 + 3;
  #L08ff46.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08ff4c.  v0:= temp;
  #L08ff4e.  v0:= v0 + 1;
  #L08ff52.  v1:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08ff56.  v2:= 64I;
  #L08ff5a.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08ff60.  v1:= temp;
  #L08ff62.  v2:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08ff66.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08ff6c.  v0:= temp @kind object;
  #L08ff6e.  goto L08ff2c;
}
procedure `boolean` `equals`(`a.r` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08ff80.  v0:= instanceof @variable v3 @type ^`a.r` @kind boolean;
  #L08ff84.  if v0 == 0 then goto L08ffa4;
  #L08ff88.  v3:= (`a.r`) v3 @kind object;
  #L08ff8c.  v0:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08ff90.  v1:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08ff94.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08ff9a.  v0:= temp;
  #L08ff9c.  if v0 == 0 then goto L08ffa4;
  #L08ffa0.  v0:= 1I;
  #L08ffa2.  return v0;
  #L08ffa4.  v0:= 0I;
  #L08ffa6.  goto L08ffa2;
}
procedure `java.lang.String` `f`(`a.r` v1 @kind this) @signature `La/r;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ffb8.  v0:= v1.`a.r.b` @type ^`java.lang.String` @kind object;
  #L08ffbc.  return v0 @kind object;
}
procedure `int` `g`(`a.r` v1 @kind this) @signature `La/r;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ffd0.  v0:= v1.`a.r.c` @type ^`int`;
  #L08ffd4.  return v0;
}
procedure `java.lang.String` `h`(`a.r` v4 @kind this) @signature `La/r;.h:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08ffe8.  v0:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08ffec.  v1:= 47I;
  #L08fff0.  v2:= v4.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08fff4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08fffa.  v2:= temp;
  #L08fffc.  v2:= v2 + 3;
  #L090000.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L090006.  v0:= temp;
  #L090008.  v1:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L09000c.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L090010.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L090016.  v2:= temp;
  #L090018.  v3:= "?#" @kind object;
  #L09001c.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L090022.  v1:= temp;
  #L090024.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L090028.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L09002e.  v0:= temp @kind object;
  #L090030.  return v0 @kind object;
}
procedure `int` `hashCode`(`a.r` v1 @kind this) @signature `La/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L090044.  v0:= v1.`a.r.j` @type ^`java.lang.String` @kind object;
  #L090048.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L09004e.  v0:= temp;
  #L090050.  return v0;
}
procedure `java.util.List` `i`(`a.r` v6 @kind this) @signature `La/r;.i:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L090064.  v5:= 47I;
  #L090068.  v0:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L09006c.  v1:= v6.`a.r.a` @type ^`java.lang.String` @kind object;
  #L090070.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L090076.  v1:= temp;
  #L090078.  v1:= v1 + 3;
  #L09007c.  call temp:= `indexOf`(v0, v5, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L090082.  v0:= temp;
  #L090084.  v1:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L090088.  v2:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L09008c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L090092.  v2:= temp;
  #L090094.  v3:= "?#" @kind object;
  #L090098.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L09009e.  v1:= temp;
  #L0900a0.  v2:= new `java.util.ArrayList`;
  #L0900a4.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0900aa.  if v0 >= v1 then goto L0900d2;
  #L0900ae.  v3:= v0 + 1;
  #L0900b2.  v0:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L0900b6.  call temp:= `a`(v0, v3, v1, v5) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L0900bc.  v0:= temp;
  #L0900be.  v4:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L0900c2.  call temp:= `substring`(v4, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0900c8.  v3:= temp @kind object;
  #L0900ca.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0900d0.  goto L0900aa;
  #L0900d2.  return v2 @kind object;
}
procedure `java.lang.String` `j`(`a.r` v5 @kind this) @signature `La/r;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0900e4.  v0:= v5.`a.r.h` @type ^`java.util.List` @kind object;
  #L0900e8.  if v0 != 0 then goto L0900f0;
  #L0900ec.  v0:= 0I;
  #L0900ee.  return v0 @kind object;
  #L0900f0.  v0:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L0900f4.  v1:= 63I;
  #L0900f8.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L0900fe.  v0:= temp;
  #L090100.  v0:= v0 + 1;
  #L090104.  v1:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L090108.  v2:= v0 + 1;
  #L09010c.  v3:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L090110.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L090116.  v3:= temp;
  #L090118.  v4:= 35I;
  #L09011c.  call temp:= `a`(v1, v2, v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L090122.  v1:= temp;
  #L090124.  v2:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L090128.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L09012e.  v0:= temp @kind object;
  #L090130.  goto L0900ee;
}
procedure `java.lang.String` `k`(`a.r` v2 @kind this) @signature `La/r;.k:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L090144.  v0:= v2.`a.r.h` @type ^`java.util.List` @kind object;
  #L090148.  if v0 != 0 then goto L090150;
  #L09014c.  v0:= 0I;
  #L09014e.  return v0 @kind object;
  #L090150.  v0:= new `java.lang.StringBuilder`;
  #L090154.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L09015a.  v1:= v2.`a.r.h` @type ^`java.util.List` @kind object;
  #L09015e.  call `b`(v0, v1) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L090164.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L09016a.  v0:= temp @kind object;
  #L09016c.  goto L09014e;
}
procedure `java.lang.String` `l`(`a.r` v2 @kind this) @signature `La/r;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L090180.  v0:= v2.`a.r.i` @type ^`java.lang.String` @kind object;
  #L090184.  if v0 != 0 then goto L09018c;
  #L090188.  v0:= 0I;
  #L09018a.  return v0 @kind object;
  #L09018c.  v0:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L090190.  v1:= 35I;
  #L090194.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L09019a.  v0:= temp;
  #L09019c.  v0:= v0 + 1;
  #L0901a0.  v1:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L0901a4.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0901aa.  v0:= temp @kind object;
  #L0901ac.  goto L09018a;
}
procedure `java.lang.String` `m`(`a.r` v2 @kind this) @signature `La/r;.m:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0901c0.  v0:= "/..." @kind object;
  #L0901c4.  call temp:= `d`(v2, v0) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L0901ca.  v0:= temp @kind object;
  #L0901cc.  v1:= "" @kind object;
  #L0901d0.  call temp:= `b`(v0, v1) @signature `La/r$a;.b:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L0901d6.  v0:= temp @kind object;
  #L0901d8.  v1:= "" @kind object;
  #L0901dc.  call temp:= `c`(v0, v1) @signature `La/r$a;.c:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L0901e2.  v0:= temp @kind object;
  #L0901e4.  call temp:= `c`(v0) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L0901ea.  v0:= temp @kind object;
  #L0901ec.  call temp:= `toString`(v0) @signature `La/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L0901f2.  v0:= temp @kind object;
  #L0901f4.  return v0 @kind object;
}
procedure `a.r$a` `n`(`a.r` v3 @kind this) @signature `La/r;.n:()La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L090208.  v1:= new `a.r$a`;
  #L09020c.  call `<init>`(v1) @signature `La/r$a;.<init>:()V` @kind direct;
  #L090212.  v0:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L090216.  v1.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L09021a.  call temp:= `d`(v3) @signature `La/r;.d:()Ljava/lang/String;` @kind virtual;
  #L090220.  v0:= temp @kind object;
  #L090222.  v1.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L090226.  call temp:= `e`(v3) @signature `La/r;.e:()Ljava/lang/String;` @kind virtual;
  #L09022c.  v0:= temp @kind object;
  #L09022e.  v1.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L090232.  v0:= v3.`a.r.b` @type ^`java.lang.String` @kind object;
  #L090236.  v1.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L09023a.  v0:= v3.`a.r.c` @type ^`int`;
  #L09023e.  v2:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L090242.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L090248.  v2:= temp;
  #L09024a.  if v0 == v2 then goto L09028e;
  #L09024e.  v0:= v3.`a.r.c` @type ^`int`;
  #L090252.  v1.`a.r$a.e` @type ^`int` := v0;
  #L090256.  v0:= v1.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L09025a.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L090260.  v0:= v1.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L090264.  call temp:= `i`(v3) @signature `La/r;.i:()Ljava/util/List;` @kind virtual;
  #L09026a.  v2:= temp @kind object;
  #L09026c.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L090272.  call temp:= `j`(v3) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L090278.  v0:= temp @kind object;
  #L09027a.  call temp:= `e`(v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L090280.  call temp:= `l`(v3) @signature `La/r;.l:()Ljava/lang/String;` @kind virtual;
  #L090286.  v0:= temp @kind object;
  #L090288.  v1.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L09028c.  return v1 @kind object;
  #L09028e.  v0:= -1I;
  #L090290.  goto L090252;
}
procedure `java.lang.String` `toString`(`a.r` v1 @kind this) @signature `La/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0902a4.  v0:= v1.`a.r.j` @type ^`java.lang.String` @kind object;
  #L0902a8.  return v0 @kind object;
}

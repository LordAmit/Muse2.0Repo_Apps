record `a.t` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.t.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.t.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.t.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.t.f` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@a.t.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@a.t.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0902bc.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L0902c0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L0902c6.  v0:= temp @kind object;
  #L0902c8.  `@@a.t.a` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L0902cc.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L0902d0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L0902d6.  v0:= temp @kind object;
  #L0902d8.  `@@a.t.b` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L0902dc.  return @kind void;
}
procedure `void` `<init>`(`a.t` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/t;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0902f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0902f6.  v0.`a.t.c` @type ^`java.lang.String` := v1 @kind object;
  #L0902fa.  v0.`a.t.d` @type ^`java.lang.String` := v2 @kind object;
  #L0902fe.  v0.`a.t.e` @type ^`java.lang.String` := v3 @kind object;
  #L090302.  v0.`a.t.f` @type ^`java.lang.String` := v4 @kind object;
  #L090306.  return @kind void;
}
procedure `a.t` `a`(`java.lang.String` v9 @kind object) @signature `La/t;.a:(Ljava/lang/String;)La/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L090318.  v2:= 0I;
  #L09031a.  v8:= 2I;
  #L09031c.  v7:= 1I;
  #L09031e.  v0:= `@@a.t.a` @type ^`java.util.regex.Pattern` @kind object;
  #L090322.  call temp:= `matcher`(v0, v9) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L090328.  v0:= temp @kind object;
  #L09032a.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L090330.  v1:= temp;
  #L090332.  if v1 != 0 then goto L090338;
  #L090336.  return v2 @kind object;
  #L090338.  call temp:= `group`(v0, v7) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L09033e.  v1:= temp @kind object;
  #L090340.  v3:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L090344.  call temp:= `toLowerCase`(v1, v3) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L09034a.  v3:= temp @kind object;
  #L09034c.  call temp:= `group`(v0, v8) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L090352.  v1:= temp @kind object;
  #L090354.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L090358.  call temp:= `toLowerCase`(v1, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L09035e.  v4:= temp @kind object;
  #L090360.  v1:= `@@a.t.b` @type ^`java.util.regex.Pattern` @kind object;
  #L090364.  call temp:= `matcher`(v1, v9) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L09036a.  v5:= temp @kind object;
  #L09036c.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L090372.  v0:= temp;
  #L090374.  v1:= v0;
  #L090376.  v0:= v2 @kind object;
  #L090378.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L09037e.  v6:= temp;
  #L090380.  if v1 >= v6 then goto L090462;
  #L090384.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L09038a.  v6:= temp;
  #L09038c.  call temp:= `region`(v5, v1, v6) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L090392.  call temp:= `lookingAt`(v5) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L090398.  v1:= temp;
  #L09039a.  if v1 == 0 then goto L090336;
  #L09039e.  call temp:= `group`(v5, v7) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L0903a4.  v1:= temp @kind object;
  #L0903a6.  if v1 == 0 then goto L0903ba;
  #L0903aa.  v6:= "charset" @kind object;
  #L0903ae.  call temp:= `equalsIgnoreCase`(v1, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0903b4.  v1:= temp;
  #L0903b6.  if v1 != 0 then goto L0903c4;
  #L0903ba.  call temp:= `end`(v5) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L0903c0.  v1:= temp;
  #L0903c2.  goto L090378;
  #L0903c4.  call temp:= `group`(v5, v8) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L0903ca.  v1:= temp @kind object;
  #L0903cc.  if v1 == 0 then goto L090452;
  #L0903d0.  v6:= "'" @kind object;
  #L0903d4.  call temp:= `startsWith`(v1, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0903da.  v6:= temp;
  #L0903dc.  if v6 == 0 then goto L090410;
  #L0903e0.  v6:= "'" @kind object;
  #L0903e4.  call temp:= `endsWith`(v1, v6) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0903ea.  v6:= temp;
  #L0903ec.  if v6 == 0 then goto L090410;
  #L0903f0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0903f6.  v6:= temp;
  #L0903f8.  if v6 <= v8 then goto L090410;
  #L0903fc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L090402.  v6:= temp;
  #L090404.  v6:= v6 + -1;
  #L090408.  call temp:= `substring`(v1, v7, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L09040e.  v1:= temp @kind object;
  #L090410.  if v0 == 0 then goto L09045e;
  #L090414.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L09041a.  v0:= temp;
  #L09041c.  if v0 != 0 then goto L09045e;
  #L090420.  v0:= new `java.lang.IllegalArgumentException`;
  #L090424.  v1:= new `java.lang.StringBuilder`;
  #L090428.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L09042e.  v2:= "Multiple different charsets: " @kind object;
  #L090432.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L090438.  v1:= temp @kind object;
  #L09043a.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L090440.  v1:= temp @kind object;
  #L090442.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L090448.  v1:= temp @kind object;
  #L09044a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L090450.  throw v0;
  #L090452.  v1:= 3I;
  #L090454.  call temp:= `group`(v5, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L09045a.  v1:= temp @kind object;
  #L09045c.  goto L090410;
  #L09045e.  v0:= v1 @kind object;
  #L090460.  goto L0903ba;
  #L090462.  v2:= new `a.t`;
  #L090466.  call `<init>`(v2, v9, v3, v4, v0) @signature `La/t;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L09046c.  goto L090336;
}
procedure `java.nio.charset.Charset` `a`(`a.t` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `La/t;.a:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L090480.  v0:= v1.`a.t.f` @type ^`java.lang.String` @kind object;
  #L090484.  if v0 == 0 then goto L090494;
  #L090488.  v0:= v1.`a.t.f` @type ^`java.lang.String` @kind object;
  #L09048c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L090492.  v2:= temp @kind object;
  #L090494.  return v2 @kind object;
}
procedure `boolean` `equals`(`a.t` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/t;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0904a8.  v0:= instanceof @variable v3 @type ^`a.t` @kind boolean;
  #L0904ac.  if v0 == 0 then goto L0904cc;
  #L0904b0.  v3:= (`a.t`) v3 @kind object;
  #L0904b4.  v0:= v3.`a.t.c` @type ^`java.lang.String` @kind object;
  #L0904b8.  v1:= v2.`a.t.c` @type ^`java.lang.String` @kind object;
  #L0904bc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0904c2.  v0:= temp;
  #L0904c4.  if v0 == 0 then goto L0904cc;
  #L0904c8.  v0:= 1I;
  #L0904ca.  return v0;
  #L0904cc.  v0:= 0I;
  #L0904ce.  goto L0904ca;
}
procedure `int` `hashCode`(`a.t` v1 @kind this) @signature `La/t;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0904e0.  v0:= v1.`a.t.c` @type ^`java.lang.String` @kind object;
  #L0904e4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L0904ea.  v0:= temp;
  #L0904ec.  return v0;
}
procedure `java.lang.String` `toString`(`a.t` v1 @kind this) @signature `La/t;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L090500.  v0:= v1.`a.t.c` @type ^`java.lang.String` @kind object;
  #L090504.  return v0 @kind object;
}

record `fr.castorflex.android.smoothprogressbar.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `android.graphics.drawable.Drawable` `a`(`int`[] v2 @kind object, `float` v3 ) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:([IF)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L17c800.  if v2 == 0 then goto L17c80a;
  #L17c804.  v0:= length @variable v2;
  #L17c806.  if v0 != 0 then goto L17c80e;
  #L17c80a.  v0:= 0I;
  #L17c80c.  return v0 @kind object;
  #L17c80e.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L17c812.  v1:= new `fr.castorflex.android.smoothprogressbar.a`;
  #L17c816.  call `<init>`(v1, v3, v2) @signature `Lfr/castorflex/android/smoothprogressbar/a;.<init>:(F[I)V` @kind direct;
  #L17c81c.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L17c822.  goto L17c80c;
}
procedure `void` `a`(`float` v2 ) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(F)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L17c834.  v0:= 0I;
  #L17c836.  v0:= fcmpg(v2, v0);
  #L17c83a.  if v0 > 0 then goto L17c84e;
  #L17c83e.  v0:= new `java.lang.IllegalArgumentException`;
  #L17c842.  v1:= "Speed must be >= 0" @kind object;
  #L17c846.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17c84c.  throw v0;
  #L17c84e.  return @kind void;
}
procedure `void` `a`(`float` v5 , `java.lang.String` v6 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(FLjava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17c860.  v0:= 0I;
  #L17c862.  v0:= fcmpg(v5, v0);
  #L17c866.  if v0 >= 0 then goto L17c89c;
  #L17c86a.  v0:= new `java.lang.IllegalArgumentException`;
  #L17c86e.  v1:= "%s %d must be positive" @kind object;
  #L17c872.  v2:= 2I;
  #L17c874.  v2:= new `java.lang.Object`[v2];
  #L17c878.  v3:= 0I;
  #L17c87a.  v2[v3]:= v6 @kind object;
  #L17c87e.  v3:= 1I;
  #L17c880.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L17c886.  v4:= temp @kind object;
  #L17c888.  v2[v3]:= v4 @kind object;
  #L17c88c.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L17c892.  v1:= temp @kind object;
  #L17c894.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17c89a.  throw v0;
  #L17c89c.  return @kind void;
}
procedure `void` `a`(`int` v4 , `java.lang.String` v5 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(ILjava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17c8b0.  if v4 > 0 then goto L17c8d8;
  #L17c8b4.  v0:= new `java.lang.IllegalArgumentException`;
  #L17c8b8.  v1:= "%s must not be null" @kind object;
  #L17c8bc.  v2:= 1I;
  #L17c8be.  v2:= new `java.lang.Object`[v2];
  #L17c8c2.  v3:= 0I;
  #L17c8c4.  v2[v3]:= v5 @kind object;
  #L17c8c8.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L17c8ce.  v1:= temp @kind object;
  #L17c8d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17c8d6.  throw v0;
  #L17c8d8.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17c8ec.  if v4 != 0 then goto L17c914;
  #L17c8f0.  v0:= new `java.lang.IllegalArgumentException`;
  #L17c8f4.  v1:= "%s must be not null" @kind object;
  #L17c8f8.  v2:= 1I;
  #L17c8fa.  v2:= new `java.lang.Object`[v2];
  #L17c8fe.  v3:= 0I;
  #L17c900.  v2[v3]:= v5 @kind object;
  #L17c904.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L17c90a.  v1:= temp @kind object;
  #L17c90c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17c912.  throw v0;
  #L17c914.  return @kind void;
}
procedure `void` `a`(`int`[] v2 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:([I)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L17c928.  if v2 == 0 then goto L17c932;
  #L17c92c.  v0:= length @variable v2;
  #L17c92e.  if v0 != 0 then goto L17c942;
  #L17c932.  v0:= new `java.lang.IllegalArgumentException`;
  #L17c936.  v1:= "You must provide at least 1 color" @kind object;
  #L17c93a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17c940.  throw v0;
  #L17c942.  return @kind void;
}

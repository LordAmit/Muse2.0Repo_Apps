record `com.a.a.b.a` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.a.a.b.a.a` @AccessFlag ;
}
global `boolean` `@@com.a.a.b.a.b` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `byte`[] `@@com.a.a.b.a.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@com.a.a.b.a.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@com.a.a.b.a.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@com.a.a.b.a.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/a/a/b/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L124284.  v2:= 128I;
  #L124288.  v1:= 64I;
  #L12428c.  v0:= constclass @type ^`com.a.a.b.a` @kind object;
  #L124290.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L124296.  v0:= temp;
  #L124298.  if v0 != 0 then goto L1242dc;
  #L12429c.  v0:= 1I;
  #L12429e.  `@@com.a.a.b.a.b` @type ^`boolean` := v0 @kind boolean;
  #L1242a2.  v0:= new `byte`[v1];
  #L1242a6.  goto L1242e0;
  #L1242ac.  `@@com.a.a.b.a.c` @type ^`byte`[] := v0 @kind object;
  #L1242b0.  v0:= new `byte`[v1];
  #L1242b4.  goto L124328;
  #L1242ba.  `@@com.a.a.b.a.d` @type ^`byte`[] := v0 @kind object;
  #L1242be.  v0:= new `byte`[v2];
  #L1242c2.  goto L124370;
  #L1242c8.  `@@com.a.a.b.a.e` @type ^`byte`[] := v0 @kind object;
  #L1242cc.  v0:= new `byte`[v2];
  #L1242d0.  goto L1243f8;
  #L1242d6.  `@@com.a.a.b.a.f` @type ^`byte`[] := v0 @kind object;
  #L1242da.  return @kind void;
  #L1242dc.  v0:= 0I;
  #L1242de.  goto L12429e;
  #L1242e0.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L124327.  goto L1242ac;
  #L124328.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L12436f.  goto L1242ba;
  #L124370.  v0:= (-9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -5I, -5I, -9I, -9I, -5I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -5I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, 62I, -9I, -9I, -9I, 63I, 52I, 53I, 54I, 55I, 56I, 57I, 58I, 59I, 60I, 61I, -9I, -9I, -9I, -1I, -9I, -9I, -9I, 0I, 1I, 2I, 3I, 4I, 5I, 6I, 7I, 8I, 9I, 10I, 11I, 12I, 13I, 14I, 15I, 16I, 17I, 18I, 19I, 20I, 21I, 22I, 23I, 24I, 25I, -9I, -9I, -9I, -9I, -9I, -9I, 26I, 27I, 28I, 29I, 30I, 31I, 32I, 33I, 34I, 35I, 36I, 37I, 38I, 39I, 40I, 41I, 42I, 43I, 44I, 45I, 46I, 47I, 48I, 49I, 50I, 51I, -9I, -9I, -9I, -9I, -9I) @kind object;
  #L1243f7.  goto L1242c8;
  #L1243f8.  v0:= (-9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -5I, -5I, -9I, -9I, -5I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -5I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, -9I, 62I, -9I, -9I, 52I, 53I, 54I, 55I, 56I, 57I, 58I, 59I, 60I, 61I, -9I, -9I, -9I, -1I, -9I, -9I, -9I, 0I, 1I, 2I, 3I, 4I, 5I, 6I, 7I, 8I, 9I, 10I, 11I, 12I, 13I, 14I, 15I, 16I, 17I, 18I, 19I, 20I, 21I, 22I, 23I, 24I, 25I, -9I, -9I, -9I, -9I, 63I, -9I, 26I, 27I, 28I, 29I, 30I, 31I, 32I, 33I, 34I, 35I, 36I, 37I, 38I, 39I, 40I, 41I, 42I, 43I, 44I, 45I, 46I, 47I, 48I, 49I, 50I, 51I, -9I, -9I, -9I, -9I, -9I) @kind object;
  #L12447f.  goto L1242d6;
}
procedure `void` `<init>`(`com.a.a.b.a` v2 @kind this) @signature `Lcom/a/a/b/a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L124490.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L124496.  v0:= "" @kind object;
  #L12449a.  v2.`com.a.a.b.a.a` @type ^`java.lang.String` := v0 @kind object;
  #L12449e.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L1244a4.  v0:= temp @kind object;
  #L1244a6.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L1244ac.  v0:= temp @kind object;
  #L1244ae.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L1244b4.  v0:= temp @kind object;
  #L1244b6.  v2.`com.a.a.b.a.a` @type ^`java.lang.String` := v0 @kind object;
  #L1244ba.  v0:= "leak-541-0" @kind object;
  #L1244be.  v1:= v2.`com.a.a.b.a.a` @type ^`java.lang.String` @kind object;
  #L1244c2.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1244c8.  return @kind void;
}
procedure `int` `a`(`byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object) @signature `Lcom/a/a/b/a;.a:([BI[BI[B)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1244dc.  v1:= 61I;
  #L1244e0.  v0:= v4 + 2;
  #L1244e4.  v0:= v3[v0] @kind byte;
  #L1244e8.  if v0 != v1 then goto L124520;
  #L1244ec.  v0:= v3[v4] @kind byte;
  #L1244f0.  v0:= v7[v0] @kind byte;
  #L1244f4.  v0:= v0 ^< 24;
  #L1244f8.  v0:= v0 ^>> 6;
  #L1244fc.  v1:= v4 + 1;
  #L124500.  v1:= v3[v1] @kind byte;
  #L124504.  v1:= v7[v1] @kind byte;
  #L124508.  v1:= v1 ^< 24;
  #L12450c.  v1:= v1 ^>> 12;
  #L124510.  v0:= v0 ^| v1 @kind int;
  #L124512.  v0:= v0 ^>> 16;
  #L124516.  v0:= (`byte`) v0 @kind i2b;
  #L124518.  v5[v6]:= v0 @kind byte;
  #L12451c.  v0:= 1I;
  #L12451e.  return v0;
  #L124520.  v0:= v4 + 3;
  #L124524.  v0:= v3[v0] @kind byte;
  #L124528.  if v0 != v1 then goto L124584;
  #L12452c.  v0:= v3[v4] @kind byte;
  #L124530.  v0:= v7[v0] @kind byte;
  #L124534.  v0:= v0 ^< 24;
  #L124538.  v0:= v0 ^>> 6;
  #L12453c.  v1:= v4 + 1;
  #L124540.  v1:= v3[v1] @kind byte;
  #L124544.  v1:= v7[v1] @kind byte;
  #L124548.  v1:= v1 ^< 24;
  #L12454c.  v1:= v1 ^>> 12;
  #L124550.  v0:= v0 ^| v1 @kind int;
  #L124552.  v1:= v4 + 2;
  #L124556.  v1:= v3[v1] @kind byte;
  #L12455a.  v1:= v7[v1] @kind byte;
  #L12455e.  v1:= v1 ^< 24;
  #L124562.  v1:= v1 ^>> 18;
  #L124566.  v0:= v0 ^| v1 @kind int;
  #L124568.  v1:= v0 ^>> 16;
  #L12456c.  v1:= (`byte`) v1 @kind i2b;
  #L12456e.  v5[v6]:= v1 @kind byte;
  #L124572.  v1:= v6 + 1;
  #L124576.  v0:= v0 ^>> 8;
  #L12457a.  v0:= (`byte`) v0 @kind i2b;
  #L12457c.  v5[v1]:= v0 @kind byte;
  #L124580.  v0:= 2I;
  #L124582.  goto L12451e;
  #L124584.  v0:= v3[v4] @kind byte;
  #L124588.  v0:= v7[v0] @kind byte;
  #L12458c.  v0:= v0 ^< 24;
  #L124590.  v0:= v0 ^>> 6;
  #L124594.  v1:= v4 + 1;
  #L124598.  v1:= v3[v1] @kind byte;
  #L12459c.  v1:= v7[v1] @kind byte;
  #L1245a0.  v1:= v1 ^< 24;
  #L1245a4.  v1:= v1 ^>> 12;
  #L1245a8.  v0:= v0 ^| v1 @kind int;
  #L1245aa.  v1:= v4 + 2;
  #L1245ae.  v1:= v3[v1] @kind byte;
  #L1245b2.  v1:= v7[v1] @kind byte;
  #L1245b6.  v1:= v1 ^< 24;
  #L1245ba.  v1:= v1 ^>> 18;
  #L1245be.  v0:= v0 ^| v1 @kind int;
  #L1245c0.  v1:= v4 + 3;
  #L1245c4.  v1:= v3[v1] @kind byte;
  #L1245c8.  v1:= v7[v1] @kind byte;
  #L1245cc.  v1:= v1 ^< 24;
  #L1245d0.  v1:= v1 ^>> 24;
  #L1245d4.  v0:= v0 ^| v1 @kind int;
  #L1245d6.  v1:= v0 ^> 16;
  #L1245da.  v1:= (`byte`) v1 @kind i2b;
  #L1245dc.  v5[v6]:= v1 @kind byte;
  #L1245e0.  v1:= v6 + 1;
  #L1245e4.  v2:= v0 ^> 8;
  #L1245e8.  v2:= (`byte`) v2 @kind i2b;
  #L1245ea.  v5[v1]:= v2 @kind byte;
  #L1245ee.  v1:= v6 + 2;
  #L1245f2.  v0:= (`byte`) v0 @kind i2b;
  #L1245f4.  v5[v1]:= v0 @kind byte;
  #L1245f8.  v0:= 3I;
  #L1245fa.  goto L12451e;
}
procedure `byte`[] `a`(`java.lang.String` v3 @kind object) @signature `Lcom/a/a/b/a;.a:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L12460c.  call temp:= `getBytes`(v3) @signature `Ljava/lang/String;.getBytes:()[B` @kind virtual;
  #L124612.  v0:= temp @kind object;
  #L124614.  v1:= 0I;
  #L124616.  v2:= length @variable v0;
  #L124618.  call temp:= `a`(v0, v1, v2) @signature `Lcom/a/a/b/a;.a:([BII)[B` @kind static;
  #L12461e.  v0:= temp @kind object;
  #L124620.  return v0 @kind object;
}
procedure `byte`[] `a`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/a/a/b/a;.a:([BII)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L124634.  v0:= `@@com.a.a.b.a.e` @type ^`byte`[] @kind object;
  #L124638.  call temp:= `a`(v1, v2, v3, v0) @signature `Lcom/a/a/b/a;.a:([BII[B)[B` @kind static;
  #L12463e.  v0:= temp @kind object;
  #L124640.  return v0 @kind object;
}
procedure `byte`[] `a`(`byte`[] v12 @kind object, `int` v13 , `int` v14 , `byte`[] v15 @kind object) @signature `Lcom/a/a/b/a;.a:([BII[B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L124654.  v11:= 61I;
  #L124658.  v10:= 4I;
  #L12465a.  v9:= 1I;
  #L12465c.  v1:= 0I;
  #L12465e.  v0:= v14 * 3;
  #L124662.  v0:= v0 / 4;
  #L124666.  v0:= v0 + 2;
  #L12466a.  v5:= new `byte`[v0];
  #L12466e.  v6:= new `byte`[v10];
  #L124672.  v4:= v1;
  #L124674.  v2:= v1;
  #L124676.  v3:= v1;
  #L124678.  if v4 >= v14 then goto L1247ce;
  #L12467c.  v0:= v4 + v13 @kind int;
  #L124680.  v0:= v12[v0] @kind byte;
  #L124684.  v0:= v0 ^& 127;
  #L124688.  v7:= (`byte`) v0 @kind i2b;
  #L12468a.  v0:= v15[v7] @kind byte;
  #L12468e.  v8:= -5I;
  #L124690.  if v0 < v8 then goto L124774;
  #L124694.  v8:= -1I;
  #L124696.  if v0 < v8 then goto L12482e;
  #L12469a.  if v7 != v11 then goto L12474e;
  #L12469e.  v0:= v14 - v4 @kind int;
  #L1246a2.  v7:= v14 + -1;
  #L1246a6.  v7:= v7 + v13 @kind int;
  #L1246a8.  v7:= v12[v7] @kind byte;
  #L1246ac.  v7:= v7 ^& 127;
  #L1246b0.  v7:= (`byte`) v7 @kind i2b;
  #L1246b2.  if v2 == 0 then goto L1246ba;
  #L1246b6.  if v2 != v9 then goto L1246ec;
  #L1246ba.  v0:= new `com.a.a.b.b`;
  #L1246be.  v1:= new `java.lang.StringBuilder`;
  #L1246c2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1246c8.  v2:= "invalid padding byte '=' at byte offset " @kind object;
  #L1246cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1246d2.  v1:= temp @kind object;
  #L1246d4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1246da.  v1:= temp @kind object;
  #L1246dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1246e2.  v1:= temp @kind object;
  #L1246e4.  call `<init>`(v0, v1) @signature `Lcom/a/a/b/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1246ea.  throw v0;
  #L1246ec.  v8:= 3I;
  #L1246ee.  if v2 != v8 then goto L1246f8;
  #L1246f2.  v8:= 2I;
  #L1246f4.  if v0 > v8 then goto L124700;
  #L1246f8.  if v2 != v10 then goto L124732;
  #L1246fc.  if v0 <= v9 then goto L124732;
  #L124700.  v0:= new `com.a.a.b.b`;
  #L124704.  v1:= new `java.lang.StringBuilder`;
  #L124708.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12470e.  v2:= "padding byte '=' falsely signals end of encoded value at offset " @kind object;
  #L124712.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L124718.  v1:= temp @kind object;
  #L12471a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L124720.  v1:= temp @kind object;
  #L124722.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L124728.  v1:= temp @kind object;
  #L12472a.  call `<init>`(v0, v1) @signature `Lcom/a/a/b/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L124730.  throw v0;
  #L124732.  if v7 == v11 then goto L1247ce;
  #L124736.  v0:= 10I;
  #L12473a.  if v7 == v0 then goto L1247ce;
  #L12473e.  v0:= new `com.a.a.b.b`;
  #L124742.  v1:= "encoded value has invalid trailing byte" @kind object;
  #L124746.  call `<init>`(v0, v1) @signature `Lcom/a/a/b/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12474c.  throw v0;
  #L12474e.  v0:= v2 + 1;
  #L124752.  v6[v2]:= v7 @kind byte;
  #L124756.  if v0 != v10 then goto L12482a;
  #L12475a.  call temp:= `a`(v6, v1, v5, v3, v15) @signature `Lcom/a/a/b/a;.a:([BI[BI[B)I` @kind static;
  #L124760.  v0:= temp;
  #L124762.  v0:= v0 + v3 @kind int;
  #L124764.  v2:= v0;
  #L124766.  v0:= v1;
  #L124768.  v3:= v4 + 1;
  #L12476c.  v4:= v3;
  #L12476e.  v3:= v2;
  #L124770.  v2:= v0;
  #L124772.  goto L124678;
  #L124774.  v0:= new `com.a.a.b.b`;
  #L124778.  v1:= new `java.lang.StringBuilder`;
  #L12477c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L124782.  v2:= "Bad Base64 input character at " @kind object;
  #L124786.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12478c.  v1:= temp @kind object;
  #L12478e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L124794.  v1:= temp @kind object;
  #L124796.  v2:= ": " @kind object;
  #L12479a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1247a0.  v1:= temp @kind object;
  #L1247a2.  v2:= v4 + v13 @kind int;
  #L1247a6.  v2:= v12[v2] @kind byte;
  #L1247aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1247b0.  v1:= temp @kind object;
  #L1247b2.  v2:= "(decimal)" @kind object;
  #L1247b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1247bc.  v1:= temp @kind object;
  #L1247be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1247c4.  v1:= temp @kind object;
  #L1247c6.  call `<init>`(v0, v1) @signature `Lcom/a/a/b/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1247cc.  throw v0;
  #L1247ce.  if v2 == 0 then goto L12481e;
  #L1247d2.  if v2 != v9 then goto L12480c;
  #L1247d6.  v0:= new `com.a.a.b.b`;
  #L1247da.  v1:= new `java.lang.StringBuilder`;
  #L1247de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1247e4.  v2:= "single trailing character at offset " @kind object;
  #L1247e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1247ee.  v1:= temp @kind object;
  #L1247f0.  v2:= v14 + -1;
  #L1247f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1247fa.  v1:= temp @kind object;
  #L1247fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L124802.  v1:= temp @kind object;
  #L124804.  call `<init>`(v0, v1) @signature `Lcom/a/a/b/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12480a.  throw v0;
  #L12480c.  v0:= v2 + 1;
  #L124810.  v6[v2]:= v11 @kind byte;
  #L124814.  call temp:= `a`(v6, v1, v5, v3, v15) @signature `Lcom/a/a/b/a;.a:([BI[BI[B)I` @kind static;
  #L12481a.  v0:= temp;
  #L12481c.  v3:= v3 + v0 @kind int;
  #L12481e.  v0:= new `byte`[v3];
  #L124822.  call `arraycopy`(v5, v1, v0, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L124828.  return v0 @kind object;
  #L12482a.  v2:= v3;
  #L12482c.  goto L124768;
  #L12482e.  v0:= v2;
  #L124830.  v2:= v3;
  #L124832.  goto L124768;
}

record `com.j256.ormlite.android.AndroidConnectionSource` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.BaseConnectionSource` @kind class, `com.j256.ormlite.support.ConnectionSource` @kind interface {
  `boolean` `com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @AccessFlag PRIVATE;
  `com.j256.ormlite.support.DatabaseConnection` `com.j256.ormlite.android.AndroidConnectionSource.connection` @AccessFlag PRIVATE;
  `com.j256.ormlite.db.DatabaseType` `com.j256.ormlite.android.AndroidConnectionSource.databaseType` @AccessFlag PRIVATE_FINAL;
  `android.database.sqlite.SQLiteOpenHelper` `com.j256.ormlite.android.AndroidConnectionSource.helper` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.j256.ormlite.android.AndroidConnectionSource.isOpen` @AccessFlag PRIVATE_VOLATILE;
  `android.database.sqlite.SQLiteDatabase` `com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @AccessFlag PRIVATE_FINAL;
}
global `com.j256.ormlite.support.DatabaseConnectionProxyFactory` `@@com.j256.ormlite.android.AndroidConnectionSource.connectionProxyFactory` @AccessFlag PRIVATE_STATIC;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15b4bc.  v0:= constclass @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L15b4c0.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L15b4c6.  v0:= temp @kind object;
  #L15b4c8.  `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L15b4cc.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidConnectionSource` v2 @kind this, `android.database.sqlite.SQLiteDatabase` v3 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15b4e0.  v1:= 0I;
  #L15b4e2.  call `<init>`(v2) @signature `Lcom/j256/ormlite/support/BaseConnectionSource;.<init>:()V` @kind direct;
  #L15b4e8.  v2.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L15b4ec.  v0:= 1I;
  #L15b4ee.  v2.`com.j256.ormlite.android.AndroidConnectionSource.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L15b4f2.  v0:= new `com.j256.ormlite.db.SqliteAndroidDatabaseType`;
  #L15b4f6.  call `<init>`(v0) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.<init>:()V` @kind direct;
  #L15b4fc.  v2.`com.j256.ormlite.android.AndroidConnectionSource.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` := v0 @kind object;
  #L15b500.  v0:= 0I;
  #L15b502.  v2.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` := v0 @kind boolean;
  #L15b506.  v2.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` := v1 @kind object;
  #L15b50a.  v2.`com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @type ^`android.database.sqlite.SQLiteDatabase` := v3 @kind object;
  #L15b50e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidConnectionSource` v2 @kind this, `android.database.sqlite.SQLiteOpenHelper` v3 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteOpenHelper;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15b520.  v1:= 0I;
  #L15b522.  call `<init>`(v2) @signature `Lcom/j256/ormlite/support/BaseConnectionSource;.<init>:()V` @kind direct;
  #L15b528.  v2.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L15b52c.  v0:= 1I;
  #L15b52e.  v2.`com.j256.ormlite.android.AndroidConnectionSource.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L15b532.  v0:= new `com.j256.ormlite.db.SqliteAndroidDatabaseType`;
  #L15b536.  call `<init>`(v0) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.<init>:()V` @kind direct;
  #L15b53c.  v2.`com.j256.ormlite.android.AndroidConnectionSource.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` := v0 @kind object;
  #L15b540.  v0:= 0I;
  #L15b542.  v2.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` := v0 @kind boolean;
  #L15b546.  v2.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` := v3 @kind object;
  #L15b54a.  v2.`com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @type ^`android.database.sqlite.SQLiteDatabase` := v1 @kind object;
  #L15b54e.  return @kind void;
}
procedure `void` `setDatabaseConnectionProxyFactory`(`com.j256.ormlite.support.DatabaseConnectionProxyFactory` v0 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.setDatabaseConnectionProxyFactory:(Lcom/j256/ormlite/support/DatabaseConnectionProxyFactory;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15b560.  `@@com.j256.ormlite.android.AndroidConnectionSource.connectionProxyFactory` @type ^`com.j256.ormlite.support.DatabaseConnectionProxyFactory` := v0 @kind object;
  #L15b564.  return @kind void;
}
procedure `void` `clearSpecialConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `com.j256.ormlite.support.DatabaseConnection` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b578.  v0:= `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15b57c.  call temp:= `clearSpecial`(v1, v2, v0) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.clearSpecial:(Lcom/j256/ormlite/support/DatabaseConnection;Lcom/j256/ormlite/logger/Logger;)Z` @kind virtual;
  #L15b582.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b594.  v0:= 0I;
  #L15b596.  v1.`com.j256.ormlite.android.AndroidConnectionSource.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L15b59a.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.android.AndroidConnectionSource` v0 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;

  #L15b5ac.  call `close`(v0) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.close:()V` @kind virtual;
  #L15b5b2.  return @kind void;
}
procedure `com.j256.ormlite.db.DatabaseType` `getDatabaseType`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b5c4.  v0:= v1.`com.j256.ormlite.android.AndroidConnectionSource.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` @kind object;
  #L15b5c8.  return v0 @kind object;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `getReadOnlyConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getReadOnlyConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b5dc.  call temp:= `getReadWriteConnection`(v1, v2) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getReadWriteConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind virtual;
  #L15b5e2.  v0:= temp @kind object;
  #L15b5e4.  return v0 @kind object;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `getReadWriteConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getReadWriteConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15b5f8.  call temp:= `getSavedConnection`(v5) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getSavedConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @kind virtual;
  #L15b5fe.  v0:= temp @kind object;
  #L15b600.  if v0 == 0 then goto L15b606;
  #L15b604.  return v0 @kind object;
  #L15b606.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15b60a.  if v0 != 0 then goto L15b6b6;
  #L15b60e.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L15b612.  if v0 != 0 then goto L15b6b0;
  #Try_start0.  
  #L15b616.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` @kind object;
  #L15b61a.  call temp:= `getWritableDatabase`(v0) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #Try_end0.  
  #L15b620.  v0:= temp @kind object;
  #L15b622.  v1:= new `com.j256.ormlite.android.AndroidDatabaseConnection`;
  #L15b626.  v2:= 1I;
  #L15b628.  v3:= v5.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L15b62c.  call `<init>`(v1, v0, v2, v3) @signature `Lcom/j256/ormlite/android/AndroidDatabaseConnection;.<init>:(Landroid/database/sqlite/SQLiteDatabase;ZZ)V` @kind direct;
  #L15b632.  v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L15b636.  v1:= `@@com.j256.ormlite.android.AndroidConnectionSource.connectionProxyFactory` @type ^`com.j256.ormlite.support.DatabaseConnectionProxyFactory` @kind object;
  #L15b63a.  if v1 == 0 then goto L15b652;
  #L15b63e.  v1:= `@@com.j256.ormlite.android.AndroidConnectionSource.connectionProxyFactory` @type ^`com.j256.ormlite.support.DatabaseConnectionProxyFactory` @kind object;
  #L15b642.  v2:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15b646.  call temp:= `createProxy`(v1, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxyFactory;.createProxy:(Lcom/j256/ormlite/support/DatabaseConnection;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L15b64c.  v1:= temp @kind object;
  #L15b64e.  v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L15b652.  v1:= `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15b656.  v2:= "created connection {} for db {}, helper {}" @kind object;
  #L15b65a.  v3:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15b65e.  v4:= v5.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` @kind object;
  #L15b662.  call `trace`(v1, v2, v3, v0, v4) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L15b668.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15b66c.  goto L15b604;
  #L15b66e.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L15b670.  v1:= new `java.lang.StringBuilder`;
  #L15b674.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b67a.  v2:= "Getting a writable database from helper " @kind object;
  #L15b67e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b684.  v1:= temp @kind object;
  #L15b686.  v2:= v5.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` @kind object;
  #L15b68a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b690.  v1:= temp @kind object;
  #L15b692.  v2:= " failed" @kind object;
  #L15b696.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b69c.  v1:= temp @kind object;
  #L15b69e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b6a4.  v1:= temp @kind object;
  #L15b6a6.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15b6ac.  v0:= temp @kind object;
  #L15b6ae.  throw v0;
  #L15b6b0.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L15b6b4.  goto L15b622;
  #L15b6b6.  v0:= `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15b6ba.  v1:= "{}: returning read-write connection {}, helper {}" @kind object;
  #L15b6be.  v2:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15b6c2.  v3:= v5.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` @kind object;
  #L15b6c6.  call `trace`(v0, v1, v5, v2, v3) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L15b6cc.  goto L15b668;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L15b66e;
}
procedure `boolean` `isCancelQueriesEnabled`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.isCancelQueriesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b6f0.  v0:= v1.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L15b6f4.  return v0;
}
procedure `boolean` `isOpen`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.isOpen:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b708.  v0:= v1.`com.j256.ormlite.android.AndroidConnectionSource.isOpen` @type ^`boolean` @kind boolean;
  #L15b70c.  return v0;
}
procedure `boolean` `isSingleConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.isSingleConnection:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b720.  v0:= 1I;
  #L15b722.  return v0;
}
procedure `void` `releaseConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v0 @kind this, `com.j256.ormlite.support.DatabaseConnection` v1 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.releaseConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;

  #L15b734.  return @kind void;
}
procedure `boolean` `saveSpecialConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `com.j256.ormlite.support.DatabaseConnection` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.saveSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b748.  call temp:= `saveSpecial`(v1, v2) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.saveSpecial:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind virtual;
  #L15b74e.  v0:= temp;
  #L15b750.  return v0;
}
procedure `void` `setCancelQueriesEnabled`(`com.j256.ormlite.android.AndroidConnectionSource` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.setCancelQueriesEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15b764.  v0.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` := v1 @kind boolean;
  #L15b768.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.AndroidConnectionSource` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b77c.  v0:= new `java.lang.StringBuilder`;
  #L15b780.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b786.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15b78c.  v1:= temp @kind object;
  #L15b78e.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L15b794.  v1:= temp @kind object;
  #L15b796.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b79c.  v0:= temp @kind object;
  #L15b79e.  v1:= "@" @kind object;
  #L15b7a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b7a8.  v0:= temp @kind object;
  #L15b7aa.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L15b7b0.  v1:= temp;
  #L15b7b2.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L15b7b8.  v1:= temp @kind object;
  #L15b7ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b7c0.  v0:= temp @kind object;
  #L15b7c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b7c8.  v0:= temp @kind object;
  #L15b7ca.  return v0 @kind object;
}

record `com.j256.ormlite.dao.Dao` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `com.j256.ormlite.dao.CloseableIterable` @kind interface {
}
procedure `void` `assignEmptyForeignCollection`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `callBatchTasks`(`java.util.concurrent.Callable` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clearObjectCache`() @signature `Lcom/j256/ormlite/dao/Dao;.clearObjectCache:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `closeLastIterator`() @signature `Lcom/j256/ormlite/dao/Dao;.closeLastIterator:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `commit`(`com.j256.ormlite.support.DatabaseConnection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `countOf`() @signature `Lcom/j256/ormlite/dao/Dao;.countOf:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `countOf`(`com.j256.ormlite.stmt.PreparedQuery` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `create`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `create`(`java.util.Collection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/util/Collection;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `createIfNotExists`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.Dao$CreateOrUpdateStatus` `createOrUpdate`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `delete`(`com.j256.ormlite.stmt.PreparedDelete` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `delete`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `delete`(`java.util.Collection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/util/Collection;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.stmt.DeleteBuilder` `deleteBuilder`() @signature `Lcom/j256/ormlite/dao/Dao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `deleteById`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.deleteById:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `deleteIds`(`java.util.Collection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.deleteIds:(Ljava/util/Collection;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `endThreadConnection`(`com.j256.ormlite.support.DatabaseConnection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `executeRaw`(`java.lang.String` v0 @kind object, `java.lang.String`[] v1 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `executeRawNoArgs`(`java.lang.String` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.executeRawNoArgs:(Ljava/lang/String;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `extractId`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.field.FieldType` `findForeignFieldType`(`java.lang.Class` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.support.ConnectionSource` `getConnectionSource`() @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Class` `getDataClass`() @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.ForeignCollection` `getEmptyForeignCollection`(`java.lang.String` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCache`() @signature `Lcom/j256/ormlite/dao/Dao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.RawRowMapper` `getRawRowMapper`() @signature `Lcom/j256/ormlite/dao/Dao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.stmt.GenericRowMapper` `getSelectStarRowMapper`() @signature `Lcom/j256/ormlite/dao/Dao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getTableName`() @signature `Lcom/j256/ormlite/dao/Dao;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`() @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.stmt.PreparedQuery` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `idExists`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.idExists:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.support.DatabaseConnection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isTableExists`() @signature `Lcom/j256/ormlite/dao/Dao;.isTableExists:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isUpdatable`() @signature `Lcom/j256/ormlite/dao/Dao;.isUpdatable:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`() @signature `Lcom/j256/ormlite/dao/Dao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`int` v0 ) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.stmt.PreparedQuery` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.stmt.PreparedQuery` v0 @kind object, `int` v1 ) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `mapSelectStarRow`(`com.j256.ormlite.support.DatabaseResults` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyChanges`() @signature `Lcom/j256/ormlite/dao/Dao;.notifyChanges:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `objectToString`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `objectsEqual`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `query`(`com.j256.ormlite.stmt.PreparedQuery` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.stmt.QueryBuilder` `queryBuilder`() @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `queryForAll`() @signature `Lcom/j256/ormlite/dao/Dao;.queryForAll:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `queryForEq`(`java.lang.String` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `queryForFieldValues`(`java.util.Map` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `queryForFieldValuesArgs`(`java.util.Map` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `queryForFirst`(`com.j256.ormlite.stmt.PreparedQuery` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `queryForId`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `queryForMatching`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `queryForMatchingArgs`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `queryForSameId`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`java.lang.String` v0 @kind object, `com.j256.ormlite.dao.DatabaseResultsMapper` v1 @kind object, `java.lang.String`[] v2 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`java.lang.String` v0 @kind object, `com.j256.ormlite.dao.RawRowMapper` v1 @kind object, `java.lang.String`[] v2 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`java.lang.String` v0 @kind object, `com.j256.ormlite.field.DataType`[] v1 @kind object, `com.j256.ormlite.dao.RawRowObjectMapper` v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`java.lang.String` v0 @kind object, `com.j256.ormlite.field.DataType`[] v1 @kind object, `java.lang.String`[] v2 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`java.lang.String` v0 @kind object, `java.lang.String`[] v1 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `queryRawValue`(`java.lang.String` v0 @kind object, `java.lang.String`[] v1 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `refresh`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `registerObserver`(`com.j256.ormlite.dao.Dao$DaoObserver` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `rollBack`(`com.j256.ormlite.support.DatabaseConnection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.support.DatabaseConnection` v0 @kind object, `boolean` v1 ) @signature `Lcom/j256/ormlite/dao/Dao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.ObjectCache` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setObjectCache`(`boolean` v0 ) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setObjectFactory`(`com.j256.ormlite.table.ObjectFactory` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `startThreadConnection`() @signature `Lcom/j256/ormlite/dao/Dao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `unregisterObserver`(`com.j256.ormlite.dao.Dao$DaoObserver` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `update`(`com.j256.ormlite.stmt.PreparedUpdate` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `update`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.stmt.UpdateBuilder` `updateBuilder`() @signature `Lcom/j256/ormlite/dao/Dao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `updateId`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `updateRaw`(`java.lang.String` v0 @kind object, `java.lang.String`[] v1 @kind object) @signature `Lcom/j256/ormlite/dao/Dao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}

record `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedDeleteCollection` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L177fb8.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L177fbe.  return @kind void;
}
procedure `void` `appendWhereIds`(`com.j256.ormlite.db.DatabaseType` v4 @kind object, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.StringBuilder` v6 @kind object, `int` v7 , `com.j256.ormlite.field.FieldType`[] v8 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendWhereIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;I[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L177fd0.  v1:= 0I;
  #L177fd2.  v0:= "WHERE " @kind object;
  #L177fd6.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177fdc.  call temp:= `getColumnName`(v5) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L177fe2.  v0:= temp @kind object;
  #L177fe4.  call `appendEscapedEntityName`(v4, v6, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L177fea.  v0:= " IN (" @kind object;
  #L177fee.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177ff4.  v0:= 1I;
  #L177ff6.  v2:= v1;
  #L177ff8.  if v2 >= v7 then goto L178026;
  #L177ffc.  if v0 == 0 then goto L17801a;
  #L178000.  v0:= v1;
  #L178002.  v3:= 63I;
  #L178006.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L17800c.  if v8 == 0 then goto L178014;
  #L178010.  v8[v2]:= v5 @kind object;
  #L178014.  v2:= v2 + 1;
  #L178018.  goto L177ff8;
  #L17801a.  v3:= 44I;
  #L17801e.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L178024.  goto L178002;
  #L178026.  v0:= ") " @kind object;
  #L17802a.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178030.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` `build`(`com.j256.ormlite.db.DatabaseType` v4 @kind object, `com.j256.ormlite.table.TableInfo` v5 @kind object, `int` v6 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L178044.  call temp:= `getIdField`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L17804a.  v0:= temp @kind object;
  #L17804c.  if v0 != 0 then goto L178096;
  #L178050.  v0:= new `java.sql.SQLException`;
  #L178054.  v1:= new `java.lang.StringBuilder`;
  #L178058.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17805e.  v2:= "Cannot delete " @kind object;
  #L178062.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178068.  v1:= temp @kind object;
  #L17806a.  call temp:= `getDataClass`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L178070.  v2:= temp @kind object;
  #L178072.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178078.  v1:= temp @kind object;
  #L17807a.  v2:= " because it doesn't have an id field defined" @kind object;
  #L17807e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178084.  v1:= temp @kind object;
  #L178086.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17808c.  v1:= temp @kind object;
  #L17808e.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L178094.  throw v0;
  #L178096.  v1:= new `java.lang.StringBuilder`;
  #L17809a.  v2:= 128I;
  #L17809e.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1780a4.  v2:= "DELETE FROM " @kind object;
  #L1780a8.  call temp:= `getTableName`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L1780ae.  v3:= temp @kind object;
  #L1780b0.  call `appendTableName`(v4, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1780b6.  v2:= new `com.j256.ormlite.field.FieldType`[v6];
  #L1780ba.  call `appendWhereIds`(v4, v0, v1, v6, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendWhereIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;I[Lcom/j256/ormlite/field/FieldType;)V` @kind static;
  #L1780c0.  v0:= new `com.j256.ormlite.stmt.mapped.MappedDeleteCollection`;
  #L1780c4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1780ca.  v1:= temp @kind object;
  #L1780cc.  call `<init>`(v0, v5, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L1780d2.  return v0 @kind object;
}
procedure `int` `deleteIds`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.util.Collection` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.deleteIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/util/Collection;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1780e4.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1780ea.  v0:= temp;
  #L1780ec.  call temp:= `build`(v6, v7, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @kind static;
  #L1780f2.  v1:= temp @kind object;
  #L1780f4.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1780fa.  v0:= temp;
  #L1780fc.  v2:= new `java.lang.Object`[v0];
  #L178100.  call temp:= `getIdField`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L178106.  v3:= temp @kind object;
  #L178108.  v0:= 0I;
  #L17810a.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L178110.  v4:= temp @kind object;
  #L178112.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L178118.  v5:= temp;
  #L17811a.  if v5 == 0 then goto L178138;
  #L17811e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L178124.  v5:= temp @kind object;
  #L178126.  call temp:= `convertJavaFieldToSqlArgValue`(v3, v5) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17812c.  v5:= temp @kind object;
  #L17812e.  v2[v0]:= v5 @kind object;
  #L178132.  v0:= v0 + 1;
  #L178136.  goto L178112;
  #L178138.  call temp:= `getDataClass`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L17813e.  v0:= temp @kind object;
  #L178140.  call temp:= `updateRows`(v8, v0, v1, v2, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind static;
  #L178146.  v0:= temp;
  #L178148.  return v0;
}
procedure `int` `deleteObjects`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.util.Collection` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.deleteObjects:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/util/Collection;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L17815c.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L178162.  v0:= temp;
  #L178164.  call temp:= `build`(v6, v7, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @kind static;
  #L17816a.  v1:= temp @kind object;
  #L17816c.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L178172.  v0:= temp;
  #L178174.  v2:= new `java.lang.Object`[v0];
  #L178178.  call temp:= `getIdField`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L17817e.  v3:= temp @kind object;
  #L178180.  v0:= 0I;
  #L178182.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L178188.  v4:= temp @kind object;
  #L17818a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L178190.  v5:= temp;
  #L178192.  if v5 == 0 then goto L1781b0;
  #L178196.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L17819c.  v5:= temp @kind object;
  #L17819e.  call temp:= `extractJavaFieldToSqlArgValue`(v3, v5) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1781a4.  v5:= temp @kind object;
  #L1781a6.  v2[v0]:= v5 @kind object;
  #L1781aa.  v0:= v0 + 1;
  #L1781ae.  goto L17818a;
  #L1781b0.  call temp:= `getDataClass`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L1781b6.  v0:= temp @kind object;
  #L1781b8.  call temp:= `updateRows`(v8, v0, v1, v2, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind static;
  #L1781be.  v0:= temp;
  #L1781c0.  return v0;
}
procedure `int` `updateRows`(`com.j256.ormlite.support.DatabaseConnection` v6 @kind object, `java.lang.Class` v7 @kind object, `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` v8 @kind object, `java.lang.Object`[] v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L1781d4.  v0:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L1781d8.  v1:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L1781dc.  call temp:= `delete`(v6, v0, v9, v1) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L1781e2.  v1:= temp;
  #L1781e4.  if v1 <= 0 then goto L178204;
  #L1781e8.  if v10 == 0 then goto L178204;
  #L1781ec.  v2:= length @variable v9;
  #L1781ee.  v0:= 0I;
  #L1781f0.  if v0 >= v2 then goto L178204;
  #L1781f4.  v3:= v9[v0] @kind object;
  #L1781f8.  call `remove`(v10, v7, v3) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #L1781fe.  v0:= v0 + 1;
  #L178202.  goto L1781f0;
  #L178204.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L178208.  v2:= "delete-collection with statement '{}' and {} args, changed {} rows" @kind object;
  #L17820c.  v3:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L178210.  v4:= length @variable v9;
  #L178212.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L178218.  v4:= temp @kind object;
  #L17821a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L178220.  v5:= temp @kind object;
  #L178222.  call `debug`(v0, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L178228.  v0:= length @variable v9;
  #L17822a.  if v0 <= 0 then goto L17823c;
  #L17822e.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L178232.  v2:= "delete-collection arguments: {}" @kind object;
  #L178236.  call `trace`(v0, v2, v9) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L17823c.  return v1;
  #L17823e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L178240.  v1:= new `java.lang.StringBuilder`;
  #L178244.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17824a.  v2:= "Unable to run delete collection stmt: " @kind object;
  #L17824e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178254.  v1:= temp @kind object;
  #L178256.  v2:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L17825a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178260.  v1:= temp @kind object;
  #L178262.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L178268.  v1:= temp @kind object;
  #L17826a.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L178270.  v0:= temp @kind object;
  #L178272.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L17823e;
}

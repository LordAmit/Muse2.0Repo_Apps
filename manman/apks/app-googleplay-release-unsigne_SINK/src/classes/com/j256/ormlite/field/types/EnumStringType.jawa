record `com.j256.ormlite.field.types.EnumStringType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseEnumType` @kind class {
}
global `int` `@@com.j256.ormlite.field.types.EnumStringType.DEFAULT_WIDTH` @AccessFlag PUBLIC_STATIC;
global `com.j256.ormlite.field.types.EnumStringType` `@@com.j256.ormlite.field.types.EnumStringType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/EnumStringType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16e01c.  v0:= 100I;
  #L16e020.  `@@com.j256.ormlite.field.types.EnumStringType.DEFAULT_WIDTH` @type ^`int` := v0;
  #L16e024.  v0:= new `com.j256.ormlite.field.types.EnumStringType`;
  #L16e028.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.<init>:()V` @kind direct;
  #L16e02e.  `@@com.j256.ormlite.field.types.EnumStringType.singleTon` @type ^`com.j256.ormlite.field.types.EnumStringType` := v0 @kind object;
  #L16e032.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.EnumStringType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16e044.  v0:= `@@com.j256.ormlite.field.SqlType.STRING` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L16e048.  v1:= 1I;
  #L16e04a.  v1:= new `java.lang.Class`[v1];
  #L16e04e.  v2:= 0I;
  #L16e050.  v3:= constclass @type ^`java.lang.Enum` @kind object;
  #L16e054.  v1[v2]:= v3 @kind object;
  #L16e058.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseEnumType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16e05e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.EnumStringType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L16e070.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseEnumType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16e076.  return @kind void;
}
procedure `com.j256.ormlite.field.types.EnumStringType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getSingleton:()Lcom/j256/ormlite/field/types/EnumStringType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16e088.  v0:= `@@com.j256.ormlite.field.types.EnumStringType.singleTon` @type ^`com.j256.ormlite.field.types.EnumStringType` @kind object;
  #L16e08c.  return v0 @kind object;
}
procedure `int` `getDefaultWidth`(`com.j256.ormlite.field.types.EnumStringType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getDefaultWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e0a0.  v0:= `@@com.j256.ormlite.field.types.EnumStringType.DEFAULT_WIDTH` @type ^`int`;
  #L16e0a4.  return v0;
}
procedure `java.lang.String` `getEnumName`(`com.j256.ormlite.field.types.EnumStringType` v1 @kind this, `java.lang.Enum` v2 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getEnumName:(Ljava/lang/Enum;)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L16e0b8.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L16e0be.  v0:= temp @kind object;
  #L16e0c0.  return v0 @kind object;
}
procedure `java.lang.Object` `javaToSqlArg`(`com.j256.ormlite.field.types.EnumStringType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.javaToSqlArg:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e0d4.  v3:= (`java.lang.Enum`) v3 @kind object;
  #L16e0d8.  call temp:= `getEnumName`(v1, v3) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getEnumName:(Ljava/lang/Enum;)Ljava/lang/String;` @kind virtual;
  #L16e0de.  v0:= temp @kind object;
  #L16e0e0.  return v0 @kind object;
}
procedure `java.lang.Object` `makeConfigObject`(`com.j256.ormlite.field.types.EnumStringType` v6 @kind this, `com.j256.ormlite.field.FieldType` v7 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.makeConfigObject:(Lcom/j256/ormlite/field/FieldType;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16e0f4.  v2:= new `java.util.HashMap`;
  #L16e0f8.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L16e0fe.  call temp:= `getType`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.getType:()Ljava/lang/Class;` @kind virtual;
  #L16e104.  v0:= temp @kind object;
  #L16e106.  call temp:= `getEnumConstants`(v0) @signature `Ljava/lang/Class;.getEnumConstants:()[Ljava/lang/Object;` @kind virtual;
  #L16e10c.  v0:= temp @kind object;
  #L16e10e.  v0:= (`java.lang.Enum`[]) v0 @kind object;
  #L16e112.  v0:= (`java.lang.Enum`[]) v0 @kind object;
  #L16e116.  if v0 != 0 then goto L16e160;
  #L16e11a.  v0:= new `java.sql.SQLException`;
  #L16e11e.  v1:= new `java.lang.StringBuilder`;
  #L16e122.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16e128.  v2:= "Field " @kind object;
  #L16e12c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e132.  v1:= temp @kind object;
  #L16e134.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e13a.  v1:= temp @kind object;
  #L16e13c.  v2:= " improperly configured as type " @kind object;
  #L16e140.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e146.  v1:= temp @kind object;
  #L16e148.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e14e.  v1:= temp @kind object;
  #L16e150.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16e156.  v1:= temp @kind object;
  #L16e158.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16e15e.  throw v0;
  #L16e160.  v3:= length @variable v0;
  #L16e162.  v1:= 0I;
  #L16e164.  if v1 >= v3 then goto L16e180;
  #L16e168.  v4:= v0[v1] @kind object;
  #L16e16c.  call temp:= `getEnumName`(v6, v4) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getEnumName:(Ljava/lang/Enum;)Ljava/lang/String;` @kind virtual;
  #L16e172.  v5:= temp @kind object;
  #L16e174.  call temp:= `put`(v2, v5, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16e17a.  v1:= v1 + 1;
  #L16e17e.  goto L16e164;
  #L16e180.  return v2 @kind object;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.EnumStringType` v0 @kind this, `com.j256.ormlite.field.FieldType` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L16e194.  return v2 @kind object;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.EnumStringType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e1a8.  call temp:= `getString`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getString:(I)Ljava/lang/String;` @kind interface;
  #L16e1ae.  v0:= temp @kind object;
  #L16e1b0.  return v0 @kind object;
}
procedure `java.lang.Object` `sqlArgToJava`(`com.j256.ormlite.field.types.EnumStringType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.Object` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.sqlArgToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16e1c4.  if v3 != 0 then goto L16e1ca;
  #L16e1c8.  return v4 @kind object;
  #L16e1ca.  v4:= (`java.lang.String`) v4 @kind object;
  #L16e1ce.  call temp:= `getDataTypeConfigObj`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.getDataTypeConfigObj:()Ljava/lang/Object;` @kind virtual;
  #L16e1d4.  v0:= temp @kind object;
  #L16e1d6.  v0:= (`java.util.Map`) v0 @kind object;
  #L16e1da.  if v0 != 0 then goto L16e1f2;
  #L16e1de.  v0:= 0I;
  #L16e1e0.  call temp:= `getUnknownEnumVal`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.getUnknownEnumVal:()Ljava/lang/Enum;` @kind virtual;
  #L16e1e6.  v1:= temp @kind object;
  #L16e1e8.  call temp:= `enumVal`(v3, v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.enumVal:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/lang/Enum;` @kind static;
  #L16e1ee.  v4:= temp @kind object;
  #L16e1f0.  goto L16e1c8;
  #L16e1f2.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16e1f8.  v0:= temp @kind object;
  #L16e1fa.  v0:= (`java.lang.Enum`) v0 @kind object;
  #L16e1fe.  call temp:= `getUnknownEnumVal`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.getUnknownEnumVal:()Ljava/lang/Enum;` @kind virtual;
  #L16e204.  v1:= temp @kind object;
  #L16e206.  call temp:= `enumVal`(v3, v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.enumVal:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/lang/Enum;` @kind static;
  #L16e20c.  v4:= temp @kind object;
  #L16e20e.  goto L16e1c8;
}

record `com.j256.ormlite.field.types.BooleanObjectType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
global `com.j256.ormlite.field.types.BooleanObjectType` `@@com.j256.ormlite.field.types.BooleanObjectType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16c9b4.  v0:= new `com.j256.ormlite.field.types.BooleanObjectType`;
  #L16c9b8.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.<init>:()V` @kind direct;
  #L16c9be.  `@@com.j256.ormlite.field.types.BooleanObjectType.singleTon` @type ^`com.j256.ormlite.field.types.BooleanObjectType` := v0 @kind object;
  #L16c9c2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.BooleanObjectType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16c9d4.  v0:= `@@com.j256.ormlite.field.SqlType.BOOLEAN` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L16c9d8.  v1:= 1I;
  #L16c9da.  v1:= new `java.lang.Class`[v1];
  #L16c9de.  v2:= 0I;
  #L16c9e0.  v3:= constclass @type ^`java.lang.Boolean` @kind object;
  #L16c9e4.  v1[v2]:= v3 @kind object;
  #L16c9e8.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16c9ee.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.BooleanObjectType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L16ca00.  call `<init>`(v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L16ca06.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.BooleanObjectType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L16ca18.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16ca1e.  return @kind void;
}
procedure `com.j256.ormlite.field.types.BooleanObjectType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.getSingleton:()Lcom/j256/ormlite/field/types/BooleanObjectType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16ca30.  v0:= `@@com.j256.ormlite.field.types.BooleanObjectType.singleTon` @type ^`com.j256.ormlite.field.types.BooleanObjectType` @kind object;
  #L16ca34.  return v0 @kind object;
}
procedure `boolean` `isAppropriateId`(`com.j256.ormlite.field.types.BooleanObjectType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.isAppropriateId:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ca48.  v0:= 0I;
  #L16ca4a.  return v0;
}
procedure `boolean` `isEscapedValue`(`com.j256.ormlite.field.types.BooleanObjectType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.isEscapedValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ca5c.  v0:= 0I;
  #L16ca5e.  return v0;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.BooleanObjectType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ca70.  call temp:= `parseBoolean`(v3) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L16ca76.  v0:= temp;
  #L16ca78.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L16ca7e.  v0:= temp @kind object;
  #L16ca80.  return v0 @kind object;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.BooleanObjectType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/BooleanObjectType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ca94.  call temp:= `getBoolean`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getBoolean:(I)Z` @kind interface;
  #L16ca9a.  v0:= temp;
  #L16ca9c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L16caa2.  v0:= temp @kind object;
  #L16caa4.  return v0 @kind object;
}

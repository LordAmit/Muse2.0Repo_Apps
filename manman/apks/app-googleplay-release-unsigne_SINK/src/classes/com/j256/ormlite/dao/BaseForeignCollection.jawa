record `com.j256.ormlite.dao.BaseForeignCollection` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.j256.ormlite.dao.ForeignCollection` @kind interface, `java.io.Serializable` @kind interface {
  `com.j256.ormlite.dao.Dao` `com.j256.ormlite.dao.BaseForeignCollection.dao` @AccessFlag PROTECTED_FINAL_TRANSIENT;
  `com.j256.ormlite.field.FieldType` `com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `boolean` `com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.String` `com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.j256.ormlite.dao.BaseForeignCollection.parent` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.j256.ormlite.dao.BaseForeignCollection.parentId` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `com.j256.ormlite.stmt.PreparedQuery` `com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.j256.ormlite.dao.BaseForeignCollection.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.BaseForeignCollection` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L161d5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L161d62.  v0.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` := v1 @kind object;
  #L161d66.  v0.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` := v4 @kind object;
  #L161d6a.  v0.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` := v3 @kind object;
  #L161d6e.  v0.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` := v5 @kind object;
  #L161d72.  v0.`com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @type ^`boolean` := v6 @kind boolean;
  #L161d76.  v0.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` := v2 @kind object;
  #L161d7a.  return @kind void;
}
procedure `boolean` `addElement`(`com.j256.ormlite.dao.BaseForeignCollection` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L161d8c.  v0:= 1I;
  #L161d8e.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161d92.  if v1 != 0 then goto L161d9a;
  #L161d96.  v0:= 0I;
  #L161d98.  return v0;
  #L161d9a.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L161d9e.  if v1 == 0 then goto L161dc2;
  #L161da2.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L161da6.  call temp:= `getFieldValueIfNotDefault`(v1, v5) @signature `Lcom/j256/ormlite/field/FieldType;.getFieldValueIfNotDefault:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L161dac.  v1:= temp @kind object;
  #L161dae.  if v1 != 0 then goto L161dc2;
  #L161db2.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L161db6.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L161dba.  v3:= 0I;
  #L161dbc.  call `assignField`(v1, v5, v2, v0, v3) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L161dc2.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161dc6.  call temp:= `create`(v1, v5) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @kind interface;
  #L161dcc.  goto L161d98;
}
procedure `boolean` `add`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L161de0.  call temp:= `addElement`(v3, v4) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L161de6.  v0:= temp;
  #L161de8.  return v0;
  #L161dea.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L161dec.  v1:= new `java.lang.IllegalStateException`;
  #L161df0.  v2:= "Could not create data element in dao" @kind object;
  #L161df4.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L161dfa.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L161dea;
}
procedure `boolean` `addAll`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L161e1c.  v0:= 0I;
  #L161e1e.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L161e24.  v1:= temp @kind object;
  #L161e26.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L161e2c.  v2:= temp;
  #L161e2e.  if v2 == 0 then goto L161e5c;
  #L161e32.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L161e38.  v2:= temp @kind object;
  #Try_start0.  
  #L161e3a.  call temp:= `addElement`(v3, v2) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L161e40.  v2:= temp;
  #L161e42.  if v2 == 0 then goto L161e26;
  #L161e46.  v0:= 1I;
  #L161e48.  goto L161e26;
  #L161e4a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L161e4c.  v1:= new `java.lang.IllegalStateException`;
  #L161e50.  v2:= "Could not create data elements in dao" @kind object;
  #L161e54.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L161e5a.  throw v1;
  #L161e5c.  return v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L161e4a;
}
procedure `void` `clear`(`com.j256.ormlite.dao.BaseForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L161e80.  v0:= v2.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161e84.  if v0 != 0 then goto L161e8a;
  #L161e88.  return @kind void;
  #L161e8a.  call temp:= `closeableIterator`(v2) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L161e90.  v1:= temp @kind object;
  #Try_start0.  
  #L161e92.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L161e98.  v0:= temp;
  #L161e9a.  if v0 == 0 then goto L161eb6;
  #L161e9e.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L161ea4.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L161eaa.  goto L161e92;
  #L161eac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L161eae.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L161eb4.  throw v0;
  #L161eb6.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L161ebc.  goto L161e88;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L161eac;
}
procedure `com.j256.ormlite.dao.Dao` `getDao`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.getDao:()Lcom/j256/ormlite/dao/Dao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161edc.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161ee0.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.PreparedQuery` `getPreparedQuery`(`com.j256.ormlite.dao.BaseForeignCollection` v4 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.getPreparedQuery:()Lcom/j256/ormlite/stmt/PreparedQuery;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L161ef4.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161ef8.  if v0 != 0 then goto L161f00;
  #L161efc.  v0:= 0I;
  #L161efe.  return v0 @kind object;
  #L161f00.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L161f04.  if v0 != 0 then goto L161f88;
  #L161f08.  v0:= new `com.j256.ormlite.stmt.SelectArg`;
  #L161f0c.  call `<init>`(v0) @signature `Lcom/j256/ormlite/stmt/SelectArg;.<init>:()V` @kind direct;
  #L161f12.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` @kind object;
  #L161f16.  call `setValue`(v0, v1) @signature `Lcom/j256/ormlite/stmt/SelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L161f1c.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161f20.  call temp:= `queryBuilder`(v1) @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @kind interface;
  #L161f26.  v1:= temp @kind object;
  #L161f28.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` @kind object;
  #L161f2c.  if v2 == 0 then goto L161f3e;
  #L161f30.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` @kind object;
  #L161f34.  v3:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @type ^`boolean` @kind boolean;
  #L161f38.  call temp:= `orderBy`(v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/QueryBuilder;.orderBy:(Ljava/lang/String;Z)Lcom/j256/ormlite/stmt/QueryBuilder;` @kind virtual;
  #L161f3e.  call temp:= `where`(v1) @signature `Lcom/j256/ormlite/stmt/QueryBuilder;.where:()Lcom/j256/ormlite/stmt/Where;` @kind virtual;
  #L161f44.  v1:= temp @kind object;
  #L161f46.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L161f4a.  call temp:= `getColumnName`(v2) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L161f50.  v2:= temp @kind object;
  #L161f52.  call temp:= `eq`(v1, v2, v0) @signature `Lcom/j256/ormlite/stmt/Where;.eq:(Ljava/lang/String;Ljava/lang/Object;)Lcom/j256/ormlite/stmt/Where;` @kind virtual;
  #L161f58.  v0:= temp @kind object;
  #L161f5a.  call temp:= `prepare`(v0) @signature `Lcom/j256/ormlite/stmt/Where;.prepare:()Lcom/j256/ormlite/stmt/PreparedQuery;` @kind virtual;
  #L161f60.  v0:= temp @kind object;
  #L161f62.  v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` := v0 @kind object;
  #L161f66.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L161f6a.  v0:= instanceof @variable v0 @type ^`com.j256.ormlite.stmt.mapped.MappedPreparedStmt` @kind boolean;
  #L161f6e.  if v0 == 0 then goto L161f88;
  #L161f72.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L161f76.  v0:= (`com.j256.ormlite.stmt.mapped.MappedPreparedStmt`) v0 @kind object;
  #L161f7a.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L161f7e.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` @kind object;
  #L161f82.  call `setParentInformation`(v0, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedPreparedStmt;.setParentInformation:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L161f88.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L161f8c.  goto L161efe;
}
procedure `int` `refresh`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161fa0.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161fa4.  if v0 != 0 then goto L161fac;
  #L161fa8.  v0:= 0I;
  #L161faa.  return v0;
  #L161fac.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161fb0.  call temp:= `refresh`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @kind interface;
  #L161fb6.  v0:= temp;
  #L161fb8.  goto L161faa;
}
procedure `boolean` `remove`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `removeAll`(`java.util.Collection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `retainAll`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L161fcc.  v0:= 0I;
  #L161fce.  v1:= v3.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L161fd2.  if v1 != 0 then goto L161fd8;
  #L161fd6.  return v0;
  #L161fd8.  call temp:= `closeableIterator`(v3) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L161fde.  v1:= temp @kind object;
  #Try_start0.  
  #L161fe0.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L161fe6.  v2:= temp;
  #L161fe8.  if v2 == 0 then goto L16200a;
  #L161fec.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L161ff2.  v2:= temp @kind object;
  #L161ff4.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L161ffa.  v2:= temp;
  #L161ffc.  if v2 != 0 then goto L161fe0;
  #L162000.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L162006.  v0:= 1I;
  #L162008.  goto L161fe0;
  #L16200a.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L162010.  goto L161fd6;
  #L162012.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L162014.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16201a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L162012;
}
procedure `int` `update`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162038.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L16203c.  if v0 != 0 then goto L162044;
  #L162040.  v0:= 0I;
  #L162042.  return v0;
  #L162044.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L162048.  call temp:= `update`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @kind interface;
  #L16204e.  v0:= temp;
  #L162050.  goto L162042;
}

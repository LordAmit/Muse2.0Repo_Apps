record `com.j256.ormlite.stmt.ThreadLocalSelectArg` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.BaseArgumentHolder` @kind class {
  `java.lang.ThreadLocal` `com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L176154.  call `<init>`(v1) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:()V` @kind direct;
  #L17615a.  v0:= new `java.lang.ThreadLocal`;
  #L17615e.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L176164.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L176168.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `com.j256.ormlite.field.SqlType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Lcom/j256/ormlite/field/SqlType;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L17617c.  call `<init>`(v1, v2) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L176182.  v0:= new `java.lang.ThreadLocal`;
  #L176186.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L17618c.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L176190.  call `setValue`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L176196.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1761a8.  call `<init>`(v1) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:()V` @kind direct;
  #L1761ae.  v0:= new `java.lang.ThreadLocal`;
  #L1761b2.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L1761b8.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L1761bc.  call `setValue`(v1, v2) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L1761c2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1761d4.  call `<init>`(v1, v2) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1761da.  v0:= new `java.lang.ThreadLocal`;
  #L1761de.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L1761e4.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L1761e8.  call `setValue`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L1761ee.  return @kind void;
}
procedure `java.lang.Object` `getValue`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.getValue:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L176200.  v0:= v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L176204.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L17620a.  v0:= temp @kind object;
  #L17620c.  v0:= (`com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper`) v0 @kind object;
  #L176210.  if v0 != 0 then goto L176218;
  #L176214.  v0:= 0I;
  #L176216.  return v0 @kind object;
  #L176218.  v0:= v0.`com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper.value` @type ^`java.lang.Object` @kind object;
  #L17621c.  goto L176216;
}
procedure `boolean` `isValueSet`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.isValueSet:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L176230.  v0:= v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L176234.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L17623a.  v0:= temp @kind object;
  #L17623c.  if v0 == 0 then goto L176244;
  #L176240.  v0:= 1I;
  #L176242.  return v0;
  #L176244.  v0:= 0I;
  #L176246.  goto L176242;
}
procedure `void` `setValue`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L176258.  v0:= v2.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L17625c.  v1:= new `com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper`;
  #L176260.  call `<init>`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg$ValueWrapper;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L176266.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L17626c.  return @kind void;
}

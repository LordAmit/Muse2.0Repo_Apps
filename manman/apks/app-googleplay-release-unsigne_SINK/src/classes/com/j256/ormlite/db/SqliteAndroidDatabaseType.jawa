record `com.j256.ormlite.db.SqliteAndroidDatabaseType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.db.BaseSqliteDatabaseType` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v0 @kind this) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L166b44.  call `<init>`(v0) @signature `Lcom/j256/ormlite/db/BaseSqliteDatabaseType;.<init>:()V` @kind direct;
  #L166b4a.  return @kind void;
}
procedure `void` `appendBooleanType`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `com.j256.ormlite.field.FieldType` v2 @kind object, `int` v3 ) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.appendBooleanType:(Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;I)V` @AccessFlag PROTECTED {
    temp;

  #L166b5c.  call `appendShortType`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.appendShortType:(Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;I)V` @kind virtual;
  #L166b62.  return @kind void;
}
procedure `void` `appendDateType`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `com.j256.ormlite.field.FieldType` v2 @kind object, `int` v3 ) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.appendDateType:(Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;I)V` @AccessFlag PROTECTED {
    temp;

  #L166b74.  call `appendStringType`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.appendStringType:(Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;I)V` @kind virtual;
  #L166b7a.  return @kind void;
}
procedure `void` `appendEscapedEntityName`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v2 @kind this, `java.lang.StringBuilder` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L166b8c.  v1:= 96I;
  #L166b90.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L166b96.  v0:= temp @kind object;
  #L166b98.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L166b9e.  v0:= temp @kind object;
  #L166ba0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L166ba6.  return @kind void;
}
procedure `com.j256.ormlite.table.DatabaseTableConfig` `extractDatabaseTableConfig`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v1 @kind this, `com.j256.ormlite.support.ConnectionSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.extractDatabaseTableConfig:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L166bb8.  call temp:= `fromClass`(v2, v3) @signature `Lcom/j256/ormlite/android/DatabaseTableConfigUtil;.fromClass:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @kind static;
  #L166bbe.  v0:= temp @kind object;
  #L166bc0.  return v0 @kind object;
}
procedure `com.j256.ormlite.field.DataPersister` `getDataPersister`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v2 @kind this, `com.j256.ormlite.field.DataPersister` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.getDataPersister:(Lcom/j256/ormlite/field/DataPersister;Lcom/j256/ormlite/field/FieldType;)Lcom/j256/ormlite/field/DataPersister;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L166bd4.  if v3 != 0 then goto L166be2;
  #L166bd8.  call temp:= `getDataPersister`(v2, v3, v4) @signature `Lcom/j256/ormlite/db/BaseSqliteDatabaseType;.getDataPersister:(Lcom/j256/ormlite/field/DataPersister;Lcom/j256/ormlite/field/FieldType;)Lcom/j256/ormlite/field/DataPersister;` @kind super;
  #L166bde.  v0:= temp @kind object;
  #L166be0.  return v0 @kind object;
  #L166be2.  v0:= `@@com.j256.ormlite.db.SqliteAndroidDatabaseType$1.$SwitchMap$com$j256$ormlite$field$SqlType` @type ^`int`[] @kind object;
  #L166be6.  call temp:= `getSqlType`(v3) @signature `Lcom/j256/ormlite/field/DataPersister;.getSqlType:()Lcom/j256/ormlite/field/SqlType;` @kind interface;
  #L166bec.  v1:= temp @kind object;
  #L166bee.  call temp:= `ordinal`(v1) @signature `Lcom/j256/ormlite/field/SqlType;.ordinal:()I` @kind virtual;
  #L166bf4.  v1:= temp;
  #L166bf6.  v0:= v0[v1];
  #L166bfa.  goto L166c38;
  #L166c00.  call temp:= `getDataPersister`(v2, v3, v4) @signature `Lcom/j256/ormlite/db/BaseSqliteDatabaseType;.getDataPersister:(Lcom/j256/ormlite/field/DataPersister;Lcom/j256/ormlite/field/FieldType;)Lcom/j256/ormlite/field/DataPersister;` @kind super;
  #L166c06.  v0:= temp @kind object;
  #L166c08.  goto L166be0;
  #L166c0a.  v0:= instanceof @variable v3 @type ^`com.j256.ormlite.field.types.TimeStampType` @kind boolean;
  #L166c0e.  if v0 == 0 then goto L166c1c;
  #L166c12.  call temp:= `getSingleton`() @signature `Lcom/j256/ormlite/field/types/TimeStampStringType;.getSingleton:()Lcom/j256/ormlite/field/types/TimeStampStringType;` @kind static;
  #L166c18.  v0:= temp @kind object;
  #L166c1a.  goto L166be0;
  #L166c1c.  v0:= instanceof @variable v3 @type ^`com.j256.ormlite.field.types.SqlDateType` @kind boolean;
  #L166c20.  if v0 == 0 then goto L166c2e;
  #L166c24.  call temp:= `getSingleton`() @signature `Lcom/j256/ormlite/field/types/SqlDateStringType;.getSingleton:()Lcom/j256/ormlite/field/types/SqlDateStringType;` @kind static;
  #L166c2a.  v0:= temp @kind object;
  #L166c2c.  goto L166be0;
  #L166c2e.  call temp:= `getSingleton`() @signature `Lcom/j256/ormlite/field/types/DateStringType;.getSingleton:()Lcom/j256/ormlite/field/types/DateStringType;` @kind static;
  #L166c34.  v0:= temp @kind object;
  #L166c36.  goto L166be0;
  #L166c38.  switch v0
                  | 1 => goto L166c0a
                  | else => goto L166c00;
}
procedure `java.lang.String` `getDatabaseName`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v1 @kind this) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.getDatabaseName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L166c54.  v0:= "Android SQLite" @kind object;
  #L166c58.  return v0 @kind object;
}
procedure `java.lang.String` `getDriverClassName`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v1 @kind this) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.getDriverClassName:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L166c6c.  v0:= 0I;
  #L166c6e.  return v0 @kind object;
}
procedure `boolean` `isBatchUseTransaction`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v1 @kind this) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.isBatchUseTransaction:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L166c80.  v0:= 1I;
  #L166c82.  return v0;
}
procedure `boolean` `isDatabaseUrlThisType`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.isDatabaseUrlThisType:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L166c94.  v0:= 1I;
  #L166c96.  return v0;
}
procedure `boolean` `isNestedSavePointsSupported`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v1 @kind this) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.isNestedSavePointsSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L166ca8.  v0:= 0I;
  #L166caa.  return v0;
}
procedure `void` `loadDriver`(`com.j256.ormlite.db.SqliteAndroidDatabaseType` v0 @kind this) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.loadDriver:()V` @AccessFlag PUBLIC {
    temp;

  #L166cbc.  return @kind void;
}

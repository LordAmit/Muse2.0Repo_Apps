record `com.j256.ormlite.stmt.mapped.MappedCreate` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
  `java.lang.String` `com.j256.ormlite.stmt.mapped.MappedCreate.dataClassName` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.stmt.mapped.MappedCreate.queryNextSequenceStmt` @AccessFlag PRIVATE_FINAL;
  `int` `com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedCreate` v1 @kind this, `com.j256.ormlite.table.TableInfo` v2 @kind object, `java.lang.String` v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1776b4.  call `<init>`(v1, v2, v3, v4) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L1776ba.  call temp:= `getDataClass`(v2) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L1776c0.  v0:= temp @kind object;
  #L1776c2.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1776c8.  v0:= temp @kind object;
  #L1776ca.  v1.`com.j256.ormlite.stmt.mapped.MappedCreate.dataClassName` @type ^`java.lang.String` := v0 @kind object;
  #L1776ce.  v1.`com.j256.ormlite.stmt.mapped.MappedCreate.queryNextSequenceStmt` @type ^`java.lang.String` := v5 @kind object;
  #L1776d2.  v1.`com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex` @type ^`int` := v6;
  #L1776d6.  return @kind void;
}
procedure `void` `assignIdValue`(`com.j256.ormlite.stmt.mapped.MappedCreate` v5 @kind this, `java.lang.Object` v6 @kind object, `java.lang.Number` v7 @kind object, `java.lang.String` v8 @kind object, `com.j256.ormlite.dao.ObjectCache` v9 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.assignIdValue:(Ljava/lang/Object;Ljava/lang/Number;Ljava/lang/String;Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1776e8.  v0:= v5.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L1776ec.  call temp:= `assignIdValue`(v0, v6, v7, v9) @signature `Lcom/j256/ormlite/field/FieldType;.assignIdValue:(Ljava/lang/Object;Ljava/lang/Number;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @kind virtual;
  #L1776f2.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedCreate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L1776f6.  v1:= `@@com.j256.ormlite.logger.Log$Level.DEBUG` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L1776fa.  call temp:= `isLevelEnabled`(v0, v1) @signature `Lcom/j256/ormlite/logger/Logger;.isLevelEnabled:(Lcom/j256/ormlite/logger/Log$Level;)Z` @kind virtual;
  #L177700.  v0:= temp;
  #L177702.  if v0 == 0 then goto L177742;
  #L177706.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedCreate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L17770a.  v1:= "assigned id '{}' from {} to '{}' in {} object" @kind object;
  #L17770e.  v2:= 4I;
  #L177710.  v2:= new `java.lang.Object`[v2];
  #L177714.  v3:= 0I;
  #L177716.  v2[v3]:= v7 @kind object;
  #L17771a.  v3:= 1I;
  #L17771c.  v2[v3]:= v8 @kind object;
  #L177720.  v3:= 2I;
  #L177722.  v4:= v5.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177726.  call temp:= `getFieldName`(v4) @signature `Lcom/j256/ormlite/field/FieldType;.getFieldName:()Ljava/lang/String;` @kind virtual;
  #L17772c.  v4:= temp @kind object;
  #L17772e.  v2[v3]:= v4 @kind object;
  #L177732.  v3:= 3I;
  #L177734.  v4:= v5.`com.j256.ormlite.stmt.mapped.MappedCreate.dataClassName` @type ^`java.lang.String` @kind object;
  #L177738.  v2[v3]:= v4 @kind object;
  #L17773c.  call `debug`(v0, v1, v2) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L177742.  return @kind void;
}
procedure `void` `assignSequenceId`(`com.j256.ormlite.stmt.mapped.MappedCreate` v6 @kind this, `com.j256.ormlite.support.DatabaseConnection` v7 @kind object, `java.lang.Object` v8 @kind object, `com.j256.ormlite.dao.ObjectCache` v9 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.assignSequenceId:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L177754.  v0:= v6.`com.j256.ormlite.stmt.mapped.MappedCreate.queryNextSequenceStmt` @type ^`java.lang.String` @kind object;
  #L177758.  call temp:= `queryForLong`(v7, v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;)J` @kind interface;
  #L17775e.  v0:= temp @kind wide;
  #L177760.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedCreate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177764.  v3:= "queried for sequence {} using stmt: {}" @kind object;
  #L177768.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L17776e.  v4:= temp @kind object;
  #L177770.  v5:= v6.`com.j256.ormlite.stmt.mapped.MappedCreate.queryNextSequenceStmt` @type ^`java.lang.String` @kind object;
  #L177774.  call `debug`(v2, v3, v4, v5) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L17777a.  v2:= 0L;
  #L17777e.  v2:= lcmp(v0, v2);
  #L177782.  if v2 != 0 then goto L1777bc;
  #L177786.  v0:= new `java.sql.SQLException`;
  #L17778a.  v1:= new `java.lang.StringBuilder`;
  #L17778e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L177794.  v2:= "Should not have returned 0 for stmt: " @kind object;
  #L177798.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17779e.  v1:= temp @kind object;
  #L1777a0.  v2:= v6.`com.j256.ormlite.stmt.mapped.MappedCreate.queryNextSequenceStmt` @type ^`java.lang.String` @kind object;
  #L1777a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1777aa.  v1:= temp @kind object;
  #L1777ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1777b2.  v1:= temp @kind object;
  #L1777b4.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1777ba.  throw v0;
  #L1777bc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1777c2.  v0:= temp @kind object;
  #L1777c4.  v1:= "sequence" @kind object;
  #L1777c8.  call `assignIdValue`(v6, v8, v0, v1, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.assignIdValue:(Ljava/lang/Object;Ljava/lang/Number;Ljava/lang/String;Lcom/j256/ormlite/dao/ObjectCache;)V` @kind direct;
  #L1777ce.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedCreate` `build`(`com.j256.ormlite.db.DatabaseType` v13 @kind object, `com.j256.ormlite.table.TableInfo` v14 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedCreate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1777e0.  v12:= 44I;
  #L1777e4.  v6:= 1I;
  #L1777e6.  v1:= 0I;
  #L1777e8.  v8:= new `java.lang.StringBuilder`;
  #L1777ec.  v0:= 128I;
  #L1777f0.  call `<init>`(v8, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1777f6.  v0:= "INSERT INTO " @kind object;
  #L1777fa.  call temp:= `getTableName`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L177800.  v2:= temp @kind object;
  #L177802.  call `appendTableName`(v13, v8, v0, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L177808.  v5:= -1I;
  #L17780a.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L177810.  v3:= temp @kind object;
  #L177812.  v4:= length @variable v3;
  #L177814.  v2:= v1;
  #L177816.  v0:= v1;
  #L177818.  if v2 >= v4 then goto L177844;
  #L17781c.  v7:= v3[v2] @kind object;
  #L177820.  call temp:= `isFieldCreatable`(v13, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.isFieldCreatable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L177826.  v9:= temp;
  #L177828.  if v9 == 0 then goto L17783e;
  #L17782c.  call temp:= `isVersion`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.isVersion:()Z` @kind virtual;
  #L177832.  v7:= temp;
  #L177834.  if v7 == 0 then goto L17783a;
  #L177838.  v5:= v0;
  #L17783a.  v0:= v0 + 1;
  #L17783e.  v2:= v2 + 1;
  #L177842.  goto L177818;
  #L177844.  v3:= new `com.j256.ormlite.field.FieldType`[v0];
  #L177848.  if v0 != 0 then goto L177878;
  #L17784c.  call `appendInsertNoColumns`(v13, v8) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendInsertNoColumns:(Ljava/lang/StringBuilder;)V` @kind interface;
  #L177852.  call temp:= `getIdField`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L177858.  v0:= temp @kind object;
  #L17785a.  call temp:= `buildQueryNextSequence`(v13, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.buildQueryNextSequence:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;)Ljava/lang/String;` @kind static;
  #L177860.  v4:= temp @kind object;
  #L177862.  v0:= new `com.j256.ormlite.stmt.mapped.MappedCreate`;
  #L177866.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17786c.  v2:= temp @kind object;
  #L17786e.  v1:= v14 @kind object;
  #L177870.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;I)V` @kind direct;
  #L177876.  return v0 @kind object;
  #L177878.  v0:= 40I;
  #L17787c.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L177882.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L177888.  v9:= temp @kind object;
  #L17788a.  v10:= length @variable v9;
  #L17788c.  v7:= v1;
  #L17788e.  v0:= v6;
  #L177890.  v2:= v1;
  #L177892.  if v7 >= v10 then goto L1778d0;
  #L177896.  v11:= v9[v7] @kind object;
  #L17789a.  call temp:= `isFieldCreatable`(v13, v11) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.isFieldCreatable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L1778a0.  v4:= temp;
  #L1778a2.  if v4 != 0 then goto L1778ae;
  #L1778a6.  v4:= v7 + 1;
  #L1778aa.  v7:= v4;
  #L1778ac.  goto L177892;
  #L1778ae.  if v0 == 0 then goto L1778c8;
  #L1778b2.  v0:= v1;
  #L1778b4.  v4:= 0I;
  #L1778b6.  call `appendFieldColumnName`(v13, v8, v11, v4) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L1778bc.  v4:= v2 + 1;
  #L1778c0.  v3[v2]:= v11 @kind object;
  #L1778c4.  v2:= v4;
  #L1778c6.  goto L1778a6;
  #L1778c8.  call temp:= `append`(v8, v12) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1778ce.  goto L1778b4;
  #L1778d0.  v0:= ") VALUES (" @kind object;
  #L1778d4.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1778da.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L1778e0.  v4:= temp @kind object;
  #L1778e2.  v7:= length @variable v4;
  #L1778e4.  v2:= v1;
  #L1778e6.  v0:= v6;
  #L1778e8.  if v2 >= v7 then goto L17791c;
  #L1778ec.  v6:= v4[v2] @kind object;
  #L1778f0.  call temp:= `isFieldCreatable`(v13, v6) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.isFieldCreatable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L1778f6.  v6:= temp;
  #L1778f8.  if v6 != 0 then goto L177902;
  #L1778fc.  v2:= v2 + 1;
  #L177900.  goto L1778e8;
  #L177902.  if v0 == 0 then goto L177914;
  #L177906.  v0:= v1;
  #L177908.  v6:= 63I;
  #L17790c.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L177912.  goto L1778fc;
  #L177914.  call temp:= `append`(v8, v12) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L17791a.  goto L177908;
  #L17791c.  v0:= 41I;
  #L177920.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L177926.  goto L177852;
}
procedure `java.lang.String` `buildQueryNextSequence`(`com.j256.ormlite.db.DatabaseType` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.buildQueryNextSequence:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L177938.  v0:= 0I;
  #L17793a.  if v4 != 0 then goto L177940;
  #L17793e.  return v0 @kind object;
  #L177940.  call temp:= `getGeneratedIdSequence`(v4) @signature `Lcom/j256/ormlite/field/FieldType;.getGeneratedIdSequence:()Ljava/lang/String;` @kind virtual;
  #L177946.  v1:= temp @kind object;
  #L177948.  if v1 == 0 then goto L17793e;
  #L17794c.  v0:= new `java.lang.StringBuilder`;
  #L177950.  v2:= 64I;
  #L177954.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L17795a.  call `appendSelectNextValFromSequence`(v3, v0, v1) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendSelectNextValFromSequence:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L177960.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L177966.  v0:= temp @kind object;
  #L177968.  goto L17793e;
}
procedure `boolean` `foreignCollectionsAreAssigned`(`com.j256.ormlite.stmt.mapped.MappedCreate` v4 @kind this, `com.j256.ormlite.field.FieldType`[] v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.foreignCollectionsAreAssigned:([Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17797c.  v0:= 0I;
  #L17797e.  v2:= length @variable v5;
  #L177980.  v1:= v0;
  #L177982.  if v1 >= v2 then goto L17799e;
  #L177986.  v3:= v5[v1] @kind object;
  #L17798a.  call temp:= `extractJavaFieldValue`(v3, v6) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L177990.  v3:= temp @kind object;
  #L177992.  if v3 != 0 then goto L177998;
  #L177996.  return v0;
  #L177998.  v1:= v1 + 1;
  #L17799c.  goto L177982;
  #L17799e.  v0:= 1I;
  #L1779a0.  goto L177996;
}
procedure `boolean` `isFieldCreatable`(`com.j256.ormlite.db.DatabaseType` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.isFieldCreatable:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1779b4.  v1:= 1I;
  #L1779b6.  v0:= 0I;
  #L1779b8.  call temp:= `isForeignCollection`(v4) @signature `Lcom/j256/ormlite/field/FieldType;.isForeignCollection:()Z` @kind virtual;
  #L1779be.  v2:= temp;
  #L1779c0.  if v2 == 0 then goto L1779c6;
  #L1779c4.  return v0;
  #L1779c6.  call temp:= `isReadOnly`(v4) @signature `Lcom/j256/ormlite/field/FieldType;.isReadOnly:()Z` @kind virtual;
  #L1779cc.  v2:= temp;
  #L1779ce.  if v2 != 0 then goto L1779c4;
  #L1779d2.  call temp:= `isIdSequenceNeeded`(v3) @signature `Lcom/j256/ormlite/db/DatabaseType;.isIdSequenceNeeded:()Z` @kind interface;
  #L1779d8.  v2:= temp;
  #L1779da.  if v2 == 0 then goto L1779ee;
  #L1779de.  call temp:= `isSelectSequenceBeforeInsert`(v3) @signature `Lcom/j256/ormlite/db/DatabaseType;.isSelectSequenceBeforeInsert:()Z` @kind interface;
  #L1779e4.  v2:= temp;
  #L1779e6.  if v2 == 0 then goto L1779ee;
  #L1779ea.  v0:= v1;
  #L1779ec.  goto L1779c4;
  #L1779ee.  call temp:= `isGeneratedId`(v4) @signature `Lcom/j256/ormlite/field/FieldType;.isGeneratedId:()Z` @kind virtual;
  #L1779f4.  v2:= temp;
  #L1779f6.  if v2 == 0 then goto L177a12;
  #L1779fa.  call temp:= `isSelfGeneratedId`(v4) @signature `Lcom/j256/ormlite/field/FieldType;.isSelfGeneratedId:()Z` @kind virtual;
  #L177a00.  v2:= temp;
  #L177a02.  if v2 != 0 then goto L177a12;
  #L177a06.  call temp:= `isAllowGeneratedIdInsert`(v4) @signature `Lcom/j256/ormlite/field/FieldType;.isAllowGeneratedIdInsert:()Z` @kind virtual;
  #L177a0c.  v2:= temp;
  #L177a0e.  if v2 == 0 then goto L1779c4;
  #L177a12.  v0:= v1;
  #L177a14.  goto L1779c4;
}
procedure `int` `insert`(`com.j256.ormlite.stmt.mapped.MappedCreate` v9 @kind this, `com.j256.ormlite.db.DatabaseType` v10 @kind object, `com.j256.ormlite.support.DatabaseConnection` v11 @kind object, `java.lang.Object` v12 @kind object, `com.j256.ormlite.dao.ObjectCache` v13 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.insert:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L177a28.  v1:= 0I;
  #L177a2a.  v2:= 0I;
  #L177a2c.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177a30.  if v0 == 0 then goto L177cf0;
  #L177a34.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177a38.  call temp:= `isAllowGeneratedIdInsert`(v0) @signature `Lcom/j256/ormlite/field/FieldType;.isAllowGeneratedIdInsert:()Z` @kind virtual;
  #L177a3e.  v0:= temp;
  #L177a40.  if v0 == 0 then goto L177aca;
  #L177a44.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177a48.  call temp:= `isObjectsFieldValueDefault`(v0, v12) @signature `Lcom/j256/ormlite/field/FieldType;.isObjectsFieldValueDefault:(Ljava/lang/Object;)Z` @kind virtual;
  #L177a4e.  v0:= temp;
  #L177a50.  if v0 != 0 then goto L177aca;
  #L177a54.  v0:= v1;
  #L177a56.  v3:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177a5a.  call temp:= `isSelfGeneratedId`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.isSelfGeneratedId:()Z` @kind virtual;
  #L177a60.  v3:= temp;
  #L177a62.  if v3 == 0 then goto L177ace;
  #L177a66.  v3:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177a6a.  call temp:= `isGeneratedId`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.isGeneratedId:()Z` @kind virtual;
  #L177a70.  v3:= temp;
  #L177a72.  if v3 == 0 then goto L177ace;
  #L177a76.  if v0 == 0 then goto L177cf0;
  #L177a7a.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177a7e.  v3:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177a82.  call temp:= `generateId`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.generateId:()Ljava/lang/Object;` @kind virtual;
  #L177a88.  v3:= temp @kind object;
  #L177a8a.  call `assignField`(v0, v12, v3, v1, v13) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L177a90.  v3:= v2 @kind object;
  #Try_start0.  
  #L177a92.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L177a96.  call temp:= `isForeignAutoCreate`(v0) @signature `Lcom/j256/ormlite/table/TableInfo;.isForeignAutoCreate:()Z` @kind virtual;
  #L177a9c.  v0:= temp;
  #L177a9e.  if v0 == 0 then goto L177b8c;
  #L177aa2.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L177aa6.  call temp:= `getFieldTypes`(v0) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L177aac.  v0:= temp @kind object;
  #L177aae.  v4:= length @variable v0;
  #L177ab0.  if v1 >= v4 then goto L177b8c;
  #L177ab4.  v5:= v0[v1] @kind object;
  #L177ab8.  call temp:= `isForeignAutoCreate`(v5) @signature `Lcom/j256/ormlite/field/FieldType;.isForeignAutoCreate:()Z` @kind virtual;
  #Try_end0.  
  #L177abe.  v6:= temp;
  #L177ac0.  if v6 != 0 then goto L177b1a;
  #L177ac4.  v1:= v1 + 1;
  #L177ac8.  goto L177ab0;
  #L177aca.  v0:= 1I;
  #L177acc.  goto L177a56;
  #L177ace.  v3:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177ad2.  call temp:= `isGeneratedIdSequence`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.isGeneratedIdSequence:()Z` @kind virtual;
  #L177ad8.  v3:= temp;
  #L177ada.  if v3 == 0 then goto L177af8;
  #L177ade.  call temp:= `isSelectSequenceBeforeInsert`(v10) @signature `Lcom/j256/ormlite/db/DatabaseType;.isSelectSequenceBeforeInsert:()Z` @kind interface;
  #L177ae4.  v3:= temp;
  #L177ae6.  if v3 == 0 then goto L177af8;
  #L177aea.  if v0 == 0 then goto L177cf0;
  #L177aee.  call `assignSequenceId`(v9, v11, v12, v13) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.assignSequenceId:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)V` @kind direct;
  #L177af4.  v3:= v2 @kind object;
  #L177af6.  goto L177a92;
  #L177af8.  v3:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177afc.  call temp:= `isGeneratedId`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.isGeneratedId:()Z` @kind virtual;
  #L177b02.  v3:= temp;
  #L177b04.  if v3 == 0 then goto L177cf0;
  #L177b08.  if v0 == 0 then goto L177cf0;
  #L177b0c.  v0:= new `com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder`;
  #L177b10.  call `<init>`(v0, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.<init>:(Lcom/j256/ormlite/stmt/mapped/MappedCreate$1;)V` @kind direct;
  #L177b16.  v3:= v0 @kind object;
  #L177b18.  goto L177a92;
  #Try_start1.  
  #L177b1a.  call temp:= `extractRawJavaFieldValue`(v5, v12) @signature `Lcom/j256/ormlite/field/FieldType;.extractRawJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L177b20.  v6:= temp @kind object;
  #L177b22.  if v6 == 0 then goto L177ac4;
  #L177b26.  call temp:= `getForeignIdField`(v5) @signature `Lcom/j256/ormlite/field/FieldType;.getForeignIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L177b2c.  v7:= temp @kind object;
  #L177b2e.  call temp:= `isObjectsFieldValueDefault`(v7, v6) @signature `Lcom/j256/ormlite/field/FieldType;.isObjectsFieldValueDefault:(Ljava/lang/Object;)Z` @kind virtual;
  #L177b34.  v7:= temp;
  #L177b36.  if v7 == 0 then goto L177ac4;
  #L177b3a.  call temp:= `createWithForeignDao`(v5, v6) @signature `Lcom/j256/ormlite/field/FieldType;.createWithForeignDao:(Ljava/lang/Object;)I` @kind virtual;
  #Try_end1.  
  #L177b40.  goto L177ac4;
  #L177b42.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L177b44.  v1:= new `java.lang.StringBuilder`;
  #L177b48.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L177b4e.  v2:= "Unable to run insert stmt on object " @kind object;
  #L177b52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177b58.  v1:= temp @kind object;
  #L177b5a.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177b60.  v1:= temp @kind object;
  #L177b62.  v2:= ": " @kind object;
  #L177b66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177b6c.  v1:= temp @kind object;
  #L177b6e.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.statement` @type ^`java.lang.String` @kind object;
  #L177b72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177b78.  v1:= temp @kind object;
  #L177b7a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L177b80.  v1:= temp @kind object;
  #L177b82.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L177b88.  v0:= temp @kind object;
  #L177b8a.  throw v0;
  #Try_start2.  
  #L177b8c.  call temp:= `getFieldObjects`(v9, v12) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L177b92.  v1:= temp @kind object;
  #L177b94.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex` @type ^`int`;
  #L177b98.  if v0 < 0 then goto L177cea;
  #L177b9c.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex` @type ^`int`;
  #L177ba0.  v0:= v1[v0] @kind object;
  #L177ba4.  if v0 != 0 then goto L177cea;
  #L177ba8.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L177bac.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex` @type ^`int`;
  #L177bb0.  v2:= v0[v2] @kind object;
  #L177bb4.  v0:= 0I;
  #L177bb6.  call temp:= `moveToNextValue`(v2, v0) @signature `Lcom/j256/ormlite/field/FieldType;.moveToNextValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L177bbc.  v0:= temp @kind object;
  #L177bbe.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex` @type ^`int`;
  #L177bc2.  call temp:= `convertJavaFieldToSqlArgValue`(v2, v0) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L177bc8.  v2:= temp @kind object;
  #L177bca.  v1[v4]:= v2 @kind object;
  #Try_end2.  
  #Try_start3.  
  #L177bce.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.statement` @type ^`java.lang.String` @kind object;
  #L177bd2.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L177bd6.  call temp:= `insert`(v11, v2, v1, v4, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @kind interface;
  #Try_end3.  
  #L177bdc.  v2:= temp;
  #Try_start4.  
  #L177bde.  v4:= `@@com.j256.ormlite.stmt.mapped.MappedCreate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177be2.  v5:= "insert data with statement '{}' and {} args, changed {} rows" @kind object;
  #L177be6.  v6:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.statement` @type ^`java.lang.String` @kind object;
  #L177bea.  v7:= length @variable v1;
  #L177bec.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L177bf2.  v7:= temp @kind object;
  #L177bf4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L177bfa.  v8:= temp @kind object;
  #L177bfc.  call `debug`(v4, v5, v6, v7, v8) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L177c02.  v4:= length @variable v1;
  #L177c04.  if v4 <= 0 then goto L177c16;
  #L177c08.  v4:= `@@com.j256.ormlite.stmt.mapped.MappedCreate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177c0c.  v5:= "insert arguments: {}" @kind object;
  #L177c10.  call `trace`(v4, v5, v1) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L177c16.  if v2 <= 0 then goto L177ce8;
  #L177c1a.  if v0 == 0 then goto L177c34;
  #L177c1e.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L177c22.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.versionFieldTypeIndex` @type ^`int`;
  #L177c26.  v1:= v1[v4] @kind object;
  #L177c2a.  v4:= 0I;
  #L177c2c.  v5:= 0I;
  #L177c2e.  call `assignField`(v1, v12, v0, v4, v5) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L177c34.  if v3 == 0 then goto L177cb6;
  #L177c38.  call temp:= `getKey`(v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.getKey:()Ljava/lang/Number;` @kind virtual;
  #L177c3e.  v0:= temp @kind object;
  #L177c40.  if v0 != 0 then goto L177c88;
  #L177c44.  v0:= new `java.sql.SQLException`;
  #L177c48.  v1:= "generated-id key was not set by the update call, maybe a schema mismatch between entity and database table?" @kind object;
  #L177c4c.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L177c52.  throw v0;
  #L177c54.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L177c56.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedCreate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177c5a.  v3:= "insert data with statement '{}' and {} args, threw exception: {}" @kind object;
  #L177c5e.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.statement` @type ^`java.lang.String` @kind object;
  #L177c62.  v5:= length @variable v1;
  #L177c64.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L177c6a.  v5:= temp @kind object;
  #L177c6c.  call `debug`(v2, v3, v4, v5, v0) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L177c72.  v2:= length @variable v1;
  #L177c74.  if v2 <= 0 then goto L177c86;
  #L177c78.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedCreate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177c7c.  v3:= "insert arguments: {}" @kind object;
  #L177c80.  call `trace`(v2, v3, v1) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L177c86.  throw v0;
  #L177c88.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L177c8e.  v4:= temp @kind wide;
  #L177c90.  v6:= 0L;
  #L177c94.  v1:= lcmp(v4, v6);
  #L177c98.  if v1 != 0 then goto L177cac;
  #L177c9c.  v0:= new `java.sql.SQLException`;
  #L177ca0.  v1:= "generated-id key must not be 0 value, maybe a schema mismatch between entity and database table?" @kind object;
  #L177ca4.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L177caa.  throw v0;
  #L177cac.  v1:= "keyholder" @kind object;
  #L177cb0.  call `assignIdValue`(v9, v12, v0, v1, v13) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.assignIdValue:(Ljava/lang/Object;Ljava/lang/Number;Ljava/lang/String;Lcom/j256/ormlite/dao/ObjectCache;)V` @kind direct;
  #L177cb6.  if v13 == 0 then goto L177ce8;
  #L177cba.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L177cbe.  call temp:= `getForeignCollections`(v0) @signature `Lcom/j256/ormlite/table/TableInfo;.getForeignCollections:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L177cc4.  v0:= temp @kind object;
  #L177cc6.  call temp:= `foreignCollectionsAreAssigned`(v9, v0, v12) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate;.foreignCollectionsAreAssigned:([Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Z` @kind direct;
  #L177ccc.  v0:= temp;
  #L177cce.  if v0 == 0 then goto L177ce8;
  #L177cd2.  v0:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177cd6.  call temp:= `extractJavaFieldValue`(v0, v12) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L177cdc.  v0:= temp @kind object;
  #L177cde.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedCreate.clazz` @type ^`java.lang.Class` @kind object;
  #L177ce2.  call `put`(v13, v1, v0, v12) @signature `Lcom/j256/ormlite/dao/ObjectCache;.put:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #Try_end4.  
  #L177ce8.  return v2;
  #L177cea.  v0:= v2 @kind object;
  #L177cec.  goto L177bce;
  #L177cf0.  v3:= v2 @kind object;
  #L177cf2.  goto L177a92;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L177b42;
  catch `java.sql.SQLException` @[Try_start1..Try_end1] goto L177b42;
  catch `java.sql.SQLException` @[Try_start2..Try_end2] goto L177b42;
  catch `java.sql.SQLException` @[Try_start3..Try_end3] goto L177c54;
  catch `java.sql.SQLException` @[Try_start4..Try_end4] goto L177b42;
}

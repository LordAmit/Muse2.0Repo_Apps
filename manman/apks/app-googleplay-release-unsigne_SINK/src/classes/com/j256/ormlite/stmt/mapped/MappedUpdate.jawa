record `com.j256.ormlite.stmt.mapped.MappedUpdate` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
  `com.j256.ormlite.field.FieldType` `com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @AccessFlag PRIVATE_FINAL;
  `int` `com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedUpdate` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1788a8.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L1788ae.  v0.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` := v4 @kind object;
  #L1788b2.  v0.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @type ^`int` := v5;
  #L1788b6.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedUpdate` `build`(`com.j256.ormlite.db.DatabaseType` v13 @kind object, `com.j256.ormlite.table.TableInfo` v14 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedUpdate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1788c8.  call temp:= `getIdField`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L1788ce.  v7:= temp @kind object;
  #L1788d0.  if v7 != 0 then goto L17891a;
  #L1788d4.  v0:= new `java.sql.SQLException`;
  #L1788d8.  v1:= new `java.lang.StringBuilder`;
  #L1788dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1788e2.  v2:= "Cannot update " @kind object;
  #L1788e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1788ec.  v1:= temp @kind object;
  #L1788ee.  call temp:= `getDataClass`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L1788f4.  v2:= temp @kind object;
  #L1788f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1788fc.  v1:= temp @kind object;
  #L1788fe.  v2:= " because it doesn't have an id field" @kind object;
  #L178902.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178908.  v1:= temp @kind object;
  #L17890a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L178910.  v1:= temp @kind object;
  #L178912.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L178918.  throw v0;
  #L17891a.  v8:= new `java.lang.StringBuilder`;
  #L17891e.  v0:= 64I;
  #L178922.  call `<init>`(v8, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L178928.  v0:= "UPDATE " @kind object;
  #L17892c.  call temp:= `getTableName`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L178932.  v1:= temp @kind object;
  #L178934.  call `appendTableName`(v13, v8, v0, v1) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L17893a.  v2:= 1I;
  #L17893c.  v1:= 0I;
  #L17893e.  v4:= 0I;
  #L178940.  v5:= -1I;
  #L178942.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L178948.  v6:= temp @kind object;
  #L17894a.  v9:= length @variable v6;
  #L17894c.  v0:= 0I;
  #L17894e.  v3:= v0;
  #L178950.  v0:= v1;
  #L178952.  if v3 >= v9 then goto L178982;
  #L178956.  v1:= v6[v3] @kind object;
  #L17895a.  call temp:= `isFieldUpdatable`(v1, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L178960.  v10:= temp;
  #L178962.  if v10 == 0 then goto L17897a;
  #L178966.  call temp:= `isVersion`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isVersion:()Z` @kind virtual;
  #L17896c.  v10:= temp;
  #L17896e.  if v10 == 0 then goto L178976;
  #L178972.  v5:= v0;
  #L178974.  v4:= v1 @kind object;
  #L178976.  v0:= v0 + 1;
  #L17897a.  v1:= v3 + 1;
  #L17897e.  v3:= v1;
  #L178980.  goto L178952;
  #L178982.  v0:= v0 + 1;
  #L178986.  if v4 == 0 then goto L17898e;
  #L17898a.  v0:= v0 + 1;
  #L17898e.  v3:= new `com.j256.ormlite.field.FieldType`[v0];
  #L178992.  v1:= 0I;
  #L178994.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L17899a.  v9:= temp @kind object;
  #L17899c.  v10:= length @variable v9;
  #L17899e.  v0:= 0I;
  #L1789a0.  v6:= v0;
  #L1789a2.  v0:= v2;
  #L1789a4.  if v6 >= v10 then goto L178a08;
  #L1789a8.  v11:= v9[v6] @kind object;
  #L1789ac.  call temp:= `isFieldUpdatable`(v11, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L1789b2.  v2:= temp;
  #L1789b4.  if v2 != 0 then goto L1789cc;
  #L1789b8.  v12:= v1;
  #L1789ba.  v1:= v0;
  #L1789bc.  v0:= v12;
  #L1789be.  v2:= v6 + 1;
  #L1789c2.  v6:= v2;
  #L1789c4.  v12:= v0;
  #L1789c6.  v0:= v1;
  #L1789c8.  v1:= v12;
  #L1789ca.  goto L1789a4;
  #L1789cc.  if v0 == 0 then goto L1789fc;
  #L1789d0.  v0:= "SET " @kind object;
  #L1789d4.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1789da.  v0:= 0I;
  #L1789dc.  v2:= 0I;
  #L1789de.  call `appendFieldColumnName`(v13, v8, v11, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L1789e4.  v2:= v1 + 1;
  #L1789e8.  v3[v1]:= v11 @kind object;
  #L1789ec.  v1:= "= ?" @kind object;
  #L1789f0.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1789f6.  v1:= v0;
  #L1789f8.  v0:= v2;
  #L1789fa.  goto L1789be;
  #L1789fc.  v2:= ", " @kind object;
  #L178a00.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178a06.  goto L1789dc;
  #L178a08.  v0:= 32I;
  #L178a0c.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L178a12.  v0:= 0I;
  #L178a14.  call `appendWhereFieldEq`(v13, v7, v8, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L178a1a.  v0:= v1 + 1;
  #L178a1e.  v3[v1]:= v7 @kind object;
  #L178a22.  if v4 == 0 then goto L178a4a;
  #L178a26.  v1:= " AND " @kind object;
  #L178a2a.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178a30.  v1:= 0I;
  #L178a32.  call `appendFieldColumnName`(v13, v8, v4, v1) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L178a38.  v1:= "= ?" @kind object;
  #L178a3c.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178a42.  v1:= v0 + 1;
  #L178a46.  v3[v0]:= v4 @kind object;
  #L178a4a.  v0:= new `com.j256.ormlite.stmt.mapped.MappedUpdate`;
  #L178a4e.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L178a54.  v2:= temp @kind object;
  #L178a56.  v1:= v14 @kind object;
  #L178a58.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;I)V` @kind direct;
  #L178a5e.  return v0 @kind object;
}
procedure `boolean` `isFieldUpdatable`(`com.j256.ormlite.field.FieldType` v1 @kind object, `com.j256.ormlite.field.FieldType` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L178a70.  if v1 == v2 then goto L178a8c;
  #L178a74.  call temp:= `isForeignCollection`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isForeignCollection:()Z` @kind virtual;
  #L178a7a.  v0:= temp;
  #L178a7c.  if v0 != 0 then goto L178a8c;
  #L178a80.  call temp:= `isReadOnly`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isReadOnly:()Z` @kind virtual;
  #L178a86.  v0:= temp;
  #L178a88.  if v0 == 0 then goto L178a90;
  #L178a8c.  v0:= 0I;
  #L178a8e.  return v0;
  #L178a90.  v0:= 1I;
  #L178a92.  goto L178a8e;
}
procedure `int` `update`(`com.j256.ormlite.stmt.mapped.MappedUpdate` v9 @kind this, `com.j256.ormlite.support.DatabaseConnection` v10 @kind object, `java.lang.Object` v11 @kind object, `com.j256.ormlite.dao.ObjectCache` v12 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.update:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L178aa4.  v1:= 0I;
  #L178aa6.  v0:= 0I;
  #Try_start0.  
  #L178aa8.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L178aac.  v2:= length @variable v2;
  #L178aae.  v3:= 1I;
  #L178ab0.  if v2 > v3 then goto L178ab6;
  #L178ab4.  return v0;
  #L178ab6.  call temp:= `getFieldObjects`(v9, v11) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L178abc.  v3:= temp @kind object;
  #L178abe.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178ac2.  if v2 == 0 then goto L178bf8;
  #L178ac6.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178aca.  call temp:= `extractJavaFieldValue`(v1, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178ad0.  v1:= temp @kind object;
  #L178ad2.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178ad6.  call temp:= `moveToNextValue`(v2, v1) @signature `Lcom/j256/ormlite/field/FieldType;.moveToNextValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178adc.  v1:= temp @kind object;
  #L178ade.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @type ^`int`;
  #L178ae2.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178ae6.  call temp:= `convertJavaFieldToSqlArgValue`(v4, v1) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178aec.  v4:= temp @kind object;
  #L178aee.  v3[v2]:= v4 @kind object;
  #L178af2.  v2:= v1 @kind object;
  #L178af4.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L178af8.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L178afc.  call temp:= `update`(v10, v1, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L178b02.  v1:= temp;
  #L178b04.  if v1 <= 0 then goto L178b72;
  #L178b08.  if v2 == 0 then goto L178b1a;
  #L178b0c.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178b10.  v5:= 0I;
  #L178b12.  v6:= 0I;
  #L178b14.  call `assignField`(v4, v11, v2, v5, v6) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L178b1a.  if v12 == 0 then goto L178b72;
  #L178b1e.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178b22.  call temp:= `extractJavaFieldValue`(v2, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178b28.  v2:= temp @kind object;
  #L178b2a.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.clazz` @type ^`java.lang.Class` @kind object;
  #L178b2e.  call temp:= `get`(v12, v4, v2) @signature `Lcom/j256/ormlite/dao/ObjectCache;.get:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L178b34.  v2:= temp @kind object;
  #L178b36.  if v2 == 0 then goto L178b72;
  #L178b3a.  if v2 == v11 then goto L178b72;
  #L178b3e.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L178b42.  call temp:= `getFieldTypes`(v4) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L178b48.  v4:= temp @kind object;
  #L178b4a.  v5:= length @variable v4;
  #L178b4c.  if v0 >= v5 then goto L178b72;
  #L178b50.  v6:= v4[v0] @kind object;
  #L178b54.  v7:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178b58.  if v6 == v7 then goto L178b6c;
  #L178b5c.  call temp:= `extractJavaFieldValue`(v6, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178b62.  v7:= temp @kind object;
  #L178b64.  v8:= 0I;
  #L178b66.  call `assignField`(v6, v2, v7, v8, v12) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L178b6c.  v0:= v0 + 1;
  #L178b70.  goto L178b4c;
  #L178b72.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedUpdate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L178b76.  v2:= "update data with statement '{}' and {} args, changed {} rows" @kind object;
  #L178b7a.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L178b7e.  v5:= length @variable v3;
  #L178b80.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L178b86.  v5:= temp @kind object;
  #L178b88.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L178b8e.  v6:= temp @kind object;
  #L178b90.  call `debug`(v0, v2, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L178b96.  v0:= length @variable v3;
  #L178b98.  if v0 <= 0 then goto L178baa;
  #L178b9c.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedUpdate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L178ba0.  v2:= "update arguments: {}" @kind object;
  #L178ba4.  call `trace`(v0, v2, v3) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L178baa.  v0:= v1;
  #L178bac.  goto L178ab4;
  #L178bae.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L178bb0.  v1:= new `java.lang.StringBuilder`;
  #L178bb4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L178bba.  v2:= "Unable to run update stmt on object " @kind object;
  #L178bbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178bc4.  v1:= temp @kind object;
  #L178bc6.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178bcc.  v1:= temp @kind object;
  #L178bce.  v2:= ": " @kind object;
  #L178bd2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178bd8.  v1:= temp @kind object;
  #L178bda.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L178bde.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178be4.  v1:= temp @kind object;
  #L178be6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L178bec.  v1:= temp @kind object;
  #L178bee.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L178bf4.  v0:= temp @kind object;
  #L178bf6.  throw v0;
  #L178bf8.  v2:= v1 @kind object;
  #L178bfa.  goto L178af4;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L178bae;
}

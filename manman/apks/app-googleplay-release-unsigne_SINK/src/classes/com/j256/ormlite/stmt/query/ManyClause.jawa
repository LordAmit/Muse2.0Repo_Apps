record `com.j256.ormlite.stmt.query.ManyClause` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.Clause` @kind interface, `com.j256.ormlite.stmt.query.NeedsFutureClause` @kind interface {
  `com.j256.ormlite.stmt.query.Clause` `com.j256.ormlite.stmt.query.ManyClause.first` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.j256.ormlite.stmt.query.ManyClause.operation` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.query.Clause`[] `com.j256.ormlite.stmt.query.ManyClause.others` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.query.Clause` `com.j256.ormlite.stmt.query.ManyClause.second` @AccessFlag PRIVATE;
  `int` `com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.j256.ormlite.stmt.query.ManyClause.AND_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.ManyClause.OR_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v1 @kind this, `com.j256.ormlite.stmt.query.Clause` v2 @kind object, `com.j256.ormlite.stmt.query.Clause` v3 @kind object, `com.j256.ormlite.stmt.query.Clause`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:(Lcom/j256/ormlite/stmt/query/Clause;Lcom/j256/ormlite/stmt/query/Clause;[Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L179884.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17988a.  v1.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v2 @kind object;
  #L17988e.  v1.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v3 @kind object;
  #L179892.  v1.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v4 @kind object;
  #L179896.  v0:= 0I;
  #L179898.  v1.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L17989c.  v1.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v5 @kind object;
  #L1798a0.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v1 @kind this, `com.j256.ormlite.stmt.query.Clause` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:(Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1798b4.  v0:= 0I;
  #L1798b6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1798bc.  v1.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v2 @kind object;
  #L1798c0.  v1.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L1798c4.  v1.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v0 @kind object;
  #L1798c8.  v0:= 0I;
  #L1798ca.  v1.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L1798ce.  v1.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v3 @kind object;
  #L1798d2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v2 @kind this, `com.j256.ormlite.stmt.query.Clause`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:([Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1798e4.  v1:= 2I;
  #L1798e6.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1798ec.  v0:= 0I;
  #L1798ee.  v0:= v3[v0] @kind object;
  #L1798f2.  v2.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L1798f6.  v0:= length @variable v3;
  #L1798f8.  if v0 >= v1 then goto L179912;
  #L1798fc.  v0:= 0I;
  #L1798fe.  v2.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L179902.  v0:= length @variable v3;
  #L179904.  v2.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L179908.  v2.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v3 @kind object;
  #L17990c.  v2.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v4 @kind object;
  #L179910.  return @kind void;
  #L179912.  v0:= 1I;
  #L179914.  v0:= v3[v0] @kind object;
  #L179918.  v2.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L17991c.  v2.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v1;
  #L179920.  goto L179908;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.ManyClause` v3 @kind this, `com.j256.ormlite.db.DatabaseType` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.StringBuilder` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L179934.  v2:= 32I;
  #L179938.  v0:= 40I;
  #L17993c.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L179942.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L179946.  call `appendSql`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L17994c.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L179950.  if v0 == 0 then goto L17996e;
  #L179954.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` @kind object;
  #L179958.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17995e.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L179964.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L179968.  call `appendSql`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L17996e.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L179972.  if v0 == 0 then goto L1799a8;
  #L179976.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int`;
  #L17997a.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L17997e.  v1:= length @variable v1;
  #L179980.  if v0 >= v1 then goto L1799a8;
  #L179984.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` @kind object;
  #L179988.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17998e.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L179994.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L179998.  v1:= v1[v0] @kind object;
  #L17999c.  call `appendSql`(v1, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L1799a2.  v0:= v0 + 1;
  #L1799a6.  goto L17997a;
  #L1799a8.  v0:= ") " @kind object;
  #L1799ac.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1799b2.  return @kind void;
}
procedure `void` `setMissingClause`(`com.j256.ormlite.stmt.query.ManyClause` v0 @kind this, `com.j256.ormlite.stmt.query.Clause` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.setMissingClause:(Lcom/j256/ormlite/stmt/query/Clause;)V` @AccessFlag PUBLIC {
    temp;

  #L1799c4.  v0.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v1 @kind object;
  #L1799c8.  return @kind void;
}

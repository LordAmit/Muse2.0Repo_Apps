record `com.j256.ormlite.field.types.FloatObjectType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
global `com.j256.ormlite.field.types.FloatObjectType` `@@com.j256.ormlite.field.types.FloatObjectType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16e2b8.  v0:= new `com.j256.ormlite.field.types.FloatObjectType`;
  #L16e2bc.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.<init>:()V` @kind direct;
  #L16e2c2.  `@@com.j256.ormlite.field.types.FloatObjectType.singleTon` @type ^`com.j256.ormlite.field.types.FloatObjectType` := v0 @kind object;
  #L16e2c6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.FloatObjectType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16e2d8.  v0:= `@@com.j256.ormlite.field.SqlType.FLOAT` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L16e2dc.  v1:= 1I;
  #L16e2de.  v1:= new `java.lang.Class`[v1];
  #L16e2e2.  v2:= 0I;
  #L16e2e4.  v3:= constclass @type ^`java.lang.Float` @kind object;
  #L16e2e8.  v1[v2]:= v3 @kind object;
  #L16e2ec.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16e2f2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.FloatObjectType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L16e304.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16e30a.  return @kind void;
}
procedure `com.j256.ormlite.field.types.FloatObjectType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.getSingleton:()Lcom/j256/ormlite/field/types/FloatObjectType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16e31c.  v0:= `@@com.j256.ormlite.field.types.FloatObjectType.singleTon` @type ^`com.j256.ormlite.field.types.FloatObjectType` @kind object;
  #L16e320.  return v0 @kind object;
}
procedure `boolean` `isEscapedValue`(`com.j256.ormlite.field.types.FloatObjectType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.isEscapedValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e334.  v0:= 0I;
  #L16e336.  return v0;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.FloatObjectType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e348.  call temp:= `parseFloat`(v3) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L16e34e.  v0:= temp;
  #L16e350.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L16e356.  v0:= temp @kind object;
  #L16e358.  return v0 @kind object;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.FloatObjectType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e36c.  call temp:= `getFloat`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getFloat:(I)F` @kind interface;
  #L16e372.  v0:= temp;
  #L16e374.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L16e37a.  v0:= temp @kind object;
  #L16e37c.  return v0 @kind object;
}

record `com.j256.ormlite.stmt.mapped.MappedDelete` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedDelete` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L177d3c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L177d42.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedDelete` `build`(`com.j256.ormlite.db.DatabaseType` v5 @kind object, `com.j256.ormlite.table.TableInfo` v6 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedDelete;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L177d54.  call temp:= `getIdField`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L177d5a.  v0:= temp @kind object;
  #L177d5c.  if v0 != 0 then goto L177da6;
  #L177d60.  v0:= new `java.sql.SQLException`;
  #L177d64.  v1:= new `java.lang.StringBuilder`;
  #L177d68.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L177d6e.  v2:= "Cannot delete from " @kind object;
  #L177d72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177d78.  v1:= temp @kind object;
  #L177d7a.  call temp:= `getDataClass`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L177d80.  v2:= temp @kind object;
  #L177d82.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177d88.  v1:= temp @kind object;
  #L177d8a.  v2:= " because it doesn't have an id field" @kind object;
  #L177d8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177d94.  v1:= temp @kind object;
  #L177d96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L177d9c.  v1:= temp @kind object;
  #L177d9e.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L177da4.  throw v0;
  #L177da6.  v1:= new `java.lang.StringBuilder`;
  #L177daa.  v2:= 64I;
  #L177dae.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L177db4.  v2:= "DELETE FROM " @kind object;
  #L177db8.  call temp:= `getTableName`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L177dbe.  v3:= temp @kind object;
  #L177dc0.  call `appendTableName`(v5, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L177dc6.  v2:= 0I;
  #L177dc8.  call `appendWhereFieldEq`(v5, v0, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L177dce.  v2:= new `com.j256.ormlite.stmt.mapped.MappedDelete`;
  #L177dd2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L177dd8.  v1:= temp @kind object;
  #L177dda.  v3:= 1I;
  #L177ddc.  v3:= new `com.j256.ormlite.field.FieldType`[v3];
  #L177de0.  v4:= 0I;
  #L177de2.  v3[v4]:= v0 @kind object;
  #L177de6.  call `<init>`(v2, v6, v1, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L177dec.  return v2 @kind object;
}
procedure `int` `delete`(`com.j256.ormlite.stmt.mapped.MappedDelete` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.delete:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L177e00.  call temp:= `getFieldObjects`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L177e06.  v0:= temp @kind object;
  #L177e08.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L177e0c.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L177e10.  call temp:= `delete`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L177e16.  v1:= temp;
  #L177e18.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177e1c.  v3:= "delete data with statement '{}' and {} args, changed {} rows" @kind object;
  #L177e20.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L177e24.  v5:= length @variable v0;
  #L177e26.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L177e2c.  v5:= temp @kind object;
  #L177e2e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L177e34.  v6:= temp @kind object;
  #L177e36.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L177e3c.  v2:= length @variable v0;
  #L177e3e.  if v2 <= 0 then goto L177e50;
  #L177e42.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177e46.  v3:= "delete arguments: {}" @kind object;
  #L177e4a.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L177e50.  if v1 <= 0 then goto L177e6e;
  #L177e54.  if v10 == 0 then goto L177e6e;
  #L177e58.  v0:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L177e5c.  call temp:= `extractJavaFieldToSqlArgValue`(v0, v9) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L177e62.  v0:= temp @kind object;
  #L177e64.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.clazz` @type ^`java.lang.Class` @kind object;
  #L177e68.  call `remove`(v10, v2, v0) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #Try_end0.  
  #L177e6e.  return v1;
  #L177e70.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L177e72.  v1:= new `java.lang.StringBuilder`;
  #L177e76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L177e7c.  v2:= "Unable to run delete stmt on object " @kind object;
  #L177e80.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177e86.  v1:= temp @kind object;
  #L177e88.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177e8e.  v1:= temp @kind object;
  #L177e90.  v2:= ": " @kind object;
  #L177e94.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177e9a.  v1:= temp @kind object;
  #L177e9c.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L177ea0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177ea6.  v1:= temp @kind object;
  #L177ea8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L177eae.  v1:= temp @kind object;
  #L177eb0.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L177eb6.  v0:= temp @kind object;
  #L177eb8.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L177e70;
}
procedure `int` `deleteById`(`com.j256.ormlite.stmt.mapped.MappedDelete` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.deleteById:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L177edc.  v0:= 1I;
  #Try_start0.  
  #L177ede.  v0:= new `java.lang.Object`[v0];
  #L177ee2.  v1:= 0I;
  #L177ee4.  call temp:= `convertIdToFieldObject`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.convertIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L177eea.  v2:= temp @kind object;
  #L177eec.  v0[v1]:= v2 @kind object;
  #L177ef0.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L177ef4.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L177ef8.  call temp:= `delete`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L177efe.  v1:= temp;
  #L177f00.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177f04.  v3:= "delete data with statement '{}' and {} args, changed {} rows" @kind object;
  #L177f08.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L177f0c.  v5:= length @variable v0;
  #L177f0e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L177f14.  v5:= temp @kind object;
  #L177f16.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L177f1c.  v6:= temp @kind object;
  #L177f1e.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L177f24.  v2:= length @variable v0;
  #L177f26.  if v2 <= 0 then goto L177f38;
  #L177f2a.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L177f2e.  v3:= "delete arguments: {}" @kind object;
  #L177f32.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L177f38.  if v1 <= 0 then goto L177f4a;
  #L177f3c.  if v10 == 0 then goto L177f4a;
  #L177f40.  v0:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.clazz` @type ^`java.lang.Class` @kind object;
  #L177f44.  call `remove`(v10, v0, v9) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #Try_end0.  
  #L177f4a.  return v1;
  #L177f4c.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L177f4e.  v1:= new `java.lang.StringBuilder`;
  #L177f52.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L177f58.  v2:= "Unable to run deleteById stmt on id " @kind object;
  #L177f5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177f62.  v1:= temp @kind object;
  #L177f64.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177f6a.  v1:= temp @kind object;
  #L177f6c.  v2:= ": " @kind object;
  #L177f70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177f76.  v1:= temp @kind object;
  #L177f78.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L177f7c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L177f82.  v1:= temp @kind object;
  #L177f84.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L177f8a.  v1:= temp @kind object;
  #L177f8c.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L177f92.  v0:= temp @kind object;
  #L177f94.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L177f4c;
}

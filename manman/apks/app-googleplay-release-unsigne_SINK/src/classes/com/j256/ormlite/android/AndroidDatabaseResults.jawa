record `com.j256.ormlite.android.AndroidDatabaseResults` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.DatabaseResults` @kind interface {
  `boolean` `com.j256.ormlite.android.AndroidDatabaseResults.cacheStore` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @AccessFlag PRIVATE_FINAL;
  `android.database.Cursor` `com.j256.ormlite.android.AndroidDatabaseResults.cursor` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.dao.ObjectCache` `com.j256.ormlite.android.AndroidDatabaseResults.objectCache` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.j256.ormlite.android.AndroidDatabaseResults.MIN_NUM_COLUMN_NAMES_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.db.DatabaseType` `@@com.j256.ormlite.android.AndroidDatabaseResults.databaseType` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15c710.  v0:= new `com.j256.ormlite.db.SqliteAndroidDatabaseType`;
  #L15c714.  call `<init>`(v0) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.<init>:()V` @kind direct;
  #L15c71a.  `@@com.j256.ormlite.android.AndroidDatabaseResults.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` := v0 @kind object;
  #L15c71e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidDatabaseResults` v4 @kind this, `android.database.Cursor` v5 @kind object, `com.j256.ormlite.dao.ObjectCache` v6 @kind object, `boolean` v7 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.<init>:(Landroid/database/Cursor;Lcom/j256/ormlite/dao/ObjectCache;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15c730.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15c736.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` := v5 @kind object;
  #L15c73a.  call temp:= `getColumnNames`(v5) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L15c740.  v0:= temp @kind object;
  #L15c742.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] := v0 @kind object;
  #L15c746.  v0:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L15c74a.  v0:= length @variable v0;
  #L15c74c.  v1:= 8I;
  #L15c750.  if v0 < v1 then goto L15c78e;
  #L15c754.  v0:= new `java.util.HashMap`;
  #L15c758.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L15c75e.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` := v0 @kind object;
  #L15c762.  v0:= 0I;
  #L15c764.  v1:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L15c768.  v1:= length @variable v1;
  #L15c76a.  if v0 >= v1 then goto L15c794;
  #L15c76e.  v1:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` @kind object;
  #L15c772.  v2:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L15c776.  v2:= v2[v0] @kind object;
  #L15c77a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15c780.  v3:= temp @kind object;
  #L15c782.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15c788.  v0:= v0 + 1;
  #L15c78c.  goto L15c764;
  #L15c78e.  v0:= 0I;
  #L15c790.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` := v0 @kind object;
  #L15c794.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.objectCache` @type ^`com.j256.ormlite.dao.ObjectCache` := v6 @kind object;
  #L15c798.  v4.`com.j256.ormlite.android.AndroidDatabaseResults.cacheStore` @type ^`boolean` := v7 @kind boolean;
  #L15c79c.  return @kind void;
}
procedure `int` `lookupColumn`(`com.j256.ormlite.android.AndroidDatabaseResults` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.lookupColumn:(Ljava/lang/String;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L15c7b0.  v1:= -1I;
  #L15c7b2.  v0:= v3.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` @kind object;
  #L15c7b6.  if v0 != 0 then goto L15c7e6;
  #L15c7ba.  v0:= 0I;
  #L15c7bc.  v2:= v3.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L15c7c0.  v2:= length @variable v2;
  #L15c7c2.  if v0 >= v2 then goto L15c7e2;
  #L15c7c6.  v2:= v3.`com.j256.ormlite.android.AndroidDatabaseResults.columnNames` @type ^`java.lang.String`[] @kind object;
  #L15c7ca.  v2:= v2[v0] @kind object;
  #L15c7ce.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15c7d4.  v2:= temp;
  #L15c7d6.  if v2 == 0 then goto L15c7dc;
  #L15c7da.  return v0;
  #L15c7dc.  v0:= v0 + 1;
  #L15c7e0.  goto L15c7bc;
  #L15c7e2.  v0:= v1;
  #L15c7e4.  goto L15c7da;
  #L15c7e6.  v0:= v3.`com.j256.ormlite.android.AndroidDatabaseResults.columnNameMap` @type ^`java.util.Map` @kind object;
  #L15c7ea.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15c7f0.  v0:= temp @kind object;
  #L15c7f2.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L15c7f6.  if v0 != 0 then goto L15c7fe;
  #L15c7fa.  v0:= v1;
  #L15c7fc.  goto L15c7da;
  #L15c7fe.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L15c804.  v0:= temp;
  #L15c806.  goto L15c7da;
}
procedure `void` `close`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c818.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15c81c.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L15c822.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.android.AndroidDatabaseResults` v0 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;

  #L15c834.  call `close`(v0) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.close:()V` @kind virtual;
  #L15c83a.  return @kind void;
}
procedure `int` `findColumn`(`com.j256.ormlite.android.AndroidDatabaseResults` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.findColumn:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15c84c.  call temp:= `lookupColumn`(v4, v5) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.lookupColumn:(Ljava/lang/String;)I` @kind direct;
  #L15c852.  v0:= temp;
  #L15c854.  if v0 < 0 then goto L15c85a;
  #L15c858.  return v0;
  #L15c85a.  v0:= new `java.lang.StringBuilder`;
  #L15c85e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15c864.  v1:= temp;
  #L15c866.  v1:= v1 + 4;
  #L15c86a.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L15c870.  v1:= `@@com.j256.ormlite.android.AndroidDatabaseResults.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` @kind object;
  #L15c874.  call `appendEscapedEntityName`(v1, v0, v5) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L15c87a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c880.  v0:= temp @kind object;
  #L15c882.  call temp:= `lookupColumn`(v4, v0) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.lookupColumn:(Ljava/lang/String;)I` @kind direct;
  #L15c888.  v0:= temp;
  #L15c88a.  if v0 >= 0 then goto L15c858;
  #L15c88e.  v0:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15c892.  call temp:= `getColumnNames`(v0) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L15c898.  v0:= temp @kind object;
  #L15c89a.  v1:= new `java.sql.SQLException`;
  #L15c89e.  v2:= new `java.lang.StringBuilder`;
  #L15c8a2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c8a8.  v3:= "Unknown field '" @kind object;
  #L15c8ac.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c8b2.  v2:= temp @kind object;
  #L15c8b4.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c8ba.  v2:= temp @kind object;
  #L15c8bc.  v3:= "' from the Android sqlite cursor, not in:" @kind object;
  #L15c8c0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c8c6.  v2:= temp @kind object;
  #L15c8c8.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15c8ce.  v0:= temp @kind object;
  #L15c8d0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c8d6.  v0:= temp @kind object;
  #L15c8d8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c8de.  v0:= temp @kind object;
  #L15c8e0.  call `<init>`(v1, v0) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c8e6.  throw v1;
}
procedure `boolean` `first`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.first:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c8f8.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15c8fc.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L15c902.  v0:= temp;
  #L15c904.  return v0;
}
procedure `java.math.BigDecimal` `getBigDecimal`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getBigDecimal:(I)Ljava/math/BigDecimal;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15c918.  v0:= new `java.sql.SQLException`;
  #L15c91c.  v1:= "Android does not support BigDecimal type.  Use BIG_DECIMAL or BIG_DECIMAL_STRING types" @kind object;
  #L15c920.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c926.  throw v0;
}
procedure `java.io.InputStream` `getBlobStream`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getBlobStream:(I)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15c938.  v0:= new `java.io.ByteArrayInputStream`;
  #L15c93c.  v1:= v2.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15c940.  call temp:= `getBlob`(v1, v3) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L15c946.  v1:= temp @kind object;
  #L15c948.  call `<init>`(v0, v1) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L15c94e.  return v0 @kind object;
}
procedure `boolean` `getBoolean`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getBoolean:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c960.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15c964.  call temp:= `isNull`(v0, v2) @signature `Landroid/database/Cursor;.isNull:(I)Z` @kind interface;
  #L15c96a.  v0:= temp;
  #L15c96c.  if v0 != 0 then goto L15c980;
  #L15c970.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15c974.  call temp:= `getShort`(v0, v2) @signature `Landroid/database/Cursor;.getShort:(I)S` @kind interface;
  #L15c97a.  v0:= temp;
  #L15c97c.  if v0 != 0 then goto L15c984;
  #L15c980.  v0:= 0I;
  #L15c982.  return v0;
  #L15c984.  v0:= 1I;
  #L15c986.  goto L15c982;
}
procedure `byte` `getByte`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getByte:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c998.  call temp:= `getShort`(v1, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getShort:(I)S` @kind virtual;
  #L15c99e.  v0:= temp;
  #L15c9a0.  v0:= (`byte`) v0 @kind i2b;
  #L15c9a2.  return v0;
}
procedure `byte`[] `getBytes`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getBytes:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c9b4.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15c9b8.  call temp:= `getBlob`(v0, v2) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L15c9be.  v0:= temp @kind object;
  #L15c9c0.  return v0 @kind object;
}
procedure `char` `getChar`(`com.j256.ormlite.android.AndroidDatabaseResults` v4 @kind this, `int` v5 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getChar:(I)C` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15c9d4.  v0:= 0I;
  #L15c9d6.  v1:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15c9da.  call temp:= `getString`(v1, v5) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L15c9e0.  v1:= temp @kind object;
  #L15c9e2.  if v1 == 0 then goto L15c9f2;
  #L15c9e6.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15c9ec.  v2:= temp;
  #L15c9ee.  if v2 != 0 then goto L15c9f4;
  #L15c9f2.  return v0;
  #L15c9f4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15c9fa.  v2:= temp;
  #L15c9fc.  v3:= 1I;
  #L15c9fe.  if v2 != v3 then goto L15ca0c;
  #L15ca02.  call temp:= `charAt`(v1, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L15ca08.  v0:= temp;
  #L15ca0a.  goto L15c9f2;
  #L15ca0c.  v0:= new `java.sql.SQLException`;
  #L15ca10.  v1:= new `java.lang.StringBuilder`;
  #L15ca14.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15ca1a.  v2:= "More than 1 character stored in database column: " @kind object;
  #L15ca1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ca24.  v1:= temp @kind object;
  #L15ca26.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ca2c.  v1:= temp @kind object;
  #L15ca2e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15ca34.  v1:= temp @kind object;
  #L15ca36.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15ca3c.  throw v0;
}
procedure `int` `getColumnCount`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getColumnCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ca50.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ca54.  call temp:= `getColumnCount`(v0) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L15ca5a.  v0:= temp;
  #L15ca5c.  return v0;
}
procedure `java.lang.String`[] `getColumnNames`(`com.j256.ormlite.android.AndroidDatabaseResults` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getColumnNames:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15ca70.  call temp:= `getColumnCount`(v4) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getColumnCount:()I` @kind virtual;
  #L15ca76.  v1:= temp;
  #L15ca78.  v2:= new `java.lang.String`[v1];
  #L15ca7c.  v0:= 0I;
  #L15ca7e.  if v0 >= v1 then goto L15ca98;
  #L15ca82.  v3:= v4.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ca86.  call temp:= `getColumnName`(v3, v0) @signature `Landroid/database/Cursor;.getColumnName:(I)Ljava/lang/String;` @kind interface;
  #L15ca8c.  v3:= temp @kind object;
  #L15ca8e.  v2[v0]:= v3 @kind object;
  #L15ca92.  v0:= v0 + 1;
  #L15ca96.  goto L15ca7e;
  #L15ca98.  return v2 @kind object;
}
procedure `int` `getCount`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15caac.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cab0.  call temp:= `getCount`(v0) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L15cab6.  v0:= temp;
  #L15cab8.  return v0;
}
procedure `double` `getDouble`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getDouble:(I)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cacc.  v0:= v2.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cad0.  call temp:= `getDouble`(v0, v3) @signature `Landroid/database/Cursor;.getDouble:(I)D` @kind interface;
  #L15cad6.  v0:= temp @kind wide;
  #L15cad8.  return v0 @kind wide;
}
procedure `float` `getFloat`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getFloat:(I)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15caec.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15caf0.  call temp:= `getFloat`(v0, v2) @signature `Landroid/database/Cursor;.getFloat:(I)F` @kind interface;
  #L15caf6.  v0:= temp;
  #L15caf8.  return v0;
}
procedure `int` `getInt`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getInt:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cb0c.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cb10.  call temp:= `getInt`(v0, v2) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L15cb16.  v0:= temp;
  #L15cb18.  return v0;
}
procedure `long` `getLong`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getLong:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cb2c.  v0:= v2.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cb30.  call temp:= `getLong`(v0, v3) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L15cb36.  v0:= temp @kind wide;
  #L15cb38.  return v0 @kind wide;
}
procedure `java.lang.Object` `getObject`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getObject:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cb4c.  v0:= new `java.sql.SQLException`;
  #L15cb50.  v1:= "Android does not support Object type." @kind object;
  #L15cb54.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cb5a.  throw v0;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCacheForRetrieve`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getObjectCacheForRetrieve:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cb6c.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.objectCache` @type ^`com.j256.ormlite.dao.ObjectCache` @kind object;
  #L15cb70.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCacheForStore`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getObjectCacheForStore:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cb84.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cacheStore` @type ^`boolean` @kind boolean;
  #L15cb88.  if v0 == 0 then goto L15cb92;
  #L15cb8c.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.objectCache` @type ^`com.j256.ormlite.dao.ObjectCache` @kind object;
  #L15cb90.  return v0 @kind object;
  #L15cb92.  v0:= 0I;
  #L15cb94.  goto L15cb90;
}
procedure `int` `getPosition`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getPosition:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cba8.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cbac.  call temp:= `getPosition`(v0) @signature `Landroid/database/Cursor;.getPosition:()I` @kind interface;
  #L15cbb2.  v0:= temp;
  #L15cbb4.  return v0;
}
procedure `android.database.Cursor` `getRawCursor`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getRawCursor:()Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cbc8.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cbcc.  return v0 @kind object;
}
procedure `short` `getShort`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getShort:(I)S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cbe0.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cbe4.  call temp:= `getShort`(v0, v2) @signature `Landroid/database/Cursor;.getShort:(I)S` @kind interface;
  #L15cbea.  v0:= temp;
  #L15cbec.  return v0;
}
procedure `java.lang.String` `getString`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getString:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cc00.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cc04.  call temp:= `getString`(v0, v2) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L15cc0a.  v0:= temp @kind object;
  #L15cc0c.  return v0 @kind object;
}
procedure `java.sql.Timestamp` `getTimestamp`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.getTimestamp:(I)Ljava/sql/Timestamp;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cc20.  v0:= new `java.sql.SQLException`;
  #L15cc24.  v1:= "Android does not support timestamp.  Use JAVA_DATE_LONG or JAVA_DATE_STRING types" @kind object;
  #L15cc28.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cc2e.  throw v0;
}
procedure `boolean` `last`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.last:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cc40.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cc44.  call temp:= `moveToLast`(v0) @signature `Landroid/database/Cursor;.moveToLast:()Z` @kind interface;
  #L15cc4a.  v0:= temp;
  #L15cc4c.  return v0;
}
procedure `boolean` `moveAbsolute`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.moveAbsolute:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cc60.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cc64.  call temp:= `moveToPosition`(v0, v2) @signature `Landroid/database/Cursor;.moveToPosition:(I)Z` @kind interface;
  #L15cc6a.  v0:= temp;
  #L15cc6c.  return v0;
}
procedure `boolean` `moveRelative`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.moveRelative:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cc80.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cc84.  call temp:= `move`(v0, v2) @signature `Landroid/database/Cursor;.move:(I)Z` @kind interface;
  #L15cc8a.  v0:= temp;
  #L15cc8c.  return v0;
}
procedure `boolean` `next`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.next:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cca0.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cca4.  call temp:= `moveToNext`(v0) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L15ccaa.  v0:= temp;
  #L15ccac.  return v0;
}
procedure `boolean` `previous`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.previous:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ccc0.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ccc4.  call temp:= `moveToPrevious`(v0) @signature `Landroid/database/Cursor;.moveToPrevious:()Z` @kind interface;
  #L15ccca.  v0:= temp;
  #L15cccc.  return v0;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.AndroidDatabaseResults` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cce0.  v0:= new `java.lang.StringBuilder`;
  #L15cce4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15ccea.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15ccf0.  v1:= temp @kind object;
  #L15ccf2.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L15ccf8.  v1:= temp @kind object;
  #L15ccfa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd00.  v0:= temp @kind object;
  #L15cd02.  v1:= "@" @kind object;
  #L15cd06.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd0c.  v0:= temp @kind object;
  #L15cd0e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L15cd14.  v1:= temp;
  #L15cd16.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L15cd1c.  v1:= temp @kind object;
  #L15cd1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd24.  v0:= temp @kind object;
  #L15cd26.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cd2c.  v0:= temp @kind object;
  #L15cd2e.  return v0 @kind object;
}
procedure `boolean` `wasNull`(`com.j256.ormlite.android.AndroidDatabaseResults` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.wasNull:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cd40.  v0:= v1.`com.j256.ormlite.android.AndroidDatabaseResults.cursor` @type ^`android.database.Cursor` @kind object;
  #L15cd44.  call temp:= `isNull`(v0, v2) @signature `Landroid/database/Cursor;.isNull:(I)Z` @kind interface;
  #L15cd4a.  v0:= temp;
  #L15cd4c.  return v0;
}

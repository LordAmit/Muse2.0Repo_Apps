record `com.j256.ormlite.stmt.mapped.MappedUpdateId` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedUpdateId` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L178c20.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L178c26.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedUpdateId` `build`(`com.j256.ormlite.db.DatabaseType` v5 @kind object, `com.j256.ormlite.table.TableInfo` v6 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L178c38.  v4:= 0I;
  #L178c3a.  call temp:= `getIdField`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L178c40.  v0:= temp @kind object;
  #L178c42.  if v0 != 0 then goto L178c8c;
  #L178c46.  v0:= new `java.sql.SQLException`;
  #L178c4a.  v1:= new `java.lang.StringBuilder`;
  #L178c4e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L178c54.  v2:= "Cannot update-id in " @kind object;
  #L178c58.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178c5e.  v1:= temp @kind object;
  #L178c60.  call temp:= `getDataClass`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L178c66.  v2:= temp @kind object;
  #L178c68.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178c6e.  v1:= temp @kind object;
  #L178c70.  v2:= " because it doesn't have an id field" @kind object;
  #L178c74.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178c7a.  v1:= temp @kind object;
  #L178c7c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L178c82.  v1:= temp @kind object;
  #L178c84.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L178c8a.  throw v0;
  #L178c8c.  v1:= new `java.lang.StringBuilder`;
  #L178c90.  v2:= 64I;
  #L178c94.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L178c9a.  v2:= "UPDATE " @kind object;
  #L178c9e.  call temp:= `getTableName`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L178ca4.  v3:= temp @kind object;
  #L178ca6.  call `appendTableName`(v5, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L178cac.  v2:= "SET " @kind object;
  #L178cb0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178cb6.  call `appendFieldColumnName`(v5, v1, v0, v4) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L178cbc.  v2:= "= ? " @kind object;
  #L178cc0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178cc6.  call `appendWhereFieldEq`(v5, v0, v1, v4) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L178ccc.  v2:= new `com.j256.ormlite.stmt.mapped.MappedUpdateId`;
  #L178cd0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L178cd6.  v1:= temp @kind object;
  #L178cd8.  v3:= 2I;
  #L178cda.  v3:= new `com.j256.ormlite.field.FieldType`[v3];
  #L178cde.  v4:= 0I;
  #L178ce0.  v3[v4]:= v0 @kind object;
  #L178ce4.  v4:= 1I;
  #L178ce6.  v3[v4]:= v0 @kind object;
  #L178cea.  call `<init>`(v2, v6, v1, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L178cf0.  return v2 @kind object;
}
procedure `java.lang.Object` `extractIdToFieldObject`(`com.j256.ormlite.stmt.mapped.MappedUpdateId` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.extractIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L178d04.  v0:= v1.`com.j256.ormlite.stmt.mapped.MappedUpdateId.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178d08.  call temp:= `extractJavaFieldToSqlArgValue`(v0, v2) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178d0e.  v0:= temp @kind object;
  #L178d10.  return v0 @kind object;
}
procedure `int` `execute`(`com.j256.ormlite.stmt.mapped.MappedUpdateId` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `com.j256.ormlite.dao.ObjectCache` v11 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.execute:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L178d24.  v0:= 2I;
  #Try_start0.  
  #L178d26.  v0:= new `java.lang.Object`[v0];
  #L178d2a.  v1:= 0I;
  #L178d2c.  call temp:= `convertIdToFieldObject`(v7, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.convertIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178d32.  v2:= temp @kind object;
  #L178d34.  v0[v1]:= v2 @kind object;
  #L178d38.  v1:= 1I;
  #L178d3a.  call temp:= `extractIdToFieldObject`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.extractIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L178d40.  v2:= temp @kind object;
  #L178d42.  v0[v1]:= v2 @kind object;
  #L178d46.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.statement` @type ^`java.lang.String` @kind object;
  #L178d4a.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L178d4e.  call temp:= `update`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L178d54.  v1:= temp;
  #L178d56.  if v1 <= 0 then goto L178d96;
  #L178d5a.  if v11 == 0 then goto L178d8a;
  #L178d5e.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178d62.  call temp:= `extractJavaFieldValue`(v2, v9) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178d68.  v2:= temp @kind object;
  #L178d6a.  v3:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.clazz` @type ^`java.lang.Class` @kind object;
  #L178d6e.  call temp:= `updateId`(v11, v3, v2, v10) @signature `Lcom/j256/ormlite/dao/ObjectCache;.updateId:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L178d74.  v2:= temp @kind object;
  #L178d76.  if v2 == 0 then goto L178d8a;
  #L178d7a.  if v2 == v9 then goto L178d8a;
  #L178d7e.  v3:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178d82.  v4:= 0I;
  #L178d84.  call `assignField`(v3, v2, v10, v4, v11) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L178d8a.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L178d8e.  v3:= 0I;
  #L178d90.  call `assignField`(v2, v9, v10, v3, v11) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L178d96.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedUpdateId.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L178d9a.  v3:= "updating-id with statement '{}' and {} args, changed {} rows" @kind object;
  #L178d9e.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.statement` @type ^`java.lang.String` @kind object;
  #L178da2.  v5:= length @variable v0;
  #L178da4.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L178daa.  v5:= temp @kind object;
  #L178dac.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L178db2.  v6:= temp @kind object;
  #L178db4.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L178dba.  v2:= length @variable v0;
  #L178dbc.  if v2 <= 0 then goto L178dce;
  #L178dc0.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedUpdateId.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L178dc4.  v3:= "updating-id arguments: {}" @kind object;
  #L178dc8.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L178dce.  return v1;
  #L178dd0.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L178dd2.  v1:= new `java.lang.StringBuilder`;
  #L178dd6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L178ddc.  v2:= "Unable to run update-id stmt on object " @kind object;
  #L178de0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178de6.  v1:= temp @kind object;
  #L178de8.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178dee.  v1:= temp @kind object;
  #L178df0.  v2:= ": " @kind object;
  #L178df4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178dfa.  v1:= temp @kind object;
  #L178dfc.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.statement` @type ^`java.lang.String` @kind object;
  #L178e00.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L178e06.  v1:= temp @kind object;
  #L178e08.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L178e0e.  v1:= temp @kind object;
  #L178e10.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L178e16.  v0:= temp @kind object;
  #L178e18.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L178dd0;
}

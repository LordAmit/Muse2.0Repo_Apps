record `com.j256.ormlite.dao.LazyForeignCollection` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.BaseForeignCollection` @kind class, `java.io.Serializable` @kind interface {
  `com.j256.ormlite.dao.CloseableIterator` `com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.j256.ormlite.dao.LazyForeignCollection.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.LazyForeignCollection` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16349c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @kind direct;
  #L1634a2.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `access$000`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind object, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.access$000:(Lcom/j256/ormlite/dao/LazyForeignCollection;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1634b4.  call temp:= `seperateIteratorThrow`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind direct;
  #L1634ba.  v0:= temp @kind object;
  #L1634bc.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `seperateIteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1634d0.  v0:= v2.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1634d4.  if v0 != 0 then goto L1634e8;
  #L1634d8.  v0:= new `java.lang.IllegalStateException`;
  #L1634dc.  v1:= "Internal DAO object is null.  Maybe the collection was deserialized or otherwise constructed wrongly.  Use dao.assignEmptyForeignCollection(...) or dao.getEmptyForeignCollection(...) instead" @kind object;
  #L1634e0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1634e6.  throw v0;
  #L1634e8.  v0:= v2.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1634ec.  call temp:= `getPreparedQuery`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getPreparedQuery:()Lcom/j256/ormlite/stmt/PreparedQuery;` @kind virtual;
  #L1634f2.  v1:= temp @kind object;
  #L1634f4.  call temp:= `iterator`(v0, v1, v3) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L1634fa.  v0:= temp @kind object;
  #L1634fc.  return v0 @kind object;
}
procedure `void` `closeLastIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeLastIterator:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163510.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L163514.  if v0 == 0 then goto L163528;
  #L163518.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L16351c.  call `close`(v0) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.close:()V` @kind interface;
  #L163522.  v0:= 0I;
  #L163524.  v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` := v0 @kind object;
  #L163528.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16353c.  v0:= -1I;
  #L16353e.  call temp:= `closeableIterator`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L163544.  v0:= temp @kind object;
  #L163546.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v4 @kind this, `int` v5 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L163558.  call temp:= `iteratorThrow`(v4, v5) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #Try_end0.  
  #L16355e.  v0:= temp @kind object;
  #L163560.  return v0 @kind object;
  #L163562.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L163564.  v1:= new `java.lang.IllegalStateException`;
  #L163568.  v2:= new `java.lang.StringBuilder`;
  #L16356c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L163572.  v3:= "Could not build lazy iterator for " @kind object;
  #L163576.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16357c.  v2:= temp @kind object;
  #L16357e.  v3:= v4.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L163582.  call temp:= `getDataClass`(v3) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L163588.  v3:= temp @kind object;
  #L16358a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L163590.  v2:= temp @kind object;
  #L163592.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L163598.  v2:= temp @kind object;
  #L16359a.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1635a0.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L163562;
}
procedure `boolean` `contains`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1635c4.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1635ca.  v1:= temp @kind object;
  #Try_start0.  
  #L1635cc.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1635d2.  v0:= temp;
  #L1635d4.  if v0 == 0 then goto L1635f6;
  #L1635d8.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1635de.  v0:= temp @kind object;
  #L1635e0.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #Try_end0.  
  #L1635e6.  v0:= temp;
  #L1635e8.  if v0 == 0 then goto L1635cc;
  #L1635ec.  v0:= 1I;
  #L1635ee.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1635f4.  return v0;
  #L1635f6.  v0:= 0I;
  #L1635f8.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1635fe.  goto L1635f4;
  #L163600.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L163602.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163608.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L163600;
}
procedure `boolean` `containsAll`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L163628.  v0:= new `java.util.HashSet`;
  #L16362c.  call `<init>`(v0, v4) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L163632.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L163638.  v1:= temp @kind object;
  #Try_start0.  
  #L16363a.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L163640.  v2:= temp;
  #L163642.  if v2 == 0 then goto L163660;
  #L163646.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16364c.  v2:= temp @kind object;
  #L16364e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L163654.  goto L16363a;
  #L163656.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L163658.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16365e.  throw v0;
  #Try_start1.  
  #L163660.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #Try_end1.  
  #L163666.  v0:= temp;
  #L163668.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16366e.  return v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L163656;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L163656;
}
procedure `boolean` `equals`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163694.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L16369a.  v0:= temp;
  #L16369c.  return v0;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1636b0.  v0:= -1I;
  #L1636b2.  call temp:= `getWrappedIterable`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:(I)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind virtual;
  #L1636b8.  v0:= temp @kind object;
  #L1636ba.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:(I)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1636cc.  v0:= new `com.j256.ormlite.dao.CloseableWrappedIterableImpl`;
  #L1636d0.  v1:= new `com.j256.ormlite.dao.LazyForeignCollection$1`;
  #L1636d4.  call `<init>`(v1, v2, v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection$1;.<init>:(Lcom/j256/ormlite/dao/LazyForeignCollection;I)V` @kind direct;
  #L1636da.  call `<init>`(v0, v1) @signature `Lcom/j256/ormlite/dao/CloseableWrappedIterableImpl;.<init>:(Lcom/j256/ormlite/dao/CloseableIterable;)V` @kind direct;
  #L1636e0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1636f4.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L1636fa.  v0:= temp;
  #L1636fc.  return v0;
}
procedure `boolean` `isEager`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.isEager:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163710.  v0:= 0I;
  #L163712.  return v0;
}
procedure `boolean` `isEmpty`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L163724.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L16372a.  v1:= temp @kind object;
  #Try_start0.  
  #L16372c.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #Try_end0.  
  #L163732.  v0:= temp;
  #L163734.  if v0 != 0 then goto L163742;
  #L163738.  v0:= 1I;
  #L16373a.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163740.  return v0;
  #L163742.  v0:= 0I;
  #L163744.  goto L16373a;
  #L163746.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L163748.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16374e.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L163746;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16376c.  v0:= -1I;
  #L16376e.  call temp:= `closeableIterator`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L163774.  v0:= temp @kind object;
  #L163776.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163788.  call temp:= `closeableIterator`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L16378e.  v0:= temp @kind object;
  #L163790.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1637a4.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1637aa.  v0:= temp @kind object;
  #L1637ac.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1637c0.  v0:= -1I;
  #L1637c2.  call temp:= `iteratorThrow`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1637c8.  v0:= temp @kind object;
  #L1637ca.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1637dc.  call temp:= `seperateIteratorThrow`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind direct;
  #L1637e2.  v0:= temp @kind object;
  #L1637e4.  v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` := v0 @kind object;
  #L1637e8.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L1637ec.  return v0 @kind object;
}
procedure `int` `refreshAll`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.refreshAll:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L163800.  v0:= new `java.lang.UnsupportedOperationException`;
  #L163804.  v1:= "Cannot call updateAll() on a lazy collection." @kind object;
  #L163808.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16380e.  throw v0;
}
procedure `int` `refreshCollection`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.refreshCollection:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163820.  v0:= 0I;
  #L163822.  return v0;
}
procedure `boolean` `remove`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L163834.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L16383a.  v1:= temp @kind object;
  #Try_start0.  
  #L16383c.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L163842.  v0:= temp;
  #L163844.  if v0 == 0 then goto L16386c;
  #L163848.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16384e.  v0:= temp @kind object;
  #L163850.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L163856.  v0:= temp;
  #L163858.  if v0 == 0 then goto L16383c;
  #L16385c.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L163862.  v0:= 1I;
  #L163864.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16386a.  return v0;
  #L16386c.  v0:= 0I;
  #L16386e.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163874.  goto L16386a;
  #L163876.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L163878.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16387e.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L163876;
}
procedure `boolean` `removeAll`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L16389c.  v0:= 0I;
  #L16389e.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1638a4.  v1:= temp @kind object;
  #Try_start0.  
  #L1638a6.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1638ac.  v2:= temp;
  #L1638ae.  if v2 == 0 then goto L1638d0;
  #L1638b2.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1638b8.  v2:= temp @kind object;
  #L1638ba.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1638c0.  v2:= temp;
  #L1638c2.  if v2 == 0 then goto L1638a6;
  #L1638c6.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L1638cc.  v0:= 1I;
  #L1638ce.  goto L1638a6;
  #L1638d0.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1638d6.  return v0;
  #L1638d8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1638da.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1638e0.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1638d8;
}
procedure `int` `size`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L163900.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L163906.  v1:= temp @kind object;
  #L163908.  v0:= 0I;
  #Try_start0.  
  #L16390a.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L163910.  v2:= temp;
  #L163912.  if v2 == 0 then goto L163922;
  #L163916.  call `moveToNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.moveToNext:()V` @kind interface;
  #Try_end0.  
  #L16391c.  v0:= v0 + 1;
  #L163920.  goto L16390a;
  #L163922.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163928.  return v0;
  #L16392a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16392c.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163932.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16392a;
}
procedure `java.lang.Object`[] `toArray`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L163950.  v0:= new `java.util.ArrayList`;
  #L163954.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16395a.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L163960.  v1:= temp @kind object;
  #Try_start0.  
  #L163962.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L163968.  v2:= temp;
  #L16396a.  if v2 == 0 then goto L163988;
  #L16396e.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L163974.  v2:= temp @kind object;
  #L163976.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L16397c.  goto L163962;
  #L16397e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L163980.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163986.  throw v0;
  #Try_start1.  
  #L163988.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #Try_end1.  
  #L16398e.  v0:= temp @kind object;
  #L163990.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163996.  return v0 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16397e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L16397e;
}
procedure `java.lang.Object`[] `toArray`(`com.j256.ormlite.dao.LazyForeignCollection` v9 @kind this, `java.lang.Object`[] v10 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1639bc.  v3:= 0I;
  #L1639be.  v2:= 0I;
  #L1639c0.  call temp:= `iterator`(v9) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1639c6.  v5:= temp @kind object;
  #L1639c8.  v1:= v2;
  #L1639ca.  v0:= v3 @kind object;
  #Try_start0.  
  #L1639cc.  call temp:= `hasNext`(v5) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1639d2.  v4:= temp;
  #L1639d4.  if v4 == 0 then goto L163a28;
  #L1639d8.  call temp:= `next`(v5) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1639de.  v6:= temp @kind object;
  #L1639e0.  v4:= length @variable v10;
  #L1639e2.  if v1 < v4 then goto L163a18;
  #L1639e6.  if v0 != 0 then goto L163a0c;
  #L1639ea.  v0:= new `java.util.ArrayList`;
  #L1639ee.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1639f4.  v7:= length @variable v10;
  #L1639f6.  v4:= v2;
  #L1639f8.  if v4 >= v7 then goto L163a0c;
  #L1639fc.  v8:= v10[v4] @kind object;
  #L163a00.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L163a06.  v4:= v4 + 1;
  #L163a0a.  goto L1639f8;
  #L163a0c.  call temp:= `add`(v0, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L163a12.  v1:= v1 + 1;
  #L163a16.  goto L1639cc;
  #L163a18.  v10[v1]:= v6 @kind object;
  #Try_end0.  
  #L163a1c.  goto L163a12;
  #L163a1e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L163a20.  call `closeQuietly`(v5) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163a26.  throw v0;
  #L163a28.  call `closeQuietly`(v5) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163a2e.  if v0 != 0 then goto L163a42;
  #L163a32.  v0:= length @variable v10;
  #L163a34.  v0:= v0 + -1;
  #L163a38.  if v1 >= v0 then goto L163a40;
  #L163a3c.  v10[v1]:= v3 @kind object;
  #L163a40.  return v10 @kind object;
  #L163a42.  call temp:= `toArray`(v0, v10) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L163a48.  v10:= temp @kind object;
  #L163a4a.  goto L163a40;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L163a1e;
}
procedure `int` `updateAll`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.updateAll:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L163a68.  v0:= new `java.lang.UnsupportedOperationException`;
  #L163a6c.  v1:= "Cannot call updateAll() on a lazy collection." @kind object;
  #L163a70.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L163a76.  throw v0;
}

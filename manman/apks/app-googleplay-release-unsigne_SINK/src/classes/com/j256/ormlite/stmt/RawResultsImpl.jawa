record `com.j256.ormlite.stmt.RawResultsImpl` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.GenericRawResults` @kind interface {
  `java.lang.String`[] `com.j256.ormlite.stmt.RawResultsImpl.columnNames` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.SelectIterator` `com.j256.ormlite.stmt.RawResultsImpl.iterator` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.RawResultsImpl` v9 @kind this, `com.j256.ormlite.support.ConnectionSource` v10 @kind object, `com.j256.ormlite.support.DatabaseConnection` v11 @kind object, `java.lang.String` v12 @kind object, `java.lang.Class` v13 @kind object, `com.j256.ormlite.support.CompiledStatement` v14 @kind object, `com.j256.ormlite.stmt.GenericRowMapper` v15 @kind object, `com.j256.ormlite.dao.ObjectCache` v16 @kind object) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.<init>:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/String;Ljava/lang/Class;Lcom/j256/ormlite/support/CompiledStatement;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L173fcc.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L173fd2.  v0:= new `com.j256.ormlite.stmt.SelectIterator`;
  #L173fd6.  v2:= 0I;
  #L173fd8.  v1:= v13 @kind object;
  #L173fda.  v3:= v15 @kind object;
  #L173fdc.  v4:= v10 @kind object;
  #L173fde.  v5:= v11 @kind object;
  #L173fe0.  v6:= v14 @kind object;
  #L173fe2.  v7:= v12 @kind object;
  #L173fe4.  v8:= v16 @kind object;
  #L173fe8.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.<init>:(Ljava/lang/Class;Lcom/j256/ormlite/dao/Dao;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/support/DatabaseConnection;Lcom/j256/ormlite/support/CompiledStatement;Ljava/lang/String;Lcom/j256/ormlite/dao/ObjectCache;)V` @kind direct;
  #L173fee.  v9.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` := v0 @kind object;
  #L173ff2.  v0:= v9.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L173ff6.  call temp:= `getRawResults`(v0) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.getRawResults:()Lcom/j256/ormlite/support/DatabaseResults;` @kind virtual;
  #L173ffc.  v0:= temp @kind object;
  #L173ffe.  call temp:= `getColumnNames`(v0) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L174004.  v0:= temp @kind object;
  #L174006.  v9.`com.j256.ormlite.stmt.RawResultsImpl.columnNames` @type ^`java.lang.String`[] := v0 @kind object;
  #L17400a.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17401c.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L174020.  if v0 == 0 then goto L174034;
  #L174024.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L174028.  call `close`(v0) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.close:()V` @kind virtual;
  #L17402e.  v0:= 0I;
  #L174030.  v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` := v0 @kind object;
  #L174034.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L174048.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L17404c.  return v0 @kind object;
}
procedure `java.lang.String`[] `getColumnNames`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.getColumnNames:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L174060.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.columnNames` @type ^`java.lang.String`[] @kind object;
  #L174064.  return v0 @kind object;
}
procedure `java.lang.Object` `getFirstResult`(`com.j256.ormlite.stmt.RawResultsImpl` v2 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.getFirstResult:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L174078.  v0:= v2.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L17407c.  call temp:= `hasNextThrow`(v0) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.hasNextThrow:()Z` @kind virtual;
  #L174082.  v0:= temp;
  #L174084.  if v0 == 0 then goto L1740a0;
  #L174088.  v0:= v2.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L17408c.  call temp:= `nextThrow`(v0) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.nextThrow:()Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L174092.  v0:= temp @kind object;
  #L174094.  v1:= "raw results iterator" @kind object;
  #L174098.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L17409e.  return v0 @kind object;
  #L1740a0.  v0:= 0I;
  #L1740a2.  v1:= "raw results iterator" @kind object;
  #L1740a6.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L1740ac.  goto L17409e;
  #L1740ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1740b0.  v1:= "raw results iterator" @kind object;
  #L1740b4.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L1740ba.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1740ae;
}
procedure `int` `getNumberColumns`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.getNumberColumns:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1740d8.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.columnNames` @type ^`java.lang.String`[] @kind object;
  #L1740dc.  v0:= length @variable v0;
  #L1740de.  return v0;
}
procedure `java.util.List` `getResults`(`com.j256.ormlite.stmt.RawResultsImpl` v2 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.getResults:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1740f0.  v0:= new `java.util.ArrayList`;
  #L1740f4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L1740fa.  v1:= v2.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L1740fe.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.hasNext:()Z` @kind virtual;
  #L174104.  v1:= temp;
  #L174106.  if v1 == 0 then goto L17412c;
  #L17410a.  v1:= v2.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L17410e.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.next:()Ljava/lang/Object;` @kind virtual;
  #L174114.  v1:= temp @kind object;
  #L174116.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L17411c.  goto L1740fa;
  #L17411e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L174120.  v1:= "raw results iterator" @kind object;
  #L174124.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L17412a.  throw v0;
  #L17412c.  v1:= "raw results iterator" @kind object;
  #L174130.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L174136.  return v0 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L17411e;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L174154.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L174158.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L17416c.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L174172.  v0:= temp @kind object;
  #L174174.  return v0 @kind object;
}

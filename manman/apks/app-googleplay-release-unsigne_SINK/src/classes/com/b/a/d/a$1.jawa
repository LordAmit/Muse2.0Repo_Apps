record `com.b.a.d.a$1` @kind class @AccessFlag FINAL extends `com.b.a.b.e` @kind class {
}
procedure `void` `<init>`(`com.b.a.d.a$1` v0 @kind this) @signature `Lcom/b/a/d/a$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L158848.  call `<init>`(v0) @signature `Lcom/b/a/b/e;.<init>:()V` @kind direct;
  #L15884e.  return @kind void;
}
procedure `void` `a`(`com.b.a.d.a$1` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/d/a$1;.a:(Lcom/b/a/d/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L158860.  v0:= instanceof @variable v4 @type ^`com.b.a.b.a.e` @kind boolean;
  #L158864.  if v0 == 0 then goto L158874;
  #L158868.  v4:= (`com.b.a.b.a.e`) v4 @kind object;
  #L15886c.  call `o`(v4) @signature `Lcom/b/a/b/a/e;.o:()V` @kind virtual;
  #L158872.  return @kind void;
  #L158874.  v0:= v4.`com.b.a.d.a.a` @type ^`int`;
  #L158878.  if v0 != 0 then goto L158884;
  #L15887c.  call temp:= `r`(v4) @signature `Lcom/b/a/d/a;.r:()I` @kind virtual;
  #L158882.  v0:= temp;
  #L158884.  v1:= 13I;
  #L158888.  if v0 != v1 then goto L158896;
  #L15888c.  v0:= 9I;
  #L158890.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L158894.  goto L158872;
  #L158896.  v1:= 12I;
  #L15889a.  if v0 != v1 then goto L1588a8;
  #L15889e.  v0:= 8I;
  #L1588a2.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L1588a6.  goto L158872;
  #L1588a8.  v1:= 14I;
  #L1588ac.  if v0 != v1 then goto L1588ba;
  #L1588b0.  v0:= 10I;
  #L1588b4.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L1588b8.  goto L158872;
  #L1588ba.  v0:= new `java.lang.IllegalStateException`;
  #L1588be.  v1:= new `java.lang.StringBuilder`;
  #L1588c2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1588c8.  v2:= "Expected a name but was " @kind object;
  #L1588cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1588d2.  v1:= temp @kind object;
  #L1588d4.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1588da.  v2:= temp @kind object;
  #L1588dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1588e2.  v1:= temp @kind object;
  #L1588e4.  call temp:= `a`(v4) @signature `Lcom/b/a/d/a;.a:(Lcom/b/a/d/a;)Ljava/lang/String;` @kind static;
  #L1588ea.  v2:= temp @kind object;
  #L1588ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1588f2.  v1:= temp @kind object;
  #L1588f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1588fa.  v1:= temp @kind object;
  #L1588fc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L158902.  throw v0;
}

record `com.b.a.f` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.ThreadLocal` `com.b.a.f.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.b.a.f.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.b.a.f.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.c` `com.b.a.f.e` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.d` `com.b.a.f.f` @AccessFlag PRIVATE_FINAL;
  `com.b.a.e` `com.b.a.f.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.l` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.d` `com.b.a.f.m` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.c.a` `@@com.b.a.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L158fc4.  v0:= new `com.b.a.f$1`;
  #L158fc8.  call `<init>`(v0) @signature `Lcom/b/a/f$1;.<init>:()V` @kind direct;
  #L158fce.  `@@com.b.a.f.a` @type ^`com.b.a.c.a` := v0 @kind object;
  #L158fd2.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.f` v13 @kind this) @signature `Lcom/b/a/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L158fe4.  v4:= 0I;
  #L158fe6.  v1:= `@@com.b.a.b.d.a` @type ^`com.b.a.b.d` @kind object;
  #L158fea.  v2:= `@@com.b.a.d.a` @type ^`com.b.a.d` @kind object;
  #L158fee.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L158ff4.  v3:= temp @kind object;
  #L158ff6.  v7:= 1I;
  #L158ff8.  v11:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L158ffc.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L159002.  v12:= temp @kind object;
  #L159004.  v0:= v13 @kind object;
  #L159006.  v5:= v4;
  #L159008.  v6:= v4;
  #L15900a.  v8:= v4;
  #L15900c.  v9:= v4;
  #L15900e.  v10:= v4;
  #L159010.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @kind direct;
  #L159016.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.f` v6 @kind this, `com.b.a.b.d` v7 @kind object, `com.b.a.e` v8 @kind object, `java.util.Map` v9 @kind object, `boolean` v10 , `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `boolean` v15 , `boolean` v16 , `com.b.a.u` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L159028.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15902e.  v1:= new `java.lang.ThreadLocal`;
  #L159032.  call `<init>`(v1) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L159038.  v6.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` := v1 @kind object;
  #L15903c.  v1:= new `java.util.concurrent.ConcurrentHashMap`;
  #L159040.  call `<init>`(v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L159046.  v6.`com.b.a.f.c` @type ^`java.util.Map` := v1 @kind object;
  #L15904a.  v1:= new `com.b.a.b.c`;
  #L15904e.  call `<init>`(v1, v9) @signature `Lcom/b/a/b/c;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L159054.  v6.`com.b.a.f.e` @type ^`com.b.a.b.c` := v1 @kind object;
  #L159058.  v6.`com.b.a.f.f` @type ^`com.b.a.b.d` := v7 @kind object;
  #L15905c.  v6.`com.b.a.f.g` @type ^`com.b.a.e` := v8 @kind object;
  #L159060.  v6.`com.b.a.f.h` @type ^`boolean` := v10 @kind boolean;
  #L159064.  v6.`com.b.a.f.j` @type ^`boolean` := v12 @kind boolean;
  #L159068.  v6.`com.b.a.f.i` @type ^`boolean` := v13 @kind boolean;
  #L15906c.  v6.`com.b.a.f.k` @type ^`boolean` := v14 @kind boolean;
  #L159070.  v6.`com.b.a.f.l` @type ^`boolean` := v15 @kind boolean;
  #L159074.  v1:= new `java.util.ArrayList`;
  #L159078.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15907e.  v2:= `@@com.b.a.b.a.n.Y` @type ^`com.b.a.w` @kind object;
  #L159082.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159088.  v2:= `@@com.b.a.b.a.h.a` @type ^`com.b.a.w` @kind object;
  #L15908c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159092.  call temp:= `add`(v1, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159098.  v0:= v18 @kind object;
  #L15909c.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1590a2.  v2:= `@@com.b.a.b.a.n.D` @type ^`com.b.a.w` @kind object;
  #L1590a6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1590ac.  v2:= `@@com.b.a.b.a.n.m` @type ^`com.b.a.w` @kind object;
  #L1590b0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1590b6.  v2:= `@@com.b.a.b.a.n.g` @type ^`com.b.a.w` @kind object;
  #L1590ba.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1590c0.  v2:= `@@com.b.a.b.a.n.i` @type ^`com.b.a.w` @kind object;
  #L1590c4.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1590ca.  v2:= `@@com.b.a.b.a.n.k` @type ^`com.b.a.w` @kind object;
  #L1590ce.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1590d4.  call temp:= `a`(v17) @signature `Lcom/b/a/f;.a:(Lcom/b/a/u;)Lcom/b/a/v;` @kind static;
  #L1590da.  v2:= temp @kind object;
  #L1590dc.  v3:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L1590e0.  v4:= constclass @type ^`java.lang.Long` @kind object;
  #L1590e4.  call temp:= `a`(v3, v4, v2) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L1590ea.  v3:= temp @kind object;
  #L1590ec.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1590f2.  v3:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L1590f6.  v4:= constclass @type ^`java.lang.Double` @kind object;
  #L1590fa.  v0:= v16;
  #L1590fe.  call temp:= `a`(v6, v0) @signature `Lcom/b/a/f;.a:(Z)Lcom/b/a/v;` @kind direct;
  #L159104.  v5:= temp @kind object;
  #L159106.  call temp:= `a`(v3, v4, v5) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L15910c.  v3:= temp @kind object;
  #L15910e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159114.  v3:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L159118.  v4:= constclass @type ^`java.lang.Float` @kind object;
  #L15911c.  v0:= v16;
  #L159120.  call temp:= `b`(v6, v0) @signature `Lcom/b/a/f;.b:(Z)Lcom/b/a/v;` @kind direct;
  #L159126.  v5:= temp @kind object;
  #L159128.  call temp:= `a`(v3, v4, v5) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L15912e.  v3:= temp @kind object;
  #L159130.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159136.  v3:= `@@com.b.a.b.a.n.x` @type ^`com.b.a.w` @kind object;
  #L15913a.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159140.  v3:= `@@com.b.a.b.a.n.o` @type ^`com.b.a.w` @kind object;
  #L159144.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15914a.  v3:= `@@com.b.a.b.a.n.q` @type ^`com.b.a.w` @kind object;
  #L15914e.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159154.  v3:= constclass @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L159158.  call temp:= `a`(v2) @signature `Lcom/b/a/f;.a:(Lcom/b/a/v;)Lcom/b/a/v;` @kind static;
  #L15915e.  v4:= temp @kind object;
  #L159160.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L159166.  v3:= temp @kind object;
  #L159168.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15916e.  v3:= constclass @type ^`java.util.concurrent.atomic.AtomicLongArray` @kind object;
  #L159172.  call temp:= `b`(v2) @signature `Lcom/b/a/f;.b:(Lcom/b/a/v;)Lcom/b/a/v;` @kind static;
  #L159178.  v2:= temp @kind object;
  #L15917a.  call temp:= `a`(v3, v2) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L159180.  v2:= temp @kind object;
  #L159182.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159188.  v2:= `@@com.b.a.b.a.n.s` @type ^`com.b.a.w` @kind object;
  #L15918c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159192.  v2:= `@@com.b.a.b.a.n.z` @type ^`com.b.a.w` @kind object;
  #L159196.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15919c.  v2:= `@@com.b.a.b.a.n.F` @type ^`com.b.a.w` @kind object;
  #L1591a0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1591a6.  v2:= `@@com.b.a.b.a.n.H` @type ^`com.b.a.w` @kind object;
  #L1591aa.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1591b0.  v2:= constclass @type ^`java.math.BigDecimal` @kind object;
  #L1591b4.  v3:= `@@com.b.a.b.a.n.B` @type ^`com.b.a.v` @kind object;
  #L1591b8.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L1591be.  v2:= temp @kind object;
  #L1591c0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1591c6.  v2:= constclass @type ^`java.math.BigInteger` @kind object;
  #L1591ca.  v3:= `@@com.b.a.b.a.n.C` @type ^`com.b.a.v` @kind object;
  #L1591ce.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L1591d4.  v2:= temp @kind object;
  #L1591d6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1591dc.  v2:= `@@com.b.a.b.a.n.J` @type ^`com.b.a.w` @kind object;
  #L1591e0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1591e6.  v2:= `@@com.b.a.b.a.n.L` @type ^`com.b.a.w` @kind object;
  #L1591ea.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1591f0.  v2:= `@@com.b.a.b.a.n.P` @type ^`com.b.a.w` @kind object;
  #L1591f4.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1591fa.  v2:= `@@com.b.a.b.a.n.R` @type ^`com.b.a.w` @kind object;
  #L1591fe.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159204.  v2:= `@@com.b.a.b.a.n.W` @type ^`com.b.a.w` @kind object;
  #L159208.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15920e.  v2:= `@@com.b.a.b.a.n.N` @type ^`com.b.a.w` @kind object;
  #L159212.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159218.  v2:= `@@com.b.a.b.a.n.d` @type ^`com.b.a.w` @kind object;
  #L15921c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159222.  v2:= `@@com.b.a.b.a.c.a` @type ^`com.b.a.w` @kind object;
  #L159226.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15922c.  v2:= `@@com.b.a.b.a.n.U` @type ^`com.b.a.w` @kind object;
  #L159230.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159236.  v2:= `@@com.b.a.b.a.k.a` @type ^`com.b.a.w` @kind object;
  #L15923a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159240.  v2:= `@@com.b.a.b.a.j.a` @type ^`com.b.a.w` @kind object;
  #L159244.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15924a.  v2:= `@@com.b.a.b.a.n.S` @type ^`com.b.a.w` @kind object;
  #L15924e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159254.  v2:= `@@com.b.a.b.a.a.a` @type ^`com.b.a.w` @kind object;
  #L159258.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15925e.  v2:= `@@com.b.a.b.a.n.b` @type ^`com.b.a.w` @kind object;
  #L159262.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159268.  v2:= new `com.b.a.b.a.b`;
  #L15926c.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L159270.  call `<init>`(v2, v3) @signature `Lcom/b/a/b/a/b;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L159276.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15927c.  v2:= new `com.b.a.b.a.g`;
  #L159280.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L159284.  call `<init>`(v2, v3, v11) @signature `Lcom/b/a/b/a/g;.<init>:(Lcom/b/a/b/c;Z)V` @kind direct;
  #L15928a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L159290.  v2:= new `com.b.a.b.a.d`;
  #L159294.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L159298.  call `<init>`(v2, v3) @signature `Lcom/b/a/b/a/d;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L15929e.  v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` := v2 @kind object;
  #L1592a2.  v2:= v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L1592a6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1592ac.  v2:= `@@com.b.a.b.a.n.Z` @type ^`com.b.a.w` @kind object;
  #L1592b0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1592b6.  v2:= new `com.b.a.b.a.i`;
  #L1592ba.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L1592be.  v4:= v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L1592c2.  call `<init>`(v2, v3, v8, v7, v4) @signature `Lcom/b/a/b/a/i;.<init>:(Lcom/b/a/b/c;Lcom/b/a/e;Lcom/b/a/b/d;Lcom/b/a/b/a/d;)V` @kind direct;
  #L1592c8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1592ce.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1592d4.  v1:= temp @kind object;
  #L1592d6.  v6.`com.b.a.f.d` @type ^`java.util.List` := v1 @kind object;
  #L1592da.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.u` v1 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/u;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1592ec.  v0:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L1592f0.  if v1 != v0 then goto L1592fa;
  #L1592f4.  v0:= `@@com.b.a.b.a.n.t` @type ^`com.b.a.v` @kind object;
  #L1592f8.  return v0 @kind object;
  #L1592fa.  v0:= new `com.b.a.f$4`;
  #L1592fe.  call `<init>`(v0) @signature `Lcom/b/a/f$4;.<init>:()V` @kind direct;
  #L159304.  goto L1592f8;
}
procedure `com.b.a.v` `a`(`com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/v;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L159318.  v0:= new `com.b.a.f$5`;
  #L15931c.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$5;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L159322.  call temp:= `a`(v0) @signature `Lcom/b/a/f$5;.a:()Lcom/b/a/v;` @kind virtual;
  #L159328.  v0:= temp @kind object;
  #L15932a.  return v0 @kind object;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v1 @kind this, `boolean` v2 ) @signature `Lcom/b/a/f;.a:(Z)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L15933c.  if v2 == 0 then goto L159346;
  #L159340.  v0:= `@@com.b.a.b.a.n.v` @type ^`com.b.a.v` @kind object;
  #L159344.  return v0 @kind object;
  #L159346.  v0:= new `com.b.a.f$2`;
  #L15934a.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$2;.<init>:(Lcom/b/a/f;)V` @kind direct;
  #L159350.  goto L159344;
}
procedure `void` `a`(`double` v4 ) @signature `Lcom/b/a/f;.a:(D)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L159364.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L15936a.  v0:= temp;
  #L15936c.  if v0 != 0 then goto L15937c;
  #L159370.  call temp:= `isInfinite`(v4) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L159376.  v0:= temp;
  #L159378.  if v0 == 0 then goto L1593ae;
  #L15937c.  v0:= new `java.lang.IllegalArgumentException`;
  #L159380.  v1:= new `java.lang.StringBuilder`;
  #L159384.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15938a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L159390.  v1:= temp @kind object;
  #L159392.  v2:= " is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method." @kind object;
  #L159396.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15939c.  v1:= temp @kind object;
  #L15939e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1593a4.  v1:= temp @kind object;
  #L1593a6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1593ac.  throw v0;
  #L1593ae.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v2 @kind object, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/Object;Lcom/b/a/d/a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1593c0.  if v2 == 0 then goto L159400;
  #Try_start0.  
  #L1593c4.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1593ca.  v0:= temp @kind object;
  #L1593cc.  v1:= `@@com.b.a.d.b.j` @type ^`com.b.a.d.b` @kind object;
  #L1593d0.  if v0 == v1 then goto L159400;
  #L1593d4.  v0:= new `com.b.a.m`;
  #L1593d8.  v1:= "JSON document was not fully consumed." @kind object;
  #L1593dc.  call `<init>`(v0, v1) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1593e2.  throw v0;
  #Try_end0.  
  #L1593e4.  v0:= Exception @type ^`com.b.a.d.d` @kind object;
  #L1593e6.  v1:= new `com.b.a.t`;
  #L1593ea.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1593f0.  throw v1;
  #L1593f2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1593f4.  v1:= new `com.b.a.m`;
  #L1593f8.  call `<init>`(v1, v0) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1593fe.  throw v1;
  #L159400.  return @kind void;
  catch `com.b.a.d.d` @[Try_start0..Try_end0] goto L1593e4;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1593f2;
}
procedure `com.b.a.v` `b`(`com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f;.b:(Lcom/b/a/v;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L159424.  v0:= new `com.b.a.f$6`;
  #L159428.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$6;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L15942e.  call temp:= `a`(v0) @signature `Lcom/b/a/f$6;.a:()Lcom/b/a/v;` @kind virtual;
  #L159434.  v0:= temp @kind object;
  #L159436.  return v0 @kind object;
}
procedure `com.b.a.v` `b`(`com.b.a.f` v1 @kind this, `boolean` v2 ) @signature `Lcom/b/a/f;.b:(Z)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L159448.  if v2 == 0 then goto L159452;
  #L15944c.  v0:= `@@com.b.a.b.a.n.u` @type ^`com.b.a.v` @kind object;
  #L159450.  return v0 @kind object;
  #L159452.  v0:= new `com.b.a.f$3`;
  #L159456.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$3;.<init>:(Lcom/b/a/f;)V` @kind direct;
  #L15945c.  goto L159450;
}
procedure `com.b.a.d.a` `a`(`com.b.a.f` v2 @kind this, `java.io.Reader` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;)Lcom/b/a/d/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159470.  v0:= new `com.b.a.d.a`;
  #L159474.  call `<init>`(v0, v3) @signature `Lcom/b/a/d/a;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L15947a.  v1:= v2.`com.b.a.f.l` @type ^`boolean` @kind boolean;
  #L15947e.  call `a`(v0, v1) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L159484.  return v0 @kind object;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v5 @kind this, `com.b.a.c.a` v6 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L159498.  v1:= v5.`com.b.a.f.c` @type ^`java.util.Map` @kind object;
  #L15949c.  if v6 != 0 then goto L1594b6;
  #L1594a0.  v0:= `@@com.b.a.f.a` @type ^`com.b.a.c.a` @kind object;
  #L1594a4.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1594aa.  v0:= temp @kind object;
  #L1594ac.  v0:= (`com.b.a.v`) v0 @kind object;
  #L1594b0.  if v0 == 0 then goto L1594ba;
  #L1594b4.  return v0 @kind object;
  #L1594b6.  v0:= v6 @kind object;
  #L1594b8.  goto L1594a4;
  #L1594ba.  v0:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L1594be.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L1594c4.  v0:= temp @kind object;
  #L1594c6.  v0:= (`java.util.Map`) v0 @kind object;
  #L1594ca.  v1:= 0I;
  #L1594cc.  if v0 != 0 then goto L1595aa;
  #L1594d0.  v1:= new `java.util.HashMap`;
  #L1594d4.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1594da.  v0:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L1594de.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L1594e4.  v0:= 1I;
  #L1594e6.  v2:= v1 @kind object;
  #L1594e8.  v1:= v0;
  #L1594ea.  call temp:= `get`(v2, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1594f0.  v0:= temp @kind object;
  #L1594f2.  v0:= (`com.b.a.f$a`) v0 @kind object;
  #L1594f6.  if v0 != 0 then goto L1594b4;
  #Try_start0.  
  #L1594fa.  v3:= new `com.b.a.f$a`;
  #L1594fe.  call `<init>`(v3) @signature `Lcom/b/a/f$a;.<init>:()V` @kind direct;
  #L159504.  call temp:= `put`(v2, v6, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15950a.  v0:= v5.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L15950e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L159514.  v4:= temp @kind object;
  #L159516.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15951c.  v0:= temp;
  #L15951e.  if v0 == 0 then goto L159560;
  #L159522.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L159528.  v0:= temp @kind object;
  #L15952a.  v0:= (`com.b.a.w`) v0 @kind object;
  #L15952e.  call temp:= `a`(v0, v5, v6) @signature `Lcom/b/a/w;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind interface;
  #L159534.  v0:= temp @kind object;
  #L159536.  if v0 == 0 then goto L159516;
  #L15953a.  call `a`(v3, v0) @signature `Lcom/b/a/f$a;.a:(Lcom/b/a/v;)V` @kind virtual;
  #L159540.  v3:= v5.`com.b.a.f.c` @type ^`java.util.Map` @kind object;
  #L159544.  call temp:= `put`(v3, v6, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L15954a.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L159550.  if v1 == 0 then goto L1594b4;
  #L159554.  v1:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L159558.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L15955e.  goto L1594b4;
  #Try_start1.  
  #L159560.  v0:= new `java.lang.IllegalArgumentException`;
  #L159564.  v3:= new `java.lang.StringBuilder`;
  #L159568.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15956e.  v4:= "GSON cannot handle " @kind object;
  #L159572.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159578.  v3:= temp @kind object;
  #L15957a.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159580.  v3:= temp @kind object;
  #L159582.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159588.  v3:= temp @kind object;
  #L15958a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159590.  throw v0;
  #Try_end1.  
  #L159592.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L159594.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15959a.  if v1 == 0 then goto L1595a8;
  #L15959e.  v1:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L1595a2.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L1595a8.  throw v0;
  #L1595aa.  v2:= v0 @kind object;
  #L1595ac.  goto L1594ea;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L159592;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L159592;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v3 @kind this, `com.b.a.w` v4 @kind object, `com.b.a.c.a` v5 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/w;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1595d4.  v0:= v3.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L1595d8.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1595de.  v0:= temp;
  #L1595e0.  if v0 != 0 then goto L1595e8;
  #L1595e4.  v4:= v3.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L1595e8.  v0:= 0I;
  #L1595ea.  v1:= v3.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L1595ee.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1595f4.  v2:= temp @kind object;
  #L1595f6.  v1:= v0;
  #L1595f8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1595fe.  v0:= temp;
  #L159600.  if v0 == 0 then goto L15962c;
  #L159604.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15960a.  v0:= temp @kind object;
  #L15960c.  v0:= (`com.b.a.w`) v0 @kind object;
  #L159610.  if v1 != 0 then goto L15961e;
  #L159614.  if v0 != v4 then goto L1595f8;
  #L159618.  v0:= 1I;
  #L15961a.  v1:= v0;
  #L15961c.  goto L1595f8;
  #L15961e.  call temp:= `a`(v0, v3, v5) @signature `Lcom/b/a/w;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind interface;
  #L159624.  v0:= temp @kind object;
  #L159626.  if v0 == 0 then goto L1595f8;
  #L15962a.  return v0 @kind object;
  #L15962c.  v0:= new `java.lang.IllegalArgumentException`;
  #L159630.  v1:= new `java.lang.StringBuilder`;
  #L159634.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15963a.  v2:= "GSON cannot serialize " @kind object;
  #L15963e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159644.  v1:= temp @kind object;
  #L159646.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15964c.  v1:= temp @kind object;
  #L15964e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159654.  v1:= temp @kind object;
  #L159656.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15965c.  throw v0;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/Class;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159670.  call temp:= `b`(v2) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @kind static;
  #L159676.  v0:= temp @kind object;
  #L159678.  call temp:= `a`(v1, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L15967e.  v0:= temp @kind object;
  #L159680.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v3 @kind this, `com.b.a.d.a` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/d/a;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L159694.  v1:= 1I;
  #L159696.  call temp:= `q`(v4) @signature `Lcom/b/a/d/a;.q:()Z` @kind virtual;
  #L15969c.  v2:= temp;
  #L15969e.  call `a`(v4, v1) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #Try_start0.  
  #L1596a4.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1596aa.  v1:= 0I;
  #L1596ac.  call temp:= `a`(v5) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L1596b2.  v0:= temp @kind object;
  #L1596b4.  call temp:= `a`(v3, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L1596ba.  v0:= temp @kind object;
  #L1596bc.  call temp:= `b`(v0, v4) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L1596c2.  v0:= temp @kind object;
  #L1596c4.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L1596ca.  return v0 @kind object;
  #L1596cc.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L1596ce.  if v1 == 0 then goto L1596dc;
  #L1596d2.  v0:= 0I;
  #L1596d4.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L1596da.  goto L1596ca;
  #Try_start1.  
  #L1596dc.  v1:= new `com.b.a.t`;
  #L1596e0.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1596e6.  throw v1;
  #Try_end1.  
  #L1596e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1596ea.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L1596f0.  throw v0;
  #L1596f2.  v0:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #Try_start2.  
  #L1596f4.  v1:= new `com.b.a.t`;
  #L1596f8.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1596fe.  throw v1;
  #L159700.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L159702.  v1:= new `com.b.a.t`;
  #L159706.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15970c.  throw v1;
  #Try_end2.  
  catch `java.io.EOFException` @[Try_start0..Try_end0] goto L1596cc;
  catch `java.lang.IllegalStateException` @[Try_start0..Try_end0] goto L1596f2;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L159700;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1596e8;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1596e8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1596e8;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v2 @kind this, `java.io.Reader` v3 @kind object, `java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159748.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;)Lcom/b/a/d/a;` @kind virtual;
  #L15974e.  v0:= temp @kind object;
  #L159750.  call temp:= `a`(v2, v0, v4) @signature `Lcom/b/a/f;.a:(Lcom/b/a/d/a;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L159756.  v1:= temp @kind object;
  #L159758.  call `a`(v1, v0) @signature `Lcom/b/a/f;.a:(Ljava/lang/Object;Lcom/b/a/d/a;)V` @kind static;
  #L15975e.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159770.  call temp:= `a`(v2, v3, v4) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L159776.  v0:= temp @kind object;
  #L159778.  call temp:= `a`(v4) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L15977e.  v1:= temp @kind object;
  #L159780.  call temp:= `cast`(v1, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L159786.  v0:= temp @kind object;
  #L159788.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15979c.  if v2 != 0 then goto L1597a4;
  #L1597a0.  v0:= 0I;
  #L1597a2.  return v0 @kind object;
  #L1597a4.  v0:= new `java.io.StringReader`;
  #L1597a8.  call `<init>`(v0, v2) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1597ae.  call temp:= `a`(v1, v0, v3) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L1597b4.  v0:= temp @kind object;
  #L1597b6.  goto L1597a2;
}
procedure `java.lang.String` `toString`(`com.b.a.f` v2 @kind this) @signature `Lcom/b/a/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1597c8.  v0:= new `java.lang.StringBuilder`;
  #L1597cc.  v1:= "{serializeNulls:" @kind object;
  #L1597d0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1597d6.  v1:= v2.`com.b.a.f.h` @type ^`boolean` @kind boolean;
  #L1597da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1597e0.  v0:= temp @kind object;
  #L1597e2.  v1:= "factories:" @kind object;
  #L1597e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1597ec.  v0:= temp @kind object;
  #L1597ee.  v1:= v2.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L1597f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1597f8.  v0:= temp @kind object;
  #L1597fa.  v1:= ",instanceCreators:" @kind object;
  #L1597fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159804.  v0:= temp @kind object;
  #L159806.  v1:= v2.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L15980a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159810.  v0:= temp @kind object;
  #L159812.  v1:= "}" @kind object;
  #L159816.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15981c.  v0:= temp @kind object;
  #L15981e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159824.  v0:= temp @kind object;
  #L159826.  return v0 @kind object;
}

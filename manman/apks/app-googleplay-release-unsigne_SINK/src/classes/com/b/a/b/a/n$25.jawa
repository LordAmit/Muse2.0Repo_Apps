record `com.b.a.b.a.n$25` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `java.lang.Class` `com.b.a.b.a.n$25.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.n$25.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.n$25` v0 @kind this, `java.lang.Class` v1 @kind object, `com.b.a.v` v2 @kind object) @signature `Lcom/b/a/b/a/n$25;.<init>:(Ljava/lang/Class;Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L153cbc.  v0.`com.b.a.b.a.n$25.a` @type ^`java.lang.Class` := v1 @kind object;
  #L153cc0.  v0.`com.b.a.b.a.n$25.b` @type ^`com.b.a.v` := v2 @kind object;
  #L153cc4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L153cca.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.n$25` v2 @kind this, `com.b.a.f` v3 @kind object, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/a/n$25;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L153cdc.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L153ce2.  v0:= temp @kind object;
  #L153ce4.  v1:= v2.`com.b.a.b.a.n$25.a` @type ^`java.lang.Class` @kind object;
  #L153ce8.  if v0 != v1 then goto L153cf2;
  #L153cec.  v0:= v2.`com.b.a.b.a.n$25.b` @type ^`com.b.a.v` @kind object;
  #L153cf0.  return v0 @kind object;
  #L153cf2.  v0:= 0I;
  #L153cf4.  goto L153cf0;
}
procedure `java.lang.String` `toString`(`com.b.a.b.a.n$25` v2 @kind this) @signature `Lcom/b/a/b/a/n$25;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L153d08.  v0:= new `java.lang.StringBuilder`;
  #L153d0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153d12.  v1:= "Factory[type=" @kind object;
  #L153d16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153d1c.  v0:= temp @kind object;
  #L153d1e.  v1:= v2.`com.b.a.b.a.n$25.a` @type ^`java.lang.Class` @kind object;
  #L153d22.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L153d28.  v1:= temp @kind object;
  #L153d2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153d30.  v0:= temp @kind object;
  #L153d32.  v1:= ",adapter=" @kind object;
  #L153d36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153d3c.  v0:= temp @kind object;
  #L153d3e.  v1:= v2.`com.b.a.b.a.n$25.b` @type ^`com.b.a.v` @kind object;
  #L153d42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153d48.  v0:= temp @kind object;
  #L153d4a.  v1:= "]" @kind object;
  #L153d4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153d54.  v0:= temp @kind object;
  #L153d56.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153d5c.  v0:= temp @kind object;
  #L153d5e.  return v0 @kind object;
}

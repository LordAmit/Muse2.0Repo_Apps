record `com.b.a.q` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.l` @kind class {
  `java.lang.Object` `com.b.a.q.b` @AccessFlag PRIVATE;
}
global `java.lang.Class`[] `@@com.b.a.q.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L15a100.  v0:= 16I;
  #L15a104.  v0:= new `java.lang.Class`[v0];
  #L15a108.  v1:= 0I;
  #L15a10a.  v2:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L15a10e.  v0[v1]:= v2 @kind object;
  #L15a112.  v1:= 1I;
  #L15a114.  v2:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L15a118.  v0[v1]:= v2 @kind object;
  #L15a11c.  v1:= 2I;
  #L15a11e.  v2:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L15a122.  v0[v1]:= v2 @kind object;
  #L15a126.  v1:= 3I;
  #L15a128.  v2:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L15a12c.  v0[v1]:= v2 @kind object;
  #L15a130.  v1:= 4I;
  #L15a132.  v2:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L15a136.  v0[v1]:= v2 @kind object;
  #L15a13a.  v1:= 5I;
  #L15a13c.  v2:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L15a140.  v0[v1]:= v2 @kind object;
  #L15a144.  v1:= 6I;
  #L15a146.  v2:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L15a14a.  v0[v1]:= v2 @kind object;
  #L15a14e.  v1:= 7I;
  #L15a150.  v2:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L15a154.  v0[v1]:= v2 @kind object;
  #L15a158.  v1:= 8I;
  #L15a15c.  v2:= constclass @type ^`java.lang.Integer` @kind object;
  #L15a160.  v0[v1]:= v2 @kind object;
  #L15a164.  v1:= 9I;
  #L15a168.  v2:= constclass @type ^`java.lang.Long` @kind object;
  #L15a16c.  v0[v1]:= v2 @kind object;
  #L15a170.  v1:= 10I;
  #L15a174.  v2:= constclass @type ^`java.lang.Short` @kind object;
  #L15a178.  v0[v1]:= v2 @kind object;
  #L15a17c.  v1:= 11I;
  #L15a180.  v2:= constclass @type ^`java.lang.Float` @kind object;
  #L15a184.  v0[v1]:= v2 @kind object;
  #L15a188.  v1:= 12I;
  #L15a18c.  v2:= constclass @type ^`java.lang.Double` @kind object;
  #L15a190.  v0[v1]:= v2 @kind object;
  #L15a194.  v1:= 13I;
  #L15a198.  v2:= constclass @type ^`java.lang.Byte` @kind object;
  #L15a19c.  v0[v1]:= v2 @kind object;
  #L15a1a0.  v1:= 14I;
  #L15a1a4.  v2:= constclass @type ^`java.lang.Boolean` @kind object;
  #L15a1a8.  v0[v1]:= v2 @kind object;
  #L15a1ac.  v1:= 15I;
  #L15a1b0.  v2:= constclass @type ^`java.lang.Character` @kind object;
  #L15a1b4.  v0[v1]:= v2 @kind object;
  #L15a1b8.  `@@com.b.a.q.a` @type ^`java.lang.Class`[] := v0 @kind object;
  #L15a1bc.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.Boolean` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/Boolean;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15a1d0.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L15a1d6.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L15a1dc.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15a1f0.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L15a1f6.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L15a1fc.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15a210.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L15a216.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L15a21c.  return @kind void;
}
procedure `boolean` `a`(`com.b.a.q` v3 @kind object) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15a230.  v1:= 0I;
  #L15a232.  v0:= v3.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a236.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L15a23a.  if v0 == 0 then goto L15a276;
  #L15a23e.  v0:= v3.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a242.  v0:= (`java.lang.Number`) v0 @kind object;
  #L15a246.  v2:= instanceof @variable v0 @type ^`java.math.BigInteger` @kind boolean;
  #L15a24a.  if v2 != 0 then goto L15a26e;
  #L15a24e.  v2:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L15a252.  if v2 != 0 then goto L15a26e;
  #L15a256.  v2:= instanceof @variable v0 @type ^`java.lang.Integer` @kind boolean;
  #L15a25a.  if v2 != 0 then goto L15a26e;
  #L15a25e.  v2:= instanceof @variable v0 @type ^`java.lang.Short` @kind boolean;
  #L15a262.  if v2 != 0 then goto L15a26e;
  #L15a266.  v0:= instanceof @variable v0 @type ^`java.lang.Byte` @kind boolean;
  #L15a26a.  if v0 == 0 then goto L15a272;
  #L15a26e.  v0:= 1I;
  #L15a270.  return v0;
  #L15a272.  v0:= v1;
  #L15a274.  goto L15a270;
  #L15a276.  v0:= v1;
  #L15a278.  goto L15a270;
}
procedure `boolean` `b`(`java.lang.Object` v7 @kind object) @signature `Lcom/b/a/q;.b:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15a28c.  v0:= 1I;
  #L15a28e.  v1:= 0I;
  #L15a290.  v2:= instanceof @variable v7 @type ^`java.lang.String` @kind boolean;
  #L15a294.  if v2 == 0 then goto L15a29a;
  #L15a298.  return v0;
  #L15a29a.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15a2a0.  v3:= temp @kind object;
  #L15a2a2.  v4:= `@@com.b.a.q.a` @type ^`java.lang.Class`[] @kind object;
  #L15a2a6.  v5:= length @variable v4;
  #L15a2a8.  v2:= v1;
  #L15a2aa.  if v2 >= v5 then goto L15a2c4;
  #L15a2ae.  v6:= v4[v2] @kind object;
  #L15a2b2.  call temp:= `isAssignableFrom`(v6, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L15a2b8.  v6:= temp;
  #L15a2ba.  if v6 != 0 then goto L15a298;
  #L15a2be.  v2:= v2 + 1;
  #L15a2c2.  goto L15a2aa;
  #L15a2c4.  v0:= v1;
  #L15a2c6.  goto L15a298;
}
procedure `java.lang.Number` `a`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15a2d8.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a2dc.  v0:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L15a2e0.  if v0 == 0 then goto L15a2fa;
  #L15a2e4.  v1:= new `com.b.a.b.f`;
  #L15a2e8.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a2ec.  v0:= (`java.lang.String`) v0 @kind object;
  #L15a2f0.  call `<init>`(v1, v0) @signature `Lcom/b/a/b/f;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15a2f6.  v0:= v1 @kind object;
  #L15a2f8.  return v0 @kind object;
  #L15a2fa.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a2fe.  v0:= (`java.lang.Number`) v0 @kind object;
  #L15a302.  goto L15a2f8;
}
procedure `void` `a`(`com.b.a.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L15a314.  v0:= instanceof @variable v2 @type ^`java.lang.Character` @kind boolean;
  #L15a318.  if v0 == 0 then goto L15a336;
  #L15a31c.  v2:= (`java.lang.Character`) v2 @kind object;
  #L15a320.  call temp:= `charValue`(v2) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L15a326.  v0:= temp;
  #L15a328.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L15a32e.  v0:= temp @kind object;
  #L15a330.  v1.`com.b.a.q.b` @type ^`java.lang.Object` := v0 @kind object;
  #L15a334.  return @kind void;
  #L15a336.  v0:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L15a33a.  if v0 != 0 then goto L15a34a;
  #L15a33e.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:(Ljava/lang/Object;)Z` @kind static;
  #L15a344.  v0:= temp;
  #L15a346.  if v0 == 0 then goto L15a358;
  #L15a34a.  v0:= 1I;
  #L15a34c.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L15a352.  v1.`com.b.a.q.b` @type ^`java.lang.Object` := v2 @kind object;
  #L15a356.  goto L15a334;
  #L15a358.  v0:= 0I;
  #L15a35a.  goto L15a34c;
}
procedure `java.lang.String` `b`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a36c.  call temp:= `p`(v1) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L15a372.  v0:= temp;
  #L15a374.  if v0 == 0 then goto L15a38a;
  #L15a378.  call temp:= `a`(v1) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a37e.  v0:= temp @kind object;
  #L15a380.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15a386.  v0:= temp @kind object;
  #L15a388.  return v0 @kind object;
  #L15a38a.  call temp:= `o`(v1) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L15a390.  v0:= temp;
  #L15a392.  if v0 == 0 then goto L15a3a8;
  #L15a396.  call temp:= `n`(v1) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @kind virtual;
  #L15a39c.  v0:= temp @kind object;
  #L15a39e.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:()Ljava/lang/String;` @kind virtual;
  #L15a3a4.  v0:= temp @kind object;
  #L15a3a6.  goto L15a388;
  #L15a3a8.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a3ac.  v0:= (`java.lang.String`) v0 @kind object;
  #L15a3b0.  goto L15a388;
}
procedure `double` `c`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.c:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15a3c4.  call temp:= `p`(v2) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L15a3ca.  v0:= temp;
  #L15a3cc.  if v0 == 0 then goto L15a3e2;
  #L15a3d0.  call temp:= `a`(v2) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a3d6.  v0:= temp @kind object;
  #L15a3d8.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L15a3de.  v0:= temp @kind wide;
  #L15a3e0.  return v0 @kind wide;
  #L15a3e2.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L15a3e8.  v0:= temp @kind object;
  #L15a3ea.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L15a3f0.  v0:= temp @kind wide;
  #L15a3f2.  goto L15a3e0;
}
procedure `long` `d`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15a404.  call temp:= `p`(v2) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L15a40a.  v0:= temp;
  #L15a40c.  if v0 == 0 then goto L15a422;
  #L15a410.  call temp:= `a`(v2) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a416.  v0:= temp @kind object;
  #L15a418.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L15a41e.  v0:= temp @kind wide;
  #L15a420.  return v0 @kind wide;
  #L15a422.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L15a428.  v0:= temp @kind object;
  #L15a42a.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L15a430.  v0:= temp @kind wide;
  #L15a432.  goto L15a420;
}
procedure `int` `e`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a444.  call temp:= `p`(v1) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L15a44a.  v0:= temp;
  #L15a44c.  if v0 == 0 then goto L15a462;
  #L15a450.  call temp:= `a`(v1) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a456.  v0:= temp @kind object;
  #L15a458.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L15a45e.  v0:= temp;
  #L15a460.  return v0;
  #L15a462.  call temp:= `b`(v1) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L15a468.  v0:= temp @kind object;
  #L15a46a.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L15a470.  v0:= temp;
  #L15a472.  goto L15a460;
}
procedure `boolean` `equals`(`com.b.a.q` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/b/a/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15a484.  v0:= 1I;
  #L15a486.  v1:= 0I;
  #L15a488.  if v7 != v8 then goto L15a48e;
  #L15a48c.  return v0;
  #L15a48e.  if v8 == 0 then goto L15a4a6;
  #L15a492.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15a498.  v2:= temp @kind object;
  #L15a49a.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15a4a0.  v3:= temp @kind object;
  #L15a4a2.  if v2 == v3 then goto L15a4aa;
  #L15a4a6.  v0:= v1;
  #L15a4a8.  goto L15a48c;
  #L15a4aa.  v8:= (`com.b.a.q`) v8 @kind object;
  #L15a4ae.  v2:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a4b2.  if v2 != 0 then goto L15a4c2;
  #L15a4b6.  v2:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a4ba.  if v2 == 0 then goto L15a48c;
  #L15a4be.  v0:= v1;
  #L15a4c0.  goto L15a48c;
  #L15a4c2.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L15a4c8.  v2:= temp;
  #L15a4ca.  if v2 == 0 then goto L15a506;
  #L15a4ce.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L15a4d4.  v2:= temp;
  #L15a4d6.  if v2 == 0 then goto L15a506;
  #L15a4da.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a4e0.  v2:= temp @kind object;
  #L15a4e2.  call temp:= `longValue`(v2) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L15a4e8.  v2:= temp @kind wide;
  #L15a4ea.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a4f0.  v4:= temp @kind object;
  #L15a4f2.  call temp:= `longValue`(v4) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L15a4f8.  v4:= temp @kind wide;
  #L15a4fa.  v2:= lcmp(v2, v4);
  #L15a4fe.  if v2 == 0 then goto L15a48c;
  #L15a502.  v0:= v1;
  #L15a504.  goto L15a48c;
  #L15a506.  v2:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a50a.  v2:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L15a50e.  if v2 == 0 then goto L15a564;
  #L15a512.  v2:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a516.  v2:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L15a51a.  if v2 == 0 then goto L15a564;
  #L15a51e.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a524.  v2:= temp @kind object;
  #L15a526.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L15a52c.  v2:= temp @kind wide;
  #L15a52e.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a534.  v4:= temp @kind object;
  #L15a536.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L15a53c.  v4:= temp @kind wide;
  #L15a53e.  v6:= dcmpl(v2, v4);
  #L15a542.  if v6 == 0 then goto L15a55e;
  #L15a546.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L15a54c.  v2:= temp;
  #L15a54e.  if v2 == 0 then goto L15a560;
  #L15a552.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L15a558.  v2:= temp;
  #L15a55a.  if v2 == 0 then goto L15a560;
  #L15a55e.  v1:= v0;
  #L15a560.  v0:= v1;
  #L15a562.  goto L15a48c;
  #L15a564.  v0:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a568.  v1:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a56c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15a572.  v0:= temp;
  #L15a574.  goto L15a48c;
}
procedure `boolean` `f`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a588.  call temp:= `o`(v1) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L15a58e.  v0:= temp;
  #L15a590.  if v0 == 0 then goto L15a5a6;
  #L15a594.  call temp:= `n`(v1) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @kind virtual;
  #L15a59a.  v0:= temp @kind object;
  #L15a59c.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L15a5a2.  v0:= temp;
  #L15a5a4.  return v0;
  #L15a5a6.  call temp:= `b`(v1) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L15a5ac.  v0:= temp @kind object;
  #L15a5ae.  call temp:= `parseBoolean`(v0) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15a5b4.  v0:= temp;
  #L15a5b6.  goto L15a5a4;
}
procedure `int` `hashCode`(`com.b.a.q` v4 @kind this) @signature `Lcom/b/a/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15a5c8.  v2:= 32I;
  #L15a5cc.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a5d0.  if v0 != 0 then goto L15a5da;
  #L15a5d4.  v0:= 31I;
  #L15a5d8.  return v0;
  #L15a5da.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L15a5e0.  v0:= temp;
  #L15a5e2.  if v0 == 0 then goto L15a600;
  #L15a5e6.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a5ec.  v0:= temp @kind object;
  #L15a5ee.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L15a5f4.  v0:= temp @kind wide;
  #L15a5f6.  v2:= v0 ^>> v2 @kind long;
  #L15a5fa.  v0:= v0 ^~ v2 @kind long;
  #L15a5fc.  v0:= (`int`) v0 @kind l2i;
  #L15a5fe.  goto L15a5d8;
  #L15a600.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a604.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L15a608.  if v0 == 0 then goto L15a62e;
  #L15a60c.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L15a612.  v0:= temp @kind object;
  #L15a614.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L15a61a.  v0:= temp @kind wide;
  #L15a61c.  call temp:= `doubleToLongBits`(v0) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L15a622.  v0:= temp @kind wide;
  #L15a624.  v2:= v0 ^>> v2 @kind long;
  #L15a628.  v0:= v0 ^~ v2 @kind long;
  #L15a62a.  v0:= (`int`) v0 @kind l2i;
  #L15a62c.  goto L15a5d8;
  #L15a62e.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a632.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L15a638.  v0:= temp;
  #L15a63a.  goto L15a5d8;
}
procedure `java.lang.Boolean` `n`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @AccessFlag  {
    temp;
    v0;

  #L15a64c.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a650.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L15a654.  return v0 @kind object;
}
procedure `boolean` `o`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.o:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a668.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a66c.  v0:= instanceof @variable v0 @type ^`java.lang.Boolean` @kind boolean;
  #L15a670.  return v0;
}
procedure `boolean` `p`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.p:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a684.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a688.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L15a68c.  return v0;
}
procedure `boolean` `q`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a6a0.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L15a6a4.  v0:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L15a6a8.  return v0;
}

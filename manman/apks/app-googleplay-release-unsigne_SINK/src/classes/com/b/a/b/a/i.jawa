record `com.b.a.b.a.i` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.w` @kind interface {
  `com.b.a.b.c` `com.b.a.b.a.i.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.e` `com.b.a.b.a.i.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.d` `com.b.a.b.a.i.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.d` `com.b.a.b.a.i.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.i` v0 @kind this, `com.b.a.b.c` v1 @kind object, `com.b.a.e` v2 @kind object, `com.b.a.b.d` v3 @kind object, `com.b.a.b.a.d` v4 @kind object) @signature `Lcom/b/a/b/a/i;.<init>:(Lcom/b/a/b/c;Lcom/b/a/e;Lcom/b/a/b/d;Lcom/b/a/b/a/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L152190.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152196.  v0.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` := v1 @kind object;
  #L15219a.  v0.`com.b.a.b.a.i.b` @type ^`com.b.a.e` := v2 @kind object;
  #L15219e.  v0.`com.b.a.b.a.i.c` @type ^`com.b.a.b.d` := v3 @kind object;
  #L1521a2.  v0.`com.b.a.b.a.i.d` @type ^`com.b.a.b.a.d` := v4 @kind object;
  #L1521a6.  return @kind void;
}
procedure `com.b.a.b.a.i$b` `a`(`com.b.a.b.a.i` v11 @kind this, `com.b.a.f` v12 @kind object, `java.lang.reflect.Field` v13 @kind object, `java.lang.String` v14 @kind object, `com.b.a.c.a` v15 @kind object, `boolean` v16 , `boolean` v17 ) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/b/a/c/a;ZZ)Lcom/b/a/b/a/i$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1521b8.  call temp:= `a`(v15) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L1521be.  v0:= temp @kind object;
  #L1521c0.  call temp:= `a`(v0) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L1521c6.  v10:= temp;
  #L1521c8.  v0:= constclass @type ^`com.b.a.a.b` @kind object;
  #L1521cc.  call temp:= `getAnnotation`(v13, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1521d2.  v0:= temp @kind object;
  #L1521d4.  v0:= (`com.b.a.a.b`) v0 @kind object;
  #L1521d8.  v7:= 0I;
  #L1521da.  if v0 == 0 then goto L1521ee;
  #L1521de.  v1:= v11.`com.b.a.b.a.i.d` @type ^`com.b.a.b.a.d` @kind object;
  #L1521e2.  v2:= v11.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` @kind object;
  #L1521e6.  call temp:= `a`(v1, v2, v12, v15, v0) @signature `Lcom/b/a/b/a/d;.a:(Lcom/b/a/b/c;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/a/b;)Lcom/b/a/v;` @kind virtual;
  #L1521ec.  v7:= temp @kind object;
  #L1521ee.  if v7 == 0 then goto L15221e;
  #L1521f2.  v6:= 1I;
  #L1521f4.  if v7 != 0 then goto L152200;
  #L1521f8.  call temp:= `a`(v12, v15) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L1521fe.  v7:= temp @kind object;
  #L152200.  v0:= new `com.b.a.b.a.i$1`;
  #L152204.  v1:= v11 @kind object;
  #L152206.  v2:= v14 @kind object;
  #L152208.  v3:= v16;
  #L15220c.  v4:= v17;
  #L152210.  v5:= v13 @kind object;
  #L152212.  v8:= v12 @kind object;
  #L152214.  v9:= v15 @kind object;
  #L152216.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/b/a/b/a/i$1;.<init>:(Lcom/b/a/b/a/i;Ljava/lang/String;ZZLjava/lang/reflect/Field;ZLcom/b/a/v;Lcom/b/a/f;Lcom/b/a/c/a;Z)V` @kind direct;
  #L15221c.  return v0 @kind object;
  #L15221e.  v6:= 0I;
  #L152220.  goto L1521f4;
}
procedure `java.util.List` `a`(`com.b.a.b.a.i` v5 @kind this, `java.lang.reflect.Field` v6 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L152234.  v0:= constclass @type ^`com.b.a.a.c` @kind object;
  #L152238.  call temp:= `getAnnotation`(v6, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L15223e.  v0:= temp @kind object;
  #L152240.  v0:= (`com.b.a.a.c`) v0 @kind object;
  #L152244.  if v0 != 0 then goto L15225e;
  #L152248.  v0:= v5.`com.b.a.b.a.i.b` @type ^`com.b.a.e` @kind object;
  #L15224c.  call temp:= `a`(v0, v6) @signature `Lcom/b/a/e;.a:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind interface;
  #L152252.  v0:= temp @kind object;
  #L152254.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L15225a.  v0:= temp @kind object;
  #L15225c.  return v0 @kind object;
  #L15225e.  call temp:= `a`(v0) @signature `Lcom/b/a/a/c;.a:()Ljava/lang/String;` @kind interface;
  #L152264.  v1:= temp @kind object;
  #L152266.  call temp:= `b`(v0) @signature `Lcom/b/a/a/c;.b:()[Ljava/lang/String;` @kind interface;
  #L15226c.  v2:= temp @kind object;
  #L15226e.  v0:= length @variable v2;
  #L152270.  if v0 != 0 then goto L15227e;
  #L152274.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L15227a.  v0:= temp @kind object;
  #L15227c.  goto L15225c;
  #L15227e.  v0:= new `java.util.ArrayList`;
  #L152282.  v3:= length @variable v2;
  #L152284.  v3:= v3 + 1;
  #L152288.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L15228e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L152294.  v3:= length @variable v2;
  #L152296.  v1:= 0I;
  #L152298.  if v1 >= v3 then goto L15225c;
  #L15229c.  v4:= v2[v1] @kind object;
  #L1522a0.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1522a6.  v1:= v1 + 1;
  #L1522aa.  goto L152298;
}
procedure `java.util.Map` `a`(`com.b.a.b.a.i` v17 @kind this, `com.b.a.f` v18 @kind object, `com.b.a.c.a` v19 @kind object, `java.lang.Class` v20 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;Ljava/lang/Class;)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L1522bc.  v10:= new `java.util.LinkedHashMap`;
  #L1522c0.  call `<init>`(v10) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1522c6.  call temp:= `isInterface`(v20) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L1522cc.  v1:= temp;
  #L1522ce.  if v1 == 0 then goto L1522d6;
  #L1522d2.  v1:= v10 @kind object;
  #L1522d4.  return v1 @kind object;
  #L1522d6.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1522dc.  v12:= temp @kind object;
  #L1522de.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1522e2.  v0:= v20 @kind object;
  #L1522e6.  if v0 == v1 then goto L152428;
  #L1522ea.  call temp:= `getDeclaredFields`(v20) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L1522f0.  v13:= temp @kind object;
  #L1522f2.  v14:= length @variable v13;
  #L1522f4.  v1:= 0I;
  #L1522f6.  v11:= v1;
  #L1522f8.  if v11 >= v14 then goto L1523f8;
  #L1522fc.  v3:= v13[v11] @kind object;
  #L152300.  v1:= 1I;
  #L152302.  v0:= v17 @kind object;
  #L152306.  call temp:= `a`(v0, v3, v1) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L15230c.  v6:= temp;
  #L15230e.  v1:= 0I;
  #L152310.  v0:= v17 @kind object;
  #L152314.  call temp:= `a`(v0, v3, v1) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L15231a.  v7:= temp;
  #L15231c.  if v6 != 0 then goto L15232c;
  #L152320.  if v7 != 0 then goto L15232c;
  #L152324.  v1:= v11 + 1;
  #L152328.  v11:= v1;
  #L15232a.  goto L1522f8;
  #L15232c.  v1:= 1I;
  #L15232e.  call `setAccessible`(v3, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L152334.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L15233a.  v1:= temp @kind object;
  #L15233c.  call temp:= `getGenericType`(v3) @signature `Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L152342.  v2:= temp @kind object;
  #L152344.  v0:= v20 @kind object;
  #L152348.  call temp:= `a`(v1, v0, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L15234e.  v15:= temp @kind object;
  #L152350.  v0:= v17 @kind object;
  #L152354.  call temp:= `a`(v0, v3) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @kind direct;
  #L15235a.  v16:= temp @kind object;
  #L15235c.  v8:= 0I;
  #L15235e.  v1:= 0I;
  #L152360.  v9:= v1;
  #L152362.  call temp:= `size`(v16) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L152368.  v1:= temp;
  #L15236a.  if v9 >= v1 then goto L1523b6;
  #L15236e.  v0:= v16 @kind object;
  #L152372.  call temp:= `get`(v0, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L152378.  v4:= temp @kind object;
  #L15237a.  v4:= (`java.lang.String`) v4 @kind object;
  #L15237e.  if v9 == 0 then goto L152384;
  #L152382.  v6:= 0I;
  #L152384.  call temp:= `a`(v15) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L15238a.  v5:= temp @kind object;
  #L15238c.  v1:= v17 @kind object;
  #L152390.  v2:= v18 @kind object;
  #L152394.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/b/a/c/a;ZZ)Lcom/b/a/b/a/i$b;` @kind direct;
  #L15239a.  v1:= temp @kind object;
  #L15239c.  call temp:= `put`(v10, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1523a2.  v1:= temp @kind object;
  #L1523a4.  v1:= (`com.b.a.b.a.i$b`) v1 @kind object;
  #L1523a8.  if v8 != 0 then goto L15242e;
  #L1523ac.  v2:= v9 + 1;
  #L1523b0.  v9:= v2;
  #L1523b2.  v8:= v1 @kind object;
  #L1523b4.  goto L152362;
  #L1523b6.  if v8 == 0 then goto L152324;
  #L1523ba.  v1:= new `java.lang.IllegalArgumentException`;
  #L1523be.  v2:= new `java.lang.StringBuilder`;
  #L1523c2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1523c8.  call temp:= `append`(v2, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1523ce.  v2:= temp @kind object;
  #L1523d0.  v3:= " declares multiple JSON fields named " @kind object;
  #L1523d4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1523da.  v2:= temp @kind object;
  #L1523dc.  v3:= v8.`com.b.a.b.a.i$b.h` @type ^`java.lang.String` @kind object;
  #L1523e0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1523e6.  v2:= temp @kind object;
  #L1523e8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1523ee.  v2:= temp @kind object;
  #L1523f0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1523f6.  throw v1;
  #L1523f8.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1523fe.  v1:= temp @kind object;
  #L152400.  call temp:= `getGenericSuperclass`(v20) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L152406.  v2:= temp @kind object;
  #L152408.  v0:= v20 @kind object;
  #L15240c.  call temp:= `a`(v1, v0, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L152412.  v1:= temp @kind object;
  #L152414.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L15241a.  v19:= temp @kind object;
  #L15241c.  call temp:= `a`(v19) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L152422.  v20:= temp @kind object;
  #L152424.  goto L1522de;
  #L152428.  v1:= v10 @kind object;
  #L15242a.  goto L1522d4;
  #L15242e.  v1:= v8 @kind object;
  #L152430.  goto L1523ac;
}
procedure `boolean` `a`(`java.lang.reflect.Field` v1 @kind object, `boolean` v2 , `com.b.a.b.d` v3 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;ZLcom/b/a/b/d;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L152444.  call temp:= `getType`(v1) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L15244a.  v0:= temp @kind object;
  #L15244c.  call temp:= `a`(v3, v0, v2) @signature `Lcom/b/a/b/d;.a:(Ljava/lang/Class;Z)Z` @kind virtual;
  #L152452.  v0:= temp;
  #L152454.  if v0 != 0 then goto L152468;
  #L152458.  call temp:= `a`(v3, v1, v2) @signature `Lcom/b/a/b/d;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L15245e.  v0:= temp;
  #L152460.  if v0 != 0 then goto L152468;
  #L152464.  v0:= 1I;
  #L152466.  return v0;
  #L152468.  v0:= 0I;
  #L15246a.  goto L152466;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.i` v3 @kind this, `com.b.a.f` v4 @kind object, `com.b.a.c.a` v5 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15247c.  call temp:= `a`(v5) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L152482.  v1:= temp @kind object;
  #L152484.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L152488.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L15248e.  v0:= temp;
  #L152490.  if v0 != 0 then goto L152498;
  #L152494.  v0:= 0I;
  #L152496.  return v0 @kind object;
  #L152498.  v0:= v3.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` @kind object;
  #L15249c.  call temp:= `a`(v0, v5) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @kind virtual;
  #L1524a2.  v2:= temp @kind object;
  #L1524a4.  v0:= new `com.b.a.b.a.i$a`;
  #L1524a8.  call temp:= `a`(v3, v4, v5, v1) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;Ljava/lang/Class;)Ljava/util/Map;` @kind direct;
  #L1524ae.  v1:= temp @kind object;
  #L1524b0.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/i$a;.<init>:(Lcom/b/a/b/h;Ljava/util/Map;)V` @kind direct;
  #L1524b6.  goto L152496;
}
procedure `boolean` `a`(`com.b.a.b.a.i` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `boolean` v3 ) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1524c8.  v0:= v1.`com.b.a.b.a.i.c` @type ^`com.b.a.b.d` @kind object;
  #L1524cc.  call temp:= `a`(v2, v3, v0) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;ZLcom/b/a/b/d;)Z` @kind static;
  #L1524d2.  v0:= temp;
  #L1524d4.  return v0;
}

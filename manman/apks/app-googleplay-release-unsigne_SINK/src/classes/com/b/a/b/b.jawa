record `com.b.a.b.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.reflect.Type`[] `@@com.b.a.b.b.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1558a8.  v0:= 0I;
  #L1558aa.  v0:= new `java.lang.reflect.Type`[v0];
  #L1558ae.  `@@com.b.a.b.b.a` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L1558b2.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v1 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L1558c4.  if v1 == 0 then goto L1558d2;
  #L1558c8.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1558ce.  v0:= temp;
  #L1558d0.  return v0;
  #L1558d2.  v0:= 0I;
  #L1558d4.  goto L1558d0;
}
procedure `int` `a`(`java.lang.Object`[] v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/b/b;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1558e8.  v0:= 0I;
  #L1558ea.  v1:= length @variable v2;
  #L1558ec.  if v0 >= v1 then goto L155908;
  #L1558f0.  v1:= v2[v0] @kind object;
  #L1558f4.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1558fa.  v1:= temp;
  #L1558fc.  if v1 == 0 then goto L155902;
  #L155900.  return v0;
  #L155902.  v0:= v0 + 1;
  #L155906.  goto L1558ea;
  #L155908.  v0:= new `java.util.NoSuchElementException`;
  #L15590c.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L155912.  throw v0;
}
procedure `java.lang.Class` `a`(`java.lang.reflect.TypeVariable` v2 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L155924.  call temp:= `getGenericDeclaration`(v2) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L15592a.  v0:= temp @kind object;
  #L15592c.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L155930.  if v1 == 0 then goto L15593a;
  #L155934.  v0:= (`java.lang.Class`) v0 @kind object;
  #L155938.  return v0 @kind object;
  #L15593a.  v0:= 0I;
  #L15593c.  goto L155938;
}
procedure `java.lang.reflect.GenericArrayType` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L155950.  v0:= new `com.b.a.b.b$a`;
  #L155954.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L15595a.  return v0 @kind object;
}
procedure `java.lang.reflect.ParameterizedType` `a`(`java.lang.reflect.Type` v1 @kind object, `java.lang.reflect.Type` v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15596c.  v0:= new `com.b.a.b.b$b`;
  #L155970.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/b/a/b/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L155976.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L155988.  v2:= 0I;
  #L15598a.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L15598e.  call temp:= `b`(v3, v4, v0) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L155994.  v0:= temp @kind object;
  #L155996.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L15599a.  if v1 == 0 then goto L1559ae;
  #L15599e.  v0:= (`java.lang.reflect.WildcardType`) v0 @kind object;
  #L1559a2.  call temp:= `getUpperBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1559a8.  v0:= temp @kind object;
  #L1559aa.  v0:= v0[v2] @kind object;
  #L1559ae.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1559b2.  if v1 == 0 then goto L1559c8;
  #L1559b6.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L1559ba.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1559c0.  v0:= temp @kind object;
  #L1559c2.  v0:= v0[v2] @kind object;
  #L1559c6.  return v0 @kind object;
  #L1559c8.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1559cc.  goto L1559c6;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1559e0.  if v6 != v5 then goto L1559e6;
  #L1559e4.  return v4 @kind object;
  #L1559e6.  call temp:= `isInterface`(v6) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L1559ec.  v0:= temp;
  #L1559ee.  if v0 == 0 then goto L155a48;
  #L1559f2.  call temp:= `getInterfaces`(v5) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L1559f8.  v1:= temp @kind object;
  #L1559fa.  v0:= 0I;
  #L1559fc.  v2:= length @variable v1;
  #L1559fe.  if v0 >= v2 then goto L155a48;
  #L155a02.  v3:= v1[v0] @kind object;
  #L155a06.  if v3 != v6 then goto L155a18;
  #L155a0a.  call temp:= `getGenericInterfaces`(v5) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L155a10.  v1:= temp @kind object;
  #L155a12.  v4:= v1[v0] @kind object;
  #L155a16.  goto L1559e4;
  #L155a18.  v3:= v1[v0] @kind object;
  #L155a1c.  call temp:= `isAssignableFrom`(v6, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L155a22.  v3:= temp;
  #L155a24.  if v3 == 0 then goto L155a42;
  #L155a28.  call temp:= `getGenericInterfaces`(v5) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L155a2e.  v2:= temp @kind object;
  #L155a30.  v2:= v2[v0] @kind object;
  #L155a34.  v0:= v1[v0] @kind object;
  #L155a38.  call temp:= `a`(v2, v0, v6) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L155a3e.  v4:= temp @kind object;
  #L155a40.  goto L1559e4;
  #L155a42.  v0:= v0 + 1;
  #L155a46.  goto L1559fe;
  #L155a48.  call temp:= `isInterface`(v5) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L155a4e.  v0:= temp;
  #L155a50.  if v0 != 0 then goto L155a94;
  #L155a54.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L155a58.  if v5 == v0 then goto L155a94;
  #L155a5c.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L155a62.  v0:= temp @kind object;
  #L155a64.  if v0 != v6 then goto L155a72;
  #L155a68.  call temp:= `getGenericSuperclass`(v5) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L155a6e.  v4:= temp @kind object;
  #L155a70.  goto L1559e4;
  #L155a72.  call temp:= `isAssignableFrom`(v6, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L155a78.  v1:= temp;
  #L155a7a.  if v1 == 0 then goto L155a90;
  #L155a7e.  call temp:= `getGenericSuperclass`(v5) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L155a84.  v1:= temp @kind object;
  #L155a86.  call temp:= `a`(v1, v0, v6) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L155a8c.  v4:= temp @kind object;
  #L155a8e.  goto L1559e4;
  #L155a90.  v5:= v0 @kind object;
  #L155a92.  goto L155a54;
  #L155a94.  v4:= v6 @kind object;
  #L155a96.  goto L1559e4;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v10 @kind object, `java.lang.Class` v11 @kind object, `java.lang.reflect.Type` v12 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L155aa8.  v2:= 1I;
  #L155aaa.  v3:= 0I;
  #L155aac.  v0:= v12 @kind object;
  #L155aae.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L155ab2.  if v1 == 0 then goto L155ace;
  #L155ab6.  v0:= (`java.lang.reflect.TypeVariable`) v0 @kind object;
  #L155aba.  call temp:= `a`(v10, v11, v0) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @kind static;
  #L155ac0.  v12:= temp @kind object;
  #L155ac2.  if v12 != v0 then goto L155aca;
  #L155ac6.  v0:= v12 @kind object;
  #L155ac8.  return v0 @kind object;
  #L155aca.  v0:= v12 @kind object;
  #L155acc.  goto L155aae;
  #L155ace.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L155ad2.  if v1 == 0 then goto L155b0a;
  #L155ad6.  v1:= v0 @kind object;
  #L155ad8.  v1:= (`java.lang.Class`) v1 @kind object;
  #L155adc.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L155ae2.  v1:= temp;
  #L155ae4.  if v1 == 0 then goto L155b0a;
  #L155ae8.  v0:= (`java.lang.Class`) v0 @kind object;
  #L155aec.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L155af2.  v1:= temp @kind object;
  #L155af4.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155afa.  v2:= temp @kind object;
  #L155afc.  if v1 == v2 then goto L155ac8;
  #L155b00.  call temp:= `a`(v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @kind static;
  #L155b06.  v0:= temp @kind object;
  #L155b08.  goto L155ac8;
  #L155b0a.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L155b0e.  if v1 == 0 then goto L155b34;
  #L155b12.  v0:= (`java.lang.reflect.GenericArrayType`) v0 @kind object;
  #L155b16.  call temp:= `getGenericComponentType`(v0) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155b1c.  v1:= temp @kind object;
  #L155b1e.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155b24.  v2:= temp @kind object;
  #L155b26.  if v1 == v2 then goto L155ac8;
  #L155b2a.  call temp:= `a`(v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @kind static;
  #L155b30.  v0:= temp @kind object;
  #L155b32.  goto L155ac8;
  #L155b34.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L155b38.  if v1 == 0 then goto L155bb6;
  #L155b3c.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L155b40.  call temp:= `getOwnerType`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155b46.  v1:= temp @kind object;
  #L155b48.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155b4e.  v5:= temp @kind object;
  #L155b50.  if v5 == v1 then goto L155b9c;
  #L155b54.  v1:= v2;
  #L155b56.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155b5c.  v4:= temp @kind object;
  #L155b5e.  v6:= length @variable v4;
  #L155b60.  v9:= v3;
  #L155b62.  v3:= v1;
  #L155b64.  v1:= v4 @kind object;
  #L155b66.  v4:= v9;
  #L155b68.  if v4 >= v6 then goto L155ba0;
  #L155b6c.  v7:= v1[v4] @kind object;
  #L155b70.  call temp:= `a`(v10, v11, v7) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155b76.  v7:= temp @kind object;
  #L155b78.  v8:= v1[v4] @kind object;
  #L155b7c.  if v7 == v8 then goto L155b96;
  #L155b80.  if v3 != 0 then goto L155b92;
  #L155b84.  call temp:= `clone`(v1) @signature `[Ljava/lang/reflect/Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L155b8a.  v1:= temp @kind object;
  #L155b8c.  v1:= (`java.lang.reflect.Type`[]) v1 @kind object;
  #L155b90.  v3:= v2;
  #L155b92.  v1[v4]:= v7 @kind object;
  #L155b96.  v4:= v4 + 1;
  #L155b9a.  goto L155b68;
  #L155b9c.  v1:= v3;
  #L155b9e.  goto L155b56;
  #L155ba0.  if v3 == 0 then goto L155ac8;
  #L155ba4.  call temp:= `getRawType`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155baa.  v0:= temp @kind object;
  #L155bac.  call temp:= `a`(v5, v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L155bb2.  v0:= temp @kind object;
  #L155bb4.  goto L155ac8;
  #L155bb6.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L155bba.  if v1 == 0 then goto L155ac8;
  #L155bbe.  v0:= (`java.lang.reflect.WildcardType`) v0 @kind object;
  #L155bc2.  call temp:= `getLowerBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155bc8.  v1:= temp @kind object;
  #L155bca.  call temp:= `getUpperBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155bd0.  v4:= temp @kind object;
  #L155bd2.  v5:= length @variable v1;
  #L155bd4.  if v5 != v2 then goto L155bf8;
  #L155bd8.  v2:= v1[v3] @kind object;
  #L155bdc.  call temp:= `a`(v10, v11, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155be2.  v2:= temp @kind object;
  #L155be4.  v1:= v1[v3] @kind object;
  #L155be8.  if v2 == v1 then goto L155ac8;
  #L155bec.  call temp:= `c`(v2) @signature `Lcom/b/a/b/b;.c:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @kind static;
  #L155bf2.  v0:= temp @kind object;
  #L155bf4.  goto L155ac8;
  #L155bf8.  v1:= length @variable v4;
  #L155bfa.  if v1 != v2 then goto L155ac8;
  #L155bfe.  v1:= v4[v3] @kind object;
  #L155c02.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155c08.  v1:= temp @kind object;
  #L155c0a.  v2:= v4[v3] @kind object;
  #L155c0e.  if v1 == v2 then goto L155ac8;
  #L155c12.  call temp:= `b`(v1) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @kind static;
  #L155c18.  v0:= temp @kind object;
  #L155c1a.  goto L155ac8;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.reflect.TypeVariable` v5 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L155c30.  call temp:= `a`(v5) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @kind static;
  #L155c36.  v1:= temp @kind object;
  #L155c38.  if v1 != 0 then goto L155c3e;
  #L155c3c.  return v5 @kind object;
  #L155c3e.  call temp:= `a`(v3, v4, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L155c44.  v0:= temp @kind object;
  #L155c46.  v2:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L155c4a.  if v2 == 0 then goto L155c3c;
  #L155c4e.  call temp:= `getTypeParameters`(v1) @signature `Ljava/lang/Class;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;` @kind virtual;
  #L155c54.  v1:= temp @kind object;
  #L155c56.  call temp:= `a`(v1, v5) @signature `Lcom/b/a/b/b;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L155c5c.  v1:= temp;
  #L155c5e.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L155c62.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155c68.  v0:= temp @kind object;
  #L155c6a.  v5:= v0[v1] @kind object;
  #L155c6e.  goto L155c3c;
}
procedure `boolean` `a`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L155c80.  if v1 == v2 then goto L155c94;
  #L155c84.  if v1 == 0 then goto L155c98;
  #L155c88.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L155c8e.  v0:= temp;
  #L155c90.  if v0 == 0 then goto L155c98;
  #L155c94.  v0:= 1I;
  #L155c96.  return v0;
  #L155c98.  v0:= 0I;
  #L155c9a.  goto L155c96;
}
procedure `boolean` `a`(`java.lang.reflect.Type` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L155cac.  v0:= 1I;
  #L155cae.  v1:= 0I;
  #L155cb0.  if v4 != v5 then goto L155cb8;
  #L155cb4.  v1:= v0;
  #L155cb6.  return v1;
  #L155cb8.  v2:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L155cbc.  if v2 == 0 then goto L155cca;
  #L155cc0.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L155cc6.  v1:= temp;
  #L155cc8.  goto L155cb6;
  #L155cca.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L155cce.  if v2 == 0 then goto L155d3e;
  #L155cd2.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L155cd6.  if v2 == 0 then goto L155cb6;
  #L155cda.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L155cde.  v5:= (`java.lang.reflect.ParameterizedType`) v5 @kind object;
  #L155ce2.  call temp:= `getOwnerType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155ce8.  v2:= temp @kind object;
  #L155cea.  call temp:= `getOwnerType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155cf0.  v3:= temp @kind object;
  #L155cf2.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L155cf8.  v2:= temp;
  #L155cfa.  if v2 == 0 then goto L155d3a;
  #L155cfe.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155d04.  v2:= temp @kind object;
  #L155d06.  call temp:= `getRawType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155d0c.  v3:= temp @kind object;
  #L155d0e.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L155d14.  v2:= temp;
  #L155d16.  if v2 == 0 then goto L155d3a;
  #L155d1a.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155d20.  v2:= temp @kind object;
  #L155d22.  call temp:= `getActualTypeArguments`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155d28.  v3:= temp @kind object;
  #L155d2a.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L155d30.  v2:= temp;
  #L155d32.  if v2 == 0 then goto L155d3a;
  #L155d36.  v1:= v0;
  #L155d38.  goto L155cb6;
  #L155d3a.  v0:= v1;
  #L155d3c.  goto L155d36;
  #L155d3e.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L155d42.  if v2 == 0 then goto L155d70;
  #L155d46.  v0:= instanceof @variable v5 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L155d4a.  if v0 == 0 then goto L155cb6;
  #L155d4e.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L155d52.  v5:= (`java.lang.reflect.GenericArrayType`) v5 @kind object;
  #L155d56.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155d5c.  v0:= temp @kind object;
  #L155d5e.  call temp:= `getGenericComponentType`(v5) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155d64.  v1:= temp @kind object;
  #L155d66.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L155d6c.  v1:= temp;
  #L155d6e.  goto L155cb6;
  #L155d70.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L155d74.  if v2 == 0 then goto L155dca;
  #L155d78.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L155d7c.  if v2 == 0 then goto L155cb6;
  #L155d80.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L155d84.  v5:= (`java.lang.reflect.WildcardType`) v5 @kind object;
  #L155d88.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155d8e.  v2:= temp @kind object;
  #L155d90.  call temp:= `getUpperBounds`(v5) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155d96.  v3:= temp @kind object;
  #L155d98.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L155d9e.  v2:= temp;
  #L155da0.  if v2 == 0 then goto L155dc6;
  #L155da4.  call temp:= `getLowerBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155daa.  v2:= temp @kind object;
  #L155dac.  call temp:= `getLowerBounds`(v5) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155db2.  v3:= temp @kind object;
  #L155db4.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L155dba.  v2:= temp;
  #L155dbc.  if v2 == 0 then goto L155dc6;
  #L155dc0.  v1:= v0;
  #L155dc2.  goto L155cb6;
  #L155dc6.  v0:= v1;
  #L155dc8.  goto L155dc0;
  #L155dca.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L155dce.  if v2 == 0 then goto L155cb6;
  #L155dd2.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L155dd6.  if v2 == 0 then goto L155cb6;
  #L155dda.  v4:= (`java.lang.reflect.TypeVariable`) v4 @kind object;
  #L155dde.  v5:= (`java.lang.reflect.TypeVariable`) v5 @kind object;
  #L155de2.  call temp:= `getGenericDeclaration`(v4) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L155de8.  v2:= temp @kind object;
  #L155dea.  call temp:= `getGenericDeclaration`(v5) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L155df0.  v3:= temp @kind object;
  #L155df2.  if v2 != v3 then goto L155e18;
  #L155df6.  call temp:= `getName`(v4) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L155dfc.  v2:= temp @kind object;
  #L155dfe.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L155e04.  v3:= temp @kind object;
  #L155e06.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L155e0c.  v2:= temp;
  #L155e0e.  if v2 == 0 then goto L155e18;
  #L155e12.  v1:= v0;
  #L155e14.  goto L155cb6;
  #L155e18.  v0:= v1;
  #L155e1a.  goto L155e12;
}
procedure `java.lang.reflect.Type` `b`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;

  #L155e2c.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L155e32.  v0:= temp;
  #L155e34.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L155e3a.  call temp:= `a`(v1, v2, v3) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L155e40.  v0:= temp @kind object;
  #L155e42.  call temp:= `a`(v1, v2, v0) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155e48.  v0:= temp @kind object;
  #L155e4a.  return v0 @kind object;
}
procedure `java.lang.reflect.WildcardType` `b`(`java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L155e5c.  v0:= new `com.b.a.b.b$c`;
  #L155e60.  v1:= 1I;
  #L155e62.  v1:= new `java.lang.reflect.Type`[v1];
  #L155e66.  v2:= 0I;
  #L155e68.  v1[v2]:= v3 @kind object;
  #L155e6c.  v2:= `@@com.b.a.b.b.a` @type ^`java.lang.reflect.Type`[] @kind object;
  #L155e70.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L155e76.  return v0 @kind object;
}
procedure `java.lang.reflect.Type`[] `b`(`java.lang.reflect.Type` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L155e88.  v4:= 2I;
  #L155e8a.  v3:= 1I;
  #L155e8c.  v2:= 0I;
  #L155e8e.  v0:= constclass @type ^`java.util.Properties` @kind object;
  #L155e92.  if v5 != v0 then goto L155eac;
  #L155e96.  v0:= new `java.lang.reflect.Type`[v4];
  #L155e9a.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L155e9e.  v0[v2]:= v1 @kind object;
  #L155ea2.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L155ea6.  v0[v3]:= v1 @kind object;
  #L155eaa.  return v0 @kind object;
  #L155eac.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L155eb0.  call temp:= `b`(v5, v6, v0) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L155eb6.  v0:= temp @kind object;
  #L155eb8.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L155ebc.  if v1 == 0 then goto L155ece;
  #L155ec0.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L155ec4.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155eca.  v0:= temp @kind object;
  #L155ecc.  goto L155eaa;
  #L155ece.  v0:= new `java.lang.reflect.Type`[v4];
  #L155ed2.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L155ed6.  v0[v2]:= v1 @kind object;
  #L155eda.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L155ede.  v0[v3]:= v1 @kind object;
  #L155ee2.  goto L155eaa;
}
procedure `java.lang.reflect.WildcardType` `c`(`java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/b/b;.c:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L155ef4.  v4:= 1I;
  #L155ef6.  v3:= 0I;
  #L155ef8.  v0:= new `com.b.a.b.b$c`;
  #L155efc.  v1:= new `java.lang.reflect.Type`[v4];
  #L155f00.  v2:= constclass @type ^`java.lang.Object` @kind object;
  #L155f04.  v1[v3]:= v2 @kind object;
  #L155f08.  v2:= new `java.lang.reflect.Type`[v4];
  #L155f0c.  v2[v3]:= v5 @kind object;
  #L155f10.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L155f16.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `d`(`java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L155f28.  v0:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L155f2c.  if v0 == 0 then goto L155f64;
  #L155f30.  v4:= (`java.lang.Class`) v4 @kind object;
  #L155f34.  call temp:= `isArray`(v4) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L155f3a.  v0:= temp;
  #L155f3c.  if v0 == 0 then goto L155f60;
  #L155f40.  v0:= new `com.b.a.b.b$a`;
  #L155f44.  call temp:= `getComponentType`(v4) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L155f4a.  v1:= temp @kind object;
  #L155f4c.  call temp:= `d`(v1) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155f52.  v1:= temp @kind object;
  #L155f54.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L155f5a.  v0:= (`java.lang.reflect.Type`) v0 @kind object;
  #L155f5e.  return v0 @kind object;
  #L155f60.  v0:= v4 @kind object;
  #L155f62.  goto L155f5a;
  #L155f64.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L155f68.  if v0 == 0 then goto L155f94;
  #L155f6c.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L155f70.  v0:= new `com.b.a.b.b$b`;
  #L155f74.  call temp:= `getOwnerType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155f7a.  v1:= temp @kind object;
  #L155f7c.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155f82.  v2:= temp @kind object;
  #L155f84.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155f8a.  v3:= temp @kind object;
  #L155f8c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/b/a/b/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L155f92.  goto L155f5e;
  #L155f94.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L155f98.  if v0 == 0 then goto L155fb4;
  #L155f9c.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L155fa0.  v0:= new `com.b.a.b.b$a`;
  #L155fa4.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L155faa.  v1:= temp @kind object;
  #L155fac.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L155fb2.  goto L155f5e;
  #L155fb4.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L155fb8.  if v0 == 0 then goto L155fdc;
  #L155fbc.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L155fc0.  v0:= new `com.b.a.b.b$c`;
  #L155fc4.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155fca.  v1:= temp @kind object;
  #L155fcc.  call temp:= `getLowerBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L155fd2.  v2:= temp @kind object;
  #L155fd4.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L155fda.  goto L155f5e;
  #L155fdc.  v0:= v4 @kind object;
  #L155fde.  goto L155f5e;
}
procedure `java.lang.Class` `e`(`java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L155ff0.  v1:= 0I;
  #L155ff2.  v0:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L155ff6.  if v0 == 0 then goto L156000;
  #L155ffa.  v4:= (`java.lang.Class`) v4 @kind object;
  #L155ffe.  return v4 @kind object;
  #L156000.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L156004.  if v0 == 0 then goto L156026;
  #L156008.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L15600c.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L156012.  v0:= temp @kind object;
  #L156014.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L156018.  call `a`(v1) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L15601e.  v0:= (`java.lang.Class`) v0 @kind object;
  #L156022.  v4:= v0 @kind object;
  #L156024.  goto L155ffe;
  #L156026.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L15602a.  if v0 == 0 then goto L156054;
  #L15602e.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L156032.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L156038.  v0:= temp @kind object;
  #L15603a.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L156040.  v0:= temp @kind object;
  #L156042.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L156048.  v0:= temp @kind object;
  #L15604a.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L156050.  v4:= temp @kind object;
  #L156052.  goto L155ffe;
  #L156054.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L156058.  if v0 == 0 then goto L156062;
  #L15605c.  v4:= constclass @type ^`java.lang.Object` @kind object;
  #L156060.  goto L155ffe;
  #L156062.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L156066.  if v0 == 0 then goto L156084;
  #L15606a.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L15606e.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L156074.  v0:= temp @kind object;
  #L156076.  v0:= v0[v1] @kind object;
  #L15607a.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L156080.  v4:= temp @kind object;
  #L156082.  goto L155ffe;
  #L156084.  if v4 != 0 then goto L1560d2;
  #L156088.  v0:= "null" @kind object;
  #L15608c.  v1:= new `java.lang.IllegalArgumentException`;
  #L156090.  v2:= new `java.lang.StringBuilder`;
  #L156094.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15609a.  v3:= "Expected a Class, ParameterizedType, or GenericArrayType, but <" @kind object;
  #L15609e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1560a4.  v2:= temp @kind object;
  #L1560a6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1560ac.  v2:= temp @kind object;
  #L1560ae.  v3:= "> is of type " @kind object;
  #L1560b2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1560b8.  v2:= temp @kind object;
  #L1560ba.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1560c0.  v0:= temp @kind object;
  #L1560c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1560c8.  v0:= temp @kind object;
  #L1560ca.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1560d0.  throw v1;
  #L1560d2.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1560d8.  v0:= temp @kind object;
  #L1560da.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1560e0.  v0:= temp @kind object;
  #L1560e2.  goto L15608c;
}
procedure `java.lang.String` `f`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1560f4.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L1560f8.  if v0 == 0 then goto L15610a;
  #L1560fc.  v1:= (`java.lang.Class`) v1 @kind object;
  #L156100.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L156106.  v0:= temp @kind object;
  #L156108.  return v0 @kind object;
  #L15610a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L156110.  v0:= temp @kind object;
  #L156112.  goto L156108;
}
procedure `java.lang.reflect.Type` `g`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.g:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L156124.  v0:= instanceof @variable v1 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L156128.  if v0 == 0 then goto L15613a;
  #L15612c.  v1:= (`java.lang.reflect.GenericArrayType`) v1 @kind object;
  #L156130.  call temp:= `getGenericComponentType`(v1) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L156136.  v0:= temp @kind object;
  #L156138.  return v0 @kind object;
  #L15613a.  v1:= (`java.lang.Class`) v1 @kind object;
  #L15613e.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L156144.  v0:= temp @kind object;
  #L156146.  goto L156138;
}
procedure `void` `h`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.h:(Ljava/lang/reflect/Type;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L156158.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L15615c.  if v0 == 0 then goto L156170;
  #L156160.  v1:= (`java.lang.Class`) v1 @kind object;
  #L156164.  call temp:= `isPrimitive`(v1) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L15616a.  v0:= temp;
  #L15616c.  if v0 != 0 then goto L15617a;
  #L156170.  v0:= 1I;
  #L156172.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L156178.  return @kind void;
  #L15617a.  v0:= 0I;
  #L15617c.  goto L156172;
}

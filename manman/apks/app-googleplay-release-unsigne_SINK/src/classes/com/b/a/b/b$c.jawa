record `com.b.a.b.b$c` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface, `java.lang.reflect.WildcardType` @kind interface {
  `java.lang.reflect.Type` `com.b.a.b.b$c.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type` `com.b.a.b.b$c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.b$c` v4 @kind this, `java.lang.reflect.Type`[] v5 @kind object, `java.lang.reflect.Type`[] v6 @kind object) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15569c.  v1:= 1I;
  #L15569e.  v2:= 0I;
  #L1556a0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1556a6.  v0:= length @variable v6;
  #L1556a8.  if v0 > v1 then goto L155708;
  #L1556ac.  v0:= v1;
  #L1556ae.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L1556b4.  v0:= length @variable v5;
  #L1556b6.  if v0 != v1 then goto L15570c;
  #L1556ba.  v0:= v1;
  #L1556bc.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L1556c2.  v0:= length @variable v6;
  #L1556c4.  if v0 != v1 then goto L155714;
  #L1556c8.  v0:= v6[v2] @kind object;
  #L1556cc.  call temp:= `a`(v0) @signature `Lcom/b/a/b/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1556d2.  v0:= v6[v2] @kind object;
  #L1556d6.  call `h`(v0) @signature `Lcom/b/a/b/b;.h:(Ljava/lang/reflect/Type;)V` @kind static;
  #L1556dc.  v0:= v5[v2] @kind object;
  #L1556e0.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L1556e4.  if v0 != v3 then goto L155710;
  #L1556e8.  call `a`(v1) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L1556ee.  v0:= v6[v2] @kind object;
  #L1556f2.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L1556f8.  v0:= temp @kind object;
  #L1556fa.  v4.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L1556fe.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L155702.  v4.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L155706.  return @kind void;
  #L155708.  v0:= v2;
  #L15570a.  goto L1556ae;
  #L15570c.  v0:= v2;
  #L15570e.  goto L1556bc;
  #L155710.  v1:= v2;
  #L155712.  goto L1556e8;
  #L155714.  v0:= v5[v2] @kind object;
  #L155718.  call temp:= `a`(v0) @signature `Lcom/b/a/b/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15571e.  v0:= v5[v2] @kind object;
  #L155722.  call `h`(v0) @signature `Lcom/b/a/b/b;.h:(Ljava/lang/reflect/Type;)V` @kind static;
  #L155728.  v0:= 0I;
  #L15572a.  v4.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L15572e.  v0:= v5[v2] @kind object;
  #L155732.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L155738.  v0:= temp @kind object;
  #L15573a.  v4.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L15573e.  goto L155706;
}
procedure `boolean` `equals`(`com.b.a.b.b$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/b$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L155750.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L155754.  if v0 == 0 then goto L15576c;
  #L155758.  v2:= (`java.lang.reflect.WildcardType`) v2 @kind object;
  #L15575c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L155762.  v0:= temp;
  #L155764.  if v0 == 0 then goto L15576c;
  #L155768.  v0:= 1I;
  #L15576a.  return v0;
  #L15576c.  v0:= 0I;
  #L15576e.  goto L15576a;
}
procedure `java.lang.reflect.Type`[] `getLowerBounds`(`com.b.a.b.b$c` v3 @kind this) @signature `Lcom/b/a/b/b$c;.getLowerBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L155780.  v0:= v3.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L155784.  if v0 == 0 then goto L15579a;
  #L155788.  v0:= 1I;
  #L15578a.  v0:= new `java.lang.reflect.Type`[v0];
  #L15578e.  v1:= 0I;
  #L155790.  v2:= v3.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L155794.  v0[v1]:= v2 @kind object;
  #L155798.  return v0 @kind object;
  #L15579a.  v0:= `@@com.b.a.b.b.a` @type ^`java.lang.reflect.Type`[] @kind object;
  #L15579e.  goto L155798;
}
procedure `java.lang.reflect.Type`[] `getUpperBounds`(`com.b.a.b.b$c` v3 @kind this) @signature `Lcom/b/a/b/b$c;.getUpperBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1557b0.  v0:= 1I;
  #L1557b2.  v0:= new `java.lang.reflect.Type`[v0];
  #L1557b6.  v1:= 0I;
  #L1557b8.  v2:= v3.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` @kind object;
  #L1557bc.  v0[v1]:= v2 @kind object;
  #L1557c0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.b.a.b.b$c` v2 @kind this) @signature `Lcom/b/a/b/b$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1557d4.  v0:= v2.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1557d8.  if v0 == 0 then goto L155800;
  #L1557dc.  v0:= v2.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1557e0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1557e6.  v0:= temp;
  #L1557e8.  v0:= v0 + 31;
  #L1557ec.  v1:= v2.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` @kind object;
  #L1557f0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1557f6.  v1:= temp;
  #L1557f8.  v1:= v1 + 31;
  #L1557fc.  v0:= v0 ^~ v1 @kind int;
  #L1557fe.  return v0;
  #L155800.  v0:= 1I;
  #L155802.  goto L1557ec;
}
procedure `java.lang.String` `toString`(`com.b.a.b.b$c` v2 @kind this) @signature `Lcom/b/a/b/b$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L155814.  v0:= v2.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L155818.  if v0 == 0 then goto L155850;
  #L15581c.  v0:= new `java.lang.StringBuilder`;
  #L155820.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L155826.  v1:= "? super " @kind object;
  #L15582a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155830.  v0:= temp @kind object;
  #L155832.  v1:= v2.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L155836.  call temp:= `f`(v1) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L15583c.  v1:= temp @kind object;
  #L15583e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155844.  v0:= temp @kind object;
  #L155846.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15584c.  v0:= temp @kind object;
  #L15584e.  return v0 @kind object;
  #L155850.  v0:= v2.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` @kind object;
  #L155854.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L155858.  if v0 != v1 then goto L155862;
  #L15585c.  v0:= "?" @kind object;
  #L155860.  goto L15584e;
  #L155862.  v0:= new `java.lang.StringBuilder`;
  #L155866.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15586c.  v1:= "? extends " @kind object;
  #L155870.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155876.  v0:= temp @kind object;
  #L155878.  v1:= v2.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` @kind object;
  #L15587c.  call temp:= `f`(v1) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L155882.  v1:= temp @kind object;
  #L155884.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15588a.  v0:= temp @kind object;
  #L15588c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L155892.  v0:= temp @kind object;
  #L155894.  goto L15584e;
}

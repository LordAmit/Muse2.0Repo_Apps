record `com.b.a.b.a.l` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.v` @kind class {
  `com.b.a.s` `com.b.a.b.a.l.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.k` `com.b.a.b.a.l.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.f` `com.b.a.b.a.l.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.c.a` `com.b.a.b.a.l.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.w` `com.b.a.b.a.l.e` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.l$a` `com.b.a.b.a.l.f` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.l.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.b.a.b.a.l` v2 @kind this, `com.b.a.s` v3 @kind object, `com.b.a.k` v4 @kind object, `com.b.a.f` v5 @kind object, `com.b.a.c.a` v6 @kind object, `com.b.a.w` v7 @kind object) @signature `Lcom/b/a/b/a/l;.<init>:(Lcom/b/a/s;Lcom/b/a/k;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/w;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L152958.  call `<init>`(v2) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L15295e.  v0:= new `com.b.a.b.a.l$a`;
  #L152962.  v1:= 0I;
  #L152964.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/l$a;.<init>:(Lcom/b/a/b/a/l;Lcom/b/a/b/a/l$1;)V` @kind direct;
  #L15296a.  v2.`com.b.a.b.a.l.f` @type ^`com.b.a.b.a.l$a` := v0 @kind object;
  #L15296e.  v2.`com.b.a.b.a.l.a` @type ^`com.b.a.s` := v3 @kind object;
  #L152972.  v2.`com.b.a.b.a.l.b` @type ^`com.b.a.k` := v4 @kind object;
  #L152976.  v2.`com.b.a.b.a.l.c` @type ^`com.b.a.f` := v5 @kind object;
  #L15297a.  v2.`com.b.a.b.a.l.d` @type ^`com.b.a.c.a` := v6 @kind object;
  #L15297e.  v2.`com.b.a.b.a.l.e` @type ^`com.b.a.w` := v7 @kind object;
  #L152982.  return @kind void;
}
procedure `com.b.a.w` `a`(`com.b.a.c.a` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/a/l;.a:(Lcom/b/a/c/a;Ljava/lang/Object;)Lcom/b/a/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L152994.  v0:= new `com.b.a.b.a.l$b`;
  #L152998.  v1:= 0I;
  #L15299a.  v2:= 0I;
  #L15299c.  call `<init>`(v0, v4, v3, v1, v2) @signature `Lcom/b/a/b/a/l$b;.<init>:(Ljava/lang/Object;Lcom/b/a/c/a;ZLjava/lang/Class;)V` @kind direct;
  #L1529a2.  return v0 @kind object;
}
procedure `com.b.a.v` `b`(`com.b.a.b.a.l` v3 @kind this) @signature `Lcom/b/a/b/a/l;.b:()Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1529b4.  v0:= v3.`com.b.a.b.a.l.g` @type ^`com.b.a.v` @kind object;
  #L1529b8.  if v0 == 0 then goto L1529be;
  #L1529bc.  return v0 @kind object;
  #L1529be.  v0:= v3.`com.b.a.b.a.l.c` @type ^`com.b.a.f` @kind object;
  #L1529c2.  v1:= v3.`com.b.a.b.a.l.e` @type ^`com.b.a.w` @kind object;
  #L1529c6.  v2:= v3.`com.b.a.b.a.l.d` @type ^`com.b.a.c.a` @kind object;
  #L1529ca.  call temp:= `a`(v0, v1, v2) @signature `Lcom/b/a/f;.a:(Lcom/b/a/w;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L1529d0.  v0:= temp @kind object;
  #L1529d2.  v3.`com.b.a.b.a.l.g` @type ^`com.b.a.v` := v0 @kind object;
  #L1529d6.  goto L1529bc;
}
procedure `void` `a`(`com.b.a.b.a.l` v3 @kind this, `com.b.a.d.c` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/b/a/b/a/l;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1529e8.  v0:= v3.`com.b.a.b.a.l.a` @type ^`com.b.a.s` @kind object;
  #L1529ec.  if v0 != 0 then goto L152a00;
  #L1529f0.  call temp:= `b`(v3) @signature `Lcom/b/a/b/a/l;.b:()Lcom/b/a/v;` @kind direct;
  #L1529f6.  v0:= temp @kind object;
  #L1529f8.  call `a`(v0, v4, v5) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1529fe.  return @kind void;
  #L152a00.  if v5 != 0 then goto L152a0c;
  #L152a04.  call temp:= `f`(v4) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L152a0a.  goto L1529fe;
  #L152a0c.  v0:= v3.`com.b.a.b.a.l.a` @type ^`com.b.a.s` @kind object;
  #L152a10.  v1:= v3.`com.b.a.b.a.l.d` @type ^`com.b.a.c.a` @kind object;
  #L152a14.  call temp:= `b`(v1) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L152a1a.  v1:= temp @kind object;
  #L152a1c.  v2:= v3.`com.b.a.b.a.l.f` @type ^`com.b.a.b.a.l$a` @kind object;
  #L152a20.  call temp:= `a`(v0, v5, v1, v2) @signature `Lcom/b/a/s;.a:(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @kind interface;
  #L152a26.  v0:= temp @kind object;
  #L152a28.  call `a`(v0, v4) @signature `Lcom/b/a/b/j;.a:(Lcom/b/a/l;Lcom/b/a/d/c;)V` @kind static;
  #L152a2e.  goto L1529fe;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.l` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/l;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L152a40.  v0:= v4.`com.b.a.b.a.l.b` @type ^`com.b.a.k` @kind object;
  #L152a44.  if v0 != 0 then goto L152a5a;
  #L152a48.  call temp:= `b`(v4) @signature `Lcom/b/a/b/a/l;.b:()Lcom/b/a/v;` @kind direct;
  #L152a4e.  v0:= temp @kind object;
  #L152a50.  call temp:= `b`(v0, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L152a56.  v0:= temp @kind object;
  #L152a58.  return v0 @kind object;
  #L152a5a.  call temp:= `a`(v5) @signature `Lcom/b/a/b/j;.a:(Lcom/b/a/d/a;)Lcom/b/a/l;` @kind static;
  #L152a60.  v0:= temp @kind object;
  #L152a62.  call temp:= `j`(v0) @signature `Lcom/b/a/l;.j:()Z` @kind virtual;
  #L152a68.  v1:= temp;
  #L152a6a.  if v1 == 0 then goto L152a72;
  #L152a6e.  v0:= 0I;
  #L152a70.  goto L152a58;
  #L152a72.  v1:= v4.`com.b.a.b.a.l.b` @type ^`com.b.a.k` @kind object;
  #L152a76.  v2:= v4.`com.b.a.b.a.l.d` @type ^`com.b.a.c.a` @kind object;
  #L152a7a.  call temp:= `b`(v2) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L152a80.  v2:= temp @kind object;
  #L152a82.  v3:= v4.`com.b.a.b.a.l.f` @type ^`com.b.a.b.a.l$a` @kind object;
  #L152a86.  call temp:= `b`(v1, v0, v2, v3) @signature `Lcom/b/a/k;.b:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/lang/Object;` @kind interface;
  #L152a8c.  v0:= temp @kind object;
  #L152a8e.  goto L152a58;
}

record `com.b.a.b.a.m` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.b.a.m.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.m.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type` `com.b.a.b.a.m.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.m` v0 @kind this, `com.b.a.f` v1 @kind object, `com.b.a.v` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L152aa0.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L152aa6.  v0.`com.b.a.b.a.m.a` @type ^`com.b.a.f` := v1 @kind object;
  #L152aaa.  v0.`com.b.a.b.a.m.b` @type ^`com.b.a.v` := v2 @kind object;
  #L152aae.  v0.`com.b.a.b.a.m.c` @type ^`java.lang.reflect.Type` := v3 @kind object;
  #L152ab2.  return @kind void;
}
procedure `java.lang.reflect.Type` `a`(`com.b.a.b.a.m` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/b/a/m;.a:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/reflect/Type;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L152ac4.  if v3 == 0 then goto L152ae8;
  #L152ac8.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L152acc.  if v2 == v0 then goto L152ae0;
  #L152ad0.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L152ad4.  if v0 != 0 then goto L152ae0;
  #L152ad8.  v0:= instanceof @variable v2 @type ^`java.lang.Class` @kind boolean;
  #L152adc.  if v0 == 0 then goto L152ae8;
  #L152ae0.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L152ae6.  v2:= temp @kind object;
  #L152ae8.  return v2 @kind object;
}
procedure `void` `a`(`com.b.a.b.a.m` v3 @kind this, `com.b.a.d.c` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/b/a/b/a/m;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L152afc.  v0:= v3.`com.b.a.b.a.m.b` @type ^`com.b.a.v` @kind object;
  #L152b00.  v1:= v3.`com.b.a.b.a.m.c` @type ^`java.lang.reflect.Type` @kind object;
  #L152b04.  call temp:= `a`(v3, v1, v5) @signature `Lcom/b/a/b/a/m;.a:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/reflect/Type;` @kind direct;
  #L152b0a.  v1:= temp @kind object;
  #L152b0c.  v2:= v3.`com.b.a.b.a.m.c` @type ^`java.lang.reflect.Type` @kind object;
  #L152b10.  if v1 == v2 then goto L152b30;
  #L152b14.  v0:= v3.`com.b.a.b.a.m.a` @type ^`com.b.a.f` @kind object;
  #L152b18.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L152b1e.  v1:= temp @kind object;
  #L152b20.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L152b26.  v0:= temp @kind object;
  #L152b28.  v1:= instanceof @variable v0 @type ^`com.b.a.b.a.i$a` @kind boolean;
  #L152b2c.  if v1 != 0 then goto L152b38;
  #L152b30.  call `a`(v0, v4, v5) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L152b36.  return @kind void;
  #L152b38.  v1:= v3.`com.b.a.b.a.m.b` @type ^`com.b.a.v` @kind object;
  #L152b3c.  v1:= instanceof @variable v1 @type ^`com.b.a.b.a.i$a` @kind boolean;
  #L152b40.  if v1 != 0 then goto L152b30;
  #L152b44.  v0:= v3.`com.b.a.b.a.m.b` @type ^`com.b.a.v` @kind object;
  #L152b48.  goto L152b30;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.m` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/m;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152b5c.  v0:= v1.`com.b.a.b.a.m.b` @type ^`com.b.a.v` @kind object;
  #L152b60.  call temp:= `b`(v0, v2) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L152b66.  v0:= temp @kind object;
  #L152b68.  return v0 @kind object;
}

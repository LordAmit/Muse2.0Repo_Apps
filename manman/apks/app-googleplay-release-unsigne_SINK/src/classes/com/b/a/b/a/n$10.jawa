record `com.b.a.b.a.n$10` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$10` v0 @kind this) @signature `Lcom/b/a/b/a/n$10;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L152b7c.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L152b82.  return @kind void;
}
procedure `java.math.BigInteger` `a`(`com.b.a.b.a.n$10` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/b/a/n$10;.a:(Lcom/b/a/d/a;)Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L152b94.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L152b9a.  v0:= temp @kind object;
  #L152b9c.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L152ba0.  if v0 != v1 then goto L152bae;
  #L152ba4.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L152baa.  v0:= 0I;
  #L152bac.  return v0 @kind object;
  #Try_start0.  
  #L152bae.  v0:= new `java.math.BigInteger`;
  #L152bb2.  call temp:= `h`(v3) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L152bb8.  v1:= temp @kind object;
  #L152bba.  call `<init>`(v0, v1) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L152bc0.  goto L152bac;
  #L152bc2.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L152bc4.  v1:= new `com.b.a.t`;
  #L152bc8.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L152bce.  throw v1;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L152bc2;
}
procedure `void` `a`(`com.b.a.b.a.n$10` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$10;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L152bf0.  v2:= (`java.math.BigInteger`) v2 @kind object;
  #L152bf4.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$10;.a:(Lcom/b/a/d/c;Ljava/math/BigInteger;)V` @kind virtual;
  #L152bfa.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$10` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.math.BigInteger` v2 @kind object) @signature `Lcom/b/a/b/a/n$10;.a:(Lcom/b/a/d/c;Ljava/math/BigInteger;)V` @AccessFlag PUBLIC {
    temp;

  #L152c0c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/Number;)Lcom/b/a/d/c;` @kind virtual;
  #L152c12.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$10` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$10;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L152c24.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$10;.a:(Lcom/b/a/d/a;)Ljava/math/BigInteger;` @kind virtual;
  #L152c2a.  v0:= temp @kind object;
  #L152c2c.  return v0 @kind object;
}

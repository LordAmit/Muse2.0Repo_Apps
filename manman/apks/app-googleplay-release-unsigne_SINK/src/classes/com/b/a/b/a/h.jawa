record `com.b.a.b.a.h` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.b.a.h.b` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.w` `@@com.b.a.b.a.h.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L151d84.  v0:= new `com.b.a.b.a.h$1`;
  #L151d88.  call `<init>`(v0) @signature `Lcom/b/a/b/a/h$1;.<init>:()V` @kind direct;
  #L151d8e.  `@@com.b.a.b.a.h.a` @type ^`com.b.a.w` := v0 @kind object;
  #L151d92.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.b.a.h` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/b/a/h;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L151da4.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L151daa.  v0.`com.b.a.b.a.h.b` @type ^`com.b.a.f` := v1 @kind object;
  #L151dae.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.h` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/a/h;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L151dc0.  if v4 != 0 then goto L151dcc;
  #L151dc4.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L151dca.  return @kind void;
  #L151dcc.  v0:= v2.`com.b.a.b.a.h.b` @type ^`com.b.a.f` @kind object;
  #L151dd0.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L151dd6.  v1:= temp @kind object;
  #L151dd8.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/f;.a:(Ljava/lang/Class;)Lcom/b/a/v;` @kind virtual;
  #L151dde.  v0:= temp @kind object;
  #L151de0.  v1:= instanceof @variable v0 @type ^`com.b.a.b.a.h` @kind boolean;
  #L151de4.  if v1 == 0 then goto L151df6;
  #L151de8.  call temp:= `d`(v3) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L151dee.  call temp:= `e`(v3) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L151df4.  goto L151dca;
  #L151df6.  call `a`(v0, v3, v4) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L151dfc.  goto L151dca;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.h` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L151e10.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L151e16.  v0:= temp @kind object;
  #L151e18.  v1:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L151e1c.  call temp:= `ordinal`(v0) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L151e22.  v0:= temp;
  #L151e24.  v0:= v1[v0];
  #L151e28.  goto L151ee4;
  #L151e2e.  v0:= new `java.lang.IllegalStateException`;
  #L151e32.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L151e38.  throw v0;
  #L151e3a.  v0:= new `java.util.ArrayList`;
  #L151e3e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L151e44.  call `a`(v4) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L151e4a.  call temp:= `e`(v4) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L151e50.  v1:= temp;
  #L151e52.  if v1 == 0 then goto L151e66;
  #L151e56.  call temp:= `b`(v3, v4) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L151e5c.  v1:= temp @kind object;
  #L151e5e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L151e64.  goto L151e4a;
  #L151e66.  call `b`(v4) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L151e6c.  return v0 @kind object;
  #L151e6e.  v0:= new `com.b.a.b.g`;
  #L151e72.  call `<init>`(v0) @signature `Lcom/b/a/b/g;.<init>:()V` @kind direct;
  #L151e78.  call `c`(v4) @signature `Lcom/b/a/d/a;.c:()V` @kind virtual;
  #L151e7e.  call temp:= `e`(v4) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L151e84.  v1:= temp;
  #L151e86.  if v1 == 0 then goto L151ea2;
  #L151e8a.  call temp:= `g`(v4) @signature `Lcom/b/a/d/a;.g:()Ljava/lang/String;` @kind virtual;
  #L151e90.  v1:= temp @kind object;
  #L151e92.  call temp:= `b`(v3, v4) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L151e98.  v2:= temp @kind object;
  #L151e9a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L151ea0.  goto L151e7e;
  #L151ea2.  call `d`(v4) @signature `Lcom/b/a/d/a;.d:()V` @kind virtual;
  #L151ea8.  goto L151e6c;
  #L151eaa.  call temp:= `h`(v4) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L151eb0.  v0:= temp @kind object;
  #L151eb2.  goto L151e6c;
  #L151eb4.  call temp:= `k`(v4) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L151eba.  v0:= temp @kind wide;
  #L151ebc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L151ec2.  v0:= temp @kind object;
  #L151ec4.  goto L151e6c;
  #L151ec6.  call temp:= `i`(v4) @signature `Lcom/b/a/d/a;.i:()Z` @kind virtual;
  #L151ecc.  v0:= temp;
  #L151ece.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L151ed4.  v0:= temp @kind object;
  #L151ed6.  goto L151e6c;
  #L151ed8.  call `j`(v4) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L151ede.  v0:= 0I;
  #L151ee0.  goto L151e6c;
  #L151ee2.  
  #L151ee4.  switch v0
                  | 1 => goto L151e3a
                  | 2 => goto L151e6e
                  | 3 => goto L151eaa
                  | 4 => goto L151eb4
                  | 5 => goto L151ec6
                  | 6 => goto L151ed8
                  | else => goto L151e2e;
}

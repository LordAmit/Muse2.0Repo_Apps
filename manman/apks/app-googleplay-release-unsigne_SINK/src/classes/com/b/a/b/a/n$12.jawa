record `com.b.a.b.a.n$12` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$12` v0 @kind this) @signature `Lcom/b/a/b/a/n$12;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L152cf8.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L152cfe.  return @kind void;
}
procedure `java.util.BitSet` `a`(`com.b.a.b.a.n$12` v7 @kind this, `com.b.a.d.a` v8 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/a;)Ljava/util/BitSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L152d10.  v3:= 1I;
  #L152d12.  v2:= 0I;
  #L152d14.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L152d1a.  v0:= temp @kind object;
  #L152d1c.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L152d20.  if v0 != v1 then goto L152d2e;
  #L152d24.  call `j`(v8) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L152d2a.  v0:= 0I;
  #L152d2c.  return v0 @kind object;
  #L152d2e.  v4:= new `java.util.BitSet`;
  #L152d32.  call `<init>`(v4) @signature `Ljava/util/BitSet;.<init>:()V` @kind direct;
  #L152d38.  call `a`(v8) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L152d3e.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L152d44.  v0:= temp @kind object;
  #L152d46.  v1:= v2;
  #L152d48.  v5:= `@@com.b.a.d.b.b` @type ^`com.b.a.d.b` @kind object;
  #L152d4c.  if v0 == v5 then goto L152e1c;
  #L152d50.  v5:= `@@com.b.a.b.a.n$29.a` @type ^`int`[] @kind object;
  #L152d54.  call temp:= `ordinal`(v0) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L152d5a.  v6:= temp;
  #L152d5c.  v5:= v5[v6];
  #L152d60.  goto L152e28;
  #L152d66.  v1:= new `com.b.a.t`;
  #L152d6a.  v2:= new `java.lang.StringBuilder`;
  #L152d6e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152d74.  v3:= "Invalid bitset value type: " @kind object;
  #L152d78.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152d7e.  v2:= temp @kind object;
  #L152d80.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152d86.  v0:= temp @kind object;
  #L152d88.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152d8e.  v0:= temp @kind object;
  #L152d90.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L152d96.  throw v1;
  #L152d98.  call temp:= `m`(v8) @signature `Lcom/b/a/d/a;.m:()I` @kind virtual;
  #L152d9e.  v0:= temp;
  #L152da0.  if v0 == 0 then goto L152dbe;
  #L152da4.  v0:= v3;
  #L152da6.  if v0 == 0 then goto L152db0;
  #L152daa.  call `set`(v4, v1) @signature `Ljava/util/BitSet;.set:(I)V` @kind virtual;
  #L152db0.  v1:= v1 + 1;
  #L152db4.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L152dba.  v0:= temp @kind object;
  #L152dbc.  goto L152d48;
  #L152dbe.  v0:= v2;
  #L152dc0.  goto L152da6;
  #L152dc2.  call temp:= `i`(v8) @signature `Lcom/b/a/d/a;.i:()Z` @kind virtual;
  #L152dc8.  v0:= temp;
  #L152dca.  goto L152da6;
  #L152dcc.  call temp:= `h`(v8) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L152dd2.  v0:= temp @kind object;
  #Try_start0.  
  #L152dd4.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L152dda.  v0:= temp;
  #L152ddc.  if v0 == 0 then goto L152de4;
  #L152de0.  v0:= v3;
  #L152de2.  goto L152da6;
  #L152de4.  v0:= v2;
  #L152de6.  goto L152da6;
  #L152de8.  v1:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L152dea.  v1:= new `com.b.a.t`;
  #L152dee.  v2:= new `java.lang.StringBuilder`;
  #L152df2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152df8.  v3:= "Error: Expecting: bitset number value (1, 0), Found: " @kind object;
  #L152dfc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152e02.  v2:= temp @kind object;
  #L152e04.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152e0a.  v0:= temp @kind object;
  #L152e0c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152e12.  v0:= temp @kind object;
  #L152e14.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L152e1a.  throw v1;
  #L152e1c.  call `b`(v8) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L152e22.  v0:= v4 @kind object;
  #L152e24.  goto L152d2c;
  #L152e26.  
  #L152e28.  switch v5
                  | 1 => goto L152d98
                  | 2 => goto L152dc2
                  | 3 => goto L152dcc
                  | else => goto L152d66;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L152de8;
}
procedure `void` `a`(`com.b.a.b.a.n$12` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L152e5c.  v2:= (`java.util.BitSet`) v2 @kind object;
  #L152e60.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/util/BitSet;)V` @kind virtual;
  #L152e66.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$12` v4 @kind this, `com.b.a.d.c` v5 @kind object, `java.util.BitSet` v6 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/util/BitSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L152e78.  v1:= 0I;
  #L152e7a.  if v6 != 0 then goto L152e86;
  #L152e7e.  call temp:= `f`(v5) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L152e84.  return @kind void;
  #L152e86.  call temp:= `b`(v5) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L152e8c.  v0:= v1;
  #L152e8e.  call temp:= `length`(v6) @signature `Ljava/util/BitSet;.length:()I` @kind virtual;
  #L152e94.  v2:= temp;
  #L152e96.  if v0 >= v2 then goto L152eba;
  #L152e9a.  call temp:= `get`(v6, v0) @signature `Ljava/util/BitSet;.get:(I)Z` @kind virtual;
  #L152ea0.  v2:= temp;
  #L152ea2.  if v2 == 0 then goto L152eb6;
  #L152ea6.  v2:= 1I;
  #L152ea8.  v2:= (`long`) v2 @kind i2l;
  #L152eaa.  call temp:= `a`(v5, v2) @signature `Lcom/b/a/d/c;.a:(J)Lcom/b/a/d/c;` @kind virtual;
  #L152eb0.  v0:= v0 + 1;
  #L152eb4.  goto L152e8e;
  #L152eb6.  v2:= v1;
  #L152eb8.  goto L152ea8;
  #L152eba.  call temp:= `c`(v5) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L152ec0.  goto L152e84;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$12` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$12;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L152ed4.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/a;)Ljava/util/BitSet;` @kind virtual;
  #L152eda.  v0:= temp @kind object;
  #L152edc.  return v0 @kind object;
}

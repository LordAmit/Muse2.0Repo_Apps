record `org.a.a.a.a.a.a` @kind class @AccessFlag PUBLIC extends `org.a.a.a.a.a` @kind class {
  `java.io.InputStream` `org.a.a.a.a.a.a.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.a.a.a.a.a.a.c` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.a.a.a.a.a.a.d` @AccessFlag PRIVATE_FINAL;
  `int` `org.a.a.a.a.a.a.e` @AccessFlag PRIVATE;
  `java.util.zip.Inflater` `org.a.a.a.a.a.a.f` @AccessFlag PRIVATE;
  `java.util.zip.CRC32` `org.a.a.a.a.a.a.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.a.a.a.a.a.a.h` @AccessFlag PRIVATE;
  `byte`[] `org.a.a.a.a.a.a.i` @AccessFlag PRIVATE_FINAL;
  `org.a.a.a.a.a.b` `org.a.a.a.a.a.a.j` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@org.a.a.a.a.a.a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lorg/a/a/a/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L17dec4.  v0:= constclass @type ^`org.a.a.a.a.a.a` @kind object;
  #L17dec8.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L17dece.  v0:= temp;
  #L17ded0.  if v0 != 0 then goto L17dedc;
  #L17ded4.  v0:= 1I;
  #L17ded6.  `@@org.a.a.a.a.a.a.a` @type ^`boolean` := v0 @kind boolean;
  #L17deda.  return @kind void;
  #L17dedc.  v0:= 0I;
  #L17dede.  goto L17ded6;
}
procedure `void` `<init>`(`org.a.a.a.a.a.a` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lorg/a/a/a/a/a/a;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L17def0.  v0:= 0I;
  #L17def2.  call `<init>`(v1, v2, v0) @signature `Lorg/a/a/a/a/a/a;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L17def8.  return @kind void;
}
procedure `void` `<init>`(`org.a.a.a.a.a.a` v3 @kind this, `java.io.InputStream` v4 @kind object, `boolean` v5 ) @signature `Lorg/a/a/a/a/a/a;.<init>:(Ljava/io/InputStream;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L17df0c.  v2:= 0I;
  #L17df0e.  v1:= 1I;
  #L17df10.  call `<init>`(v3) @signature `Lorg/a/a/a/a/a;.<init>:()V` @kind direct;
  #L17df16.  v0:= 8192I;
  #L17df1a.  v0:= new `byte`[v0];
  #L17df1e.  v3.`org.a.a.a.a.a.a.d` @type ^`byte`[] := v0 @kind object;
  #L17df22.  v3.`org.a.a.a.a.a.a.e` @type ^`int` := v2;
  #L17df26.  v0:= new `java.util.zip.Inflater`;
  #L17df2a.  call `<init>`(v0, v1) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L17df30.  v3.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` := v0 @kind object;
  #L17df34.  v0:= new `java.util.zip.CRC32`;
  #L17df38.  call `<init>`(v0) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L17df3e.  v3.`org.a.a.a.a.a.a.g` @type ^`java.util.zip.CRC32` := v0 @kind object;
  #L17df42.  v3.`org.a.a.a.a.a.a.h` @type ^`boolean` := v2 @kind boolean;
  #L17df46.  v0:= new `byte`[v1];
  #L17df4a.  v3.`org.a.a.a.a.a.a.i` @type ^`byte`[] := v0 @kind object;
  #L17df4e.  v0:= new `org.a.a.a.a.a.b`;
  #L17df52.  call `<init>`(v0) @signature `Lorg/a/a/a/a/a/b;.<init>:()V` @kind direct;
  #L17df58.  v3.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` := v0 @kind object;
  #L17df5c.  call temp:= `markSupported`(v4) @signature `Ljava/io/InputStream;.markSupported:()Z` @kind virtual;
  #L17df62.  v0:= temp;
  #L17df64.  if v0 == 0 then goto L17df78;
  #L17df68.  v3.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` := v4 @kind object;
  #L17df6c.  v3.`org.a.a.a.a.a.a.c` @type ^`boolean` := v5 @kind boolean;
  #L17df70.  call temp:= `a`(v3, v1) @signature `Lorg/a/a/a/a/a/a;.a:(Z)Z` @kind direct;
  #L17df76.  return @kind void;
  #L17df78.  v0:= new `java.io.BufferedInputStream`;
  #L17df7c.  call `<init>`(v0, v4) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L17df82.  v3.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` := v0 @kind object;
  #L17df86.  goto L17df6c;
}
procedure `boolean` `a`(`org.a.a.a.a.a.a` v10 @kind this, `boolean` v11 ) @signature `Lorg/a/a/a/a/a/a;.a:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L17df98.  v0:= 1I;
  #L17df9a.  v1:= `@@org.a.a.a.a.a.a.a` @type ^`boolean` @kind boolean;
  #L17df9e.  if v1 != 0 then goto L17dfba;
  #L17dfa2.  if v11 != 0 then goto L17dfba;
  #L17dfa6.  v1:= v10.`org.a.a.a.a.a.a.c` @type ^`boolean` @kind boolean;
  #L17dfaa.  if v1 != 0 then goto L17dfba;
  #L17dfae.  v0:= new `java.lang.AssertionError`;
  #L17dfb2.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L17dfb8.  throw v0;
  #L17dfba.  v1:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17dfbe.  call temp:= `read`(v1) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L17dfc4.  v1:= temp;
  #L17dfc6.  v2:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17dfca.  call temp:= `read`(v2) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L17dfd0.  v2:= temp;
  #L17dfd2.  v3:= -1I;
  #L17dfd4.  if v1 != v3 then goto L17dfe0;
  #L17dfd8.  if v11 != 0 then goto L17dfe0;
  #L17dfdc.  v0:= 0I;
  #L17dfde.  return v0;
  #L17dfe0.  v3:= 31I;
  #L17dfe4.  if v1 != v3 then goto L17dff0;
  #L17dfe8.  v1:= 139I;
  #L17dfec.  if v2 == v1 then goto L17e00a;
  #L17dff0.  v1:= new `java.io.IOException`;
  #L17dff4.  if v11 == 0 then goto L17e004;
  #L17dff8.  v0:= "Input is not in the .gz format" @kind object;
  #L17dffc.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17e002.  throw v1;
  #L17e004.  v0:= "Garbage after a valid .gz stream" @kind object;
  #L17e008.  goto L17dffc;
  #L17e00a.  v3:= new `java.io.DataInputStream`;
  #L17e00e.  v1:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17e012.  call `<init>`(v3, v1) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L17e018.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e01e.  v1:= temp;
  #L17e020.  v2:= 8I;
  #L17e024.  if v1 == v2 then goto L17e066;
  #L17e028.  v0:= new `java.io.IOException`;
  #L17e02c.  v2:= new `java.lang.StringBuilder`;
  #L17e030.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17e036.  v3:= "Unsupported compression method " @kind object;
  #L17e03a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e040.  v2:= temp @kind object;
  #L17e042.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e048.  v1:= temp @kind object;
  #L17e04a.  v2:= " in the .gz header" @kind object;
  #L17e04e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17e054.  v1:= temp @kind object;
  #L17e056.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17e05c.  v1:= temp @kind object;
  #L17e05e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17e064.  throw v0;
  #L17e066.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e06c.  v4:= temp;
  #L17e06e.  v1:= v4 ^& 224;
  #L17e072.  if v1 == 0 then goto L17e086;
  #L17e076.  v0:= new `java.io.IOException`;
  #L17e07a.  v1:= "Reserved flags are set in the .gz header" @kind object;
  #L17e07e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17e084.  throw v0;
  #L17e086.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L17e08a.  call temp:= `b`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.b:(Ljava/io/DataInputStream;)J` @kind direct;
  #L17e090.  v6:= temp @kind wide;
  #L17e092.  v8:= 1000L;
  #L17e096.  v6:= v6 * v8 @kind long;
  #L17e098.  call `a`(v1, v6) @signature `Lorg/a/a/a/a/a/b;.a:(J)V` @kind virtual;
  #L17e09e.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e0a4.  v1:= temp;
  #L17e0a6.  goto L17e180;
  #L17e0ac.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L17e0b0.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e0b6.  v2:= temp;
  #L17e0b8.  call `b`(v1, v2) @signature `Lorg/a/a/a/a/a/b;.b:(I)V` @kind virtual;
  #L17e0be.  v1:= v4 ^& 4;
  #L17e0c2.  if v1 == 0 then goto L17e10a;
  #L17e0c6.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e0cc.  v1:= temp;
  #L17e0ce.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e0d4.  v2:= temp;
  #L17e0d6.  v2:= v2 ^< 8;
  #L17e0da.  v1:= v1 ^| v2 @kind int;
  #L17e0dc.  v2:= v1 + -1;
  #L17e0e0.  if v1 <= 0 then goto L17e10a;
  #L17e0e4.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e0ea.  v1:= v2;
  #L17e0ec.  goto L17e0dc;
  #L17e0ee.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L17e0f2.  v2:= 9I;
  #L17e0f6.  call `a`(v1, v2) @signature `Lorg/a/a/a/a/a/b;.a:(I)V` @kind virtual;
  #L17e0fc.  goto L17e0ac;
  #L17e0fe.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L17e102.  call `a`(v1, v0) @signature `Lorg/a/a/a/a/a/b;.a:(I)V` @kind virtual;
  #L17e108.  goto L17e0ac;
  #L17e10a.  v1:= v4 ^& 8;
  #L17e10e.  if v1 == 0 then goto L17e132;
  #L17e112.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L17e116.  v2:= new `java.lang.String`;
  #L17e11a.  call temp:= `a`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.a:(Ljava/io/DataInputStream;)[B` @kind direct;
  #L17e120.  v5:= temp @kind object;
  #L17e122.  v6:= "ISO-8859-1" @kind object;
  #L17e126.  call `<init>`(v2, v5, v6) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L17e12c.  call `a`(v1, v2) @signature `Lorg/a/a/a/a/a/b;.a:(Ljava/lang/String;)V` @kind virtual;
  #L17e132.  v1:= v4 ^& 16;
  #L17e136.  if v1 == 0 then goto L17e15a;
  #L17e13a.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L17e13e.  v2:= new `java.lang.String`;
  #L17e142.  call temp:= `a`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.a:(Ljava/io/DataInputStream;)[B` @kind direct;
  #L17e148.  v5:= temp @kind object;
  #L17e14a.  v6:= "ISO-8859-1" @kind object;
  #L17e14e.  call `<init>`(v2, v5, v6) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L17e154.  call `b`(v1, v2) @signature `Lorg/a/a/a/a/a/b;.b:(Ljava/lang/String;)V` @kind virtual;
  #L17e15a.  v1:= v4 ^& 2;
  #L17e15e.  if v1 == 0 then goto L17e168;
  #L17e162.  call temp:= `readShort`(v3) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L17e168.  v1:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e16c.  call `reset`(v1) @signature `Ljava/util/zip/Inflater;.reset:()V` @kind virtual;
  #L17e172.  v1:= v10.`org.a.a.a.a.a.a.g` @type ^`java.util.zip.CRC32` @kind object;
  #L17e176.  call `reset`(v1) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L17e17c.  goto L17dfde;
  #L17e180.  switch v1
                  | 2 => goto L17e0ee
                  | 3 => goto L17e0ac
                  | 4 => goto L17e0fe
                  | else => goto L17e0ac;
}
procedure `byte`[] `a`(`org.a.a.a.a.a.a` v2 @kind this, `java.io.DataInputStream` v3 @kind object) @signature `Lorg/a/a/a/a/a/a;.a:(Ljava/io/DataInputStream;)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L17e1a4.  v0:= new `java.io.ByteArrayOutputStream`;
  #L17e1a8.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L17e1ae.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e1b4.  v1:= temp;
  #L17e1b6.  if v1 == 0 then goto L17e1c2;
  #L17e1ba.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L17e1c0.  goto L17e1ae;
  #L17e1c2.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L17e1c8.  v0:= temp @kind object;
  #L17e1ca.  return v0 @kind object;
}
procedure `long` `b`(`org.a.a.a.a.a.a` v5 @kind this, `java.io.DataInputStream` v6 @kind object) @signature `Lorg/a/a/a/a/a/a;.b:(Ljava/io/DataInputStream;)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17e1dc.  call temp:= `readUnsignedByte`(v6) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e1e2.  v0:= temp;
  #L17e1e4.  call temp:= `readUnsignedByte`(v6) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e1ea.  v1:= temp;
  #L17e1ec.  v1:= v1 ^< 8;
  #L17e1f0.  v0:= v0 ^| v1 @kind int;
  #L17e1f2.  call temp:= `readUnsignedByte`(v6) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e1f8.  v1:= temp;
  #L17e1fa.  v1:= v1 ^< 16;
  #L17e1fe.  v0:= v0 ^| v1 @kind int;
  #L17e200.  v0:= (`long`) v0 @kind i2l;
  #L17e202.  call temp:= `readUnsignedByte`(v6) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17e208.  v2:= temp;
  #L17e20a.  v2:= (`long`) v2 @kind i2l;
  #L17e20c.  v4:= 24I;
  #L17e210.  v2:= v2 ^< v4 @kind long;
  #L17e212.  v0:= v0 ^| v2 @kind long;
  #L17e214.  return v0 @kind wide;
}
procedure `void` `close`(`org.a.a.a.a.a.a` v2 @kind this) @signature `Lorg/a/a/a/a/a/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17e228.  v0:= v2.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e22c.  if v0 == 0 then goto L17e240;
  #L17e230.  v0:= v2.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e234.  call `end`(v0) @signature `Ljava/util/zip/Inflater;.end:()V` @kind virtual;
  #L17e23a.  v0:= 0I;
  #L17e23c.  v2.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` := v0 @kind object;
  #L17e240.  v0:= v2.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17e244.  v1:= `@@java.lang.System.in` @type ^`java.io.InputStream` @kind object;
  #L17e248.  if v0 == v1 then goto L17e256;
  #L17e24c.  v0:= v2.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17e250.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L17e256.  return @kind void;
}
procedure `int` `read`(`org.a.a.a.a.a.a` v4 @kind this) @signature `Lorg/a/a/a/a/a/a;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17e268.  v3:= 0I;
  #L17e26a.  v0:= -1I;
  #L17e26c.  v1:= v4.`org.a.a.a.a.a.a.i` @type ^`byte`[] @kind object;
  #L17e270.  v2:= 1I;
  #L17e272.  call temp:= `read`(v4, v1, v3, v2) @signature `Lorg/a/a/a/a/a/a;.read:([BII)I` @kind virtual;
  #L17e278.  v1:= temp;
  #L17e27a.  if v1 != v0 then goto L17e280;
  #L17e27e.  return v0;
  #L17e280.  v0:= v4.`org.a.a.a.a.a.a.i` @type ^`byte`[] @kind object;
  #L17e284.  v0:= v0[v3] @kind byte;
  #L17e288.  v0:= v0 ^& 255;
  #L17e28c.  goto L17e27e;
}
procedure `int` `read`(`org.a.a.a.a.a.a` v10 @kind this, `byte`[] v11 @kind object, `int` v12 , `int` v13 ) @signature `Lorg/a/a/a/a/a/a;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L17e2a0.  v0:= -1I;
  #L17e2a2.  v2:= 0I;
  #L17e2a4.  v1:= v10.`org.a.a.a.a.a.a.h` @type ^`boolean` @kind boolean;
  #L17e2a8.  if v1 == 0 then goto L17e2ae;
  #L17e2ac.  return v0;
  #L17e2ae.  v1:= v2;
  #L17e2b0.  if v13 <= 0 then goto L17e43c;
  #L17e2b4.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e2b8.  call temp:= `needsInput`(v3) @signature `Ljava/util/zip/Inflater;.needsInput:()Z` @kind virtual;
  #L17e2be.  v3:= temp;
  #L17e2c0.  if v3 == 0 then goto L17e30e;
  #L17e2c4.  v3:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17e2c8.  v4:= v10.`org.a.a.a.a.a.a.d` @type ^`byte`[] @kind object;
  #L17e2cc.  v4:= length @variable v4;
  #L17e2ce.  call `mark`(v3, v4) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L17e2d4.  v3:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17e2d8.  v4:= v10.`org.a.a.a.a.a.a.d` @type ^`byte`[] @kind object;
  #L17e2dc.  call temp:= `read`(v3, v4) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L17e2e2.  v3:= temp;
  #L17e2e4.  v10.`org.a.a.a.a.a.a.e` @type ^`int` := v3;
  #L17e2e8.  v3:= v10.`org.a.a.a.a.a.a.e` @type ^`int`;
  #L17e2ec.  if v3 != v0 then goto L17e2fc;
  #L17e2f0.  v0:= new `java.io.EOFException`;
  #L17e2f4.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L17e2fa.  throw v0;
  #L17e2fc.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e300.  v4:= v10.`org.a.a.a.a.a.a.d` @type ^`byte`[] @kind object;
  #L17e304.  v5:= v10.`org.a.a.a.a.a.a.e` @type ^`int`;
  #L17e308.  call `setInput`(v3, v4, v2, v5) @signature `Ljava/util/zip/Inflater;.setInput:([BII)V` @kind virtual;
  #Try_start0.  
  #L17e30e.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e312.  call temp:= `inflate`(v3, v11, v12, v13) @signature `Ljava/util/zip/Inflater;.inflate:([BII)I` @kind virtual;
  #Try_end0.  
  #L17e318.  v3:= temp;
  #L17e31a.  v4:= v10.`org.a.a.a.a.a.a.g` @type ^`java.util.zip.CRC32` @kind object;
  #L17e31e.  call `update`(v4, v11, v12, v3) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L17e324.  v12:= v12 + v3 @kind int;
  #L17e326.  v13:= v13 - v3 @kind int;
  #L17e328.  v1:= v1 + v3 @kind int;
  #L17e32a.  call `a`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.a:(I)V` @kind virtual;
  #L17e330.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e334.  call temp:= `finished`(v3) @signature `Ljava/util/zip/Inflater;.finished:()Z` @kind virtual;
  #L17e33a.  v3:= temp;
  #L17e33c.  if v3 == 0 then goto L17e2b0;
  #L17e340.  v3:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17e344.  call `reset`(v3) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L17e34a.  v3:= v10.`org.a.a.a.a.a.a.e` @type ^`int`;
  #L17e34e.  v4:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e352.  call temp:= `getRemaining`(v4) @signature `Ljava/util/zip/Inflater;.getRemaining:()I` @kind virtual;
  #L17e358.  v4:= temp;
  #L17e35a.  v3:= v3 - v4 @kind int;
  #L17e35c.  v4:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17e360.  v6:= (`long`) v3 @kind i2l;
  #L17e362.  call temp:= `skip`(v4, v6) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L17e368.  v4:= temp @kind wide;
  #L17e36a.  v6:= (`long`) v3 @kind i2l;
  #L17e36c.  v3:= lcmp(v4, v6);
  #L17e370.  if v3 == 0 then goto L17e392;
  #L17e374.  v0:= new `java.io.IOException`;
  #L17e378.  call `<init>`(v0) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L17e37e.  throw v0;
  #L17e380.  v0:= Exception @type ^`java.util.zip.DataFormatException` @kind object;
  #L17e382.  v0:= new `java.io.IOException`;
  #L17e386.  v1:= "Gzip-compressed data is corrupt" @kind object;
  #L17e38a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17e390.  throw v0;
  #L17e392.  v10.`org.a.a.a.a.a.a.e` @type ^`int` := v2;
  #L17e396.  v3:= new `java.io.DataInputStream`;
  #L17e39a.  v4:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17e39e.  call `<init>`(v3, v4) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L17e3a4.  call temp:= `b`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.b:(Ljava/io/DataInputStream;)J` @kind direct;
  #L17e3aa.  v4:= temp @kind wide;
  #L17e3ac.  v6:= v10.`org.a.a.a.a.a.a.g` @type ^`java.util.zip.CRC32` @kind object;
  #L17e3b0.  call temp:= `getValue`(v6) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L17e3b6.  v6:= temp @kind wide;
  #L17e3b8.  v4:= lcmp(v4, v6);
  #L17e3bc.  if v4 == 0 then goto L17e3d0;
  #L17e3c0.  v0:= new `java.io.IOException`;
  #L17e3c4.  v1:= "Gzip-compressed data is corrupt (CRC32 error)" @kind object;
  #L17e3c8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17e3ce.  throw v0;
  #L17e3d0.  call temp:= `b`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.b:(Ljava/io/DataInputStream;)J` @kind direct;
  #L17e3d6.  v4:= temp @kind wide;
  #L17e3d8.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e3dc.  call temp:= `getBytesWritten`(v3) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L17e3e2.  v6:= temp @kind wide;
  #L17e3e4.  v8:= 4294967295L;
  #L17e3ee.  v6:= v6 ^& v8 @kind long;
  #L17e3f0.  v3:= lcmp(v4, v6);
  #L17e3f4.  if v3 == 0 then goto L17e408;
  #L17e3f8.  v0:= new `java.io.IOException`;
  #L17e3fc.  v1:= "Gzip-compressed data is corrupt(uncompressed size mismatch)" @kind object;
  #L17e400.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17e406.  throw v0;
  #L17e408.  v3:= v10.`org.a.a.a.a.a.a.c` @type ^`boolean` @kind boolean;
  #L17e40c.  if v3 == 0 then goto L17e41c;
  #L17e410.  call temp:= `a`(v10, v2) @signature `Lorg/a/a/a/a/a/a;.a:(Z)Z` @kind direct;
  #L17e416.  v3:= temp;
  #L17e418.  if v3 != 0 then goto L17e2b0;
  #L17e41c.  v2:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L17e420.  call `end`(v2) @signature `Ljava/util/zip/Inflater;.end:()V` @kind virtual;
  #L17e426.  v2:= 0I;
  #L17e428.  v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` := v2 @kind object;
  #L17e42c.  v2:= 1I;
  #L17e42e.  v10.`org.a.a.a.a.a.a.h` @type ^`boolean` := v2 @kind boolean;
  #L17e432.  if v1 == 0 then goto L17e2ac;
  #L17e436.  v0:= v1;
  #L17e438.  goto L17e2ac;
  #L17e43c.  v0:= v1;
  #L17e43e.  goto L17e2ac;
  catch `java.util.zip.DataFormatException` @[Try_start0..Try_end0] goto L17e380;
}

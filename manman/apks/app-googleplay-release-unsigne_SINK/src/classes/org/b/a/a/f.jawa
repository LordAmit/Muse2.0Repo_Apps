record `org.b.a.a.f` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b`[] `org.b.a.a.f.a` @AccessFlag PRIVATE;
  `int` `org.b.a.a.f.b` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.f.c` @AccessFlag PRIVATE;
  `java.lang.String` `org.b.a.a.f.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.g` `@@org.b.a.a.f.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.d.h` `@@org.b.a.a.f.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.d.i` `@@org.b.a.a.f.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.d.j` `@@org.b.a.a.f.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19ff10.  v0:= new `org.b.a.a.d.g`;
  #L19ff14.  call `<init>`(v0) @signature `Lorg/b/a/a/d/g;.<init>:()V` @kind direct;
  #L19ff1a.  `@@org.b.a.a.f.e` @type ^`org.b.a.a.d.g` := v0 @kind object;
  #L19ff1e.  v0:= new `org.b.a.a.d.h`;
  #L19ff22.  call `<init>`(v0) @signature `Lorg/b/a/a/d/h;.<init>:()V` @kind direct;
  #L19ff28.  `@@org.b.a.a.f.f` @type ^`org.b.a.a.d.h` := v0 @kind object;
  #L19ff2c.  v0:= new `org.b.a.a.d.i`;
  #L19ff30.  call `<init>`(v0) @signature `Lorg/b/a/a/d/i;.<init>:()V` @kind direct;
  #L19ff36.  `@@org.b.a.a.f.g` @type ^`org.b.a.a.d.i` := v0 @kind object;
  #L19ff3a.  v0:= new `org.b.a.a.d.j`;
  #L19ff3e.  call `<init>`(v0) @signature `Lorg/b/a/a/d/j;.<init>:()V` @kind direct;
  #L19ff44.  `@@org.b.a.a.f.h` @type ^`org.b.a.a.d.j` := v0 @kind object;
  #L19ff48.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.f` v4 @kind this) @signature `Lorg/b/a/a/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19ff5c.  call `<init>`(v4) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L19ff62.  v0:= 4I;
  #L19ff64.  v0:= new `org.b.a.a.d.b`[v0];
  #L19ff68.  v4.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] := v0 @kind object;
  #L19ff6c.  v0:= v4.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L19ff70.  v1:= 0I;
  #L19ff72.  v2:= new `org.b.a.a.d.b`;
  #L19ff76.  v3:= `@@org.b.a.a.f.e` @type ^`org.b.a.a.d.g` @kind object;
  #L19ff7a.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L19ff80.  v0[v1]:= v2 @kind object;
  #L19ff84.  v0:= v4.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L19ff88.  v1:= 1I;
  #L19ff8a.  v2:= new `org.b.a.a.d.b`;
  #L19ff8e.  v3:= `@@org.b.a.a.f.f` @type ^`org.b.a.a.d.h` @kind object;
  #L19ff92.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L19ff98.  v0[v1]:= v2 @kind object;
  #L19ff9c.  v0:= v4.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L19ffa0.  v1:= 2I;
  #L19ffa2.  v2:= new `org.b.a.a.d.b`;
  #L19ffa6.  v3:= `@@org.b.a.a.f.g` @type ^`org.b.a.a.d.i` @kind object;
  #L19ffaa.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L19ffb0.  v0[v1]:= v2 @kind object;
  #L19ffb4.  v0:= v4.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L19ffb8.  v1:= 3I;
  #L19ffba.  v2:= new `org.b.a.a.d.b`;
  #L19ffbe.  v3:= `@@org.b.a.a.f.h` @type ^`org.b.a.a.d.j` @kind object;
  #L19ffc2.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L19ffc8.  v0[v1]:= v2 @kind object;
  #L19ffcc.  call `d`(v4) @signature `Lorg/b/a/a/f;.d:()V` @kind virtual;
  #L19ffd2.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.f` v1 @kind this) @signature `Lorg/b/a/a/f;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ffe4.  v0:= v1.`org.b.a.a.f.d` @type ^`java.lang.String` @kind object;
  #L19ffe8.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.f` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/b/a/a/f;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19fffc.  v1:= v8 + v9 @kind int;
  #L1a0000.  if v8 >= v1 then goto L1a00bc;
  #L1a0004.  v0:= v6.`org.b.a.a.f.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0008.  v2:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a000c.  if v0 != v2 then goto L1a00bc;
  #L1a0010.  v0:= v6.`org.b.a.a.f.b` @type ^`int`;
  #L1a0014.  v0:= v0 + -1;
  #L1a0018.  if v0 < 0 then goto L1a00b6;
  #L1a001c.  v2:= v6.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a0020.  v2:= v2[v0] @kind object;
  #L1a0024.  v3:= v7[v8] @kind byte;
  #L1a0028.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L1a002e.  v2:= temp;
  #L1a0030.  v3:= 1I;
  #L1a0032.  if v2 != v3 then goto L1a008e;
  #L1a0036.  v2:= v6.`org.b.a.a.f.b` @type ^`int`;
  #L1a003a.  v2:= v2 + -1;
  #L1a003e.  v6.`org.b.a.a.f.b` @type ^`int` := v2;
  #L1a0042.  v2:= v6.`org.b.a.a.f.b` @type ^`int`;
  #L1a0046.  if v2 > 0 then goto L1a0058;
  #L1a004a.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a004e.  v6.`org.b.a.a.f.c` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a0052.  v0:= v6.`org.b.a.a.f.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0056.  return v0 @kind object;
  #L1a0058.  v2:= v6.`org.b.a.a.f.b` @type ^`int`;
  #L1a005c.  if v0 == v2 then goto L1a0088;
  #L1a0060.  v2:= v6.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a0064.  v3:= v6.`org.b.a.a.f.b` @type ^`int`;
  #L1a0068.  v2:= v2[v3] @kind object;
  #L1a006c.  v3:= v6.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a0070.  v4:= v6.`org.b.a.a.f.b` @type ^`int`;
  #L1a0074.  v5:= v6.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a0078.  v5:= v5[v0] @kind object;
  #L1a007c.  v3[v4]:= v5 @kind object;
  #L1a0080.  v3:= v6.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a0084.  v3[v0]:= v2 @kind object;
  #L1a0088.  v0:= v0 + -1;
  #L1a008c.  goto L1a0018;
  #L1a008e.  v3:= 2I;
  #L1a0090.  if v2 != v3 then goto L1a0088;
  #L1a0094.  v1:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0098.  v6.`org.b.a.a.f.c` @type ^`org.b.a.a.b$a` := v1 @kind object;
  #L1a009c.  v1:= v6.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a00a0.  v0:= v1[v0] @kind object;
  #L1a00a4.  call temp:= `c`(v0) @signature `Lorg/b/a/a/d/b;.c:()Ljava/lang/String;` @kind virtual;
  #L1a00aa.  v0:= temp @kind object;
  #L1a00ac.  v6.`org.b.a.a.f.d` @type ^`java.lang.String` := v0 @kind object;
  #L1a00b0.  v0:= v6.`org.b.a.a.f.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a00b4.  goto L1a0056;
  #L1a00b6.  v8:= v8 + 1;
  #L1a00ba.  goto L1a0000;
  #L1a00bc.  v0:= v6.`org.b.a.a.f.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a00c0.  goto L1a0056;
}
procedure `float` `b`(`org.b.a.a.f` v1 @kind this) @signature `Lorg/b/a/a/f;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a00d4.  v0:= 1065185444I;
  #L1a00da.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.f` v1 @kind this) @signature `Lorg/b/a/a/f;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a00ec.  v0:= v1.`org.b.a.a.f.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a00f0.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.f` v2 @kind this) @signature `Lorg/b/a/a/f;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a0104.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0108.  v2.`org.b.a.a.f.c` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a010c.  v0:= 0I;
  #L1a010e.  v1:= v2.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a0112.  v1:= length @variable v1;
  #L1a0114.  if v0 >= v1 then goto L1a012c;
  #L1a0118.  v1:= v2.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a011c.  v1:= v1[v0] @kind object;
  #L1a0120.  call `b`(v1) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L1a0126.  v0:= v0 + 1;
  #L1a012a.  goto L1a010e;
  #L1a012c.  v0:= v2.`org.b.a.a.f.a` @type ^`org.b.a.a.d.b`[] @kind object;
  #L1a0130.  v0:= length @variable v0;
  #L1a0132.  v2.`org.b.a.a.f.b` @type ^`int` := v0;
  #L1a0136.  v0:= 0I;
  #L1a0138.  v2.`org.b.a.a.f.d` @type ^`java.lang.String` := v0 @kind object;
  #L1a013c.  return @kind void;
}

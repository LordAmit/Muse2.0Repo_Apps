record `org.b.a.a.e` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.e.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.e.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.e` `org.b.a.a.e.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.e.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.e.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19fd3c.  v0:= new `org.b.a.a.d.e`;
  #L19fd40.  call `<init>`(v0) @signature `Lorg/b/a/a/d/e;.<init>:()V` @kind direct;
  #L19fd46.  `@@org.b.a.a.e.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L19fd4a.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.e` v2 @kind this) @signature `Lorg/b/a/a/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19fd5c.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L19fd62.  v0:= new `org.b.a.a.d.b`;
  #L19fd66.  v1:= `@@org.b.a.a.e.e` @type ^`org.b.a.a.d.m` @kind object;
  #L19fd6a.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L19fd70.  v2.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L19fd74.  v0:= new `org.b.a.a.b.e`;
  #L19fd78.  call `<init>`(v0) @signature `Lorg/b/a/a/b/e;.<init>:()V` @kind direct;
  #L19fd7e.  v2.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` := v0 @kind object;
  #L19fd82.  v0:= 2I;
  #L19fd84.  v0:= new `byte`[v0];
  #L19fd88.  v2.`org.b.a.a.e.d` @type ^`byte`[] := v0 @kind object;
  #L19fd8c.  call `d`(v2) @signature `Lorg/b/a/a/e;.d:()V` @kind virtual;
  #L19fd92.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19fda4.  v0:= `@@org.b.a.b.k` @type ^`java.lang.String` @kind object;
  #L19fda8.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.e` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/e;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19fdbc.  v6:= 1I;
  #L19fdbe.  v5:= 0I;
  #L19fdc0.  v1:= v9 + v10 @kind int;
  #L19fdc4.  v0:= v9;
  #L19fdc6.  if v0 >= v1 then goto L19fde6;
  #L19fdca.  v2:= v7.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19fdce.  v3:= v8[v0] @kind byte;
  #L19fdd2.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L19fdd8.  v2:= temp;
  #L19fdda.  if v2 != v6 then goto L19fe36;
  #L19fdde.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L19fde2.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19fde6.  v0:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L19fdea.  v1:= v1 + -1;
  #L19fdee.  v1:= v8[v1] @kind byte;
  #L19fdf2.  v0[v5]:= v1 @kind byte;
  #L19fdf6.  v0:= v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fdfa.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19fdfe.  if v0 != v1 then goto L19fe30;
  #L19fe02.  v0:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L19fe06.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/e;.c:()Z` @kind virtual;
  #L19fe0c.  v0:= temp;
  #L19fe0e.  if v0 == 0 then goto L19fe30;
  #L19fe12.  call temp:= `b`(v7) @signature `Lorg/b/a/a/e;.b:()F` @kind virtual;
  #L19fe18.  v0:= temp;
  #L19fe1a.  v1:= 1064514355I;
  #L19fe20.  v0:= fcmpl(v0, v1);
  #L19fe24.  if v0 <= 0 then goto L19fe30;
  #L19fe28.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fe2c.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19fe30.  v0:= v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fe34.  return v0 @kind object;
  #L19fe36.  v3:= 2I;
  #L19fe38.  if v2 != v3 then goto L19fe46;
  #L19fe3c.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fe40.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19fe44.  goto L19fde6;
  #L19fe46.  if v2 != 0 then goto L19fe74;
  #L19fe4a.  v2:= v7.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19fe4e.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L19fe54.  v2:= temp;
  #L19fe56.  if v0 != v9 then goto L19fe7a;
  #L19fe5a.  v3:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L19fe5e.  v4:= v8[v9] @kind byte;
  #L19fe62.  v3[v6]:= v4 @kind byte;
  #L19fe66.  v3:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L19fe6a.  v4:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L19fe6e.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/e;.a:([BII)V` @kind virtual;
  #L19fe74.  v0:= v0 + 1;
  #L19fe78.  goto L19fdc6;
  #L19fe7a.  v3:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L19fe7e.  v4:= v0 + -1;
  #L19fe82.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/e;.a:([BII)V` @kind virtual;
  #L19fe88.  goto L19fe74;
}
procedure `float` `b`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19fe9c.  v0:= v1.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L19fea0.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/e;.a:()F` @kind virtual;
  #L19fea6.  v0:= temp;
  #L19fea8.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19febc.  v0:= v1.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fec0.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.e` v2 @kind this) @signature `Lorg/b/a/a/e;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19fed4.  v0:= v2.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19fed8.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L19fede.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19fee2.  v2.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19fee6.  v0:= v2.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L19feea.  call `b`(v0) @signature `Lorg/b/a/a/b/e;.b:()V` @kind virtual;
  #L19fef0.  v0:= v2.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L19fef4.  v1:= 0I;
  #L19fef6.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L19fefc.  return @kind void;
}

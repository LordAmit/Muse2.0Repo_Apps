record `org.b.a.a.b.c` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b.g` @kind class {
}
procedure `void` `<init>`(`org.b.a.a.b.c` v0 @kind this) @signature `Lorg/b/a/a/b/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18aaa0.  call `<init>`(v0) @signature `Lorg/b/a/a/b/g;.<init>:()V` @kind direct;
  #L18aaa6.  return @kind void;
}
procedure `int` `a`(`org.b.a.a.b.c` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/b/a/a/b/c;.a:([BI)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L18aab8.  v0:= v3[v4] @kind byte;
  #L18aabc.  v0:= v0 ^& 255;
  #L18aac0.  v1:= 161I;
  #L18aac4.  if v0 < v1 then goto L18aae4;
  #L18aac8.  v1:= v4 + 1;
  #L18aacc.  v1:= v3[v1] @kind byte;
  #L18aad0.  v1:= v1 ^& 255;
  #L18aad4.  v0:= v0 + -161;
  #L18aad8.  v0:= v0 * 94;
  #L18aadc.  v0:= v0 + v1 @kind int;
  #L18aade.  v0:= v0 + -161;
  #L18aae2.  return v0;
  #L18aae4.  v0:= -1I;
  #L18aae6.  goto L18aae2;
}

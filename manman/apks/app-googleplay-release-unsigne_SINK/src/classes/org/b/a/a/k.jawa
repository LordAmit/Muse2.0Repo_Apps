record `org.b.a.a.k` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.b$a` `org.b.a.a.k.a` @AccessFlag PRIVATE;
  `org.b.a.a.b`[] `org.b.a.a.k.b` @AccessFlag PRIVATE;
  `boolean`[] `org.b.a.a.k.c` @AccessFlag PRIVATE;
  `int` `org.b.a.a.k.d` @AccessFlag PRIVATE;
  `int` `org.b.a.a.k.e` @AccessFlag PRIVATE;
}
global `org.b.a.a.c.l` `@@org.b.a.a.k.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.b.a.a.c.l` `@@org.b.a.a.k.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a0b9c.  v0:= new `org.b.a.a.c.n`;
  #L1a0ba0.  call `<init>`(v0) @signature `Lorg/b/a/a/c/n;.<init>:()V` @kind direct;
  #L1a0ba6.  `@@org.b.a.a.k.f` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0baa.  v0:= new `org.b.a.a.c.g`;
  #L1a0bae.  call `<init>`(v0) @signature `Lorg/b/a/a/c/g;.<init>:()V` @kind direct;
  #L1a0bb4.  `@@org.b.a.a.k.g` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0bb8.  v0:= new `org.b.a.a.c.i`;
  #L1a0bbc.  call `<init>`(v0) @signature `Lorg/b/a/a/c/i;.<init>:()V` @kind direct;
  #L1a0bc2.  `@@org.b.a.a.k.h` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0bc6.  v0:= new `org.b.a.a.c.k`;
  #L1a0bca.  call `<init>`(v0) @signature `Lorg/b/a/a/c/k;.<init>:()V` @kind direct;
  #L1a0bd0.  `@@org.b.a.a.k.i` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0bd4.  v0:= new `org.b.a.a.c.f`;
  #L1a0bd8.  call `<init>`(v0) @signature `Lorg/b/a/a/c/f;.<init>:()V` @kind direct;
  #L1a0bde.  `@@org.b.a.a.k.j` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0be2.  v0:= new `org.b.a.a.c.e`;
  #L1a0be6.  call `<init>`(v0) @signature `Lorg/b/a/a/c/e;.<init>:()V` @kind direct;
  #L1a0bec.  `@@org.b.a.a.k.k` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0bf0.  v0:= new `org.b.a.a.c.j`;
  #L1a0bf4.  call `<init>`(v0) @signature `Lorg/b/a/a/c/j;.<init>:()V` @kind direct;
  #L1a0bfa.  `@@org.b.a.a.k.l` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0bfe.  v0:= new `org.b.a.a.c.o`;
  #L1a0c02.  call `<init>`(v0) @signature `Lorg/b/a/a/c/o;.<init>:()V` @kind direct;
  #L1a0c08.  `@@org.b.a.a.k.m` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0c0c.  v0:= new `org.b.a.a.c.h`;
  #L1a0c10.  call `<init>`(v0) @signature `Lorg/b/a/a/c/h;.<init>:()V` @kind direct;
  #L1a0c16.  `@@org.b.a.a.k.n` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0c1a.  v0:= new `org.b.a.a.c.m`;
  #L1a0c1e.  call `<init>`(v0) @signature `Lorg/b/a/a/c/m;.<init>:()V` @kind direct;
  #L1a0c24.  `@@org.b.a.a.k.o` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0c28.  v0:= new `org.b.a.a.c.d`;
  #L1a0c2c.  call `<init>`(v0) @signature `Lorg/b/a/a/c/d;.<init>:()V` @kind direct;
  #L1a0c32.  `@@org.b.a.a.k.p` @type ^`org.b.a.a.c.l` := v0 @kind object;
  #L1a0c36.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.k` v8 @kind this) @signature `Lorg/b/a/a/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1a0c48.  v1:= 13I;
  #L1a0c4c.  v7:= 12I;
  #L1a0c50.  v6:= 11I;
  #L1a0c54.  v5:= 1I;
  #L1a0c56.  v4:= 0I;
  #L1a0c58.  call `<init>`(v8) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L1a0c5e.  v0:= new `org.b.a.a.b`[v1];
  #L1a0c62.  v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] := v0 @kind object;
  #L1a0c66.  v0:= new `boolean`[v1];
  #L1a0c6a.  v8.`org.b.a.a.k.c` @type ^`boolean`[] := v0 @kind object;
  #L1a0c6e.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0c72.  v1:= new `org.b.a.a.m`;
  #L1a0c76.  v2:= `@@org.b.a.a.k.f` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0c7a.  call `<init>`(v1, v2) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0c80.  v0[v4]:= v1 @kind object;
  #L1a0c84.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0c88.  v1:= new `org.b.a.a.m`;
  #L1a0c8c.  v2:= `@@org.b.a.a.k.g` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0c90.  call `<init>`(v1, v2) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0c96.  v0[v5]:= v1 @kind object;
  #L1a0c9a.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0c9e.  v1:= 2I;
  #L1a0ca0.  v2:= new `org.b.a.a.m`;
  #L1a0ca4.  v3:= `@@org.b.a.a.k.h` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0ca8.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0cae.  v0[v1]:= v2 @kind object;
  #L1a0cb2.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0cb6.  v1:= 3I;
  #L1a0cb8.  v2:= new `org.b.a.a.m`;
  #L1a0cbc.  v3:= `@@org.b.a.a.k.i` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0cc0.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0cc6.  v0[v1]:= v2 @kind object;
  #L1a0cca.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0cce.  v1:= 4I;
  #L1a0cd0.  v2:= new `org.b.a.a.m`;
  #L1a0cd4.  v3:= `@@org.b.a.a.k.j` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0cd8.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0cde.  v0[v1]:= v2 @kind object;
  #L1a0ce2.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0ce6.  v1:= 5I;
  #L1a0ce8.  v2:= new `org.b.a.a.m`;
  #L1a0cec.  v3:= `@@org.b.a.a.k.k` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0cf0.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0cf6.  v0[v1]:= v2 @kind object;
  #L1a0cfa.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0cfe.  v1:= 6I;
  #L1a0d00.  v2:= new `org.b.a.a.m`;
  #L1a0d04.  v3:= `@@org.b.a.a.k.l` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0d08.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0d0e.  v0[v1]:= v2 @kind object;
  #L1a0d12.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0d16.  v1:= 7I;
  #L1a0d18.  v2:= new `org.b.a.a.m`;
  #L1a0d1c.  v3:= `@@org.b.a.a.k.m` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0d20.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0d26.  v0[v1]:= v2 @kind object;
  #L1a0d2a.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0d2e.  v1:= 8I;
  #L1a0d32.  v2:= new `org.b.a.a.m`;
  #L1a0d36.  v3:= `@@org.b.a.a.k.n` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0d3a.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0d40.  v0[v1]:= v2 @kind object;
  #L1a0d44.  v0:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0d48.  v1:= 9I;
  #L1a0d4c.  v2:= new `org.b.a.a.m`;
  #L1a0d50.  v3:= `@@org.b.a.a.k.o` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0d54.  call `<init>`(v2, v3) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @kind direct;
  #L1a0d5a.  v0[v1]:= v2 @kind object;
  #L1a0d5e.  v0:= new `org.b.a.a.h`;
  #L1a0d62.  call `<init>`(v0) @signature `Lorg/b/a/a/h;.<init>:()V` @kind direct;
  #L1a0d68.  v1:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0d6c.  v2:= 10I;
  #L1a0d70.  v1[v2]:= v0 @kind object;
  #L1a0d74.  v1:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0d78.  v2:= new `org.b.a.a.m`;
  #L1a0d7c.  v3:= `@@org.b.a.a.k.p` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0d80.  call `<init>`(v2, v3, v4, v0) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;ZLorg/b/a/a/b;)V` @kind direct;
  #L1a0d86.  v1[v6]:= v2 @kind object;
  #L1a0d8a.  v1:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0d8e.  v2:= new `org.b.a.a.m`;
  #L1a0d92.  v3:= `@@org.b.a.a.k.p` @type ^`org.b.a.a.c.l` @kind object;
  #L1a0d96.  call `<init>`(v2, v3, v5, v0) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;ZLorg/b/a/a/b;)V` @kind direct;
  #L1a0d9c.  v1[v7]:= v2 @kind object;
  #L1a0da0.  v1:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0da4.  v1:= v1[v6] @kind object;
  #L1a0da8.  v2:= v8.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0dac.  v2:= v2[v7] @kind object;
  #L1a0db0.  call `a`(v0, v1, v2) @signature `Lorg/b/a/a/h;.a:(Lorg/b/a/a/b;Lorg/b/a/a/b;)V` @kind virtual;
  #L1a0db6.  call `d`(v8) @signature `Lorg/b/a/a/k;.d:()V` @kind virtual;
  #L1a0dbc.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.k` v2 @kind this) @signature `Lorg/b/a/a/k;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a0dd0.  v1:= -1I;
  #L1a0dd2.  v0:= v2.`org.b.a.a.k.d` @type ^`int`;
  #L1a0dd6.  if v0 != v1 then goto L1a0dee;
  #L1a0dda.  call temp:= `b`(v2) @signature `Lorg/b/a/a/k;.b:()F` @kind virtual;
  #L1a0de0.  v0:= v2.`org.b.a.a.k.d` @type ^`int`;
  #L1a0de4.  if v0 != v1 then goto L1a0dee;
  #L1a0de8.  v0:= 0I;
  #L1a0dea.  v2.`org.b.a.a.k.d` @type ^`int` := v0;
  #L1a0dee.  v0:= v2.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0df2.  v1:= v2.`org.b.a.a.k.d` @type ^`int`;
  #L1a0df6.  v0:= v0[v1] @kind object;
  #L1a0dfa.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L1a0e00.  v0:= temp @kind object;
  #L1a0e02.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.k` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/b/a/a/k;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a0e14.  v1:= 0I;
  #L1a0e16.  call temp:= `b`(v6, v7, v8, v9) @signature `Lorg/b/a/a/k;.b:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1a0e1c.  v2:= temp @kind object;
  #L1a0e1e.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1a0e24.  v0:= temp;
  #L1a0e26.  if v0 != 0 then goto L1a0e30;
  #L1a0e2a.  v0:= v6.`org.b.a.a.k.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0e2e.  return v0 @kind object;
  #L1a0e30.  v0:= v1;
  #L1a0e32.  v3:= v6.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0e36.  v3:= length @variable v3;
  #L1a0e38.  if v0 >= v3 then goto L1a0e2a;
  #L1a0e3c.  v3:= v6.`org.b.a.a.k.c` @type ^`boolean`[] @kind object;
  #L1a0e40.  v3:= v3[v0] @kind boolean;
  #L1a0e44.  if v3 != 0 then goto L1a0e4e;
  #L1a0e48.  v0:= v0 + 1;
  #L1a0e4c.  goto L1a0e32;
  #L1a0e4e.  v3:= v6.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0e52.  v3:= v3[v0] @kind object;
  #L1a0e56.  call temp:= `array`(v2) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1a0e5c.  v4:= temp @kind object;
  #L1a0e5e.  call temp:= `position`(v2) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L1a0e64.  v5:= temp;
  #L1a0e66.  call temp:= `a`(v3, v4, v1, v5) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @kind virtual;
  #L1a0e6c.  v3:= temp @kind object;
  #L1a0e6e.  v4:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0e72.  if v3 != v4 then goto L1a0e84;
  #L1a0e76.  v6.`org.b.a.a.k.d` @type ^`int` := v0;
  #L1a0e7a.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0e7e.  v6.`org.b.a.a.k.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a0e82.  goto L1a0e2a;
  #L1a0e84.  v4:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0e88.  if v3 != v4 then goto L1a0e48;
  #L1a0e8c.  v3:= v6.`org.b.a.a.k.c` @type ^`boolean`[] @kind object;
  #L1a0e90.  v3[v0]:= v1 @kind boolean;
  #L1a0e94.  v3:= v6.`org.b.a.a.k.e` @type ^`int`;
  #L1a0e98.  v3:= v3 + -1;
  #L1a0e9c.  v6.`org.b.a.a.k.e` @type ^`int` := v3;
  #L1a0ea0.  v3:= v6.`org.b.a.a.k.e` @type ^`int`;
  #L1a0ea4.  if v3 > 0 then goto L1a0e48;
  #L1a0ea8.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0eac.  v6.`org.b.a.a.k.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a0eb0.  goto L1a0e2a;
}
procedure `float` `b`(`org.b.a.a.k` v4 @kind this) @signature `Lorg/b/a/a/k;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a0ec4.  v1:= 0I;
  #L1a0ec6.  v0:= v4.`org.b.a.a.k.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0eca.  v2:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0ece.  if v0 != v2 then goto L1a0eda;
  #L1a0ed2.  v1:= 1065185444I;
  #L1a0ed8.  return v1;
  #L1a0eda.  v0:= v4.`org.b.a.a.k.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0ede.  v2:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0ee2.  if v0 != v2 then goto L1a0eee;
  #L1a0ee6.  v1:= 1008981770I;
  #L1a0eec.  goto L1a0ed8;
  #L1a0eee.  v0:= 0I;
  #L1a0ef0.  v2:= v4.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0ef4.  v2:= length @variable v2;
  #L1a0ef6.  if v0 >= v2 then goto L1a0ed8;
  #L1a0efa.  v2:= v4.`org.b.a.a.k.c` @type ^`boolean`[] @kind object;
  #L1a0efe.  v2:= v2[v0] @kind boolean;
  #L1a0f02.  if v2 != 0 then goto L1a0f0c;
  #L1a0f06.  v0:= v0 + 1;
  #L1a0f0a.  goto L1a0ef0;
  #L1a0f0c.  v2:= v4.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0f10.  v2:= v2[v0] @kind object;
  #L1a0f14.  call temp:= `b`(v2) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L1a0f1a.  v2:= temp;
  #L1a0f1c.  v3:= fcmpg(v1, v2);
  #L1a0f20.  if v3 >= 0 then goto L1a0f06;
  #L1a0f24.  v4.`org.b.a.a.k.d` @type ^`int` := v0;
  #L1a0f28.  v1:= v2;
  #L1a0f2a.  goto L1a0f06;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.k` v1 @kind this) @signature `Lorg/b/a/a/k;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a0f3c.  v0:= v1.`org.b.a.a.k.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0f40.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.k` v3 @kind this) @signature `Lorg/b/a/a/k;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a0f54.  v0:= 0I;
  #L1a0f56.  v3.`org.b.a.a.k.e` @type ^`int` := v0;
  #L1a0f5a.  v1:= v3.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0f5e.  v1:= length @variable v1;
  #L1a0f60.  if v0 >= v1 then goto L1a0f8e;
  #L1a0f64.  v1:= v3.`org.b.a.a.k.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1a0f68.  v1:= v1[v0] @kind object;
  #L1a0f6c.  call `d`(v1) @signature `Lorg/b/a/a/b;.d:()V` @kind virtual;
  #L1a0f72.  v1:= v3.`org.b.a.a.k.c` @type ^`boolean`[] @kind object;
  #L1a0f76.  v2:= 1I;
  #L1a0f78.  v1[v0]:= v2 @kind boolean;
  #L1a0f7c.  v1:= v3.`org.b.a.a.k.e` @type ^`int`;
  #L1a0f80.  v1:= v1 + 1;
  #L1a0f84.  v3.`org.b.a.a.k.e` @type ^`int` := v1;
  #L1a0f88.  v0:= v0 + 1;
  #L1a0f8c.  goto L1a0f5a;
  #L1a0f8e.  v0:= -1I;
  #L1a0f90.  v3.`org.b.a.a.k.d` @type ^`int` := v0;
  #L1a0f94.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0f98.  v3.`org.b.a.a.k.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a0f9c.  return @kind void;
}

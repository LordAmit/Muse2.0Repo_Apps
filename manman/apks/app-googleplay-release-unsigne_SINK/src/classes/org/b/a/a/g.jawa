record `org.b.a.a.g` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.g.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.g.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.f` `org.b.a.a.g.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.g.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.g.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a0150.  v0:= new `org.b.a.a.d.f`;
  #L1a0154.  call `<init>`(v0) @signature `Lorg/b/a/a/d/f;.<init>:()V` @kind direct;
  #L1a015a.  `@@org.b.a.a.g.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L1a015e.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.g` v2 @kind this) @signature `Lorg/b/a/a/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a0170.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L1a0176.  v0:= new `org.b.a.a.d.b`;
  #L1a017a.  v1:= `@@org.b.a.a.g.e` @type ^`org.b.a.a.d.m` @kind object;
  #L1a017e.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L1a0184.  v2.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L1a0188.  v0:= new `org.b.a.a.b.f`;
  #L1a018c.  call `<init>`(v0) @signature `Lorg/b/a/a/b/f;.<init>:()V` @kind direct;
  #L1a0192.  v2.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` := v0 @kind object;
  #L1a0196.  v0:= 2I;
  #L1a0198.  v0:= new `byte`[v0];
  #L1a019c.  v2.`org.b.a.a.g.d` @type ^`byte`[] := v0 @kind object;
  #L1a01a0.  call `d`(v2) @signature `Lorg/b/a/a/g;.d:()V` @kind virtual;
  #L1a01a6.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a01b8.  v0:= `@@org.b.a.b.h` @type ^`java.lang.String` @kind object;
  #L1a01bc.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.g` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/g;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a01d0.  v6:= 1I;
  #L1a01d2.  v5:= 0I;
  #L1a01d4.  v1:= v9 + v10 @kind int;
  #L1a01d8.  v0:= v9;
  #L1a01da.  if v0 >= v1 then goto L1a01fa;
  #L1a01de.  v2:= v7.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L1a01e2.  v3:= v8[v0] @kind byte;
  #L1a01e6.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L1a01ec.  v2:= temp;
  #L1a01ee.  if v2 != v6 then goto L1a024a;
  #L1a01f2.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a01f6.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a01fa.  v0:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L1a01fe.  v1:= v1 + -1;
  #L1a0202.  v1:= v8[v1] @kind byte;
  #L1a0206.  v0[v5]:= v1 @kind byte;
  #L1a020a.  v0:= v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a020e.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0212.  if v0 != v1 then goto L1a0244;
  #L1a0216.  v0:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L1a021a.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/f;.c:()Z` @kind virtual;
  #L1a0220.  v0:= temp;
  #L1a0222.  if v0 == 0 then goto L1a0244;
  #L1a0226.  call temp:= `b`(v7) @signature `Lorg/b/a/a/g;.b:()F` @kind virtual;
  #L1a022c.  v0:= temp;
  #L1a022e.  v1:= 1064514355I;
  #L1a0234.  v0:= fcmpl(v0, v1);
  #L1a0238.  if v0 <= 0 then goto L1a0244;
  #L1a023c.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0240.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a0244.  v0:= v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0248.  return v0 @kind object;
  #L1a024a.  v3:= 2I;
  #L1a024c.  if v2 != v3 then goto L1a025a;
  #L1a0250.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0254.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a0258.  goto L1a01fa;
  #L1a025a.  if v2 != 0 then goto L1a0288;
  #L1a025e.  v2:= v7.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L1a0262.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L1a0268.  v2:= temp;
  #L1a026a.  if v0 != v9 then goto L1a028e;
  #L1a026e.  v3:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L1a0272.  v4:= v8[v9] @kind byte;
  #L1a0276.  v3[v6]:= v4 @kind byte;
  #L1a027a.  v3:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L1a027e.  v4:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L1a0282.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/f;.a:([BII)V` @kind virtual;
  #L1a0288.  v0:= v0 + 1;
  #L1a028c.  goto L1a01da;
  #L1a028e.  v3:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L1a0292.  v4:= v0 + -1;
  #L1a0296.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/f;.a:([BII)V` @kind virtual;
  #L1a029c.  goto L1a0288;
}
procedure `float` `b`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a02b0.  v0:= v1.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L1a02b4.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/f;.a:()F` @kind virtual;
  #L1a02ba.  v0:= temp;
  #L1a02bc.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a02d0.  v0:= v1.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a02d4.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.g` v2 @kind this) @signature `Lorg/b/a/a/g;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a02e8.  v0:= v2.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L1a02ec.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L1a02f2.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a02f6.  v2.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1a02fa.  v0:= v2.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L1a02fe.  call `b`(v0) @signature `Lorg/b/a/a/b/f;.b:()V` @kind virtual;
  #L1a0304.  v0:= v2.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L1a0308.  v1:= 0I;
  #L1a030a.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L1a0310.  return @kind void;
}

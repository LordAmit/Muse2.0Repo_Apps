record `org.b.a.a.d` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.d.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.d.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.d` `org.b.a.a.d.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.d.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.d.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19fb68.  v0:= new `org.b.a.a.d.d`;
  #L19fb6c.  call `<init>`(v0) @signature `Lorg/b/a/a/d/d;.<init>:()V` @kind direct;
  #L19fb72.  `@@org.b.a.a.d.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L19fb76.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.d` v2 @kind this) @signature `Lorg/b/a/a/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19fb88.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L19fb8e.  v0:= new `org.b.a.a.d.b`;
  #L19fb92.  v1:= `@@org.b.a.a.d.e` @type ^`org.b.a.a.d.m` @kind object;
  #L19fb96.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L19fb9c.  v2.`org.b.a.a.d.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L19fba0.  v0:= new `org.b.a.a.b.d`;
  #L19fba4.  call `<init>`(v0) @signature `Lorg/b/a/a/b/d;.<init>:()V` @kind direct;
  #L19fbaa.  v2.`org.b.a.a.d.c` @type ^`org.b.a.a.b.d` := v0 @kind object;
  #L19fbae.  v0:= 2I;
  #L19fbb0.  v0:= new `byte`[v0];
  #L19fbb4.  v2.`org.b.a.a.d.d` @type ^`byte`[] := v0 @kind object;
  #L19fbb8.  call `d`(v2) @signature `Lorg/b/a/a/d;.d:()V` @kind virtual;
  #L19fbbe.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.d` v1 @kind this) @signature `Lorg/b/a/a/d;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19fbd0.  v0:= `@@org.b.a.b.j` @type ^`java.lang.String` @kind object;
  #L19fbd4.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.d` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/d;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19fbe8.  v6:= 1I;
  #L19fbea.  v5:= 0I;
  #L19fbec.  v1:= v9 + v10 @kind int;
  #L19fbf0.  v0:= v9;
  #L19fbf2.  if v0 >= v1 then goto L19fc12;
  #L19fbf6.  v2:= v7.`org.b.a.a.d.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19fbfa.  v3:= v8[v0] @kind byte;
  #L19fbfe.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L19fc04.  v2:= temp;
  #L19fc06.  if v2 != v6 then goto L19fc62;
  #L19fc0a.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L19fc0e.  v7.`org.b.a.a.d.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19fc12.  v0:= v7.`org.b.a.a.d.d` @type ^`byte`[] @kind object;
  #L19fc16.  v1:= v1 + -1;
  #L19fc1a.  v1:= v8[v1] @kind byte;
  #L19fc1e.  v0[v5]:= v1 @kind byte;
  #L19fc22.  v0:= v7.`org.b.a.a.d.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fc26.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19fc2a.  if v0 != v1 then goto L19fc5c;
  #L19fc2e.  v0:= v7.`org.b.a.a.d.c` @type ^`org.b.a.a.b.d` @kind object;
  #L19fc32.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/d;.c:()Z` @kind virtual;
  #L19fc38.  v0:= temp;
  #L19fc3a.  if v0 == 0 then goto L19fc5c;
  #L19fc3e.  call temp:= `b`(v7) @signature `Lorg/b/a/a/d;.b:()F` @kind virtual;
  #L19fc44.  v0:= temp;
  #L19fc46.  v1:= 1064514355I;
  #L19fc4c.  v0:= fcmpl(v0, v1);
  #L19fc50.  if v0 <= 0 then goto L19fc5c;
  #L19fc54.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fc58.  v7.`org.b.a.a.d.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19fc5c.  v0:= v7.`org.b.a.a.d.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fc60.  return v0 @kind object;
  #L19fc62.  v3:= 2I;
  #L19fc64.  if v2 != v3 then goto L19fc72;
  #L19fc68.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fc6c.  v7.`org.b.a.a.d.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19fc70.  goto L19fc12;
  #L19fc72.  if v2 != 0 then goto L19fca0;
  #L19fc76.  v2:= v7.`org.b.a.a.d.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19fc7a.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L19fc80.  v2:= temp;
  #L19fc82.  if v0 != v9 then goto L19fca6;
  #L19fc86.  v3:= v7.`org.b.a.a.d.d` @type ^`byte`[] @kind object;
  #L19fc8a.  v4:= v8[v9] @kind byte;
  #L19fc8e.  v3[v6]:= v4 @kind byte;
  #L19fc92.  v3:= v7.`org.b.a.a.d.c` @type ^`org.b.a.a.b.d` @kind object;
  #L19fc96.  v4:= v7.`org.b.a.a.d.d` @type ^`byte`[] @kind object;
  #L19fc9a.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/d;.a:([BII)V` @kind virtual;
  #L19fca0.  v0:= v0 + 1;
  #L19fca4.  goto L19fbf2;
  #L19fca6.  v3:= v7.`org.b.a.a.d.c` @type ^`org.b.a.a.b.d` @kind object;
  #L19fcaa.  v4:= v0 + -1;
  #L19fcae.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/d;.a:([BII)V` @kind virtual;
  #L19fcb4.  goto L19fca0;
}
procedure `float` `b`(`org.b.a.a.d` v1 @kind this) @signature `Lorg/b/a/a/d;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19fcc8.  v0:= v1.`org.b.a.a.d.c` @type ^`org.b.a.a.b.d` @kind object;
  #L19fccc.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/d;.a:()F` @kind virtual;
  #L19fcd2.  v0:= temp;
  #L19fcd4.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.d` v1 @kind this) @signature `Lorg/b/a/a/d;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19fce8.  v0:= v1.`org.b.a.a.d.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19fcec.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.d` v2 @kind this) @signature `Lorg/b/a/a/d;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19fd00.  v0:= v2.`org.b.a.a.d.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19fd04.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L19fd0a.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19fd0e.  v2.`org.b.a.a.d.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19fd12.  v0:= v2.`org.b.a.a.d.c` @type ^`org.b.a.a.b.d` @kind object;
  #L19fd16.  call `b`(v0) @signature `Lorg/b/a/a/b/d;.b:()V` @kind virtual;
  #L19fd1c.  v0:= v2.`org.b.a.a.d.d` @type ^`byte`[] @kind object;
  #L19fd20.  v1:= 0I;
  #L19fd22.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L19fd28.  return @kind void;
}

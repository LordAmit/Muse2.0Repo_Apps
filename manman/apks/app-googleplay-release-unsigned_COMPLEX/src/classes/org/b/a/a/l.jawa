record `org.b.a.a.l` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.l.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.l.b` @AccessFlag PRIVATE;
  `org.b.a.a.a.c` `org.b.a.a.l.c` @AccessFlag PRIVATE;
  `org.b.a.a.b.h` `org.b.a.a.l.d` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.l.e` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.l.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L195744.  v0:= new `org.b.a.a.d.l`;
  #L195748.  call `<init>`(v0) @signature `Lorg/b/a/a/d/l;.<init>:()V` @kind direct;
  #L19574e.  `@@org.b.a.a.l.f` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L195752.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.l` v2 @kind this) @signature `Lorg/b/a/a/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L195764.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L19576a.  v0:= new `org.b.a.a.d.b`;
  #L19576e.  v1:= `@@org.b.a.a.l.f` @type ^`org.b.a.a.d.m` @kind object;
  #L195772.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L195778.  v2.`org.b.a.a.l.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L19577c.  v0:= new `org.b.a.a.a.c`;
  #L195780.  call `<init>`(v0) @signature `Lorg/b/a/a/a/c;.<init>:()V` @kind direct;
  #L195786.  v2.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` := v0 @kind object;
  #L19578a.  v0:= new `org.b.a.a.b.h`;
  #L19578e.  call `<init>`(v0) @signature `Lorg/b/a/a/b/h;.<init>:()V` @kind direct;
  #L195794.  v2.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` := v0 @kind object;
  #L195798.  v0:= 2I;
  #L19579a.  v0:= new `byte`[v0];
  #L19579e.  v2.`org.b.a.a.l.e` @type ^`byte`[] := v0 @kind object;
  #L1957a2.  call `d`(v2) @signature `Lorg/b/a/a/l;.d:()V` @kind virtual;
  #L1957a8.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.l` v1 @kind this) @signature `Lorg/b/a/a/l;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1957bc.  v0:= `@@org.b.a.b.l` @type ^`java.lang.String` @kind object;
  #L1957c0.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.l` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lorg/b/a/a/l;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1957d4.  v7:= 1I;
  #L1957d6.  v6:= 0I;
  #L1957d8.  v1:= v10 + v11 @kind int;
  #L1957dc.  v0:= v10;
  #L1957de.  if v0 >= v1 then goto L1957fe;
  #L1957e2.  v2:= v8.`org.b.a.a.l.a` @type ^`org.b.a.a.d.b` @kind object;
  #L1957e6.  v3:= v9[v0] @kind byte;
  #L1957ea.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L1957f0.  v2:= temp;
  #L1957f2.  if v2 != v7 then goto L19584e;
  #L1957f6.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1957fa.  v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1957fe.  v0:= v8.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L195802.  v1:= v1 + -1;
  #L195806.  v1:= v9[v1] @kind byte;
  #L19580a.  v0[v6]:= v1 @kind byte;
  #L19580e.  v0:= v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` @kind object;
  #L195812.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L195816.  if v0 != v1 then goto L195848;
  #L19581a.  v0:= v8.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L19581e.  call temp:= `c`(v0) @signature `Lorg/b/a/a/a/c;.c:()Z` @kind virtual;
  #L195824.  v0:= temp;
  #L195826.  if v0 == 0 then goto L195848;
  #L19582a.  call temp:= `b`(v8) @signature `Lorg/b/a/a/l;.b:()F` @kind virtual;
  #L195830.  v0:= temp;
  #L195832.  v1:= 1064514355I;
  #L195838.  v0:= fcmpl(v0, v1);
  #L19583c.  if v0 <= 0 then goto L195848;
  #L195840.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L195844.  v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L195848.  v0:= v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19584c.  return v0 @kind object;
  #L19584e.  v3:= 2I;
  #L195850.  if v2 != v3 then goto L19585e;
  #L195854.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L195858.  v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19585c.  goto L1957fe;
  #L19585e.  if v2 != 0 then goto L19589e;
  #L195862.  v2:= v8.`org.b.a.a.l.a` @type ^`org.b.a.a.d.b` @kind object;
  #L195866.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L19586c.  v2:= temp;
  #L19586e.  if v0 != v10 then goto L1958a4;
  #L195872.  v3:= v8.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L195876.  v4:= v9[v10] @kind byte;
  #L19587a.  v3[v7]:= v4 @kind byte;
  #L19587e.  v3:= v8.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L195882.  v4:= v8.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L195886.  v5:= v2 - 2;
  #L19588a.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/a/c;.a:([BII)V` @kind virtual;
  #L195890.  v3:= v8.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` @kind object;
  #L195894.  v4:= v8.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L195898.  call `a`(v3, v4, v6, v2) @signature `Lorg/b/a/a/b/h;.a:([BII)V` @kind virtual;
  #L19589e.  v0:= v0 + 1;
  #L1958a2.  goto L1957de;
  #L1958a4.  v3:= v8.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L1958a8.  v4:= v0 + 1;
  #L1958ac.  v4:= v4 - v2 @kind int;
  #L1958ae.  call `a`(v3, v9, v4, v2) @signature `Lorg/b/a/a/a/c;.a:([BII)V` @kind virtual;
  #L1958b4.  v3:= v8.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` @kind object;
  #L1958b8.  v4:= v0 + -1;
  #L1958bc.  call `a`(v3, v9, v4, v2) @signature `Lorg/b/a/a/b/h;.a:([BII)V` @kind virtual;
  #L1958c2.  goto L19589e;
}
procedure `float` `b`(`org.b.a.a.l` v2 @kind this) @signature `Lorg/b/a/a/l;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1958d4.  v0:= v2.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L1958d8.  call temp:= `a`(v0) @signature `Lorg/b/a/a/a/c;.a:()F` @kind virtual;
  #L1958de.  v0:= temp;
  #L1958e0.  v1:= v2.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` @kind object;
  #L1958e4.  call temp:= `a`(v1) @signature `Lorg/b/a/a/b/h;.a:()F` @kind virtual;
  #L1958ea.  v1:= temp;
  #L1958ec.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L1958f2.  v0:= temp;
  #L1958f4.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.l` v1 @kind this) @signature `Lorg/b/a/a/l;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L195908.  v0:= v1.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19590c.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.l` v2 @kind this) @signature `Lorg/b/a/a/l;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L195920.  v0:= v2.`org.b.a.a.l.a` @type ^`org.b.a.a.d.b` @kind object;
  #L195924.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L19592a.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19592e.  v2.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L195932.  v0:= v2.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L195936.  call `b`(v0) @signature `Lorg/b/a/a/a/c;.b:()V` @kind virtual;
  #L19593c.  v0:= v2.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` @kind object;
  #L195940.  call `b`(v0) @signature `Lorg/b/a/a/b/h;.b:()V` @kind virtual;
  #L195946.  v0:= v2.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L19594a.  v1:= 0I;
  #L19594c.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L195952.  return @kind void;
}

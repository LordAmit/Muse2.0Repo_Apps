record `org.b.a.a.h` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `int` `org.b.a.a.h.a` @AccessFlag PRIVATE;
  `int` `org.b.a.a.h.b` @AccessFlag PRIVATE;
  `byte` `org.b.a.a.h.c` @AccessFlag PRIVATE;
  `byte` `org.b.a.a.h.d` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.a.h.e` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.a.h.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.a.h` v1 @kind this) @signature `Lorg/b/a/a/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L194ab8.  v0:= 0I;
  #L194aba.  call `<init>`(v1) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L194ac0.  v1.`org.b.a.a.h.e` @type ^`org.b.a.a.b` := v0 @kind object;
  #L194ac4.  v1.`org.b.a.a.h.f` @type ^`org.b.a.a.b` := v0 @kind object;
  #L194ac8.  call `d`(v1) @signature `Lorg/b/a/a/h;.d:()V` @kind virtual;
  #L194ace.  return @kind void;
}
procedure `boolean` `a`(`byte` v2 ) @signature `Lorg/b/a/a/h;.a:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;

  #L194ae0.  v0:= v2 ^& 255;
  #L194ae4.  v1:= 234I;
  #L194ae8.  if v0 == v1 then goto L194b0c;
  #L194aec.  v1:= 237I;
  #L194af0.  if v0 == v1 then goto L194b0c;
  #L194af4.  v1:= 239I;
  #L194af8.  if v0 == v1 then goto L194b0c;
  #L194afc.  v1:= 243I;
  #L194b00.  if v0 == v1 then goto L194b0c;
  #L194b04.  v1:= 245I;
  #L194b08.  if v0 != v1 then goto L194b10;
  #L194b0c.  v0:= 1I;
  #L194b0e.  return v0;
  #L194b10.  v0:= 0I;
  #L194b12.  goto L194b0e;
}
procedure `boolean` `b`(`byte` v2 ) @signature `Lorg/b/a/a/h;.b:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;

  #L194b24.  v0:= v2 ^& 255;
  #L194b28.  v1:= 235I;
  #L194b2c.  if v0 == v1 then goto L194b48;
  #L194b30.  v1:= 238I;
  #L194b34.  if v0 == v1 then goto L194b48;
  #L194b38.  v1:= 240I;
  #L194b3c.  if v0 == v1 then goto L194b48;
  #L194b40.  v1:= 244I;
  #L194b44.  if v0 != v1 then goto L194b4c;
  #L194b48.  v0:= 1I;
  #L194b4a.  return v0;
  #L194b4c.  v0:= 0I;
  #L194b4e.  goto L194b4a;
}
procedure `java.lang.String` `a`(`org.b.a.a.h` v3 @kind this) @signature `Lorg/b/a/a/h;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L194b60.  v0:= v3.`org.b.a.a.h.a` @type ^`int`;
  #L194b64.  v1:= v3.`org.b.a.a.h.b` @type ^`int`;
  #L194b68.  v0:= v0 - v1 @kind int;
  #L194b6a.  v1:= 5I;
  #L194b6c.  if v0 < v1 then goto L194b76;
  #L194b70.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L194b74.  return v0 @kind object;
  #L194b76.  v1:= -5I;
  #L194b78.  if v0 > v1 then goto L194b82;
  #L194b7c.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L194b80.  goto L194b74;
  #L194b82.  v1:= v3.`org.b.a.a.h.e` @type ^`org.b.a.a.b` @kind object;
  #L194b86.  call temp:= `b`(v1) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L194b8c.  v1:= temp;
  #L194b8e.  v2:= v3.`org.b.a.a.h.f` @type ^`org.b.a.a.b` @kind object;
  #L194b92.  call temp:= `b`(v2) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L194b98.  v2:= temp;
  #L194b9a.  v1:= v1 - v2 @kind float;
  #L194b9c.  v2:= 1008981770I;
  #L194ba2.  v2:= fcmpl(v1, v2);
  #L194ba6.  if v2 <= 0 then goto L194bb0;
  #L194baa.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L194bae.  goto L194b74;
  #L194bb0.  v2:= -1138501878I;
  #L194bb6.  v1:= fcmpg(v1, v2);
  #L194bba.  if v1 >= 0 then goto L194bc4;
  #L194bbe.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L194bc2.  goto L194b74;
  #L194bc4.  if v0 >= 0 then goto L194bce;
  #L194bc8.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L194bcc.  goto L194b74;
  #L194bce.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L194bd2.  goto L194b74;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.h` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/b/a/a/h;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L194be4.  v3:= 32I;
  #L194be8.  call temp:= `c`(v4) @signature `Lorg/b/a/a/h;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L194bee.  v0:= temp @kind object;
  #L194bf0.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L194bf4.  if v0 != v1 then goto L194bfe;
  #L194bf8.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L194bfc.  return v0 @kind object;
  #L194bfe.  v0:= v6 + v7 @kind int;
  #L194c02.  if v6 >= v0 then goto L194c8c;
  #L194c06.  v1:= v5[v6] @kind byte;
  #L194c0a.  if v1 != v3 then goto L194c62;
  #L194c0e.  v2:= v4.`org.b.a.a.h.d` @type ^`byte` @kind byte;
  #L194c12.  if v2 == v3 then goto L194c32;
  #L194c16.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L194c1a.  call temp:= `a`(v2) @signature `Lorg/b/a/a/h;.a:(B)Z` @kind static;
  #L194c20.  v2:= temp;
  #L194c22.  if v2 == 0 then goto L194c44;
  #L194c26.  v2:= v4.`org.b.a.a.h.a` @type ^`int`;
  #L194c2a.  v2:= v2 + 1;
  #L194c2e.  v4.`org.b.a.a.h.a` @type ^`int` := v2;
  #L194c32.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L194c36.  v4.`org.b.a.a.h.d` @type ^`byte` := v2 @kind byte;
  #L194c3a.  v4.`org.b.a.a.h.c` @type ^`byte` := v1 @kind byte;
  #L194c3e.  v6:= v6 + 1;
  #L194c42.  goto L194c02;
  #L194c44.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L194c48.  call temp:= `b`(v2) @signature `Lorg/b/a/a/h;.b:(B)Z` @kind static;
  #L194c4e.  v2:= temp;
  #L194c50.  if v2 == 0 then goto L194c32;
  #L194c54.  v2:= v4.`org.b.a.a.h.b` @type ^`int`;
  #L194c58.  v2:= v2 + 1;
  #L194c5c.  v4.`org.b.a.a.h.b` @type ^`int` := v2;
  #L194c60.  goto L194c32;
  #L194c62.  v2:= v4.`org.b.a.a.h.d` @type ^`byte` @kind byte;
  #L194c66.  if v2 != v3 then goto L194c32;
  #L194c6a.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L194c6e.  call temp:= `a`(v2) @signature `Lorg/b/a/a/h;.a:(B)Z` @kind static;
  #L194c74.  v2:= temp;
  #L194c76.  if v2 == 0 then goto L194c32;
  #L194c7a.  if v1 == v3 then goto L194c32;
  #L194c7e.  v2:= v4.`org.b.a.a.h.b` @type ^`int`;
  #L194c82.  v2:= v2 + 1;
  #L194c86.  v4.`org.b.a.a.h.b` @type ^`int` := v2;
  #L194c8a.  goto L194c32;
  #L194c8c.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L194c90.  goto L194bfc;
}
procedure `void` `a`(`org.b.a.a.h` v0 @kind this, `org.b.a.a.b` v1 @kind object, `org.b.a.a.b` v2 @kind object) @signature `Lorg/b/a/a/h;.a:(Lorg/b/a/a/b;Lorg/b/a/a/b;)V` @AccessFlag PUBLIC {
    temp;

  #L194ca4.  v0.`org.b.a.a.h.e` @type ^`org.b.a.a.b` := v1 @kind object;
  #L194ca8.  v0.`org.b.a.a.h.f` @type ^`org.b.a.a.b` := v2 @kind object;
  #L194cac.  return @kind void;
}
procedure `float` `b`(`org.b.a.a.h` v1 @kind this) @signature `Lorg/b/a/a/h;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L194cc0.  v0:= 0I;
  #L194cc2.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.h` v2 @kind this) @signature `Lorg/b/a/a/h;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L194cd4.  v0:= v2.`org.b.a.a.h.e` @type ^`org.b.a.a.b` @kind object;
  #L194cd8.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L194cde.  v0:= temp @kind object;
  #L194ce0.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L194ce4.  if v0 != v1 then goto L194d02;
  #L194ce8.  v0:= v2.`org.b.a.a.h.f` @type ^`org.b.a.a.b` @kind object;
  #L194cec.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L194cf2.  v0:= temp @kind object;
  #L194cf4.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L194cf8.  if v0 != v1 then goto L194d02;
  #L194cfc.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L194d00.  return v0 @kind object;
  #L194d02.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L194d06.  goto L194d00;
}
procedure `void` `d`(`org.b.a.a.h` v2 @kind this) @signature `Lorg/b/a/a/h;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L194d18.  v1:= 32I;
  #L194d1c.  v0:= 0I;
  #L194d1e.  v2.`org.b.a.a.h.a` @type ^`int` := v0;
  #L194d22.  v2.`org.b.a.a.h.b` @type ^`int` := v0;
  #L194d26.  v2.`org.b.a.a.h.c` @type ^`byte` := v1 @kind byte;
  #L194d2a.  v2.`org.b.a.a.h.d` @type ^`byte` := v1 @kind byte;
  #L194d2e.  return @kind void;
}

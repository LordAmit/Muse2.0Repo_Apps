record `org.a.a.a.a.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.InputStream` @kind class {
  `long` `org.a.a.a.a.a.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.a.a.a.a.a` v2 @kind this) @signature `Lorg/a/a/a/a/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1725f4.  call `<init>`(v2) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L1725fa.  v0:= 0L;
  #L1725fe.  v2.`org.a.a.a.a.a.a` @type ^`long` := v0 @kind wide;
  #L172602.  return @kind void;
}
procedure `void` `a`(`org.a.a.a.a.a` v2 @kind this, `int` v3 ) @signature `Lorg/a/a/a/a/a;.a:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L172614.  v0:= (`long`) v3 @kind i2l;
  #L172616.  call `a`(v2, v0) @signature `Lorg/a/a/a/a/a;.a:(J)V` @kind virtual;
  #L17261c.  return @kind void;
}
procedure `void` `a`(`org.a.a.a.a.a` v3 @kind this, `long` v4 ) @signature `Lorg/a/a/a/a/a;.a:(J)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L172630.  v0:= -1L;
  #L172634.  v0:= lcmp(v4, v0);
  #L172638.  if v0 == 0 then goto L172646;
  #L17263c.  v0:= v3.`org.a.a.a.a.a.a` @type ^`long` @kind wide;
  #L172640.  v0:= v0 + v4 @kind long;
  #L172642.  v3.`org.a.a.a.a.a.a` @type ^`long` := v0 @kind wide;
  #L172646.  return @kind void;
}

record `a.x$a` @kind class @AccessFlag PUBLIC {
  `a.r` `a.x$a.a` @AccessFlag ;
  `java.lang.String` `a.x$a.b` @AccessFlag ;
  `a.q$a` `a.x$a.c` @AccessFlag ;
  `a.y` `a.x$a.d` @AccessFlag ;
  `java.lang.Object` `a.x$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`a.x$a` v1 @kind this) @signature `La/x$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L08ba5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08ba62.  v0:= "GET" @kind object;
  #L08ba66.  v1.`a.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08ba6a.  v0:= new `a.q$a`;
  #L08ba6e.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L08ba74.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08ba78.  return @kind void;
}
procedure `void` `<init>`(`a.x$a` v1 @kind this, `a.x` v2 @kind object) @signature `La/x$a;.<init>:(La/x;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L08ba8c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08ba92.  v0:= v2.`a.x.a` @type ^`a.r` @kind object;
  #L08ba96.  v1.`a.x$a.a` @type ^`a.r` := v0 @kind object;
  #L08ba9a.  v0:= v2.`a.x.b` @type ^`java.lang.String` @kind object;
  #L08ba9e.  v1.`a.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08baa2.  v0:= v2.`a.x.d` @type ^`a.y` @kind object;
  #L08baa6.  v1.`a.x$a.d` @type ^`a.y` := v0 @kind object;
  #L08baaa.  v0:= v2.`a.x.e` @type ^`java.lang.Object` @kind object;
  #L08baae.  v1.`a.x$a.e` @type ^`java.lang.Object` := v0 @kind object;
  #L08bab2.  v0:= v2.`a.x.c` @type ^`a.q` @kind object;
  #L08bab6.  call temp:= `b`(v0) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L08babc.  v0:= temp @kind object;
  #L08babe.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08bac2.  return @kind void;
}
procedure `a.x$a` `a`(`a.x$a` v1 @kind this, `a.q` v2 @kind object) @signature `La/x$a;.a:(La/q;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bad4.  call temp:= `b`(v2) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L08bada.  v0:= temp @kind object;
  #L08badc.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08bae0.  return v1 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v2 @kind this, `a.r` v3 @kind object) @signature `La/x$a;.a:(La/r;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08baf4.  if v3 != 0 then goto L08bb08;
  #L08baf8.  v0:= new `java.lang.NullPointerException`;
  #L08bafc.  v1:= "url == null" @kind object;
  #L08bb00.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08bb06.  throw v0;
  #L08bb08.  v2.`a.x$a.a` @type ^`a.r` := v3 @kind object;
  #L08bb0c.  return v2 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L08bb20.  v6:= 4I;
  #L08bb22.  v5:= 3I;
  #L08bb24.  v1:= 1I;
  #L08bb26.  v2:= 0I;
  #L08bb28.  if v8 != 0 then goto L08bb3c;
  #L08bb2c.  v0:= new `java.lang.NullPointerException`;
  #L08bb30.  v1:= "url == null" @kind object;
  #L08bb34.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08bb3a.  throw v0;
  #L08bb3c.  v3:= "ws:" @kind object;
  #L08bb40.  v0:= v8 @kind object;
  #L08bb42.  v4:= v2;
  #L08bb44.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08bb4a.  v0:= temp;
  #L08bb4c.  if v0 == 0 then goto L08bbbc;
  #L08bb50.  v0:= new `java.lang.StringBuilder`;
  #L08bb54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08bb5a.  v1:= "http:" @kind object;
  #L08bb5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bb64.  v0:= temp @kind object;
  #L08bb66.  call temp:= `substring`(v8, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08bb6c.  v1:= temp @kind object;
  #L08bb6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bb74.  v0:= temp @kind object;
  #L08bb76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08bb7c.  v8:= temp @kind object;
  #L08bb7e.  call temp:= `e`(v8) @signature `La/r;.e:(Ljava/lang/String;)La/r;` @kind static;
  #L08bb84.  v0:= temp @kind object;
  #L08bb86.  if v0 != 0 then goto L08bc02;
  #L08bb8a.  v0:= new `java.lang.IllegalArgumentException`;
  #L08bb8e.  v1:= new `java.lang.StringBuilder`;
  #L08bb92.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08bb98.  v2:= "unexpected url: " @kind object;
  #L08bb9c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bba2.  v1:= temp @kind object;
  #L08bba4.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bbaa.  v1:= temp @kind object;
  #L08bbac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08bbb2.  v1:= temp @kind object;
  #L08bbb4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08bbba.  throw v0;
  #L08bbbc.  v3:= "wss:" @kind object;
  #L08bbc0.  v0:= v8 @kind object;
  #L08bbc2.  v4:= v2;
  #L08bbc4.  v5:= v6;
  #L08bbc6.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08bbcc.  v0:= temp;
  #L08bbce.  if v0 == 0 then goto L08bb7e;
  #L08bbd2.  v0:= new `java.lang.StringBuilder`;
  #L08bbd6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08bbdc.  v1:= "https:" @kind object;
  #L08bbe0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bbe6.  v0:= temp @kind object;
  #L08bbe8.  call temp:= `substring`(v8, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08bbee.  v1:= temp @kind object;
  #L08bbf0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bbf6.  v0:= temp @kind object;
  #L08bbf8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08bbfe.  v8:= temp @kind object;
  #L08bc00.  goto L08bb7e;
  #L08bc02.  call temp:= `a`(v7, v0) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L08bc08.  v0:= temp @kind object;
  #L08bc0a.  return v0 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v3 @kind this, `java.lang.String` v4 @kind object, `a.y` v5 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08bc1c.  if v4 != 0 then goto L08bc30;
  #L08bc20.  v0:= new `java.lang.NullPointerException`;
  #L08bc24.  v1:= "method == null" @kind object;
  #L08bc28.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08bc2e.  throw v0;
  #L08bc30.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08bc36.  v0:= temp;
  #L08bc38.  if v0 != 0 then goto L08bc4c;
  #L08bc3c.  v0:= new `java.lang.IllegalArgumentException`;
  #L08bc40.  v1:= "method.length() == 0" @kind object;
  #L08bc44.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08bc4a.  throw v0;
  #L08bc4c.  if v5 == 0 then goto L08bc9a;
  #L08bc50.  call temp:= `c`(v4) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L08bc56.  v0:= temp;
  #L08bc58.  if v0 != 0 then goto L08bc9a;
  #L08bc5c.  v0:= new `java.lang.IllegalArgumentException`;
  #L08bc60.  v1:= new `java.lang.StringBuilder`;
  #L08bc64.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08bc6a.  v2:= "method " @kind object;
  #L08bc6e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bc74.  v1:= temp @kind object;
  #L08bc76.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bc7c.  v1:= temp @kind object;
  #L08bc7e.  v2:= " must not have a request body." @kind object;
  #L08bc82.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bc88.  v1:= temp @kind object;
  #L08bc8a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08bc90.  v1:= temp @kind object;
  #L08bc92.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08bc98.  throw v0;
  #L08bc9a.  if v5 != 0 then goto L08bce8;
  #L08bc9e.  call temp:= `b`(v4) @signature `La/a/c/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L08bca4.  v0:= temp;
  #L08bca6.  if v0 == 0 then goto L08bce8;
  #L08bcaa.  v0:= new `java.lang.IllegalArgumentException`;
  #L08bcae.  v1:= new `java.lang.StringBuilder`;
  #L08bcb2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08bcb8.  v2:= "method " @kind object;
  #L08bcbc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bcc2.  v1:= temp @kind object;
  #L08bcc4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bcca.  v1:= temp @kind object;
  #L08bccc.  v2:= " must have a request body." @kind object;
  #L08bcd0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bcd6.  v1:= temp @kind object;
  #L08bcd8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08bcde.  v1:= temp @kind object;
  #L08bce0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08bce6.  throw v0;
  #L08bce8.  v3.`a.x$a.b` @type ^`java.lang.String` := v4 @kind object;
  #L08bcec.  v3.`a.x$a.d` @type ^`a.y` := v5 @kind object;
  #L08bcf0.  return v3 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bd04.  v0:= v1.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L08bd08.  call temp:= `c`(v0, v2, v3) @signature `La/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08bd0e.  return v1 @kind object;
}
procedure `a.x` `a`(`a.x$a` v2 @kind this) @signature `La/x$a;.a:()La/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08bd20.  v0:= v2.`a.x$a.a` @type ^`a.r` @kind object;
  #L08bd24.  if v0 != 0 then goto L08bd38;
  #L08bd28.  v0:= new `java.lang.IllegalStateException`;
  #L08bd2c.  v1:= "url == null" @kind object;
  #L08bd30.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08bd36.  throw v0;
  #L08bd38.  v0:= new `a.x`;
  #L08bd3c.  call `<init>`(v0, v2) @signature `La/x;.<init>:(La/x$a;)V` @kind direct;
  #L08bd42.  return v0 @kind object;
}
procedure `a.x$a` `b`(`a.x$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bd54.  v0:= v1.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L08bd58.  call temp:= `b`(v0, v2) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08bd5e.  return v1 @kind object;
}

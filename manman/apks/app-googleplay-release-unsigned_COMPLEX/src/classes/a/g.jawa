record `a.g` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `a.g.b` @AccessFlag PRIVATE_FINAL;
  `a.a.h.b` `a.g.c` @AccessFlag PRIVATE_FINAL;
}
global `a.g` `@@a.g.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L085c88.  v0:= new `a.g$a`;
  #L085c8c.  call `<init>`(v0) @signature `La/g$a;.<init>:()V` @kind direct;
  #L085c92.  call temp:= `a`(v0) @signature `La/g$a;.a:()La/g;` @kind virtual;
  #L085c98.  v0:= temp @kind object;
  #L085c9a.  `@@a.g.a` @type ^`a.g` := v0 @kind object;
  #L085c9e.  return @kind void;
}
procedure `void` `<init>`(`a.g` v0 @kind this, `java.util.Set` v1 @kind object, `a.a.h.b` v2 @kind object) @signature `La/g;.<init>:(Ljava/util/Set;La/a/h/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L085cb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L085cb6.  v0.`a.g.b` @type ^`java.util.Set` := v1 @kind object;
  #L085cba.  v0.`a.g.c` @type ^`a.a.h.b` := v2 @kind object;
  #L085cbe.  return @kind void;
}
procedure `b.f` `a`(`java.security.cert.X509Certificate` v1 @kind object) @signature `La/g;.a:(Ljava/security/cert/X509Certificate;)Lb/f;` @AccessFlag STATIC {
    temp;
    v0;

  #L085cd0.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L085cd6.  v0:= temp @kind object;
  #L085cd8.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L085cde.  v0:= temp @kind object;
  #L085ce0.  call temp:= `a`(v0) @signature `Lb/f;.a:([B)Lb/f;` @kind static;
  #L085ce6.  v0:= temp @kind object;
  #L085ce8.  call temp:= `c`(v0) @signature `Lb/f;.c:()Lb/f;` @kind virtual;
  #L085cee.  v0:= temp @kind object;
  #L085cf0.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.security.cert.Certificate` v2 @kind object) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L085d04.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L085d08.  if v0 != 0 then goto L085d1c;
  #L085d0c.  v0:= new `java.lang.IllegalArgumentException`;
  #L085d10.  v1:= "Certificate pinning requires X509 certificates" @kind object;
  #L085d14.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L085d1a.  throw v0;
  #L085d1c.  v0:= new `java.lang.StringBuilder`;
  #L085d20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L085d26.  v1:= "sha256/" @kind object;
  #L085d2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085d30.  v0:= temp @kind object;
  #L085d32.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L085d36.  call temp:= `b`(v2) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L085d3c.  v1:= temp @kind object;
  #L085d3e.  call temp:= `b`(v1) @signature `Lb/f;.b:()Ljava/lang/String;` @kind virtual;
  #L085d44.  v1:= temp @kind object;
  #L085d46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085d4c.  v0:= temp @kind object;
  #L085d4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L085d54.  v0:= temp @kind object;
  #L085d56.  return v0 @kind object;
}
procedure `b.f` `b`(`java.security.cert.X509Certificate` v1 @kind object) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @AccessFlag STATIC {
    temp;
    v0;

  #L085d68.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L085d6e.  v0:= temp @kind object;
  #L085d70.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L085d76.  v0:= temp @kind object;
  #L085d78.  call temp:= `a`(v0) @signature `Lb/f;.a:([B)Lb/f;` @kind static;
  #L085d7e.  v0:= temp @kind object;
  #L085d80.  call temp:= `d`(v0) @signature `Lb/f;.d:()Lb/f;` @kind virtual;
  #L085d86.  v0:= temp @kind object;
  #L085d88.  return v0 @kind object;
}
procedure `a.g` `a`(`a.g` v2 @kind this, `a.a.h.b` v3 @kind object) @signature `La/g;.a:(La/a/h/b;)La/g;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L085d9c.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L085da0.  call temp:= `a`(v0, v3) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L085da6.  v0:= temp;
  #L085da8.  if v0 == 0 then goto L085dae;
  #L085dac.  return v2 @kind object;
  #L085dae.  v0:= new `a.g`;
  #L085db2.  v1:= v2.`a.g.b` @type ^`java.util.Set` @kind object;
  #L085db6.  call `<init>`(v0, v1, v3) @signature `La/g;.<init>:(Ljava/util/Set;La/a/h/b;)V` @kind direct;
  #L085dbc.  v2:= v0 @kind object;
  #L085dbe.  goto L085dac;
}
procedure `java.util.List` `a`(`a.g` v4 @kind this, `java.lang.String` v5 @kind object) @signature `La/g;.a:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L085dd0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L085dd6.  v1:= temp @kind object;
  #L085dd8.  v0:= v4.`a.g.b` @type ^`java.util.Set` @kind object;
  #L085ddc.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L085de2.  v2:= temp @kind object;
  #L085de4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L085dea.  v0:= temp;
  #L085dec.  if v0 == 0 then goto L085e26;
  #L085df0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L085df6.  v0:= temp @kind object;
  #L085df8.  v0:= (`a.g$b`) v0 @kind object;
  #L085dfc.  call temp:= `a`(v0, v5) @signature `La/g$b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L085e02.  v3:= temp;
  #L085e04.  if v3 == 0 then goto L085de4;
  #L085e08.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L085e0e.  v3:= temp;
  #L085e10.  if v3 == 0 then goto L085e1e;
  #L085e14.  v1:= new `java.util.ArrayList`;
  #L085e18.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L085e1e.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L085e24.  goto L085de4;
  #L085e26.  return v1 @kind object;
}
procedure `void` `a`(`a.g` v13 @kind this, `java.lang.String` v14 @kind object, `java.util.List` v15 @kind object) @signature `La/g;.a:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L085e38.  v6:= 0I;
  #L085e3a.  v4:= 0I;
  #L085e3c.  call temp:= `a`(v13, v14) @signature `La/g;.a:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L085e42.  v8:= temp @kind object;
  #L085e44.  call temp:= `isEmpty`(v8) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L085e4a.  v0:= temp;
  #L085e4c.  if v0 == 0 then goto L085e52;
  #L085e50.  return @kind void;
  #L085e52.  v0:= v13.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L085e56.  if v0 == 0 then goto L085e66;
  #L085e5a.  v0:= v13.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L085e5e.  call temp:= `a`(v0, v15, v14) @signature `La/a/h/b;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L085e64.  v15:= temp @kind object;
  #L085e66.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L085e6c.  v9:= temp;
  #L085e6e.  v7:= v4;
  #L085e70.  if v7 >= v9 then goto L085f24;
  #L085e74.  call temp:= `get`(v15, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L085e7a.  v0:= temp @kind object;
  #L085e7c.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L085e80.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L085e86.  v10:= temp;
  #L085e88.  v5:= v4;
  #L085e8a.  v2:= v6 @kind object;
  #L085e8c.  v3:= v6 @kind object;
  #L085e8e.  if v5 >= v10 then goto L085f1c;
  #L085e92.  call temp:= `get`(v8, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L085e98.  v1:= temp @kind object;
  #L085e9a.  v1:= (`a.g$b`) v1 @kind object;
  #L085e9e.  v11:= v1.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L085ea2.  v12:= "sha256/" @kind object;
  #L085ea6.  call temp:= `equals`(v11, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085eac.  v11:= temp;
  #L085eae.  if v11 == 0 then goto L085ede;
  #L085eb2.  if v2 != 0 then goto L085ebe;
  #L085eb6.  call temp:= `b`(v0) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L085ebc.  v2:= temp @kind object;
  #L085ebe.  v1:= v1.`a.g$b.d` @type ^`b.f` @kind object;
  #L085ec2.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085ec8.  v1:= temp;
  #L085eca.  if v1 != 0 then goto L085e50;
  #L085ece.  v1:= v2 @kind object;
  #L085ed0.  v2:= v3 @kind object;
  #L085ed2.  v3:= v5 + 1;
  #L085ed6.  v5:= v3;
  #L085ed8.  v3:= v2 @kind object;
  #L085eda.  v2:= v1 @kind object;
  #L085edc.  goto L085e8e;
  #L085ede.  v11:= v1.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L085ee2.  v12:= "sha1/" @kind object;
  #L085ee6.  call temp:= `equals`(v11, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085eec.  v11:= temp;
  #L085eee.  if v11 == 0 then goto L085f10;
  #L085ef2.  if v3 != 0 then goto L085efe;
  #L085ef6.  call temp:= `a`(v0) @signature `La/g;.a:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L085efc.  v3:= temp @kind object;
  #L085efe.  v1:= v1.`a.g$b.d` @type ^`b.f` @kind object;
  #L085f02.  call temp:= `equals`(v1, v3) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085f08.  v1:= temp;
  #L085f0a.  if v1 == 0 then goto L085ece;
  #L085f0e.  goto L085e50;
  #L085f10.  v0:= new `java.lang.AssertionError`;
  #L085f14.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L085f1a.  throw v0;
  #L085f1c.  v0:= v7 + 1;
  #L085f20.  v7:= v0;
  #L085f22.  goto L085e70;
  #L085f24.  v0:= new `java.lang.StringBuilder`;
  #L085f28.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L085f2e.  v1:= "Certificate pinning failure!" @kind object;
  #L085f32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085f38.  v0:= temp @kind object;
  #L085f3a.  v1:= "\n  Peer certificate chain:" @kind object;
  #L085f3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085f44.  v2:= temp @kind object;
  #L085f46.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L085f4c.  v3:= temp;
  #L085f4e.  v1:= v4;
  #L085f50.  if v1 >= v3 then goto L085fa6;
  #L085f54.  call temp:= `get`(v15, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L085f5a.  v0:= temp @kind object;
  #L085f5c.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L085f60.  v5:= "\n    " @kind object;
  #L085f64.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085f6a.  v5:= temp @kind object;
  #L085f6c.  call temp:= `a`(v0) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L085f72.  v6:= temp @kind object;
  #L085f74.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085f7a.  v5:= temp @kind object;
  #L085f7c.  v6:= ": " @kind object;
  #L085f80.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085f86.  v5:= temp @kind object;
  #L085f88.  call temp:= `getSubjectDN`(v0) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L085f8e.  v0:= temp @kind object;
  #L085f90.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L085f96.  v0:= temp @kind object;
  #L085f98.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085f9e.  v0:= v1 + 1;
  #L085fa2.  v1:= v0;
  #L085fa4.  goto L085f50;
  #L085fa6.  v0:= "\n  Pinned certificates for " @kind object;
  #L085faa.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085fb0.  v0:= temp @kind object;
  #L085fb2.  call temp:= `append`(v0, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085fb8.  v0:= temp @kind object;
  #L085fba.  v1:= ":" @kind object;
  #L085fbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085fc4.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L085fca.  v3:= temp;
  #L085fcc.  v1:= v4;
  #L085fce.  if v1 >= v3 then goto L085ff8;
  #L085fd2.  call temp:= `get`(v8, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L085fd8.  v0:= temp @kind object;
  #L085fda.  v0:= (`a.g$b`) v0 @kind object;
  #L085fde.  v4:= "\n    " @kind object;
  #L085fe2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085fe8.  v4:= temp @kind object;
  #L085fea.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085ff0.  v0:= v1 + 1;
  #L085ff4.  v1:= v0;
  #L085ff6.  goto L085fce;
  #L085ff8.  v0:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L085ffc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L086002.  v1:= temp @kind object;
  #L086004.  call `<init>`(v0, v1) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08600a.  throw v0;
}
procedure `boolean` `equals`(`a.g` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08601c.  v1:= 1I;
  #L08601e.  if v4 != v3 then goto L086024;
  #L086022.  return v1;
  #L086024.  v0:= instanceof @variable v4 @type ^`a.g` @kind boolean;
  #L086028.  if v0 == 0 then goto L086064;
  #L08602c.  v2:= v3.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086030.  v0:= v4 @kind object;
  #L086032.  v0:= (`a.g`) v0 @kind object;
  #L086036.  v0:= v0.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08603a.  call temp:= `a`(v2, v0) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L086040.  v0:= temp;
  #L086042.  if v0 == 0 then goto L086064;
  #L086046.  v0:= v3.`a.g.b` @type ^`java.util.Set` @kind object;
  #L08604a.  v4:= (`a.g`) v4 @kind object;
  #L08604e.  v2:= v4.`a.g.b` @type ^`java.util.Set` @kind object;
  #L086052.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L086058.  v0:= temp;
  #L08605a.  if v0 == 0 then goto L086064;
  #L08605e.  v0:= v1;
  #L086060.  v1:= v0;
  #L086062.  goto L086022;
  #L086064.  v0:= 0I;
  #L086066.  goto L086060;
}
procedure `int` `hashCode`(`a.g` v2 @kind this) @signature `La/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L086078.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08607c.  if v0 == 0 then goto L0860a0;
  #L086080.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L086084.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L08608a.  v0:= temp;
  #L08608c.  v0:= v0 * 31;
  #L086090.  v1:= v2.`a.g.b` @type ^`java.util.Set` @kind object;
  #L086094.  call temp:= `hashCode`(v1) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L08609a.  v1:= temp;
  #L08609c.  v0:= v0 + v1 @kind int;
  #L08609e.  return v0;
  #L0860a0.  v0:= 0I;
  #L0860a2.  goto L08608c;
}

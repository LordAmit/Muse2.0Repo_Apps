record `a.x` @kind class @AccessFlag PUBLIC_FINAL {
  `a.r` `a.x.a` @AccessFlag FINAL;
  `java.lang.String` `a.x.b` @AccessFlag FINAL;
  `a.q` `a.x.c` @AccessFlag FINAL;
  `a.y` `a.x.d` @AccessFlag FINAL;
  `java.lang.Object` `a.x.e` @AccessFlag FINAL;
  `a.d` `a.x.f` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`a.x` v1 @kind this, `a.x$a` v2 @kind object) @signature `La/x;.<init>:(La/x$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L08bd70.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08bd76.  v0:= v2.`a.x$a.a` @type ^`a.r` @kind object;
  #L08bd7a.  v1.`a.x.a` @type ^`a.r` := v0 @kind object;
  #L08bd7e.  v0:= v2.`a.x$a.b` @type ^`java.lang.String` @kind object;
  #L08bd82.  v1.`a.x.b` @type ^`java.lang.String` := v0 @kind object;
  #L08bd86.  v0:= v2.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L08bd8a.  call temp:= `a`(v0) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L08bd90.  v0:= temp @kind object;
  #L08bd92.  v1.`a.x.c` @type ^`a.q` := v0 @kind object;
  #L08bd96.  v0:= v2.`a.x$a.d` @type ^`a.y` @kind object;
  #L08bd9a.  v1.`a.x.d` @type ^`a.y` := v0 @kind object;
  #L08bd9e.  v0:= v2.`a.x$a.e` @type ^`java.lang.Object` @kind object;
  #L08bda2.  if v0 == 0 then goto L08bdb0;
  #L08bda6.  v0:= v2.`a.x$a.e` @type ^`java.lang.Object` @kind object;
  #L08bdaa.  v1.`a.x.e` @type ^`java.lang.Object` := v0 @kind object;
  #L08bdae.  return @kind void;
  #L08bdb0.  v0:= v1 @kind object;
  #L08bdb2.  goto L08bdaa;
}
procedure `a.r` `a`(`a.x` v1 @kind this) @signature `La/x;.a:()La/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bdc4.  v0:= v1.`a.x.a` @type ^`a.r` @kind object;
  #L08bdc8.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.x` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bddc.  v0:= v1.`a.x.c` @type ^`a.q` @kind object;
  #L08bde0.  call temp:= `a`(v0, v2) @signature `La/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L08bde6.  v0:= temp @kind object;
  #L08bde8.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`a.x` v1 @kind this) @signature `La/x;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bdfc.  v0:= v1.`a.x.b` @type ^`java.lang.String` @kind object;
  #L08be00.  return v0 @kind object;
}
procedure `a.q` `c`(`a.x` v1 @kind this) @signature `La/x;.c:()La/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08be14.  v0:= v1.`a.x.c` @type ^`a.q` @kind object;
  #L08be18.  return v0 @kind object;
}
procedure `a.y` `d`(`a.x` v1 @kind this) @signature `La/x;.d:()La/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08be2c.  v0:= v1.`a.x.d` @type ^`a.y` @kind object;
  #L08be30.  return v0 @kind object;
}
procedure `a.x$a` `e`(`a.x` v1 @kind this) @signature `La/x;.e:()La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08be44.  v0:= new `a.x$a`;
  #L08be48.  call `<init>`(v0, v1) @signature `La/x$a;.<init>:(La/x;)V` @kind direct;
  #L08be4e.  return v0 @kind object;
}
procedure `a.d` `f`(`a.x` v1 @kind this) @signature `La/x;.f:()La/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08be60.  v0:= v1.`a.x.f` @type ^`a.d` @kind object;
  #L08be64.  if v0 == 0 then goto L08be6a;
  #L08be68.  return v0 @kind object;
  #L08be6a.  v0:= v1.`a.x.c` @type ^`a.q` @kind object;
  #L08be6e.  call temp:= `a`(v0) @signature `La/d;.a:(La/q;)La/d;` @kind static;
  #L08be74.  v0:= temp @kind object;
  #L08be76.  v1.`a.x.f` @type ^`a.d` := v0 @kind object;
  #L08be7a.  goto L08be68;
}
procedure `boolean` `g`(`a.x` v1 @kind this) @signature `La/x;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08be8c.  v0:= v1.`a.x.a` @type ^`a.r` @kind object;
  #L08be90.  call temp:= `c`(v0) @signature `La/r;.c:()Z` @kind virtual;
  #L08be96.  v0:= temp;
  #L08be98.  return v0;
}
procedure `java.lang.String` `toString`(`a.x` v2 @kind this) @signature `La/x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08beac.  v0:= new `java.lang.StringBuilder`;
  #L08beb0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08beb6.  v1:= "Request{method=" @kind object;
  #L08beba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bec0.  v0:= temp @kind object;
  #L08bec2.  v1:= v2.`a.x.b` @type ^`java.lang.String` @kind object;
  #L08bec6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08becc.  v0:= temp @kind object;
  #L08bece.  v1:= ", url=" @kind object;
  #L08bed2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bed8.  v0:= temp @kind object;
  #L08beda.  v1:= v2.`a.x.a` @type ^`a.r` @kind object;
  #L08bede.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bee4.  v0:= temp @kind object;
  #L08bee6.  v1:= ", tag=" @kind object;
  #L08beea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bef0.  v1:= temp @kind object;
  #L08bef2.  v0:= v2.`a.x.e` @type ^`java.lang.Object` @kind object;
  #L08bef6.  if v0 == v2 then goto L08bf1c;
  #L08befa.  v0:= v2.`a.x.e` @type ^`java.lang.Object` @kind object;
  #L08befe.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bf04.  v0:= temp @kind object;
  #L08bf06.  v1:= 125I;
  #L08bf0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08bf10.  v0:= temp @kind object;
  #L08bf12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08bf18.  v0:= temp @kind object;
  #L08bf1a.  return v0 @kind object;
  #L08bf1c.  v0:= 0I;
  #L08bf1e.  goto L08befe;
}

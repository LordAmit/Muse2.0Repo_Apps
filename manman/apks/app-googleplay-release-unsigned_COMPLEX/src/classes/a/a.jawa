record `a.a` @kind class @AccessFlag PUBLIC_FINAL {
  `a.r` `a.a.a` @AccessFlag FINAL;
  `a.o` `a.a.b` @AccessFlag FINAL;
  `javax.net.SocketFactory` `a.a.c` @AccessFlag FINAL;
  `a.b` `a.a.d` @AccessFlag FINAL;
  `java.util.List` `a.a.e` @AccessFlag FINAL;
  `java.util.List` `a.a.f` @AccessFlag FINAL;
  `java.net.ProxySelector` `a.a.g` @AccessFlag FINAL;
  `java.net.Proxy` `a.a.h` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `a.a.i` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `a.a.j` @AccessFlag FINAL;
  `a.g` `a.a.k` @AccessFlag FINAL;
}
procedure `void` `<init>`(`a.a` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `a.o` v5 @kind object, `javax.net.SocketFactory` v6 @kind object, `javax.net.ssl.SSLSocketFactory` v7 @kind object, `javax.net.ssl.HostnameVerifier` v8 @kind object, `a.g` v9 @kind object, `a.b` v10 @kind object, `java.net.Proxy` v11 @kind object, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object) @signature `La/a;.<init>:(Ljava/lang/String;ILa/o;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;La/g;La/b;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L08496c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L084972.  v1:= new `a.r$a`;
  #L084976.  call `<init>`(v1) @signature `La/r$a;.<init>:()V` @kind direct;
  #L08497c.  if v7 == 0 then goto L0849bc;
  #L084980.  v0:= "https" @kind object;
  #L084984.  call temp:= `a`(v1, v0) @signature `La/r$a;.a:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08498a.  v0:= temp @kind object;
  #L08498c.  call temp:= `d`(v0, v3) @signature `La/r$a;.d:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L084992.  v0:= temp @kind object;
  #L084994.  call temp:= `a`(v0, v4) @signature `La/r$a;.a:(I)La/r$a;` @kind virtual;
  #L08499a.  v0:= temp @kind object;
  #L08499c.  call temp:= `c`(v0) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L0849a2.  v0:= temp @kind object;
  #L0849a4.  v2.`a.a.a` @type ^`a.r` := v0 @kind object;
  #L0849a8.  if v5 != 0 then goto L0849c2;
  #L0849ac.  v0:= new `java.lang.NullPointerException`;
  #L0849b0.  v1:= "dns == null" @kind object;
  #L0849b4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0849ba.  throw v0;
  #L0849bc.  v0:= "http" @kind object;
  #L0849c0.  goto L084984;
  #L0849c2.  v2.`a.a.b` @type ^`a.o` := v5 @kind object;
  #L0849c6.  if v6 != 0 then goto L0849da;
  #L0849ca.  v0:= new `java.lang.NullPointerException`;
  #L0849ce.  v1:= "socketFactory == null" @kind object;
  #L0849d2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0849d8.  throw v0;
  #L0849da.  v2.`a.a.c` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L0849de.  if v10 != 0 then goto L0849f2;
  #L0849e2.  v0:= new `java.lang.NullPointerException`;
  #L0849e6.  v1:= "proxyAuthenticator == null" @kind object;
  #L0849ea.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0849f0.  throw v0;
  #L0849f2.  v2.`a.a.d` @type ^`a.b` := v10 @kind object;
  #L0849f6.  if v12 != 0 then goto L084a0a;
  #L0849fa.  v0:= new `java.lang.NullPointerException`;
  #L0849fe.  v1:= "protocols == null" @kind object;
  #L084a02.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L084a08.  throw v0;
  #L084a0a.  call temp:= `a`(v12) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L084a10.  v0:= temp @kind object;
  #L084a12.  v2.`a.a.e` @type ^`java.util.List` := v0 @kind object;
  #L084a16.  if v13 != 0 then goto L084a2a;
  #L084a1a.  v0:= new `java.lang.NullPointerException`;
  #L084a1e.  v1:= "connectionSpecs == null" @kind object;
  #L084a22.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L084a28.  throw v0;
  #L084a2a.  call temp:= `a`(v13) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L084a30.  v0:= temp @kind object;
  #L084a32.  v2.`a.a.f` @type ^`java.util.List` := v0 @kind object;
  #L084a36.  if v14 != 0 then goto L084a4a;
  #L084a3a.  v0:= new `java.lang.NullPointerException`;
  #L084a3e.  v1:= "proxySelector == null" @kind object;
  #L084a42.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L084a48.  throw v0;
  #L084a4a.  v2.`a.a.g` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L084a4e.  v2.`a.a.h` @type ^`java.net.Proxy` := v11 @kind object;
  #L084a52.  v2.`a.a.i` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L084a56.  v2.`a.a.j` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L084a5a.  v2.`a.a.k` @type ^`a.g` := v9 @kind object;
  #L084a5e.  return @kind void;
}
procedure `a.r` `a`(`a.a` v1 @kind this) @signature `La/a;.a:()La/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084a70.  v0:= v1.`a.a.a` @type ^`a.r` @kind object;
  #L084a74.  return v0 @kind object;
}
procedure `a.o` `b`(`a.a` v1 @kind this) @signature `La/a;.b:()La/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084a88.  v0:= v1.`a.a.b` @type ^`a.o` @kind object;
  #L084a8c.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `c`(`a.a` v1 @kind this) @signature `La/a;.c:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084aa0.  v0:= v1.`a.a.c` @type ^`javax.net.SocketFactory` @kind object;
  #L084aa4.  return v0 @kind object;
}
procedure `a.b` `d`(`a.a` v1 @kind this) @signature `La/a;.d:()La/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084ab8.  v0:= v1.`a.a.d` @type ^`a.b` @kind object;
  #L084abc.  return v0 @kind object;
}
procedure `java.util.List` `e`(`a.a` v1 @kind this) @signature `La/a;.e:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084ad0.  v0:= v1.`a.a.e` @type ^`java.util.List` @kind object;
  #L084ad4.  return v0 @kind object;
}
procedure `boolean` `equals`(`a.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L084ae8.  v0:= 0I;
  #L084aea.  v1:= instanceof @variable v4 @type ^`a.a` @kind boolean;
  #L084aee.  if v1 == 0 then goto L084bc0;
  #L084af2.  v4:= (`a.a`) v4 @kind object;
  #L084af6.  v1:= v3.`a.a.a` @type ^`a.r` @kind object;
  #L084afa.  v2:= v4.`a.a.a` @type ^`a.r` @kind object;
  #L084afe.  call temp:= `equals`(v1, v2) @signature `La/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L084b04.  v1:= temp;
  #L084b06.  if v1 == 0 then goto L084bc0;
  #L084b0a.  v1:= v3.`a.a.b` @type ^`a.o` @kind object;
  #L084b0e.  v2:= v4.`a.a.b` @type ^`a.o` @kind object;
  #L084b12.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L084b18.  v1:= temp;
  #L084b1a.  if v1 == 0 then goto L084bc0;
  #L084b1e.  v1:= v3.`a.a.d` @type ^`a.b` @kind object;
  #L084b22.  v2:= v4.`a.a.d` @type ^`a.b` @kind object;
  #L084b26.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L084b2c.  v1:= temp;
  #L084b2e.  if v1 == 0 then goto L084bc0;
  #L084b32.  v1:= v3.`a.a.e` @type ^`java.util.List` @kind object;
  #L084b36.  v2:= v4.`a.a.e` @type ^`java.util.List` @kind object;
  #L084b3a.  call temp:= `equals`(v1, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L084b40.  v1:= temp;
  #L084b42.  if v1 == 0 then goto L084bc0;
  #L084b46.  v1:= v3.`a.a.f` @type ^`java.util.List` @kind object;
  #L084b4a.  v2:= v4.`a.a.f` @type ^`java.util.List` @kind object;
  #L084b4e.  call temp:= `equals`(v1, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L084b54.  v1:= temp;
  #L084b56.  if v1 == 0 then goto L084bc0;
  #L084b5a.  v1:= v3.`a.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L084b5e.  v2:= v4.`a.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L084b62.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L084b68.  v1:= temp;
  #L084b6a.  if v1 == 0 then goto L084bc0;
  #L084b6e.  v1:= v3.`a.a.h` @type ^`java.net.Proxy` @kind object;
  #L084b72.  v2:= v4.`a.a.h` @type ^`java.net.Proxy` @kind object;
  #L084b76.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L084b7c.  v1:= temp;
  #L084b7e.  if v1 == 0 then goto L084bc0;
  #L084b82.  v1:= v3.`a.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L084b86.  v2:= v4.`a.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L084b8a.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L084b90.  v1:= temp;
  #L084b92.  if v1 == 0 then goto L084bc0;
  #L084b96.  v1:= v3.`a.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L084b9a.  v2:= v4.`a.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L084b9e.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L084ba4.  v1:= temp;
  #L084ba6.  if v1 == 0 then goto L084bc0;
  #L084baa.  v1:= v3.`a.a.k` @type ^`a.g` @kind object;
  #L084bae.  v2:= v4.`a.a.k` @type ^`a.g` @kind object;
  #L084bb2.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L084bb8.  v1:= temp;
  #L084bba.  if v1 == 0 then goto L084bc0;
  #L084bbe.  v0:= 1I;
  #L084bc0.  return v0;
}
procedure `java.util.List` `f`(`a.a` v1 @kind this) @signature `La/a;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084bd4.  v0:= v1.`a.a.f` @type ^`java.util.List` @kind object;
  #L084bd8.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `g`(`a.a` v1 @kind this) @signature `La/a;.g:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084bec.  v0:= v1.`a.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L084bf0.  return v0 @kind object;
}
procedure `java.net.Proxy` `h`(`a.a` v1 @kind this) @signature `La/a;.h:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084c04.  v0:= v1.`a.a.h` @type ^`java.net.Proxy` @kind object;
  #L084c08.  return v0 @kind object;
}
procedure `int` `hashCode`(`a.a` v3 @kind this) @signature `La/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L084c1c.  v1:= 0I;
  #L084c1e.  v0:= v3.`a.a.a` @type ^`a.r` @kind object;
  #L084c22.  call temp:= `hashCode`(v0) @signature `La/r;.hashCode:()I` @kind virtual;
  #L084c28.  v0:= temp;
  #L084c2a.  v0:= v0 + 527;
  #L084c2e.  v0:= v0 * 31;
  #L084c32.  v2:= v3.`a.a.b` @type ^`a.o` @kind object;
  #L084c36.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L084c3c.  v2:= temp;
  #L084c3e.  v0:= v0 + v2 @kind int;
  #L084c40.  v0:= v0 * 31;
  #L084c44.  v2:= v3.`a.a.d` @type ^`a.b` @kind object;
  #L084c48.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L084c4e.  v2:= temp;
  #L084c50.  v0:= v0 + v2 @kind int;
  #L084c52.  v0:= v0 * 31;
  #L084c56.  v2:= v3.`a.a.e` @type ^`java.util.List` @kind object;
  #L084c5a.  call temp:= `hashCode`(v2) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L084c60.  v2:= temp;
  #L084c62.  v0:= v0 + v2 @kind int;
  #L084c64.  v0:= v0 * 31;
  #L084c68.  v2:= v3.`a.a.f` @type ^`java.util.List` @kind object;
  #L084c6c.  call temp:= `hashCode`(v2) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L084c72.  v2:= temp;
  #L084c74.  v0:= v0 + v2 @kind int;
  #L084c76.  v0:= v0 * 31;
  #L084c7a.  v2:= v3.`a.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L084c7e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L084c84.  v2:= temp;
  #L084c86.  v0:= v0 + v2 @kind int;
  #L084c88.  v2:= v0 * 31;
  #L084c8c.  v0:= v3.`a.a.h` @type ^`java.net.Proxy` @kind object;
  #L084c90.  if v0 == 0 then goto L084cf2;
  #L084c94.  v0:= v3.`a.a.h` @type ^`java.net.Proxy` @kind object;
  #L084c98.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L084c9e.  v0:= temp;
  #L084ca0.  v0:= v0 + v2 @kind int;
  #L084ca2.  v2:= v0 * 31;
  #L084ca6.  v0:= v3.`a.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L084caa.  if v0 == 0 then goto L084cf6;
  #L084cae.  v0:= v3.`a.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L084cb2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L084cb8.  v0:= temp;
  #L084cba.  v0:= v0 + v2 @kind int;
  #L084cbc.  v2:= v0 * 31;
  #L084cc0.  v0:= v3.`a.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L084cc4.  if v0 == 0 then goto L084cfa;
  #L084cc8.  v0:= v3.`a.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L084ccc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L084cd2.  v0:= temp;
  #L084cd4.  v0:= v0 + v2 @kind int;
  #L084cd6.  v0:= v0 * 31;
  #L084cda.  v2:= v3.`a.a.k` @type ^`a.g` @kind object;
  #L084cde.  if v2 == 0 then goto L084cee;
  #L084ce2.  v1:= v3.`a.a.k` @type ^`a.g` @kind object;
  #L084ce6.  call temp:= `hashCode`(v1) @signature `La/g;.hashCode:()I` @kind virtual;
  #L084cec.  v1:= temp;
  #L084cee.  v0:= v0 + v1 @kind int;
  #L084cf0.  return v0;
  #L084cf2.  v0:= v1;
  #L084cf4.  goto L084ca0;
  #L084cf6.  v0:= v1;
  #L084cf8.  goto L084cba;
  #L084cfa.  v0:= v1;
  #L084cfc.  goto L084cd4;
}
procedure `javax.net.ssl.SSLSocketFactory` `i`(`a.a` v1 @kind this) @signature `La/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084d10.  v0:= v1.`a.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L084d14.  return v0 @kind object;
}
procedure `javax.net.ssl.HostnameVerifier` `j`(`a.a` v1 @kind this) @signature `La/a;.j:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084d28.  v0:= v1.`a.a.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L084d2c.  return v0 @kind object;
}
procedure `a.g` `k`(`a.a` v1 @kind this) @signature `La/a;.k:()La/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084d40.  v0:= v1.`a.a.k` @type ^`a.g` @kind object;
  #L084d44.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`a.a` v3 @kind this) @signature `La/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L084d58.  v0:= new `java.lang.StringBuilder`;
  #L084d5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L084d62.  v1:= "Address{" @kind object;
  #L084d66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084d6c.  v0:= temp @kind object;
  #L084d6e.  v1:= v3.`a.a.a` @type ^`a.r` @kind object;
  #L084d72.  call temp:= `f`(v1) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L084d78.  v1:= temp @kind object;
  #L084d7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084d80.  v0:= temp @kind object;
  #L084d82.  v1:= ":" @kind object;
  #L084d86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084d8c.  v0:= temp @kind object;
  #L084d8e.  v1:= v3.`a.a.a` @type ^`a.r` @kind object;
  #L084d92.  call temp:= `g`(v1) @signature `La/r;.g:()I` @kind virtual;
  #L084d98.  v1:= temp;
  #L084d9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L084da0.  v0:= temp @kind object;
  #L084da2.  v1:= v3.`a.a.h` @type ^`java.net.Proxy` @kind object;
  #L084da6.  if v1 == 0 then goto L084dd4;
  #L084daa.  v1:= ", proxy=" @kind object;
  #L084dae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084db4.  v1:= temp @kind object;
  #L084db6.  v2:= v3.`a.a.h` @type ^`java.net.Proxy` @kind object;
  #L084dba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084dc0.  v1:= "}" @kind object;
  #L084dc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084dca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L084dd0.  v0:= temp @kind object;
  #L084dd2.  return v0 @kind object;
  #L084dd4.  v1:= ", proxySelector=" @kind object;
  #L084dd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084dde.  v1:= temp @kind object;
  #L084de0.  v2:= v3.`a.a.g` @type ^`java.net.ProxySelector` @kind object;
  #L084de4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084dea.  goto L084dc0;
}

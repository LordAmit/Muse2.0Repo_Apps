record `a.r` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.r.a` @AccessFlag FINAL;
  `java.lang.String` `a.r.b` @AccessFlag FINAL;
  `int` `a.r.c` @AccessFlag FINAL;
  `java.lang.String` `a.r.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.r.g` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.r.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.j` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@a.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L089e78.  v0:= 16I;
  #L089e7c.  v0:= new `char`[v0];
  #L089e80.  goto L089e8c;
  #L089e86.  `@@a.r.d` @type ^`char`[] := v0 @kind object;
  #L089e8a.  return @kind void;
  #L089e8c.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L089eb3.  goto L089e86;
}
procedure `void` `<init>`(`a.r` v4 @kind this, `a.r$a` v5 @kind object) @signature `La/r;.<init>:(La/r$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L089ec4.  v1:= 0I;
  #L089ec6.  v3:= 0I;
  #L089ec8.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L089ece.  v0:= v5.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L089ed2.  v4.`a.r.a` @type ^`java.lang.String` := v0 @kind object;
  #L089ed6.  v0:= v5.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L089eda.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L089ee0.  v0:= temp @kind object;
  #L089ee2.  v4.`a.r.e` @type ^`java.lang.String` := v0 @kind object;
  #L089ee6.  v0:= v5.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L089eea.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L089ef0.  v0:= temp @kind object;
  #L089ef2.  v4.`a.r.f` @type ^`java.lang.String` := v0 @kind object;
  #L089ef6.  v0:= v5.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L089efa.  v4.`a.r.b` @type ^`java.lang.String` := v0 @kind object;
  #L089efe.  call temp:= `a`(v5) @signature `La/r$a;.a:()I` @kind virtual;
  #L089f04.  v0:= temp;
  #L089f06.  v4.`a.r.c` @type ^`int` := v0;
  #L089f0a.  v0:= v5.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089f0e.  call temp:= `a`(v4, v0, v3) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L089f14.  v0:= temp @kind object;
  #L089f16.  v4.`a.r.g` @type ^`java.util.List` := v0 @kind object;
  #L089f1a.  v0:= v5.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089f1e.  if v0 == 0 then goto L089f5a;
  #L089f22.  v0:= v5.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089f26.  v2:= 1I;
  #L089f28.  call temp:= `a`(v4, v0, v2) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L089f2e.  v0:= temp @kind object;
  #L089f30.  v4.`a.r.h` @type ^`java.util.List` := v0 @kind object;
  #L089f34.  v0:= v5.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L089f38.  if v0 == 0 then goto L089f48;
  #L089f3c.  v0:= v5.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L089f40.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L089f46.  v1:= temp @kind object;
  #L089f48.  v4.`a.r.i` @type ^`java.lang.String` := v1 @kind object;
  #L089f4c.  call temp:= `toString`(v5) @signature `La/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L089f52.  v0:= temp @kind object;
  #L089f54.  v4.`a.r.j` @type ^`java.lang.String` := v0 @kind object;
  #L089f58.  return @kind void;
  #L089f5a.  v0:= v1 @kind object;
  #L089f5c.  goto L089f30;
}
procedure `int` `a`(`char` v1 ) @signature `La/r;.a:(C)I` @AccessFlag STATIC {
    temp;
    v0;

  #L089f70.  v0:= 48I;
  #L089f74.  if v1 < v0 then goto L089f86;
  #L089f78.  v0:= 57I;
  #L089f7c.  if v1 > v0 then goto L089f86;
  #L089f80.  v0:= v1 + -48;
  #L089f84.  return v0;
  #L089f86.  v0:= 97I;
  #L089f8a.  if v1 < v0 then goto L089fa0;
  #L089f8e.  v0:= 102I;
  #L089f92.  if v1 > v0 then goto L089fa0;
  #L089f96.  v0:= v1 + -97;
  #L089f9a.  v0:= v0 + 10;
  #L089f9e.  goto L089f84;
  #L089fa0.  v0:= 65I;
  #L089fa4.  if v1 < v0 then goto L089fba;
  #L089fa8.  v0:= 70I;
  #L089fac.  if v1 > v0 then goto L089fba;
  #L089fb0.  v0:= v1 + -65;
  #L089fb4.  v0:= v0 + 10;
  #L089fb8.  goto L089f84;
  #L089fba.  v0:= -1I;
  #L089fbc.  goto L089f84;
}
procedure `int` `a`(`java.lang.String` v1 @kind object) @signature `La/r;.a:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L089fd0.  v0:= "http" @kind object;
  #L089fd4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L089fda.  v0:= temp;
  #L089fdc.  if v0 == 0 then goto L089fe6;
  #L089fe0.  v0:= 80I;
  #L089fe4.  return v0;
  #L089fe6.  v0:= "https" @kind object;
  #L089fea.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L089ff0.  v0:= temp;
  #L089ff2.  if v0 == 0 then goto L089ffc;
  #L089ff6.  v0:= 443I;
  #L089ffa.  goto L089fe4;
  #L089ffc.  v0:= -1I;
  #L089ffe.  goto L089fe4;
}
procedure `java.lang.String` `a`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 , `java.lang.String` v12 @kind object, `boolean` v13 , `boolean` v14 , `boolean` v15 , `boolean` v16 ) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L08a010.  v2:= v10;
  #L08a012.  if v2 >= v11 then goto L08a0ac;
  #L08a016.  call temp:= `codePointAt`(v9, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L08a01c.  v0:= temp;
  #L08a01e.  v1:= 32I;
  #L08a022.  if v0 < v1 then goto L08a070;
  #L08a026.  v1:= 127I;
  #L08a02a.  if v0 == v1 then goto L08a070;
  #L08a02e.  v1:= 128I;
  #L08a032.  if v0 < v1 then goto L08a03a;
  #L08a036.  if v16 != 0 then goto L08a070;
  #L08a03a.  call temp:= `indexOf`(v12, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08a040.  v1:= temp;
  #L08a042.  v3:= -1I;
  #L08a044.  if v1 != v3 then goto L08a070;
  #L08a048.  v1:= 37I;
  #L08a04c.  if v0 != v1 then goto L08a064;
  #L08a050.  if v13 == 0 then goto L08a070;
  #L08a054.  if v14 == 0 then goto L08a064;
  #L08a058.  call temp:= `a`(v9, v2, v11) @signature `La/r;.a:(Ljava/lang/String;II)Z` @kind static;
  #L08a05e.  v1:= temp;
  #L08a060.  if v1 == 0 then goto L08a070;
  #L08a064.  v1:= 43I;
  #L08a068.  if v0 != v1 then goto L08a0a0;
  #L08a06c.  if v15 == 0 then goto L08a0a0;
  #L08a070.  v0:= new `b.c`;
  #L08a074.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08a07a.  call temp:= `a`(v0, v9, v10, v2) @signature `Lb/c;.a:(Ljava/lang/String;II)Lb/c;` @kind virtual;
  #L08a080.  v1:= v9 @kind object;
  #L08a082.  v3:= v11;
  #L08a084.  v4:= v12 @kind object;
  #L08a086.  v5:= v13;
  #L08a088.  v6:= v14;
  #L08a08a.  v7:= v15;
  #L08a08c.  v8:= v16;
  #L08a090.  call `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IILjava/lang/String;ZZZZ)V` @kind static;
  #L08a096.  call temp:= `o`(v0) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L08a09c.  v0:= temp @kind object;
  #L08a09e.  return v0 @kind object;
  #L08a0a0.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L08a0a6.  v0:= temp;
  #L08a0a8.  v2:= v2 + v0 @kind int;
  #L08a0aa.  goto L08a012;
  #L08a0ac.  call temp:= `substring`(v9, v10, v11) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a0b2.  v0:= temp @kind object;
  #L08a0b4.  goto L08a09e;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08a0c8.  v0:= v4;
  #L08a0ca.  if v0 >= v5 then goto L08a110;
  #L08a0ce.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a0d4.  v1:= temp;
  #L08a0d6.  v2:= 37I;
  #L08a0da.  if v1 == v2 then goto L08a0ea;
  #L08a0de.  v2:= 43I;
  #L08a0e2.  if v1 != v2 then goto L08a10a;
  #L08a0e6.  if v6 == 0 then goto L08a10a;
  #L08a0ea.  v1:= new `b.c`;
  #L08a0ee.  call `<init>`(v1) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08a0f4.  call temp:= `a`(v1, v3, v4, v0) @signature `Lb/c;.a:(Ljava/lang/String;II)Lb/c;` @kind virtual;
  #L08a0fa.  call `a`(v1, v3, v0, v5, v6) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IIZ)V` @kind static;
  #L08a100.  call temp:= `o`(v1) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L08a106.  v0:= temp @kind object;
  #L08a108.  return v0 @kind object;
  #L08a10a.  v0:= v0 + 1;
  #L08a10e.  goto L08a0ca;
  #L08a110.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a116.  v0:= temp @kind object;
  #L08a118.  goto L08a108;
}
procedure `java.lang.String` `a`(`java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `boolean` v10 , `boolean` v11 , `boolean` v12 , `boolean` v13 ) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08a12c.  v1:= 0I;
  #L08a12e.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a134.  v2:= temp;
  #L08a136.  v0:= v8 @kind object;
  #L08a138.  v3:= v9 @kind object;
  #L08a13a.  v4:= v10;
  #L08a13c.  v5:= v11;
  #L08a13e.  v6:= v12;
  #L08a140.  v7:= v13;
  #L08a142.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a148.  v0:= temp @kind object;
  #L08a14a.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L08a15c.  v0:= 0I;
  #L08a15e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a164.  v1:= temp;
  #L08a166.  call temp:= `a`(v2, v0, v1, v3) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L08a16c.  v0:= temp @kind object;
  #L08a16e.  return v0 @kind object;
}
procedure `java.util.List` `a`(`a.r` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08a180.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08a186.  v2:= temp;
  #L08a188.  v3:= new `java.util.ArrayList`;
  #L08a18c.  call `<init>`(v3, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L08a192.  v0:= 0I;
  #L08a194.  v1:= v0;
  #L08a196.  if v1 >= v2 then goto L08a1c4;
  #L08a19a.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08a1a0.  v0:= temp @kind object;
  #L08a1a2.  v0:= (`java.lang.String`) v0 @kind object;
  #L08a1a6.  if v0 == 0 then goto L08a1c0;
  #L08a1aa.  call temp:= `a`(v0, v6) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L08a1b0.  v0:= temp @kind object;
  #L08a1b2.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08a1b8.  v0:= v1 + 1;
  #L08a1bc.  v1:= v0;
  #L08a1be.  goto L08a196;
  #L08a1c0.  v0:= 0I;
  #L08a1c2.  goto L08a1b2;
  #L08a1c4.  call temp:= `unmodifiableList`(v3) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08a1ca.  v0:= temp @kind object;
  #L08a1cc.  return v0 @kind object;
}
procedure `void` `a`(`b.c` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IILjava/lang/String;ZZZZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08a1e0.  v5:= 37I;
  #L08a1e4.  v0:= 0I;
  #L08a1e6.  if v8 >= v9 then goto L08a2ea;
  #L08a1ea.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L08a1f0.  v2:= temp;
  #L08a1f2.  if v11 == 0 then goto L08a222;
  #L08a1f6.  v1:= 9I;
  #L08a1fa.  if v2 == v1 then goto L08a216;
  #L08a1fe.  v1:= 10I;
  #L08a202.  if v2 == v1 then goto L08a216;
  #L08a206.  v1:= 12I;
  #L08a20a.  if v2 == v1 then goto L08a216;
  #L08a20e.  v1:= 13I;
  #L08a212.  if v2 != v1 then goto L08a222;
  #L08a216.  call temp:= `charCount`(v2) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L08a21c.  v1:= temp;
  #L08a21e.  v8:= v8 + v1 @kind int;
  #L08a220.  goto L08a1e6;
  #L08a222.  v1:= 43I;
  #L08a226.  if v2 != v1 then goto L08a244;
  #L08a22a.  if v13 == 0 then goto L08a244;
  #L08a22e.  if v11 == 0 then goto L08a23e;
  #L08a232.  v1:= "+" @kind object;
  #L08a236.  call temp:= `a`(v6, v1) @signature `Lb/c;.a:(Ljava/lang/String;)Lb/c;` @kind virtual;
  #L08a23c.  goto L08a216;
  #L08a23e.  v1:= "%2B" @kind object;
  #L08a242.  goto L08a236;
  #L08a244.  v1:= 32I;
  #L08a248.  if v2 < v1 then goto L08a286;
  #L08a24c.  v1:= 127I;
  #L08a250.  if v2 == v1 then goto L08a286;
  #L08a254.  v1:= 128I;
  #L08a258.  if v2 < v1 then goto L08a260;
  #L08a25c.  if v14 != 0 then goto L08a286;
  #L08a260.  call temp:= `indexOf`(v10, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08a266.  v1:= temp;
  #L08a268.  v3:= -1I;
  #L08a26a.  if v1 != v3 then goto L08a286;
  #L08a26e.  if v2 != v5 then goto L08a2e2;
  #L08a272.  if v11 == 0 then goto L08a286;
  #L08a276.  if v12 == 0 then goto L08a2e2;
  #L08a27a.  call temp:= `a`(v7, v8, v9) @signature `La/r;.a:(Ljava/lang/String;II)Z` @kind static;
  #L08a280.  v1:= temp;
  #L08a282.  if v1 != 0 then goto L08a2e2;
  #L08a286.  if v0 != 0 then goto L08a294;
  #L08a28a.  v0:= new `b.c`;
  #L08a28e.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08a294.  call temp:= `a`(v0, v2) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L08a29a.  call temp:= `e`(v0) @signature `Lb/c;.e:()Z` @kind virtual;
  #L08a2a0.  v1:= temp;
  #L08a2a2.  if v1 != 0 then goto L08a216;
  #L08a2a6.  call temp:= `h`(v0) @signature `Lb/c;.h:()B` @kind virtual;
  #L08a2ac.  v1:= temp;
  #L08a2ae.  v1:= v1 ^& 255;
  #L08a2b2.  call temp:= `b`(v6, v5) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08a2b8.  v3:= `@@a.r.d` @type ^`char`[] @kind object;
  #L08a2bc.  v4:= v1 ^> 4;
  #L08a2c0.  v4:= v4 ^& 15;
  #L08a2c4.  v3:= v3[v4] @kind char;
  #L08a2c8.  call temp:= `b`(v6, v3) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08a2ce.  v3:= `@@a.r.d` @type ^`char`[] @kind object;
  #L08a2d2.  v1:= v1 ^& 15;
  #L08a2d6.  v1:= v3[v1] @kind char;
  #L08a2da.  call temp:= `b`(v6, v1) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08a2e0.  goto L08a29a;
  #L08a2e2.  call temp:= `a`(v6, v2) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L08a2e8.  goto L08a216;
  #L08a2ea.  return @kind void;
}
procedure `void` `a`(`b.c` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08a2fc.  v4:= -1I;
  #L08a2fe.  v0:= v7;
  #L08a300.  if v0 >= v8 then goto L08a388;
  #L08a304.  call temp:= `codePointAt`(v6, v0) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L08a30a.  v1:= temp;
  #L08a30c.  v2:= 37I;
  #L08a310.  if v1 != v2 then goto L08a368;
  #L08a314.  v2:= v0 + 2;
  #L08a318.  if v2 >= v8 then goto L08a368;
  #L08a31c.  v2:= v0 + 1;
  #L08a320.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a326.  v2:= temp;
  #L08a328.  call temp:= `a`(v2) @signature `La/r;.a:(C)I` @kind static;
  #L08a32e.  v2:= temp;
  #L08a330.  v3:= v0 + 2;
  #L08a334.  call temp:= `charAt`(v6, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a33a.  v3:= temp;
  #L08a33c.  call temp:= `a`(v3) @signature `La/r;.a:(C)I` @kind static;
  #L08a342.  v3:= temp;
  #L08a344.  if v2 == v4 then goto L08a380;
  #L08a348.  if v3 == v4 then goto L08a380;
  #L08a34c.  v2:= v2 ^< 4;
  #L08a350.  v2:= v2 + v3 @kind int;
  #L08a352.  call temp:= `b`(v5, v2) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08a358.  v0:= v0 + 2;
  #L08a35c.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L08a362.  v1:= temp;
  #L08a364.  v0:= v0 + v1 @kind int;
  #L08a366.  goto L08a300;
  #L08a368.  v2:= 43I;
  #L08a36c.  if v1 != v2 then goto L08a380;
  #L08a370.  if v9 == 0 then goto L08a380;
  #L08a374.  v2:= 32I;
  #L08a378.  call temp:= `b`(v5, v2) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08a37e.  goto L08a35c;
  #L08a380.  call temp:= `a`(v5, v1) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L08a386.  goto L08a35c;
  #L08a388.  return @kind void;
}
procedure `void` `a`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `La/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08a39c.  v0:= 0I;
  #L08a39e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08a3a4.  v2:= temp;
  #L08a3a6.  v1:= v0;
  #L08a3a8.  if v1 >= v2 then goto L08a3d0;
  #L08a3ac.  v0:= 47I;
  #L08a3b0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a3b6.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08a3bc.  v0:= temp @kind object;
  #L08a3be.  v0:= (`java.lang.String`) v0 @kind object;
  #L08a3c2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a3c8.  v0:= v1 + 1;
  #L08a3cc.  v1:= v0;
  #L08a3ce.  goto L08a3a8;
  #L08a3d0.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r;.a:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08a3e4.  v2:= -1I;
  #L08a3e6.  v0:= v4 + 2;
  #L08a3ea.  if v0 >= v5 then goto L08a432;
  #L08a3ee.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a3f4.  v0:= temp;
  #L08a3f6.  v1:= 37I;
  #L08a3fa.  if v0 != v1 then goto L08a432;
  #L08a3fe.  v0:= v4 + 1;
  #L08a402.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a408.  v0:= temp;
  #L08a40a.  call temp:= `a`(v0) @signature `La/r;.a:(C)I` @kind static;
  #L08a410.  v0:= temp;
  #L08a412.  if v0 == v2 then goto L08a432;
  #L08a416.  v0:= v4 + 2;
  #L08a41a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a420.  v0:= temp;
  #L08a422.  call temp:= `a`(v0) @signature `La/r;.a:(C)I` @kind static;
  #L08a428.  v0:= temp;
  #L08a42a.  if v0 == v2 then goto L08a432;
  #L08a42e.  v0:= 1I;
  #L08a430.  return v0;
  #L08a432.  v0:= 0I;
  #L08a434.  goto L08a430;
}
procedure `java.util.List` `b`(`java.lang.String` v5 @kind object) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08a448.  v4:= -1I;
  #L08a44a.  v2:= new `java.util.ArrayList`;
  #L08a44e.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L08a454.  v0:= 0I;
  #L08a456.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a45c.  v1:= temp;
  #L08a45e.  if v0 > v1 then goto L08a4cc;
  #L08a462.  v1:= 38I;
  #L08a466.  call temp:= `indexOf`(v5, v1, v0) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08a46c.  v1:= temp;
  #L08a46e.  if v1 != v4 then goto L08a47a;
  #L08a472.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a478.  v1:= temp;
  #L08a47a.  v3:= 61I;
  #L08a47e.  call temp:= `indexOf`(v5, v3, v0) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08a484.  v3:= temp;
  #L08a486.  if v3 == v4 then goto L08a48e;
  #L08a48a.  if v3 <= v1 then goto L08a4aa;
  #L08a48e.  call temp:= `substring`(v5, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a494.  v0:= temp @kind object;
  #L08a496.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08a49c.  v0:= 0I;
  #L08a49e.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08a4a4.  v0:= v1 + 1;
  #L08a4a8.  goto L08a456;
  #L08a4aa.  call temp:= `substring`(v5, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a4b0.  v0:= temp @kind object;
  #L08a4b2.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08a4b8.  v0:= v3 + 1;
  #L08a4bc.  call temp:= `substring`(v5, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a4c2.  v0:= temp @kind object;
  #L08a4c4.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08a4ca.  goto L08a4a4;
  #L08a4cc.  return v2 @kind object;
}
procedure `void` `b`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08a4e0.  v0:= 0I;
  #L08a4e2.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08a4e8.  v3:= temp;
  #L08a4ea.  v2:= v0;
  #L08a4ec.  if v2 >= v3 then goto L08a53c;
  #L08a4f0.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08a4f6.  v0:= temp @kind object;
  #L08a4f8.  v0:= (`java.lang.String`) v0 @kind object;
  #L08a4fc.  v1:= v2 + 1;
  #L08a500.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08a506.  v1:= temp @kind object;
  #L08a508.  v1:= (`java.lang.String`) v1 @kind object;
  #L08a50c.  if v2 <= 0 then goto L08a51a;
  #L08a510.  v4:= 38I;
  #L08a514.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a51a.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a520.  if v1 == 0 then goto L08a534;
  #L08a524.  v0:= 61I;
  #L08a528.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a52e.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a534.  v0:= v2 + 2;
  #L08a538.  v2:= v0;
  #L08a53a.  goto L08a4ec;
  #L08a53c.  return @kind void;
}
procedure `a.r` `e`(`java.lang.String` v4 @kind object) @signature `La/r;.e:(Ljava/lang/String;)La/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08a550.  v0:= 0I;
  #L08a552.  v1:= new `a.r$a`;
  #L08a556.  call `<init>`(v1) @signature `La/r$a;.<init>:()V` @kind direct;
  #L08a55c.  call temp:= `a`(v1, v0, v4) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @kind virtual;
  #L08a562.  v2:= temp @kind object;
  #L08a564.  v3:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L08a568.  if v2 != v3 then goto L08a574;
  #L08a56c.  call temp:= `c`(v1) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L08a572.  v0:= temp @kind object;
  #L08a574.  return v0 @kind object;
}
procedure `java.net.URI` `a`(`a.r` v4 @kind this) @signature `La/r;.a:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08a588.  call temp:= `n`(v4) @signature `La/r;.n:()La/r$a;` @kind virtual;
  #L08a58e.  v0:= temp @kind object;
  #L08a590.  call temp:= `b`(v0) @signature `La/r$a;.b:()La/r$a;` @kind virtual;
  #L08a596.  v0:= temp @kind object;
  #L08a598.  call temp:= `toString`(v0) @signature `La/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a59e.  v1:= temp @kind object;
  #Try_start0.  
  #L08a5a0.  v0:= new `java.net.URI`;
  #L08a5a4.  call `<init>`(v0, v1) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L08a5aa.  return v0 @kind object;
  #L08a5ac.  v0:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #Try_start1.  
  #L08a5ae.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L08a5b2.  v3:= "" @kind object;
  #L08a5b6.  call temp:= `replaceAll`(v1, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L08a5bc.  v1:= temp @kind object;
  #L08a5be.  call temp:= `create`(v1) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #Try_end1.  
  #L08a5c4.  v0:= temp @kind object;
  #L08a5c6.  goto L08a5aa;
  #L08a5c8.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L08a5ca.  v1:= new `java.lang.RuntimeException`;
  #L08a5ce.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L08a5d4.  throw v1;
  catch `java.net.URISyntaxException` @[Try_start0..Try_end0] goto L08a5ac;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L08a5c8;
}
procedure `java.lang.String` `b`(`a.r` v1 @kind this) @signature `La/r;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a604.  v0:= v1.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a608.  return v0 @kind object;
}
procedure `a.r` `c`(`a.r` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r;.c:(Ljava/lang/String;)La/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a61c.  call temp:= `d`(v1, v2) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a622.  v0:= temp @kind object;
  #L08a624.  if v0 == 0 then goto L08a632;
  #L08a628.  call temp:= `c`(v0) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L08a62e.  v0:= temp @kind object;
  #L08a630.  return v0 @kind object;
  #L08a632.  v0:= 0I;
  #L08a634.  goto L08a630;
}
procedure `boolean` `c`(`a.r` v2 @kind this) @signature `La/r;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a648.  v0:= v2.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a64c.  v1:= "https" @kind object;
  #L08a650.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a656.  v0:= temp;
  #L08a658.  return v0;
}
procedure `a.r$a` `d`(`a.r` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08a66c.  v0:= new `a.r$a`;
  #L08a670.  call `<init>`(v0) @signature `La/r$a;.<init>:()V` @kind direct;
  #L08a676.  call temp:= `a`(v0, v3, v4) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @kind virtual;
  #L08a67c.  v1:= temp @kind object;
  #L08a67e.  v2:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L08a682.  if v1 != v2 then goto L08a688;
  #L08a686.  return v0 @kind object;
  #L08a688.  v0:= 0I;
  #L08a68a.  goto L08a686;
}
procedure `java.lang.String` `d`(`a.r` v4 @kind this) @signature `La/r;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08a69c.  v0:= v4.`a.r.e` @type ^`java.lang.String` @kind object;
  #L08a6a0.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08a6a6.  v0:= temp;
  #L08a6a8.  if v0 == 0 then goto L08a6b2;
  #L08a6ac.  v0:= "" @kind object;
  #L08a6b0.  return v0 @kind object;
  #L08a6b2.  v0:= v4.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a6b6.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a6bc.  v0:= temp;
  #L08a6be.  v0:= v0 + 3;
  #L08a6c2.  v1:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a6c6.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a6ca.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a6d0.  v2:= temp;
  #L08a6d2.  v3:= ":@" @kind object;
  #L08a6d6.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08a6dc.  v1:= temp;
  #L08a6de.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a6e2.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a6e8.  v0:= temp @kind object;
  #L08a6ea.  goto L08a6b0;
}
procedure `java.lang.String` `e`(`a.r` v3 @kind this) @signature `La/r;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08a6fc.  v0:= v3.`a.r.f` @type ^`java.lang.String` @kind object;
  #L08a700.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08a706.  v0:= temp;
  #L08a708.  if v0 == 0 then goto L08a712;
  #L08a70c.  v0:= "" @kind object;
  #L08a710.  return v0 @kind object;
  #L08a712.  v0:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a716.  v1:= 58I;
  #L08a71a.  v2:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a71e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a724.  v2:= temp;
  #L08a726.  v2:= v2 + 3;
  #L08a72a.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08a730.  v0:= temp;
  #L08a732.  v0:= v0 + 1;
  #L08a736.  v1:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a73a.  v2:= 64I;
  #L08a73e.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08a744.  v1:= temp;
  #L08a746.  v2:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a74a.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a750.  v0:= temp @kind object;
  #L08a752.  goto L08a710;
}
procedure `boolean` `equals`(`a.r` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a764.  v0:= instanceof @variable v3 @type ^`a.r` @kind boolean;
  #L08a768.  if v0 == 0 then goto L08a788;
  #L08a76c.  v3:= (`a.r`) v3 @kind object;
  #L08a770.  v0:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a774.  v1:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a778.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a77e.  v0:= temp;
  #L08a780.  if v0 == 0 then goto L08a788;
  #L08a784.  v0:= 1I;
  #L08a786.  return v0;
  #L08a788.  v0:= 0I;
  #L08a78a.  goto L08a786;
}
procedure `java.lang.String` `f`(`a.r` v1 @kind this) @signature `La/r;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a79c.  v0:= v1.`a.r.b` @type ^`java.lang.String` @kind object;
  #L08a7a0.  return v0 @kind object;
}
procedure `int` `g`(`a.r` v1 @kind this) @signature `La/r;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a7b4.  v0:= v1.`a.r.c` @type ^`int`;
  #L08a7b8.  return v0;
}
procedure `java.lang.String` `h`(`a.r` v4 @kind this) @signature `La/r;.h:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08a7cc.  v0:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a7d0.  v1:= 47I;
  #L08a7d4.  v2:= v4.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a7d8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a7de.  v2:= temp;
  #L08a7e0.  v2:= v2 + 3;
  #L08a7e4.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08a7ea.  v0:= temp;
  #L08a7ec.  v1:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a7f0.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a7f4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a7fa.  v2:= temp;
  #L08a7fc.  v3:= "?#" @kind object;
  #L08a800.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08a806.  v1:= temp;
  #L08a808.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a80c.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a812.  v0:= temp @kind object;
  #L08a814.  return v0 @kind object;
}
procedure `int` `hashCode`(`a.r` v1 @kind this) @signature `La/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a828.  v0:= v1.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a82c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L08a832.  v0:= temp;
  #L08a834.  return v0;
}
procedure `java.util.List` `i`(`a.r` v6 @kind this) @signature `La/r;.i:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08a848.  v5:= 47I;
  #L08a84c.  v0:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a850.  v1:= v6.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a854.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a85a.  v1:= temp;
  #L08a85c.  v1:= v1 + 3;
  #L08a860.  call temp:= `indexOf`(v0, v5, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08a866.  v0:= temp;
  #L08a868.  v1:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a86c.  v2:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a870.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a876.  v2:= temp;
  #L08a878.  v3:= "?#" @kind object;
  #L08a87c.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08a882.  v1:= temp;
  #L08a884.  v2:= new `java.util.ArrayList`;
  #L08a888.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L08a88e.  if v0 >= v1 then goto L08a8b6;
  #L08a892.  v3:= v0 + 1;
  #L08a896.  v0:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a89a.  call temp:= `a`(v0, v3, v1, v5) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08a8a0.  v0:= temp;
  #L08a8a2.  v4:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a8a6.  call temp:= `substring`(v4, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a8ac.  v3:= temp @kind object;
  #L08a8ae.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08a8b4.  goto L08a88e;
  #L08a8b6.  return v2 @kind object;
}
procedure `java.lang.String` `j`(`a.r` v5 @kind this) @signature `La/r;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08a8c8.  v0:= v5.`a.r.h` @type ^`java.util.List` @kind object;
  #L08a8cc.  if v0 != 0 then goto L08a8d4;
  #L08a8d0.  v0:= 0I;
  #L08a8d2.  return v0 @kind object;
  #L08a8d4.  v0:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a8d8.  v1:= 63I;
  #L08a8dc.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08a8e2.  v0:= temp;
  #L08a8e4.  v0:= v0 + 1;
  #L08a8e8.  v1:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a8ec.  v2:= v0 + 1;
  #L08a8f0.  v3:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a8f4.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a8fa.  v3:= temp;
  #L08a8fc.  v4:= 35I;
  #L08a900.  call temp:= `a`(v1, v2, v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08a906.  v1:= temp;
  #L08a908.  v2:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a90c.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a912.  v0:= temp @kind object;
  #L08a914.  goto L08a8d2;
}
procedure `java.lang.String` `k`(`a.r` v2 @kind this) @signature `La/r;.k:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a928.  v0:= v2.`a.r.h` @type ^`java.util.List` @kind object;
  #L08a92c.  if v0 != 0 then goto L08a934;
  #L08a930.  v0:= 0I;
  #L08a932.  return v0 @kind object;
  #L08a934.  v0:= new `java.lang.StringBuilder`;
  #L08a938.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a93e.  v1:= v2.`a.r.h` @type ^`java.util.List` @kind object;
  #L08a942.  call `b`(v0, v1) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L08a948.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a94e.  v0:= temp @kind object;
  #L08a950.  goto L08a932;
}
procedure `java.lang.String` `l`(`a.r` v2 @kind this) @signature `La/r;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a964.  v0:= v2.`a.r.i` @type ^`java.lang.String` @kind object;
  #L08a968.  if v0 != 0 then goto L08a970;
  #L08a96c.  v0:= 0I;
  #L08a96e.  return v0 @kind object;
  #L08a970.  v0:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a974.  v1:= 35I;
  #L08a978.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08a97e.  v0:= temp;
  #L08a980.  v0:= v0 + 1;
  #L08a984.  v1:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a988.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08a98e.  v0:= temp @kind object;
  #L08a990.  goto L08a96e;
}
procedure `java.lang.String` `m`(`a.r` v2 @kind this) @signature `La/r;.m:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a9a4.  v0:= "/..." @kind object;
  #L08a9a8.  call temp:= `d`(v2, v0) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a9ae.  v0:= temp @kind object;
  #L08a9b0.  v1:= "" @kind object;
  #L08a9b4.  call temp:= `b`(v0, v1) @signature `La/r$a;.b:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a9ba.  v0:= temp @kind object;
  #L08a9bc.  v1:= "" @kind object;
  #L08a9c0.  call temp:= `c`(v0, v1) @signature `La/r$a;.c:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a9c6.  v0:= temp @kind object;
  #L08a9c8.  call temp:= `c`(v0) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L08a9ce.  v0:= temp @kind object;
  #L08a9d0.  call temp:= `toString`(v0) @signature `La/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a9d6.  v0:= temp @kind object;
  #L08a9d8.  return v0 @kind object;
}
procedure `a.r$a` `n`(`a.r` v3 @kind this) @signature `La/r;.n:()La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08a9ec.  v1:= new `a.r$a`;
  #L08a9f0.  call `<init>`(v1) @signature `La/r$a;.<init>:()V` @kind direct;
  #L08a9f6.  v0:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a9fa.  v1.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08a9fe.  call temp:= `d`(v3) @signature `La/r;.d:()Ljava/lang/String;` @kind virtual;
  #L08aa04.  v0:= temp @kind object;
  #L08aa06.  v1.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08aa0a.  call temp:= `e`(v3) @signature `La/r;.e:()Ljava/lang/String;` @kind virtual;
  #L08aa10.  v0:= temp @kind object;
  #L08aa12.  v1.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08aa16.  v0:= v3.`a.r.b` @type ^`java.lang.String` @kind object;
  #L08aa1a.  v1.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08aa1e.  v0:= v3.`a.r.c` @type ^`int`;
  #L08aa22.  v2:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08aa26.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L08aa2c.  v2:= temp;
  #L08aa2e.  if v0 == v2 then goto L08aa72;
  #L08aa32.  v0:= v3.`a.r.c` @type ^`int`;
  #L08aa36.  v1.`a.r$a.e` @type ^`int` := v0;
  #L08aa3a.  v0:= v1.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08aa3e.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L08aa44.  v0:= v1.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08aa48.  call temp:= `i`(v3) @signature `La/r;.i:()Ljava/util/List;` @kind virtual;
  #L08aa4e.  v2:= temp @kind object;
  #L08aa50.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L08aa56.  call temp:= `j`(v3) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L08aa5c.  v0:= temp @kind object;
  #L08aa5e.  call temp:= `e`(v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08aa64.  call temp:= `l`(v3) @signature `La/r;.l:()Ljava/lang/String;` @kind virtual;
  #L08aa6a.  v0:= temp @kind object;
  #L08aa6c.  v1.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L08aa70.  return v1 @kind object;
  #L08aa72.  v0:= -1I;
  #L08aa74.  goto L08aa36;
}
procedure `java.lang.String` `toString`(`a.r` v1 @kind this) @signature `La/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08aa88.  v0:= v1.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08aa8c.  return v0 @kind object;
}

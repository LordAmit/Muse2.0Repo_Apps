record `a.a.g.e` @kind class @AccessFlag PUBLIC {
}
global `a.a.g.e` `@@a.a.g.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@a.a.g.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/g/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0823ac.  call temp:= `a`() @signature `La/a/g/e;.a:()La/a/g/e;` @kind static;
  #L0823b2.  v0:= temp @kind object;
  #L0823b4.  `@@a.a.g.e.a` @type ^`a.a.g.e` := v0 @kind object;
  #L0823b8.  v0:= constclass @type ^`a.u` @kind object;
  #L0823bc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L0823c2.  v0:= temp @kind object;
  #L0823c4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L0823ca.  v0:= temp @kind object;
  #L0823cc.  `@@a.a.g.e.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L0823d0.  return @kind void;
}
procedure `void` `<init>`(`a.a.g.e` v0 @kind this) @signature `La/a/g/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0823e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0823ea.  return @kind void;
}
procedure `a.a.g.e` `a`() @signature `La/a/g/e;.a:()La/a/g/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L0823fc.  call temp:= `a`() @signature `La/a/g/a;.a:()La/a/g/e;` @kind static;
  #L082402.  v0:= temp @kind object;
  #L082404.  if v0 == 0 then goto L08240a;
  #L082408.  return v0 @kind object;
  #L08240a.  call temp:= `a`() @signature `La/a/g/b;.a:()La/a/g/b;` @kind static;
  #L082410.  v0:= temp @kind object;
  #L082412.  if v0 != 0 then goto L082408;
  #L082416.  call temp:= `a`() @signature `La/a/g/c;.a:()La/a/g/e;` @kind static;
  #L08241c.  v0:= temp @kind object;
  #L08241e.  if v0 != 0 then goto L082408;
  #L082422.  v0:= new `a.a.g.e`;
  #L082426.  call `<init>`(v0) @signature `La/a/g/e;.<init>:()V` @kind direct;
  #L08242c.  goto L082408;
}
procedure `java.util.List` `a`(`java.util.List` v5 @kind object) @signature `La/a/g/e;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L082440.  v2:= new `java.util.ArrayList`;
  #L082444.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08244a.  v0:= temp;
  #L08244c.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L082452.  v0:= 0I;
  #L082454.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08245a.  v3:= temp;
  #L08245c.  v1:= v0;
  #L08245e.  if v1 >= v3 then goto L08248e;
  #L082462.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L082468.  v0:= temp @kind object;
  #L08246a.  v0:= (`a.v`) v0 @kind object;
  #L08246e.  v4:= `@@a.v.a` @type ^`a.v` @kind object;
  #L082472.  if v0 != v4 then goto L08247e;
  #L082476.  v0:= v1 + 1;
  #L08247a.  v1:= v0;
  #L08247c.  goto L08245e;
  #L08247e.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L082484.  v0:= temp @kind object;
  #L082486.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08248c.  goto L082476;
  #L08248e.  return v2 @kind object;
}
procedure `a.a.g.e` `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0824a0.  v0:= `@@a.a.g.e.a` @type ^`a.a.g.e` @kind object;
  #L0824a4.  return v0 @kind object;
}
procedure `byte`[] `b`(`java.util.List` v5 @kind object) @signature `La/a/g/e;.b:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0824b8.  v2:= new `b.c`;
  #L0824bc.  call `<init>`(v2) @signature `Lb/c;.<init>:()V` @kind direct;
  #L0824c2.  v0:= 0I;
  #L0824c4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0824ca.  v3:= temp;
  #L0824cc.  v1:= v0;
  #L0824ce.  if v1 >= v3 then goto L082514;
  #L0824d2.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0824d8.  v0:= temp @kind object;
  #L0824da.  v0:= (`a.v`) v0 @kind object;
  #L0824de.  v4:= `@@a.v.a` @type ^`a.v` @kind object;
  #L0824e2.  if v0 != v4 then goto L0824ee;
  #L0824e6.  v0:= v1 + 1;
  #L0824ea.  v1:= v0;
  #L0824ec.  goto L0824ce;
  #L0824ee.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L0824f4.  v4:= temp @kind object;
  #L0824f6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0824fc.  v4:= temp;
  #L0824fe.  call temp:= `b`(v2, v4) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L082504.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L08250a.  v0:= temp @kind object;
  #L08250c.  call temp:= `a`(v2, v0) @signature `Lb/c;.a:(Ljava/lang/String;)Lb/c;` @kind virtual;
  #L082512.  goto L0824e6;
  #L082514.  call temp:= `q`(v2) @signature `Lb/c;.q:()[B` @kind virtual;
  #L08251a.  v0:= temp @kind object;
  #L08251c.  return v0 @kind object;
}
procedure `a.a.h.b` `a`(`a.a.g.e` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L082530.  v0:= new `a.a.h.a`;
  #L082534.  call temp:= `a`(v3) @signature `La/a/h/e;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/e;` @kind static;
  #L08253a.  v1:= temp @kind object;
  #L08253c.  call `<init>`(v0, v1) @signature `La/a/h/a;.<init>:(La/a/h/e;)V` @kind direct;
  #L082542.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`a.a.g.e` v2 @kind this, `java.lang.String` v3 @kind object) @signature `La/a/g/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L082554.  v0:= `@@a.a.g.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L082558.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L08255c.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L082562.  v0:= temp;
  #L082564.  if v0 == 0 then goto L082574;
  #L082568.  v0:= new `java.lang.Throwable`;
  #L08256c.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L082572.  return v0 @kind object;
  #L082574.  v0:= 0I;
  #L082576.  goto L082572;
}
procedure `java.lang.String` `a`(`a.a.g.e` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L082588.  v0:= 0I;
  #L08258a.  return v0 @kind object;
}
procedure `void` `a`(`a.a.g.e` v2 @kind this, `int` v3 , `java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `La/a/g/e;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08259c.  v0:= 5I;
  #L08259e.  if v3 != v0 then goto L0825b2;
  #L0825a2.  v0:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L0825a6.  v1:= `@@a.a.g.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L0825aa.  call `log`(v1, v0, v4, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L0825b0.  return @kind void;
  #L0825b2.  v0:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L0825b6.  goto L0825a6;
}
procedure `void` `a`(`a.a.g.e` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `La/a/g/e;.a:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0825c8.  if v4 != 0 then goto L0825f2;
  #L0825cc.  v0:= new `java.lang.StringBuilder`;
  #L0825d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0825d6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0825dc.  v0:= temp @kind object;
  #L0825de.  v1:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L0825e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0825e8.  v0:= temp @kind object;
  #L0825ea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0825f0.  v3:= temp @kind object;
  #L0825f2.  v0:= 5I;
  #L0825f4.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L0825f8.  call `a`(v2, v0, v3, v4) @signature `La/a/g/e;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L0825fe.  return @kind void;
}
procedure `void` `a`(`a.a.g.e` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `La/a/g/e;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L082610.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L082616.  return @kind void;
}
procedure `void` `a`(`a.a.g.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L082628.  return @kind void;
}
procedure `void` `b`(`a.a.g.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `La/a/g/e;.b:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L08263c.  return @kind void;
}
procedure `boolean` `b`(`a.a.g.e` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/a/g/e;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L082650.  v0:= 1I;
  #L082652.  return v0;
}

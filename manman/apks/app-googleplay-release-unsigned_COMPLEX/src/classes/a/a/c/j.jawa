record `a.a.c.j` @kind class @AccessFlag PUBLIC_FINAL extends `a.s` @kind interface {
  `a.u` `a.a.c.j.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.c.j.b` @AccessFlag PRIVATE_FINAL;
  `a.a.b.g` `a.a.c.j.c` @AccessFlag PRIVATE;
  `java.lang.Object` `a.a.c.j.d` @AccessFlag PRIVATE;
  `boolean` `a.a.c.j.e` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`a.a.c.j` v0 @kind this, `a.u` v1 @kind object, `boolean` v2 ) @signature `La/a/c/j;.<init>:(La/u;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L078d58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L078d5e.  v0.`a.a.c.j.a` @type ^`a.u` := v1 @kind object;
  #L078d62.  v0.`a.a.c.j.b` @type ^`boolean` := v2 @kind boolean;
  #L078d66.  return @kind void;
}
procedure `a.a` `a`(`a.a.c.j` v13 @kind this, `a.r` v14 @kind object) @signature `La/a/c/j;.a:(La/r;)La/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L078d78.  v7:= 0I;
  #L078d7a.  call temp:= `c`(v14) @signature `La/r;.c:()Z` @kind virtual;
  #L078d80.  v0:= temp;
  #L078d82.  if v0 == 0 then goto L078e1a;
  #L078d86.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078d8a.  call temp:= `j`(v0) @signature `La/u;.j:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L078d90.  v5:= temp @kind object;
  #L078d92.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078d96.  call temp:= `k`(v0) @signature `La/u;.k:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L078d9c.  v6:= temp @kind object;
  #L078d9e.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078da2.  call temp:= `l`(v0) @signature `La/u;.l:()La/g;` @kind virtual;
  #L078da8.  v7:= temp @kind object;
  #L078daa.  v0:= new `a.a`;
  #L078dae.  call temp:= `f`(v14) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L078db4.  v1:= temp @kind object;
  #L078db6.  call temp:= `g`(v14) @signature `La/r;.g:()I` @kind virtual;
  #L078dbc.  v2:= temp;
  #L078dbe.  v3:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078dc2.  call temp:= `h`(v3) @signature `La/u;.h:()La/o;` @kind virtual;
  #L078dc8.  v3:= temp @kind object;
  #L078dca.  v4:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078dce.  call temp:= `i`(v4) @signature `La/u;.i:()Ljavax/net/SocketFactory;` @kind virtual;
  #L078dd4.  v4:= temp @kind object;
  #L078dd6.  v8:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078dda.  call temp:= `n`(v8) @signature `La/u;.n:()La/b;` @kind virtual;
  #L078de0.  v8:= temp @kind object;
  #L078de2.  v9:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078de6.  call temp:= `d`(v9) @signature `La/u;.d:()Ljava/net/Proxy;` @kind virtual;
  #L078dec.  v9:= temp @kind object;
  #L078dee.  v10:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078df2.  call temp:= `t`(v10) @signature `La/u;.t:()Ljava/util/List;` @kind virtual;
  #L078df8.  v10:= temp @kind object;
  #L078dfa.  v11:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078dfe.  call temp:= `u`(v11) @signature `La/u;.u:()Ljava/util/List;` @kind virtual;
  #L078e04.  v11:= temp @kind object;
  #L078e06.  v12:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078e0a.  call temp:= `e`(v12) @signature `La/u;.e:()Ljava/net/ProxySelector;` @kind virtual;
  #L078e10.  v12:= temp @kind object;
  #L078e12.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `La/a;.<init>:(Ljava/lang/String;ILa/o;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;La/g;La/b;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L078e18.  return v0 @kind object;
  #L078e1a.  v6:= v7 @kind object;
  #L078e1c.  v5:= v7 @kind object;
  #L078e1e.  goto L078daa;
}
procedure `a.x` `a`(`a.a.c.j` v6 @kind this, `a.z` v7 @kind object) @signature `La/a/c/j;.a:(La/z;)La/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L078e30.  v1:= 0I;
  #L078e32.  if v7 != 0 then goto L078e42;
  #L078e36.  v0:= new `java.lang.IllegalStateException`;
  #L078e3a.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L078e40.  throw v0;
  #L078e42.  v0:= v6.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078e46.  call temp:= `b`(v0) @signature `La/a/b/g;.b:()La/a/b/c;` @kind virtual;
  #L078e4c.  v0:= temp @kind object;
  #L078e4e.  if v0 == 0 then goto L078e7a;
  #L078e52.  call temp:= `a`(v0) @signature `La/i;.a:()La/ab;` @kind interface;
  #L078e58.  v0:= temp @kind object;
  #L078e5a.  call temp:= `b`(v7) @signature `La/z;.b:()I` @kind virtual;
  #L078e60.  v2:= temp;
  #L078e62.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078e68.  v3:= temp @kind object;
  #L078e6a.  call temp:= `b`(v3) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L078e70.  v3:= temp @kind object;
  #L078e72.  goto L079044;
  #L078e78.  return v1 @kind object;
  #L078e7a.  v0:= v1 @kind object;
  #L078e7c.  goto L078e5a;
  #L078e7e.  if v0 == 0 then goto L078eaa;
  #L078e82.  call temp:= `b`(v0) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L078e88.  v1:= temp @kind object;
  #L078e8a.  call temp:= `type`(v1) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L078e90.  v1:= temp @kind object;
  #L078e92.  v2:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L078e96.  if v1 == v2 then goto L078eb8;
  #L078e9a.  v0:= new `java.net.ProtocolException`;
  #L078e9e.  v1:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L078ea2.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L078ea8.  throw v0;
  #L078eaa.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078eae.  call temp:= `d`(v1) @signature `La/u;.d:()Ljava/net/Proxy;` @kind virtual;
  #L078eb4.  v1:= temp @kind object;
  #L078eb6.  goto L078e8a;
  #L078eb8.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078ebc.  call temp:= `n`(v1) @signature `La/u;.n:()La/b;` @kind virtual;
  #L078ec2.  v1:= temp @kind object;
  #L078ec4.  call temp:= `a`(v1, v0, v7) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L078eca.  v1:= temp @kind object;
  #L078ecc.  goto L078e78;
  #L078ece.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078ed2.  call temp:= `m`(v1) @signature `La/u;.m:()La/b;` @kind virtual;
  #L078ed8.  v1:= temp @kind object;
  #L078eda.  call temp:= `a`(v1, v0, v7) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L078ee0.  v1:= temp @kind object;
  #L078ee2.  goto L078e78;
  #L078ee4.  v0:= "GET" @kind object;
  #L078ee8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L078eee.  v0:= temp;
  #L078ef0.  if v0 != 0 then goto L078f04;
  #L078ef4.  v0:= "HEAD" @kind object;
  #L078ef8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L078efe.  v0:= temp;
  #L078f00.  if v0 == 0 then goto L078e78;
  #L078f04.  v0:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078f08.  call temp:= `q`(v0) @signature `La/u;.q:()Z` @kind virtual;
  #L078f0e.  v0:= temp;
  #L078f10.  if v0 == 0 then goto L078e78;
  #L078f14.  v0:= "Location" @kind object;
  #L078f18.  call temp:= `a`(v7, v0) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L078f1e.  v0:= temp @kind object;
  #L078f20.  if v0 == 0 then goto L078e78;
  #L078f24.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078f2a.  v2:= temp @kind object;
  #L078f2c.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078f32.  v2:= temp @kind object;
  #L078f34.  call temp:= `c`(v2, v0) @signature `La/r;.c:(Ljava/lang/String;)La/r;` @kind virtual;
  #L078f3a.  v0:= temp @kind object;
  #L078f3c.  if v0 == 0 then goto L078e78;
  #L078f40.  call temp:= `b`(v0) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L078f46.  v2:= temp @kind object;
  #L078f48.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078f4e.  v4:= temp @kind object;
  #L078f50.  call temp:= `a`(v4) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078f56.  v4:= temp @kind object;
  #L078f58.  call temp:= `b`(v4) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L078f5e.  v4:= temp @kind object;
  #L078f60.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L078f66.  v2:= temp;
  #L078f68.  if v2 != 0 then goto L078f7c;
  #L078f6c.  v2:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078f70.  call temp:= `p`(v2) @signature `La/u;.p:()Z` @kind virtual;
  #L078f76.  v2:= temp;
  #L078f78.  if v2 == 0 then goto L078e78;
  #L078f7c.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078f82.  v2:= temp @kind object;
  #L078f84.  call temp:= `e`(v2) @signature `La/x;.e:()La/x$a;` @kind virtual;
  #L078f8a.  v2:= temp @kind object;
  #L078f8c.  call temp:= `c`(v3) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L078f92.  v4:= temp;
  #L078f94.  if v4 == 0 then goto L078fd8;
  #L078f98.  call temp:= `d`(v3) @signature `La/a/c/f;.d:(Ljava/lang/String;)Z` @kind static;
  #L078f9e.  v4:= temp;
  #L078fa0.  call temp:= `e`(v3) @signature `La/a/c/f;.e:(Ljava/lang/String;)Z` @kind static;
  #L078fa6.  v5:= temp;
  #L078fa8.  if v5 == 0 then goto L079002;
  #L078fac.  v3:= "GET" @kind object;
  #L078fb0.  call temp:= `a`(v2, v3, v1) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @kind virtual;
  #L078fb6.  if v4 != 0 then goto L078fd8;
  #L078fba.  v1:= "Transfer-Encoding" @kind object;
  #L078fbe.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L078fc4.  v1:= "Content-Length" @kind object;
  #L078fc8.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L078fce.  v1:= "Content-Type" @kind object;
  #L078fd2.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L078fd8.  call temp:= `a`(v6, v7, v0) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @kind direct;
  #L078fde.  v1:= temp;
  #L078fe0.  if v1 != 0 then goto L078fee;
  #L078fe4.  v1:= "Authorization" @kind object;
  #L078fe8.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L078fee.  call temp:= `a`(v2, v0) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L078ff4.  v0:= temp @kind object;
  #L078ff6.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L078ffc.  v1:= temp @kind object;
  #L078ffe.  goto L078e78;
  #L079002.  if v4 == 0 then goto L079016;
  #L079006.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07900c.  v1:= temp @kind object;
  #L07900e.  call temp:= `d`(v1) @signature `La/x;.d:()La/y;` @kind virtual;
  #L079014.  v1:= temp @kind object;
  #L079016.  call temp:= `a`(v2, v3, v1) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @kind virtual;
  #L07901c.  goto L078fb6;
  #L07901e.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L079024.  v0:= temp @kind object;
  #L079026.  call temp:= `d`(v0) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07902c.  v0:= temp @kind object;
  #L07902e.  v0:= instanceof @variable v0 @type ^`a.a.c.l` @kind boolean;
  #L079032.  if v0 != 0 then goto L078e78;
  #L079036.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07903c.  v1:= temp @kind object;
  #L07903e.  goto L078e78;
  #L079042.  
  #L079044.  switch v2
                  | 300 => goto L078f04
                  | 301 => goto L078f04
                  | 302 => goto L078f04
                  | 303 => goto L078f04
                  | 307 => goto L078ee4
                  | 308 => goto L078ee4
                  | 401 => goto L078ece
                  | 407 => goto L078e7e
                  | 408 => goto L07901e
                  | else => goto L078e78;
}
procedure `boolean` `a`(`a.a.c.j` v3 @kind this, `a.z` v4 @kind object, `a.r` v5 @kind object) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L0790a0.  call temp:= `a`(v4) @signature `La/z;.a:()La/x;` @kind virtual;
  #L0790a6.  v0:= temp @kind object;
  #L0790a8.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L0790ae.  v0:= temp @kind object;
  #L0790b0.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0790b6.  v1:= temp @kind object;
  #L0790b8.  call temp:= `f`(v5) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0790be.  v2:= temp @kind object;
  #L0790c0.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0790c6.  v1:= temp;
  #L0790c8.  if v1 == 0 then goto L079100;
  #L0790cc.  call temp:= `g`(v0) @signature `La/r;.g:()I` @kind virtual;
  #L0790d2.  v1:= temp;
  #L0790d4.  call temp:= `g`(v5) @signature `La/r;.g:()I` @kind virtual;
  #L0790da.  v2:= temp;
  #L0790dc.  if v1 != v2 then goto L079100;
  #L0790e0.  call temp:= `b`(v0) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L0790e6.  v0:= temp @kind object;
  #L0790e8.  call temp:= `b`(v5) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L0790ee.  v1:= temp @kind object;
  #L0790f0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0790f6.  v0:= temp;
  #L0790f8.  if v0 == 0 then goto L079100;
  #L0790fc.  v0:= 1I;
  #L0790fe.  return v0;
  #L079100.  v0:= 0I;
  #L079102.  goto L0790fe;
}
procedure `boolean` `a`(`a.a.c.j` v3 @kind this, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `La/a/c/j;.a:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L079114.  v0:= 1I;
  #L079116.  v1:= 0I;
  #L079118.  v2:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L07911c.  if v2 == 0 then goto L079122;
  #L079120.  return v1;
  #L079122.  v2:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L079126.  if v2 == 0 then goto L07913e;
  #L07912a.  v2:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L07912e.  if v2 == 0 then goto L07913a;
  #L079132.  if v5 != 0 then goto L07913a;
  #L079136.  v1:= v0;
  #L079138.  goto L079120;
  #L07913a.  v0:= v1;
  #L07913c.  goto L079136;
  #L07913e.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L079142.  if v2 == 0 then goto L079156;
  #L079146.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L07914c.  v2:= temp @kind object;
  #L07914e.  v2:= instanceof @variable v2 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L079152.  if v2 != 0 then goto L079120;
  #L079156.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L07915a.  if v2 != 0 then goto L079120;
  #L07915e.  v1:= v0;
  #L079160.  goto L079120;
}
procedure `boolean` `a`(`a.a.c.j` v2 @kind this, `java.io.IOException` v3 @kind object, `boolean` v4 , `a.x` v5 @kind object) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L079174.  v0:= 0I;
  #L079176.  v1:= v2.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07917a.  call `a`(v1, v3) @signature `La/a/b/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L079180.  v1:= v2.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L079184.  call temp:= `r`(v1) @signature `La/u;.r:()Z` @kind virtual;
  #L07918a.  v1:= temp;
  #L07918c.  if v1 != 0 then goto L079192;
  #L079190.  return v0;
  #L079192.  if v4 == 0 then goto L0791a6;
  #L079196.  call temp:= `d`(v5) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07919c.  v1:= temp @kind object;
  #L07919e.  v1:= instanceof @variable v1 @type ^`a.a.c.l` @kind boolean;
  #L0791a2.  if v1 != 0 then goto L079190;
  #L0791a6.  call temp:= `a`(v2, v3, v4) @signature `La/a/c/j;.a:(Ljava/io/IOException;Z)Z` @kind direct;
  #L0791ac.  v1:= temp;
  #L0791ae.  if v1 == 0 then goto L079190;
  #L0791b2.  v1:= v2.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L0791b6.  call temp:= `e`(v1) @signature `La/a/b/g;.e:()Z` @kind virtual;
  #L0791bc.  v1:= temp;
  #L0791be.  if v1 == 0 then goto L079190;
  #L0791c2.  v0:= 1I;
  #L0791c4.  goto L079190;
}
procedure `a.z` `a`(`a.a.c.j` v10 @kind this, `a.s$a` v11 @kind object) @signature `La/a/c/j;.a:(La/s$a;)La/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L0791d8.  v5:= 0I;
  #L0791da.  v3:= 0I;
  #L0791dc.  call temp:= `a`(v11) @signature `La/s$a;.a:()La/x;` @kind interface;
  #L0791e2.  v1:= temp @kind object;
  #L0791e4.  v2:= new `a.a.b.g`;
  #L0791e8.  v4:= v10.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L0791ec.  call temp:= `o`(v4) @signature `La/u;.o:()La/j;` @kind virtual;
  #L0791f2.  v4:= temp @kind object;
  #L0791f4.  call temp:= `a`(v1) @signature `La/x;.a:()La/r;` @kind virtual;
  #L0791fa.  v6:= temp @kind object;
  #L0791fc.  call temp:= `a`(v10, v6) @signature `La/a/c/j;.a:(La/r;)La/a;` @kind direct;
  #L079202.  v6:= temp @kind object;
  #L079204.  v7:= v10.`a.a.c.j.d` @type ^`java.lang.Object` @kind object;
  #L079208.  call `<init>`(v2, v4, v6, v7) @signature `La/a/b/g;.<init>:(La/j;La/a;Ljava/lang/Object;)V` @kind direct;
  #L07920e.  v10.`a.a.c.j.c` @type ^`a.a.b.g` := v2 @kind object;
  #L079212.  v2:= v3 @kind object;
  #L079214.  v4:= v5;
  #L079216.  v6:= v1 @kind object;
  #L079218.  v1:= v10.`a.a.c.j.e` @type ^`boolean` @kind boolean;
  #L07921c.  if v1 == 0 then goto L07923a;
  #L079220.  v1:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079224.  call `c`(v1) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07922a.  v1:= new `java.io.IOException`;
  #L07922e.  v2:= "Canceled" @kind object;
  #L079232.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L079238.  throw v1;
  #Try_start0.  
  #L07923a.  v0:= v11 @kind object;
  #L07923c.  v0:= (`a.a.c.g`) v0 @kind object;
  #L079240.  v1:= v0 @kind object;
  #L079242.  v7:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079246.  v8:= 0I;
  #L079248.  v9:= 0I;
  #L07924a.  call temp:= `a`(v1, v6, v7, v8, v9) @signature `La/a/c/g;.a:(La/x;La/a/b/g;La/a/c/c;La/i;)La/z;` @kind virtual;
  #Try_end0.  
  #L079250.  v1:= temp @kind object;
  #L079252.  if v2 == 0 then goto L079286;
  #L079256.  call temp:= `g`(v1) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L07925c.  v1:= temp @kind object;
  #L07925e.  call temp:= `g`(v2) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L079264.  v2:= temp @kind object;
  #L079266.  call temp:= `a`(v2, v3) @signature `La/z$a;.a:(La/aa;)La/z$a;` @kind virtual;
  #L07926c.  v2:= temp @kind object;
  #L07926e.  call temp:= `a`(v2) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L079274.  v2:= temp @kind object;
  #L079276.  call temp:= `c`(v1, v2) @signature `La/z$a;.c:(La/z;)La/z$a;` @kind virtual;
  #L07927c.  v1:= temp @kind object;
  #L07927e.  call temp:= `a`(v1) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L079284.  v1:= temp @kind object;
  #L079286.  call temp:= `a`(v10, v1) @signature `La/a/c/j;.a:(La/z;)La/x;` @kind direct;
  #L07928c.  v6:= temp @kind object;
  #L07928e.  if v6 != 0 then goto L0792fe;
  #L079292.  v2:= v10.`a.a.c.j.b` @type ^`boolean` @kind boolean;
  #L079296.  if v2 != 0 then goto L0792a4;
  #L07929a.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07929e.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L0792a4.  return v1 @kind object;
  #L0792a6.  v1:= Exception @type ^`a.a.b.e` @kind object;
  #Try_start1.  
  #L0792a8.  call temp:= `a`(v1) @signature `La/a/b/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L0792ae.  v7:= temp @kind object;
  #L0792b0.  v8:= 0I;
  #L0792b2.  call temp:= `a`(v10, v7, v8, v6) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @kind direct;
  #L0792b8.  v7:= temp;
  #L0792ba.  if v7 != 0 then goto L079218;
  #L0792be.  call temp:= `a`(v1) @signature `La/a/b/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L0792c4.  v1:= temp @kind object;
  #L0792c6.  throw v1;
  #Try_end1.  
  #L0792c8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0792ca.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L0792ce.  call `a`(v2, v3) @signature `La/a/b/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L0792d4.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L0792d8.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L0792de.  throw v1;
  #L0792e0.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L0792e2.  v7:= instanceof @variable v1 @type ^`a.a.e.a` @kind boolean;
  #L0792e6.  if v7 != 0 then goto L0792fa;
  #L0792ea.  v7:= 1I;
  #L0792ec.  call temp:= `a`(v10, v1, v7, v6) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @kind direct;
  #L0792f2.  v7:= temp;
  #L0792f4.  if v7 != 0 then goto L079218;
  #L0792f8.  throw v1;
  #Try_end2.  
  #L0792fa.  v7:= v5;
  #L0792fc.  goto L0792ec;
  #L0792fe.  call temp:= `f`(v1) @signature `La/z;.f:()La/aa;` @kind virtual;
  #L079304.  v2:= temp @kind object;
  #L079306.  call `a`(v2) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07930c.  v2:= v4 + 1;
  #L079310.  v4:= 20I;
  #L079314.  if v2 <= v4 then goto L079354;
  #L079318.  v1:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07931c.  call `c`(v1) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L079322.  v1:= new `java.net.ProtocolException`;
  #L079326.  v3:= new `java.lang.StringBuilder`;
  #L07932a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L079330.  v4:= "Too many follow-up requests: " @kind object;
  #L079334.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07933a.  v3:= temp @kind object;
  #L07933c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L079342.  v2:= temp @kind object;
  #L079344.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07934a.  v2:= temp @kind object;
  #L07934c.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L079352.  throw v1;
  #L079354.  call temp:= `d`(v6) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07935a.  v4:= temp @kind object;
  #L07935c.  v4:= instanceof @variable v4 @type ^`a.a.c.l` @kind boolean;
  #L079360.  if v4 == 0 then goto L079386;
  #L079364.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L079368.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L07936e.  v2:= new `java.net.HttpRetryException`;
  #L079372.  v3:= "Cannot retry streamed HTTP body" @kind object;
  #L079376.  call temp:= `b`(v1) @signature `La/z;.b:()I` @kind virtual;
  #L07937c.  v1:= temp;
  #L07937e.  call `<init>`(v2, v3, v1) @signature `Ljava/net/HttpRetryException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L079384.  throw v2;
  #L079386.  call temp:= `a`(v6) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07938c.  v4:= temp @kind object;
  #L07938e.  call temp:= `a`(v10, v1, v4) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @kind direct;
  #L079394.  v4:= temp;
  #L079396.  if v4 != 0 then goto L0793da;
  #L07939a.  v4:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L07939e.  call `c`(v4) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L0793a4.  v4:= new `a.a.b.g`;
  #L0793a8.  v7:= v10.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L0793ac.  call temp:= `o`(v7) @signature `La/u;.o:()La/j;` @kind virtual;
  #L0793b2.  v7:= temp @kind object;
  #L0793b4.  call temp:= `a`(v6) @signature `La/x;.a:()La/r;` @kind virtual;
  #L0793ba.  v8:= temp @kind object;
  #L0793bc.  call temp:= `a`(v10, v8) @signature `La/a/c/j;.a:(La/r;)La/a;` @kind direct;
  #L0793c2.  v8:= temp @kind object;
  #L0793c4.  v9:= v10.`a.a.c.j.d` @type ^`java.lang.Object` @kind object;
  #L0793c8.  call `<init>`(v4, v7, v8, v9) @signature `La/a/b/g;.<init>:(La/j;La/a;Ljava/lang/Object;)V` @kind direct;
  #L0793ce.  v10.`a.a.c.j.c` @type ^`a.a.b.g` := v4 @kind object;
  #L0793d2.  v4:= v2;
  #L0793d4.  v2:= v1 @kind object;
  #L0793d6.  goto L079218;
  #L0793da.  v4:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L0793de.  call temp:= `a`(v4) @signature `La/a/b/g;.a:()La/a/c/c;` @kind virtual;
  #L0793e4.  v4:= temp @kind object;
  #L0793e6.  if v4 == 0 then goto L0793d2;
  #L0793ea.  v2:= new `java.lang.IllegalStateException`;
  #L0793ee.  v3:= new `java.lang.StringBuilder`;
  #L0793f2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0793f8.  v4:= "Closing the body of " @kind object;
  #L0793fc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079402.  v3:= temp @kind object;
  #L079404.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07940a.  v1:= temp @kind object;
  #L07940c.  v3:= " didn't close its backing stream. Bad interceptor?" @kind object;
  #L079410.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079416.  v1:= temp @kind object;
  #L079418.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07941e.  v1:= temp @kind object;
  #L079420.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L079426.  throw v2;
  catch `a.a.b.e` @[Try_start0..Try_end0] goto L0792a6;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L0792e0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0792c8;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0792c8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L0792c8;
}
procedure `void` `a`(`a.a.c.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `La/a/c/j;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L07945c.  v0.`a.a.c.j.d` @type ^`java.lang.Object` := v1 @kind object;
  #L079460.  return @kind void;
}
procedure `boolean` `a`(`a.a.c.j` v1 @kind this) @signature `La/a/c/j;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L079474.  v0:= v1.`a.a.c.j.e` @type ^`boolean` @kind boolean;
  #L079478.  return v0;
}

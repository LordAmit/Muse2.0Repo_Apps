record `a.a.c` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@a.a.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@a.a.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.aa` `@@a.a.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.y` `@@a.a.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@a.a.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.c.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.c.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.c.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.c.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@a.a.c.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L079740.  v2:= 0I;
  #L079742.  v1:= 0I;
  #L079744.  v0:= new `byte`[v1];
  #L079748.  `@@a.a.c.a` @type ^`byte`[] := v0 @kind object;
  #L07974c.  v0:= new `java.lang.String`[v1];
  #L079750.  `@@a.a.c.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L079754.  v0:= `@@a.a.c.a` @type ^`byte`[] @kind object;
  #L079758.  call temp:= `a`(v2, v0) @signature `La/aa;.a:(La/t;[B)La/aa;` @kind static;
  #L07975e.  v0:= temp @kind object;
  #L079760.  `@@a.a.c.c` @type ^`a.aa` := v0 @kind object;
  #L079764.  v0:= `@@a.a.c.a` @type ^`byte`[] @kind object;
  #L079768.  call temp:= `a`(v2, v0) @signature `La/y;.a:(La/t;[B)La/y;` @kind static;
  #L07976e.  v0:= temp @kind object;
  #L079770.  `@@a.a.c.d` @type ^`a.y` := v0 @kind object;
  #L079774.  v0:= "efbbbf" @kind object;
  #L079778.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07977e.  v0:= temp @kind object;
  #L079780.  `@@a.a.c.g` @type ^`b.f` := v0 @kind object;
  #L079784.  v0:= "feff" @kind object;
  #L079788.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07978e.  v0:= temp @kind object;
  #L079790.  `@@a.a.c.h` @type ^`b.f` := v0 @kind object;
  #L079794.  v0:= "fffe" @kind object;
  #L079798.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07979e.  v0:= temp @kind object;
  #L0797a0.  `@@a.a.c.i` @type ^`b.f` := v0 @kind object;
  #L0797a4.  v0:= "0000ffff" @kind object;
  #L0797a8.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L0797ae.  v0:= temp @kind object;
  #L0797b0.  `@@a.a.c.j` @type ^`b.f` := v0 @kind object;
  #L0797b4.  v0:= "ffff0000" @kind object;
  #L0797b8.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L0797be.  v0:= temp @kind object;
  #L0797c0.  `@@a.a.c.k` @type ^`b.f` := v0 @kind object;
  #L0797c4.  v0:= "UTF-8" @kind object;
  #L0797c8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L0797ce.  v0:= temp @kind object;
  #L0797d0.  `@@a.a.c.e` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L0797d4.  v0:= "UTF-16BE" @kind object;
  #L0797d8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L0797de.  v0:= temp @kind object;
  #L0797e0.  `@@a.a.c.l` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L0797e4.  v0:= "UTF-16LE" @kind object;
  #L0797e8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L0797ee.  v0:= temp @kind object;
  #L0797f0.  `@@a.a.c.m` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L0797f4.  v0:= "UTF-32BE" @kind object;
  #L0797f8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L0797fe.  v0:= temp @kind object;
  #L079800.  `@@a.a.c.n` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L079804.  v0:= "UTF-32LE" @kind object;
  #L079808.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L07980e.  v0:= temp @kind object;
  #L079810.  `@@a.a.c.o` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L079814.  v0:= "GMT" @kind object;
  #L079818.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L07981e.  v0:= temp @kind object;
  #L079820.  `@@a.a.c.f` @type ^`java.util.TimeZone` := v0 @kind object;
  #L079824.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L079828.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L07982e.  v0:= temp @kind object;
  #L079830.  `@@a.a.c.p` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L079834.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `La/a/c;.a:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079848.  v0:= v3;
  #L07984a.  if v0 >= v4 then goto L07985e;
  #L07984e.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L079854.  v1:= temp;
  #L079856.  goto L079868;
  #L07985c.  v4:= v0;
  #L07985e.  return v4;
  #L079860.  v0:= v0 + 1;
  #L079864.  goto L07984a;
  #L079866.  
  #L079868.  switch v1
                  | 9 => goto L079860
                  | 10 => goto L079860
                  | 12 => goto L079860
                  | 13 => goto L079860
                  | 32 => goto L079860
                  | else => goto L07985c;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `char` v5 ) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0798a4.  v0:= v3;
  #L0798a6.  if v0 >= v4 then goto L0798b8;
  #L0798aa.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0798b0.  v1:= temp;
  #L0798b2.  if v1 != v5 then goto L0798ba;
  #L0798b6.  v4:= v0;
  #L0798b8.  return v4;
  #L0798ba.  v0:= v0 + 1;
  #L0798be.  goto L0798a6;
}
procedure `int` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `java.lang.String` v6 @kind object) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0798d0.  v0:= v4;
  #L0798d2.  if v0 >= v5 then goto L0798ee;
  #L0798d6.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0798dc.  v1:= temp;
  #L0798de.  call temp:= `indexOf`(v6, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L0798e4.  v1:= temp;
  #L0798e6.  v2:= -1I;
  #L0798e8.  if v1 == v2 then goto L0798f0;
  #L0798ec.  v5:= v0;
  #L0798ee.  return v5;
  #L0798f0.  v0:= v0 + 1;
  #L0798f4.  goto L0798d2;
}
procedure `int` `a`(`java.lang.Object`[] v3 @kind object, `java.lang.Object` v4 @kind object) @signature `La/a/c;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L079908.  v0:= 0I;
  #L07990a.  v1:= length @variable v3;
  #L07990c.  if v0 >= v1 then goto L079928;
  #L079910.  v2:= v3[v0] @kind object;
  #L079914.  call temp:= `a`(v2, v4) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L07991a.  v2:= temp;
  #L07991c.  if v2 == 0 then goto L079922;
  #L079920.  return v0;
  #L079922.  v0:= v0 + 1;
  #L079926.  goto L07990c;
  #L079928.  v0:= -1I;
  #L07992a.  goto L079920;
}
procedure `java.lang.String` `a`(`a.r` v3 @kind object, `boolean` v4 ) @signature `La/a/c;.a:(La/r;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L07993c.  call temp:= `f`(v3) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L079942.  v0:= temp @kind object;
  #L079944.  v1:= ":" @kind object;
  #L079948.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L07994e.  v0:= temp;
  #L079950.  if v0 == 0 then goto L0799e6;
  #L079954.  v0:= new `java.lang.StringBuilder`;
  #L079958.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07995e.  v1:= "[" @kind object;
  #L079962.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079968.  v0:= temp @kind object;
  #L07996a.  call temp:= `f`(v3) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L079970.  v1:= temp @kind object;
  #L079972.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079978.  v0:= temp @kind object;
  #L07997a.  v1:= "]" @kind object;
  #L07997e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079984.  v0:= temp @kind object;
  #L079986.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07998c.  v0:= temp @kind object;
  #L07998e.  if v4 != 0 then goto L0799ae;
  #L079992.  call temp:= `g`(v3) @signature `La/r;.g:()I` @kind virtual;
  #L079998.  v1:= temp;
  #L07999a.  call temp:= `b`(v3) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L0799a0.  v2:= temp @kind object;
  #L0799a2.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L0799a8.  v2:= temp;
  #L0799aa.  if v1 == v2 then goto L0799e4;
  #L0799ae.  v1:= new `java.lang.StringBuilder`;
  #L0799b2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0799b8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0799be.  v0:= temp @kind object;
  #L0799c0.  v1:= ":" @kind object;
  #L0799c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0799ca.  v0:= temp @kind object;
  #L0799cc.  call temp:= `g`(v3) @signature `La/r;.g:()I` @kind virtual;
  #L0799d2.  v1:= temp;
  #L0799d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0799da.  v0:= temp @kind object;
  #L0799dc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0799e2.  v0:= temp @kind object;
  #L0799e4.  return v0 @kind object;
  #L0799e6.  call temp:= `f`(v3) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0799ec.  v0:= temp @kind object;
  #L0799ee.  goto L07998e;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object) @signature `La/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L079a00.  v0:= 0I;
  #Try_start0.  
  #L079a02.  call temp:= `toASCII`(v3) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L079a08.  v1:= temp @kind object;
  #L079a0a.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L079a0e.  call temp:= `toLowerCase`(v1, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L079a14.  v1:= temp @kind object;
  #L079a16.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L079a1c.  v2:= temp;
  #L079a1e.  if v2 == 0 then goto L079a24;
  #L079a22.  return v0 @kind object;
  #L079a24.  call temp:= `d`(v1) @signature `La/a/c;.d:(Ljava/lang/String;)Z` @kind static;
  #Try_end0.  
  #L079a2a.  v2:= temp;
  #L079a2c.  if v2 != 0 then goto L079a22;
  #L079a30.  v0:= v1 @kind object;
  #L079a32.  goto L079a22;
  #L079a34.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L079a36.  goto L079a22;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L079a34;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079a58.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L079a5c.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L079a62.  v0:= temp @kind object;
  #L079a64.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `a`(`b.e` v4 @kind object, `java.nio.charset.Charset` v5 @kind object) @signature `La/a/c;.a:(Lb/e;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L079a78.  v2:= 0L;
  #L079a7c.  v0:= `@@a.a.c.g` @type ^`b.f` @kind object;
  #L079a80.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L079a86.  v0:= temp;
  #L079a88.  if v0 == 0 then goto L079aa6;
  #L079a8c.  v0:= `@@a.a.c.g` @type ^`b.f` @kind object;
  #L079a90.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L079a96.  v0:= temp;
  #L079a98.  v0:= (`long`) v0 @kind i2l;
  #L079a9a.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L079aa0.  v5:= `@@a.a.c.e` @type ^`java.nio.charset.Charset` @kind object;
  #L079aa4.  return v5 @kind object;
  #L079aa6.  v0:= `@@a.a.c.h` @type ^`b.f` @kind object;
  #L079aaa.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L079ab0.  v0:= temp;
  #L079ab2.  if v0 == 0 then goto L079ad0;
  #L079ab6.  v0:= `@@a.a.c.h` @type ^`b.f` @kind object;
  #L079aba.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L079ac0.  v0:= temp;
  #L079ac2.  v0:= (`long`) v0 @kind i2l;
  #L079ac4.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L079aca.  v5:= `@@a.a.c.l` @type ^`java.nio.charset.Charset` @kind object;
  #L079ace.  goto L079aa4;
  #L079ad0.  v0:= `@@a.a.c.i` @type ^`b.f` @kind object;
  #L079ad4.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L079ada.  v0:= temp;
  #L079adc.  if v0 == 0 then goto L079afa;
  #L079ae0.  v0:= `@@a.a.c.i` @type ^`b.f` @kind object;
  #L079ae4.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L079aea.  v0:= temp;
  #L079aec.  v0:= (`long`) v0 @kind i2l;
  #L079aee.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L079af4.  v5:= `@@a.a.c.m` @type ^`java.nio.charset.Charset` @kind object;
  #L079af8.  goto L079aa4;
  #L079afa.  v0:= `@@a.a.c.j` @type ^`b.f` @kind object;
  #L079afe.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L079b04.  v0:= temp;
  #L079b06.  if v0 == 0 then goto L079b24;
  #L079b0a.  v0:= `@@a.a.c.j` @type ^`b.f` @kind object;
  #L079b0e.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L079b14.  v0:= temp;
  #L079b16.  v0:= (`long`) v0 @kind i2l;
  #L079b18.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L079b1e.  v5:= `@@a.a.c.n` @type ^`java.nio.charset.Charset` @kind object;
  #L079b22.  goto L079aa4;
  #L079b24.  v0:= `@@a.a.c.k` @type ^`b.f` @kind object;
  #L079b28.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L079b2e.  v0:= temp;
  #L079b30.  if v0 == 0 then goto L079aa4;
  #L079b34.  v0:= `@@a.a.c.k` @type ^`b.f` @kind object;
  #L079b38.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L079b3e.  v0:= temp;
  #L079b40.  v0:= (`long`) v0 @kind i2l;
  #L079b42.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L079b48.  v5:= `@@a.a.c.o` @type ^`java.nio.charset.Charset` @kind object;
  #L079b4c.  goto L079aa4;
}
procedure `java.util.List` `a`(`java.util.List` v1 @kind object) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079b60.  v0:= new `java.util.ArrayList`;
  #L079b64.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L079b6a.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L079b70.  v0:= temp @kind object;
  #L079b72.  return v0 @kind object;
}
procedure `java.util.List` `a`(`java.lang.Object`[] v1 @kind object) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079b84.  call temp:= `clone`(v1) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L079b8a.  v0:= temp @kind object;
  #L079b8c.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L079b90.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L079b96.  v0:= temp @kind object;
  #L079b98.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L079b9e.  v0:= temp @kind object;
  #L079ba0.  return v0 @kind object;
}
procedure `java.util.List` `a`(`java.lang.Object`[] v9 @kind object, `java.lang.Object`[] v10 @kind object) @signature `La/a/c;.a:([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L079bb4.  v1:= 0I;
  #L079bb6.  v3:= new `java.util.ArrayList`;
  #L079bba.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L079bc0.  v4:= length @variable v9;
  #L079bc2.  v2:= v1;
  #L079bc4.  if v2 >= v4 then goto L079bf8;
  #L079bc8.  v5:= v9[v2] @kind object;
  #L079bcc.  v6:= length @variable v10;
  #L079bce.  v0:= v1;
  #L079bd0.  if v0 >= v6 then goto L079bea;
  #L079bd4.  v7:= v10[v0] @kind object;
  #L079bd8.  call temp:= `equals`(v5, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L079bde.  v8:= temp;
  #L079be0.  if v8 == 0 then goto L079bf2;
  #L079be4.  call temp:= `add`(v3, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L079bea.  v0:= v2 + 1;
  #L079bee.  v2:= v0;
  #L079bf0.  goto L079bc4;
  #L079bf2.  v0:= v0 + 1;
  #L079bf6.  goto L079bd0;
  #L079bf8.  return v3 @kind object;
}
procedure `java.util.concurrent.ThreadFactory` `a`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `La/a/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079c0c.  v0:= new `a.a.c$1`;
  #L079c10.  call `<init>`(v0, v1, v2) @signature `La/a/c$1;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L079c16.  return v0 @kind object;
}
procedure `void` `a`(`long` v4 , `long` v6 , `long` v8 ) @signature `La/a/c;.a:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L079c28.  v0:= v6 ^| v8 @kind long;
  #L079c2c.  v2:= 0L;
  #L079c30.  v0:= lcmp(v0, v2);
  #L079c34.  if v0 < 0 then goto L079c4c;
  #L079c38.  v0:= lcmp(v6, v4);
  #L079c3c.  if v0 > 0 then goto L079c4c;
  #L079c40.  v0:= v4 - v6 @kind long;
  #L079c44.  v0:= lcmp(v0, v8);
  #L079c48.  if v0 >= 0 then goto L079c58;
  #L079c4c.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L079c50.  call `<init>`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L079c56.  throw v0;
  #L079c58.  return @kind void;
}
procedure `void` `a`(`java.io.Closeable` v1 @kind object) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079c6c.  if v1 == 0 then goto L079c76;
  #Try_start0.  
  #L079c70.  call `close`(v1) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #Try_end0.  
  #L079c76.  return @kind void;
  #L079c78.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L079c7a.  throw v0;
  #L079c7c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L079c7e.  goto L079c76;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L079c78;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L079c7c;
}
procedure `void` `a`(`java.net.Socket` v2 @kind object) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079ca0.  if v2 == 0 then goto L079caa;
  #Try_start0.  
  #L079ca4.  call `close`(v2) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end0.  
  #L079caa.  return @kind void;
  #L079cac.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L079cae.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L079cb4.  v1:= temp;
  #L079cb6.  if v1 != 0 then goto L079caa;
  #L079cba.  throw v0;
  #L079cbc.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L079cbe.  throw v0;
  #L079cc0.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L079cc2.  goto L079caa;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L079cac;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L079cbc;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L079cc0;
}
procedure `boolean` `a`(`b.r` v1 @kind object, `int` v2 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `La/a/c;.a:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #Try_start0.  
  #L079ce8.  call temp:= `b`(v1, v2, v3) @signature `La/a/c;.b:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #Try_end0.  
  #L079cee.  v0:= temp;
  #L079cf0.  return v0;
  #L079cf2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L079cf4.  v0:= 0I;
  #L079cf6.  goto L079cf0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L079cf2;
}
procedure `boolean` `a`(`java.lang.AssertionError` v2 @kind object) @signature `La/a/c;.a:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079d18.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L079d1e.  v0:= temp @kind object;
  #L079d20.  if v0 == 0 then goto L079d4c;
  #L079d24.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L079d2a.  v0:= temp @kind object;
  #L079d2c.  if v0 == 0 then goto L079d4c;
  #L079d30.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L079d36.  v0:= temp @kind object;
  #L079d38.  v1:= "getsockname failed" @kind object;
  #L079d3c.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L079d42.  v0:= temp;
  #L079d44.  if v0 == 0 then goto L079d4c;
  #L079d48.  v0:= 1I;
  #L079d4a.  return v0;
  #L079d4c.  v0:= 0I;
  #L079d4e.  goto L079d4a;
}
procedure `boolean` `a`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079d60.  if v1 == v2 then goto L079d74;
  #L079d64.  if v1 == 0 then goto L079d78;
  #L079d68.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L079d6e.  v0:= temp;
  #L079d70.  if v0 == 0 then goto L079d78;
  #L079d74.  v0:= 1I;
  #L079d76.  return v0;
  #L079d78.  v0:= 0I;
  #L079d7a.  goto L079d76;
}
procedure `java.lang.Object`[] `a`(`java.lang.Class` v2 @kind object, `java.lang.Object`[] v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `La/a/c;.a:(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079d8c.  call temp:= `a`(v3, v4) @signature `La/a/c;.a:([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L079d92.  v1:= temp @kind object;
  #L079d94.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L079d9a.  v0:= temp;
  #L079d9c.  call temp:= `newInstance`(v2, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L079da2.  v0:= temp @kind object;
  #L079da4.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L079da8.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L079dac.  call temp:= `toArray`(v1, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L079db2.  v0:= temp @kind object;
  #L079db4.  return v0 @kind object;
}
procedure `java.lang.String`[] `a`(`java.lang.String`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/a/c;.a:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L079dc8.  v2:= 0I;
  #L079dca.  v0:= length @variable v3;
  #L079dcc.  v0:= v0 + 1;
  #L079dd0.  v0:= new `java.lang.String`[v0];
  #L079dd4.  v1:= length @variable v3;
  #L079dd6.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L079ddc.  v1:= length @variable v0;
  #L079dde.  v1:= v1 + -1;
  #L079de2.  v0[v1]:= v4 @kind object;
  #L079de6.  return v0 @kind object;
}
procedure `int` `b`(`java.lang.String` v4 @kind object) @signature `La/a/c;.b:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L079df8.  v0:= 0I;
  #L079dfa.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L079e00.  v1:= temp;
  #L079e02.  if v0 >= v1 then goto L079e26;
  #L079e06.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L079e0c.  v2:= temp;
  #L079e0e.  v3:= 31I;
  #L079e12.  if v2 <= v3 then goto L079e1e;
  #L079e16.  v3:= 127I;
  #L079e1a.  if v2 < v3 then goto L079e20;
  #L079e1e.  return v0;
  #L079e20.  v0:= v0 + 1;
  #L079e24.  goto L079e02;
  #L079e26.  v0:= -1I;
  #L079e28.  goto L079e1e;
}
procedure `int` `b`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `La/a/c;.b:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079e3c.  v0:= v4 + -1;
  #L079e40.  if v0 < v3 then goto L079e56;
  #L079e44.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L079e4a.  v1:= temp;
  #L079e4c.  goto L079e60;
  #L079e52.  v3:= v0 + 1;
  #L079e56.  return v3;
  #L079e58.  v0:= v0 + -1;
  #L079e5c.  goto L079e40;
  #L079e5e.  
  #L079e60.  switch v1
                  | 9 => goto L079e58
                  | 10 => goto L079e58
                  | 12 => goto L079e58
                  | 13 => goto L079e58
                  | 32 => goto L079e58
                  | else => goto L079e52;
}
procedure `boolean` `b`(`b.r` v12 @kind object, `int` v13 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `La/a/c;.b:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L079e9c.  v2:= 9223372036854775807L;
  #L079ea6.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L079eac.  v6:= temp @kind wide;
  #L079eae.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079eb4.  v0:= temp @kind object;
  #L079eb6.  call temp:= `c_`(v0) @signature `Lb/s;.c_:()Z` @kind virtual;
  #L079ebc.  v0:= temp;
  #L079ebe.  if v0 == 0 then goto L079f3e;
  #L079ec2.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079ec8.  v0:= temp @kind object;
  #L079eca.  call temp:= `d`(v0) @signature `Lb/s;.d:()J` @kind virtual;
  #L079ed0.  v0:= temp @kind wide;
  #L079ed2.  v0:= v0 - v6 @kind long;
  #L079ed4.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079eda.  v4:= temp @kind object;
  #L079edc.  v8:= (`long`) v13 @kind i2l;
  #L079ede.  call temp:= `toNanos`(v14, v8) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L079ee4.  v8:= temp @kind wide;
  #L079ee6.  call temp:= `min`(v0, v8) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L079eec.  v8:= temp @kind wide;
  #L079eee.  v8:= v8 + v6 @kind long;
  #L079ef0.  call temp:= `a`(v4, v8) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #Try_start0.  
  #L079ef6.  v4:= new `b.c`;
  #L079efa.  call `<init>`(v4) @signature `Lb/c;.<init>:()V` @kind direct;
  #L079f00.  v8:= 8192L;
  #L079f04.  call temp:= `a`(v12, v4, v8) @signature `Lb/r;.a:(Lb/c;J)J` @kind interface;
  #L079f0a.  v8:= temp @kind wide;
  #L079f0c.  v10:= -1L;
  #L079f10.  v5:= lcmp(v8, v10);
  #L079f14.  if v5 == 0 then goto L079f42;
  #L079f18.  call `r`(v4) @signature `Lb/c;.r:()V` @kind virtual;
  #Try_end0.  
  #L079f1e.  goto L079f00;
  #L079f20.  v4:= Exception @type ^`java.io.InterruptedIOException` @kind object;
  #L079f22.  v4:= 0I;
  #L079f24.  v2:= lcmp(v0, v2);
  #L079f28.  if v2 != 0 then goto L079f70;
  #L079f2c.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079f32.  v0:= temp @kind object;
  #L079f34.  call temp:= `e_`(v0) @signature `Lb/s;.e_:()Lb/s;` @kind virtual;
  #L079f3a.  v0:= v4;
  #L079f3c.  return v0;
  #L079f3e.  v0:= v2 @kind wide;
  #L079f40.  goto L079ed4;
  #L079f42.  v4:= 1I;
  #L079f44.  v2:= lcmp(v0, v2);
  #L079f48.  if v2 != 0 then goto L079f5e;
  #L079f4c.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079f52.  v0:= temp @kind object;
  #L079f54.  call temp:= `e_`(v0) @signature `Lb/s;.e_:()Lb/s;` @kind virtual;
  #L079f5a.  v0:= v4;
  #L079f5c.  goto L079f3c;
  #L079f5e.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079f64.  v2:= temp @kind object;
  #L079f66.  v0:= v0 + v6 @kind long;
  #L079f68.  call temp:= `a`(v2, v0) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #L079f6e.  goto L079f5a;
  #L079f70.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079f76.  v2:= temp @kind object;
  #L079f78.  v0:= v0 + v6 @kind long;
  #L079f7a.  call temp:= `a`(v2, v0) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #L079f80.  goto L079f3a;
  #L079f82.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L079f84.  v2:= lcmp(v0, v2);
  #L079f88.  if v2 != 0 then goto L079f9c;
  #L079f8c.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079f92.  v0:= temp @kind object;
  #L079f94.  call temp:= `e_`(v0) @signature `Lb/s;.e_:()Lb/s;` @kind virtual;
  #L079f9a.  throw v4;
  #L079f9c.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079fa2.  v2:= temp @kind object;
  #L079fa4.  v0:= v0 + v6 @kind long;
  #L079fa6.  call temp:= `a`(v2, v0) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #L079fac.  goto L079f9a;
  catch `java.io.InterruptedIOException` @[Try_start0..Try_end0] goto L079f20;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L079f82;
}
procedure `java.lang.String` `c`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `La/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079fd0.  call temp:= `a`(v2, v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;II)I` @kind static;
  #L079fd6.  v0:= temp;
  #L079fd8.  call temp:= `b`(v2, v0, v4) @signature `La/a/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L079fde.  v1:= temp;
  #L079fe0.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L079fe6.  v0:= temp @kind object;
  #L079fe8.  return v0 @kind object;
}
procedure `boolean` `c`(`java.lang.String` v1 @kind object) @signature `La/a/c;.c:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079ffc.  v0:= `@@a.a.c.p` @type ^`java.util.regex.Pattern` @kind object;
  #L07a000.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L07a006.  v0:= temp @kind object;
  #L07a008.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L07a00e.  v0:= temp;
  #L07a010.  return v0;
}
procedure `boolean` `d`(`java.lang.String` v5 @kind object) @signature `La/a/c;.d:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07a024.  v2:= 1I;
  #L07a026.  v1:= 0I;
  #L07a028.  v0:= v1;
  #L07a02a.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L07a030.  v3:= temp;
  #L07a032.  if v0 >= v3 then goto L07a050;
  #L07a036.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L07a03c.  v3:= temp;
  #L07a03e.  v4:= 31I;
  #L07a042.  if v3 <= v4 then goto L07a04e;
  #L07a046.  v4:= 127I;
  #L07a04a.  if v3 < v4 then goto L07a052;
  #L07a04e.  v1:= v2;
  #L07a050.  return v1;
  #L07a052.  v4:= " #%/:?@[\\]" @kind object;
  #L07a056.  call temp:= `indexOf`(v4, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L07a05c.  v3:= temp;
  #L07a05e.  v4:= -1I;
  #L07a060.  if v3 == v4 then goto L07a068;
  #L07a064.  v1:= v2;
  #L07a066.  goto L07a050;
  #L07a068.  v0:= v0 + 1;
  #L07a06c.  goto L07a02a;
}

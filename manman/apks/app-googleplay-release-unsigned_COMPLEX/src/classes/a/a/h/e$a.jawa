record `a.a.h.e$a` @kind class @AccessFlag FINAL extends `a.a.h.e` @kind class {
  `javax.net.ssl.X509TrustManager` `a.a.h.e$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `a.a.h.e$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.h.e$a` v0 @kind this, `javax.net.ssl.X509TrustManager` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `La/a/h/e$a;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L084710.  call `<init>`(v0) @signature `La/a/h/e;.<init>:()V` @kind direct;
  #L084716.  v0.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L08471a.  v0.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` := v1 @kind object;
  #L08471e.  return @kind void;
}
procedure `java.security.cert.X509Certificate` `a`(`a.a.h.e$a` v5 @kind this, `java.security.cert.X509Certificate` v6 @kind object) @signature `La/a/h/e$a;.a:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L084730.  v1:= 0I;
  #Try_start0.  
  #L084732.  v0:= v5.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L084736.  v2:= v5.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L08473a.  v3:= 1I;
  #L08473c.  v3:= new `java.lang.Object`[v3];
  #L084740.  v4:= 0I;
  #L084742.  v3[v4]:= v6 @kind object;
  #L084746.  call temp:= `invoke`(v0, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L08474c.  v0:= temp @kind object;
  #L08474e.  v0:= (`java.security.cert.TrustAnchor`) v0 @kind object;
  #L084752.  if v0 == 0 then goto L084760;
  #L084756.  call temp:= `getTrustedCert`(v0) @signature `Ljava/security/cert/TrustAnchor;.getTrustedCert:()Ljava/security/cert/X509Certificate;` @kind virtual;
  #Try_end0.  
  #L08475c.  v0:= temp @kind object;
  #L08475e.  return v0 @kind object;
  #L084760.  v0:= v1 @kind object;
  #L084762.  goto L08475e;
  #L084764.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L084766.  v0:= new `java.lang.AssertionError`;
  #L08476a.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L084770.  throw v0;
  #L084772.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L084774.  v0:= v1 @kind object;
  #L084776.  goto L08475e;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L084764;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L084772;
}
procedure `boolean` `equals`(`a.a.h.e$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `La/a/h/e$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L084798.  v0:= 1I;
  #L08479a.  v1:= 0I;
  #L08479c.  if v5 != v4 then goto L0847a2;
  #L0847a0.  return v0;
  #L0847a2.  v2:= instanceof @variable v5 @type ^`a.a.h.e$a` @kind boolean;
  #L0847a6.  if v2 != 0 then goto L0847ae;
  #L0847aa.  v0:= v1;
  #L0847ac.  goto L0847a0;
  #L0847ae.  v5:= (`a.a.h.e$a`) v5 @kind object;
  #L0847b2.  v2:= v4.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L0847b6.  v3:= v5.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L0847ba.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0847c0.  v2:= temp;
  #L0847c2.  if v2 == 0 then goto L0847da;
  #L0847c6.  v2:= v4.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L0847ca.  v3:= v5.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L0847ce.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/reflect/Method;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0847d4.  v2:= temp;
  #L0847d6.  if v2 != 0 then goto L0847a0;
  #L0847da.  v0:= v1;
  #L0847dc.  goto L0847a0;
}
procedure `int` `hashCode`(`a.a.h.e$a` v2 @kind this) @signature `La/a/h/e$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0847f0.  v0:= v2.`a.a.h.e$a.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L0847f4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0847fa.  v0:= temp;
  #L0847fc.  v1:= v2.`a.a.h.e$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L084800.  call temp:= `hashCode`(v1) @signature `Ljava/lang/reflect/Method;.hashCode:()I` @kind virtual;
  #L084806.  v1:= temp;
  #L084808.  v1:= v1 * 31;
  #L08480c.  v0:= v0 + v1 @kind int;
  #L08480e.  return v0;
}

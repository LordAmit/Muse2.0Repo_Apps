record `a.a.h.a` @kind class @AccessFlag PUBLIC_FINAL extends `a.a.h.b` @kind class {
  `a.a.h.e` `a.a.h.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.h.a` v0 @kind this, `a.a.h.e` v1 @kind object) @signature `La/a/h/a;.<init>:(La/a/h/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0833a0.  call `<init>`(v0) @signature `La/a/h/b;.<init>:()V` @kind direct;
  #L0833a6.  v0.`a.a.h.a.a` @type ^`a.a.h.e` := v1 @kind object;
  #L0833aa.  return @kind void;
}
procedure `boolean` `a`(`a.a.h.a` v3 @kind this, `java.security.cert.X509Certificate` v4 @kind object, `java.security.cert.X509Certificate` v5 @kind object) @signature `La/a/h/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L0833bc.  v0:= 0I;
  #L0833be.  call temp:= `getIssuerDN`(v4) @signature `Ljava/security/cert/X509Certificate;.getIssuerDN:()Ljava/security/Principal;` @kind virtual;
  #L0833c4.  v1:= temp @kind object;
  #L0833c6.  call temp:= `getSubjectDN`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L0833cc.  v2:= temp @kind object;
  #L0833ce.  call temp:= `equals`(v1, v2) @signature `Ljava/security/Principal;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L0833d4.  v1:= temp;
  #L0833d6.  if v1 != 0 then goto L0833dc;
  #L0833da.  return v0;
  #Try_start0.  
  #L0833dc.  call temp:= `getPublicKey`(v5) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L0833e2.  v1:= temp @kind object;
  #L0833e4.  call `verify`(v4, v1) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #Try_end0.  
  #L0833ea.  v0:= 1I;
  #L0833ec.  goto L0833da;
  #L0833ee.  v1:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L0833f0.  goto L0833da;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L0833ee;
}
procedure `java.util.List` `a`(`a.a.h.a` v9 @kind this, `java.util.List` v10 @kind object, `java.lang.String` v11 @kind object) @signature `La/a/h/a;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L083414.  v2:= 1I;
  #L083416.  v0:= 0I;
  #L083418.  v6:= new `java.util.ArrayDeque`;
  #L08341c.  call `<init>`(v6, v10) @signature `Ljava/util/ArrayDeque;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L083422.  v4:= new `java.util.ArrayList`;
  #L083426.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L08342c.  call temp:= `removeFirst`(v6) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L083432.  v1:= temp @kind object;
  #L083434.  call temp:= `add`(v4, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08343a.  v5:= v0;
  #L08343c.  v3:= v0;
  #L08343e.  v0:= 9I;
  #L083442.  if v5 >= v0 then goto L08351e;
  #L083446.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08344c.  v0:= temp;
  #L08344e.  v0:= v0 + -1;
  #L083452.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083458.  v0:= temp @kind object;
  #L08345a.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L08345e.  v1:= v9.`a.a.h.a.a` @type ^`a.a.h.e` @kind object;
  #L083462.  call temp:= `a`(v1, v0) @signature `La/a/h/e;.a:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @kind virtual;
  #L083468.  v1:= temp @kind object;
  #L08346a.  if v1 == 0 then goto L0834a8;
  #L08346e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083474.  v3:= temp;
  #L083476.  if v3 > v2 then goto L083486;
  #L08347a.  call temp:= `equals`(v0, v1) @signature `Ljava/security/cert/X509Certificate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L083480.  v0:= temp;
  #L083482.  if v0 != 0 then goto L08348c;
  #L083486.  call temp:= `add`(v4, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08348c.  call temp:= `a`(v9, v1, v1) @signature `La/a/h/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L083492.  v0:= temp;
  #L083494.  if v0 == 0 then goto L08349c;
  #L083498.  v0:= v4 @kind object;
  #L08349a.  return v0 @kind object;
  #L08349c.  v0:= v2;
  #L08349e.  v1:= v5 + 1;
  #L0834a2.  v5:= v1;
  #L0834a4.  v3:= v0;
  #L0834a6.  goto L08343e;
  #L0834a8.  call temp:= `iterator`(v6) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0834ae.  v7:= temp @kind object;
  #L0834b0.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0834b6.  v1:= temp;
  #L0834b8.  if v1 == 0 then goto L0834e4;
  #L0834bc.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L0834c2.  v1:= temp @kind object;
  #L0834c4.  v1:= (`java.security.cert.X509Certificate`) v1 @kind object;
  #L0834c8.  call temp:= `a`(v9, v0, v1) @signature `La/a/h/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L0834ce.  v8:= temp;
  #L0834d0.  if v8 == 0 then goto L0834b0;
  #L0834d4.  call `remove`(v7) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L0834da.  call temp:= `add`(v4, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0834e0.  v0:= v3;
  #L0834e2.  goto L08349e;
  #L0834e4.  if v3 == 0 then goto L0834ec;
  #L0834e8.  v0:= v4 @kind object;
  #L0834ea.  goto L08349a;
  #L0834ec.  v1:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L0834f0.  v2:= new `java.lang.StringBuilder`;
  #L0834f4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0834fa.  v3:= "Failed to find a trusted cert that signed " @kind object;
  #L0834fe.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083504.  v2:= temp @kind object;
  #L083506.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08350c.  v0:= temp @kind object;
  #L08350e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083514.  v0:= temp @kind object;
  #L083516.  call `<init>`(v1, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08351c.  throw v1;
  #L08351e.  v0:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L083522.  v1:= new `java.lang.StringBuilder`;
  #L083526.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08352c.  v2:= "Certificate chain too long: " @kind object;
  #L083530.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083536.  v1:= temp @kind object;
  #L083538.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08353e.  v1:= temp @kind object;
  #L083540.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083546.  v1:= temp @kind object;
  #L083548.  call `<init>`(v0, v1) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08354e.  throw v0;
}
procedure `boolean` `equals`(`a.a.h.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/a/h/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L083560.  v0:= 1I;
  #L083562.  if v4 != v3 then goto L083568;
  #L083566.  return v0;
  #L083568.  v1:= instanceof @variable v4 @type ^`a.a.h.a` @kind boolean;
  #L08356c.  if v1 == 0 then goto L083588;
  #L083570.  v4:= (`a.a.h.a`) v4 @kind object;
  #L083574.  v1:= v4.`a.a.h.a.a` @type ^`a.a.h.e` @kind object;
  #L083578.  v2:= v3.`a.a.h.a.a` @type ^`a.a.h.e` @kind object;
  #L08357c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L083582.  v1:= temp;
  #L083584.  if v1 != 0 then goto L083566;
  #L083588.  v0:= 0I;
  #L08358a.  goto L083566;
}
procedure `int` `hashCode`(`a.a.h.a` v1 @kind this) @signature `La/a/h/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08359c.  v0:= v1.`a.a.h.a.a` @type ^`a.a.h.e` @kind object;
  #L0835a0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0835a6.  v0:= temp;
  #L0835a8.  return v0;
}

record `a.a.a.d$b` @kind class @AccessFlag FINAL {
  `java.lang.String` `a.a.a.d$b.a` @AccessFlag FINAL;
  `long`[] `a.a.a.d$b.b` @AccessFlag FINAL;
  `java.io.File`[] `a.a.a.d$b.c` @AccessFlag FINAL;
  `java.io.File`[] `a.a.a.d$b.d` @AccessFlag FINAL;
  `boolean` `a.a.a.d$b.e` @AccessFlag ;
  `a.a.a.d$a` `a.a.a.d$b.f` @AccessFlag ;
  `long` `a.a.a.d$b.g` @AccessFlag ;
}
procedure `void` `a`(`a.a.a.d$b` v6 @kind this, `b.d` v7 @kind object) @signature `La/a/a/d$b;.a:(Lb/d;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07562c.  v1:= v6.`a.a.a.d$b.b` @type ^`long`[] @kind object;
  #L075630.  v2:= length @variable v1;
  #L075632.  v0:= 0I;
  #L075634.  if v0 >= v2 then goto L075654;
  #L075638.  v4:= v1[v0] @kind wide;
  #L07563c.  v3:= 32I;
  #L075640.  call temp:= `i`(v7, v3) @signature `Lb/d;.i:(I)Lb/d;` @kind interface;
  #L075646.  v3:= temp @kind object;
  #L075648.  call temp:= `k`(v3, v4) @signature `Lb/d;.k:(J)Lb/d;` @kind interface;
  #L07564e.  v0:= v0 + 1;
  #L075652.  goto L075634;
  #L075654.  return @kind void;
}

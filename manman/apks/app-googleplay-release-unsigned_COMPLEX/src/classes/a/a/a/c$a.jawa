record `a.a.a.c$a` @kind class @AccessFlag PUBLIC {
  `long` `a.a.a.c$a.a` @AccessFlag FINAL;
  `a.x` `a.a.a.c$a.b` @AccessFlag FINAL;
  `a.z` `a.a.a.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `a.a.a.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `a.a.a.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `a.a.a.c$a.h` @AccessFlag PRIVATE;
  `long` `a.a.a.c$a.i` @AccessFlag PRIVATE;
  `long` `a.a.a.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.k` @AccessFlag PRIVATE;
  `int` `a.a.a.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.a.c$a` v7 @kind this, `long` v8 , `a.x` v10 @kind object, `a.z` v11 @kind object) @signature `La/a/a/c$a;.<init>:(JLa/x;La/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L074e9c.  v6:= -1I;
  #L074e9e.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L074ea4.  v7.`a.a.a.c$a.l` @type ^`int` := v6;
  #L074ea8.  v7.`a.a.a.c$a.a` @type ^`long` := v8 @kind wide;
  #L074eac.  v7.`a.a.a.c$a.b` @type ^`a.x` := v10 @kind object;
  #L074eb0.  v7.`a.a.a.c$a.c` @type ^`a.z` := v11 @kind object;
  #L074eb4.  if v11 == 0 then goto L074f90;
  #L074eb8.  call temp:= `i`(v11) @signature `La/z;.i:()J` @kind virtual;
  #L074ebe.  v0:= temp @kind wide;
  #L074ec0.  v7.`a.a.a.c$a.i` @type ^`long` := v0 @kind wide;
  #L074ec4.  call temp:= `j`(v11) @signature `La/z;.j:()J` @kind virtual;
  #L074eca.  v0:= temp @kind wide;
  #L074ecc.  v7.`a.a.a.c$a.j` @type ^`long` := v0 @kind wide;
  #L074ed0.  call temp:= `e`(v11) @signature `La/z;.e:()La/q;` @kind virtual;
  #L074ed6.  v1:= temp @kind object;
  #L074ed8.  v0:= 0I;
  #L074eda.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L074ee0.  v2:= temp;
  #L074ee2.  if v0 >= v2 then goto L074f90;
  #L074ee6.  call temp:= `a`(v1, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L074eec.  v3:= temp @kind object;
  #L074eee.  call temp:= `b`(v1, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L074ef4.  v4:= temp @kind object;
  #L074ef6.  v5:= "Date" @kind object;
  #L074efa.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L074f00.  v5:= temp;
  #L074f02.  if v5 == 0 then goto L074f1c;
  #L074f06.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L074f0c.  v3:= temp @kind object;
  #L074f0e.  v7.`a.a.a.c$a.d` @type ^`java.util.Date` := v3 @kind object;
  #L074f12.  v7.`a.a.a.c$a.e` @type ^`java.lang.String` := v4 @kind object;
  #L074f16.  v0:= v0 + 1;
  #L074f1a.  goto L074ee2;
  #L074f1c.  v5:= "Expires" @kind object;
  #L074f20.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L074f26.  v5:= temp;
  #L074f28.  if v5 == 0 then goto L074f3a;
  #L074f2c.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L074f32.  v3:= temp @kind object;
  #L074f34.  v7.`a.a.a.c$a.h` @type ^`java.util.Date` := v3 @kind object;
  #L074f38.  goto L074f16;
  #L074f3a.  v5:= "Last-Modified" @kind object;
  #L074f3e.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L074f44.  v5:= temp;
  #L074f46.  if v5 == 0 then goto L074f5c;
  #L074f4a.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L074f50.  v3:= temp @kind object;
  #L074f52.  v7.`a.a.a.c$a.f` @type ^`java.util.Date` := v3 @kind object;
  #L074f56.  v7.`a.a.a.c$a.g` @type ^`java.lang.String` := v4 @kind object;
  #L074f5a.  goto L074f16;
  #L074f5c.  v5:= "ETag" @kind object;
  #L074f60.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L074f66.  v5:= temp;
  #L074f68.  if v5 == 0 then goto L074f72;
  #L074f6c.  v7.`a.a.a.c$a.k` @type ^`java.lang.String` := v4 @kind object;
  #L074f70.  goto L074f16;
  #L074f72.  v5:= "Age" @kind object;
  #L074f76.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L074f7c.  v3:= temp;
  #L074f7e.  if v3 == 0 then goto L074f16;
  #L074f82.  call temp:= `b`(v4, v6) @signature `La/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L074f88.  v3:= temp;
  #L074f8a.  v7.`a.a.a.c$a.l` @type ^`int` := v3;
  #L074f8e.  goto L074f16;
  #L074f90.  return @kind void;
}
procedure `boolean` `a`(`a.x` v1 @kind object) @signature `La/a/a/c$a;.a:(La/x;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L074fa4.  v0:= "If-Modified-Since" @kind object;
  #L074fa8.  call temp:= `a`(v1, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L074fae.  v0:= temp @kind object;
  #L074fb0.  if v0 != 0 then goto L074fc4;
  #L074fb4.  v0:= "If-None-Match" @kind object;
  #L074fb8.  call temp:= `a`(v1, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L074fbe.  v0:= temp @kind object;
  #L074fc0.  if v0 == 0 then goto L074fc8;
  #L074fc4.  v0:= 1I;
  #L074fc6.  return v0;
  #L074fc8.  v0:= 0I;
  #L074fca.  goto L074fc6;
}
procedure `a.a.a.c` `b`(`a.a.a.c$a` v14 @kind this) @signature `La/a/a/c$a;.b:()La/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L074fdc.  v4:= 0L;
  #L074fe0.  v13:= -1I;
  #L074fe2.  v12:= 0I;
  #L074fe4.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L074fe8.  if v0 != 0 then goto L074ffc;
  #L074fec.  v0:= new `a.a.a.c`;
  #L074ff0.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L074ff4.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L074ffa.  return v0 @kind object;
  #L074ffc.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075000.  call temp:= `g`(v0) @signature `La/x;.g:()Z` @kind virtual;
  #L075006.  v0:= temp;
  #L075008.  if v0 == 0 then goto L07502c;
  #L07500c.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075010.  call temp:= `d`(v0) @signature `La/z;.d:()La/p;` @kind virtual;
  #L075016.  v0:= temp @kind object;
  #L075018.  if v0 != 0 then goto L07502c;
  #L07501c.  v0:= new `a.a.a.c`;
  #L075020.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075024.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07502a.  goto L074ffa;
  #L07502c.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075030.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075034.  call temp:= `a`(v0, v1) @signature `La/a/a/c;.a:(La/z;La/x;)Z` @kind static;
  #L07503a.  v0:= temp;
  #L07503c.  if v0 != 0 then goto L075050;
  #L075040.  v0:= new `a.a.a.c`;
  #L075044.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075048.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07504e.  goto L074ffa;
  #L075050.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075054.  call temp:= `f`(v0) @signature `La/x;.f:()La/d;` @kind virtual;
  #L07505a.  v6:= temp @kind object;
  #L07505c.  call temp:= `a`(v6) @signature `La/d;.a:()Z` @kind virtual;
  #L075062.  v0:= temp;
  #L075064.  if v0 != 0 then goto L075078;
  #L075068.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07506c.  call temp:= `a`(v0) @signature `La/a/a/c$a;.a:(La/x;)Z` @kind static;
  #L075072.  v0:= temp;
  #L075074.  if v0 == 0 then goto L075088;
  #L075078.  v0:= new `a.a.a.c`;
  #L07507c.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L075080.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075086.  goto L074ffa;
  #L075088.  call temp:= `d`(v14) @signature `La/a/a/c$a;.d:()J` @kind direct;
  #L07508e.  v8:= temp @kind wide;
  #L075090.  call temp:= `c`(v14) @signature `La/a/a/c$a;.c:()J` @kind direct;
  #L075096.  v0:= temp @kind wide;
  #L075098.  call temp:= `c`(v6) @signature `La/d;.c:()I` @kind virtual;
  #L07509e.  v2:= temp;
  #L0750a0.  if v2 == v13 then goto L0750c2;
  #L0750a4.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0750a8.  call temp:= `c`(v6) @signature `La/d;.c:()I` @kind virtual;
  #L0750ae.  v3:= temp;
  #L0750b0.  v10:= (`long`) v3 @kind i2l;
  #L0750b2.  call temp:= `toMillis`(v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L0750b8.  v2:= temp @kind wide;
  #L0750ba.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L0750c0.  v0:= temp @kind wide;
  #L0750c2.  call temp:= `h`(v6) @signature `La/d;.h:()I` @kind virtual;
  #L0750c8.  v2:= temp;
  #L0750ca.  if v2 == v13 then goto L075234;
  #L0750ce.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L0750d2.  call temp:= `h`(v6) @signature `La/d;.h:()I` @kind virtual;
  #L0750d8.  v3:= temp;
  #L0750da.  v10:= (`long`) v3 @kind i2l;
  #L0750dc.  call temp:= `toMillis`(v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L0750e2.  v2:= temp @kind wide;
  #L0750e4.  v7:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L0750e8.  call temp:= `h`(v7) @signature `La/z;.h:()La/d;` @kind virtual;
  #L0750ee.  v7:= temp @kind object;
  #L0750f0.  call temp:= `f`(v7) @signature `La/d;.f:()Z` @kind virtual;
  #L0750f6.  v10:= temp;
  #L0750f8.  if v10 != 0 then goto L07511e;
  #L0750fc.  call temp:= `g`(v6) @signature `La/d;.g:()I` @kind virtual;
  #L075102.  v10:= temp;
  #L075104.  if v10 == v13 then goto L07511e;
  #L075108.  v4:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07510c.  call temp:= `g`(v6) @signature `La/d;.g:()I` @kind virtual;
  #L075112.  v5:= temp;
  #L075114.  v10:= (`long`) v5 @kind i2l;
  #L075116.  call temp:= `toMillis`(v4, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L07511c.  v4:= temp @kind wide;
  #L07511e.  call temp:= `a`(v7) @signature `La/d;.a:()Z` @kind virtual;
  #L075124.  v6:= temp;
  #L075126.  if v6 != 0 then goto L07519a;
  #L07512a.  v6:= v8 + v2 @kind long;
  #L07512e.  v4:= v4 + v0 @kind long;
  #L075130.  v4:= lcmp(v6, v4);
  #L075134.  if v4 >= 0 then goto L07519a;
  #L075138.  v4:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07513c.  call temp:= `g`(v4) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L075142.  v4:= temp @kind object;
  #L075144.  v2:= v2 + v8 @kind long;
  #L075146.  v0:= lcmp(v2, v0);
  #L07514a.  if v0 < 0 then goto L07515c;
  #L07514e.  v0:= "Warning" @kind object;
  #L075152.  v1:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L075156.  call temp:= `a`(v4, v0, v1) @signature `La/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/z$a;` @kind virtual;
  #L07515c.  v0:= 86400000L;
  #L075162.  v0:= lcmp(v8, v0);
  #L075166.  if v0 <= 0 then goto L075184;
  #L07516a.  call temp:= `e`(v14) @signature `La/a/a/c$a;.e:()Z` @kind direct;
  #L075170.  v0:= temp;
  #L075172.  if v0 == 0 then goto L075184;
  #L075176.  v0:= "Warning" @kind object;
  #L07517a.  v1:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L07517e.  call temp:= `a`(v4, v0, v1) @signature `La/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/z$a;` @kind virtual;
  #L075184.  v0:= new `a.a.a.c`;
  #L075188.  call temp:= `a`(v4) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07518e.  v1:= temp @kind object;
  #L075190.  call `<init>`(v0, v12, v1) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075196.  goto L074ffa;
  #L07519a.  v0:= v14.`a.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L07519e.  if v0 == 0 then goto L0751fe;
  #L0751a2.  v1:= "If-None-Match" @kind object;
  #L0751a6.  v0:= v14.`a.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L0751aa.  v2:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L0751ae.  call temp:= `c`(v2) @signature `La/x;.c:()La/q;` @kind virtual;
  #L0751b4.  v2:= temp @kind object;
  #L0751b6.  call temp:= `b`(v2) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L0751bc.  v2:= temp @kind object;
  #L0751be.  v3:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L0751c2.  call `a`(v3, v2, v1, v0) @signature `La/a/a;.a:(La/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L0751c8.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L0751cc.  call temp:= `e`(v0) @signature `La/x;.e:()La/x$a;` @kind virtual;
  #L0751d2.  v0:= temp @kind object;
  #L0751d4.  call temp:= `a`(v2) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L0751da.  v1:= temp @kind object;
  #L0751dc.  call temp:= `a`(v0, v1) @signature `La/x$a;.a:(La/q;)La/x$a;` @kind virtual;
  #L0751e2.  v0:= temp @kind object;
  #L0751e4.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L0751ea.  v1:= temp @kind object;
  #L0751ec.  v0:= new `a.a.a.c`;
  #L0751f0.  v2:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L0751f4.  call `<init>`(v0, v1, v2) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L0751fa.  goto L074ffa;
  #L0751fe.  v0:= v14.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L075202.  if v0 == 0 then goto L075210;
  #L075206.  v1:= "If-Modified-Since" @kind object;
  #L07520a.  v0:= v14.`a.a.a.c$a.g` @type ^`java.lang.String` @kind object;
  #L07520e.  goto L0751aa;
  #L075210.  v0:= v14.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L075214.  if v0 == 0 then goto L075222;
  #L075218.  v1:= "If-Modified-Since" @kind object;
  #L07521c.  v0:= v14.`a.a.a.c$a.e` @type ^`java.lang.String` @kind object;
  #L075220.  goto L0751aa;
  #L075222.  v0:= new `a.a.a.c`;
  #L075226.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07522a.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L075230.  goto L074ffa;
  #L075234.  v2:= v4 @kind wide;
  #L075236.  goto L0750e4;
}
procedure `long` `c`(`a.a.a.c$a` v6 @kind this) @signature `La/a/a/c$a;.c:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07524c.  v2:= 0L;
  #L075250.  v0:= v6.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L075254.  call temp:= `h`(v0) @signature `La/z;.h:()La/d;` @kind virtual;
  #L07525a.  v0:= temp @kind object;
  #L07525c.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L075262.  v1:= temp;
  #L075264.  v4:= -1I;
  #L075266.  if v1 == v4 then goto L075282;
  #L07526a.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07526e.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L075274.  v0:= temp;
  #L075276.  v2:= (`long`) v0 @kind i2l;
  #L075278.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L07527e.  v2:= temp @kind wide;
  #L075280.  return v2 @kind wide;
  #L075282.  v0:= v6.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L075286.  if v0 == 0 then goto L0752c4;
  #L07528a.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07528e.  if v0 == 0 then goto L0752ba;
  #L075292.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L075296.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L07529c.  v0:= temp @kind wide;
  #L07529e.  v4:= v6.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L0752a2.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L0752a8.  v4:= temp @kind wide;
  #L0752aa.  v0:= v4 - v0 @kind long;
  #L0752ae.  v4:= lcmp(v0, v2);
  #L0752b2.  if v4 <= 0 then goto L0752c0;
  #L0752b6.  v2:= v0 @kind wide;
  #L0752b8.  goto L075280;
  #L0752ba.  v0:= v6.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L0752be.  goto L07529e;
  #L0752c0.  v0:= v2 @kind wide;
  #L0752c2.  goto L0752b6;
  #L0752c4.  v0:= v6.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L0752c8.  if v0 == 0 then goto L075280;
  #L0752cc.  v0:= v6.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L0752d0.  call temp:= `a`(v0) @signature `La/z;.a:()La/x;` @kind virtual;
  #L0752d6.  v0:= temp @kind object;
  #L0752d8.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L0752de.  v0:= temp @kind object;
  #L0752e0.  call temp:= `k`(v0) @signature `La/r;.k:()Ljava/lang/String;` @kind virtual;
  #L0752e6.  v0:= temp @kind object;
  #L0752e8.  if v0 != 0 then goto L075280;
  #L0752ec.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L0752f0.  if v0 == 0 then goto L075320;
  #L0752f4.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L0752f8.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L0752fe.  v0:= temp @kind wide;
  #L075300.  v4:= v6.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L075304.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L07530a.  v4:= temp @kind wide;
  #L07530c.  v0:= v0 - v4 @kind long;
  #L07530e.  v4:= lcmp(v0, v2);
  #L075312.  if v4 <= 0 then goto L075280;
  #L075316.  v2:= 10L;
  #L07531a.  v2:= v0 / v2 @kind long;
  #L07531e.  goto L075280;
  #L075320.  v0:= v6.`a.a.a.c$a.i` @type ^`long` @kind wide;
  #L075324.  goto L075300;
}
procedure `long` `d`(`a.a.a.c$a` v8 @kind this) @signature `La/a/a/c$a;.d:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L075338.  v0:= 0L;
  #L07533c.  v2:= v8.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L075340.  if v2 == 0 then goto L07535e;
  #L075344.  v2:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L075348.  v4:= v8.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L07534c.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L075352.  v4:= temp @kind wide;
  #L075354.  v2:= v2 - v4 @kind long;
  #L075356.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L07535c.  v0:= temp @kind wide;
  #L07535e.  v2:= v8.`a.a.a.c$a.l` @type ^`int`;
  #L075362.  v3:= -1I;
  #L075364.  if v2 == v3 then goto L075382;
  #L075368.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07536c.  v3:= v8.`a.a.a.c$a.l` @type ^`int`;
  #L075370.  v4:= (`long`) v3 @kind i2l;
  #L075372.  call temp:= `toMillis`(v2, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L075378.  v2:= temp @kind wide;
  #L07537a.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L075380.  v0:= temp @kind wide;
  #L075382.  v2:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L075386.  v4:= v8.`a.a.a.c$a.i` @type ^`long` @kind wide;
  #L07538a.  v2:= v2 - v4 @kind long;
  #L07538c.  v4:= v8.`a.a.a.c$a.a` @type ^`long` @kind wide;
  #L075390.  v6:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L075394.  v4:= v4 - v6 @kind long;
  #L075396.  v0:= v0 + v2 @kind long;
  #L075398.  v0:= v0 + v4 @kind long;
  #L07539a.  return v0 @kind wide;
}
procedure `boolean` `e`(`a.a.a.c$a` v2 @kind this) @signature `La/a/a/c$a;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L0753ac.  v0:= v2.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L0753b0.  call temp:= `h`(v0) @signature `La/z;.h:()La/d;` @kind virtual;
  #L0753b6.  v0:= temp @kind object;
  #L0753b8.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L0753be.  v0:= temp;
  #L0753c0.  v1:= -1I;
  #L0753c2.  if v0 != v1 then goto L0753d2;
  #L0753c6.  v0:= v2.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L0753ca.  if v0 != 0 then goto L0753d2;
  #L0753ce.  v0:= 1I;
  #L0753d0.  return v0;
  #L0753d2.  v0:= 0I;
  #L0753d4.  goto L0753d0;
}
procedure `a.a.a.c` `a`(`a.a.a.c$a` v3 @kind this) @signature `La/a/a/c$a;.a:()La/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0753e8.  v2:= 0I;
  #L0753ea.  call temp:= `b`(v3) @signature `La/a/a/c$a;.b:()La/a/a/c;` @kind direct;
  #L0753f0.  v0:= temp @kind object;
  #L0753f2.  v1:= v0.`a.a.a.c.a` @type ^`a.x` @kind object;
  #L0753f6.  if v1 == 0 then goto L07541c;
  #L0753fa.  v1:= v3.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L0753fe.  call temp:= `f`(v1) @signature `La/x;.f:()La/d;` @kind virtual;
  #L075404.  v1:= temp @kind object;
  #L075406.  call temp:= `i`(v1) @signature `La/d;.i:()Z` @kind virtual;
  #L07540c.  v1:= temp;
  #L07540e.  if v1 == 0 then goto L07541c;
  #L075412.  v0:= new `a.a.a.c`;
  #L075416.  call `<init>`(v0, v2, v2) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L07541c.  return v0 @kind object;
}

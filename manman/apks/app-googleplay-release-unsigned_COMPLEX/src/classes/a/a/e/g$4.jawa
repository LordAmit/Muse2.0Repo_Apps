record `a.a.e.g$4` @kind class @AccessFlag  extends `a.a.b` @kind class {
  `int` `a.a.e.g$4.a` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `a.a.e.g$4.c` @AccessFlag FINAL_SYNTHETIC;
  `a.a.e.g` `a.a.e.g$4.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$4` v0 @kind this, `a.a.e.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object) @signature `La/a/e/g$4;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L07d2dc.  v0.`a.a.e.g$4.d` @type ^`a.a.e.g` := v1 @kind object;
  #L07d2e0.  v0.`a.a.e.g$4.a` @type ^`int` := v4;
  #L07d2e4.  v0.`a.a.e.g$4.c` @type ^`java.util.List` := v5 @kind object;
  #L07d2e8.  call `<init>`(v0, v2, v3) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07d2ee.  return @kind void;
}
procedure `void` `b`(`a.a.e.g$4` v3 @kind this) @signature `La/a/e/g$4;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07d300.  v0:= v3.`a.a.e.g$4.d` @type ^`a.a.e.g` @kind object;
  #L07d304.  v0:= v0.`a.a.e.g.i` @type ^`a.a.e.m` @kind object;
  #L07d308.  v1:= v3.`a.a.e.g$4.a` @type ^`int`;
  #L07d30c.  v2:= v3.`a.a.e.g$4.c` @type ^`java.util.List` @kind object;
  #L07d310.  call temp:= `a`(v0, v1, v2) @signature `La/a/e/m;.a:(ILjava/util/List;)Z` @kind interface;
  #L07d316.  v0:= temp;
  #L07d318.  if v0 == 0 then goto L07d354;
  #Try_start0.  
  #L07d31c.  v0:= v3.`a.a.e.g$4.d` @type ^`a.a.e.g` @kind object;
  #L07d320.  v0:= v0.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07d324.  v1:= v3.`a.a.e.g$4.a` @type ^`int`;
  #L07d328.  v2:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #L07d32c.  call `a`(v0, v1, v2) @signature `La/a/e/j;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07d332.  v1:= v3.`a.a.e.g$4.d` @type ^`a.a.e.g` @kind object;
  #L07d336.  @monitorenter v1
  #Try_end0.  
  #Try_start1.  
  #L07d338.  v0:= v3.`a.a.e.g$4.d` @type ^`a.a.e.g` @kind object;
  #L07d33c.  v0:= v0.`a.a.e.g.r` @type ^`java.util.Set` @kind object;
  #L07d340.  v2:= v3.`a.a.e.g$4.a` @type ^`int`;
  #L07d344.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07d34a.  v2:= temp @kind object;
  #L07d34c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L07d352.  @monitorexit v1
  #L07d354.  return @kind void;
  #L07d356.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d358.  @monitorexit v1
  #Try_end1.  
  #Try_start2.  
  #L07d35a.  throw v0;
  #Try_end2.  
  #L07d35c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07d35e.  goto L07d354;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07d35c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07d356;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L07d35c;
}

record `a.a.e.c` @kind class @AccessFlag PUBLIC_FINAL {
  `b.f` `a.a.e.c.g` @AccessFlag PUBLIC_FINAL;
  `b.f` `a.a.e.c.h` @AccessFlag PUBLIC_FINAL;
  `int` `a.a.e.c.i` @AccessFlag FINAL;
}
global `b.f` `@@a.a.e.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L07b160.  v0:= ":" @kind object;
  #L07b164.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b16a.  v0:= temp @kind object;
  #L07b16c.  `@@a.a.e.c.a` @type ^`b.f` := v0 @kind object;
  #L07b170.  v0:= ":status" @kind object;
  #L07b174.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b17a.  v0:= temp @kind object;
  #L07b17c.  `@@a.a.e.c.b` @type ^`b.f` := v0 @kind object;
  #L07b180.  v0:= ":method" @kind object;
  #L07b184.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b18a.  v0:= temp @kind object;
  #L07b18c.  `@@a.a.e.c.c` @type ^`b.f` := v0 @kind object;
  #L07b190.  v0:= ":path" @kind object;
  #L07b194.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b19a.  v0:= temp @kind object;
  #L07b19c.  `@@a.a.e.c.d` @type ^`b.f` := v0 @kind object;
  #L07b1a0.  v0:= ":scheme" @kind object;
  #L07b1a4.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b1aa.  v0:= temp @kind object;
  #L07b1ac.  `@@a.a.e.c.e` @type ^`b.f` := v0 @kind object;
  #L07b1b0.  v0:= ":authority" @kind object;
  #L07b1b4.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b1ba.  v0:= temp @kind object;
  #L07b1bc.  `@@a.a.e.c.f` @type ^`b.f` := v0 @kind object;
  #L07b1c0.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v2 @kind this, `b.f` v3 @kind object, `b.f` v4 @kind object) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L07b1d4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07b1da.  v2.`a.a.e.c.g` @type ^`b.f` := v3 @kind object;
  #L07b1de.  v2.`a.a.e.c.h` @type ^`b.f` := v4 @kind object;
  #L07b1e2.  call temp:= `g`(v3) @signature `Lb/f;.g:()I` @kind virtual;
  #L07b1e8.  v0:= temp;
  #L07b1ea.  v0:= v0 + 32;
  #L07b1ee.  call temp:= `g`(v4) @signature `Lb/f;.g:()I` @kind virtual;
  #L07b1f4.  v1:= temp;
  #L07b1f6.  v0:= v0 + v1 @kind int;
  #L07b1f8.  v2.`a.a.e.c.i` @type ^`int` := v0;
  #L07b1fc.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v1 @kind this, `b.f` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L07b210.  call temp:= `a`(v3) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b216.  v0:= temp @kind object;
  #L07b218.  call `<init>`(v1, v2, v0) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @kind direct;
  #L07b21e.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/a/e/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L07b230.  call temp:= `a`(v3) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b236.  v0:= temp @kind object;
  #L07b238.  call temp:= `a`(v4) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07b23e.  v1:= temp @kind object;
  #L07b240.  call `<init>`(v2, v0, v1) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @kind direct;
  #L07b246.  return @kind void;
}
procedure `boolean` `equals`(`a.a.e.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/a/e/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07b258.  v0:= 0I;
  #L07b25a.  v1:= instanceof @variable v4 @type ^`a.a.e.c` @kind boolean;
  #L07b25e.  if v1 == 0 then goto L07b290;
  #L07b262.  v4:= (`a.a.e.c`) v4 @kind object;
  #L07b266.  v1:= v3.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07b26a.  v2:= v4.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07b26e.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07b274.  v1:= temp;
  #L07b276.  if v1 == 0 then goto L07b290;
  #L07b27a.  v1:= v3.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07b27e.  v2:= v4.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07b282.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07b288.  v1:= temp;
  #L07b28a.  if v1 == 0 then goto L07b290;
  #L07b28e.  v0:= 1I;
  #L07b290.  return v0;
}
procedure `int` `hashCode`(`a.a.e.c` v2 @kind this) @signature `La/a/e/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07b2a4.  v0:= v2.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07b2a8.  call temp:= `hashCode`(v0) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L07b2ae.  v0:= temp;
  #L07b2b0.  v0:= v0 + 527;
  #L07b2b4.  v0:= v0 * 31;
  #L07b2b8.  v1:= v2.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07b2bc.  call temp:= `hashCode`(v1) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L07b2c2.  v1:= temp;
  #L07b2c4.  v0:= v0 + v1 @kind int;
  #L07b2c6.  return v0;
}
procedure `java.lang.String` `toString`(`a.a.e.c` v4 @kind this) @signature `La/a/e/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07b2d8.  v0:= "%s: %s" @kind object;
  #L07b2dc.  v1:= 2I;
  #L07b2de.  v1:= new `java.lang.Object`[v1];
  #L07b2e2.  v2:= 0I;
  #L07b2e4.  v3:= v4.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07b2e8.  call temp:= `a`(v3) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07b2ee.  v3:= temp @kind object;
  #L07b2f0.  v1[v2]:= v3 @kind object;
  #L07b2f4.  v2:= 1I;
  #L07b2f6.  v3:= v4.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07b2fa.  call temp:= `a`(v3) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07b300.  v3:= temp @kind object;
  #L07b302.  v1[v2]:= v3 @kind object;
  #L07b306.  call temp:= `a`(v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07b30c.  v0:= temp @kind object;
  #L07b30e.  return v0 @kind object;
}

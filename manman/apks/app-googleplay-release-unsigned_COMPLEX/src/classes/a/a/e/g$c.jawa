record `a.a.e.g$c` @kind class @AccessFlag  extends `a.a.b` @kind class, `a.a.e.h$b` @kind interface {
  `a.a.e.h` `a.a.e.g$c.a` @AccessFlag FINAL;
  `a.a.e.g` `a.a.e.g$c.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$c` v4 @kind this, `a.a.e.g` v5 @kind object, `a.a.e.h` v6 @kind object) @signature `La/a/e/g$c;.<init>:(La/a/e/g;La/a/e/h;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07d7c0.  v4.`a.a.e.g$c.c` @type ^`a.a.e.g` := v5 @kind object;
  #L07d7c4.  v0:= "OkHttp %s" @kind object;
  #L07d7c8.  v1:= 1I;
  #L07d7ca.  v1:= new `java.lang.Object`[v1];
  #L07d7ce.  v2:= 0I;
  #L07d7d0.  v3:= v5.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07d7d4.  v1[v2]:= v3 @kind object;
  #L07d7d8.  call `<init>`(v4, v0, v1) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07d7de.  v4.`a.a.e.g$c.a` @type ^`a.a.e.h` := v6 @kind object;
  #L07d7e2.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v6 @kind this, `a.a.e.n` v7 @kind object) @signature `La/a/e/g$c;.a:(La/a/e/n;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07d7f4.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07d7f8.  v1:= new `a.a.e.g$c$3`;
  #L07d7fc.  v2:= "OkHttp %s ACK Settings" @kind object;
  #L07d800.  v3:= 1I;
  #L07d802.  v3:= new `java.lang.Object`[v3];
  #L07d806.  v4:= 0I;
  #L07d808.  v5:= v6.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d80c.  v5:= v5.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07d810.  v3[v4]:= v5 @kind object;
  #L07d814.  call `<init>`(v1, v6, v2, v3, v7) @signature `La/a/e/g$c$3;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/n;)V` @kind direct;
  #L07d81a.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07d820.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v0 @kind this) @signature `La/a/e/g$c;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L07d834.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `La/a/e/g$c;.a:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L07d848.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v1 @kind this, `int` v2 , `int` v3 , `java.util.List` v4 @kind object) @signature `La/a/e/g$c;.a:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07d85c.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d860.  call `a`(v0, v3, v4) @signature `La/a/e/g;.a:(ILjava/util/List;)V` @kind virtual;
  #L07d866.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v4 @kind this, `int` v5 , `long` v6 ) @signature `La/a/e/g$c;.a:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07d878.  if v5 != 0 then goto L07d8a4;
  #L07d87c.  v1:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d880.  @monitorenter v1
  #Try_start0.  
  #L07d882.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d886.  v2:= v0.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07d88a.  v2:= v2 + v6 @kind long;
  #L07d88c.  v0.`a.a.e.g.k` @type ^`long` := v2 @kind wide;
  #L07d890.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d894.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L07d89a.  @monitorexit v1
  #L07d89c.  return @kind void;
  #L07d89e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d8a0.  @monitorexit v1
  #Try_end0.  
  #L07d8a2.  throw v0;
  #L07d8a4.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d8a8.  call temp:= `a`(v0, v5) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07d8ae.  v1:= temp @kind object;
  #L07d8b0.  if v1 == 0 then goto L07d89c;
  #L07d8b4.  @monitorenter v1
  #Try_start1.  
  #L07d8b6.  call `a`(v1, v6) @signature `La/a/e/i;.a:(J)V` @kind virtual;
  #L07d8bc.  @monitorexit v1
  #L07d8be.  goto L07d89c;
  #L07d8c0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d8c2.  @monitorexit v1
  #Try_end1.  
  #L07d8c4.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d89e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07d8c0;
}
procedure `void` `a`(`a.a.e.g$c` v1 @kind this, `int` v2 , `a.a.e.b` v3 @kind object) @signature `La/a/e/g$c;.a:(ILa/a/e/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07d8f0.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d8f4.  call temp:= `d`(v0, v2) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07d8fa.  v0:= temp;
  #L07d8fc.  if v0 == 0 then goto L07d90c;
  #L07d900.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d904.  call `c`(v0, v2, v3) @signature `La/a/e/g;.c:(ILa/a/e/b;)V` @kind virtual;
  #L07d90a.  return @kind void;
  #L07d90c.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d910.  call temp:= `b`(v0, v2) @signature `La/a/e/g;.b:(I)La/a/e/i;` @kind virtual;
  #L07d916.  v0:= temp @kind object;
  #L07d918.  if v0 == 0 then goto L07d90a;
  #L07d91c.  call `c`(v0, v3) @signature `La/a/e/i;.c:(La/a/e/b;)V` @kind virtual;
  #L07d922.  goto L07d90a;
}
procedure `void` `a`(`a.a.e.g$c` v5 @kind this, `int` v6 , `a.a.e.b` v7 @kind object, `b.f` v8 @kind object) @signature `La/a/e/g$c;.a:(ILa/a/e/b;Lb/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07d934.  call temp:= `g`(v8) @signature `Lb/f;.g:()I` @kind virtual;
  #L07d93a.  v0:= temp;
  #L07d93c.  if v0 <= 0 then goto L07d940;
  #L07d940.  v1:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d944.  @monitorenter v1
  #Try_start0.  
  #L07d946.  v0:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d94a.  v0:= v0.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d94e.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07d954.  v0:= temp @kind object;
  #L07d956.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d95a.  v2:= v2.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d95e.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07d964.  v2:= temp;
  #L07d966.  v2:= new `a.a.e.i`[v2];
  #L07d96a.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07d970.  v0:= temp @kind object;
  #L07d972.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L07d976.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d97a.  v3:= 1I;
  #L07d97c.  v2.`a.a.e.g.h` @type ^`boolean` := v3 @kind boolean;
  #L07d980.  @monitorexit v1
  #Try_end0.  
  #L07d982.  v2:= length @variable v0;
  #L07d984.  v1:= 0I;
  #L07d986.  if v1 >= v2 then goto L07d9ce;
  #L07d98a.  v3:= v0[v1] @kind object;
  #L07d98e.  call temp:= `a`(v3) @signature `La/a/e/i;.a:()I` @kind virtual;
  #L07d994.  v4:= temp;
  #L07d996.  if v4 <= v6 then goto L07d9c2;
  #L07d99a.  call temp:= `c`(v3) @signature `La/a/e/i;.c:()Z` @kind virtual;
  #L07d9a0.  v4:= temp;
  #L07d9a2.  if v4 == 0 then goto L07d9c2;
  #L07d9a6.  v4:= `@@a.a.e.b.e` @type ^`a.a.e.b` @kind object;
  #L07d9aa.  call `c`(v3, v4) @signature `La/a/e/i;.c:(La/a/e/b;)V` @kind virtual;
  #L07d9b0.  v4:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d9b4.  call temp:= `a`(v3) @signature `La/a/e/i;.a:()I` @kind virtual;
  #L07d9ba.  v3:= temp;
  #L07d9bc.  call temp:= `b`(v4, v3) @signature `La/a/e/g;.b:(I)La/a/e/i;` @kind virtual;
  #L07d9c2.  v1:= v1 + 1;
  #L07d9c6.  goto L07d986;
  #L07d9c8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L07d9ca.  @monitorexit v1
  #Try_end1.  
  #L07d9cc.  throw v0;
  #L07d9ce.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d9c8;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07d9c8;
}
procedure `void` `a`(`a.a.e.g$c` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `La/a/e/g$c;.a:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07d9f4.  if v4 == 0 then goto L07da10;
  #L07d9f8.  v0:= v3.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d9fc.  call temp:= `c`(v0, v5) @signature `La/a/e/g;.c:(I)La/a/e/l;` @kind virtual;
  #L07da02.  v0:= temp @kind object;
  #L07da04.  if v0 == 0 then goto L07da0e;
  #L07da08.  call `b`(v0) @signature `La/a/e/l;.b:()V` @kind virtual;
  #L07da0e.  return @kind void;
  #L07da10.  v0:= v3.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07da14.  v1:= 1I;
  #L07da16.  v2:= 0I;
  #L07da18.  call `a`(v0, v1, v5, v6, v2) @signature `La/a/e/g;.a:(ZIILa/a/e/l;)V` @kind virtual;
  #L07da1e.  goto L07da0e;
}
procedure `void` `a`(`a.a.e.g$c` v8 @kind this, `boolean` v9 , `int` v10 , `int` v11 , `java.util.List` v12 @kind object) @signature `La/a/e/g$c;.a:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07da30.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07da34.  call temp:= `d`(v0, v10) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07da3a.  v0:= temp;
  #L07da3c.  if v0 == 0 then goto L07da4c;
  #L07da40.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07da44.  call `a`(v0, v10, v12, v9) @signature `La/a/e/g;.a:(ILjava/util/List;Z)V` @kind virtual;
  #L07da4a.  return @kind void;
  #L07da4c.  v6:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07da50.  @monitorenter v6
  #Try_start0.  
  #L07da52.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07da56.  v0:= v0.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #L07da5a.  if v0 == 0 then goto L07da68;
  #L07da5e.  @monitorexit v6
  #L07da60.  goto L07da4a;
  #L07da62.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07da64.  @monitorexit v6
  #Try_end0.  
  #L07da66.  throw v0;
  #Try_start1.  
  #L07da68.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07da6c.  call temp:= `a`(v0, v10) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07da72.  v0:= temp @kind object;
  #L07da74.  if v0 != 0 then goto L07db12;
  #L07da78.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07da7c.  v0:= v0.`a.a.e.g.f` @type ^`int`;
  #L07da80.  if v10 > v0 then goto L07da88;
  #L07da84.  @monitorexit v6
  #L07da86.  goto L07da4a;
  #L07da88.  v0:= v10 %% 2;
  #L07da8c.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07da90.  v1:= v1.`a.a.e.g.g` @type ^`int`;
  #L07da94.  v1:= v1 %% 2;
  #L07da98.  if v0 != v1 then goto L07daa0;
  #L07da9c.  @monitorexit v6
  #L07da9e.  goto L07da4a;
  #L07daa0.  v0:= new `a.a.e.i`;
  #L07daa4.  v2:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07daa8.  v3:= 0I;
  #L07daaa.  v1:= v10;
  #L07daac.  v4:= v9;
  #L07daae.  v5:= v12 @kind object;
  #L07dab0.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/i;.<init>:(ILa/a/e/g;ZZLjava/util/List;)V` @kind direct;
  #L07dab6.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07daba.  v1.`a.a.e.g.f` @type ^`int` := v10;
  #L07dabe.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dac2.  v1:= v1.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07dac6.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07dacc.  v2:= temp @kind object;
  #L07dace.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07dad4.  v1:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07dad8.  v2:= new `a.a.e.g$c$1`;
  #L07dadc.  v3:= "OkHttp %s stream %d" @kind object;
  #L07dae0.  v4:= 2I;
  #L07dae2.  v4:= new `java.lang.Object`[v4];
  #L07dae6.  v5:= 0I;
  #L07dae8.  v7:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07daec.  v7:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07daf0.  v4[v5]:= v7 @kind object;
  #L07daf4.  v5:= 1I;
  #L07daf6.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07dafc.  v7:= temp @kind object;
  #L07dafe.  v4[v5]:= v7 @kind object;
  #L07db02.  call `<init>`(v2, v8, v3, v4, v0) @signature `La/a/e/g$c$1;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/i;)V` @kind direct;
  #L07db08.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07db0e.  @monitorexit v6
  #L07db10.  goto L07da4a;
  #L07db12.  @monitorexit v6
  #Try_end1.  
  #L07db14.  call `a`(v0, v12) @signature `La/a/e/i;.a:(Ljava/util/List;)V` @kind virtual;
  #L07db1a.  if v9 == 0 then goto L07da4a;
  #L07db1e.  call `i`(v0) @signature `La/a/e/i;.i:()V` @kind virtual;
  #L07db24.  goto L07da4a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07da62;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07da62;
}
procedure `void` `a`(`a.a.e.g$c` v2 @kind this, `boolean` v3 , `int` v4 , `b.e` v5 @kind object, `int` v6 ) @signature `La/a/e/g$c;.a:(ZILb/e;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07db4c.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07db50.  call temp:= `d`(v0, v4) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07db56.  v0:= temp;
  #L07db58.  if v0 == 0 then goto L07db68;
  #L07db5c.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07db60.  call `a`(v0, v4, v5, v6, v3) @signature `La/a/e/g;.a:(ILb/e;IZ)V` @kind virtual;
  #L07db66.  return @kind void;
  #L07db68.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07db6c.  call temp:= `a`(v0, v4) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07db72.  v0:= temp @kind object;
  #L07db74.  if v0 != 0 then goto L07db90;
  #L07db78.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07db7c.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #L07db80.  call `a`(v0, v4, v1) @signature `La/a/e/g;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07db86.  v0:= (`long`) v6 @kind i2l;
  #L07db88.  call `g`(v5, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07db8e.  goto L07db66;
  #L07db90.  call `a`(v0, v5, v6) @signature `La/a/e/i;.a:(Lb/e;I)V` @kind virtual;
  #L07db96.  if v3 == 0 then goto L07db66;
  #L07db9a.  call `i`(v0) @signature `La/a/e/i;.i:()V` @kind virtual;
  #L07dba0.  goto L07db66;
}
procedure `void` `a`(`a.a.e.g$c` v13 @kind this, `boolean` v14 , `a.a.e.n` v15 @kind object) @signature `La/a/e/g$c;.a:(ZLa/a/e/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L07dbb4.  v6:= 0L;
  #L07dbb8.  v1:= 0I;
  #L07dbba.  v0:= 0I;
  #L07dbbc.  v8:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dbc0.  @monitorenter v8
  #Try_start0.  
  #L07dbc2.  v2:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dbc6.  v2:= v2.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07dbca.  call temp:= `d`(v2) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07dbd0.  v2:= temp;
  #L07dbd2.  if v14 == 0 then goto L07dbe4;
  #L07dbd6.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dbda.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07dbde.  call `a`(v3) @signature `La/a/e/n;.a:()V` @kind virtual;
  #L07dbe4.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dbe8.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07dbec.  call `a`(v3, v15) @signature `La/a/e/n;.a:(La/a/e/n;)V` @kind virtual;
  #L07dbf2.  call `a`(v13, v15) @signature `La/a/e/g$c;.a:(La/a/e/n;)V` @kind direct;
  #L07dbf8.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dbfc.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07dc00.  call temp:= `d`(v3) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07dc06.  v3:= temp;
  #L07dc08.  v4:= -1I;
  #L07dc0a.  if v3 == v4 then goto L07dcea;
  #L07dc0e.  if v3 == v2 then goto L07dcea;
  #L07dc12.  v2:= v3 - v2 @kind int;
  #L07dc16.  v2:= (`long`) v2 @kind i2l;
  #L07dc18.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dc1c.  v4:= v4.`a.a.e.g.n` @type ^`boolean` @kind boolean;
  #L07dc20.  if v4 != 0 then goto L07dc38;
  #L07dc24.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dc28.  call `a`(v4, v2) @signature `La/a/e/g;.a:(J)V` @kind virtual;
  #L07dc2e.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dc32.  v5:= 1I;
  #L07dc34.  v4.`a.a.e.g.n` @type ^`boolean` := v5 @kind boolean;
  #L07dc38.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dc3c.  v4:= v4.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07dc40.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L07dc46.  v4:= temp;
  #L07dc48.  if v4 != 0 then goto L07dce4;
  #L07dc4c.  v0:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dc50.  v0:= v0.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07dc54.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07dc5a.  v0:= temp @kind object;
  #L07dc5c.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dc60.  v4:= v4.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07dc64.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07dc6a.  v4:= temp;
  #L07dc6c.  v4:= new `a.a.e.i`[v4];
  #L07dc70.  call temp:= `toArray`(v0, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07dc76.  v0:= temp @kind object;
  #L07dc78.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L07dc7c.  v4:= v2 @kind wide;
  #L07dc7e.  v2:= v0 @kind object;
  #L07dc80.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07dc84.  v3:= new `a.a.e.g$c$2`;
  #L07dc88.  v9:= "OkHttp %s settings" @kind object;
  #L07dc8c.  v10:= 1I;
  #L07dc8e.  v10:= new `java.lang.Object`[v10];
  #L07dc92.  v11:= 0I;
  #L07dc94.  v12:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dc98.  v12:= v12.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07dc9c.  v10[v11]:= v12 @kind object;
  #L07dca0.  call `<init>`(v3, v13, v9, v10) @signature `La/a/e/g$c$2;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07dca6.  call `execute`(v0, v3) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07dcac.  @monitorexit v8
  #Try_end0.  
  #L07dcae.  if v2 == 0 then goto L07dce2;
  #L07dcb2.  v0:= lcmp(v4, v6);
  #L07dcb6.  if v0 == 0 then goto L07dce2;
  #L07dcba.  v3:= length @variable v2;
  #L07dcbc.  v0:= v1;
  #L07dcbe.  if v0 >= v3 then goto L07dce2;
  #L07dcc2.  v1:= v2[v0] @kind object;
  #L07dcc6.  @monitorenter v1
  #Try_start1.  
  #L07dcc8.  call `a`(v1, v4) @signature `La/a/e/i;.a:(J)V` @kind virtual;
  #L07dcce.  @monitorexit v1
  #Try_end1.  
  #L07dcd0.  v0:= v0 + 1;
  #L07dcd4.  goto L07dcbe;
  #L07dcd6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L07dcd8.  @monitorexit v8
  #Try_end2.  
  #L07dcda.  throw v0;
  #L07dcdc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L07dcde.  @monitorexit v1
  #Try_end3.  
  #L07dce0.  throw v0;
  #L07dce2.  return @kind void;
  #L07dce4.  v4:= v2 @kind wide;
  #L07dce6.  v2:= v0 @kind object;
  #L07dce8.  goto L07dc80;
  #L07dcea.  v2:= v0 @kind object;
  #L07dcec.  v4:= v6 @kind wide;
  #L07dcee.  goto L07dc80;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07dcd6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07dcdc;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07dcd6;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07dcdc;
}
procedure `void` `b`(`a.a.e.g$c` v5 @kind this) @signature `La/a/e/g$c;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07dd28.  v0:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #L07dd2c.  v2:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #Try_start0.  
  #L07dd30.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07dd34.  call `a`(v1, v5) @signature `La/a/e/h;.a:(La/a/e/h$b;)V` @kind virtual;
  #L07dd3a.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07dd3e.  v3:= 0I;
  #L07dd40.  call temp:= `a`(v1, v3, v5) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @kind virtual;
  #L07dd46.  v1:= temp;
  #L07dd48.  if v1 != 0 then goto L07dd3a;
  #L07dd4c.  v0:= `@@a.a.e.b.a` @type ^`a.a.e.b` @kind object;
  #L07dd50.  v1:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #Try_end0.  
  #Try_start1.  
  #L07dd54.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dd58.  call `a`(v2, v0, v1) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end1.  
  #L07dd5e.  v0:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07dd62.  call `a`(v0) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07dd68.  return @kind void;
  #L07dd6a.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L07dd6c.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #Try_end2.  
  #Try_start3.  
  #L07dd70.  v0:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #Try_end3.  
  #Try_start4.  
  #L07dd74.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dd78.  call `a`(v2, v1, v0) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end4.  
  #L07dd7e.  v0:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07dd82.  call `a`(v0) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07dd88.  goto L07dd68;
  #L07dd8a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07dd8c.  v4:= v1 @kind object;
  #L07dd8e.  v1:= v0 @kind object;
  #L07dd90.  v0:= v4 @kind object;
  #Try_start5.  
  #L07dd92.  v3:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07dd96.  call `a`(v3, v1, v2) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end5.  
  #L07dd9c.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07dda0.  call `a`(v1) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07dda6.  throw v0;
  #L07dda8.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L07ddaa.  goto L07dd9c;
  #L07ddac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07ddae.  goto L07dd92;
  #L07ddb0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07ddb2.  goto L07dd7e;
  #L07ddb4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07ddb6.  goto L07dd5e;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07dd6a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07dd8a;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L07ddb4;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07dd8a;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07ddac;
  catch `java.io.IOException` @[Try_start4..Try_end4] goto L07ddb0;
  catch `java.io.IOException` @[Try_start5..Try_end5] goto L07dda8;
}

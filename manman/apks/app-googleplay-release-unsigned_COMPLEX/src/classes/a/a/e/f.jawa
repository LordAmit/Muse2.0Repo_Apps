record `a.a.e.f` @kind class @AccessFlag PUBLIC_FINAL extends `a.a.c.c` @kind interface {
  `a.a.b.g` `a.a.e.f.a` @AccessFlag FINAL;
  `a.u` `a.a.e.f.l` @AccessFlag PRIVATE_FINAL;
  `a.a.e.g` `a.a.e.f.m` @AccessFlag PRIVATE_FINAL;
  `a.a.e.i` `a.a.e.f.n` @AccessFlag PRIVATE;
}
global `b.f` `@@a.a.e.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@a.a.e.f.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@a.a.e.f.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07cc54.  v7:= 4I;
  #L07cc56.  v6:= 3I;
  #L07cc58.  v5:= 2I;
  #L07cc5a.  v4:= 1I;
  #L07cc5c.  v3:= 0I;
  #L07cc5e.  v0:= "connection" @kind object;
  #L07cc62.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07cc68.  v0:= temp @kind object;
  #L07cc6a.  `@@a.a.e.f.b` @type ^`b.f` := v0 @kind object;
  #L07cc6e.  v0:= "host" @kind object;
  #L07cc72.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07cc78.  v0:= temp @kind object;
  #L07cc7a.  `@@a.a.e.f.c` @type ^`b.f` := v0 @kind object;
  #L07cc7e.  v0:= "keep-alive" @kind object;
  #L07cc82.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07cc88.  v0:= temp @kind object;
  #L07cc8a.  `@@a.a.e.f.d` @type ^`b.f` := v0 @kind object;
  #L07cc8e.  v0:= "proxy-connection" @kind object;
  #L07cc92.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07cc98.  v0:= temp @kind object;
  #L07cc9a.  `@@a.a.e.f.e` @type ^`b.f` := v0 @kind object;
  #L07cc9e.  v0:= "transfer-encoding" @kind object;
  #L07cca2.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07cca8.  v0:= temp @kind object;
  #L07ccaa.  `@@a.a.e.f.f` @type ^`b.f` := v0 @kind object;
  #L07ccae.  v0:= "te" @kind object;
  #L07ccb2.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07ccb8.  v0:= temp @kind object;
  #L07ccba.  `@@a.a.e.f.g` @type ^`b.f` := v0 @kind object;
  #L07ccbe.  v0:= "encoding" @kind object;
  #L07ccc2.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07ccc8.  v0:= temp @kind object;
  #L07ccca.  `@@a.a.e.f.h` @type ^`b.f` := v0 @kind object;
  #L07ccce.  v0:= "upgrade" @kind object;
  #L07ccd2.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07ccd8.  v0:= temp @kind object;
  #L07ccda.  `@@a.a.e.f.i` @type ^`b.f` := v0 @kind object;
  #L07ccde.  v0:= 12I;
  #L07cce2.  v0:= new `b.f`[v0];
  #L07cce6.  v1:= `@@a.a.e.f.b` @type ^`b.f` @kind object;
  #L07ccea.  v0[v3]:= v1 @kind object;
  #L07ccee.  v1:= `@@a.a.e.f.c` @type ^`b.f` @kind object;
  #L07ccf2.  v0[v4]:= v1 @kind object;
  #L07ccf6.  v1:= `@@a.a.e.f.d` @type ^`b.f` @kind object;
  #L07ccfa.  v0[v5]:= v1 @kind object;
  #L07ccfe.  v1:= `@@a.a.e.f.e` @type ^`b.f` @kind object;
  #L07cd02.  v0[v6]:= v1 @kind object;
  #L07cd06.  v1:= `@@a.a.e.f.g` @type ^`b.f` @kind object;
  #L07cd0a.  v0[v7]:= v1 @kind object;
  #L07cd0e.  v1:= 5I;
  #L07cd10.  v2:= `@@a.a.e.f.f` @type ^`b.f` @kind object;
  #L07cd14.  v0[v1]:= v2 @kind object;
  #L07cd18.  v1:= 6I;
  #L07cd1a.  v2:= `@@a.a.e.f.h` @type ^`b.f` @kind object;
  #L07cd1e.  v0[v1]:= v2 @kind object;
  #L07cd22.  v1:= 7I;
  #L07cd24.  v2:= `@@a.a.e.f.i` @type ^`b.f` @kind object;
  #L07cd28.  v0[v1]:= v2 @kind object;
  #L07cd2c.  v1:= 8I;
  #L07cd30.  v2:= `@@a.a.e.c.c` @type ^`b.f` @kind object;
  #L07cd34.  v0[v1]:= v2 @kind object;
  #L07cd38.  v1:= 9I;
  #L07cd3c.  v2:= `@@a.a.e.c.d` @type ^`b.f` @kind object;
  #L07cd40.  v0[v1]:= v2 @kind object;
  #L07cd44.  v1:= 10I;
  #L07cd48.  v2:= `@@a.a.e.c.e` @type ^`b.f` @kind object;
  #L07cd4c.  v0[v1]:= v2 @kind object;
  #L07cd50.  v1:= 11I;
  #L07cd54.  v2:= `@@a.a.e.c.f` @type ^`b.f` @kind object;
  #L07cd58.  v0[v1]:= v2 @kind object;
  #L07cd5c.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L07cd62.  v0:= temp @kind object;
  #L07cd64.  `@@a.a.e.f.j` @type ^`java.util.List` := v0 @kind object;
  #L07cd68.  v0:= 8I;
  #L07cd6c.  v0:= new `b.f`[v0];
  #L07cd70.  v1:= `@@a.a.e.f.b` @type ^`b.f` @kind object;
  #L07cd74.  v0[v3]:= v1 @kind object;
  #L07cd78.  v1:= `@@a.a.e.f.c` @type ^`b.f` @kind object;
  #L07cd7c.  v0[v4]:= v1 @kind object;
  #L07cd80.  v1:= `@@a.a.e.f.d` @type ^`b.f` @kind object;
  #L07cd84.  v0[v5]:= v1 @kind object;
  #L07cd88.  v1:= `@@a.a.e.f.e` @type ^`b.f` @kind object;
  #L07cd8c.  v0[v6]:= v1 @kind object;
  #L07cd90.  v1:= `@@a.a.e.f.g` @type ^`b.f` @kind object;
  #L07cd94.  v0[v7]:= v1 @kind object;
  #L07cd98.  v1:= 5I;
  #L07cd9a.  v2:= `@@a.a.e.f.f` @type ^`b.f` @kind object;
  #L07cd9e.  v0[v1]:= v2 @kind object;
  #L07cda2.  v1:= 6I;
  #L07cda4.  v2:= `@@a.a.e.f.h` @type ^`b.f` @kind object;
  #L07cda8.  v0[v1]:= v2 @kind object;
  #L07cdac.  v1:= 7I;
  #L07cdae.  v2:= `@@a.a.e.f.i` @type ^`b.f` @kind object;
  #L07cdb2.  v0[v1]:= v2 @kind object;
  #L07cdb6.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L07cdbc.  v0:= temp @kind object;
  #L07cdbe.  `@@a.a.e.f.k` @type ^`java.util.List` := v0 @kind object;
  #L07cdc2.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.f` v0 @kind this, `a.u` v1 @kind object, `a.a.b.g` v2 @kind object, `a.a.e.g` v3 @kind object) @signature `La/a/e/f;.<init>:(La/u;La/a/b/g;La/a/e/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L07cdd4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07cdda.  v0.`a.a.e.f.l` @type ^`a.u` := v1 @kind object;
  #L07cdde.  v0.`a.a.e.f.a` @type ^`a.a.b.g` := v2 @kind object;
  #L07cde2.  v0.`a.a.e.f.m` @type ^`a.a.e.g` := v3 @kind object;
  #L07cde6.  return @kind void;
}
procedure `a.z$a` `a`(`java.util.List` v9 @kind object) @signature `La/a/e/f;.a:(Ljava/util/List;)La/z$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07cdf8.  v2:= 0I;
  #L07cdfa.  v1:= new `a.q$a`;
  #L07cdfe.  call `<init>`(v1) @signature `La/q$a;.<init>:()V` @kind direct;
  #L07ce04.  v0:= 0I;
  #L07ce06.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L07ce0c.  v5:= temp;
  #L07ce0e.  v4:= v0;
  #L07ce10.  v3:= v2 @kind object;
  #L07ce12.  if v4 >= v5 then goto L07cecc;
  #L07ce16.  call temp:= `get`(v9, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L07ce1c.  v0:= temp @kind object;
  #L07ce1e.  v0:= (`a.a.e.c`) v0 @kind object;
  #L07ce22.  if v0 != 0 then goto L07ce4e;
  #L07ce26.  if v3 == 0 then goto L07cec6;
  #L07ce2a.  v0:= v3.`a.a.c.k.b` @type ^`int`;
  #L07ce2e.  v6:= 100I;
  #L07ce32.  if v0 != v6 then goto L07cec6;
  #L07ce36.  v0:= new `a.q$a`;
  #L07ce3a.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L07ce40.  v1:= v2 @kind object;
  #L07ce42.  v3:= v4 + 1;
  #L07ce46.  v4:= v3;
  #L07ce48.  v3:= v1 @kind object;
  #L07ce4a.  v1:= v0 @kind object;
  #L07ce4c.  goto L07ce12;
  #L07ce4e.  v6:= v0.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07ce52.  v0:= v0.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07ce56.  call temp:= `a`(v0) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07ce5c.  v0:= temp @kind object;
  #L07ce5e.  v7:= `@@a.a.e.c.b` @type ^`b.f` @kind object;
  #L07ce62.  call temp:= `equals`(v6, v7) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07ce68.  v7:= temp;
  #L07ce6a.  if v7 == 0 then goto L07cea4;
  #L07ce6e.  v3:= new `java.lang.StringBuilder`;
  #L07ce72.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07ce78.  v6:= "HTTP/1.1 " @kind object;
  #L07ce7c.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07ce82.  v3:= temp @kind object;
  #L07ce84.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07ce8a.  v0:= temp @kind object;
  #L07ce8c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07ce92.  v0:= temp @kind object;
  #L07ce94.  call temp:= `a`(v0) @signature `La/a/c/k;.a:(Ljava/lang/String;)La/a/c/k;` @kind static;
  #L07ce9a.  v0:= temp @kind object;
  #L07ce9c.  v8:= v1 @kind object;
  #L07ce9e.  v1:= v0 @kind object;
  #L07cea0.  v0:= v8 @kind object;
  #L07cea2.  goto L07ce42;
  #L07cea4.  v7:= `@@a.a.e.f.k` @type ^`java.util.List` @kind object;
  #L07cea8.  call temp:= `contains`(v7, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07ceae.  v7:= temp;
  #L07ceb0.  if v7 != 0 then goto L07cec6;
  #L07ceb4.  v7:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L07ceb8.  call temp:= `a`(v6) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07cebe.  v6:= temp @kind object;
  #L07cec0.  call `a`(v7, v1, v6, v0) @signature `La/a/a;.a:(La/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L07cec6.  v0:= v1 @kind object;
  #L07cec8.  v1:= v3 @kind object;
  #L07ceca.  goto L07ce42;
  #L07cecc.  if v3 != 0 then goto L07cee0;
  #L07ced0.  v0:= new `java.net.ProtocolException`;
  #L07ced4.  v1:= "Expected ':status' header not present" @kind object;
  #L07ced8.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07cede.  throw v0;
  #L07cee0.  v0:= new `a.z$a`;
  #L07cee4.  call `<init>`(v0) @signature `La/z$a;.<init>:()V` @kind direct;
  #L07ceea.  v2:= `@@a.v.d` @type ^`a.v` @kind object;
  #L07ceee.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(La/v;)La/z$a;` @kind virtual;
  #L07cef4.  v0:= temp @kind object;
  #L07cef6.  v2:= v3.`a.a.c.k.b` @type ^`int`;
  #L07cefa.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(I)La/z$a;` @kind virtual;
  #L07cf00.  v0:= temp @kind object;
  #L07cf02.  v2:= v3.`a.a.c.k.c` @type ^`java.lang.String` @kind object;
  #L07cf06.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(Ljava/lang/String;)La/z$a;` @kind virtual;
  #L07cf0c.  v0:= temp @kind object;
  #L07cf0e.  call temp:= `a`(v1) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L07cf14.  v1:= temp @kind object;
  #L07cf16.  call temp:= `a`(v0, v1) @signature `La/z$a;.a:(La/q;)La/z$a;` @kind virtual;
  #L07cf1c.  v0:= temp @kind object;
  #L07cf1e.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.x` v7 @kind object) @signature `La/a/e/f;.b:(La/x;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07cf30.  call temp:= `c`(v7) @signature `La/x;.c:()La/q;` @kind virtual;
  #L07cf36.  v1:= temp @kind object;
  #L07cf38.  v2:= new `java.util.ArrayList`;
  #L07cf3c.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L07cf42.  v0:= temp;
  #L07cf44.  v0:= v0 + 4;
  #L07cf48.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L07cf4e.  v0:= new `a.a.e.c`;
  #L07cf52.  v3:= `@@a.a.e.c.c` @type ^`b.f` @kind object;
  #L07cf56.  call temp:= `b`(v7) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L07cf5c.  v4:= temp @kind object;
  #L07cf5e.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07cf64.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07cf6a.  v0:= new `a.a.e.c`;
  #L07cf6e.  v3:= `@@a.a.e.c.d` @type ^`b.f` @kind object;
  #L07cf72.  call temp:= `a`(v7) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07cf78.  v4:= temp @kind object;
  #L07cf7a.  call temp:= `a`(v4) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @kind static;
  #L07cf80.  v4:= temp @kind object;
  #L07cf82.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07cf88.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07cf8e.  v0:= "Host" @kind object;
  #L07cf92.  call temp:= `a`(v7, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07cf98.  v0:= temp @kind object;
  #L07cf9a.  if v0 == 0 then goto L07cfb2;
  #L07cf9e.  v3:= new `a.a.e.c`;
  #L07cfa2.  v4:= `@@a.a.e.c.f` @type ^`b.f` @kind object;
  #L07cfa6.  call `<init>`(v3, v4, v0) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07cfac.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07cfb2.  v0:= new `a.a.e.c`;
  #L07cfb6.  v3:= `@@a.a.e.c.e` @type ^`b.f` @kind object;
  #L07cfba.  call temp:= `a`(v7) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07cfc0.  v4:= temp @kind object;
  #L07cfc2.  call temp:= `b`(v4) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L07cfc8.  v4:= temp @kind object;
  #L07cfca.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07cfd0.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07cfd6.  v0:= 0I;
  #L07cfd8.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L07cfde.  v3:= temp;
  #L07cfe0.  if v0 >= v3 then goto L07d02e;
  #L07cfe4.  call temp:= `a`(v1, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L07cfea.  v4:= temp @kind object;
  #L07cfec.  v5:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L07cff0.  call temp:= `toLowerCase`(v4, v5) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L07cff6.  v4:= temp @kind object;
  #L07cff8.  call temp:= `a`(v4) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07cffe.  v4:= temp @kind object;
  #L07d000.  v5:= `@@a.a.e.f.j` @type ^`java.util.List` @kind object;
  #L07d004.  call temp:= `contains`(v5, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07d00a.  v5:= temp;
  #L07d00c.  if v5 != 0 then goto L07d028;
  #L07d010.  v5:= new `a.a.e.c`;
  #L07d014.  call temp:= `b`(v1, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L07d01a.  v6:= temp @kind object;
  #L07d01c.  call `<init>`(v5, v4, v6) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07d022.  call temp:= `add`(v2, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07d028.  v0:= v0 + 1;
  #L07d02c.  goto L07cfe0;
  #L07d02e.  return v2 @kind object;
}
procedure `a.aa` `a`(`a.a.e.f` v3 @kind this, `a.z` v4 @kind object) @signature `La/a/e/f;.a:(La/z;)La/aa;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07d040.  v0:= new `a.a.e.f$a`;
  #L07d044.  v1:= v3.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07d048.  call temp:= `g`(v1) @signature `La/a/e/i;.g:()Lb/r;` @kind virtual;
  #L07d04e.  v1:= temp @kind object;
  #L07d050.  call `<init>`(v0, v3, v1) @signature `La/a/e/f$a;.<init>:(La/a/e/f;Lb/r;)V` @kind direct;
  #L07d056.  v1:= new `a.a.c.h`;
  #L07d05a.  call temp:= `e`(v4) @signature `La/z;.e:()La/q;` @kind virtual;
  #L07d060.  v2:= temp @kind object;
  #L07d062.  call temp:= `a`(v0) @signature `Lb/k;.a:(Lb/r;)Lb/e;` @kind static;
  #L07d068.  v0:= temp @kind object;
  #L07d06a.  call `<init>`(v1, v2, v0) @signature `La/a/c/h;.<init>:(La/q;Lb/e;)V` @kind direct;
  #L07d070.  return v1 @kind object;
}
procedure `a.z$a` `a`(`a.a.e.f` v3 @kind this, `boolean` v4 ) @signature `La/a/e/f;.a:(Z)La/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07d084.  v0:= v3.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07d088.  call temp:= `d`(v0) @signature `La/a/e/i;.d:()Ljava/util/List;` @kind virtual;
  #L07d08e.  v0:= temp @kind object;
  #L07d090.  call temp:= `a`(v0) @signature `La/a/e/f;.a:(Ljava/util/List;)La/z$a;` @kind static;
  #L07d096.  v0:= temp @kind object;
  #L07d098.  if v4 == 0 then goto L07d0b2;
  #L07d09c.  v1:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L07d0a0.  call temp:= `a`(v1, v0) @signature `La/a/a;.a:(La/z$a;)I` @kind virtual;
  #L07d0a6.  v1:= temp;
  #L07d0a8.  v2:= 100I;
  #L07d0ac.  if v1 != v2 then goto L07d0b2;
  #L07d0b0.  v0:= 0I;
  #L07d0b2.  return v0 @kind object;
}
procedure `b.q` `a`(`a.a.e.f` v1 @kind this, `a.x` v2 @kind object, `long` v3 ) @signature `La/a/e/f;.a:(La/x;J)Lb/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07d0c4.  v0:= v1.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07d0c8.  call temp:= `h`(v0) @signature `La/a/e/i;.h:()Lb/q;` @kind virtual;
  #L07d0ce.  v0:= temp @kind object;
  #L07d0d0.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.f` v1 @kind this) @signature `La/a/e/f;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07d0e4.  v0:= v1.`a.a.e.f.m` @type ^`a.a.e.g` @kind object;
  #L07d0e8.  call `b`(v0) @signature `La/a/e/g;.b:()V` @kind virtual;
  #L07d0ee.  return @kind void;
}
procedure `void` `a`(`a.a.e.f` v4 @kind this, `a.x` v5 @kind object) @signature `La/a/e/f;.a:(La/x;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07d100.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07d104.  if v0 == 0 then goto L07d10a;
  #L07d108.  return @kind void;
  #L07d10a.  call temp:= `d`(v5) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07d110.  v0:= temp @kind object;
  #L07d112.  if v0 == 0 then goto L07d17a;
  #L07d116.  v0:= 1I;
  #L07d118.  call temp:= `b`(v5) @signature `La/a/e/f;.b:(La/x;)Ljava/util/List;` @kind static;
  #L07d11e.  v1:= temp @kind object;
  #L07d120.  v2:= v4.`a.a.e.f.m` @type ^`a.a.e.g` @kind object;
  #L07d124.  call temp:= `a`(v2, v1, v0) @signature `La/a/e/g;.a:(Ljava/util/List;Z)La/a/e/i;` @kind virtual;
  #L07d12a.  v0:= temp @kind object;
  #L07d12c.  v4.`a.a.e.f.n` @type ^`a.a.e.i` := v0 @kind object;
  #L07d130.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07d134.  call temp:= `e`(v0) @signature `La/a/e/i;.e:()Lb/s;` @kind virtual;
  #L07d13a.  v0:= temp @kind object;
  #L07d13c.  v1:= v4.`a.a.e.f.l` @type ^`a.u` @kind object;
  #L07d140.  call temp:= `b`(v1) @signature `La/u;.b:()I` @kind virtual;
  #L07d146.  v1:= temp;
  #L07d148.  v2:= (`long`) v1 @kind i2l;
  #L07d14a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07d14e.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07d154.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07d158.  call temp:= `f`(v0) @signature `La/a/e/i;.f:()Lb/s;` @kind virtual;
  #L07d15e.  v0:= temp @kind object;
  #L07d160.  v1:= v4.`a.a.e.f.l` @type ^`a.u` @kind object;
  #L07d164.  call temp:= `c`(v1) @signature `La/u;.c:()I` @kind virtual;
  #L07d16a.  v1:= temp;
  #L07d16c.  v2:= (`long`) v1 @kind i2l;
  #L07d16e.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07d172.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07d178.  goto L07d108;
  #L07d17a.  v0:= 0I;
  #L07d17c.  goto L07d118;
}
procedure `void` `b`(`a.a.e.f` v1 @kind this) @signature `La/a/e/f;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07d190.  v0:= v1.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07d194.  call temp:= `h`(v0) @signature `La/a/e/i;.h:()Lb/q;` @kind virtual;
  #L07d19a.  v0:= temp @kind object;
  #L07d19c.  call `close`(v0) @signature `Lb/q;.close:()V` @kind interface;
  #L07d1a2.  return @kind void;
}

record `a.a.e.b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `a.a.e.b.g` @AccessFlag PUBLIC_FINAL;
}
global `a.a.e.b` `@@a.a.e.b.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b`[] `@@a.a.e.b.h` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/a/e/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07aff4.  v8:= 4I;
  #L07aff6.  v7:= 3I;
  #L07aff8.  v6:= 2I;
  #L07affa.  v5:= 1I;
  #L07affc.  v4:= 0I;
  #L07affe.  v0:= new `a.a.e.b`;
  #L07b002.  v1:= "NO_ERROR" @kind object;
  #L07b006.  call `<init>`(v0, v1, v4, v4) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07b00c.  `@@a.a.e.b.a` @type ^`a.a.e.b` := v0 @kind object;
  #L07b010.  v0:= new `a.a.e.b`;
  #L07b014.  v1:= "PROTOCOL_ERROR" @kind object;
  #L07b018.  call `<init>`(v0, v1, v5, v5) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07b01e.  `@@a.a.e.b.b` @type ^`a.a.e.b` := v0 @kind object;
  #L07b022.  v0:= new `a.a.e.b`;
  #L07b026.  v1:= "INTERNAL_ERROR" @kind object;
  #L07b02a.  call `<init>`(v0, v1, v6, v6) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07b030.  `@@a.a.e.b.c` @type ^`a.a.e.b` := v0 @kind object;
  #L07b034.  v0:= new `a.a.e.b`;
  #L07b038.  v1:= "FLOW_CONTROL_ERROR" @kind object;
  #L07b03c.  call `<init>`(v0, v1, v7, v7) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07b042.  `@@a.a.e.b.d` @type ^`a.a.e.b` := v0 @kind object;
  #L07b046.  v0:= new `a.a.e.b`;
  #L07b04a.  v1:= "REFUSED_STREAM" @kind object;
  #L07b04e.  v2:= 7I;
  #L07b050.  call `<init>`(v0, v1, v8, v2) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07b056.  `@@a.a.e.b.e` @type ^`a.a.e.b` := v0 @kind object;
  #L07b05a.  v0:= new `a.a.e.b`;
  #L07b05e.  v1:= "CANCEL" @kind object;
  #L07b062.  v2:= 5I;
  #L07b064.  v3:= 8I;
  #L07b068.  call `<init>`(v0, v1, v2, v3) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07b06e.  `@@a.a.e.b.f` @type ^`a.a.e.b` := v0 @kind object;
  #L07b072.  v0:= 6I;
  #L07b074.  v0:= new `a.a.e.b`[v0];
  #L07b078.  v1:= `@@a.a.e.b.a` @type ^`a.a.e.b` @kind object;
  #L07b07c.  v0[v4]:= v1 @kind object;
  #L07b080.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #L07b084.  v0[v5]:= v1 @kind object;
  #L07b088.  v1:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #L07b08c.  v0[v6]:= v1 @kind object;
  #L07b090.  v1:= `@@a.a.e.b.d` @type ^`a.a.e.b` @kind object;
  #L07b094.  v0[v7]:= v1 @kind object;
  #L07b098.  v1:= `@@a.a.e.b.e` @type ^`a.a.e.b` @kind object;
  #L07b09c.  v0[v8]:= v1 @kind object;
  #L07b0a0.  v1:= 5I;
  #L07b0a2.  v2:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #L07b0a6.  v0[v1]:= v2 @kind object;
  #L07b0aa.  `@@a.a.e.b.h` @type ^`a.a.e.b`[] := v0 @kind object;
  #L07b0ae.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L07b0c0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L07b0c6.  v0.`a.a.e.b.g` @type ^`int` := v3;
  #L07b0ca.  return @kind void;
}
procedure `a.a.e.b` `a`(`int` v5 ) @signature `La/a/e/b;.a:(I)La/a/e/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07b0dc.  call temp:= `values`() @signature `La/a/e/b;.values:()[La/a/e/b;` @kind static;
  #L07b0e2.  v2:= temp @kind object;
  #L07b0e4.  v3:= length @variable v2;
  #L07b0e6.  v0:= 0I;
  #L07b0e8.  v1:= v0;
  #L07b0ea.  if v1 >= v3 then goto L07b104;
  #L07b0ee.  v0:= v2[v1] @kind object;
  #L07b0f2.  v4:= v0.`a.a.e.b.g` @type ^`int`;
  #L07b0f6.  if v4 != v5 then goto L07b0fc;
  #L07b0fa.  return v0 @kind object;
  #L07b0fc.  v0:= v1 + 1;
  #L07b100.  v1:= v0;
  #L07b102.  goto L07b0ea;
  #L07b104.  v0:= 0I;
  #L07b106.  goto L07b0fa;
}
procedure `a.a.e.b` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/a/e/b;.valueOf:(Ljava/lang/String;)La/a/e/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07b118.  v0:= constclass @type ^`a.a.e.b` @kind object;
  #L07b11c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L07b122.  v0:= temp @kind object;
  #L07b124.  v0:= (`a.a.e.b`) v0 @kind object;
  #L07b128.  return v0 @kind object;
}
procedure `a.a.e.b`[] `values`() @signature `La/a/e/b;.values:()[La/a/e/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07b13c.  v0:= `@@a.a.e.b.h` @type ^`a.a.e.b`[] @kind object;
  #L07b140.  call temp:= `clone`(v0) @signature `[La/a/e/b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L07b146.  v0:= temp @kind object;
  #L07b148.  v0:= (`a.a.e.b`[]) v0 @kind object;
  #L07b14c.  return v0 @kind object;
}

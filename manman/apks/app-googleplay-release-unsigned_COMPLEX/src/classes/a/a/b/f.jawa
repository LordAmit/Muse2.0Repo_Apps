record `a.a.b.f` @kind class @AccessFlag PUBLIC_FINAL {
  `a.a` `a.a.b.f.a` @AccessFlag PRIVATE_FINAL;
  `a.a.b.d` `a.a.b.f.b` @AccessFlag PRIVATE_FINAL;
  `java.net.Proxy` `a.a.b.f.c` @AccessFlag PRIVATE;
  `java.net.InetSocketAddress` `a.a.b.f.d` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.e` @AccessFlag PRIVATE;
  `int` `a.a.b.f.f` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.g` @AccessFlag PRIVATE;
  `int` `a.a.b.f.h` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.b.f` v2 @kind this, `a.a` v3 @kind object, `a.a.b.d` v4 @kind object) @signature `La/a/b/f;.<init>:(La/a;La/a/b/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L076d40.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L076d46.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L076d4c.  v0:= temp @kind object;
  #L076d4e.  v2.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L076d52.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L076d58.  v0:= temp @kind object;
  #L076d5a.  v2.`a.a.b.f.g` @type ^`java.util.List` := v0 @kind object;
  #L076d5e.  v0:= new `java.util.ArrayList`;
  #L076d62.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L076d68.  v2.`a.a.b.f.i` @type ^`java.util.List` := v0 @kind object;
  #L076d6c.  v2.`a.a.b.f.a` @type ^`a.a` := v3 @kind object;
  #L076d70.  v2.`a.a.b.f.b` @type ^`a.a.b.d` := v4 @kind object;
  #L076d74.  call temp:= `a`(v3) @signature `La/a;.a:()La/r;` @kind virtual;
  #L076d7a.  v0:= temp @kind object;
  #L076d7c.  call temp:= `h`(v3) @signature `La/a;.h:()Ljava/net/Proxy;` @kind virtual;
  #L076d82.  v1:= temp @kind object;
  #L076d84.  call `a`(v2, v0, v1) @signature `La/a/b/f;.a:(La/r;Ljava/net/Proxy;)V` @kind direct;
  #L076d8a.  return @kind void;
}
procedure `java.lang.String` `a`(`java.net.InetSocketAddress` v1 @kind object) @signature `La/a/b/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L076d9c.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L076da2.  v0:= temp @kind object;
  #L076da4.  if v0 != 0 then goto L076db2;
  #L076da8.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L076dae.  v0:= temp @kind object;
  #L076db0.  return v0 @kind object;
  #L076db2.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L076db8.  v0:= temp @kind object;
  #L076dba.  goto L076db0;
}
procedure `void` `a`(`a.a.b.f` v3 @kind this, `a.r` v4 @kind object, `java.net.Proxy` v5 @kind object) @signature `La/a/b/f;.a:(La/r;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L076dcc.  v2:= 0I;
  #L076dce.  if v5 == 0 then goto L076de4;
  #L076dd2.  call temp:= `singletonList`(v5) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L076dd8.  v0:= temp @kind object;
  #L076dda.  v3.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L076dde.  v3.`a.a.b.f.f` @type ^`int` := v2;
  #L076de2.  return @kind void;
  #L076de4.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076de8.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L076dee.  v0:= temp @kind object;
  #L076df0.  call temp:= `a`(v4) @signature `La/r;.a:()Ljava/net/URI;` @kind virtual;
  #L076df6.  v1:= temp @kind object;
  #L076df8.  call temp:= `select`(v0, v1) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L076dfe.  v0:= temp @kind object;
  #L076e00.  if v0 == 0 then goto L076e1e;
  #L076e04.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L076e0a.  v1:= temp;
  #L076e0c.  if v1 != 0 then goto L076e1e;
  #L076e10.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L076e16.  v0:= temp @kind object;
  #L076e18.  v3.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L076e1c.  goto L076dde;
  #L076e1e.  v0:= 1I;
  #L076e20.  v0:= new `java.net.Proxy`[v0];
  #L076e24.  v1:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L076e28.  v0[v2]:= v1 @kind object;
  #L076e2c.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L076e32.  v0:= temp @kind object;
  #L076e34.  goto L076e18;
}
procedure `void` `a`(`a.a.b.f` v8 @kind this, `java.net.Proxy` v9 @kind object) @signature `La/a/b/f;.a:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L076e48.  v2:= 0I;
  #L076e4a.  v0:= new `java.util.ArrayList`;
  #L076e4e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L076e54.  v8.`a.a.b.f.g` @type ^`java.util.List` := v0 @kind object;
  #L076e58.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L076e5e.  v0:= temp @kind object;
  #L076e60.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L076e64.  if v0 == v1 then goto L076e78;
  #L076e68.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L076e6e.  v0:= temp @kind object;
  #L076e70.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L076e74.  if v0 != v1 then goto L076f06;
  #L076e78.  v0:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076e7c.  call temp:= `a`(v0) @signature `La/a;.a:()La/r;` @kind virtual;
  #L076e82.  v0:= temp @kind object;
  #L076e84.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L076e8a.  v1:= temp @kind object;
  #L076e8c.  v0:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076e90.  call temp:= `a`(v0) @signature `La/a;.a:()La/r;` @kind virtual;
  #L076e96.  v0:= temp @kind object;
  #L076e98.  call temp:= `g`(v0) @signature `La/r;.g:()I` @kind virtual;
  #L076e9e.  v0:= temp;
  #L076ea0.  v3:= v0;
  #L076ea2.  v0:= v1 @kind object;
  #L076ea4.  v1:= 1I;
  #L076ea6.  if v3 < v1 then goto L076eb4;
  #L076eaa.  v1:= 65535I;
  #L076eb0.  if v3 <= v1 then goto L076f6a;
  #L076eb4.  v1:= new `java.net.SocketException`;
  #L076eb8.  v2:= new `java.lang.StringBuilder`;
  #L076ebc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L076ec2.  v4:= "No route to " @kind object;
  #L076ec6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076ecc.  v2:= temp @kind object;
  #L076ece.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076ed4.  v0:= temp @kind object;
  #L076ed6.  v2:= ":" @kind object;
  #L076eda.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076ee0.  v0:= temp @kind object;
  #L076ee2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L076ee8.  v0:= temp @kind object;
  #L076eea.  v2:= "; port is out of range" @kind object;
  #L076eee.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076ef4.  v0:= temp @kind object;
  #L076ef6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L076efc.  v0:= temp @kind object;
  #L076efe.  call `<init>`(v1, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076f04.  throw v1;
  #L076f06.  call temp:= `address`(v9) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L076f0c.  v0:= temp @kind object;
  #L076f0e.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L076f12.  if v1 != 0 then goto L076f50;
  #L076f16.  v1:= new `java.lang.IllegalArgumentException`;
  #L076f1a.  v2:= new `java.lang.StringBuilder`;
  #L076f1e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L076f24.  v3:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L076f28.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076f2e.  v2:= temp @kind object;
  #L076f30.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L076f36.  v0:= temp @kind object;
  #L076f38.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076f3e.  v0:= temp @kind object;
  #L076f40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L076f46.  v0:= temp @kind object;
  #L076f48.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076f4e.  throw v1;
  #L076f50.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L076f54.  call temp:= `a`(v0) @signature `La/a/b/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L076f5a.  v1:= temp @kind object;
  #L076f5c.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L076f62.  v0:= temp;
  #L076f64.  v3:= v0;
  #L076f66.  v0:= v1 @kind object;
  #L076f68.  goto L076ea4;
  #L076f6a.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L076f70.  v1:= temp @kind object;
  #L076f72.  v4:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L076f76.  if v1 != v4 then goto L076f92;
  #L076f7a.  v1:= v8.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L076f7e.  call temp:= `createUnresolved`(v0, v3) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L076f84.  v0:= temp @kind object;
  #L076f86.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L076f8c.  v8.`a.a.b.f.h` @type ^`int` := v2;
  #L076f90.  return @kind void;
  #L076f92.  v1:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076f96.  call temp:= `b`(v1) @signature `La/a;.b:()La/o;` @kind virtual;
  #L076f9c.  v1:= temp @kind object;
  #L076f9e.  call temp:= `a`(v1, v0) @signature `La/o;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L076fa4.  v4:= temp @kind object;
  #L076fa6.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L076fac.  v5:= temp;
  #L076fae.  v1:= v2;
  #L076fb0.  if v1 >= v5 then goto L076f8c;
  #L076fb4.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L076fba.  v0:= temp @kind object;
  #L076fbc.  v0:= (`java.net.InetAddress`) v0 @kind object;
  #L076fc0.  v6:= v8.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L076fc4.  v7:= new `java.net.InetSocketAddress`;
  #L076fc8.  call `<init>`(v7, v0, v3) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L076fce.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L076fd4.  v0:= v1 + 1;
  #L076fd8.  v1:= v0;
  #L076fda.  goto L076fb0;
}
procedure `boolean` `c`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L076fec.  v0:= v2.`a.a.b.f.f` @type ^`int`;
  #L076ff0.  v1:= v2.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L076ff4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L076ffa.  v1:= temp;
  #L076ffc.  if v0 >= v1 then goto L077004;
  #L077000.  v0:= 1I;
  #L077002.  return v0;
  #L077004.  v0:= 0I;
  #L077006.  goto L077002;
}
procedure `java.net.Proxy` `d`(`a.a.b.f` v3 @kind this) @signature `La/a/b/f;.d:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L077018.  call temp:= `c`(v3) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L07701e.  v0:= temp;
  #L077020.  if v0 != 0 then goto L077082;
  #L077024.  v0:= new `java.net.SocketException`;
  #L077028.  v1:= new `java.lang.StringBuilder`;
  #L07702c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077032.  v2:= "No route to " @kind object;
  #L077036.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07703c.  v1:= temp @kind object;
  #L07703e.  v2:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077042.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077048.  v2:= temp @kind object;
  #L07704a.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L077050.  v2:= temp @kind object;
  #L077052.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077058.  v1:= temp @kind object;
  #L07705a.  v2:= "; exhausted proxy configurations: " @kind object;
  #L07705e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077064.  v1:= temp @kind object;
  #L077066.  v2:= v3.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L07706a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077070.  v1:= temp @kind object;
  #L077072.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077078.  v1:= temp @kind object;
  #L07707a.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L077080.  throw v0;
  #L077082.  v0:= v3.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L077086.  v1:= v3.`a.a.b.f.f` @type ^`int`;
  #L07708a.  v2:= v1 + 1;
  #L07708e.  v3.`a.a.b.f.f` @type ^`int` := v2;
  #L077092.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L077098.  v0:= temp @kind object;
  #L07709a.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L07709e.  call `a`(v3, v0) @signature `La/a/b/f;.a:(Ljava/net/Proxy;)V` @kind direct;
  #L0770a4.  return v0 @kind object;
}
procedure `boolean` `e`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L0770b8.  v0:= v2.`a.a.b.f.h` @type ^`int`;
  #L0770bc.  v1:= v2.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L0770c0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0770c6.  v1:= temp;
  #L0770c8.  if v0 >= v1 then goto L0770d0;
  #L0770cc.  v0:= 1I;
  #L0770ce.  return v0;
  #L0770d0.  v0:= 0I;
  #L0770d2.  goto L0770ce;
}
procedure `java.net.InetSocketAddress` `f`(`a.a.b.f` v3 @kind this) @signature `La/a/b/f;.f:()Ljava/net/InetSocketAddress;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L0770e4.  call temp:= `e`(v3) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L0770ea.  v0:= temp;
  #L0770ec.  if v0 != 0 then goto L07714e;
  #L0770f0.  v0:= new `java.net.SocketException`;
  #L0770f4.  v1:= new `java.lang.StringBuilder`;
  #L0770f8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0770fe.  v2:= "No route to " @kind object;
  #L077102.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077108.  v1:= temp @kind object;
  #L07710a.  v2:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L07710e.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077114.  v2:= temp @kind object;
  #L077116.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07711c.  v2:= temp @kind object;
  #L07711e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077124.  v1:= temp @kind object;
  #L077126.  v2:= "; exhausted inet socket addresses: " @kind object;
  #L07712a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077130.  v1:= temp @kind object;
  #L077132.  v2:= v3.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L077136.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07713c.  v1:= temp @kind object;
  #L07713e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077144.  v1:= temp @kind object;
  #L077146.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07714c.  throw v0;
  #L07714e.  v0:= v3.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L077152.  v1:= v3.`a.a.b.f.h` @type ^`int`;
  #L077156.  v2:= v1 + 1;
  #L07715a.  v3.`a.a.b.f.h` @type ^`int` := v2;
  #L07715e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L077164.  v0:= temp @kind object;
  #L077166.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L07716a.  return v0 @kind object;
}
procedure `boolean` `g`(`a.a.b.f` v1 @kind this) @signature `La/a/b/f;.g:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L07717c.  v0:= v1.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L077180.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L077186.  v0:= temp;
  #L077188.  if v0 != 0 then goto L077190;
  #L07718c.  v0:= 1I;
  #L07718e.  return v0;
  #L077190.  v0:= 0I;
  #L077192.  goto L07718e;
}
procedure `a.ab` `h`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.h:()La/ab;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L0771a4.  v0:= v2.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L0771a8.  v1:= 0I;
  #L0771aa.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L0771b0.  v0:= temp @kind object;
  #L0771b2.  v0:= (`a.ab`) v0 @kind object;
  #L0771b6.  return v0 @kind object;
}
procedure `void` `a`(`a.a.b.f` v3 @kind this, `a.ab` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `La/a/b/f;.a:(La/ab;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0771c8.  call temp:= `b`(v4) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L0771ce.  v0:= temp @kind object;
  #L0771d0.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L0771d6.  v0:= temp @kind object;
  #L0771d8.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L0771dc.  if v0 == v1 then goto L077226;
  #L0771e0.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L0771e4.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L0771ea.  v0:= temp @kind object;
  #L0771ec.  if v0 == 0 then goto L077226;
  #L0771f0.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L0771f4.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L0771fa.  v0:= temp @kind object;
  #L0771fc.  v1:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077200.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077206.  v1:= temp @kind object;
  #L077208.  call temp:= `a`(v1) @signature `La/r;.a:()Ljava/net/URI;` @kind virtual;
  #L07720e.  v1:= temp @kind object;
  #L077210.  call temp:= `b`(v4) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L077216.  v2:= temp @kind object;
  #L077218.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L07721e.  v2:= temp @kind object;
  #L077220.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L077226.  v0:= v3.`a.a.b.f.b` @type ^`a.a.b.d` @kind object;
  #L07722a.  call `a`(v0, v4) @signature `La/a/b/d;.a:(La/ab;)V` @kind virtual;
  #L077230.  return @kind void;
}
procedure `boolean` `a`(`a.a.b.f` v1 @kind this) @signature `La/a/b/f;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L077244.  call temp:= `e`(v1) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L07724a.  v0:= temp;
  #L07724c.  if v0 != 0 then goto L077268;
  #L077250.  call temp:= `c`(v1) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L077256.  v0:= temp;
  #L077258.  if v0 != 0 then goto L077268;
  #L07725c.  call temp:= `g`(v1) @signature `La/a/b/f;.g:()Z` @kind direct;
  #L077262.  v0:= temp;
  #L077264.  if v0 == 0 then goto L07726c;
  #L077268.  v0:= 1I;
  #L07726a.  return v0;
  #L07726c.  v0:= 0I;
  #L07726e.  goto L07726a;
}
procedure `a.ab` `b`(`a.a.b.f` v4 @kind this) @signature `La/a/b/f;.b:()La/ab;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L077280.  call temp:= `e`(v4) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L077286.  v0:= temp;
  #L077288.  if v0 != 0 then goto L0772c6;
  #L07728c.  call temp:= `c`(v4) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L077292.  v0:= temp;
  #L077294.  if v0 != 0 then goto L0772ba;
  #L077298.  call temp:= `g`(v4) @signature `La/a/b/f;.g:()Z` @kind direct;
  #L07729e.  v0:= temp;
  #L0772a0.  if v0 != 0 then goto L0772b0;
  #L0772a4.  v0:= new `java.util.NoSuchElementException`;
  #L0772a8.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L0772ae.  throw v0;
  #L0772b0.  call temp:= `h`(v4) @signature `La/a/b/f;.h:()La/ab;` @kind direct;
  #L0772b6.  v0:= temp @kind object;
  #L0772b8.  return v0 @kind object;
  #L0772ba.  call temp:= `d`(v4) @signature `La/a/b/f;.d:()Ljava/net/Proxy;` @kind direct;
  #L0772c0.  v0:= temp @kind object;
  #L0772c2.  v4.`a.a.b.f.c` @type ^`java.net.Proxy` := v0 @kind object;
  #L0772c6.  call temp:= `f`(v4) @signature `La/a/b/f;.f:()Ljava/net/InetSocketAddress;` @kind direct;
  #L0772cc.  v0:= temp @kind object;
  #L0772ce.  v4.`a.a.b.f.d` @type ^`java.net.InetSocketAddress` := v0 @kind object;
  #L0772d2.  v0:= new `a.ab`;
  #L0772d6.  v1:= v4.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L0772da.  v2:= v4.`a.a.b.f.c` @type ^`java.net.Proxy` @kind object;
  #L0772de.  v3:= v4.`a.a.b.f.d` @type ^`java.net.InetSocketAddress` @kind object;
  #L0772e2.  call `<init>`(v0, v1, v2, v3) @signature `La/ab;.<init>:(La/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L0772e8.  v1:= v4.`a.a.b.f.b` @type ^`a.a.b.d` @kind object;
  #L0772ec.  call temp:= `c`(v1, v0) @signature `La/a/b/d;.c:(La/ab;)Z` @kind virtual;
  #L0772f2.  v1:= temp;
  #L0772f4.  if v1 == 0 then goto L0772b8;
  #L0772f8.  v1:= v4.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L0772fc.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L077302.  call temp:= `b`(v4) @signature `La/a/b/f;.b:()La/ab;` @kind virtual;
  #L077308.  v0:= temp @kind object;
  #L07730a.  goto L0772b8;
}

record `a.r$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.r$a.a` @AccessFlag ;
  `java.lang.String` `a.r$a.b` @AccessFlag ;
  `java.lang.String` `a.r$a.c` @AccessFlag ;
  `java.lang.String` `a.r$a.d` @AccessFlag ;
  `int` `a.r$a.e` @AccessFlag ;
  `java.util.List` `a.r$a.f` @AccessFlag FINAL;
  `java.util.List` `a.r$a.g` @AccessFlag ;
  `java.lang.String` `a.r$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`a.r$a` v2 @kind this) @signature `La/r$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L088e80.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L088e86.  v0:= "" @kind object;
  #L088e8a.  v2.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L088e8e.  v0:= "" @kind object;
  #L088e92.  v2.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L088e96.  v0:= -1I;
  #L088e98.  v2.`a.r$a.e` @type ^`int` := v0;
  #L088e9c.  v0:= new `java.util.ArrayList`;
  #L088ea0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L088ea6.  v2.`a.r$a.f` @type ^`java.util.List` := v0 @kind object;
  #L088eaa.  v0:= v2.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088eae.  v1:= "" @kind object;
  #L088eb2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088eb8.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v8 @kind object) @signature `La/r$a;.a:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L088ecc.  v7:= 16I;
  #L088ed0.  v6:= 58I;
  #L088ed4.  v1:= 0I;
  #L088ed6.  v0:= -1I;
  #L088ed8.  v2:= v1;
  #L088eda.  v3:= v0;
  #L088edc.  v0:= v1;
  #L088ede.  v4:= length @variable v8;
  #L088ee0.  if v0 >= v4 then goto L088f18;
  #L088ee4.  v5:= v0;
  #L088ee6.  if v5 >= v7 then goto L088f06;
  #L088eea.  v4:= v8[v5] @kind byte;
  #L088eee.  if v4 != 0 then goto L088f06;
  #L088ef2.  v4:= v5 + 1;
  #L088ef6.  v4:= v8[v4] @kind byte;
  #L088efa.  if v4 != 0 then goto L088f06;
  #L088efe.  v4:= v5 + 2;
  #L088f02.  v5:= v4;
  #L088f04.  goto L088ee6;
  #L088f06.  v4:= v5 - v0 @kind int;
  #L088f0a.  if v4 <= v2 then goto L088f12;
  #L088f0e.  v2:= v4;
  #L088f10.  v3:= v0;
  #L088f12.  v0:= v5 + 2;
  #L088f16.  goto L088ede;
  #L088f18.  v0:= new `b.c`;
  #L088f1c.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L088f22.  v4:= length @variable v8;
  #L088f24.  if v1 >= v4 then goto L088f72;
  #L088f28.  if v1 != v3 then goto L088f40;
  #L088f2c.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L088f32.  v1:= v1 + v2 @kind int;
  #L088f34.  if v1 != v7 then goto L088f22;
  #L088f38.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L088f3e.  goto L088f22;
  #L088f40.  if v1 <= 0 then goto L088f4a;
  #L088f44.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L088f4a.  v4:= v8[v1] @kind byte;
  #L088f4e.  v4:= v4 ^& 255;
  #L088f52.  v4:= v4 ^< 8;
  #L088f56.  v5:= v1 + 1;
  #L088f5a.  v5:= v8[v5] @kind byte;
  #L088f5e.  v5:= v5 ^& 255;
  #L088f62.  v4:= v4 ^| v5 @kind int;
  #L088f64.  v4:= (`long`) v4 @kind i2l;
  #L088f66.  call temp:= `i`(v0, v4) @signature `Lb/c;.i:(J)Lb/c;` @kind virtual;
  #L088f6c.  v1:= v1 + 2;
  #L088f70.  goto L088f22;
  #L088f72.  call temp:= `o`(v0) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L088f78.  v0:= temp @kind object;
  #L088f7a.  return v0 @kind object;
}
procedure `void` `a`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `La/r$a;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L088f8c.  v5:= 1I;
  #L088f8e.  if v8 != v9 then goto L088f94;
  #L088f92.  return @kind void;
  #L088f94.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088f9a.  v0:= temp;
  #L088f9c.  v1:= 47I;
  #L088fa0.  if v0 == v1 then goto L088fac;
  #L088fa4.  v1:= 92I;
  #L088fa8.  if v0 != v1 then goto L088ff6;
  #L088fac.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088fb0.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L088fb6.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088fba.  v1:= "" @kind object;
  #L088fbe.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088fc4.  v8:= v8 + 1;
  #L088fc8.  v2:= v8;
  #L088fca.  if v2 >= v9 then goto L088f92;
  #L088fce.  v0:= "/\\" @kind object;
  #L088fd2.  call temp:= `a`(v7, v2, v9, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L088fd8.  v3:= temp;
  #L088fda.  if v3 >= v9 then goto L089016;
  #L088fde.  v4:= v5;
  #L088fe0.  v0:= v6 @kind object;
  #L088fe2.  v1:= v7 @kind object;
  #L088fe4.  call `a`(v0, v1, v2, v3, v4, v5) @signature `La/r$a;.a:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L088fea.  if v4 == 0 then goto L088ff2;
  #L088fee.  v3:= v3 + 1;
  #L088ff2.  v2:= v3;
  #L088ff4.  goto L088fca;
  #L088ff6.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088ffa.  v1:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088ffe.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089004.  v1:= temp;
  #L089006.  v1:= v1 + -1;
  #L08900a.  v2:= "" @kind object;
  #L08900e.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L089014.  goto L088fc8;
  #L089016.  v4:= 0I;
  #L089018.  goto L088fe0;
}
procedure `void` `a`(`a.r$a` v8 @kind this, `java.lang.String` v9 @kind object, `int` v10 , `int` v11 , `boolean` v12 , `boolean` v13 ) @signature `La/r$a;.a:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08902c.  v5:= 0I;
  #L08902e.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L089032.  v7:= 1I;
  #L089034.  v0:= v9 @kind object;
  #L089036.  v1:= v10;
  #L089038.  v2:= v11;
  #L08903a.  v4:= v13;
  #L08903c.  v6:= v5;
  #L08903e.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089044.  v1:= temp @kind object;
  #L089046.  call temp:= `f`(v8, v1) @signature `La/r$a;.f:(Ljava/lang/String;)Z` @kind direct;
  #L08904c.  v0:= temp;
  #L08904e.  if v0 == 0 then goto L089054;
  #L089052.  return @kind void;
  #L089054.  call temp:= `g`(v8, v1) @signature `La/r$a;.g:(Ljava/lang/String;)Z` @kind direct;
  #L08905a.  v0:= temp;
  #L08905c.  if v0 == 0 then goto L089068;
  #L089060.  call `d`(v8) @signature `La/r$a;.d:()V` @kind direct;
  #L089066.  goto L089052;
  #L089068.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08906c.  v2:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089070.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089076.  v2:= temp;
  #L089078.  v2:= v2 + -1;
  #L08907c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089082.  v0:= temp @kind object;
  #L089084.  v0:= (`java.lang.String`) v0 @kind object;
  #L089088.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08908e.  v0:= temp;
  #L089090.  if v0 == 0 then goto L0890c2;
  #L089094.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089098.  v2:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08909c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0890a2.  v2:= temp;
  #L0890a4.  v2:= v2 + -1;
  #L0890a8.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0890ae.  if v12 == 0 then goto L089052;
  #L0890b2.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0890b6.  v1:= "" @kind object;
  #L0890ba.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0890c0.  goto L089052;
  #L0890c2.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0890c6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0890cc.  goto L0890ae;
}
procedure `boolean` `a`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `La/r$a;.a:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0890e0.  v1:= 0I;
  #L0890e2.  v0:= v8;
  #L0890e4.  v4:= v11;
  #L0890e6.  if v0 >= v9 then goto L089174;
  #L0890ea.  v2:= length @variable v10;
  #L0890ec.  if v4 != v2 then goto L0890f4;
  #L0890f0.  v0:= v1;
  #L0890f2.  return v0;
  #L0890f4.  if v4 == v11 then goto L089110;
  #L0890f8.  call temp:= `charAt`(v7, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0890fe.  v2:= temp;
  #L089100.  v3:= 46I;
  #L089104.  if v2 == v3 then goto L08910c;
  #L089108.  v0:= v1;
  #L08910a.  goto L0890f2;
  #L08910c.  v0:= v0 + 1;
  #L089110.  v2:= v1;
  #L089112.  v3:= v0;
  #L089114.  if v3 >= v9 then goto L089130;
  #L089118.  call temp:= `charAt`(v7, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08911e.  v5:= temp;
  #L089120.  v6:= 48I;
  #L089124.  if v5 < v6 then goto L089130;
  #L089128.  v6:= 57I;
  #L08912c.  if v5 <= v6 then goto L08913c;
  #L089130.  v0:= v3 - v0 @kind int;
  #L089134.  if v0 != 0 then goto L089164;
  #L089138.  v0:= v1;
  #L08913a.  goto L0890f2;
  #L08913c.  if v2 != 0 then goto L089148;
  #L089140.  if v0 == v3 then goto L089148;
  #L089144.  v0:= v1;
  #L089146.  goto L0890f2;
  #L089148.  v2:= v2 * 10;
  #L08914c.  v2:= v2 + v5 @kind int;
  #L08914e.  v2:= v2 + -48;
  #L089152.  v5:= 255I;
  #L089156.  if v2 <= v5 then goto L08915e;
  #L08915a.  v0:= v1;
  #L08915c.  goto L0890f2;
  #L08915e.  v3:= v3 + 1;
  #L089162.  goto L089114;
  #L089164.  v0:= v4 + 1;
  #L089168.  v2:= (`byte`) v2 @kind i2b;
  #L08916a.  v10[v4]:= v2 @kind byte;
  #L08916e.  v4:= v0;
  #L089170.  v0:= v3;
  #L089172.  goto L0890e6;
  #L089174.  v0:= v11 + 4;
  #L089178.  if v4 == v0 then goto L089180;
  #L08917c.  v0:= v1;
  #L08917e.  goto L0890f2;
  #L089180.  v0:= 1I;
  #L089182.  goto L0890f2;
}
procedure `int` `b`(`java.lang.String` v8 @kind object, `int` v9 , `int` v10 ) @signature `La/r$a;.b:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L089194.  v7:= 122I;
  #L089198.  v6:= 97I;
  #L08919c.  v5:= 90I;
  #L0891a0.  v4:= 65I;
  #L0891a4.  v0:= -1I;
  #L0891a6.  v1:= v10 - v9 @kind int;
  #L0891aa.  v2:= 2I;
  #L0891ac.  if v1 >= v2 then goto L0891b2;
  #L0891b0.  return v0;
  #L0891b2.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0891b8.  v1:= temp;
  #L0891ba.  if v1 < v6 then goto L0891c2;
  #L0891be.  if v1 <= v7 then goto L0891ca;
  #L0891c2.  if v1 < v4 then goto L0891b0;
  #L0891c6.  if v1 > v5 then goto L0891b0;
  #L0891ca.  v1:= v9 + 1;
  #L0891ce.  if v1 >= v10 then goto L0891b0;
  #L0891d2.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0891d8.  v2:= temp;
  #L0891da.  if v2 < v6 then goto L0891e2;
  #L0891de.  if v2 <= v7 then goto L089212;
  #L0891e2.  if v2 < v4 then goto L0891ea;
  #L0891e6.  if v2 <= v5 then goto L089212;
  #L0891ea.  v3:= 48I;
  #L0891ee.  if v2 < v3 then goto L0891fa;
  #L0891f2.  v3:= 57I;
  #L0891f6.  if v2 <= v3 then goto L089212;
  #L0891fa.  v3:= 43I;
  #L0891fe.  if v2 == v3 then goto L089212;
  #L089202.  v3:= 45I;
  #L089206.  if v2 == v3 then goto L089212;
  #L08920a.  v3:= 46I;
  #L08920e.  if v2 != v3 then goto L089218;
  #L089212.  v1:= v1 + 1;
  #L089216.  goto L0891ce;
  #L089218.  v3:= 58I;
  #L08921c.  if v2 != v3 then goto L0891b0;
  #L089220.  v0:= v1;
  #L089222.  goto L0891b0;
}
procedure `int` `c`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.c:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L089234.  v0:= 0I;
  #L089236.  if v4 >= v5 then goto L08925c;
  #L08923a.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089240.  v1:= temp;
  #L089242.  v2:= 92I;
  #L089246.  if v1 == v2 then goto L089252;
  #L08924a.  v2:= 47I;
  #L08924e.  if v1 != v2 then goto L08925c;
  #L089252.  v0:= v0 + 1;
  #L089256.  v4:= v4 + 1;
  #L08925a.  goto L089236;
  #L08925c.  return v0;
}
procedure `int` `d`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.d:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L089270.  v0:= v4;
  #L089272.  if v0 >= v5 then goto L0892a4;
  #L089276.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08927c.  v1:= temp;
  #L08927e.  goto L0892a8;
  #L089284.  v0:= v0 + 1;
  #L089288.  goto L089272;
  #L08928a.  v0:= v0 + 1;
  #L08928e.  if v0 >= v5 then goto L089284;
  #L089292.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089298.  v1:= temp;
  #L08929a.  v2:= 93I;
  #L08929e.  if v1 != v2 then goto L08928a;
  #L0892a2.  goto L089284;
  #L0892a4.  v0:= v5;
  #L0892a6.  return v0;
  #L0892a8.  switch v1
                  | 58 => goto L0892a6
                  | 91 => goto L08928a
                  | else => goto L089284;
}
procedure `void` `d`(`a.r$a` v3 @kind this) @signature `La/r$a;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L0892cc.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0892d0.  v1:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0892d4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0892da.  v1:= temp;
  #L0892dc.  v1:= v1 + -1;
  #L0892e0.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L0892e6.  v0:= temp @kind object;
  #L0892e8.  v0:= (`java.lang.String`) v0 @kind object;
  #L0892ec.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L0892f2.  v0:= temp;
  #L0892f4.  if v0 == 0 then goto L089328;
  #L0892f8.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0892fc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L089302.  v0:= temp;
  #L089304.  if v0 != 0 then goto L089328;
  #L089308.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08930c.  v1:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089310.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089316.  v1:= temp;
  #L089318.  v1:= v1 + -1;
  #L08931c.  v2:= "" @kind object;
  #L089320.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L089326.  return @kind void;
  #L089328.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08932c.  v1:= "" @kind object;
  #L089330.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089336.  goto L089326;
}
procedure `java.lang.String` `e`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L089348.  v2:= 0I;
  #L08934a.  call temp:= `a`(v3, v4, v5, v2) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L089350.  v0:= temp @kind object;
  #L089352.  v1:= ":" @kind object;
  #L089356.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L08935c.  v1:= temp;
  #L08935e.  if v1 == 0 then goto L0893da;
  #L089362.  v1:= "[" @kind object;
  #L089366.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08936c.  v1:= temp;
  #L08936e.  if v1 == 0 then goto L0893a0;
  #L089372.  v1:= "]" @kind object;
  #L089376.  call temp:= `endsWith`(v0, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08937c.  v1:= temp;
  #L08937e.  if v1 == 0 then goto L0893a0;
  #L089382.  v1:= 1I;
  #L089384.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08938a.  v2:= temp;
  #L08938c.  v2:= v2 + -1;
  #L089390.  call temp:= `f`(v0, v1, v2) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L089396.  v0:= temp @kind object;
  #L089398.  if v0 != 0 then goto L0893b2;
  #L08939c.  v0:= 0I;
  #L08939e.  return v0 @kind object;
  #L0893a0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0893a6.  v1:= temp;
  #L0893a8.  call temp:= `f`(v0, v2, v1) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L0893ae.  v0:= temp @kind object;
  #L0893b0.  goto L089398;
  #L0893b2.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L0893b8.  v0:= temp @kind object;
  #L0893ba.  v1:= length @variable v0;
  #L0893bc.  v2:= 16I;
  #L0893c0.  if v1 != v2 then goto L0893ce;
  #L0893c4.  call temp:= `a`(v0) @signature `La/r$a;.a:([B)Ljava/lang/String;` @kind static;
  #L0893ca.  v0:= temp @kind object;
  #L0893cc.  goto L08939e;
  #L0893ce.  v0:= new `java.lang.AssertionError`;
  #L0893d2.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L0893d8.  throw v0;
  #L0893da.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0893e0.  v0:= temp @kind object;
  #L0893e2.  goto L08939e;
}
procedure `java.net.InetAddress` `f`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L0893f4.  v11:= 1I;
  #L0893f6.  v7:= -1I;
  #L0893f8.  v3:= 0I;
  #L0893fa.  v5:= 0I;
  #L0893fc.  v0:= 16I;
  #L089400.  v8:= new `byte`[v0];
  #L089404.  v0:= v13;
  #L089406.  v4:= v7;
  #L089408.  v1:= v7;
  #L08940a.  v2:= v5;
  #L08940c.  if v0 >= v14 then goto L08944a;
  #L089410.  v6:= length @variable v8;
  #L089412.  if v2 != v6 then goto L08941a;
  #L089416.  v0:= v3 @kind object;
  #L089418.  return v0 @kind object;
  #L08941a.  v6:= v0 + 2;
  #L08941e.  if v6 > v14 then goto L089458;
  #L089422.  v6:= "::" @kind object;
  #L089426.  v9:= 2I;
  #L089428.  call temp:= `regionMatches`(v12, v0, v6, v5, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L08942e.  v6:= temp;
  #L089430.  if v6 == 0 then goto L089458;
  #L089434.  if v1 == v7 then goto L08943c;
  #L089438.  v0:= v3 @kind object;
  #L08943a.  goto L089418;
  #L08943c.  v0:= v0 + 2;
  #L089440.  v1:= v2 + 2;
  #L089444.  if v0 != v14 then goto L089536;
  #L089448.  v2:= v1;
  #L08944a.  v0:= length @variable v8;
  #L08944c.  if v2 == v0 then goto L08951c;
  #L089450.  if v1 != v7 then goto L0894fe;
  #L089454.  v0:= v3 @kind object;
  #L089456.  goto L089418;
  #L089458.  if v2 == 0 then goto L089470;
  #L08945c.  v6:= ":" @kind object;
  #L089460.  call temp:= `regionMatches`(v12, v0, v6, v5, v11) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L089466.  v6:= temp;
  #L089468.  if v6 == 0 then goto L08949e;
  #L08946c.  v0:= v0 + 1;
  #L089470.  v4:= v5;
  #L089472.  v6:= v0;
  #L089474.  if v6 >= v14 then goto L08948c;
  #L089478.  call temp:= `charAt`(v12, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08947e.  v9:= temp;
  #L089480.  call temp:= `a`(v9) @signature `La/r;.a:(C)I` @kind static;
  #L089486.  v9:= temp;
  #L089488.  if v9 != v7 then goto L0894cc;
  #L08948c.  v9:= v6 - v0 @kind int;
  #L089490.  if v9 == 0 then goto L08949a;
  #L089494.  v10:= 4I;
  #L089496.  if v9 <= v10 then goto L0894d8;
  #L08949a.  v0:= v3 @kind object;
  #L08949c.  goto L089418;
  #L08949e.  v6:= "." @kind object;
  #L0894a2.  call temp:= `regionMatches`(v12, v0, v6, v5, v11) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L0894a8.  v0:= temp;
  #L0894aa.  if v0 == 0 then goto L0894c8;
  #L0894ae.  v0:= v2 + -2;
  #L0894b2.  call temp:= `a`(v12, v4, v14, v8, v0) @signature `La/r$a;.a:(Ljava/lang/String;II[BI)Z` @kind static;
  #L0894b8.  v0:= temp;
  #L0894ba.  if v0 != 0 then goto L0894c2;
  #L0894be.  v0:= v3 @kind object;
  #L0894c0.  goto L089418;
  #L0894c2.  v2:= v2 + 2;
  #L0894c6.  goto L08944a;
  #L0894c8.  v0:= v3 @kind object;
  #L0894ca.  goto L089418;
  #L0894cc.  v4:= v4 ^< 4;
  #L0894d0.  v4:= v4 + v9 @kind int;
  #L0894d2.  v6:= v6 + 1;
  #L0894d6.  goto L089474;
  #L0894d8.  v9:= v2 + 1;
  #L0894dc.  v10:= v4 ^>> 8;
  #L0894e0.  v10:= v10 ^& 255;
  #L0894e4.  v10:= (`byte`) v10 @kind i2b;
  #L0894e6.  v8[v2]:= v10 @kind byte;
  #L0894ea.  v2:= v9 + 1;
  #L0894ee.  v4:= v4 ^& 255;
  #L0894f2.  v4:= (`byte`) v4 @kind i2b;
  #L0894f4.  v8[v9]:= v4 @kind byte;
  #L0894f8.  v4:= v0;
  #L0894fa.  v0:= v6;
  #L0894fc.  goto L08940c;
  #L0894fe.  v0:= length @variable v8;
  #L089500.  v3:= v2 - v1 @kind int;
  #L089504.  v0:= v0 - v3 @kind int;
  #L089506.  v3:= v2 - v1 @kind int;
  #L08950a.  call `arraycopy`(v8, v1, v8, v0, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L089510.  v0:= length @variable v8;
  #L089512.  v0:= v0 - v2 @kind int;
  #L089514.  v0:= v0 + v1 @kind int;
  #L089516.  call `fill`(v8, v1, v0, v5) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #Try_start0.  
  #L08951c.  call temp:= `getByAddress`(v8) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #Try_end0.  
  #L089522.  v0:= temp @kind object;
  #L089524.  goto L089418;
  #L089528.  v0:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L08952a.  v0:= new `java.lang.AssertionError`;
  #L08952e.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L089534.  throw v0;
  #L089536.  v2:= v1;
  #L089538.  goto L089470;
  catch `java.net.UnknownHostException` @[Try_start0..Try_end0] goto L089528;
}
procedure `boolean` `f`(`a.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r$a;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L08955c.  v0:= "." @kind object;
  #L089560.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L089566.  v0:= temp;
  #L089568.  if v0 != 0 then goto L08957c;
  #L08956c.  v0:= "%2e" @kind object;
  #L089570.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L089576.  v0:= temp;
  #L089578.  if v0 == 0 then goto L089580;
  #L08957c.  v0:= 1I;
  #L08957e.  return v0;
  #L089580.  v0:= 0I;
  #L089582.  goto L08957e;
}
procedure `int` `g`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 ) @signature `La/r$a;.g:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L089594.  v8:= -1I;
  #Try_start0.  
  #L089596.  v3:= "" @kind object;
  #L08959a.  v4:= 0I;
  #L08959c.  v5:= 0I;
  #L08959e.  v6:= 0I;
  #L0895a0.  v7:= 1I;
  #L0895a2.  v0:= v9 @kind object;
  #L0895a4.  v1:= v10;
  #L0895a6.  v2:= v11;
  #L0895a8.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L0895ae.  v0:= temp @kind object;
  #L0895b0.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L0895b6.  v0:= temp;
  #L0895b8.  if v0 <= 0 then goto L0895c8;
  #L0895bc.  v1:= 65535I;
  #L0895c2.  if v0 > v1 then goto L0895c8;
  #L0895c6.  return v0;
  #L0895c8.  v0:= v8;
  #L0895ca.  goto L0895c6;
  #L0895cc.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L0895ce.  v0:= v8;
  #L0895d0.  goto L0895c6;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L0895cc;
}
procedure `boolean` `g`(`a.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r$a;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L0895f4.  v0:= ".." @kind object;
  #L0895f8.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0895fe.  v0:= temp;
  #L089600.  if v0 != 0 then goto L089634;
  #L089604.  v0:= "%2e." @kind object;
  #L089608.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08960e.  v0:= temp;
  #L089610.  if v0 != 0 then goto L089634;
  #L089614.  v0:= ".%2e" @kind object;
  #L089618.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08961e.  v0:= temp;
  #L089620.  if v0 != 0 then goto L089634;
  #L089624.  v0:= "%2e%2e" @kind object;
  #L089628.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08962e.  v0:= temp;
  #L089630.  if v0 == 0 then goto L089638;
  #L089634.  v0:= 1I;
  #L089636.  return v0;
  #L089638.  v0:= 0I;
  #L08963a.  goto L089636;
}
procedure `int` `a`(`a.r$a` v2 @kind this) @signature `La/r$a;.a:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L08964c.  v0:= v2.`a.r$a.e` @type ^`int`;
  #L089650.  v1:= -1I;
  #L089652.  if v0 == v1 then goto L08965c;
  #L089656.  v0:= v2.`a.r$a.e` @type ^`int`;
  #L08965a.  return v0;
  #L08965c.  v0:= v2.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L089660.  call temp:= `a`(v0) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L089666.  v0:= temp;
  #L089668.  goto L08965a;
}
procedure `a.r$a$a` `a`(`a.r$a` v13 @kind this, `a.r` v14 @kind object, `java.lang.String` v15 @kind object) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L08967c.  v0:= 0I;
  #L08967e.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089684.  v1:= temp;
  #L089686.  call temp:= `a`(v15, v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;II)I` @kind static;
  #L08968c.  v2:= temp;
  #L08968e.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089694.  v0:= temp;
  #L089696.  call temp:= `b`(v15, v2, v0) @signature `La/a/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L08969c.  v11:= temp;
  #L08969e.  call temp:= `b`(v15, v2, v11) @signature `La/r$a;.b:(Ljava/lang/String;II)I` @kind static;
  #L0896a4.  v0:= temp;
  #L0896a6.  v1:= -1I;
  #L0896a8.  if v0 == v1 then goto L08976e;
  #L0896ac.  v1:= 1I;
  #L0896ae.  v3:= "https:" @kind object;
  #L0896b2.  v4:= 0I;
  #L0896b4.  v5:= 6I;
  #L0896b6.  v0:= v15 @kind object;
  #L0896b8.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L0896be.  v0:= temp;
  #L0896c0.  if v0 == 0 then goto L089738;
  #L0896c4.  v0:= "https" @kind object;
  #L0896c8.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L0896cc.  v0:= "https:" @kind object;
  #L0896d0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0896d6.  v0:= temp;
  #L0896d8.  v2:= v2 + v0 @kind int;
  #L0896da.  v1:= 0I;
  #L0896dc.  v0:= 0I;
  #L0896de.  call temp:= `c`(v15, v2, v11) @signature `La/r$a;.c:(Ljava/lang/String;II)I` @kind static;
  #L0896e4.  v3:= temp;
  #L0896e6.  v4:= 2I;
  #L0896e8.  if v3 >= v4 then goto L089704;
  #L0896ec.  if v14 == 0 then goto L089704;
  #L0896f0.  v4:= v14.`a.r.a` @type ^`java.lang.String` @kind object;
  #L0896f4.  v5:= v13.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L0896f8.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0896fe.  v4:= temp;
  #L089700.  if v4 != 0 then goto L089968;
  #L089704.  v2:= v2 + v3 @kind int;
  #L089706.  v8:= v0;
  #L089708.  v9:= v1;
  #L08970a.  v1:= v2;
  #L08970c.  v0:= "@/\\?#" @kind object;
  #L089710.  call temp:= `a`(v15, v1, v11, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L089716.  v10:= temp;
  #L089718.  if v10 == v11 then goto L089782;
  #L08971c.  call temp:= `charAt`(v15, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089722.  v0:= temp;
  #L089724.  goto L0899d4;
  #L08972a.  v0:= v8;
  #L08972c.  v2:= v1;
  #L08972e.  v1:= v9;
  #L089730.  v8:= v0;
  #L089732.  v9:= v1;
  #L089734.  v1:= v2;
  #L089736.  goto L08970c;
  #L089738.  v1:= 1I;
  #L08973a.  v3:= "http:" @kind object;
  #L08973e.  v4:= 0I;
  #L089740.  v5:= 5I;
  #L089742.  v0:= v15 @kind object;
  #L089744.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08974a.  v0:= temp;
  #L08974c.  if v0 == 0 then goto L089768;
  #L089750.  v0:= "http" @kind object;
  #L089754.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L089758.  v0:= "http:" @kind object;
  #L08975c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089762.  v0:= temp;
  #L089764.  v2:= v2 + v0 @kind int;
  #L089766.  goto L0896da;
  #L089768.  v0:= `@@a.r$a$a.c` @type ^`a.r$a$a` @kind object;
  #L08976c.  return v0 @kind object;
  #L08976e.  if v14 == 0 then goto L08977c;
  #L089772.  v0:= v14.`a.r.a` @type ^`java.lang.String` @kind object;
  #L089776.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08977a.  goto L0896da;
  #L08977c.  v0:= `@@a.r$a$a.b` @type ^`a.r$a$a` @kind object;
  #L089780.  goto L08976c;
  #L089782.  v0:= -1I;
  #L089784.  goto L089724;
  #L089786.  if v8 != 0 then goto L089818;
  #L08978a.  v0:= 58I;
  #L08978e.  call temp:= `a`(v15, v1, v10, v0) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L089794.  v2:= temp;
  #L089796.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08979a.  v4:= 1I;
  #L08979c.  v5:= 0I;
  #L08979e.  v6:= 0I;
  #L0897a0.  v7:= 1I;
  #L0897a2.  v0:= v15 @kind object;
  #L0897a4.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L0897aa.  v0:= temp @kind object;
  #L0897ac.  if v9 == 0 then goto L0897e2;
  #L0897b0.  v1:= new `java.lang.StringBuilder`;
  #L0897b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0897ba.  v3:= v13.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L0897be.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0897c4.  v1:= temp @kind object;
  #L0897c6.  v3:= "%40" @kind object;
  #L0897ca.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0897d0.  v1:= temp @kind object;
  #L0897d2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0897d8.  v0:= temp @kind object;
  #L0897da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0897e0.  v0:= temp @kind object;
  #L0897e2.  v13.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L0897e6.  if v2 == v10 then goto L08980c;
  #L0897ea.  v8:= 1I;
  #L0897ec.  v1:= v2 + 1;
  #L0897f0.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L0897f4.  v4:= 1I;
  #L0897f6.  v5:= 0I;
  #L0897f8.  v6:= 0I;
  #L0897fa.  v7:= 1I;
  #L0897fc.  v0:= v15 @kind object;
  #L0897fe.  v2:= v10;
  #L089800.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089806.  v0:= temp @kind object;
  #L089808.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08980c.  v9:= 1I;
  #L08980e.  v2:= v10 + 1;
  #L089812.  v0:= v8;
  #L089814.  v1:= v9;
  #L089816.  goto L089730;
  #L089818.  v0:= new `java.lang.StringBuilder`;
  #L08981c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089822.  v2:= v13.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L089826.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08982c.  v0:= temp @kind object;
  #L08982e.  v2:= "%40" @kind object;
  #L089832.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089838.  v12:= temp @kind object;
  #L08983a.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08983e.  v4:= 1I;
  #L089840.  v5:= 0I;
  #L089842.  v6:= 0I;
  #L089844.  v7:= 1I;
  #L089846.  v0:= v15 @kind object;
  #L089848.  v2:= v10;
  #L08984a.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089850.  v0:= temp @kind object;
  #L089852.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089858.  v0:= temp @kind object;
  #L08985a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089860.  v0:= temp @kind object;
  #L089862.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L089866.  goto L08980e;
  #L089868.  call temp:= `d`(v15, v1, v10) @signature `La/r$a;.d:(Ljava/lang/String;II)I` @kind static;
  #L08986e.  v0:= temp;
  #L089870.  v2:= v0 + 1;
  #L089874.  if v2 >= v10 then goto L0898a6;
  #L089878.  call temp:= `e`(v15, v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L08987e.  v1:= temp @kind object;
  #L089880.  v13.`a.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L089884.  v0:= v0 + 1;
  #L089888.  call temp:= `g`(v15, v0, v10) @signature `La/r$a;.g:(Ljava/lang/String;II)I` @kind static;
  #L08988e.  v0:= temp;
  #L089890.  v13.`a.r$a.e` @type ^`int` := v0;
  #L089894.  v0:= v13.`a.r$a.e` @type ^`int`;
  #L089898.  v1:= -1I;
  #L08989a.  if v0 != v1 then goto L0898c2;
  #L08989e.  v0:= `@@a.r$a$a.d` @type ^`a.r$a$a` @kind object;
  #L0898a2.  goto L08976c;
  #L0898a6.  call temp:= `e`(v15, v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L0898ac.  v0:= temp @kind object;
  #L0898ae.  v13.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L0898b2.  v0:= v13.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L0898b6.  call temp:= `a`(v0) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L0898bc.  v0:= temp;
  #L0898be.  v13.`a.r$a.e` @type ^`int` := v0;
  #L0898c2.  v0:= v13.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L0898c6.  if v0 != 0 then goto L0898d2;
  #L0898ca.  v0:= `@@a.r$a$a.e` @type ^`a.r$a$a` @kind object;
  #L0898ce.  goto L08976c;
  #L0898d2.  v2:= v10;
  #L0898d4.  v0:= "?#" @kind object;
  #L0898d8.  call temp:= `a`(v15, v2, v11, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L0898de.  v0:= temp;
  #L0898e0.  call `a`(v13, v15, v2, v0) @signature `La/r$a;.a:(Ljava/lang/String;II)V` @kind direct;
  #L0898e6.  if v0 >= v11 then goto L0899d0;
  #L0898ea.  call temp:= `charAt`(v15, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0898f0.  v1:= temp;
  #L0898f2.  v2:= 63I;
  #L0898f6.  if v1 != v2 then goto L0899d0;
  #L0898fa.  v1:= 35I;
  #L0898fe.  call temp:= `a`(v15, v0, v11, v1) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L089904.  v2:= temp;
  #L089906.  v1:= v0 + 1;
  #L08990a.  v3:= " \"'<>#" @kind object;
  #L08990e.  v4:= 1I;
  #L089910.  v5:= 0I;
  #L089912.  v6:= 1I;
  #L089914.  v7:= 1I;
  #L089916.  v0:= v15 @kind object;
  #L089918.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08991e.  v0:= temp @kind object;
  #L089920.  call temp:= `b`(v0) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L089926.  v0:= temp @kind object;
  #L089928.  v13.`a.r$a.g` @type ^`java.util.List` := v0 @kind object;
  #L08992c.  if v2 >= v11 then goto L089960;
  #L089930.  call temp:= `charAt`(v15, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089936.  v0:= temp;
  #L089938.  v1:= 35I;
  #L08993c.  if v0 != v1 then goto L089960;
  #L089940.  v1:= v2 + 1;
  #L089944.  v3:= "" @kind object;
  #L089948.  v4:= 1I;
  #L08994a.  v5:= 0I;
  #L08994c.  v6:= 0I;
  #L08994e.  v7:= 0I;
  #L089950.  v0:= v15 @kind object;
  #L089952.  v2:= v11;
  #L089954.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08995a.  v0:= temp @kind object;
  #L08995c.  v13.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L089960.  v0:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L089964.  goto L08976c;
  #L089968.  call temp:= `d`(v14) @signature `La/r;.d:()Ljava/lang/String;` @kind virtual;
  #L08996e.  v0:= temp @kind object;
  #L089970.  v13.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L089974.  call temp:= `e`(v14) @signature `La/r;.e:()Ljava/lang/String;` @kind virtual;
  #L08997a.  v0:= temp @kind object;
  #L08997c.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L089980.  v0:= v14.`a.r.b` @type ^`java.lang.String` @kind object;
  #L089984.  v13.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L089988.  v0:= v14.`a.r.c` @type ^`int`;
  #L08998c.  v13.`a.r$a.e` @type ^`int` := v0;
  #L089990.  v0:= v13.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089994.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L08999a.  v0:= v13.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08999e.  call temp:= `i`(v14) @signature `La/r;.i:()Ljava/util/List;` @kind virtual;
  #L0899a4.  v1:= temp @kind object;
  #L0899a6.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L0899ac.  if v2 == v11 then goto L0899c0;
  #L0899b0.  call temp:= `charAt`(v15, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0899b6.  v0:= temp;
  #L0899b8.  v1:= 35I;
  #L0899bc.  if v0 != v1 then goto L0898d4;
  #L0899c0.  call temp:= `j`(v14) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L0899c6.  v0:= temp @kind object;
  #L0899c8.  call temp:= `e`(v13, v0) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L0899ce.  goto L0898d4;
  #L0899d0.  v2:= v0;
  #L0899d2.  goto L08992c;
  #L0899d4.  switch v0
                  | -1 => goto L089868
                  | 35 => goto L089868
                  | 47 => goto L089868
                  | 63 => goto L089868
                  | 64 => goto L089786
                  | 92 => goto L089868
                  | else => goto L08972a;
}
procedure `a.r$a` `a`(`a.r$a` v3 @kind this, `int` v4 ) @signature `La/r$a;.a:(I)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L089a18.  if v4 <= 0 then goto L089a26;
  #L089a1c.  v0:= 65535I;
  #L089a22.  if v4 <= v0 then goto L089a58;
  #L089a26.  v0:= new `java.lang.IllegalArgumentException`;
  #L089a2a.  v1:= new `java.lang.StringBuilder`;
  #L089a2e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089a34.  v2:= "unexpected port: " @kind object;
  #L089a38.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089a3e.  v1:= temp @kind object;
  #L089a40.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L089a46.  v1:= temp @kind object;
  #L089a48.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089a4e.  v1:= temp @kind object;
  #L089a50.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089a56.  throw v0;
  #L089a58.  v3.`a.r$a.e` @type ^`int` := v4;
  #L089a5c.  return v3 @kind object;
}
procedure `a.r$a` `a`(`a.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r$a;.a:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L089a70.  if v4 != 0 then goto L089a84;
  #L089a74.  v0:= new `java.lang.NullPointerException`;
  #L089a78.  v1:= "scheme == null" @kind object;
  #L089a7c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089a82.  throw v0;
  #L089a84.  v0:= "http" @kind object;
  #L089a88.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L089a8e.  v0:= temp;
  #L089a90.  if v0 == 0 then goto L089a9e;
  #L089a94.  v0:= "http" @kind object;
  #L089a98.  v3.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L089a9c.  return v3 @kind object;
  #L089a9e.  v0:= "https" @kind object;
  #L089aa2.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L089aa8.  v0:= temp;
  #L089aaa.  if v0 == 0 then goto L089ab8;
  #L089aae.  v0:= "https" @kind object;
  #L089ab2.  v3.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L089ab6.  goto L089a9c;
  #L089ab8.  v0:= new `java.lang.IllegalArgumentException`;
  #L089abc.  v1:= new `java.lang.StringBuilder`;
  #L089ac0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089ac6.  v2:= "unexpected scheme: " @kind object;
  #L089aca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089ad0.  v1:= temp @kind object;
  #L089ad2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089ad8.  v1:= temp @kind object;
  #L089ada.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089ae0.  v1:= temp @kind object;
  #L089ae2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089ae8.  throw v0;
}
procedure `a.r$a` `b`(`a.r$a` v11 @kind this) @signature `La/r$a;.b:()La/r$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L089afc.  v4:= 0I;
  #L089afe.  v2:= 1I;
  #L089b00.  v0:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089b04.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089b0a.  v7:= temp;
  #L089b0c.  v6:= v4;
  #L089b0e.  if v6 >= v7 then goto L089b44;
  #L089b12.  v0:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089b16.  call temp:= `get`(v0, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089b1c.  v0:= temp @kind object;
  #L089b1e.  v0:= (`java.lang.String`) v0 @kind object;
  #L089b22.  v8:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089b26.  v1:= "[]" @kind object;
  #L089b2a.  v3:= v2;
  #L089b2c.  v5:= v2;
  #L089b2e.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089b34.  v0:= temp @kind object;
  #L089b36.  call temp:= `set`(v8, v6, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L089b3c.  v0:= v6 + 1;
  #L089b40.  v6:= v0;
  #L089b42.  goto L089b0e;
  #L089b44.  v0:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089b48.  if v0 == 0 then goto L089b96;
  #L089b4c.  v0:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089b50.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089b56.  v1:= temp;
  #L089b58.  v0:= v4;
  #L089b5a.  if v0 >= v1 then goto L089b96;
  #L089b5e.  v3:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089b62.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089b68.  v5:= temp @kind object;
  #L089b6a.  v5:= (`java.lang.String`) v5 @kind object;
  #L089b6e.  if v5 == 0 then goto L089b90;
  #L089b72.  v3:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089b76.  v6:= "\\^`{|}" @kind object;
  #L089b7a.  v7:= v2;
  #L089b7c.  v8:= v2;
  #L089b7e.  v9:= v2;
  #L089b80.  v10:= v2;
  #L089b82.  call temp:= `a`(v5, v6, v7, v8, v9, v10) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089b88.  v5:= temp @kind object;
  #L089b8a.  call temp:= `set`(v3, v0, v5) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L089b90.  v0:= v0 + 1;
  #L089b94.  goto L089b5a;
  #L089b96.  v0:= v11.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L089b9a.  if v0 == 0 then goto L089bb6;
  #L089b9e.  v0:= v11.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L089ba2.  v1:= " \"#<>\\^`{|}" @kind object;
  #L089ba6.  v3:= v2;
  #L089ba8.  v5:= v4;
  #L089baa.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089bb0.  v0:= temp @kind object;
  #L089bb2.  v11.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L089bb6.  return v11 @kind object;
}
procedure `a.r$a` `b`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.b:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L089bc8.  v2:= 0I;
  #L089bca.  if v7 != 0 then goto L089bde;
  #L089bce.  v0:= new `java.lang.NullPointerException`;
  #L089bd2.  v1:= "username == null" @kind object;
  #L089bd6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089bdc.  throw v0;
  #L089bde.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L089be2.  v5:= 1I;
  #L089be4.  v0:= v7 @kind object;
  #L089be6.  v3:= v2;
  #L089be8.  v4:= v2;
  #L089bea.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089bf0.  v0:= temp @kind object;
  #L089bf2.  v6.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L089bf6.  return v6 @kind object;
}
procedure `a.r$a` `c`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.c:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L089c08.  v2:= 0I;
  #L089c0a.  if v7 != 0 then goto L089c1e;
  #L089c0e.  v0:= new `java.lang.NullPointerException`;
  #L089c12.  v1:= "password == null" @kind object;
  #L089c16.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089c1c.  throw v0;
  #L089c1e.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L089c22.  v5:= 1I;
  #L089c24.  v0:= v7 @kind object;
  #L089c26.  v3:= v2;
  #L089c28.  v4:= v2;
  #L089c2a.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089c30.  v0:= temp @kind object;
  #L089c32.  v6.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L089c36.  return v6 @kind object;
}
procedure `a.r` `c`(`a.r$a` v2 @kind this) @signature `La/r$a;.c:()La/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L089c48.  v0:= v2.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L089c4c.  if v0 != 0 then goto L089c60;
  #L089c50.  v0:= new `java.lang.IllegalStateException`;
  #L089c54.  v1:= "scheme == null" @kind object;
  #L089c58.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089c5e.  throw v0;
  #L089c60.  v0:= v2.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L089c64.  if v0 != 0 then goto L089c78;
  #L089c68.  v0:= new `java.lang.IllegalStateException`;
  #L089c6c.  v1:= "host == null" @kind object;
  #L089c70.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089c76.  throw v0;
  #L089c78.  v0:= new `a.r`;
  #L089c7c.  call `<init>`(v0, v2) @signature `La/r;.<init>:(La/r$a;)V` @kind direct;
  #L089c82.  return v0 @kind object;
}
procedure `a.r$a` `d`(`a.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r$a;.d:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L089c94.  if v4 != 0 then goto L089ca8;
  #L089c98.  v0:= new `java.lang.NullPointerException`;
  #L089c9c.  v1:= "host == null" @kind object;
  #L089ca0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089ca6.  throw v0;
  #L089ca8.  v0:= 0I;
  #L089caa.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089cb0.  v1:= temp;
  #L089cb2.  call temp:= `e`(v4, v0, v1) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L089cb8.  v0:= temp @kind object;
  #L089cba.  if v0 != 0 then goto L089cf0;
  #L089cbe.  v0:= new `java.lang.IllegalArgumentException`;
  #L089cc2.  v1:= new `java.lang.StringBuilder`;
  #L089cc6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089ccc.  v2:= "unexpected host: " @kind object;
  #L089cd0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089cd6.  v1:= temp @kind object;
  #L089cd8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089cde.  v1:= temp @kind object;
  #L089ce0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089ce6.  v1:= temp @kind object;
  #L089ce8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089cee.  throw v0;
  #L089cf0.  v3.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L089cf4.  return v3 @kind object;
}
procedure `a.r$a` `e`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L089d08.  v2:= 1I;
  #L089d0a.  if v7 == 0 then goto L089d30;
  #L089d0e.  v1:= " \"'<>#" @kind object;
  #L089d12.  v3:= 0I;
  #L089d14.  v0:= v7 @kind object;
  #L089d16.  v4:= v2;
  #L089d18.  v5:= v2;
  #L089d1a.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089d20.  v0:= temp @kind object;
  #L089d22.  call temp:= `b`(v0) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L089d28.  v0:= temp @kind object;
  #L089d2a.  v6.`a.r$a.g` @type ^`java.util.List` := v0 @kind object;
  #L089d2e.  return v6 @kind object;
  #L089d30.  v0:= 0I;
  #L089d32.  goto L089d2a;
}
procedure `java.lang.String` `toString`(`a.r$a` v4 @kind this) @signature `La/r$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L089d44.  v3:= 58I;
  #L089d48.  v0:= new `java.lang.StringBuilder`;
  #L089d4c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089d52.  v1:= v4.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L089d56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089d5c.  v1:= "://" @kind object;
  #L089d60.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089d66.  v1:= v4.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L089d6a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L089d70.  v1:= temp;
  #L089d72.  if v1 == 0 then goto L089d86;
  #L089d76.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L089d7a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L089d80.  v1:= temp;
  #L089d82.  if v1 != 0 then goto L089dba;
  #L089d86.  v1:= v4.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L089d8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089d90.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L089d94.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L089d9a.  v1:= temp;
  #L089d9c.  if v1 != 0 then goto L089db0;
  #L089da0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089da6.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L089daa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089db0.  v1:= 64I;
  #L089db4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089dba.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L089dbe.  call temp:= `indexOf`(v1, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L089dc4.  v1:= temp;
  #L089dc6.  v2:= -1I;
  #L089dc8.  if v1 == v2 then goto L089e5a;
  #L089dcc.  v1:= 91I;
  #L089dd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089dd6.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L089dda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089de0.  v1:= 93I;
  #L089de4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089dea.  call temp:= `a`(v4) @signature `La/r$a;.a:()I` @kind virtual;
  #L089df0.  v1:= temp;
  #L089df2.  v2:= v4.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L089df6.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L089dfc.  v2:= temp;
  #L089dfe.  if v1 == v2 then goto L089e0e;
  #L089e02.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089e08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L089e0e.  v1:= v4.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089e12.  call `a`(v0, v1) @signature `La/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L089e18.  v1:= v4.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089e1c.  if v1 == 0 then goto L089e34;
  #L089e20.  v1:= 63I;
  #L089e24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089e2a.  v1:= v4.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089e2e.  call `b`(v0, v1) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L089e34.  v1:= v4.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L089e38.  if v1 == 0 then goto L089e50;
  #L089e3c.  v1:= 35I;
  #L089e40.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089e46.  v1:= v4.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L089e4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089e50.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089e56.  v0:= temp @kind object;
  #L089e58.  return v0 @kind object;
  #L089e5a.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L089e5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089e64.  goto L089dea;
}

record `a.p` @kind class @AccessFlag PUBLIC_FINAL {
  `a.ac` `a.p.a` @AccessFlag PRIVATE_FINAL;
  `a.h` `a.p.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.p.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.p.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.p` v0 @kind this, `a.ac` v1 @kind object, `a.h` v2 @kind object, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object) @signature `La/p;.<init>:(La/ac;La/h;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L088660.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L088666.  v0.`a.p.a` @type ^`a.ac` := v1 @kind object;
  #L08866a.  v0.`a.p.b` @type ^`a.h` := v2 @kind object;
  #L08866e.  v0.`a.p.c` @type ^`java.util.List` := v3 @kind object;
  #L088672.  v0.`a.p.d` @type ^`java.util.List` := v4 @kind object;
  #L088676.  return @kind void;
}
procedure `a.p` `a`(`javax.net.ssl.SSLSession` v5 @kind object) @signature `La/p;.a:(Ljavax/net/ssl/SSLSession;)La/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L088688.  call temp:= `getCipherSuite`(v5) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L08868e.  v0:= temp @kind object;
  #L088690.  if v0 != 0 then goto L0886a4;
  #L088694.  v0:= new `java.lang.IllegalStateException`;
  #L088698.  v1:= "cipherSuite == null" @kind object;
  #L08869c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0886a2.  throw v0;
  #L0886a4.  call temp:= `a`(v0) @signature `La/h;.a:(Ljava/lang/String;)La/h;` @kind static;
  #L0886aa.  v2:= temp @kind object;
  #L0886ac.  call temp:= `getProtocol`(v5) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L0886b2.  v0:= temp @kind object;
  #L0886b4.  if v0 != 0 then goto L0886c8;
  #L0886b8.  v0:= new `java.lang.IllegalStateException`;
  #L0886bc.  v1:= "tlsVersion == null" @kind object;
  #L0886c0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0886c6.  throw v0;
  #L0886c8.  call temp:= `a`(v0) @signature `La/ac;.a:(Ljava/lang/String;)La/ac;` @kind static;
  #L0886ce.  v3:= temp @kind object;
  #Try_start0.  
  #L0886d0.  call temp:= `getPeerCertificates`(v5) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #Try_end0.  
  #L0886d6.  v0:= temp @kind object;
  #L0886d8.  if v0 == 0 then goto L08870a;
  #L0886dc.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0886e2.  v0:= temp @kind object;
  #L0886e4.  call temp:= `getLocalCertificates`(v5) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L0886ea.  v1:= temp @kind object;
  #L0886ec.  if v1 == 0 then goto L088714;
  #L0886f0.  call temp:= `a`(v1) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0886f6.  v1:= temp @kind object;
  #L0886f8.  v4:= new `a.p`;
  #L0886fc.  call `<init>`(v4, v3, v2, v0, v1) @signature `La/p;.<init>:(La/ac;La/h;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L088702.  return v4 @kind object;
  #L088704.  v0:= Exception @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind object;
  #L088706.  v0:= 0I;
  #L088708.  goto L0886d8;
  #L08870a.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L088710.  v0:= temp @kind object;
  #L088712.  goto L0886e4;
  #L088714.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L08871a.  v1:= temp @kind object;
  #L08871c.  goto L0886f8;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[Try_start0..Try_end0] goto L088704;
}
procedure `a.h` `a`(`a.p` v1 @kind this) @signature `La/p;.a:()La/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088740.  v0:= v1.`a.p.b` @type ^`a.h` @kind object;
  #L088744.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.p` v1 @kind this) @signature `La/p;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088758.  v0:= v1.`a.p.c` @type ^`java.util.List` @kind object;
  #L08875c.  return v0 @kind object;
}
procedure `boolean` `equals`(`a.p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L088770.  v0:= 0I;
  #L088772.  v1:= instanceof @variable v4 @type ^`a.p` @kind boolean;
  #L088776.  if v1 != 0 then goto L08877c;
  #L08877a.  return v0;
  #L08877c.  v4:= (`a.p`) v4 @kind object;
  #L088780.  v1:= v3.`a.p.b` @type ^`a.h` @kind object;
  #L088784.  v2:= v4.`a.p.b` @type ^`a.h` @kind object;
  #L088788.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L08878e.  v1:= temp;
  #L088790.  if v1 == 0 then goto L08877a;
  #L088794.  v1:= v3.`a.p.b` @type ^`a.h` @kind object;
  #L088798.  v2:= v4.`a.p.b` @type ^`a.h` @kind object;
  #L08879c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0887a2.  v1:= temp;
  #L0887a4.  if v1 == 0 then goto L08877a;
  #L0887a8.  v1:= v3.`a.p.c` @type ^`java.util.List` @kind object;
  #L0887ac.  v2:= v4.`a.p.c` @type ^`java.util.List` @kind object;
  #L0887b0.  call temp:= `equals`(v1, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L0887b6.  v1:= temp;
  #L0887b8.  if v1 == 0 then goto L08877a;
  #L0887bc.  v1:= v3.`a.p.d` @type ^`java.util.List` @kind object;
  #L0887c0.  v2:= v4.`a.p.d` @type ^`java.util.List` @kind object;
  #L0887c4.  call temp:= `equals`(v1, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L0887ca.  v1:= temp;
  #L0887cc.  if v1 == 0 then goto L08877a;
  #L0887d0.  v0:= 1I;
  #L0887d2.  goto L08877a;
}
procedure `int` `hashCode`(`a.p` v2 @kind this) @signature `La/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0887e4.  v0:= v2.`a.p.a` @type ^`a.ac` @kind object;
  #L0887e8.  if v0 == 0 then goto L088834;
  #L0887ec.  v0:= v2.`a.p.a` @type ^`a.ac` @kind object;
  #L0887f0.  call temp:= `hashCode`(v0) @signature `La/ac;.hashCode:()I` @kind virtual;
  #L0887f6.  v0:= temp;
  #L0887f8.  v0:= v0 + 527;
  #L0887fc.  v0:= v0 * 31;
  #L088800.  v1:= v2.`a.p.b` @type ^`a.h` @kind object;
  #L088804.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L08880a.  v1:= temp;
  #L08880c.  v0:= v0 + v1 @kind int;
  #L08880e.  v0:= v0 * 31;
  #L088812.  v1:= v2.`a.p.c` @type ^`java.util.List` @kind object;
  #L088816.  call temp:= `hashCode`(v1) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L08881c.  v1:= temp;
  #L08881e.  v0:= v0 + v1 @kind int;
  #L088820.  v0:= v0 * 31;
  #L088824.  v1:= v2.`a.p.d` @type ^`java.util.List` @kind object;
  #L088828.  call temp:= `hashCode`(v1) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L08882e.  v1:= temp;
  #L088830.  v0:= v0 + v1 @kind int;
  #L088832.  return v0;
  #L088834.  v0:= 0I;
  #L088836.  goto L0887f8;
}

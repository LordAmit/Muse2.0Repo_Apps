record `com.b.a.b.k$4` @kind class @AccessFlag FINAL extends `com.b.a.b.k` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.k$4` v0 @kind this) @signature `Lcom/b/a/b/k$4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14c9c4.  call `<init>`(v0) @signature `Lcom/b/a/b/k;.<init>:()V` @kind direct;
  #L14c9ca.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.b.a.b.k$4` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/b/k$4;.a:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14c9dc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L14c9e0.  v1:= new `java.lang.StringBuilder`;
  #L14c9e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14c9ea.  v2:= "Cannot allocate " @kind object;
  #L14c9ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c9f4.  v1:= temp @kind object;
  #L14c9f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c9fc.  v1:= temp @kind object;
  #L14c9fe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14ca04.  v1:= temp @kind object;
  #L14ca06.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14ca0c.  throw v0;
}

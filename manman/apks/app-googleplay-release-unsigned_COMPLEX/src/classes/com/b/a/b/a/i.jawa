record `com.b.a.b.a.i` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.w` @kind interface {
  `com.b.a.b.c` `com.b.a.b.a.i.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.e` `com.b.a.b.a.i.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.d` `com.b.a.b.a.i.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.d` `com.b.a.b.a.i.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.i` v0 @kind this, `com.b.a.b.c` v1 @kind object, `com.b.a.e` v2 @kind object, `com.b.a.b.d` v3 @kind object, `com.b.a.b.a.d` v4 @kind object) @signature `Lcom/b/a/b/a/i;.<init>:(Lcom/b/a/b/c;Lcom/b/a/e;Lcom/b/a/b/d;Lcom/b/a/b/a/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L146924.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14692a.  v0.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` := v1 @kind object;
  #L14692e.  v0.`com.b.a.b.a.i.b` @type ^`com.b.a.e` := v2 @kind object;
  #L146932.  v0.`com.b.a.b.a.i.c` @type ^`com.b.a.b.d` := v3 @kind object;
  #L146936.  v0.`com.b.a.b.a.i.d` @type ^`com.b.a.b.a.d` := v4 @kind object;
  #L14693a.  return @kind void;
}
procedure `com.b.a.b.a.i$b` `a`(`com.b.a.b.a.i` v11 @kind this, `com.b.a.f` v12 @kind object, `java.lang.reflect.Field` v13 @kind object, `java.lang.String` v14 @kind object, `com.b.a.c.a` v15 @kind object, `boolean` v16 , `boolean` v17 ) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/b/a/c/a;ZZ)Lcom/b/a/b/a/i$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L14694c.  call temp:= `a`(v15) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L146952.  v0:= temp @kind object;
  #L146954.  call temp:= `a`(v0) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L14695a.  v10:= temp;
  #L14695c.  v0:= constclass @type ^`com.b.a.a.b` @kind object;
  #L146960.  call temp:= `getAnnotation`(v13, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L146966.  v0:= temp @kind object;
  #L146968.  v0:= (`com.b.a.a.b`) v0 @kind object;
  #L14696c.  v7:= 0I;
  #L14696e.  if v0 == 0 then goto L146982;
  #L146972.  v1:= v11.`com.b.a.b.a.i.d` @type ^`com.b.a.b.a.d` @kind object;
  #L146976.  v2:= v11.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` @kind object;
  #L14697a.  call temp:= `a`(v1, v2, v12, v15, v0) @signature `Lcom/b/a/b/a/d;.a:(Lcom/b/a/b/c;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/a/b;)Lcom/b/a/v;` @kind virtual;
  #L146980.  v7:= temp @kind object;
  #L146982.  if v7 == 0 then goto L1469b2;
  #L146986.  v6:= 1I;
  #L146988.  if v7 != 0 then goto L146994;
  #L14698c.  call temp:= `a`(v12, v15) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L146992.  v7:= temp @kind object;
  #L146994.  v0:= new `com.b.a.b.a.i$1`;
  #L146998.  v1:= v11 @kind object;
  #L14699a.  v2:= v14 @kind object;
  #L14699c.  v3:= v16;
  #L1469a0.  v4:= v17;
  #L1469a4.  v5:= v13 @kind object;
  #L1469a6.  v8:= v12 @kind object;
  #L1469a8.  v9:= v15 @kind object;
  #L1469aa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/b/a/b/a/i$1;.<init>:(Lcom/b/a/b/a/i;Ljava/lang/String;ZZLjava/lang/reflect/Field;ZLcom/b/a/v;Lcom/b/a/f;Lcom/b/a/c/a;Z)V` @kind direct;
  #L1469b0.  return v0 @kind object;
  #L1469b2.  v6:= 0I;
  #L1469b4.  goto L146988;
}
procedure `java.util.List` `a`(`com.b.a.b.a.i` v5 @kind this, `java.lang.reflect.Field` v6 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1469c8.  v0:= constclass @type ^`com.b.a.a.c` @kind object;
  #L1469cc.  call temp:= `getAnnotation`(v6, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1469d2.  v0:= temp @kind object;
  #L1469d4.  v0:= (`com.b.a.a.c`) v0 @kind object;
  #L1469d8.  if v0 != 0 then goto L1469f2;
  #L1469dc.  v0:= v5.`com.b.a.b.a.i.b` @type ^`com.b.a.e` @kind object;
  #L1469e0.  call temp:= `a`(v0, v6) @signature `Lcom/b/a/e;.a:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind interface;
  #L1469e6.  v0:= temp @kind object;
  #L1469e8.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1469ee.  v0:= temp @kind object;
  #L1469f0.  return v0 @kind object;
  #L1469f2.  call temp:= `a`(v0) @signature `Lcom/b/a/a/c;.a:()Ljava/lang/String;` @kind interface;
  #L1469f8.  v1:= temp @kind object;
  #L1469fa.  call temp:= `b`(v0) @signature `Lcom/b/a/a/c;.b:()[Ljava/lang/String;` @kind interface;
  #L146a00.  v2:= temp @kind object;
  #L146a02.  v0:= length @variable v2;
  #L146a04.  if v0 != 0 then goto L146a12;
  #L146a08.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L146a0e.  v0:= temp @kind object;
  #L146a10.  goto L1469f0;
  #L146a12.  v0:= new `java.util.ArrayList`;
  #L146a16.  v3:= length @variable v2;
  #L146a18.  v3:= v3 + 1;
  #L146a1c.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L146a22.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L146a28.  v3:= length @variable v2;
  #L146a2a.  v1:= 0I;
  #L146a2c.  if v1 >= v3 then goto L1469f0;
  #L146a30.  v4:= v2[v1] @kind object;
  #L146a34.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L146a3a.  v1:= v1 + 1;
  #L146a3e.  goto L146a2c;
}
procedure `java.util.Map` `a`(`com.b.a.b.a.i` v17 @kind this, `com.b.a.f` v18 @kind object, `com.b.a.c.a` v19 @kind object, `java.lang.Class` v20 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;Ljava/lang/Class;)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L146a50.  v10:= new `java.util.LinkedHashMap`;
  #L146a54.  call `<init>`(v10) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L146a5a.  call temp:= `isInterface`(v20) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L146a60.  v1:= temp;
  #L146a62.  if v1 == 0 then goto L146a6a;
  #L146a66.  v1:= v10 @kind object;
  #L146a68.  return v1 @kind object;
  #L146a6a.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L146a70.  v12:= temp @kind object;
  #L146a72.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L146a76.  v0:= v20 @kind object;
  #L146a7a.  if v0 == v1 then goto L146bbc;
  #L146a7e.  call temp:= `getDeclaredFields`(v20) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L146a84.  v13:= temp @kind object;
  #L146a86.  v14:= length @variable v13;
  #L146a88.  v1:= 0I;
  #L146a8a.  v11:= v1;
  #L146a8c.  if v11 >= v14 then goto L146b8c;
  #L146a90.  v3:= v13[v11] @kind object;
  #L146a94.  v1:= 1I;
  #L146a96.  v0:= v17 @kind object;
  #L146a9a.  call temp:= `a`(v0, v3, v1) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L146aa0.  v6:= temp;
  #L146aa2.  v1:= 0I;
  #L146aa4.  v0:= v17 @kind object;
  #L146aa8.  call temp:= `a`(v0, v3, v1) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L146aae.  v7:= temp;
  #L146ab0.  if v6 != 0 then goto L146ac0;
  #L146ab4.  if v7 != 0 then goto L146ac0;
  #L146ab8.  v1:= v11 + 1;
  #L146abc.  v11:= v1;
  #L146abe.  goto L146a8c;
  #L146ac0.  v1:= 1I;
  #L146ac2.  call `setAccessible`(v3, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L146ac8.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L146ace.  v1:= temp @kind object;
  #L146ad0.  call temp:= `getGenericType`(v3) @signature `Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L146ad6.  v2:= temp @kind object;
  #L146ad8.  v0:= v20 @kind object;
  #L146adc.  call temp:= `a`(v1, v0, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L146ae2.  v15:= temp @kind object;
  #L146ae4.  v0:= v17 @kind object;
  #L146ae8.  call temp:= `a`(v0, v3) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @kind direct;
  #L146aee.  v16:= temp @kind object;
  #L146af0.  v8:= 0I;
  #L146af2.  v1:= 0I;
  #L146af4.  v9:= v1;
  #L146af6.  call temp:= `size`(v16) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L146afc.  v1:= temp;
  #L146afe.  if v9 >= v1 then goto L146b4a;
  #L146b02.  v0:= v16 @kind object;
  #L146b06.  call temp:= `get`(v0, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L146b0c.  v4:= temp @kind object;
  #L146b0e.  v4:= (`java.lang.String`) v4 @kind object;
  #L146b12.  if v9 == 0 then goto L146b18;
  #L146b16.  v6:= 0I;
  #L146b18.  call temp:= `a`(v15) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L146b1e.  v5:= temp @kind object;
  #L146b20.  v1:= v17 @kind object;
  #L146b24.  v2:= v18 @kind object;
  #L146b28.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/b/a/c/a;ZZ)Lcom/b/a/b/a/i$b;` @kind direct;
  #L146b2e.  v1:= temp @kind object;
  #L146b30.  call temp:= `put`(v10, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L146b36.  v1:= temp @kind object;
  #L146b38.  v1:= (`com.b.a.b.a.i$b`) v1 @kind object;
  #L146b3c.  if v8 != 0 then goto L146bc2;
  #L146b40.  v2:= v9 + 1;
  #L146b44.  v9:= v2;
  #L146b46.  v8:= v1 @kind object;
  #L146b48.  goto L146af6;
  #L146b4a.  if v8 == 0 then goto L146ab8;
  #L146b4e.  v1:= new `java.lang.IllegalArgumentException`;
  #L146b52.  v2:= new `java.lang.StringBuilder`;
  #L146b56.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L146b5c.  call temp:= `append`(v2, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L146b62.  v2:= temp @kind object;
  #L146b64.  v3:= " declares multiple JSON fields named " @kind object;
  #L146b68.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L146b6e.  v2:= temp @kind object;
  #L146b70.  v3:= v8.`com.b.a.b.a.i$b.h` @type ^`java.lang.String` @kind object;
  #L146b74.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L146b7a.  v2:= temp @kind object;
  #L146b7c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L146b82.  v2:= temp @kind object;
  #L146b84.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L146b8a.  throw v1;
  #L146b8c.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L146b92.  v1:= temp @kind object;
  #L146b94.  call temp:= `getGenericSuperclass`(v20) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L146b9a.  v2:= temp @kind object;
  #L146b9c.  v0:= v20 @kind object;
  #L146ba0.  call temp:= `a`(v1, v0, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L146ba6.  v1:= temp @kind object;
  #L146ba8.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L146bae.  v19:= temp @kind object;
  #L146bb0.  call temp:= `a`(v19) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L146bb6.  v20:= temp @kind object;
  #L146bb8.  goto L146a72;
  #L146bbc.  v1:= v10 @kind object;
  #L146bbe.  goto L146a68;
  #L146bc2.  v1:= v8 @kind object;
  #L146bc4.  goto L146b40;
}
procedure `boolean` `a`(`java.lang.reflect.Field` v1 @kind object, `boolean` v2 , `com.b.a.b.d` v3 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;ZLcom/b/a/b/d;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L146bd8.  call temp:= `getType`(v1) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L146bde.  v0:= temp @kind object;
  #L146be0.  call temp:= `a`(v3, v0, v2) @signature `Lcom/b/a/b/d;.a:(Ljava/lang/Class;Z)Z` @kind virtual;
  #L146be6.  v0:= temp;
  #L146be8.  if v0 != 0 then goto L146bfc;
  #L146bec.  call temp:= `a`(v3, v1, v2) @signature `Lcom/b/a/b/d;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L146bf2.  v0:= temp;
  #L146bf4.  if v0 != 0 then goto L146bfc;
  #L146bf8.  v0:= 1I;
  #L146bfa.  return v0;
  #L146bfc.  v0:= 0I;
  #L146bfe.  goto L146bfa;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.i` v3 @kind this, `com.b.a.f` v4 @kind object, `com.b.a.c.a` v5 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L146c10.  call temp:= `a`(v5) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L146c16.  v1:= temp @kind object;
  #L146c18.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L146c1c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L146c22.  v0:= temp;
  #L146c24.  if v0 != 0 then goto L146c2c;
  #L146c28.  v0:= 0I;
  #L146c2a.  return v0 @kind object;
  #L146c2c.  v0:= v3.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` @kind object;
  #L146c30.  call temp:= `a`(v0, v5) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @kind virtual;
  #L146c36.  v2:= temp @kind object;
  #L146c38.  v0:= new `com.b.a.b.a.i$a`;
  #L146c3c.  call temp:= `a`(v3, v4, v5, v1) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;Ljava/lang/Class;)Ljava/util/Map;` @kind direct;
  #L146c42.  v1:= temp @kind object;
  #L146c44.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/i$a;.<init>:(Lcom/b/a/b/h;Ljava/util/Map;)V` @kind direct;
  #L146c4a.  goto L146c2a;
}
procedure `boolean` `a`(`com.b.a.b.a.i` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `boolean` v3 ) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L146c5c.  v0:= v1.`com.b.a.b.a.i.c` @type ^`com.b.a.b.d` @kind object;
  #L146c60.  call temp:= `a`(v2, v3, v0) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;ZLcom/b/a/b/d;)Z` @kind static;
  #L146c66.  v0:= temp;
  #L146c68.  return v0;
}

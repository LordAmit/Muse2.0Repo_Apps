record `com.b.a.f` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.ThreadLocal` `com.b.a.f.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.b.a.f.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.b.a.f.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.c` `com.b.a.f.e` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.d` `com.b.a.f.f` @AccessFlag PRIVATE_FINAL;
  `com.b.a.e` `com.b.a.f.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.f.l` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.d` `com.b.a.f.m` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.c.a` `@@com.b.a.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L14d758.  v0:= new `com.b.a.f$1`;
  #L14d75c.  call `<init>`(v0) @signature `Lcom/b/a/f$1;.<init>:()V` @kind direct;
  #L14d762.  `@@com.b.a.f.a` @type ^`com.b.a.c.a` := v0 @kind object;
  #L14d766.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.f` v13 @kind this) @signature `Lcom/b/a/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L14d778.  v4:= 0I;
  #L14d77a.  v1:= `@@com.b.a.b.d.a` @type ^`com.b.a.b.d` @kind object;
  #L14d77e.  v2:= `@@com.b.a.d.a` @type ^`com.b.a.d` @kind object;
  #L14d782.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L14d788.  v3:= temp @kind object;
  #L14d78a.  v7:= 1I;
  #L14d78c.  v11:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L14d790.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L14d796.  v12:= temp @kind object;
  #L14d798.  v0:= v13 @kind object;
  #L14d79a.  v5:= v4;
  #L14d79c.  v6:= v4;
  #L14d79e.  v8:= v4;
  #L14d7a0.  v9:= v4;
  #L14d7a2.  v10:= v4;
  #L14d7a4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @kind direct;
  #L14d7aa.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.f` v6 @kind this, `com.b.a.b.d` v7 @kind object, `com.b.a.e` v8 @kind object, `java.util.Map` v9 @kind object, `boolean` v10 , `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `boolean` v15 , `boolean` v16 , `com.b.a.u` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L14d7bc.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14d7c2.  v1:= new `java.lang.ThreadLocal`;
  #L14d7c6.  call `<init>`(v1) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L14d7cc.  v6.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` := v1 @kind object;
  #L14d7d0.  v1:= new `java.util.concurrent.ConcurrentHashMap`;
  #L14d7d4.  call `<init>`(v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L14d7da.  v6.`com.b.a.f.c` @type ^`java.util.Map` := v1 @kind object;
  #L14d7de.  v1:= new `com.b.a.b.c`;
  #L14d7e2.  call `<init>`(v1, v9) @signature `Lcom/b/a/b/c;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L14d7e8.  v6.`com.b.a.f.e` @type ^`com.b.a.b.c` := v1 @kind object;
  #L14d7ec.  v6.`com.b.a.f.f` @type ^`com.b.a.b.d` := v7 @kind object;
  #L14d7f0.  v6.`com.b.a.f.g` @type ^`com.b.a.e` := v8 @kind object;
  #L14d7f4.  v6.`com.b.a.f.h` @type ^`boolean` := v10 @kind boolean;
  #L14d7f8.  v6.`com.b.a.f.j` @type ^`boolean` := v12 @kind boolean;
  #L14d7fc.  v6.`com.b.a.f.i` @type ^`boolean` := v13 @kind boolean;
  #L14d800.  v6.`com.b.a.f.k` @type ^`boolean` := v14 @kind boolean;
  #L14d804.  v6.`com.b.a.f.l` @type ^`boolean` := v15 @kind boolean;
  #L14d808.  v1:= new `java.util.ArrayList`;
  #L14d80c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L14d812.  v2:= `@@com.b.a.b.a.n.Y` @type ^`com.b.a.w` @kind object;
  #L14d816.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d81c.  v2:= `@@com.b.a.b.a.h.a` @type ^`com.b.a.w` @kind object;
  #L14d820.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d826.  call temp:= `add`(v1, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d82c.  v0:= v18 @kind object;
  #L14d830.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L14d836.  v2:= `@@com.b.a.b.a.n.D` @type ^`com.b.a.w` @kind object;
  #L14d83a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d840.  v2:= `@@com.b.a.b.a.n.m` @type ^`com.b.a.w` @kind object;
  #L14d844.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d84a.  v2:= `@@com.b.a.b.a.n.g` @type ^`com.b.a.w` @kind object;
  #L14d84e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d854.  v2:= `@@com.b.a.b.a.n.i` @type ^`com.b.a.w` @kind object;
  #L14d858.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d85e.  v2:= `@@com.b.a.b.a.n.k` @type ^`com.b.a.w` @kind object;
  #L14d862.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d868.  call temp:= `a`(v17) @signature `Lcom/b/a/f;.a:(Lcom/b/a/u;)Lcom/b/a/v;` @kind static;
  #L14d86e.  v2:= temp @kind object;
  #L14d870.  v3:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L14d874.  v4:= constclass @type ^`java.lang.Long` @kind object;
  #L14d878.  call temp:= `a`(v3, v4, v2) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L14d87e.  v3:= temp @kind object;
  #L14d880.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d886.  v3:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L14d88a.  v4:= constclass @type ^`java.lang.Double` @kind object;
  #L14d88e.  v0:= v16;
  #L14d892.  call temp:= `a`(v6, v0) @signature `Lcom/b/a/f;.a:(Z)Lcom/b/a/v;` @kind direct;
  #L14d898.  v5:= temp @kind object;
  #L14d89a.  call temp:= `a`(v3, v4, v5) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L14d8a0.  v3:= temp @kind object;
  #L14d8a2.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d8a8.  v3:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L14d8ac.  v4:= constclass @type ^`java.lang.Float` @kind object;
  #L14d8b0.  v0:= v16;
  #L14d8b4.  call temp:= `b`(v6, v0) @signature `Lcom/b/a/f;.b:(Z)Lcom/b/a/v;` @kind direct;
  #L14d8ba.  v5:= temp @kind object;
  #L14d8bc.  call temp:= `a`(v3, v4, v5) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L14d8c2.  v3:= temp @kind object;
  #L14d8c4.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d8ca.  v3:= `@@com.b.a.b.a.n.x` @type ^`com.b.a.w` @kind object;
  #L14d8ce.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d8d4.  v3:= `@@com.b.a.b.a.n.o` @type ^`com.b.a.w` @kind object;
  #L14d8d8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d8de.  v3:= `@@com.b.a.b.a.n.q` @type ^`com.b.a.w` @kind object;
  #L14d8e2.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d8e8.  v3:= constclass @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L14d8ec.  call temp:= `a`(v2) @signature `Lcom/b/a/f;.a:(Lcom/b/a/v;)Lcom/b/a/v;` @kind static;
  #L14d8f2.  v4:= temp @kind object;
  #L14d8f4.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L14d8fa.  v3:= temp @kind object;
  #L14d8fc.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d902.  v3:= constclass @type ^`java.util.concurrent.atomic.AtomicLongArray` @kind object;
  #L14d906.  call temp:= `b`(v2) @signature `Lcom/b/a/f;.b:(Lcom/b/a/v;)Lcom/b/a/v;` @kind static;
  #L14d90c.  v2:= temp @kind object;
  #L14d90e.  call temp:= `a`(v3, v2) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L14d914.  v2:= temp @kind object;
  #L14d916.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d91c.  v2:= `@@com.b.a.b.a.n.s` @type ^`com.b.a.w` @kind object;
  #L14d920.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d926.  v2:= `@@com.b.a.b.a.n.z` @type ^`com.b.a.w` @kind object;
  #L14d92a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d930.  v2:= `@@com.b.a.b.a.n.F` @type ^`com.b.a.w` @kind object;
  #L14d934.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d93a.  v2:= `@@com.b.a.b.a.n.H` @type ^`com.b.a.w` @kind object;
  #L14d93e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d944.  v2:= constclass @type ^`java.math.BigDecimal` @kind object;
  #L14d948.  v3:= `@@com.b.a.b.a.n.B` @type ^`com.b.a.v` @kind object;
  #L14d94c.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L14d952.  v2:= temp @kind object;
  #L14d954.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d95a.  v2:= constclass @type ^`java.math.BigInteger` @kind object;
  #L14d95e.  v3:= `@@com.b.a.b.a.n.C` @type ^`com.b.a.v` @kind object;
  #L14d962.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/a/n;.a:(Ljava/lang/Class;Lcom/b/a/v;)Lcom/b/a/w;` @kind static;
  #L14d968.  v2:= temp @kind object;
  #L14d96a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d970.  v2:= `@@com.b.a.b.a.n.J` @type ^`com.b.a.w` @kind object;
  #L14d974.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d97a.  v2:= `@@com.b.a.b.a.n.L` @type ^`com.b.a.w` @kind object;
  #L14d97e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d984.  v2:= `@@com.b.a.b.a.n.P` @type ^`com.b.a.w` @kind object;
  #L14d988.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d98e.  v2:= `@@com.b.a.b.a.n.R` @type ^`com.b.a.w` @kind object;
  #L14d992.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d998.  v2:= `@@com.b.a.b.a.n.W` @type ^`com.b.a.w` @kind object;
  #L14d99c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9a2.  v2:= `@@com.b.a.b.a.n.N` @type ^`com.b.a.w` @kind object;
  #L14d9a6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9ac.  v2:= `@@com.b.a.b.a.n.d` @type ^`com.b.a.w` @kind object;
  #L14d9b0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9b6.  v2:= `@@com.b.a.b.a.c.a` @type ^`com.b.a.w` @kind object;
  #L14d9ba.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9c0.  v2:= `@@com.b.a.b.a.n.U` @type ^`com.b.a.w` @kind object;
  #L14d9c4.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9ca.  v2:= `@@com.b.a.b.a.k.a` @type ^`com.b.a.w` @kind object;
  #L14d9ce.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9d4.  v2:= `@@com.b.a.b.a.j.a` @type ^`com.b.a.w` @kind object;
  #L14d9d8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9de.  v2:= `@@com.b.a.b.a.n.S` @type ^`com.b.a.w` @kind object;
  #L14d9e2.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9e8.  v2:= `@@com.b.a.b.a.a.a` @type ^`com.b.a.w` @kind object;
  #L14d9ec.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9f2.  v2:= `@@com.b.a.b.a.n.b` @type ^`com.b.a.w` @kind object;
  #L14d9f6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14d9fc.  v2:= new `com.b.a.b.a.b`;
  #L14da00.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L14da04.  call `<init>`(v2, v3) @signature `Lcom/b/a/b/a/b;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14da0a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14da10.  v2:= new `com.b.a.b.a.g`;
  #L14da14.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L14da18.  call `<init>`(v2, v3, v11) @signature `Lcom/b/a/b/a/g;.<init>:(Lcom/b/a/b/c;Z)V` @kind direct;
  #L14da1e.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14da24.  v2:= new `com.b.a.b.a.d`;
  #L14da28.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L14da2c.  call `<init>`(v2, v3) @signature `Lcom/b/a/b/a/d;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14da32.  v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` := v2 @kind object;
  #L14da36.  v2:= v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L14da3a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14da40.  v2:= `@@com.b.a.b.a.n.Z` @type ^`com.b.a.w` @kind object;
  #L14da44.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14da4a.  v2:= new `com.b.a.b.a.i`;
  #L14da4e.  v3:= v6.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L14da52.  v4:= v6.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L14da56.  call `<init>`(v2, v3, v8, v7, v4) @signature `Lcom/b/a/b/a/i;.<init>:(Lcom/b/a/b/c;Lcom/b/a/e;Lcom/b/a/b/d;Lcom/b/a/b/a/d;)V` @kind direct;
  #L14da5c.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14da62.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L14da68.  v1:= temp @kind object;
  #L14da6a.  v6.`com.b.a.f.d` @type ^`java.util.List` := v1 @kind object;
  #L14da6e.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.u` v1 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/u;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L14da80.  v0:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L14da84.  if v1 != v0 then goto L14da8e;
  #L14da88.  v0:= `@@com.b.a.b.a.n.t` @type ^`com.b.a.v` @kind object;
  #L14da8c.  return v0 @kind object;
  #L14da8e.  v0:= new `com.b.a.f$4`;
  #L14da92.  call `<init>`(v0) @signature `Lcom/b/a/f$4;.<init>:()V` @kind direct;
  #L14da98.  goto L14da8c;
}
procedure `com.b.a.v` `a`(`com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/v;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L14daac.  v0:= new `com.b.a.f$5`;
  #L14dab0.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$5;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L14dab6.  call temp:= `a`(v0) @signature `Lcom/b/a/f$5;.a:()Lcom/b/a/v;` @kind virtual;
  #L14dabc.  v0:= temp @kind object;
  #L14dabe.  return v0 @kind object;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v1 @kind this, `boolean` v2 ) @signature `Lcom/b/a/f;.a:(Z)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L14dad0.  if v2 == 0 then goto L14dada;
  #L14dad4.  v0:= `@@com.b.a.b.a.n.v` @type ^`com.b.a.v` @kind object;
  #L14dad8.  return v0 @kind object;
  #L14dada.  v0:= new `com.b.a.f$2`;
  #L14dade.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$2;.<init>:(Lcom/b/a/f;)V` @kind direct;
  #L14dae4.  goto L14dad8;
}
procedure `void` `a`(`double` v4 ) @signature `Lcom/b/a/f;.a:(D)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14daf8.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L14dafe.  v0:= temp;
  #L14db00.  if v0 != 0 then goto L14db10;
  #L14db04.  call temp:= `isInfinite`(v4) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L14db0a.  v0:= temp;
  #L14db0c.  if v0 == 0 then goto L14db42;
  #L14db10.  v0:= new `java.lang.IllegalArgumentException`;
  #L14db14.  v1:= new `java.lang.StringBuilder`;
  #L14db18.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14db1e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L14db24.  v1:= temp @kind object;
  #L14db26.  v2:= " is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method." @kind object;
  #L14db2a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14db30.  v1:= temp @kind object;
  #L14db32.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14db38.  v1:= temp @kind object;
  #L14db3a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14db40.  throw v0;
  #L14db42.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v2 @kind object, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/Object;Lcom/b/a/d/a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L14db54.  if v2 == 0 then goto L14db94;
  #Try_start0.  
  #L14db58.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L14db5e.  v0:= temp @kind object;
  #L14db60.  v1:= `@@com.b.a.d.b.j` @type ^`com.b.a.d.b` @kind object;
  #L14db64.  if v0 == v1 then goto L14db94;
  #L14db68.  v0:= new `com.b.a.m`;
  #L14db6c.  v1:= "JSON document was not fully consumed." @kind object;
  #L14db70.  call `<init>`(v0, v1) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14db76.  throw v0;
  #Try_end0.  
  #L14db78.  v0:= Exception @type ^`com.b.a.d.d` @kind object;
  #L14db7a.  v1:= new `com.b.a.t`;
  #L14db7e.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14db84.  throw v1;
  #L14db86.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L14db88.  v1:= new `com.b.a.m`;
  #L14db8c.  call `<init>`(v1, v0) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14db92.  throw v1;
  #L14db94.  return @kind void;
  catch `com.b.a.d.d` @[Try_start0..Try_end0] goto L14db78;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L14db86;
}
procedure `com.b.a.v` `b`(`com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f;.b:(Lcom/b/a/v;)Lcom/b/a/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L14dbb8.  v0:= new `com.b.a.f$6`;
  #L14dbbc.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$6;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L14dbc2.  call temp:= `a`(v0) @signature `Lcom/b/a/f$6;.a:()Lcom/b/a/v;` @kind virtual;
  #L14dbc8.  v0:= temp @kind object;
  #L14dbca.  return v0 @kind object;
}
procedure `com.b.a.v` `b`(`com.b.a.f` v1 @kind this, `boolean` v2 ) @signature `Lcom/b/a/f;.b:(Z)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L14dbdc.  if v2 == 0 then goto L14dbe6;
  #L14dbe0.  v0:= `@@com.b.a.b.a.n.u` @type ^`com.b.a.v` @kind object;
  #L14dbe4.  return v0 @kind object;
  #L14dbe6.  v0:= new `com.b.a.f$3`;
  #L14dbea.  call `<init>`(v0, v1) @signature `Lcom/b/a/f$3;.<init>:(Lcom/b/a/f;)V` @kind direct;
  #L14dbf0.  goto L14dbe4;
}
procedure `com.b.a.d.a` `a`(`com.b.a.f` v2 @kind this, `java.io.Reader` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;)Lcom/b/a/d/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14dc04.  v0:= new `com.b.a.d.a`;
  #L14dc08.  call `<init>`(v0, v3) @signature `Lcom/b/a/d/a;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L14dc0e.  v1:= v2.`com.b.a.f.l` @type ^`boolean` @kind boolean;
  #L14dc12.  call `a`(v0, v1) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L14dc18.  return v0 @kind object;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v5 @kind this, `com.b.a.c.a` v6 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L14dc2c.  v1:= v5.`com.b.a.f.c` @type ^`java.util.Map` @kind object;
  #L14dc30.  if v6 != 0 then goto L14dc4a;
  #L14dc34.  v0:= `@@com.b.a.f.a` @type ^`com.b.a.c.a` @kind object;
  #L14dc38.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14dc3e.  v0:= temp @kind object;
  #L14dc40.  v0:= (`com.b.a.v`) v0 @kind object;
  #L14dc44.  if v0 == 0 then goto L14dc4e;
  #L14dc48.  return v0 @kind object;
  #L14dc4a.  v0:= v6 @kind object;
  #L14dc4c.  goto L14dc38;
  #L14dc4e.  v0:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L14dc52.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L14dc58.  v0:= temp @kind object;
  #L14dc5a.  v0:= (`java.util.Map`) v0 @kind object;
  #L14dc5e.  v1:= 0I;
  #L14dc60.  if v0 != 0 then goto L14dd3e;
  #L14dc64.  v1:= new `java.util.HashMap`;
  #L14dc68.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L14dc6e.  v0:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L14dc72.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L14dc78.  v0:= 1I;
  #L14dc7a.  v2:= v1 @kind object;
  #L14dc7c.  v1:= v0;
  #L14dc7e.  call temp:= `get`(v2, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14dc84.  v0:= temp @kind object;
  #L14dc86.  v0:= (`com.b.a.f$a`) v0 @kind object;
  #L14dc8a.  if v0 != 0 then goto L14dc48;
  #Try_start0.  
  #L14dc8e.  v3:= new `com.b.a.f$a`;
  #L14dc92.  call `<init>`(v3) @signature `Lcom/b/a/f$a;.<init>:()V` @kind direct;
  #L14dc98.  call temp:= `put`(v2, v6, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14dc9e.  v0:= v5.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L14dca2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L14dca8.  v4:= temp @kind object;
  #L14dcaa.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L14dcb0.  v0:= temp;
  #L14dcb2.  if v0 == 0 then goto L14dcf4;
  #L14dcb6.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14dcbc.  v0:= temp @kind object;
  #L14dcbe.  v0:= (`com.b.a.w`) v0 @kind object;
  #L14dcc2.  call temp:= `a`(v0, v5, v6) @signature `Lcom/b/a/w;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind interface;
  #L14dcc8.  v0:= temp @kind object;
  #L14dcca.  if v0 == 0 then goto L14dcaa;
  #L14dcce.  call `a`(v3, v0) @signature `Lcom/b/a/f$a;.a:(Lcom/b/a/v;)V` @kind virtual;
  #L14dcd4.  v3:= v5.`com.b.a.f.c` @type ^`java.util.Map` @kind object;
  #L14dcd8.  call temp:= `put`(v3, v6, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L14dcde.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14dce4.  if v1 == 0 then goto L14dc48;
  #L14dce8.  v1:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L14dcec.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L14dcf2.  goto L14dc48;
  #Try_start1.  
  #L14dcf4.  v0:= new `java.lang.IllegalArgumentException`;
  #L14dcf8.  v3:= new `java.lang.StringBuilder`;
  #L14dcfc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14dd02.  v4:= "GSON cannot handle " @kind object;
  #L14dd06.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14dd0c.  v3:= temp @kind object;
  #L14dd0e.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14dd14.  v3:= temp @kind object;
  #L14dd16.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14dd1c.  v3:= temp @kind object;
  #L14dd1e.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14dd24.  throw v0;
  #Try_end1.  
  #L14dd26.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14dd28.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14dd2e.  if v1 == 0 then goto L14dd3c;
  #L14dd32.  v1:= v5.`com.b.a.f.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L14dd36.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L14dd3c.  throw v0;
  #L14dd3e.  v2:= v0 @kind object;
  #L14dd40.  goto L14dc7e;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L14dd26;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L14dd26;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v3 @kind this, `com.b.a.w` v4 @kind object, `com.b.a.c.a` v5 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/w;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14dd68.  v0:= v3.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L14dd6c.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L14dd72.  v0:= temp;
  #L14dd74.  if v0 != 0 then goto L14dd7c;
  #L14dd78.  v4:= v3.`com.b.a.f.m` @type ^`com.b.a.b.a.d` @kind object;
  #L14dd7c.  v0:= 0I;
  #L14dd7e.  v1:= v3.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L14dd82.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L14dd88.  v2:= temp @kind object;
  #L14dd8a.  v1:= v0;
  #L14dd8c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L14dd92.  v0:= temp;
  #L14dd94.  if v0 == 0 then goto L14ddc0;
  #L14dd98.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14dd9e.  v0:= temp @kind object;
  #L14dda0.  v0:= (`com.b.a.w`) v0 @kind object;
  #L14dda4.  if v1 != 0 then goto L14ddb2;
  #L14dda8.  if v0 != v4 then goto L14dd8c;
  #L14ddac.  v0:= 1I;
  #L14ddae.  v1:= v0;
  #L14ddb0.  goto L14dd8c;
  #L14ddb2.  call temp:= `a`(v0, v3, v5) @signature `Lcom/b/a/w;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind interface;
  #L14ddb8.  v0:= temp @kind object;
  #L14ddba.  if v0 == 0 then goto L14dd8c;
  #L14ddbe.  return v0 @kind object;
  #L14ddc0.  v0:= new `java.lang.IllegalArgumentException`;
  #L14ddc4.  v1:= new `java.lang.StringBuilder`;
  #L14ddc8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14ddce.  v2:= "GSON cannot serialize " @kind object;
  #L14ddd2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ddd8.  v1:= temp @kind object;
  #L14ddda.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14dde0.  v1:= temp @kind object;
  #L14dde2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14dde8.  v1:= temp @kind object;
  #L14ddea.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14ddf0.  throw v0;
}
procedure `com.b.a.v` `a`(`com.b.a.f` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/Class;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14de04.  call temp:= `b`(v2) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @kind static;
  #L14de0a.  v0:= temp @kind object;
  #L14de0c.  call temp:= `a`(v1, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L14de12.  v0:= temp @kind object;
  #L14de14.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v3 @kind this, `com.b.a.d.a` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/f;.a:(Lcom/b/a/d/a;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14de28.  v1:= 1I;
  #L14de2a.  call temp:= `q`(v4) @signature `Lcom/b/a/d/a;.q:()Z` @kind virtual;
  #L14de30.  v2:= temp;
  #L14de32.  call `a`(v4, v1) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #Try_start0.  
  #L14de38.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L14de3e.  v1:= 0I;
  #L14de40.  call temp:= `a`(v5) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L14de46.  v0:= temp @kind object;
  #L14de48.  call temp:= `a`(v3, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L14de4e.  v0:= temp @kind object;
  #L14de50.  call temp:= `b`(v0, v4) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L14de56.  v0:= temp @kind object;
  #L14de58.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L14de5e.  return v0 @kind object;
  #L14de60.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L14de62.  if v1 == 0 then goto L14de70;
  #L14de66.  v0:= 0I;
  #L14de68.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L14de6e.  goto L14de5e;
  #Try_start1.  
  #L14de70.  v1:= new `com.b.a.t`;
  #L14de74.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14de7a.  throw v1;
  #Try_end1.  
  #L14de7c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14de7e.  call `a`(v4, v2) @signature `Lcom/b/a/d/a;.a:(Z)V` @kind virtual;
  #L14de84.  throw v0;
  #L14de86.  v0:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #Try_start2.  
  #L14de88.  v1:= new `com.b.a.t`;
  #L14de8c.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14de92.  throw v1;
  #L14de94.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L14de96.  v1:= new `com.b.a.t`;
  #L14de9a.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14dea0.  throw v1;
  #Try_end2.  
  catch `java.io.EOFException` @[Try_start0..Try_end0] goto L14de60;
  catch `java.lang.IllegalStateException` @[Try_start0..Try_end0] goto L14de86;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L14de94;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L14de7c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L14de7c;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L14de7c;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v2 @kind this, `java.io.Reader` v3 @kind object, `java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14dedc.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;)Lcom/b/a/d/a;` @kind virtual;
  #L14dee2.  v0:= temp @kind object;
  #L14dee4.  call temp:= `a`(v2, v0, v4) @signature `Lcom/b/a/f;.a:(Lcom/b/a/d/a;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L14deea.  v1:= temp @kind object;
  #L14deec.  call `a`(v1, v0) @signature `Lcom/b/a/f;.a:(Ljava/lang/Object;Lcom/b/a/d/a;)V` @kind static;
  #L14def2.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14df04.  call temp:= `a`(v2, v3, v4) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L14df0a.  v0:= temp @kind object;
  #L14df0c.  call temp:= `a`(v4) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L14df12.  v1:= temp @kind object;
  #L14df14.  call temp:= `cast`(v1, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L14df1a.  v0:= temp @kind object;
  #L14df1c.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`com.b.a.f` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/f;.a:(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14df30.  if v2 != 0 then goto L14df38;
  #L14df34.  v0:= 0I;
  #L14df36.  return v0 @kind object;
  #L14df38.  v0:= new `java.io.StringReader`;
  #L14df3c.  call `<init>`(v0, v2) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14df42.  call temp:= `a`(v1, v0, v3) @signature `Lcom/b/a/f;.a:(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L14df48.  v0:= temp @kind object;
  #L14df4a.  goto L14df36;
}
procedure `java.lang.String` `toString`(`com.b.a.f` v2 @kind this) @signature `Lcom/b/a/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14df5c.  v0:= new `java.lang.StringBuilder`;
  #L14df60.  v1:= "{serializeNulls:" @kind object;
  #L14df64.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14df6a.  v1:= v2.`com.b.a.f.h` @type ^`boolean` @kind boolean;
  #L14df6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L14df74.  v0:= temp @kind object;
  #L14df76.  v1:= "factories:" @kind object;
  #L14df7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14df80.  v0:= temp @kind object;
  #L14df82.  v1:= v2.`com.b.a.f.d` @type ^`java.util.List` @kind object;
  #L14df86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14df8c.  v0:= temp @kind object;
  #L14df8e.  v1:= ",instanceCreators:" @kind object;
  #L14df92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14df98.  v0:= temp @kind object;
  #L14df9a.  v1:= v2.`com.b.a.f.e` @type ^`com.b.a.b.c` @kind object;
  #L14df9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14dfa4.  v0:= temp @kind object;
  #L14dfa6.  v1:= "}" @kind object;
  #L14dfaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14dfb0.  v0:= temp @kind object;
  #L14dfb2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14dfb8.  v0:= temp @kind object;
  #L14dfba.  return v0 @kind object;
}

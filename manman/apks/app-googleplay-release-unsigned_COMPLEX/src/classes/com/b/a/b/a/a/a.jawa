record `com.b.a.b.a.a.a` @kind class @AccessFlag PUBLIC {
}
global `java.util.TimeZone` `@@com.b.a.b.a.a.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1416fc.  v0:= "UTC" @kind object;
  #L141700.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L141706.  v0:= temp @kind object;
  #L141708.  `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` := v0 @kind object;
  #L14170c.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L141720.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L141726.  v0:= temp;
  #L141728.  if v3 >= v0 then goto L14174c;
  #L14172c.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L141732.  v0:= temp;
  #L141734.  v1:= 48I;
  #L141738.  if v0 < v1 then goto L141744;
  #L14173c.  v1:= 57I;
  #L141740.  if v0 <= v1 then goto L141746;
  #L141744.  return v3;
  #L141746.  v3:= v3 + 1;
  #L14174a.  goto L141720;
  #L14174c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L141752.  v3:= temp;
  #L141754.  goto L141744;
}
procedure `int` `a`(`java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L141768.  v3:= 10I;
  #L14176c.  if v5 < 0 then goto L141780;
  #L141770.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L141776.  v0:= temp;
  #L141778.  if v6 > v0 then goto L141780;
  #L14177c.  if v5 <= v6 then goto L14178c;
  #L141780.  v0:= new `java.lang.NumberFormatException`;
  #L141784.  call `<init>`(v0, v4) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14178a.  throw v0;
  #L14178c.  v0:= 0I;
  #L14178e.  if v5 >= v6 then goto L14184a;
  #L141792.  v1:= v5 + 1;
  #L141796.  call temp:= `charAt`(v4, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14179c.  v0:= temp;
  #L14179e.  call temp:= `digit`(v0, v3) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L1417a4.  v0:= temp;
  #L1417a6.  if v0 >= 0 then goto L1417e4;
  #L1417aa.  v0:= new `java.lang.NumberFormatException`;
  #L1417ae.  v1:= new `java.lang.StringBuilder`;
  #L1417b2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1417b8.  v2:= "Invalid number: " @kind object;
  #L1417bc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1417c2.  v1:= temp @kind object;
  #L1417c4.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1417ca.  v2:= temp @kind object;
  #L1417cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1417d2.  v1:= temp @kind object;
  #L1417d4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1417da.  v1:= temp @kind object;
  #L1417dc.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1417e2.  throw v0;
  #L1417e4.  v0:= -v0 @kind int;
  #L1417e6.  if v1 >= v6 then goto L141846;
  #L1417ea.  v2:= v1 + 1;
  #L1417ee.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1417f4.  v1:= temp;
  #L1417f6.  call temp:= `digit`(v1, v3) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L1417fc.  v1:= temp;
  #L1417fe.  if v1 >= 0 then goto L14183c;
  #L141802.  v0:= new `java.lang.NumberFormatException`;
  #L141806.  v1:= new `java.lang.StringBuilder`;
  #L14180a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141810.  v2:= "Invalid number: " @kind object;
  #L141814.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14181a.  v1:= temp @kind object;
  #L14181c.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L141822.  v2:= temp @kind object;
  #L141824.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14182a.  v1:= temp @kind object;
  #L14182c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141832.  v1:= temp @kind object;
  #L141834.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14183a.  throw v0;
  #L14183c.  v0:= v0 * 10;
  #L141840.  v0:= v0 - v1 @kind int;
  #L141842.  v1:= v2;
  #L141844.  goto L1417e6;
  #L141846.  v0:= -v0 @kind int;
  #L141848.  return v0;
  #L14184a.  v1:= v5;
  #L14184c.  goto L1417e6;
}
procedure `java.util.Date` `a`(`java.lang.String` v13 @kind object, `java.text.ParsePosition` v14 @kind object) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L141860.  v12:= 43I;
  #L141864.  v11:= 5I;
  #L141866.  v10:= 45I;
  #L14186a.  v0:= 0I;
  #Try_start0.  
  #L14186c.  call temp:= `getIndex`(v14) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L141872.  v2:= temp;
  #L141874.  v1:= v2 + 4;
  #L141878.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L14187e.  v6:= temp;
  #L141880.  v2:= 45I;
  #L141884.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14188a.  v2:= temp;
  #L14188c.  if v2 == 0 then goto L141d0a;
  #L141890.  v1:= v1 + 1;
  #L141894.  v2:= v1;
  #L141896.  v1:= v2 + 2;
  #L14189a.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L1418a0.  v7:= temp;
  #L1418a2.  v2:= 45I;
  #L1418a6.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L1418ac.  v2:= temp;
  #L1418ae.  if v2 == 0 then goto L141d04;
  #L1418b2.  v1:= v1 + 1;
  #L1418b6.  v2:= v1;
  #L1418b8.  v1:= v2 + 2;
  #L1418bc.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L1418c2.  v8:= temp;
  #L1418c4.  v2:= 84I;
  #L1418c8.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L1418ce.  v2:= temp;
  #L1418d0.  if v2 != 0 then goto L1418fe;
  #L1418d4.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1418da.  v3:= temp;
  #L1418dc.  if v3 > v1 then goto L1418fe;
  #L1418e0.  v0:= new `java.util.GregorianCalendar`;
  #L1418e4.  v2:= v7 + -1;
  #L1418e8.  call `<init>`(v0, v6, v2, v8) @signature `Ljava/util/GregorianCalendar;.<init>:(III)V` @kind direct;
  #L1418ee.  call `setIndex`(v14, v1) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L1418f4.  call temp:= `getTime`(v0) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L1418fa.  v0:= temp @kind object;
  #L1418fc.  return v0 @kind object;
  #L1418fe.  if v2 == 0 then goto L141cf8;
  #L141902.  v2:= v1 + 1;
  #L141906.  v1:= v2 + 2;
  #L14190a.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L141910.  v3:= temp;
  #L141912.  v2:= 58I;
  #L141916.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14191c.  v2:= temp;
  #L14191e.  if v2 == 0 then goto L141cf2;
  #L141922.  v1:= v1 + 1;
  #L141926.  v2:= v1;
  #L141928.  v1:= v2 + 2;
  #L14192c.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L141932.  v2:= temp;
  #L141934.  v4:= 58I;
  #L141938.  call temp:= `a`(v13, v1, v4) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14193e.  v4:= temp;
  #L141940.  if v4 == 0 then goto L141948;
  #L141944.  v1:= v1 + 1;
  #L141948.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14194e.  v4:= temp;
  #L141950.  if v4 <= v1 then goto L141ce6;
  #L141954.  call temp:= `charAt`(v13, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14195a.  v4:= temp;
  #L14195c.  v5:= 90I;
  #L141960.  if v4 == v5 then goto L141ce6;
  #L141964.  if v4 == v12 then goto L141ce6;
  #L141968.  if v4 == v10 then goto L141ce6;
  #L14196c.  v4:= v1 + 2;
  #L141970.  call temp:= `a`(v13, v1, v4) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L141976.  v1:= temp;
  #L141978.  v5:= 59I;
  #L14197c.  if v1 <= v5 then goto L14198c;
  #L141980.  v5:= 63I;
  #L141984.  if v1 >= v5 then goto L14198c;
  #L141988.  v1:= 59I;
  #L14198c.  v5:= 46I;
  #L141990.  call temp:= `a`(v13, v4, v5) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L141996.  v5:= temp;
  #L141998.  if v5 == 0 then goto L141cd8;
  #L14199c.  v5:= v4 + 1;
  #L1419a0.  v0:= v5 + 1;
  #L1419a4.  call temp:= `a`(v13, v0) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;I)I` @kind static;
  #L1419aa.  v4:= temp;
  #L1419ac.  v0:= v5 + 3;
  #L1419b0.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1419b6.  v9:= temp;
  #L1419b8.  call temp:= `a`(v13, v5, v9) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L1419be.  v0:= temp;
  #L1419c0.  v5:= v9 - v5 @kind int;
  #L1419c4.  goto L141d10;
  #L1419ca.  v5:= v3;
  #L1419cc.  v3:= v1;
  #L1419ce.  v1:= v4;
  #L1419d0.  v4:= v2;
  #L1419d2.  v2:= v0;
  #L1419d4.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1419da.  v0:= temp;
  #L1419dc.  if v0 > v1 then goto L141ab4;
  #L1419e0.  v0:= new `java.lang.IllegalArgumentException`;
  #L1419e4.  v1:= "No time zone indicator" @kind object;
  #L1419e8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1419ee.  throw v0;
  #Try_end0.  
  #L1419f0.  v0:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L1419f2.  v2:= v0 @kind object;
  #L1419f4.  if v13 != 0 then goto L141ca2;
  #L1419f8.  v0:= 0I;
  #L1419fa.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L141a00.  v1:= temp @kind object;
  #L141a02.  if v1 == 0 then goto L141a12;
  #L141a06.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L141a0c.  v3:= temp;
  #L141a0e.  if v3 == 0 then goto L141a54;
  #L141a12.  v1:= new `java.lang.StringBuilder`;
  #L141a16.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141a1c.  v3:= "(" @kind object;
  #L141a20.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a26.  v1:= temp @kind object;
  #L141a28.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L141a2e.  v3:= temp @kind object;
  #L141a30.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L141a36.  v3:= temp @kind object;
  #L141a38.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a3e.  v1:= temp @kind object;
  #L141a40.  v3:= ")" @kind object;
  #L141a44.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a4a.  v1:= temp @kind object;
  #L141a4c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141a52.  v1:= temp @kind object;
  #L141a54.  v3:= new `java.text.ParseException`;
  #L141a58.  v4:= new `java.lang.StringBuilder`;
  #L141a5c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141a62.  v5:= "Failed to parse date [" @kind object;
  #L141a66.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a6c.  v4:= temp @kind object;
  #L141a6e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a74.  v0:= temp @kind object;
  #L141a76.  v4:= "]: " @kind object;
  #L141a7a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a80.  v0:= temp @kind object;
  #L141a82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a88.  v0:= temp @kind object;
  #L141a8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141a90.  v0:= temp @kind object;
  #L141a92.  call temp:= `getIndex`(v14) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L141a98.  v1:= temp;
  #L141a9a.  call `<init>`(v3, v0, v1) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L141aa0.  call temp:= `initCause`(v3, v2) @signature `Ljava/text/ParseException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L141aa6.  throw v3;
  #L141aa8.  v0:= v0 * 10;
  #L141aac.  goto L1419ca;
  #L141aae.  v0:= v0 * 100;
  #L141ab2.  goto L1419ca;
  #Try_start1.  
  #L141ab4.  call temp:= `charAt`(v13, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L141aba.  v0:= temp;
  #L141abc.  v9:= 90I;
  #L141ac0.  if v0 != v9 then goto L141b34;
  #L141ac4.  v0:= `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` @kind object;
  #L141ac8.  v1:= v1 + 1;
  #L141acc.  v9:= new `java.util.GregorianCalendar`;
  #L141ad0.  call `<init>`(v9, v0) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L141ad6.  v0:= 0I;
  #L141ad8.  call `setLenient`(v9, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L141ade.  v0:= 1I;
  #L141ae0.  call `set`(v9, v0, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L141ae6.  v0:= 2I;
  #L141ae8.  v6:= v7 + -1;
  #L141aec.  call `set`(v9, v0, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L141af2.  v0:= 5I;
  #L141af4.  call `set`(v9, v0, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L141afa.  v0:= 11I;
  #L141afe.  call `set`(v9, v0, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L141b04.  v0:= 12I;
  #L141b08.  call `set`(v9, v0, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L141b0e.  v0:= 13I;
  #L141b12.  call `set`(v9, v0, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L141b18.  v0:= 14I;
  #L141b1c.  call `set`(v9, v0, v2) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L141b22.  call `setIndex`(v14, v1) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L141b28.  call temp:= `getTime`(v9) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L141b2e.  v0:= temp @kind object;
  #L141b30.  goto L1418fc;
  #L141b34.  if v0 == v12 then goto L141b3c;
  #L141b38.  if v0 != v10 then goto L141c5c;
  #L141b3c.  call temp:= `substring`(v13, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L141b42.  v0:= temp @kind object;
  #L141b44.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L141b4a.  v9:= temp;
  #L141b4c.  if v9 < v11 then goto L141b80;
  #L141b50.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L141b56.  v9:= temp;
  #L141b58.  v1:= v1 + v9 @kind int;
  #L141b5a.  v9:= "+0000" @kind object;
  #L141b5e.  call temp:= `equals`(v9, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L141b64.  v9:= temp;
  #L141b66.  if v9 != 0 then goto L141b7a;
  #L141b6a.  v9:= "+00:00" @kind object;
  #L141b6e.  call temp:= `equals`(v9, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L141b74.  v9:= temp;
  #L141b76.  if v9 == 0 then goto L141ba8;
  #L141b7a.  v0:= `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` @kind object;
  #L141b7e.  goto L141acc;
  #L141b80.  v9:= new `java.lang.StringBuilder`;
  #L141b84.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141b8a.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141b90.  v0:= temp @kind object;
  #L141b92.  v9:= "00" @kind object;
  #L141b96.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141b9c.  v0:= temp @kind object;
  #L141b9e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141ba4.  v0:= temp @kind object;
  #L141ba6.  goto L141b50;
  #L141ba8.  v9:= new `java.lang.StringBuilder`;
  #L141bac.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141bb2.  v10:= "GMT" @kind object;
  #L141bb6.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141bbc.  v9:= temp @kind object;
  #L141bbe.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141bc4.  v0:= temp @kind object;
  #L141bc6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141bcc.  v9:= temp @kind object;
  #L141bce.  call temp:= `getTimeZone`(v9) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L141bd4.  v0:= temp @kind object;
  #L141bd6.  call temp:= `getID`(v0) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L141bdc.  v10:= temp @kind object;
  #L141bde.  call temp:= `equals`(v10, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L141be4.  v11:= temp;
  #L141be6.  if v11 != 0 then goto L141acc;
  #L141bea.  v11:= ":" @kind object;
  #L141bee.  v12:= "" @kind object;
  #L141bf2.  call temp:= `replace`(v10, v11, v12) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L141bf8.  v10:= temp @kind object;
  #L141bfa.  call temp:= `equals`(v10, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L141c00.  v10:= temp;
  #L141c02.  if v10 != 0 then goto L141acc;
  #L141c06.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L141c0a.  v2:= new `java.lang.StringBuilder`;
  #L141c0e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141c14.  v3:= "Mismatching time zone indicator: " @kind object;
  #L141c18.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141c1e.  v2:= temp @kind object;
  #L141c20.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141c26.  v2:= temp @kind object;
  #L141c28.  v3:= " given, resolves to " @kind object;
  #L141c2c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141c32.  v2:= temp @kind object;
  #L141c34.  call temp:= `getID`(v0) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L141c3a.  v0:= temp @kind object;
  #L141c3c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141c42.  v0:= temp @kind object;
  #L141c44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141c4a.  v0:= temp @kind object;
  #L141c4c.  call `<init>`(v1, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141c52.  throw v1;
  #L141c54.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L141c56.  v2:= v0 @kind object;
  #L141c58.  goto L1419f4;
  #L141c5c.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L141c60.  v2:= new `java.lang.StringBuilder`;
  #L141c64.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141c6a.  v3:= "Invalid time zone indicator '" @kind object;
  #L141c6e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141c74.  v2:= temp @kind object;
  #L141c76.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L141c7c.  v0:= temp @kind object;
  #L141c7e.  v2:= "'" @kind object;
  #L141c82.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141c88.  v0:= temp @kind object;
  #L141c8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141c90.  v0:= temp @kind object;
  #L141c92.  call `<init>`(v1, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141c98.  throw v1;
  #Try_end1.  
  #L141c9a.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L141c9c.  v2:= v0 @kind object;
  #L141c9e.  goto L1419f4;
  #L141ca2.  v0:= new `java.lang.StringBuilder`;
  #L141ca6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141cac.  v1:= 34I;
  #L141cb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L141cb6.  v0:= temp @kind object;
  #L141cb8.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141cbe.  v0:= temp @kind object;
  #L141cc0.  v1:= "'" @kind object;
  #L141cc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141cca.  v0:= temp @kind object;
  #L141ccc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141cd2.  v0:= temp @kind object;
  #L141cd4.  goto L1419fa;
  #L141cd8.  v5:= v3;
  #L141cda.  v3:= v1;
  #L141cdc.  v1:= v4;
  #L141cde.  v4:= v2;
  #L141ce0.  v2:= v0;
  #L141ce2.  goto L1419d4;
  #L141ce6.  v4:= v2;
  #L141ce8.  v5:= v3;
  #L141cea.  v2:= v0;
  #L141cec.  v3:= v0;
  #L141cee.  goto L1419d4;
  #L141cf2.  v2:= v1;
  #L141cf4.  goto L141928;
  #L141cf8.  v2:= v0;
  #L141cfa.  v3:= v0;
  #L141cfc.  v4:= v0;
  #L141cfe.  v5:= v0;
  #L141d00.  goto L1419d4;
  #L141d04.  v2:= v1;
  #L141d06.  goto L1418b8;
  #L141d0a.  v2:= v1;
  #L141d0c.  goto L141896;
  #L141d10.  switch v5
                  | 1 => goto L141aae
                  | 2 => goto L141aa8
                  | else => goto L1419ca;
  catch `java.lang.IndexOutOfBoundsException` @[Try_start0..Try_end0] goto L1419f0;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L141c54;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L141c9a;
  catch `java.lang.IndexOutOfBoundsException` @[Try_start1..Try_end1] goto L1419f0;
  catch `java.lang.NumberFormatException` @[Try_start1..Try_end1] goto L141c54;
  catch `java.lang.IllegalArgumentException` @[Try_start1..Try_end1] goto L141c9a;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object, `int` v2 , `char` v3 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L141d50.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L141d56.  v0:= temp;
  #L141d58.  if v2 >= v0 then goto L141d6c;
  #L141d5c.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L141d62.  v0:= temp;
  #L141d64.  if v0 != v3 then goto L141d6c;
  #L141d68.  v0:= 1I;
  #L141d6a.  return v0;
  #L141d6c.  v0:= 0I;
  #L141d6e.  goto L141d6a;
}

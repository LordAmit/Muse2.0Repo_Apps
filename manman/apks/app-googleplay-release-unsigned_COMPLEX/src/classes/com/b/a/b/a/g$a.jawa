record `com.b.a.b.a.g$a` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.b.a.g` `com.b.a.b.a.g$a.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.g$a.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.g$a.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.h` `com.b.a.b.a.g$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.g$a` v1 @kind this, `com.b.a.b.a.g` v2 @kind object, `com.b.a.f` v3 @kind object, `java.lang.reflect.Type` v4 @kind object, `com.b.a.v` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `com.b.a.v` v7 @kind object, `com.b.a.b.h` v8 @kind object) @signature `Lcom/b/a/b/a/g$a;.<init>:(Lcom/b/a/b/a/g;Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L145ec8.  v1.`com.b.a.b.a.g$a.a` @type ^`com.b.a.b.a.g` := v2 @kind object;
  #L145ecc.  call `<init>`(v1) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L145ed2.  v0:= new `com.b.a.b.a.m`;
  #L145ed6.  call `<init>`(v0, v3, v5, v4) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L145edc.  v1.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` := v0 @kind object;
  #L145ee0.  v0:= new `com.b.a.b.a.m`;
  #L145ee4.  call `<init>`(v0, v3, v7, v6) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L145eea.  v1.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` := v0 @kind object;
  #L145eee.  v1.`com.b.a.b.a.g$a.d` @type ^`com.b.a.b.h` := v8 @kind object;
  #L145ef2.  return @kind void;
}
procedure `java.lang.String` `a`(`com.b.a.b.a.g$a` v2 @kind this, `com.b.a.l` v3 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/l;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L145f04.  call temp:= `i`(v3) @signature `Lcom/b/a/l;.i:()Z` @kind virtual;
  #L145f0a.  v0:= temp;
  #L145f0c.  if v0 == 0 then goto L145f76;
  #L145f10.  call temp:= `m`(v3) @signature `Lcom/b/a/l;.m:()Lcom/b/a/q;` @kind virtual;
  #L145f16.  v0:= temp @kind object;
  #L145f18.  call temp:= `p`(v0) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L145f1e.  v1:= temp;
  #L145f20.  if v1 == 0 then goto L145f36;
  #L145f24.  call temp:= `a`(v0) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L145f2a.  v0:= temp @kind object;
  #L145f2c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L145f32.  v0:= temp @kind object;
  #L145f34.  return v0 @kind object;
  #L145f36.  call temp:= `o`(v0) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L145f3c.  v1:= temp;
  #L145f3e.  if v1 == 0 then goto L145f54;
  #L145f42.  call temp:= `f`(v0) @signature `Lcom/b/a/q;.f:()Z` @kind virtual;
  #L145f48.  v0:= temp;
  #L145f4a.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L145f50.  v0:= temp @kind object;
  #L145f52.  goto L145f34;
  #L145f54.  call temp:= `q`(v0) @signature `Lcom/b/a/q;.q:()Z` @kind virtual;
  #L145f5a.  v1:= temp;
  #L145f5c.  if v1 == 0 then goto L145f6a;
  #L145f60.  call temp:= `b`(v0) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L145f66.  v0:= temp @kind object;
  #L145f68.  goto L145f34;
  #L145f6a.  v0:= new `java.lang.AssertionError`;
  #L145f6e.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L145f74.  throw v0;
  #L145f76.  call temp:= `j`(v3) @signature `Lcom/b/a/l;.j:()Z` @kind virtual;
  #L145f7c.  v0:= temp;
  #L145f7e.  if v0 == 0 then goto L145f88;
  #L145f82.  v0:= "null" @kind object;
  #L145f86.  goto L145f34;
  #L145f88.  v0:= new `java.lang.AssertionError`;
  #L145f8c.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L145f92.  throw v0;
}
procedure `java.util.Map` `a`(`com.b.a.b.a.g$a` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/a;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L145fa4.  call temp:= `f`(v5) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L145faa.  v1:= temp @kind object;
  #L145fac.  v0:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L145fb0.  if v1 != v0 then goto L145fbe;
  #L145fb4.  call `j`(v5) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L145fba.  v0:= 0I;
  #L145fbc.  return v0 @kind object;
  #L145fbe.  v0:= v4.`com.b.a.b.a.g$a.d` @type ^`com.b.a.b.h` @kind object;
  #L145fc2.  call temp:= `a`(v0) @signature `Lcom/b/a/b/h;.a:()Ljava/lang/Object;` @kind interface;
  #L145fc8.  v0:= temp @kind object;
  #L145fca.  v0:= (`java.util.Map`) v0 @kind object;
  #L145fce.  v2:= `@@com.b.a.d.b.a` @type ^`com.b.a.d.b` @kind object;
  #L145fd2.  if v1 != v2 then goto L146054;
  #L145fd6.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L145fdc.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L145fe2.  v1:= temp;
  #L145fe4.  if v1 == 0 then goto L14604c;
  #L145fe8.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L145fee.  v1:= v4.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L145ff2.  call temp:= `b`(v1, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L145ff8.  v1:= temp @kind object;
  #L145ffa.  v2:= v4.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L145ffe.  call temp:= `b`(v2, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L146004.  v2:= temp @kind object;
  #L146006.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14600c.  v2:= temp @kind object;
  #L14600e.  if v2 == 0 then goto L146044;
  #L146012.  v0:= new `com.b.a.t`;
  #L146016.  v2:= new `java.lang.StringBuilder`;
  #L14601a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L146020.  v3:= "duplicate key: " @kind object;
  #L146024.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14602a.  v2:= temp @kind object;
  #L14602c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L146032.  v1:= temp @kind object;
  #L146034.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14603a.  v1:= temp @kind object;
  #L14603c.  call `<init>`(v0, v1) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L146042.  throw v0;
  #L146044.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L14604a.  goto L145fdc;
  #L14604c.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L146052.  goto L145fbc;
  #L146054.  call `c`(v5) @signature `Lcom/b/a/d/a;.c:()V` @kind virtual;
  #L14605a.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L146060.  v1:= temp;
  #L146062.  if v1 == 0 then goto L1460c6;
  #L146066.  v1:= `@@com.b.a.b.e.a` @type ^`com.b.a.b.e` @kind object;
  #L14606a.  call `a`(v1, v5) @signature `Lcom/b/a/b/e;.a:(Lcom/b/a/d/a;)V` @kind virtual;
  #L146070.  v1:= v4.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L146074.  call temp:= `b`(v1, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L14607a.  v1:= temp @kind object;
  #L14607c.  v2:= v4.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L146080.  call temp:= `b`(v2, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L146086.  v2:= temp @kind object;
  #L146088.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14608e.  v2:= temp @kind object;
  #L146090.  if v2 == 0 then goto L14605a;
  #L146094.  v0:= new `com.b.a.t`;
  #L146098.  v2:= new `java.lang.StringBuilder`;
  #L14609c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1460a2.  v3:= "duplicate key: " @kind object;
  #L1460a6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1460ac.  v2:= temp @kind object;
  #L1460ae.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1460b4.  v1:= temp @kind object;
  #L1460b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1460bc.  v1:= temp @kind object;
  #L1460be.  call `<init>`(v0, v1) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1460c4.  throw v0;
  #L1460c6.  call `d`(v5) @signature `Lcom/b/a/d/a;.d:()V` @kind virtual;
  #L1460cc.  goto L145fbc;
}
procedure `void` `a`(`com.b.a.b.a.g$a` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1460e0.  v2:= (`java.util.Map`) v2 @kind object;
  #L1460e4.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/util/Map;)V` @kind virtual;
  #L1460ea.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.g$a` v8 @kind this, `com.b.a.d.c` v9 @kind object, `java.util.Map` v10 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1460fc.  v2:= 0I;
  #L1460fe.  if v10 != 0 then goto L14610a;
  #L146102.  call temp:= `f`(v9) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L146108.  return @kind void;
  #L14610a.  v0:= v8.`com.b.a.b.a.g$a.a` @type ^`com.b.a.b.a.g` @kind object;
  #L14610e.  v0:= v0.`com.b.a.b.a.g.a` @type ^`boolean` @kind boolean;
  #L146112.  if v0 != 0 then goto L146176;
  #L146116.  call temp:= `d`(v9) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L14611c.  call temp:= `entrySet`(v10) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L146122.  v0:= temp @kind object;
  #L146124.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L14612a.  v1:= temp @kind object;
  #L14612c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L146132.  v0:= temp;
  #L146134.  if v0 == 0 then goto L14616e;
  #L146138.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14613e.  v0:= temp @kind object;
  #L146140.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L146144.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L14614a.  v2:= temp @kind object;
  #L14614c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L146152.  v2:= temp @kind object;
  #L146154.  call temp:= `a`(v9, v2) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L14615a.  v2:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L14615e.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L146164.  v0:= temp @kind object;
  #L146166.  call `a`(v2, v9, v0) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L14616c.  goto L14612c;
  #L14616e.  call temp:= `e`(v9) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L146174.  goto L146108;
  #L146176.  v3:= new `java.util.ArrayList`;
  #L14617a.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L146180.  v0:= temp;
  #L146182.  call `<init>`(v3, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L146188.  v4:= new `java.util.ArrayList`;
  #L14618c.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L146192.  v0:= temp;
  #L146194.  call `<init>`(v4, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L14619a.  call temp:= `entrySet`(v10) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L1461a0.  v0:= temp @kind object;
  #L1461a2.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1461a8.  v5:= temp @kind object;
  #L1461aa.  v1:= v2;
  #L1461ac.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1461b2.  v0:= temp;
  #L1461b4.  if v0 == 0 then goto L146210;
  #L1461b8.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1461be.  v0:= temp @kind object;
  #L1461c0.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L1461c4.  v6:= v8.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L1461c8.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1461ce.  v7:= temp @kind object;
  #L1461d0.  call temp:= `a`(v6, v7) @signature `Lcom/b/a/v;.a:(Ljava/lang/Object;)Lcom/b/a/l;` @kind virtual;
  #L1461d6.  v6:= temp @kind object;
  #L1461d8.  call temp:= `add`(v3, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1461de.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1461e4.  v0:= temp @kind object;
  #L1461e6.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1461ec.  call temp:= `g`(v6) @signature `Lcom/b/a/l;.g:()Z` @kind virtual;
  #L1461f2.  v0:= temp;
  #L1461f4.  if v0 != 0 then goto L146204;
  #L1461f8.  call temp:= `h`(v6) @signature `Lcom/b/a/l;.h:()Z` @kind virtual;
  #L1461fe.  v0:= temp;
  #L146200.  if v0 == 0 then goto L14620c;
  #L146204.  v0:= 1I;
  #L146206.  v0:= v0 ^| v1 @kind int;
  #L146208.  v1:= v0;
  #L14620a.  goto L1461ac;
  #L14620c.  v0:= v2;
  #L14620e.  goto L146206;
  #L146210.  if v1 == 0 then goto L146266;
  #L146214.  call temp:= `b`(v9) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L14621a.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L146220.  v0:= temp;
  #L146222.  if v2 >= v0 then goto L14625c;
  #L146226.  call temp:= `b`(v9) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L14622c.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L146232.  v0:= temp @kind object;
  #L146234.  v0:= (`com.b.a.l`) v0 @kind object;
  #L146238.  call `a`(v0, v9) @signature `Lcom/b/a/b/j;.a:(Lcom/b/a/l;Lcom/b/a/d/c;)V` @kind static;
  #L14623e.  v0:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L146242.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L146248.  v1:= temp @kind object;
  #L14624a.  call `a`(v0, v9, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L146250.  call temp:= `c`(v9) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L146256.  v2:= v2 + 1;
  #L14625a.  goto L14621a;
  #L14625c.  call temp:= `c`(v9) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L146262.  goto L146108;
  #L146266.  call temp:= `d`(v9) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L14626c.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L146272.  v0:= temp;
  #L146274.  if v2 >= v0 then goto L1462aa;
  #L146278.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14627e.  v0:= temp @kind object;
  #L146280.  v0:= (`com.b.a.l`) v0 @kind object;
  #L146284.  call temp:= `a`(v8, v0) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/l;)Ljava/lang/String;` @kind direct;
  #L14628a.  v0:= temp @kind object;
  #L14628c.  call temp:= `a`(v9, v0) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L146292.  v0:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L146296.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14629c.  v1:= temp @kind object;
  #L14629e.  call `a`(v0, v9, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1462a4.  v2:= v2 + 1;
  #L1462a8.  goto L14626c;
  #L1462aa.  call temp:= `e`(v9) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L1462b0.  goto L146108;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.g$a` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/g$a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1462c4.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/a;)Ljava/util/Map;` @kind virtual;
  #L1462ca.  v0:= temp @kind object;
  #L1462cc.  return v0 @kind object;
}

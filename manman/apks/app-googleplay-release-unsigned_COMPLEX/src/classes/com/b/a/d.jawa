record `com.b.a.d` @kind class @AccessFlag PUBLIC_ABSTRACT_ENUM extends `java.lang.Enum` @kind class, `com.b.a.e` @kind interface {
}
global `com.b.a.d` `@@com.b.a.d.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.b.a.d` `@@com.b.a.d.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.b.a.d` `@@com.b.a.d.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.b.a.d` `@@com.b.a.d.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.b.a.d` `@@com.b.a.d.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.b.a.d`[] `@@com.b.a.d.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/b/a/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L14cc04.  v6:= 4I;
  #L14cc06.  v5:= 3I;
  #L14cc08.  v4:= 2I;
  #L14cc0a.  v3:= 1I;
  #L14cc0c.  v2:= 0I;
  #L14cc0e.  v0:= new `com.b.a.d$1`;
  #L14cc12.  v1:= "IDENTITY" @kind object;
  #L14cc16.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/d$1;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14cc1c.  `@@com.b.a.d.a` @type ^`com.b.a.d` := v0 @kind object;
  #L14cc20.  v0:= new `com.b.a.d$2`;
  #L14cc24.  v1:= "UPPER_CAMEL_CASE" @kind object;
  #L14cc28.  call `<init>`(v0, v1, v3) @signature `Lcom/b/a/d$2;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14cc2e.  `@@com.b.a.d.b` @type ^`com.b.a.d` := v0 @kind object;
  #L14cc32.  v0:= new `com.b.a.d$3`;
  #L14cc36.  v1:= "UPPER_CAMEL_CASE_WITH_SPACES" @kind object;
  #L14cc3a.  call `<init>`(v0, v1, v4) @signature `Lcom/b/a/d$3;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14cc40.  `@@com.b.a.d.c` @type ^`com.b.a.d` := v0 @kind object;
  #L14cc44.  v0:= new `com.b.a.d$4`;
  #L14cc48.  v1:= "LOWER_CASE_WITH_UNDERSCORES" @kind object;
  #L14cc4c.  call `<init>`(v0, v1, v5) @signature `Lcom/b/a/d$4;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14cc52.  `@@com.b.a.d.d` @type ^`com.b.a.d` := v0 @kind object;
  #L14cc56.  v0:= new `com.b.a.d$5`;
  #L14cc5a.  v1:= "LOWER_CASE_WITH_DASHES" @kind object;
  #L14cc5e.  call `<init>`(v0, v1, v6) @signature `Lcom/b/a/d$5;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14cc64.  `@@com.b.a.d.e` @type ^`com.b.a.d` := v0 @kind object;
  #L14cc68.  v0:= 5I;
  #L14cc6a.  v0:= new `com.b.a.d`[v0];
  #L14cc6e.  v1:= `@@com.b.a.d.a` @type ^`com.b.a.d` @kind object;
  #L14cc72.  v0[v2]:= v1 @kind object;
  #L14cc76.  v1:= `@@com.b.a.d.b` @type ^`com.b.a.d` @kind object;
  #L14cc7a.  v0[v3]:= v1 @kind object;
  #L14cc7e.  v1:= `@@com.b.a.d.c` @type ^`com.b.a.d` @kind object;
  #L14cc82.  v0[v4]:= v1 @kind object;
  #L14cc86.  v1:= `@@com.b.a.d.d` @type ^`com.b.a.d` @kind object;
  #L14cc8a.  v0[v5]:= v1 @kind object;
  #L14cc8e.  v1:= `@@com.b.a.d.e` @type ^`com.b.a.d` @kind object;
  #L14cc92.  v0[v6]:= v1 @kind object;
  #L14cc96.  `@@com.b.a.d.f` @type ^`com.b.a.d`[] := v0 @kind object;
  #L14cc9a.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.d` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/b/a/d;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L14ccac.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14ccb2.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.d` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `com.b.a.d$1` v3 @kind object) @signature `Lcom/b/a/d;.<init>:(Ljava/lang/String;ILcom/b/a/d$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L14ccc4.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14ccca.  return @kind void;
}
procedure `java.lang.String` `a`(`char` v2 , `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lcom/b/a/d;.a:(CLjava/lang/String;I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L14ccdc.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14cce2.  v0:= temp;
  #L14cce4.  if v4 >= v0 then goto L14cd14;
  #L14cce8.  v0:= new `java.lang.StringBuilder`;
  #L14ccec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14ccf2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ccf8.  v0:= temp @kind object;
  #L14ccfa.  call temp:= `substring`(v3, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L14cd00.  v1:= temp @kind object;
  #L14cd02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14cd08.  v0:= temp @kind object;
  #L14cd0a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14cd10.  v0:= temp @kind object;
  #L14cd12.  return v0 @kind object;
  #L14cd14.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L14cd1a.  v0:= temp @kind object;
  #L14cd1c.  goto L14cd12;
}
procedure `java.lang.String` `a`(`java.lang.String` v4 @kind object) @signature `Lcom/b/a/d;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14cd30.  v2:= new `java.lang.StringBuilder`;
  #L14cd34.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14cd3a.  v1:= 0I;
  #L14cd3c.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14cd42.  v0:= temp;
  #L14cd44.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14cd4a.  v3:= temp;
  #L14cd4c.  v3:= v3 + -1;
  #L14cd50.  if v1 >= v3 then goto L14cd60;
  #L14cd54.  call temp:= `isLetter`(v0) @signature `Ljava/lang/Character;.isLetter:(C)Z` @kind static;
  #L14cd5a.  v3:= temp;
  #L14cd5c.  if v3 == 0 then goto L14cd76;
  #L14cd60.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14cd66.  v3:= temp;
  #L14cd68.  if v1 != v3 then goto L14cd8a;
  #L14cd6c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14cd72.  v4:= temp @kind object;
  #L14cd74.  return v4 @kind object;
  #L14cd76.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14cd7c.  v1:= v1 + 1;
  #L14cd80.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14cd86.  v0:= temp;
  #L14cd88.  goto L14cd44;
  #L14cd8a.  call temp:= `isUpperCase`(v0) @signature `Ljava/lang/Character;.isUpperCase:(C)Z` @kind static;
  #L14cd90.  v3:= temp;
  #L14cd92.  if v3 != 0 then goto L14cd74;
  #L14cd96.  call temp:= `toUpperCase`(v0) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L14cd9c.  v0:= temp;
  #L14cd9e.  v1:= v1 + 1;
  #L14cda2.  call temp:= `a`(v0, v4, v1) @signature `Lcom/b/a/d;.a:(CLjava/lang/String;I)Ljava/lang/String;` @kind static;
  #L14cda8.  v0:= temp @kind object;
  #L14cdaa.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14cdb0.  v0:= temp @kind object;
  #L14cdb2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14cdb8.  v4:= temp @kind object;
  #L14cdba.  goto L14cd74;
}
procedure `java.lang.String` `a`(`java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/b/a/d;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14cdcc.  v1:= new `java.lang.StringBuilder`;
  #L14cdd0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14cdd6.  v0:= 0I;
  #L14cdd8.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14cdde.  v2:= temp;
  #L14cde0.  if v0 >= v2 then goto L14ce16;
  #L14cde4.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14cdea.  v2:= temp;
  #L14cdec.  call temp:= `isUpperCase`(v2) @signature `Ljava/lang/Character;.isUpperCase:(C)Z` @kind static;
  #L14cdf2.  v3:= temp;
  #L14cdf4.  if v3 == 0 then goto L14ce0a;
  #L14cdf8.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L14cdfe.  v3:= temp;
  #L14ce00.  if v3 == 0 then goto L14ce0a;
  #L14ce04.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ce0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ce10.  v0:= v0 + 1;
  #L14ce14.  goto L14cdd8;
  #L14ce16.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14ce1c.  v0:= temp @kind object;
  #L14ce1e.  return v0 @kind object;
}
procedure `com.b.a.d` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/b/a/d;.valueOf:(Ljava/lang/String;)Lcom/b/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14ce30.  v0:= constclass @type ^`com.b.a.d` @kind object;
  #L14ce34.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L14ce3a.  v0:= temp @kind object;
  #L14ce3c.  v0:= (`com.b.a.d`) v0 @kind object;
  #L14ce40.  return v0 @kind object;
}
procedure `com.b.a.d`[] `values`() @signature `Lcom/b/a/d;.values:()[Lcom/b/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14ce54.  v0:= `@@com.b.a.d.f` @type ^`com.b.a.d`[] @kind object;
  #L14ce58.  call temp:= `clone`(v0) @signature `[Lcom/b/a/d;.clone:()Ljava/lang/Object;` @kind virtual;
  #L14ce5e.  v0:= temp @kind object;
  #L14ce60.  v0:= (`com.b.a.d`[]) v0 @kind object;
  #L14ce64.  return v0 @kind object;
}

record `com.b.a.b.a.n$2` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$2` v0 @kind this) @signature `Lcom/b/a/b/a/n$2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L148a0c.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L148a12.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicIntegerArray` `a`(`com.b.a.b.a.n$2` v5 @kind this, `com.b.a.d.a` v6 @kind object) @signature `Lcom/b/a/b/a/n$2;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicIntegerArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L148a24.  v2:= new `java.util.ArrayList`;
  #L148a28.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L148a2e.  call `a`(v6) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L148a34.  call temp:= `e`(v6) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L148a3a.  v0:= temp;
  #L148a3c.  if v0 == 0 then goto L148a66;
  #Try_start0.  
  #L148a40.  call temp:= `m`(v6) @signature `Lcom/b/a/d/a;.m:()I` @kind virtual;
  #L148a46.  v0:= temp;
  #L148a48.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L148a4e.  v0:= temp @kind object;
  #L148a50.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L148a56.  goto L148a34;
  #L148a58.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L148a5a.  v1:= new `com.b.a.t`;
  #L148a5e.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L148a64.  throw v1;
  #L148a66.  call `b`(v6) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L148a6c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L148a72.  v3:= temp;
  #L148a74.  v4:= new `java.util.concurrent.atomic.AtomicIntegerArray`;
  #L148a78.  call `<init>`(v4, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerArray;.<init>:(I)V` @kind direct;
  #L148a7e.  v0:= 0I;
  #L148a80.  v1:= v0;
  #L148a82.  if v1 >= v3 then goto L148aa8;
  #L148a86.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L148a8c.  v0:= temp @kind object;
  #L148a8e.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L148a92.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L148a98.  v0:= temp;
  #L148a9a.  call `set`(v4, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicIntegerArray;.set:(II)V` @kind virtual;
  #L148aa0.  v0:= v1 + 1;
  #L148aa4.  v1:= v0;
  #L148aa6.  goto L148a82;
  #L148aa8.  return v4 @kind object;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L148a58;
}
procedure `void` `a`(`com.b.a.b.a.n$2` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$2;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L148acc.  v2:= (`java.util.concurrent.atomic.AtomicIntegerArray`) v2 @kind object;
  #L148ad0.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$2;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicIntegerArray;)V` @kind virtual;
  #L148ad6.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$2` v4 @kind this, `com.b.a.d.c` v5 @kind object, `java.util.concurrent.atomic.AtomicIntegerArray` v6 @kind object) @signature `Lcom/b/a/b/a/n$2;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicIntegerArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L148ae8.  call temp:= `b`(v5) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L148aee.  v0:= 0I;
  #L148af0.  call temp:= `length`(v6) @signature `Ljava/util/concurrent/atomic/AtomicIntegerArray;.length:()I` @kind virtual;
  #L148af6.  v1:= temp;
  #L148af8.  if v0 >= v1 then goto L148b12;
  #L148afc.  call temp:= `get`(v6, v0) @signature `Ljava/util/concurrent/atomic/AtomicIntegerArray;.get:(I)I` @kind virtual;
  #L148b02.  v2:= temp;
  #L148b04.  v2:= (`long`) v2 @kind i2l;
  #L148b06.  call temp:= `a`(v5, v2) @signature `Lcom/b/a/d/c;.a:(J)Lcom/b/a/d/c;` @kind virtual;
  #L148b0c.  v0:= v0 + 1;
  #L148b10.  goto L148af8;
  #L148b12.  call temp:= `c`(v5) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L148b18.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$2` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$2;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L148b2c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$2;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicIntegerArray;` @kind virtual;
  #L148b32.  v0:= temp @kind object;
  #L148b34.  return v0 @kind object;
}

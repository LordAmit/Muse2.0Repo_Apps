record `com.b.a.b.a.g` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.w` @kind interface {
  `boolean` `com.b.a.b.a.g.a` @AccessFlag FINAL;
  `com.b.a.b.c` `com.b.a.b.a.g.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.g` v0 @kind this, `com.b.a.b.c` v1 @kind object, `boolean` v2 ) @signature `Lcom/b/a/b/a/g;.<init>:(Lcom/b/a/b/c;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1462e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1462e6.  v0.`com.b.a.b.a.g.b` @type ^`com.b.a.b.c` := v1 @kind object;
  #L1462ea.  v0.`com.b.a.b.a.g.a` @type ^`boolean` := v2 @kind boolean;
  #L1462ee.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.g` v1 @kind this, `com.b.a.f` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/b/a/g;.a:(Lcom/b/a/f;Ljava/lang/reflect/Type;)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L146300.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L146304.  if v3 == v0 then goto L146310;
  #L146308.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L14630c.  if v3 != v0 then goto L146316;
  #L146310.  v0:= `@@com.b.a.b.a.n.f` @type ^`com.b.a.v` @kind object;
  #L146314.  return v0 @kind object;
  #L146316.  call temp:= `a`(v3) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L14631c.  v0:= temp @kind object;
  #L14631e.  call temp:= `a`(v2, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L146324.  v0:= temp @kind object;
  #L146326.  goto L146314;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.g` v8 @kind this, `com.b.a.f` v9 @kind object, `com.b.a.c.a` v10 @kind object) @signature `Lcom/b/a/b/a/g;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L146338.  v5:= 1I;
  #L14633a.  v3:= 0I;
  #L14633c.  call temp:= `b`(v10) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L146342.  v0:= temp @kind object;
  #L146344.  call temp:= `a`(v10) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L14634a.  v1:= temp @kind object;
  #L14634c.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L146350.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L146356.  v1:= temp;
  #L146358.  if v1 != 0 then goto L146360;
  #L14635c.  v0:= 0I;
  #L14635e.  return v0 @kind object;
  #L146360.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L146366.  v1:= temp @kind object;
  #L146368.  call temp:= `b`(v0, v1) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)[Ljava/lang/reflect/Type;` @kind static;
  #L14636e.  v1:= temp @kind object;
  #L146370.  v0:= v1[v3] @kind object;
  #L146374.  call temp:= `a`(v8, v9, v0) @signature `Lcom/b/a/b/a/g;.a:(Lcom/b/a/f;Ljava/lang/reflect/Type;)Lcom/b/a/v;` @kind direct;
  #L14637a.  v4:= temp @kind object;
  #L14637c.  v0:= v1[v5] @kind object;
  #L146380.  call temp:= `a`(v0) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L146386.  v0:= temp @kind object;
  #L146388.  call temp:= `a`(v9, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L14638e.  v6:= temp @kind object;
  #L146390.  v0:= v8.`com.b.a.b.a.g.b` @type ^`com.b.a.b.c` @kind object;
  #L146394.  call temp:= `a`(v0, v10) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @kind virtual;
  #L14639a.  v7:= temp @kind object;
  #L14639c.  v0:= new `com.b.a.b.a.g$a`;
  #L1463a0.  v3:= v1[v3] @kind object;
  #L1463a4.  v5:= v1[v5] @kind object;
  #L1463a8.  v1:= v8 @kind object;
  #L1463aa.  v2:= v9 @kind object;
  #L1463ac.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/b/a/b/a/g$a;.<init>:(Lcom/b/a/b/a/g;Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @kind direct;
  #L1463b2.  goto L14635e;
}

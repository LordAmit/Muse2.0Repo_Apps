record `com.b.a.g` @kind class @AccessFlag PUBLIC_FINAL {
  `com.b.a.b.d` `com.b.a.g.a` @AccessFlag PRIVATE;
  `com.b.a.u` `com.b.a.g.b` @AccessFlag PRIVATE;
  `com.b.a.e` `com.b.a.g.c` @AccessFlag PRIVATE;
  `java.util.Map` `com.b.a.g.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.b.a.g.e` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.b.a.g.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.g.g` @AccessFlag PRIVATE;
  `java.lang.String` `com.b.a.g.h` @AccessFlag PRIVATE;
  `int` `com.b.a.g.i` @AccessFlag PRIVATE;
  `int` `com.b.a.g.j` @AccessFlag PRIVATE;
  `boolean` `com.b.a.g.k` @AccessFlag PRIVATE;
  `boolean` `com.b.a.g.l` @AccessFlag PRIVATE;
  `boolean` `com.b.a.g.m` @AccessFlag PRIVATE;
  `boolean` `com.b.a.g.n` @AccessFlag PRIVATE;
  `boolean` `com.b.a.g.o` @AccessFlag PRIVATE;
  `boolean` `com.b.a.g.p` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.b.a.g` v3 @kind this) @signature `Lcom/b/a/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L14dfcc.  v2:= 2I;
  #L14dfce.  v1:= 0I;
  #L14dfd0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14dfd6.  v0:= `@@com.b.a.b.d.a` @type ^`com.b.a.b.d` @kind object;
  #L14dfda.  v3.`com.b.a.g.a` @type ^`com.b.a.b.d` := v0 @kind object;
  #L14dfde.  v0:= `@@com.b.a.u.a` @type ^`com.b.a.u` @kind object;
  #L14dfe2.  v3.`com.b.a.g.b` @type ^`com.b.a.u` := v0 @kind object;
  #L14dfe6.  v0:= `@@com.b.a.d.a` @type ^`com.b.a.d` @kind object;
  #L14dfea.  v3.`com.b.a.g.c` @type ^`com.b.a.e` := v0 @kind object;
  #L14dfee.  v0:= new `java.util.HashMap`;
  #L14dff2.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L14dff8.  v3.`com.b.a.g.d` @type ^`java.util.Map` := v0 @kind object;
  #L14dffc.  v0:= new `java.util.ArrayList`;
  #L14e000.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L14e006.  v3.`com.b.a.g.e` @type ^`java.util.List` := v0 @kind object;
  #L14e00a.  v0:= new `java.util.ArrayList`;
  #L14e00e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L14e014.  v3.`com.b.a.g.f` @type ^`java.util.List` := v0 @kind object;
  #L14e018.  v3.`com.b.a.g.g` @type ^`boolean` := v1 @kind boolean;
  #L14e01c.  v3.`com.b.a.g.i` @type ^`int` := v2;
  #L14e020.  v3.`com.b.a.g.j` @type ^`int` := v2;
  #L14e024.  v3.`com.b.a.g.k` @type ^`boolean` := v1 @kind boolean;
  #L14e028.  v3.`com.b.a.g.l` @type ^`boolean` := v1 @kind boolean;
  #L14e02c.  v0:= 1I;
  #L14e02e.  v3.`com.b.a.g.m` @type ^`boolean` := v0 @kind boolean;
  #L14e032.  v3.`com.b.a.g.n` @type ^`boolean` := v1 @kind boolean;
  #L14e036.  v3.`com.b.a.g.o` @type ^`boolean` := v1 @kind boolean;
  #L14e03a.  v3.`com.b.a.g.p` @type ^`boolean` := v1 @kind boolean;
  #L14e03e.  return @kind void;
}
procedure `void` `a`(`com.b.a.g` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 , `java.util.List` v7 @kind object) @signature `Lcom/b/a/g;.a:(Ljava/lang/String;IILjava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L14e050.  v2:= 2I;
  #L14e052.  if v4 == 0 then goto L14e0c8;
  #L14e056.  v0:= "" @kind object;
  #L14e05a.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L14e060.  v1:= temp @kind object;
  #L14e062.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14e068.  v0:= temp;
  #L14e06a.  if v0 != 0 then goto L14e0c8;
  #L14e06e.  v0:= new `com.b.a.a`;
  #L14e072.  call `<init>`(v0, v4) @signature `Lcom/b/a/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14e078.  v1:= constclass @type ^`java.util.Date` @kind object;
  #L14e07c.  call temp:= `b`(v1) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @kind static;
  #L14e082.  v1:= temp @kind object;
  #L14e084.  call temp:= `a`(v1, v0) @signature `Lcom/b/a/b/a/l;.a:(Lcom/b/a/c/a;Ljava/lang/Object;)Lcom/b/a/w;` @kind static;
  #L14e08a.  v1:= temp @kind object;
  #L14e08c.  call temp:= `add`(v7, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14e092.  v1:= constclass @type ^`java.sql.Timestamp` @kind object;
  #L14e096.  call temp:= `b`(v1) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @kind static;
  #L14e09c.  v1:= temp @kind object;
  #L14e09e.  call temp:= `a`(v1, v0) @signature `Lcom/b/a/b/a/l;.a:(Lcom/b/a/c/a;Ljava/lang/Object;)Lcom/b/a/w;` @kind static;
  #L14e0a4.  v1:= temp @kind object;
  #L14e0a6.  call temp:= `add`(v7, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14e0ac.  v1:= constclass @type ^`java.sql.Date` @kind object;
  #L14e0b0.  call temp:= `b`(v1) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @kind static;
  #L14e0b6.  v1:= temp @kind object;
  #L14e0b8.  call temp:= `a`(v1, v0) @signature `Lcom/b/a/b/a/l;.a:(Lcom/b/a/c/a;Ljava/lang/Object;)Lcom/b/a/w;` @kind static;
  #L14e0be.  v0:= temp @kind object;
  #L14e0c0.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14e0c6.  return @kind void;
  #L14e0c8.  if v5 == v2 then goto L14e0c6;
  #L14e0cc.  if v6 == v2 then goto L14e0c6;
  #L14e0d0.  v0:= new `com.b.a.a`;
  #L14e0d4.  call `<init>`(v0, v5, v6) @signature `Lcom/b/a/a;.<init>:(II)V` @kind direct;
  #L14e0da.  goto L14e078;
}
procedure `com.b.a.f` `a`(`com.b.a.g` v13 @kind this) @signature `Lcom/b/a/g;.a:()Lcom/b/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L14e0ec.  v12:= new `java.util.ArrayList`;
  #L14e0f0.  call `<init>`(v12) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L14e0f6.  v0:= v13.`com.b.a.g.e` @type ^`java.util.List` @kind object;
  #L14e0fa.  call temp:= `addAll`(v12, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L14e100.  call `reverse`(v12) @signature `Ljava/util/Collections;.reverse:(Ljava/util/List;)V` @kind static;
  #L14e106.  v0:= v13.`com.b.a.g.f` @type ^`java.util.List` @kind object;
  #L14e10a.  call temp:= `addAll`(v12, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L14e110.  v0:= v13.`com.b.a.g.h` @type ^`java.lang.String` @kind object;
  #L14e114.  v1:= v13.`com.b.a.g.i` @type ^`int`;
  #L14e118.  v2:= v13.`com.b.a.g.j` @type ^`int`;
  #L14e11c.  call `a`(v13, v0, v1, v2, v12) @signature `Lcom/b/a/g;.a:(Ljava/lang/String;IILjava/util/List;)V` @kind direct;
  #L14e122.  v0:= new `com.b.a.f`;
  #L14e126.  v1:= v13.`com.b.a.g.a` @type ^`com.b.a.b.d` @kind object;
  #L14e12a.  v2:= v13.`com.b.a.g.c` @type ^`com.b.a.e` @kind object;
  #L14e12e.  v3:= v13.`com.b.a.g.d` @type ^`java.util.Map` @kind object;
  #L14e132.  v4:= v13.`com.b.a.g.g` @type ^`boolean` @kind boolean;
  #L14e136.  v5:= v13.`com.b.a.g.k` @type ^`boolean` @kind boolean;
  #L14e13a.  v6:= v13.`com.b.a.g.o` @type ^`boolean` @kind boolean;
  #L14e13e.  v7:= v13.`com.b.a.g.m` @type ^`boolean` @kind boolean;
  #L14e142.  v8:= v13.`com.b.a.g.n` @type ^`boolean` @kind boolean;
  #L14e146.  v9:= v13.`com.b.a.g.p` @type ^`boolean` @kind boolean;
  #L14e14a.  v10:= v13.`com.b.a.g.l` @type ^`boolean` @kind boolean;
  #L14e14e.  v11:= v13.`com.b.a.g.b` @type ^`com.b.a.u` @kind object;
  #L14e152.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/b/a/f;.<init>:(Lcom/b/a/b/d;Lcom/b/a/e;Ljava/util/Map;ZZZZZZZLcom/b/a/u;Ljava/util/List;)V` @kind direct;
  #L14e158.  return v0 @kind object;
}
procedure `com.b.a.g` `a`(`com.b.a.g` v0 @kind this, `com.b.a.d` v1 @kind object) @signature `Lcom/b/a/g;.a:(Lcom/b/a/d;)Lcom/b/a/g;` @AccessFlag PUBLIC {
    temp;

  #L14e16c.  v0.`com.b.a.g.c` @type ^`com.b.a.e` := v1 @kind object;
  #L14e170.  return v0 @kind object;
}

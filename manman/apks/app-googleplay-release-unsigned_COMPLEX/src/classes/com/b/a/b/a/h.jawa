record `com.b.a.b.a.h` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.b.a.h.b` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.w` `@@com.b.a.b.a.h.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L146518.  v0:= new `com.b.a.b.a.h$1`;
  #L14651c.  call `<init>`(v0) @signature `Lcom/b/a/b/a/h$1;.<init>:()V` @kind direct;
  #L146522.  `@@com.b.a.b.a.h.a` @type ^`com.b.a.w` := v0 @kind object;
  #L146526.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.b.a.h` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/b/a/h;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L146538.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L14653e.  v0.`com.b.a.b.a.h.b` @type ^`com.b.a.f` := v1 @kind object;
  #L146542.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.h` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/a/h;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L146554.  if v4 != 0 then goto L146560;
  #L146558.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L14655e.  return @kind void;
  #L146560.  v0:= v2.`com.b.a.b.a.h.b` @type ^`com.b.a.f` @kind object;
  #L146564.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14656a.  v1:= temp @kind object;
  #L14656c.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/f;.a:(Ljava/lang/Class;)Lcom/b/a/v;` @kind virtual;
  #L146572.  v0:= temp @kind object;
  #L146574.  v1:= instanceof @variable v0 @type ^`com.b.a.b.a.h` @kind boolean;
  #L146578.  if v1 == 0 then goto L14658a;
  #L14657c.  call temp:= `d`(v3) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L146582.  call temp:= `e`(v3) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L146588.  goto L14655e;
  #L14658a.  call `a`(v0, v3, v4) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L146590.  goto L14655e;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.h` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1465a4.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1465aa.  v0:= temp @kind object;
  #L1465ac.  v1:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L1465b0.  call temp:= `ordinal`(v0) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L1465b6.  v0:= temp;
  #L1465b8.  v0:= v1[v0];
  #L1465bc.  goto L146678;
  #L1465c2.  v0:= new `java.lang.IllegalStateException`;
  #L1465c6.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L1465cc.  throw v0;
  #L1465ce.  v0:= new `java.util.ArrayList`;
  #L1465d2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1465d8.  call `a`(v4) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L1465de.  call temp:= `e`(v4) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L1465e4.  v1:= temp;
  #L1465e6.  if v1 == 0 then goto L1465fa;
  #L1465ea.  call temp:= `b`(v3, v4) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L1465f0.  v1:= temp @kind object;
  #L1465f2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1465f8.  goto L1465de;
  #L1465fa.  call `b`(v4) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L146600.  return v0 @kind object;
  #L146602.  v0:= new `com.b.a.b.g`;
  #L146606.  call `<init>`(v0) @signature `Lcom/b/a/b/g;.<init>:()V` @kind direct;
  #L14660c.  call `c`(v4) @signature `Lcom/b/a/d/a;.c:()V` @kind virtual;
  #L146612.  call temp:= `e`(v4) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L146618.  v1:= temp;
  #L14661a.  if v1 == 0 then goto L146636;
  #L14661e.  call temp:= `g`(v4) @signature `Lcom/b/a/d/a;.g:()Ljava/lang/String;` @kind virtual;
  #L146624.  v1:= temp @kind object;
  #L146626.  call temp:= `b`(v3, v4) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L14662c.  v2:= temp @kind object;
  #L14662e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L146634.  goto L146612;
  #L146636.  call `d`(v4) @signature `Lcom/b/a/d/a;.d:()V` @kind virtual;
  #L14663c.  goto L146600;
  #L14663e.  call temp:= `h`(v4) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L146644.  v0:= temp @kind object;
  #L146646.  goto L146600;
  #L146648.  call temp:= `k`(v4) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L14664e.  v0:= temp @kind wide;
  #L146650.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L146656.  v0:= temp @kind object;
  #L146658.  goto L146600;
  #L14665a.  call temp:= `i`(v4) @signature `Lcom/b/a/d/a;.i:()Z` @kind virtual;
  #L146660.  v0:= temp;
  #L146662.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L146668.  v0:= temp @kind object;
  #L14666a.  goto L146600;
  #L14666c.  call `j`(v4) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L146672.  v0:= 0I;
  #L146674.  goto L146600;
  #L146676.  
  #L146678.  switch v0
                  | 1 => goto L1465ce
                  | 2 => goto L146602
                  | 3 => goto L14663e
                  | 4 => goto L146648
                  | 5 => goto L14665a
                  | 6 => goto L14666c
                  | else => goto L1465c2;
}

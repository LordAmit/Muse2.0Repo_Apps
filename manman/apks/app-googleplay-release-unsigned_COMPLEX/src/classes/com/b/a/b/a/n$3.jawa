record `com.b.a.b.a.n$3` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$3` v0 @kind this) @signature `Lcom/b/a/b/a/n$3;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L148f98.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L148f9e.  return @kind void;
}
procedure `java.lang.Number` `a`(`com.b.a.b.a.n$3` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/b/a/n$3;.a:(Lcom/b/a/d/a;)Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148fb0.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L148fb6.  v0:= temp @kind object;
  #L148fb8.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L148fbc.  if v0 != v1 then goto L148fca;
  #L148fc0.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L148fc6.  v0:= 0I;
  #L148fc8.  return v0 @kind object;
  #Try_start0.  
  #L148fca.  call temp:= `l`(v3) @signature `Lcom/b/a/d/a;.l:()J` @kind virtual;
  #L148fd0.  v0:= temp @kind wide;
  #L148fd2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #Try_end0.  
  #L148fd8.  v0:= temp @kind object;
  #L148fda.  goto L148fc8;
  #L148fdc.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L148fde.  v1:= new `com.b.a.t`;
  #L148fe2.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L148fe8.  throw v1;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L148fdc;
}
procedure `void` `a`(`com.b.a.b.a.n$3` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Number` v2 @kind object) @signature `Lcom/b/a/b/a/n$3;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;

  #L14900c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/Number;)Lcom/b/a/d/c;` @kind virtual;
  #L149012.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$3` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$3;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L149024.  v2:= (`java.lang.Number`) v2 @kind object;
  #L149028.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$3;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @kind virtual;
  #L14902e.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$3` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$3;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L149040.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$3;.a:(Lcom/b/a/d/a;)Ljava/lang/Number;` @kind virtual;
  #L149046.  v0:= temp @kind object;
  #L149048.  return v0 @kind object;
}

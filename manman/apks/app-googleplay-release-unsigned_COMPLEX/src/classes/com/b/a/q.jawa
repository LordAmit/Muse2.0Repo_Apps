record `com.b.a.q` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.l` @kind class {
  `java.lang.Object` `com.b.a.q.b` @AccessFlag PRIVATE;
}
global `java.lang.Class`[] `@@com.b.a.q.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L14e894.  v0:= 16I;
  #L14e898.  v0:= new `java.lang.Class`[v0];
  #L14e89c.  v1:= 0I;
  #L14e89e.  v2:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L14e8a2.  v0[v1]:= v2 @kind object;
  #L14e8a6.  v1:= 1I;
  #L14e8a8.  v2:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L14e8ac.  v0[v1]:= v2 @kind object;
  #L14e8b0.  v1:= 2I;
  #L14e8b2.  v2:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L14e8b6.  v0[v1]:= v2 @kind object;
  #L14e8ba.  v1:= 3I;
  #L14e8bc.  v2:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L14e8c0.  v0[v1]:= v2 @kind object;
  #L14e8c4.  v1:= 4I;
  #L14e8c6.  v2:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L14e8ca.  v0[v1]:= v2 @kind object;
  #L14e8ce.  v1:= 5I;
  #L14e8d0.  v2:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L14e8d4.  v0[v1]:= v2 @kind object;
  #L14e8d8.  v1:= 6I;
  #L14e8da.  v2:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L14e8de.  v0[v1]:= v2 @kind object;
  #L14e8e2.  v1:= 7I;
  #L14e8e4.  v2:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L14e8e8.  v0[v1]:= v2 @kind object;
  #L14e8ec.  v1:= 8I;
  #L14e8f0.  v2:= constclass @type ^`java.lang.Integer` @kind object;
  #L14e8f4.  v0[v1]:= v2 @kind object;
  #L14e8f8.  v1:= 9I;
  #L14e8fc.  v2:= constclass @type ^`java.lang.Long` @kind object;
  #L14e900.  v0[v1]:= v2 @kind object;
  #L14e904.  v1:= 10I;
  #L14e908.  v2:= constclass @type ^`java.lang.Short` @kind object;
  #L14e90c.  v0[v1]:= v2 @kind object;
  #L14e910.  v1:= 11I;
  #L14e914.  v2:= constclass @type ^`java.lang.Float` @kind object;
  #L14e918.  v0[v1]:= v2 @kind object;
  #L14e91c.  v1:= 12I;
  #L14e920.  v2:= constclass @type ^`java.lang.Double` @kind object;
  #L14e924.  v0[v1]:= v2 @kind object;
  #L14e928.  v1:= 13I;
  #L14e92c.  v2:= constclass @type ^`java.lang.Byte` @kind object;
  #L14e930.  v0[v1]:= v2 @kind object;
  #L14e934.  v1:= 14I;
  #L14e938.  v2:= constclass @type ^`java.lang.Boolean` @kind object;
  #L14e93c.  v0[v1]:= v2 @kind object;
  #L14e940.  v1:= 15I;
  #L14e944.  v2:= constclass @type ^`java.lang.Character` @kind object;
  #L14e948.  v0[v1]:= v2 @kind object;
  #L14e94c.  `@@com.b.a.q.a` @type ^`java.lang.Class`[] := v0 @kind object;
  #L14e950.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.Boolean` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/Boolean;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L14e964.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L14e96a.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L14e970.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L14e984.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L14e98a.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L14e990.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L14e9a4.  call `<init>`(v0) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L14e9aa.  call `a`(v0, v1) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L14e9b0.  return @kind void;
}
procedure `boolean` `a`(`com.b.a.q` v3 @kind object) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L14e9c4.  v1:= 0I;
  #L14e9c6.  v0:= v3.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14e9ca.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L14e9ce.  if v0 == 0 then goto L14ea0a;
  #L14e9d2.  v0:= v3.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14e9d6.  v0:= (`java.lang.Number`) v0 @kind object;
  #L14e9da.  v2:= instanceof @variable v0 @type ^`java.math.BigInteger` @kind boolean;
  #L14e9de.  if v2 != 0 then goto L14ea02;
  #L14e9e2.  v2:= instanceof @variable v0 @type ^`java.lang.Long` @kind boolean;
  #L14e9e6.  if v2 != 0 then goto L14ea02;
  #L14e9ea.  v2:= instanceof @variable v0 @type ^`java.lang.Integer` @kind boolean;
  #L14e9ee.  if v2 != 0 then goto L14ea02;
  #L14e9f2.  v2:= instanceof @variable v0 @type ^`java.lang.Short` @kind boolean;
  #L14e9f6.  if v2 != 0 then goto L14ea02;
  #L14e9fa.  v0:= instanceof @variable v0 @type ^`java.lang.Byte` @kind boolean;
  #L14e9fe.  if v0 == 0 then goto L14ea06;
  #L14ea02.  v0:= 1I;
  #L14ea04.  return v0;
  #L14ea06.  v0:= v1;
  #L14ea08.  goto L14ea04;
  #L14ea0a.  v0:= v1;
  #L14ea0c.  goto L14ea04;
}
procedure `boolean` `b`(`java.lang.Object` v7 @kind object) @signature `Lcom/b/a/q;.b:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L14ea20.  v0:= 1I;
  #L14ea22.  v1:= 0I;
  #L14ea24.  v2:= instanceof @variable v7 @type ^`java.lang.String` @kind boolean;
  #L14ea28.  if v2 == 0 then goto L14ea2e;
  #L14ea2c.  return v0;
  #L14ea2e.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14ea34.  v3:= temp @kind object;
  #L14ea36.  v4:= `@@com.b.a.q.a` @type ^`java.lang.Class`[] @kind object;
  #L14ea3a.  v5:= length @variable v4;
  #L14ea3c.  v2:= v1;
  #L14ea3e.  if v2 >= v5 then goto L14ea58;
  #L14ea42.  v6:= v4[v2] @kind object;
  #L14ea46.  call temp:= `isAssignableFrom`(v6, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14ea4c.  v6:= temp;
  #L14ea4e.  if v6 != 0 then goto L14ea2c;
  #L14ea52.  v2:= v2 + 1;
  #L14ea56.  goto L14ea3e;
  #L14ea58.  v0:= v1;
  #L14ea5a.  goto L14ea2c;
}
procedure `java.lang.Number` `a`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14ea6c.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ea70.  v0:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L14ea74.  if v0 == 0 then goto L14ea8e;
  #L14ea78.  v1:= new `com.b.a.b.f`;
  #L14ea7c.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ea80.  v0:= (`java.lang.String`) v0 @kind object;
  #L14ea84.  call `<init>`(v1, v0) @signature `Lcom/b/a/b/f;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14ea8a.  v0:= v1 @kind object;
  #L14ea8c.  return v0 @kind object;
  #L14ea8e.  v0:= v2.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ea92.  v0:= (`java.lang.Number`) v0 @kind object;
  #L14ea96.  goto L14ea8c;
}
procedure `void` `a`(`com.b.a.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/q;.a:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L14eaa8.  v0:= instanceof @variable v2 @type ^`java.lang.Character` @kind boolean;
  #L14eaac.  if v0 == 0 then goto L14eaca;
  #L14eab0.  v2:= (`java.lang.Character`) v2 @kind object;
  #L14eab4.  call temp:= `charValue`(v2) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L14eaba.  v0:= temp;
  #L14eabc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(C)Ljava/lang/String;` @kind static;
  #L14eac2.  v0:= temp @kind object;
  #L14eac4.  v1.`com.b.a.q.b` @type ^`java.lang.Object` := v0 @kind object;
  #L14eac8.  return @kind void;
  #L14eaca.  v0:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L14eace.  if v0 != 0 then goto L14eade;
  #L14ead2.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:(Ljava/lang/Object;)Z` @kind static;
  #L14ead8.  v0:= temp;
  #L14eada.  if v0 == 0 then goto L14eaec;
  #L14eade.  v0:= 1I;
  #L14eae0.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L14eae6.  v1.`com.b.a.q.b` @type ^`java.lang.Object` := v2 @kind object;
  #L14eaea.  goto L14eac8;
  #L14eaec.  v0:= 0I;
  #L14eaee.  goto L14eae0;
}
procedure `java.lang.String` `b`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14eb00.  call temp:= `p`(v1) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L14eb06.  v0:= temp;
  #L14eb08.  if v0 == 0 then goto L14eb1e;
  #L14eb0c.  call temp:= `a`(v1) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14eb12.  v0:= temp @kind object;
  #L14eb14.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L14eb1a.  v0:= temp @kind object;
  #L14eb1c.  return v0 @kind object;
  #L14eb1e.  call temp:= `o`(v1) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L14eb24.  v0:= temp;
  #L14eb26.  if v0 == 0 then goto L14eb3c;
  #L14eb2a.  call temp:= `n`(v1) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @kind virtual;
  #L14eb30.  v0:= temp @kind object;
  #L14eb32.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:()Ljava/lang/String;` @kind virtual;
  #L14eb38.  v0:= temp @kind object;
  #L14eb3a.  goto L14eb1c;
  #L14eb3c.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14eb40.  v0:= (`java.lang.String`) v0 @kind object;
  #L14eb44.  goto L14eb1c;
}
procedure `double` `c`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.c:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14eb58.  call temp:= `p`(v2) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L14eb5e.  v0:= temp;
  #L14eb60.  if v0 == 0 then goto L14eb76;
  #L14eb64.  call temp:= `a`(v2) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14eb6a.  v0:= temp @kind object;
  #L14eb6c.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L14eb72.  v0:= temp @kind wide;
  #L14eb74.  return v0 @kind wide;
  #L14eb76.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L14eb7c.  v0:= temp @kind object;
  #L14eb7e.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L14eb84.  v0:= temp @kind wide;
  #L14eb86.  goto L14eb74;
}
procedure `long` `d`(`com.b.a.q` v2 @kind this) @signature `Lcom/b/a/q;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14eb98.  call temp:= `p`(v2) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L14eb9e.  v0:= temp;
  #L14eba0.  if v0 == 0 then goto L14ebb6;
  #L14eba4.  call temp:= `a`(v2) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14ebaa.  v0:= temp @kind object;
  #L14ebac.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L14ebb2.  v0:= temp @kind wide;
  #L14ebb4.  return v0 @kind wide;
  #L14ebb6.  call temp:= `b`(v2) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L14ebbc.  v0:= temp @kind object;
  #L14ebbe.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L14ebc4.  v0:= temp @kind wide;
  #L14ebc6.  goto L14ebb4;
}
procedure `int` `e`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14ebd8.  call temp:= `p`(v1) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L14ebde.  v0:= temp;
  #L14ebe0.  if v0 == 0 then goto L14ebf6;
  #L14ebe4.  call temp:= `a`(v1) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14ebea.  v0:= temp @kind object;
  #L14ebec.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L14ebf2.  v0:= temp;
  #L14ebf4.  return v0;
  #L14ebf6.  call temp:= `b`(v1) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L14ebfc.  v0:= temp @kind object;
  #L14ebfe.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L14ec04.  v0:= temp;
  #L14ec06.  goto L14ebf4;
}
procedure `boolean` `equals`(`com.b.a.q` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/b/a/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L14ec18.  v0:= 1I;
  #L14ec1a.  v1:= 0I;
  #L14ec1c.  if v7 != v8 then goto L14ec22;
  #L14ec20.  return v0;
  #L14ec22.  if v8 == 0 then goto L14ec3a;
  #L14ec26.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14ec2c.  v2:= temp @kind object;
  #L14ec2e.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14ec34.  v3:= temp @kind object;
  #L14ec36.  if v2 == v3 then goto L14ec3e;
  #L14ec3a.  v0:= v1;
  #L14ec3c.  goto L14ec20;
  #L14ec3e.  v8:= (`com.b.a.q`) v8 @kind object;
  #L14ec42.  v2:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ec46.  if v2 != 0 then goto L14ec56;
  #L14ec4a.  v2:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ec4e.  if v2 == 0 then goto L14ec20;
  #L14ec52.  v0:= v1;
  #L14ec54.  goto L14ec20;
  #L14ec56.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L14ec5c.  v2:= temp;
  #L14ec5e.  if v2 == 0 then goto L14ec9a;
  #L14ec62.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L14ec68.  v2:= temp;
  #L14ec6a.  if v2 == 0 then goto L14ec9a;
  #L14ec6e.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14ec74.  v2:= temp @kind object;
  #L14ec76.  call temp:= `longValue`(v2) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L14ec7c.  v2:= temp @kind wide;
  #L14ec7e.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14ec84.  v4:= temp @kind object;
  #L14ec86.  call temp:= `longValue`(v4) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L14ec8c.  v4:= temp @kind wide;
  #L14ec8e.  v2:= lcmp(v2, v4);
  #L14ec92.  if v2 == 0 then goto L14ec20;
  #L14ec96.  v0:= v1;
  #L14ec98.  goto L14ec20;
  #L14ec9a.  v2:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ec9e.  v2:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L14eca2.  if v2 == 0 then goto L14ecf8;
  #L14eca6.  v2:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ecaa.  v2:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L14ecae.  if v2 == 0 then goto L14ecf8;
  #L14ecb2.  call temp:= `a`(v7) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14ecb8.  v2:= temp @kind object;
  #L14ecba.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L14ecc0.  v2:= temp @kind wide;
  #L14ecc2.  call temp:= `a`(v8) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14ecc8.  v4:= temp @kind object;
  #L14ecca.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L14ecd0.  v4:= temp @kind wide;
  #L14ecd2.  v6:= dcmpl(v2, v4);
  #L14ecd6.  if v6 == 0 then goto L14ecf2;
  #L14ecda.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L14ece0.  v2:= temp;
  #L14ece2.  if v2 == 0 then goto L14ecf4;
  #L14ece6.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L14ecec.  v2:= temp;
  #L14ecee.  if v2 == 0 then goto L14ecf4;
  #L14ecf2.  v1:= v0;
  #L14ecf4.  v0:= v1;
  #L14ecf6.  goto L14ec20;
  #L14ecf8.  v0:= v7.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ecfc.  v1:= v8.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ed00.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14ed06.  v0:= temp;
  #L14ed08.  goto L14ec20;
}
procedure `boolean` `f`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14ed1c.  call temp:= `o`(v1) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L14ed22.  v0:= temp;
  #L14ed24.  if v0 == 0 then goto L14ed3a;
  #L14ed28.  call temp:= `n`(v1) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @kind virtual;
  #L14ed2e.  v0:= temp @kind object;
  #L14ed30.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L14ed36.  v0:= temp;
  #L14ed38.  return v0;
  #L14ed3a.  call temp:= `b`(v1) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L14ed40.  v0:= temp @kind object;
  #L14ed42.  call temp:= `parseBoolean`(v0) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L14ed48.  v0:= temp;
  #L14ed4a.  goto L14ed38;
}
procedure `int` `hashCode`(`com.b.a.q` v4 @kind this) @signature `Lcom/b/a/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14ed5c.  v2:= 32I;
  #L14ed60.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ed64.  if v0 != 0 then goto L14ed6e;
  #L14ed68.  v0:= 31I;
  #L14ed6c.  return v0;
  #L14ed6e.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:(Lcom/b/a/q;)Z` @kind static;
  #L14ed74.  v0:= temp;
  #L14ed76.  if v0 == 0 then goto L14ed94;
  #L14ed7a.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14ed80.  v0:= temp @kind object;
  #L14ed82.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L14ed88.  v0:= temp @kind wide;
  #L14ed8a.  v2:= v0 ^>> v2 @kind long;
  #L14ed8e.  v0:= v0 ^~ v2 @kind long;
  #L14ed90.  v0:= (`int`) v0 @kind l2i;
  #L14ed92.  goto L14ed6c;
  #L14ed94.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ed98.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L14ed9c.  if v0 == 0 then goto L14edc2;
  #L14eda0.  call temp:= `a`(v4) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L14eda6.  v0:= temp @kind object;
  #L14eda8.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L14edae.  v0:= temp @kind wide;
  #L14edb0.  call temp:= `doubleToLongBits`(v0) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L14edb6.  v0:= temp @kind wide;
  #L14edb8.  v2:= v0 ^>> v2 @kind long;
  #L14edbc.  v0:= v0 ^~ v2 @kind long;
  #L14edbe.  v0:= (`int`) v0 @kind l2i;
  #L14edc0.  goto L14ed6c;
  #L14edc2.  v0:= v4.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14edc6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L14edcc.  v0:= temp;
  #L14edce.  goto L14ed6c;
}
procedure `java.lang.Boolean` `n`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.n:()Ljava/lang/Boolean;` @AccessFlag  {
    temp;
    v0;

  #L14ede0.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ede4.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L14ede8.  return v0 @kind object;
}
procedure `boolean` `o`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.o:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14edfc.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ee00.  v0:= instanceof @variable v0 @type ^`java.lang.Boolean` @kind boolean;
  #L14ee04.  return v0;
}
procedure `boolean` `p`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.p:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14ee18.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ee1c.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L14ee20.  return v0;
}
procedure `boolean` `q`(`com.b.a.q` v1 @kind this) @signature `Lcom/b/a/q;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14ee34.  v0:= v1.`com.b.a.q.b` @type ^`java.lang.Object` @kind object;
  #L14ee38.  v0:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L14ee3c.  return v0;
}

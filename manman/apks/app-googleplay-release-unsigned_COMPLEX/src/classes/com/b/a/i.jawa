record `com.b.a.i` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.l` @kind class, `java.lang.Iterable` @kind interface {
  `java.util.List` `com.b.a.i.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.i` v1 @kind this) @signature `Lcom/b/a/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14e448.  call `<init>`(v1) @signature `Lcom/b/a/l;.<init>:()V` @kind direct;
  #L14e44e.  v0:= new `java.util.ArrayList`;
  #L14e452.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L14e458.  v1.`com.b.a.i.a` @type ^`java.util.List` := v0 @kind object;
  #L14e45c.  return @kind void;
}
procedure `java.lang.Number` `a`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.a:()Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e470.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e474.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14e47a.  v0:= temp;
  #L14e47c.  v1:= 1I;
  #L14e47e.  if v0 != v1 then goto L14e49e;
  #L14e482.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e486.  v1:= 0I;
  #L14e488.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14e48e.  v0:= temp @kind object;
  #L14e490.  v0:= (`com.b.a.l`) v0 @kind object;
  #L14e494.  call temp:= `a`(v0) @signature `Lcom/b/a/l;.a:()Ljava/lang/Number;` @kind virtual;
  #L14e49a.  v0:= temp @kind object;
  #L14e49c.  return v0 @kind object;
  #L14e49e.  v0:= new `java.lang.IllegalStateException`;
  #L14e4a2.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L14e4a8.  throw v0;
}
procedure `void` `a`(`com.b.a.i` v1 @kind this, `com.b.a.l` v2 @kind object) @signature `Lcom/b/a/i;.a:(Lcom/b/a/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14e4bc.  if v2 != 0 then goto L14e4c4;
  #L14e4c0.  v2:= `@@com.b.a.n.a` @type ^`com.b.a.n` @kind object;
  #L14e4c4.  v0:= v1.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e4c8.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14e4ce.  return @kind void;
}
procedure `java.lang.String` `b`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e4e0.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e4e4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14e4ea.  v0:= temp;
  #L14e4ec.  v1:= 1I;
  #L14e4ee.  if v0 != v1 then goto L14e50e;
  #L14e4f2.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e4f6.  v1:= 0I;
  #L14e4f8.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14e4fe.  v0:= temp @kind object;
  #L14e500.  v0:= (`com.b.a.l`) v0 @kind object;
  #L14e504.  call temp:= `b`(v0) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L14e50a.  v0:= temp @kind object;
  #L14e50c.  return v0 @kind object;
  #L14e50e.  v0:= new `java.lang.IllegalStateException`;
  #L14e512.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L14e518.  throw v0;
}
procedure `double` `c`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.c:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e52c.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e530.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14e536.  v0:= temp;
  #L14e538.  v1:= 1I;
  #L14e53a.  if v0 != v1 then goto L14e55a;
  #L14e53e.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e542.  v1:= 0I;
  #L14e544.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14e54a.  v0:= temp @kind object;
  #L14e54c.  v0:= (`com.b.a.l`) v0 @kind object;
  #L14e550.  call temp:= `c`(v0) @signature `Lcom/b/a/l;.c:()D` @kind virtual;
  #L14e556.  v0:= temp @kind wide;
  #L14e558.  return v0 @kind wide;
  #L14e55a.  v0:= new `java.lang.IllegalStateException`;
  #L14e55e.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L14e564.  throw v0;
}
procedure `long` `d`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e578.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e57c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14e582.  v0:= temp;
  #L14e584.  v1:= 1I;
  #L14e586.  if v0 != v1 then goto L14e5a6;
  #L14e58a.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e58e.  v1:= 0I;
  #L14e590.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14e596.  v0:= temp @kind object;
  #L14e598.  v0:= (`com.b.a.l`) v0 @kind object;
  #L14e59c.  call temp:= `d`(v0) @signature `Lcom/b/a/l;.d:()J` @kind virtual;
  #L14e5a2.  v0:= temp @kind wide;
  #L14e5a4.  return v0 @kind wide;
  #L14e5a6.  v0:= new `java.lang.IllegalStateException`;
  #L14e5aa.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L14e5b0.  throw v0;
}
procedure `int` `e`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e5c4.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e5c8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14e5ce.  v0:= temp;
  #L14e5d0.  v1:= 1I;
  #L14e5d2.  if v0 != v1 then goto L14e5f2;
  #L14e5d6.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e5da.  v1:= 0I;
  #L14e5dc.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14e5e2.  v0:= temp @kind object;
  #L14e5e4.  v0:= (`com.b.a.l`) v0 @kind object;
  #L14e5e8.  call temp:= `e`(v0) @signature `Lcom/b/a/l;.e:()I` @kind virtual;
  #L14e5ee.  v0:= temp;
  #L14e5f0.  return v0;
  #L14e5f2.  v0:= new `java.lang.IllegalStateException`;
  #L14e5f6.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L14e5fc.  throw v0;
}
procedure `boolean` `equals`(`com.b.a.i` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e610.  if v3 == v2 then goto L14e634;
  #L14e614.  v0:= instanceof @variable v3 @type ^`com.b.a.i` @kind boolean;
  #L14e618.  if v0 == 0 then goto L14e638;
  #L14e61c.  v3:= (`com.b.a.i`) v3 @kind object;
  #L14e620.  v0:= v3.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e624.  v1:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e628.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L14e62e.  v0:= temp;
  #L14e630.  if v0 == 0 then goto L14e638;
  #L14e634.  v0:= 1I;
  #L14e636.  return v0;
  #L14e638.  v0:= 0I;
  #L14e63a.  goto L14e636;
}
procedure `boolean` `f`(`com.b.a.i` v2 @kind this) @signature `Lcom/b/a/i;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14e64c.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e650.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14e656.  v0:= temp;
  #L14e658.  v1:= 1I;
  #L14e65a.  if v0 != v1 then goto L14e67a;
  #L14e65e.  v0:= v2.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e662.  v1:= 0I;
  #L14e664.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L14e66a.  v0:= temp @kind object;
  #L14e66c.  v0:= (`com.b.a.l`) v0 @kind object;
  #L14e670.  call temp:= `f`(v0) @signature `Lcom/b/a/l;.f:()Z` @kind virtual;
  #L14e676.  v0:= temp;
  #L14e678.  return v0;
  #L14e67a.  v0:= new `java.lang.IllegalStateException`;
  #L14e67e.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L14e684.  throw v0;
}
procedure `int` `hashCode`(`com.b.a.i` v1 @kind this) @signature `Lcom/b/a/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14e698.  v0:= v1.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e69c.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L14e6a2.  v0:= temp;
  #L14e6a4.  return v0;
}
procedure `java.util.Iterator` `iterator`(`com.b.a.i` v1 @kind this) @signature `Lcom/b/a/i;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14e6b8.  v0:= v1.`com.b.a.i.a` @type ^`java.util.List` @kind object;
  #L14e6bc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L14e6c2.  v0:= temp @kind object;
  #L14e6c4.  return v0 @kind object;
}

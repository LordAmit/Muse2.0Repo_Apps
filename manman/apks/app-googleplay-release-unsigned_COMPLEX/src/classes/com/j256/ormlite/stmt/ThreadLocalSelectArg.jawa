record `com.j256.ormlite.stmt.ThreadLocalSelectArg` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.BaseArgumentHolder` @kind class {
  `java.lang.ThreadLocal` `com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16a8e8.  call `<init>`(v1) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:()V` @kind direct;
  #L16a8ee.  v0:= new `java.lang.ThreadLocal`;
  #L16a8f2.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L16a8f8.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L16a8fc.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `com.j256.ormlite.field.SqlType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Lcom/j256/ormlite/field/SqlType;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16a910.  call `<init>`(v1, v2) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L16a916.  v0:= new `java.lang.ThreadLocal`;
  #L16a91a.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L16a920.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L16a924.  call `setValue`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L16a92a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16a93c.  call `<init>`(v1) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:()V` @kind direct;
  #L16a942.  v0:= new `java.lang.ThreadLocal`;
  #L16a946.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L16a94c.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L16a950.  call `setValue`(v1, v2) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L16a956.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16a968.  call `<init>`(v1, v2) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16a96e.  v0:= new `java.lang.ThreadLocal`;
  #L16a972.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L16a978.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L16a97c.  call `setValue`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L16a982.  return @kind void;
}
procedure `java.lang.Object` `getValue`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.getValue:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L16a994.  v0:= v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L16a998.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L16a99e.  v0:= temp @kind object;
  #L16a9a0.  v0:= (`com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper`) v0 @kind object;
  #L16a9a4.  if v0 != 0 then goto L16a9ac;
  #L16a9a8.  v0:= 0I;
  #L16a9aa.  return v0 @kind object;
  #L16a9ac.  v0:= v0.`com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper.value` @type ^`java.lang.Object` @kind object;
  #L16a9b0.  goto L16a9aa;
}
procedure `boolean` `isValueSet`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.isValueSet:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L16a9c4.  v0:= v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L16a9c8.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L16a9ce.  v0:= temp @kind object;
  #L16a9d0.  if v0 == 0 then goto L16a9d8;
  #L16a9d4.  v0:= 1I;
  #L16a9d6.  return v0;
  #L16a9d8.  v0:= 0I;
  #L16a9da.  goto L16a9d6;
}
procedure `void` `setValue`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16a9ec.  v0:= v2.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L16a9f0.  v1:= new `com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper`;
  #L16a9f4.  call `<init>`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg$ValueWrapper;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L16a9fa.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L16aa00.  return @kind void;
}

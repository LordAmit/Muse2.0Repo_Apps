record `com.j256.ormlite.dao.LazyForeignCollection` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.BaseForeignCollection` @kind class, `java.io.Serializable` @kind interface {
  `com.j256.ormlite.dao.CloseableIterator` `com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.j256.ormlite.dao.LazyForeignCollection.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.LazyForeignCollection` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L157c30.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @kind direct;
  #L157c36.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `access$000`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind object, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.access$000:(Lcom/j256/ormlite/dao/LazyForeignCollection;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L157c48.  call temp:= `seperateIteratorThrow`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind direct;
  #L157c4e.  v0:= temp @kind object;
  #L157c50.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `seperateIteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L157c64.  v0:= v2.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L157c68.  if v0 != 0 then goto L157c7c;
  #L157c6c.  v0:= new `java.lang.IllegalStateException`;
  #L157c70.  v1:= "Internal DAO object is null.  Maybe the collection was deserialized or otherwise constructed wrongly.  Use dao.assignEmptyForeignCollection(...) or dao.getEmptyForeignCollection(...) instead" @kind object;
  #L157c74.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L157c7a.  throw v0;
  #L157c7c.  v0:= v2.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L157c80.  call temp:= `getPreparedQuery`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getPreparedQuery:()Lcom/j256/ormlite/stmt/PreparedQuery;` @kind virtual;
  #L157c86.  v1:= temp @kind object;
  #L157c88.  call temp:= `iterator`(v0, v1, v3) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L157c8e.  v0:= temp @kind object;
  #L157c90.  return v0 @kind object;
}
procedure `void` `closeLastIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeLastIterator:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157ca4.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L157ca8.  if v0 == 0 then goto L157cbc;
  #L157cac.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L157cb0.  call `close`(v0) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.close:()V` @kind interface;
  #L157cb6.  v0:= 0I;
  #L157cb8.  v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` := v0 @kind object;
  #L157cbc.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157cd0.  v0:= -1I;
  #L157cd2.  call temp:= `closeableIterator`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157cd8.  v0:= temp @kind object;
  #L157cda.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v4 @kind this, `int` v5 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L157cec.  call temp:= `iteratorThrow`(v4, v5) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #Try_end0.  
  #L157cf2.  v0:= temp @kind object;
  #L157cf4.  return v0 @kind object;
  #L157cf6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L157cf8.  v1:= new `java.lang.IllegalStateException`;
  #L157cfc.  v2:= new `java.lang.StringBuilder`;
  #L157d00.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L157d06.  v3:= "Could not build lazy iterator for " @kind object;
  #L157d0a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L157d10.  v2:= temp @kind object;
  #L157d12.  v3:= v4.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L157d16.  call temp:= `getDataClass`(v3) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L157d1c.  v3:= temp @kind object;
  #L157d1e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L157d24.  v2:= temp @kind object;
  #L157d26.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L157d2c.  v2:= temp @kind object;
  #L157d2e.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L157d34.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L157cf6;
}
procedure `boolean` `contains`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L157d58.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157d5e.  v1:= temp @kind object;
  #Try_start0.  
  #L157d60.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L157d66.  v0:= temp;
  #L157d68.  if v0 == 0 then goto L157d8a;
  #L157d6c.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L157d72.  v0:= temp @kind object;
  #L157d74.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #Try_end0.  
  #L157d7a.  v0:= temp;
  #L157d7c.  if v0 == 0 then goto L157d60;
  #L157d80.  v0:= 1I;
  #L157d82.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L157d88.  return v0;
  #L157d8a.  v0:= 0I;
  #L157d8c.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L157d92.  goto L157d88;
  #L157d94.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L157d96.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L157d9c.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L157d94;
}
procedure `boolean` `containsAll`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L157dbc.  v0:= new `java.util.HashSet`;
  #L157dc0.  call `<init>`(v0, v4) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L157dc6.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157dcc.  v1:= temp @kind object;
  #Try_start0.  
  #L157dce.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L157dd4.  v2:= temp;
  #L157dd6.  if v2 == 0 then goto L157df4;
  #L157dda.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L157de0.  v2:= temp @kind object;
  #L157de2.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L157de8.  goto L157dce;
  #L157dea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L157dec.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L157df2.  throw v0;
  #Try_start1.  
  #L157df4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #Try_end1.  
  #L157dfa.  v0:= temp;
  #L157dfc.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L157e02.  return v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L157dea;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L157dea;
}
procedure `boolean` `equals`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157e28.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L157e2e.  v0:= temp;
  #L157e30.  return v0;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157e44.  v0:= -1I;
  #L157e46.  call temp:= `getWrappedIterable`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:(I)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind virtual;
  #L157e4c.  v0:= temp @kind object;
  #L157e4e.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:(I)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L157e60.  v0:= new `com.j256.ormlite.dao.CloseableWrappedIterableImpl`;
  #L157e64.  v1:= new `com.j256.ormlite.dao.LazyForeignCollection$1`;
  #L157e68.  call `<init>`(v1, v2, v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection$1;.<init>:(Lcom/j256/ormlite/dao/LazyForeignCollection;I)V` @kind direct;
  #L157e6e.  call `<init>`(v0, v1) @signature `Lcom/j256/ormlite/dao/CloseableWrappedIterableImpl;.<init>:(Lcom/j256/ormlite/dao/CloseableIterable;)V` @kind direct;
  #L157e74.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157e88.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L157e8e.  v0:= temp;
  #L157e90.  return v0;
}
procedure `boolean` `isEager`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.isEager:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157ea4.  v0:= 0I;
  #L157ea6.  return v0;
}
procedure `boolean` `isEmpty`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L157eb8.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157ebe.  v1:= temp @kind object;
  #Try_start0.  
  #L157ec0.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #Try_end0.  
  #L157ec6.  v0:= temp;
  #L157ec8.  if v0 != 0 then goto L157ed6;
  #L157ecc.  v0:= 1I;
  #L157ece.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L157ed4.  return v0;
  #L157ed6.  v0:= 0I;
  #L157ed8.  goto L157ece;
  #L157eda.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L157edc.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L157ee2.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L157eda;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157f00.  v0:= -1I;
  #L157f02.  call temp:= `closeableIterator`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157f08.  v0:= temp @kind object;
  #L157f0a.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157f1c.  call temp:= `closeableIterator`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157f22.  v0:= temp @kind object;
  #L157f24.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L157f38.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157f3e.  v0:= temp @kind object;
  #L157f40.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157f54.  v0:= -1I;
  #L157f56.  call temp:= `iteratorThrow`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157f5c.  v0:= temp @kind object;
  #L157f5e.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157f70.  call temp:= `seperateIteratorThrow`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind direct;
  #L157f76.  v0:= temp @kind object;
  #L157f78.  v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` := v0 @kind object;
  #L157f7c.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L157f80.  return v0 @kind object;
}
procedure `int` `refreshAll`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.refreshAll:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L157f94.  v0:= new `java.lang.UnsupportedOperationException`;
  #L157f98.  v1:= "Cannot call updateAll() on a lazy collection." @kind object;
  #L157f9c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L157fa2.  throw v0;
}
procedure `int` `refreshCollection`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.refreshCollection:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L157fb4.  v0:= 0I;
  #L157fb6.  return v0;
}
procedure `boolean` `remove`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L157fc8.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L157fce.  v1:= temp @kind object;
  #Try_start0.  
  #L157fd0.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L157fd6.  v0:= temp;
  #L157fd8.  if v0 == 0 then goto L158000;
  #L157fdc.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L157fe2.  v0:= temp @kind object;
  #L157fe4.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L157fea.  v0:= temp;
  #L157fec.  if v0 == 0 then goto L157fd0;
  #L157ff0.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L157ff6.  v0:= 1I;
  #L157ff8.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L157ffe.  return v0;
  #L158000.  v0:= 0I;
  #L158002.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L158008.  goto L157ffe;
  #L15800a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15800c.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L158012.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L15800a;
}
procedure `boolean` `removeAll`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L158030.  v0:= 0I;
  #L158032.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L158038.  v1:= temp @kind object;
  #Try_start0.  
  #L15803a.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L158040.  v2:= temp;
  #L158042.  if v2 == 0 then goto L158064;
  #L158046.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15804c.  v2:= temp @kind object;
  #L15804e.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L158054.  v2:= temp;
  #L158056.  if v2 == 0 then goto L15803a;
  #L15805a.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L158060.  v0:= 1I;
  #L158062.  goto L15803a;
  #L158064.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15806a.  return v0;
  #L15806c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15806e.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L158074.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L15806c;
}
procedure `int` `size`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L158094.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L15809a.  v1:= temp @kind object;
  #L15809c.  v0:= 0I;
  #Try_start0.  
  #L15809e.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1580a4.  v2:= temp;
  #L1580a6.  if v2 == 0 then goto L1580b6;
  #L1580aa.  call `moveToNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.moveToNext:()V` @kind interface;
  #Try_end0.  
  #L1580b0.  v0:= v0 + 1;
  #L1580b4.  goto L15809e;
  #L1580b6.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1580bc.  return v0;
  #L1580be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1580c0.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1580c6.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1580be;
}
procedure `java.lang.Object`[] `toArray`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1580e4.  v0:= new `java.util.ArrayList`;
  #L1580e8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1580ee.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1580f4.  v1:= temp @kind object;
  #Try_start0.  
  #L1580f6.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1580fc.  v2:= temp;
  #L1580fe.  if v2 == 0 then goto L15811c;
  #L158102.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L158108.  v2:= temp @kind object;
  #L15810a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L158110.  goto L1580f6;
  #L158112.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L158114.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15811a.  throw v0;
  #Try_start1.  
  #L15811c.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #Try_end1.  
  #L158122.  v0:= temp @kind object;
  #L158124.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15812a.  return v0 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L158112;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L158112;
}
procedure `java.lang.Object`[] `toArray`(`com.j256.ormlite.dao.LazyForeignCollection` v9 @kind this, `java.lang.Object`[] v10 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L158150.  v3:= 0I;
  #L158152.  v2:= 0I;
  #L158154.  call temp:= `iterator`(v9) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L15815a.  v5:= temp @kind object;
  #L15815c.  v1:= v2;
  #L15815e.  v0:= v3 @kind object;
  #Try_start0.  
  #L158160.  call temp:= `hasNext`(v5) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L158166.  v4:= temp;
  #L158168.  if v4 == 0 then goto L1581bc;
  #L15816c.  call temp:= `next`(v5) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L158172.  v6:= temp @kind object;
  #L158174.  v4:= length @variable v10;
  #L158176.  if v1 < v4 then goto L1581ac;
  #L15817a.  if v0 != 0 then goto L1581a0;
  #L15817e.  v0:= new `java.util.ArrayList`;
  #L158182.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L158188.  v7:= length @variable v10;
  #L15818a.  v4:= v2;
  #L15818c.  if v4 >= v7 then goto L1581a0;
  #L158190.  v8:= v10[v4] @kind object;
  #L158194.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15819a.  v4:= v4 + 1;
  #L15819e.  goto L15818c;
  #L1581a0.  call temp:= `add`(v0, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1581a6.  v1:= v1 + 1;
  #L1581aa.  goto L158160;
  #L1581ac.  v10[v1]:= v6 @kind object;
  #Try_end0.  
  #L1581b0.  goto L1581a6;
  #L1581b2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1581b4.  call `closeQuietly`(v5) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1581ba.  throw v0;
  #L1581bc.  call `closeQuietly`(v5) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1581c2.  if v0 != 0 then goto L1581d6;
  #L1581c6.  v0:= length @variable v10;
  #L1581c8.  v0:= v0 + -1;
  #L1581cc.  if v1 >= v0 then goto L1581d4;
  #L1581d0.  v10[v1]:= v3 @kind object;
  #L1581d4.  return v10 @kind object;
  #L1581d6.  call temp:= `toArray`(v0, v10) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1581dc.  v10:= temp @kind object;
  #L1581de.  goto L1581d4;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1581b2;
}
procedure `int` `updateAll`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.updateAll:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1581fc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L158200.  v1:= "Cannot call updateAll() on a lazy collection." @kind object;
  #L158204.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15820a.  throw v0;
}

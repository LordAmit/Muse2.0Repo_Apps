record `com.j256.ormlite.stmt.query.ManyClause` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.Clause` @kind interface, `com.j256.ormlite.stmt.query.NeedsFutureClause` @kind interface {
  `com.j256.ormlite.stmt.query.Clause` `com.j256.ormlite.stmt.query.ManyClause.first` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.j256.ormlite.stmt.query.ManyClause.operation` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.query.Clause`[] `com.j256.ormlite.stmt.query.ManyClause.others` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.query.Clause` `com.j256.ormlite.stmt.query.ManyClause.second` @AccessFlag PRIVATE;
  `int` `com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.j256.ormlite.stmt.query.ManyClause.AND_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.ManyClause.OR_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v1 @kind this, `com.j256.ormlite.stmt.query.Clause` v2 @kind object, `com.j256.ormlite.stmt.query.Clause` v3 @kind object, `com.j256.ormlite.stmt.query.Clause`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:(Lcom/j256/ormlite/stmt/query/Clause;Lcom/j256/ormlite/stmt/query/Clause;[Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16e018.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16e01e.  v1.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v2 @kind object;
  #L16e022.  v1.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v3 @kind object;
  #L16e026.  v1.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v4 @kind object;
  #L16e02a.  v0:= 0I;
  #L16e02c.  v1.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L16e030.  v1.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v5 @kind object;
  #L16e034.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v1 @kind this, `com.j256.ormlite.stmt.query.Clause` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:(Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16e048.  v0:= 0I;
  #L16e04a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16e050.  v1.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v2 @kind object;
  #L16e054.  v1.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L16e058.  v1.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v0 @kind object;
  #L16e05c.  v0:= 0I;
  #L16e05e.  v1.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L16e062.  v1.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v3 @kind object;
  #L16e066.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v2 @kind this, `com.j256.ormlite.stmt.query.Clause`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:([Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L16e078.  v1:= 2I;
  #L16e07a.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16e080.  v0:= 0I;
  #L16e082.  v0:= v3[v0] @kind object;
  #L16e086.  v2.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L16e08a.  v0:= length @variable v3;
  #L16e08c.  if v0 >= v1 then goto L16e0a6;
  #L16e090.  v0:= 0I;
  #L16e092.  v2.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L16e096.  v0:= length @variable v3;
  #L16e098.  v2.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L16e09c.  v2.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v3 @kind object;
  #L16e0a0.  v2.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v4 @kind object;
  #L16e0a4.  return @kind void;
  #L16e0a6.  v0:= 1I;
  #L16e0a8.  v0:= v3[v0] @kind object;
  #L16e0ac.  v2.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L16e0b0.  v2.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v1;
  #L16e0b4.  goto L16e09c;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.ManyClause` v3 @kind this, `com.j256.ormlite.db.DatabaseType` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.StringBuilder` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L16e0c8.  v2:= 32I;
  #L16e0cc.  v0:= 40I;
  #L16e0d0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e0d6.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L16e0da.  call `appendSql`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L16e0e0.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L16e0e4.  if v0 == 0 then goto L16e102;
  #L16e0e8.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` @kind object;
  #L16e0ec.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e0f2.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e0f8.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L16e0fc.  call `appendSql`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L16e102.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L16e106.  if v0 == 0 then goto L16e13c;
  #L16e10a.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int`;
  #L16e10e.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L16e112.  v1:= length @variable v1;
  #L16e114.  if v0 >= v1 then goto L16e13c;
  #L16e118.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` @kind object;
  #L16e11c.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e122.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e128.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L16e12c.  v1:= v1[v0] @kind object;
  #L16e130.  call `appendSql`(v1, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L16e136.  v0:= v0 + 1;
  #L16e13a.  goto L16e10e;
  #L16e13c.  v0:= ") " @kind object;
  #L16e140.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e146.  return @kind void;
}
procedure `void` `setMissingClause`(`com.j256.ormlite.stmt.query.ManyClause` v0 @kind this, `com.j256.ormlite.stmt.query.Clause` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.setMissingClause:(Lcom/j256/ormlite/stmt/query/Clause;)V` @AccessFlag PUBLIC {
    temp;

  #L16e158.  v0.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v1 @kind object;
  #L16e15c.  return @kind void;
}

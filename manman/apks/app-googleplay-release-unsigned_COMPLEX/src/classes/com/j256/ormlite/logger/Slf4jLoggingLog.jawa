record `com.j256.ormlite.logger.Slf4jLoggingLog` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.logger.Log` @kind interface {
  `org.slf4j.Logger` `com.j256.ormlite.logger.Slf4jLoggingLog.logger` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.logger.Slf4jLoggingLog` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L165a5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L165a62.  call temp:= `getLogger`(v2) @signature `Lorg/slf4j/LoggerFactory;.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;` @kind static;
  #L165a68.  v0:= temp @kind object;
  #L165a6a.  v1.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` := v0 @kind object;
  #L165a6e.  return @kind void;
}
procedure `boolean` `isLevelEnabled`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.isLevelEnabled:(Lcom/j256/ormlite/logger/Log$Level;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165a80.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L165a84.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L165a8a.  v1:= temp;
  #L165a8c.  v0:= v0[v1];
  #L165a90.  goto L165af8;
  #L165a96.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165a9a.  call temp:= `isInfoEnabled`(v0) @signature `Lorg/slf4j/Logger;.isInfoEnabled:()Z` @kind interface;
  #L165aa0.  v0:= temp;
  #L165aa2.  return v0;
  #L165aa4.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165aa8.  call temp:= `isTraceEnabled`(v0) @signature `Lorg/slf4j/Logger;.isTraceEnabled:()Z` @kind interface;
  #L165aae.  v0:= temp;
  #L165ab0.  goto L165aa2;
  #L165ab2.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165ab6.  call temp:= `isDebugEnabled`(v0) @signature `Lorg/slf4j/Logger;.isDebugEnabled:()Z` @kind interface;
  #L165abc.  v0:= temp;
  #L165abe.  goto L165aa2;
  #L165ac0.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165ac4.  call temp:= `isInfoEnabled`(v0) @signature `Lorg/slf4j/Logger;.isInfoEnabled:()Z` @kind interface;
  #L165aca.  v0:= temp;
  #L165acc.  goto L165aa2;
  #L165ace.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165ad2.  call temp:= `isWarnEnabled`(v0) @signature `Lorg/slf4j/Logger;.isWarnEnabled:()Z` @kind interface;
  #L165ad8.  v0:= temp;
  #L165ada.  goto L165aa2;
  #L165adc.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165ae0.  call temp:= `isErrorEnabled`(v0) @signature `Lorg/slf4j/Logger;.isErrorEnabled:()Z` @kind interface;
  #L165ae6.  v0:= temp;
  #L165ae8.  goto L165aa2;
  #L165aea.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165aee.  call temp:= `isErrorEnabled`(v0) @signature `Lorg/slf4j/Logger;.isErrorEnabled:()Z` @kind interface;
  #L165af4.  v0:= temp;
  #L165af6.  goto L165aa2;
  #L165af8.  switch v0
                  | 1 => goto L165aa4
                  | 2 => goto L165ab2
                  | 3 => goto L165ac0
                  | 4 => goto L165ace
                  | 5 => goto L165adc
                  | 6 => goto L165aea
                  | else => goto L165a96;
}
procedure `void` `log`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165b28.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L165b2c.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L165b32.  v1:= temp;
  #L165b34.  v0:= v0[v1];
  #L165b38.  goto L165b94;
  #L165b3e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165b42.  call `info`(v0, v4) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;)V` @kind interface;
  #L165b48.  return @kind void;
  #L165b4a.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165b4e.  call `trace`(v0, v4) @signature `Lorg/slf4j/Logger;.trace:(Ljava/lang/String;)V` @kind interface;
  #L165b54.  goto L165b48;
  #L165b56.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165b5a.  call `debug`(v0, v4) @signature `Lorg/slf4j/Logger;.debug:(Ljava/lang/String;)V` @kind interface;
  #L165b60.  goto L165b48;
  #L165b62.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165b66.  call `info`(v0, v4) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;)V` @kind interface;
  #L165b6c.  goto L165b48;
  #L165b6e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165b72.  call `warn`(v0, v4) @signature `Lorg/slf4j/Logger;.warn:(Ljava/lang/String;)V` @kind interface;
  #L165b78.  goto L165b48;
  #L165b7a.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165b7e.  call `error`(v0, v4) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;)V` @kind interface;
  #L165b84.  goto L165b48;
  #L165b86.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165b8a.  call `error`(v0, v4) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;)V` @kind interface;
  #L165b90.  goto L165b48;
  #L165b92.  
  #L165b94.  switch v0
                  | 1 => goto L165b4a
                  | 2 => goto L165b56
                  | 3 => goto L165b62
                  | 4 => goto L165b6e
                  | 5 => goto L165b7a
                  | 6 => goto L165b86
                  | else => goto L165b3e;
}
procedure `void` `log`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L165bc4.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L165bc8.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L165bce.  v1:= temp;
  #L165bd0.  v0:= v0[v1];
  #L165bd4.  goto L165c30;
  #L165bda.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165bde.  call `info`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L165be4.  return @kind void;
  #L165be6.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165bea.  call `trace`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L165bf0.  goto L165be4;
  #L165bf2.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165bf6.  call `debug`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L165bfc.  goto L165be4;
  #L165bfe.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165c02.  call `info`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L165c08.  goto L165be4;
  #L165c0a.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165c0e.  call `warn`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L165c14.  goto L165be4;
  #L165c16.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165c1a.  call `error`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L165c20.  goto L165be4;
  #L165c22.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L165c26.  call `error`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L165c2c.  goto L165be4;
  #L165c2e.  
  #L165c30.  switch v0
                  | 1 => goto L165be6
                  | 2 => goto L165bf2
                  | 3 => goto L165bfe
                  | 4 => goto L165c0a
                  | 5 => goto L165c16
                  | 6 => goto L165c22
                  | else => goto L165bda;
}

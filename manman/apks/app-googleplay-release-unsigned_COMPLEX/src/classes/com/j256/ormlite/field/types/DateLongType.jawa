record `com.j256.ormlite.field.types.DateLongType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDateType` @kind class {
}
global `com.j256.ormlite.field.types.DateLongType` `@@com.j256.ormlite.field.types.DateLongType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/DateLongType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L161ad4.  v0:= new `com.j256.ormlite.field.types.DateLongType`;
  #L161ad8.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/DateLongType;.<init>:()V` @kind direct;
  #L161ade.  `@@com.j256.ormlite.field.types.DateLongType.singleTon` @type ^`com.j256.ormlite.field.types.DateLongType` := v0 @kind object;
  #L161ae2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.DateLongType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/DateLongType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L161af4.  v0:= `@@com.j256.ormlite.field.SqlType.LONG` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L161af8.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/field/types/BaseDateType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L161afe.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.DateLongType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/DateLongType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L161b10.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDateType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L161b16.  return @kind void;
}
procedure `com.j256.ormlite.field.types.DateLongType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/DateLongType;.getSingleton:()Lcom/j256/ormlite/field/types/DateLongType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L161b28.  v0:= `@@com.j256.ormlite.field.types.DateLongType.singleTon` @type ^`com.j256.ormlite.field.types.DateLongType` @kind object;
  #L161b2c.  return v0 @kind object;
}
procedure `java.lang.Class` `getPrimaryClass`(`com.j256.ormlite.field.types.DateLongType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/DateLongType;.getPrimaryClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161b40.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L161b44.  return v0 @kind object;
}
procedure `boolean` `isEscapedValue`(`com.j256.ormlite.field.types.DateLongType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/DateLongType;.isEscapedValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161b58.  v0:= 0I;
  #L161b5a.  return v0;
}
procedure `java.lang.Object` `javaToSqlArg`(`com.j256.ormlite.field.types.DateLongType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/field/types/DateLongType;.javaToSqlArg:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L161b6c.  v4:= (`java.util.Date`) v4 @kind object;
  #L161b70.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L161b76.  v0:= temp @kind wide;
  #L161b78.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L161b7e.  v0:= temp @kind object;
  #L161b80.  return v0 @kind object;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.DateLongType` v3 @kind this, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/field/types/DateLongType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L161b94.  call temp:= `parseLong`(v5) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L161b9a.  v0:= temp @kind wide;
  #L161b9c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #Try_end0.  
  #L161ba2.  v0:= temp @kind object;
  #L161ba4.  return v0 @kind object;
  #L161ba6.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L161ba8.  v1:= new `java.lang.StringBuilder`;
  #L161bac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L161bb2.  v2:= "Problems with field " @kind object;
  #L161bb6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161bbc.  v1:= temp @kind object;
  #L161bbe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161bc4.  v1:= temp @kind object;
  #L161bc6.  v2:= " parsing default date-long value: " @kind object;
  #L161bca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161bd0.  v1:= temp @kind object;
  #L161bd2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161bd8.  v1:= temp @kind object;
  #L161bda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L161be0.  v1:= temp @kind object;
  #L161be2.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L161be8.  v0:= temp @kind object;
  #L161bea.  throw v0;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L161ba6;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.DateLongType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `com.j256.ormlite.support.DatabaseResults` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/field/types/DateLongType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L161c0c.  call temp:= `getLong`(v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getLong:(I)J` @kind interface;
  #L161c12.  v0:= temp @kind wide;
  #L161c14.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L161c1a.  v0:= temp @kind object;
  #L161c1c.  return v0 @kind object;
}
procedure `java.lang.Object` `sqlArgToJava`(`com.j256.ormlite.field.types.DateLongType` v4 @kind this, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.Object` v6 @kind object, `int` v7 ) @signature `Lcom/j256/ormlite/field/types/DateLongType;.sqlArgToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L161c30.  v0:= new `java.util.Date`;
  #L161c34.  v6:= (`java.lang.Long`) v6 @kind object;
  #L161c38.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L161c3e.  v2:= temp @kind wide;
  #L161c40.  call `<init>`(v0, v2) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L161c46.  return v0 @kind object;
}

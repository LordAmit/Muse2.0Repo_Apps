record `com.j256.ormlite.dao.BaseForeignCollection` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.j256.ormlite.dao.ForeignCollection` @kind interface, `java.io.Serializable` @kind interface {
  `com.j256.ormlite.dao.Dao` `com.j256.ormlite.dao.BaseForeignCollection.dao` @AccessFlag PROTECTED_FINAL_TRANSIENT;
  `com.j256.ormlite.field.FieldType` `com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `boolean` `com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.String` `com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.j256.ormlite.dao.BaseForeignCollection.parent` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.Object` `com.j256.ormlite.dao.BaseForeignCollection.parentId` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `com.j256.ormlite.stmt.PreparedQuery` `com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.j256.ormlite.dao.BaseForeignCollection.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.BaseForeignCollection` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L1564f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1564f6.  v0.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` := v1 @kind object;
  #L1564fa.  v0.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` := v4 @kind object;
  #L1564fe.  v0.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` := v3 @kind object;
  #L156502.  v0.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` := v5 @kind object;
  #L156506.  v0.`com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @type ^`boolean` := v6 @kind boolean;
  #L15650a.  v0.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` := v2 @kind object;
  #L15650e.  return @kind void;
}
procedure `boolean` `addElement`(`com.j256.ormlite.dao.BaseForeignCollection` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L156520.  v0:= 1I;
  #L156522.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L156526.  if v1 != 0 then goto L15652e;
  #L15652a.  v0:= 0I;
  #L15652c.  return v0;
  #L15652e.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L156532.  if v1 == 0 then goto L156556;
  #L156536.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15653a.  call temp:= `getFieldValueIfNotDefault`(v1, v5) @signature `Lcom/j256/ormlite/field/FieldType;.getFieldValueIfNotDefault:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L156540.  v1:= temp @kind object;
  #L156542.  if v1 != 0 then goto L156556;
  #L156546.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15654a.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L15654e.  v3:= 0I;
  #L156550.  call `assignField`(v1, v5, v2, v0, v3) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L156556.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15655a.  call temp:= `create`(v1, v5) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @kind interface;
  #L156560.  goto L15652c;
}
procedure `boolean` `add`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L156574.  call temp:= `addElement`(v3, v4) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L15657a.  v0:= temp;
  #L15657c.  return v0;
  #L15657e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L156580.  v1:= new `java.lang.IllegalStateException`;
  #L156584.  v2:= "Could not create data element in dao" @kind object;
  #L156588.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15658e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15657e;
}
procedure `boolean` `addAll`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1565b0.  v0:= 0I;
  #L1565b2.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1565b8.  v1:= temp @kind object;
  #L1565ba.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1565c0.  v2:= temp;
  #L1565c2.  if v2 == 0 then goto L1565f0;
  #L1565c6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1565cc.  v2:= temp @kind object;
  #Try_start0.  
  #L1565ce.  call temp:= `addElement`(v3, v2) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.addElement:(Ljava/lang/Object;)Z` @kind direct;
  #Try_end0.  
  #L1565d4.  v2:= temp;
  #L1565d6.  if v2 == 0 then goto L1565ba;
  #L1565da.  v0:= 1I;
  #L1565dc.  goto L1565ba;
  #L1565de.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1565e0.  v1:= new `java.lang.IllegalStateException`;
  #L1565e4.  v2:= "Could not create data elements in dao" @kind object;
  #L1565e8.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1565ee.  throw v1;
  #L1565f0.  return v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1565de;
}
procedure `void` `clear`(`com.j256.ormlite.dao.BaseForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L156614.  v0:= v2.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L156618.  if v0 != 0 then goto L15661e;
  #L15661c.  return @kind void;
  #L15661e.  call temp:= `closeableIterator`(v2) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L156624.  v1:= temp @kind object;
  #Try_start0.  
  #L156626.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L15662c.  v0:= temp;
  #L15662e.  if v0 == 0 then goto L15664a;
  #L156632.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L156638.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L15663e.  goto L156626;
  #L156640.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L156642.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L156648.  throw v0;
  #L15664a.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L156650.  goto L15661c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L156640;
}
procedure `com.j256.ormlite.dao.Dao` `getDao`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.getDao:()Lcom/j256/ormlite/dao/Dao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L156670.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L156674.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.PreparedQuery` `getPreparedQuery`(`com.j256.ormlite.dao.BaseForeignCollection` v4 @kind this) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.getPreparedQuery:()Lcom/j256/ormlite/stmt/PreparedQuery;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L156688.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15668c.  if v0 != 0 then goto L156694;
  #L156690.  v0:= 0I;
  #L156692.  return v0 @kind object;
  #L156694.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L156698.  if v0 != 0 then goto L15671c;
  #L15669c.  v0:= new `com.j256.ormlite.stmt.SelectArg`;
  #L1566a0.  call `<init>`(v0) @signature `Lcom/j256/ormlite/stmt/SelectArg;.<init>:()V` @kind direct;
  #L1566a6.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` @kind object;
  #L1566aa.  call `setValue`(v0, v1) @signature `Lcom/j256/ormlite/stmt/SelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L1566b0.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1566b4.  call temp:= `queryBuilder`(v1) @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @kind interface;
  #L1566ba.  v1:= temp @kind object;
  #L1566bc.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` @kind object;
  #L1566c0.  if v2 == 0 then goto L1566d2;
  #L1566c4.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderColumn` @type ^`java.lang.String` @kind object;
  #L1566c8.  v3:= v4.`com.j256.ormlite.dao.BaseForeignCollection.orderAscending` @type ^`boolean` @kind boolean;
  #L1566cc.  call temp:= `orderBy`(v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/QueryBuilder;.orderBy:(Ljava/lang/String;Z)Lcom/j256/ormlite/stmt/QueryBuilder;` @kind virtual;
  #L1566d2.  call temp:= `where`(v1) @signature `Lcom/j256/ormlite/stmt/QueryBuilder;.where:()Lcom/j256/ormlite/stmt/Where;` @kind virtual;
  #L1566d8.  v1:= temp @kind object;
  #L1566da.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.foreignFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L1566de.  call temp:= `getColumnName`(v2) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L1566e4.  v2:= temp @kind object;
  #L1566e6.  call temp:= `eq`(v1, v2, v0) @signature `Lcom/j256/ormlite/stmt/Where;.eq:(Ljava/lang/String;Ljava/lang/Object;)Lcom/j256/ormlite/stmt/Where;` @kind virtual;
  #L1566ec.  v0:= temp @kind object;
  #L1566ee.  call temp:= `prepare`(v0) @signature `Lcom/j256/ormlite/stmt/Where;.prepare:()Lcom/j256/ormlite/stmt/PreparedQuery;` @kind virtual;
  #L1566f4.  v0:= temp @kind object;
  #L1566f6.  v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` := v0 @kind object;
  #L1566fa.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L1566fe.  v0:= instanceof @variable v0 @type ^`com.j256.ormlite.stmt.mapped.MappedPreparedStmt` @kind boolean;
  #L156702.  if v0 == 0 then goto L15671c;
  #L156706.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L15670a.  v0:= (`com.j256.ormlite.stmt.mapped.MappedPreparedStmt`) v0 @kind object;
  #L15670e.  v1:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parent` @type ^`java.lang.Object` @kind object;
  #L156712.  v2:= v4.`com.j256.ormlite.dao.BaseForeignCollection.parentId` @type ^`java.lang.Object` @kind object;
  #L156716.  call `setParentInformation`(v0, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedPreparedStmt;.setParentInformation:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L15671c.  v0:= v4.`com.j256.ormlite.dao.BaseForeignCollection.preparedQuery` @type ^`com.j256.ormlite.stmt.PreparedQuery` @kind object;
  #L156720.  goto L156692;
}
procedure `int` `refresh`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L156734.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L156738.  if v0 != 0 then goto L156740;
  #L15673c.  v0:= 0I;
  #L15673e.  return v0;
  #L156740.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L156744.  call temp:= `refresh`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @kind interface;
  #L15674a.  v0:= temp;
  #L15674c.  goto L15673e;
}
procedure `boolean` `remove`(`java.lang.Object` v0 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `removeAll`(`java.util.Collection` v0 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `retainAll`(`com.j256.ormlite.dao.BaseForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L156760.  v0:= 0I;
  #L156762.  v1:= v3.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L156766.  if v1 != 0 then goto L15676c;
  #L15676a.  return v0;
  #L15676c.  call temp:= `closeableIterator`(v3) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L156772.  v1:= temp @kind object;
  #Try_start0.  
  #L156774.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L15677a.  v2:= temp;
  #L15677c.  if v2 == 0 then goto L15679e;
  #L156780.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L156786.  v2:= temp @kind object;
  #L156788.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L15678e.  v2:= temp;
  #L156790.  if v2 != 0 then goto L156774;
  #L156794.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L15679a.  v0:= 1I;
  #L15679c.  goto L156774;
  #L15679e.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1567a4.  goto L15676a;
  #L1567a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1567a8.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1567ae.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1567a6;
}
procedure `int` `update`(`com.j256.ormlite.dao.BaseForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1567cc.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1567d0.  if v0 != 0 then goto L1567d8;
  #L1567d4.  v0:= 0I;
  #L1567d6.  return v0;
  #L1567d8.  v0:= v1.`com.j256.ormlite.dao.BaseForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1567dc.  call temp:= `update`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @kind interface;
  #L1567e2.  v0:= temp;
  #L1567e4.  goto L1567d6;
}

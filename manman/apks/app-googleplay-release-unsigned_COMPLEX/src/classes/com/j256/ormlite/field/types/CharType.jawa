record `com.j256.ormlite.field.types.CharType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.CharacterObjectType` @kind class {
}
global `com.j256.ormlite.field.types.CharType` `@@com.j256.ormlite.field.types.CharType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/CharType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L161a1c.  v0:= new `com.j256.ormlite.field.types.CharType`;
  #L161a20.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/CharType;.<init>:()V` @kind direct;
  #L161a26.  `@@com.j256.ormlite.field.types.CharType.singleTon` @type ^`com.j256.ormlite.field.types.CharType` := v0 @kind object;
  #L161a2a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.CharType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/CharType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L161a3c.  v0:= `@@com.j256.ormlite.field.SqlType.CHAR` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L161a40.  v1:= 1I;
  #L161a42.  v1:= new `java.lang.Class`[v1];
  #L161a46.  v2:= 0I;
  #L161a48.  v3:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L161a4c.  v1[v2]:= v3 @kind object;
  #L161a50.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L161a56.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.CharType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/CharType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L161a68.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L161a6e.  return @kind void;
}
procedure `com.j256.ormlite.field.types.CharType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/CharType;.getSingleton:()Lcom/j256/ormlite/field/types/CharType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L161a80.  v0:= `@@com.j256.ormlite.field.types.CharType.singleTon` @type ^`com.j256.ormlite.field.types.CharType` @kind object;
  #L161a84.  return v0 @kind object;
}
procedure `boolean` `isPrimitive`(`com.j256.ormlite.field.types.CharType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/CharType;.isPrimitive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161a98.  v0:= 1I;
  #L161a9a.  return v0;
}
procedure `java.lang.Object` `javaToSqlArg`(`com.j256.ormlite.field.types.CharType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/CharType;.javaToSqlArg:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161aac.  v3:= (`java.lang.Character`) v3 @kind object;
  #L161ab0.  if v3 == 0 then goto L161ac0;
  #L161ab4.  call temp:= `charValue`(v3) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L161aba.  v0:= temp;
  #L161abc.  if v0 != 0 then goto L161ac2;
  #L161ac0.  v3:= 0I;
  #L161ac2.  return v3 @kind object;
}

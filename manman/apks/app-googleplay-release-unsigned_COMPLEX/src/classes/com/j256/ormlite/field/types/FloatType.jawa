record `com.j256.ormlite.field.types.FloatType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.FloatObjectType` @kind class {
}
global `com.j256.ormlite.field.types.FloatType` `@@com.j256.ormlite.field.types.FloatType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/FloatType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L162b24.  v0:= new `com.j256.ormlite.field.types.FloatType`;
  #L162b28.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/FloatType;.<init>:()V` @kind direct;
  #L162b2e.  `@@com.j256.ormlite.field.types.FloatType.singleTon` @type ^`com.j256.ormlite.field.types.FloatType` := v0 @kind object;
  #L162b32.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.FloatType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/FloatType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L162b44.  v0:= `@@com.j256.ormlite.field.SqlType.FLOAT` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L162b48.  v1:= 1I;
  #L162b4a.  v1:= new `java.lang.Class`[v1];
  #L162b4e.  v2:= 0I;
  #L162b50.  v3:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L162b54.  v1[v2]:= v3 @kind object;
  #L162b58.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L162b5e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.FloatType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/FloatType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L162b70.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/FloatObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L162b76.  return @kind void;
}
procedure `com.j256.ormlite.field.types.FloatType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/FloatType;.getSingleton:()Lcom/j256/ormlite/field/types/FloatType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L162b88.  v0:= `@@com.j256.ormlite.field.types.FloatType.singleTon` @type ^`com.j256.ormlite.field.types.FloatType` @kind object;
  #L162b8c.  return v0 @kind object;
}
procedure `boolean` `isPrimitive`(`com.j256.ormlite.field.types.FloatType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/FloatType;.isPrimitive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162ba0.  v0:= 1I;
  #L162ba2.  return v0;
}

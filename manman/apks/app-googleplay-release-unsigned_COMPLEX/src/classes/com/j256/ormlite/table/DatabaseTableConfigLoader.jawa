record `com.j256.ormlite.table.DatabaseTableConfigLoader` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_END_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_FIELDS_END` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_FIELDS_START` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_START_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.FIELD_NAME_DATA_CLASS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.FIELD_NAME_TABLE_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfigLoader` v0 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16f1d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16f1de.  return @kind void;
}
procedure `com.j256.ormlite.table.DatabaseTableConfig` `fromReader`(`java.io.BufferedReader` v7 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16f1f0.  v3:= 1I;
  #L16f1f2.  v2:= 0I;
  #L16f1f4.  v0:= new `com.j256.ormlite.table.DatabaseTableConfig`;
  #L16f1f8.  call `<init>`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:()V` @kind direct;
  #L16f1fe.  v1:= v2;
  #Try_start0.  
  #L16f200.  call temp:= `readLine`(v7) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #Try_end0.  
  #L16f206.  v4:= temp @kind object;
  #L16f208.  if v4 != 0 then goto L16f222;
  #L16f20c.  if v1 == 0 then goto L16f2d0;
  #L16f210.  return v0 @kind object;
  #L16f212.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L16f214.  v1:= "Could not read DatabaseTableConfig from stream" @kind object;
  #L16f218.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16f21e.  v0:= temp @kind object;
  #L16f220.  throw v0;
  #L16f222.  v5:= "# --table-end--" @kind object;
  #L16f226.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L16f22c.  v5:= temp;
  #L16f22e.  if v5 != 0 then goto L16f20c;
  #L16f232.  v5:= "# --table-fields-start--" @kind object;
  #L16f236.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L16f23c.  v5:= temp;
  #L16f23e.  if v5 == 0 then goto L16f24a;
  #L16f242.  call `readFields`(v7, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readFields:(Ljava/io/BufferedReader;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @kind static;
  #L16f248.  goto L16f200;
  #L16f24a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L16f250.  v5:= temp;
  #L16f252.  if v5 == 0 then goto L16f200;
  #L16f256.  v5:= "#" @kind object;
  #L16f25a.  call temp:= `startsWith`(v4, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L16f260.  v5:= temp;
  #L16f262.  if v5 != 0 then goto L16f200;
  #L16f266.  v5:= "# --table-start--" @kind object;
  #L16f26a.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L16f270.  v5:= temp;
  #L16f272.  if v5 != 0 then goto L16f200;
  #L16f276.  v1:= "=" @kind object;
  #L16f27a.  v5:= -2I;
  #L16f27c.  call temp:= `split`(v4, v1, v5) @signature `Ljava/lang/String;.split:(Ljava/lang/String;I)[Ljava/lang/String;` @kind virtual;
  #L16f282.  v1:= temp @kind object;
  #L16f284.  v5:= length @variable v1;
  #L16f286.  v6:= 2I;
  #L16f288.  if v5 == v6 then goto L16f2be;
  #L16f28c.  v0:= new `java.sql.SQLException`;
  #L16f290.  v1:= new `java.lang.StringBuilder`;
  #L16f294.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16f29a.  v2:= "DatabaseTableConfig reading from stream cannot parse line: " @kind object;
  #L16f29e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f2a4.  v1:= temp @kind object;
  #L16f2a6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f2ac.  v1:= temp @kind object;
  #L16f2ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16f2b4.  v1:= temp @kind object;
  #L16f2b6.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16f2bc.  throw v0;
  #L16f2be.  v4:= v1[v2] @kind object;
  #L16f2c2.  v1:= v1[v3] @kind object;
  #L16f2c6.  call `readTableField`(v0, v4, v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readTableField:(Lcom/j256/ormlite/table/DatabaseTableConfig;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L16f2cc.  v1:= v3;
  #L16f2ce.  goto L16f200;
  #L16f2d0.  v0:= 0I;
  #L16f2d2.  goto L16f210;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L16f212;
}
procedure `java.util.List` `loadDatabaseConfigFromReader`(`java.io.BufferedReader` v2 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.loadDatabaseConfigFromReader:(Ljava/io/BufferedReader;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L16f2f4.  v0:= new `java.util.ArrayList`;
  #L16f2f8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16f2fe.  call temp:= `fromReader`(v2) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @kind static;
  #L16f304.  v1:= temp @kind object;
  #L16f306.  if v1 != 0 then goto L16f30c;
  #L16f30a.  return v0 @kind object;
  #L16f30c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16f312.  goto L16f2fe;
}
procedure `void` `readFields`(`java.io.BufferedReader` v3 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v4 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readFields:(Ljava/io/BufferedReader;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L16f324.  v0:= new `java.util.ArrayList`;
  #L16f328.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L16f32e.  call temp:= `readLine`(v3) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #Try_end0.  
  #L16f334.  v1:= temp @kind object;
  #L16f336.  if v1 == 0 then goto L16f34a;
  #L16f33a.  v2:= "# --table-fields-end--" @kind object;
  #L16f33e.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L16f344.  v1:= temp;
  #L16f346.  if v1 == 0 then goto L16f362;
  #L16f34a.  call `setFieldConfigs`(v4, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setFieldConfigs:(Ljava/util/List;)V` @kind virtual;
  #L16f350.  return @kind void;
  #L16f352.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L16f354.  v1:= "Could not read next field from config file" @kind object;
  #L16f358.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16f35e.  v0:= temp @kind object;
  #L16f360.  throw v0;
  #L16f362.  call temp:= `fromReader`(v3) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @kind static;
  #L16f368.  v1:= temp @kind object;
  #L16f36a.  if v1 == 0 then goto L16f34a;
  #L16f36e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16f374.  goto L16f32e;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L16f352;
}
procedure `void` `readTableField`(`com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readTableField:(Lcom/j256/ormlite/table/DatabaseTableConfig;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L16f398.  v0:= "dataClass" @kind object;
  #L16f39c.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L16f3a2.  v0:= temp;
  #L16f3a4.  if v0 == 0 then goto L16f3ec;
  #Try_start0.  
  #L16f3a8.  call temp:= `forName`(v5) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L16f3ae.  v0:= temp @kind object;
  #L16f3b0.  call `setDataClass`(v3, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setDataClass:(Ljava/lang/Class;)V` @kind virtual;
  #Try_end0.  
  #L16f3b6.  return @kind void;
  #L16f3b8.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L16f3ba.  v0:= new `java.lang.IllegalArgumentException`;
  #L16f3be.  v1:= new `java.lang.StringBuilder`;
  #L16f3c2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16f3c8.  v2:= "Unknown class specified for dataClass: " @kind object;
  #L16f3cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f3d2.  v1:= temp @kind object;
  #L16f3d4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f3da.  v1:= temp @kind object;
  #L16f3dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16f3e2.  v1:= temp @kind object;
  #L16f3e4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16f3ea.  throw v0;
  #L16f3ec.  v0:= "tableName" @kind object;
  #L16f3f0.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L16f3f6.  v0:= temp;
  #L16f3f8.  if v0 == 0 then goto L16f3b6;
  #L16f3fc.  call `setTableName`(v3, v5) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setTableName:(Ljava/lang/String;)V` @kind virtual;
  #L16f402.  goto L16f3b6;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L16f3b8;
}
procedure `void` `write`(`java.io.BufferedWriter` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.write:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L16f424.  call `writeConfig`(v2, v3) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.writeConfig:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @kind static;
  #Try_end0.  
  #L16f42a.  return @kind void;
  #L16f42c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L16f42e.  v1:= "Could not write config to writer" @kind object;
  #L16f432.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16f438.  v0:= temp @kind object;
  #L16f43a.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L16f42c;
}
procedure `void` `writeConfig`(`java.io.BufferedWriter` v3 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v4 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.writeConfig:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L16f45c.  v2:= 61I;
  #L16f460.  v0:= "# --table-start--" @kind object;
  #L16f464.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L16f46a.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L16f470.  call temp:= `getDataClass`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L16f476.  v0:= temp @kind object;
  #L16f478.  if v0 == 0 then goto L16f4ac;
  #L16f47c.  v0:= "dataClass" @kind object;
  #L16f480.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L16f486.  v0:= temp @kind object;
  #L16f488.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L16f48e.  v0:= temp @kind object;
  #L16f490.  call temp:= `getDataClass`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L16f496.  v1:= temp @kind object;
  #L16f498.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L16f49e.  v1:= temp @kind object;
  #L16f4a0.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L16f4a6.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L16f4ac.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16f4b2.  v0:= temp @kind object;
  #L16f4b4.  if v0 == 0 then goto L16f4e0;
  #L16f4b8.  v0:= "tableName" @kind object;
  #L16f4bc.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L16f4c2.  v0:= temp @kind object;
  #L16f4c4.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L16f4ca.  v0:= temp @kind object;
  #L16f4cc.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16f4d2.  v1:= temp @kind object;
  #L16f4d4.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L16f4da.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L16f4e0.  v0:= "# --table-fields-start--" @kind object;
  #L16f4e4.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L16f4ea.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L16f4f0.  call temp:= `getFieldConfigs`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldConfigs:()Ljava/util/List;` @kind virtual;
  #L16f4f6.  v0:= temp @kind object;
  #L16f4f8.  if v0 == 0 then goto L16f534;
  #L16f4fc.  call temp:= `getFieldConfigs`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldConfigs:()Ljava/util/List;` @kind virtual;
  #L16f502.  v0:= temp @kind object;
  #L16f504.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16f50a.  v1:= temp @kind object;
  #L16f50c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16f512.  v0:= temp;
  #L16f514.  if v0 == 0 then goto L16f534;
  #L16f518.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16f51e.  v0:= temp @kind object;
  #L16f520.  v0:= (`com.j256.ormlite.field.DatabaseFieldConfig`) v0 @kind object;
  #L16f524.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16f52a.  v2:= temp @kind object;
  #L16f52c.  call `write`(v3, v0, v2) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.write:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/String;)V` @kind static;
  #L16f532.  goto L16f50c;
  #L16f534.  v0:= "# --table-fields-end--" @kind object;
  #L16f538.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L16f53e.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L16f544.  v0:= "# --table-end--" @kind object;
  #L16f548.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L16f54e.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L16f554.  return @kind void;
}

record `com.j256.ormlite.stmt.query.In` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.BaseComparison` @kind class {
  `boolean` `com.j256.ormlite.stmt.query.In.in` @AccessFlag PRIVATE_FINAL;
  `java.lang.Iterable` `com.j256.ormlite.stmt.query.In.objects` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.In` v2 @kind this, `java.lang.String` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.Iterable` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/stmt/query/In;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Iterable;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L16dbcc.  v0:= 0I;
  #L16dbce.  v1:= 1I;
  #L16dbd0.  call `<init>`(v2, v3, v4, v0, v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Z)V` @kind direct;
  #L16dbd6.  v2.`com.j256.ormlite.stmt.query.In.objects` @type ^`java.lang.Iterable` := v5 @kind object;
  #L16dbda.  v2.`com.j256.ormlite.stmt.query.In.in` @type ^`boolean` := v6 @kind boolean;
  #L16dbde.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.In` v2 @kind this, `java.lang.String` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.Object`[] v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/stmt/query/In;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;[Ljava/lang/Object;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L16dbf0.  v0:= 0I;
  #L16dbf2.  v1:= 1I;
  #L16dbf4.  call `<init>`(v2, v3, v4, v0, v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Z)V` @kind direct;
  #L16dbfa.  call temp:= `asList`(v5) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L16dc00.  v0:= temp @kind object;
  #L16dc02.  v2.`com.j256.ormlite.stmt.query.In.objects` @type ^`java.lang.Iterable` := v0 @kind object;
  #L16dc06.  v2.`com.j256.ormlite.stmt.query.In.in` @type ^`boolean` := v6 @kind boolean;
  #L16dc0a.  return @kind void;
}
procedure `void` `appendOperation`(`com.j256.ormlite.stmt.query.In` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/query/In;.appendOperation:(Ljava/lang/StringBuilder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16dc1c.  v0:= v1.`com.j256.ormlite.stmt.query.In.in` @type ^`boolean` @kind boolean;
  #L16dc20.  if v0 == 0 then goto L16dc30;
  #L16dc24.  v0:= "IN " @kind object;
  #L16dc28.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16dc2e.  return @kind void;
  #L16dc30.  v0:= "NOT IN " @kind object;
  #L16dc34.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16dc3a.  goto L16dc2e;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.In` v0 @kind this, `com.j256.ormlite.db.DatabaseType` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/In;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L16dc4c.  call `appendSql`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind super;
  #L16dc52.  return @kind void;
}
procedure `void` `appendValue`(`com.j256.ormlite.stmt.query.In` v8 @kind this, `com.j256.ormlite.db.DatabaseType` v9 @kind object, `java.lang.StringBuilder` v10 @kind object, `java.util.List` v11 @kind object) @signature `Lcom/j256/ormlite/stmt/query/In;.appendValue:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16dc64.  v0:= 40I;
  #L16dc68.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16dc6e.  v0:= 1I;
  #L16dc70.  v1:= v8.`com.j256.ormlite.stmt.query.In.objects` @type ^`java.lang.Iterable` @kind object;
  #L16dc74.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16dc7a.  v7:= temp @kind object;
  #L16dc7c.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16dc82.  v1:= temp;
  #L16dc84.  if v1 == 0 then goto L16dd00;
  #L16dc88.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16dc8e.  v5:= temp @kind object;
  #L16dc90.  if v5 != 0 then goto L16dcd6;
  #L16dc94.  v0:= new `java.lang.IllegalArgumentException`;
  #L16dc98.  v1:= new `java.lang.StringBuilder`;
  #L16dc9c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16dca2.  v2:= "one of the IN values for '" @kind object;
  #L16dca6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16dcac.  v1:= temp @kind object;
  #L16dcae.  v2:= v8.`com.j256.ormlite.stmt.query.In.columnName` @type ^`java.lang.String` @kind object;
  #L16dcb2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16dcb8.  v1:= temp @kind object;
  #L16dcba.  v2:= "' is null" @kind object;
  #L16dcbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16dcc4.  v1:= temp @kind object;
  #L16dcc6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16dccc.  v1:= temp @kind object;
  #L16dcce.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16dcd4.  throw v0;
  #L16dcd6.  if v0 == 0 then goto L16dcf2;
  #L16dcda.  v6:= 0I;
  #L16dcdc.  v2:= v8.`com.j256.ormlite.stmt.query.In.fieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16dce0.  v0:= v8 @kind object;
  #L16dce2.  v1:= v9 @kind object;
  #L16dce4.  v3:= v10 @kind object;
  #L16dce6.  v4:= v11 @kind object;
  #L16dce8.  call `appendArgOrValue`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendArgOrValue:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;Ljava/lang/Object;)V` @kind super;
  #L16dcee.  v0:= v6;
  #L16dcf0.  goto L16dc7c;
  #L16dcf2.  v1:= 44I;
  #L16dcf6.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16dcfc.  v6:= v0;
  #L16dcfe.  goto L16dcdc;
  #L16dd00.  v0:= ") " @kind object;
  #L16dd04.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16dd0a.  return @kind void;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.stmt.query.In` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/In;.getColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L16dd1c.  call temp:= `getColumnName`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.getColumnName:()Ljava/lang/String;` @kind super;
  #L16dd22.  v0:= temp @kind object;
  #L16dd24.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.stmt.query.In` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/In;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L16dd38.  call temp:= `toString`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.toString:()Ljava/lang/String;` @kind super;
  #L16dd3e.  v0:= temp @kind object;
  #L16dd40.  return v0 @kind object;
}

record `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedDeleteCollection` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16c74c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L16c752.  return @kind void;
}
procedure `void` `appendWhereIds`(`com.j256.ormlite.db.DatabaseType` v4 @kind object, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.StringBuilder` v6 @kind object, `int` v7 , `com.j256.ormlite.field.FieldType`[] v8 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendWhereIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;I[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16c764.  v1:= 0I;
  #L16c766.  v0:= "WHERE " @kind object;
  #L16c76a.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c770.  call temp:= `getColumnName`(v5) @signature `Lcom/j256/ormlite/field/FieldType;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L16c776.  v0:= temp @kind object;
  #L16c778.  call `appendEscapedEntityName`(v4, v6, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.appendEscapedEntityName:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind interface;
  #L16c77e.  v0:= " IN (" @kind object;
  #L16c782.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c788.  v0:= 1I;
  #L16c78a.  v2:= v1;
  #L16c78c.  if v2 >= v7 then goto L16c7ba;
  #L16c790.  if v0 == 0 then goto L16c7ae;
  #L16c794.  v0:= v1;
  #L16c796.  v3:= 63I;
  #L16c79a.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c7a0.  if v8 == 0 then goto L16c7a8;
  #L16c7a4.  v8[v2]:= v5 @kind object;
  #L16c7a8.  v2:= v2 + 1;
  #L16c7ac.  goto L16c78c;
  #L16c7ae.  v3:= 44I;
  #L16c7b2.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c7b8.  goto L16c796;
  #L16c7ba.  v0:= ") " @kind object;
  #L16c7be.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c7c4.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` `build`(`com.j256.ormlite.db.DatabaseType` v4 @kind object, `com.j256.ormlite.table.TableInfo` v5 @kind object, `int` v6 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16c7d8.  call temp:= `getIdField`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16c7de.  v0:= temp @kind object;
  #L16c7e0.  if v0 != 0 then goto L16c82a;
  #L16c7e4.  v0:= new `java.sql.SQLException`;
  #L16c7e8.  v1:= new `java.lang.StringBuilder`;
  #L16c7ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16c7f2.  v2:= "Cannot delete " @kind object;
  #L16c7f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c7fc.  v1:= temp @kind object;
  #L16c7fe.  call temp:= `getDataClass`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L16c804.  v2:= temp @kind object;
  #L16c806.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c80c.  v1:= temp @kind object;
  #L16c80e.  v2:= " because it doesn't have an id field defined" @kind object;
  #L16c812.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c818.  v1:= temp @kind object;
  #L16c81a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c820.  v1:= temp @kind object;
  #L16c822.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16c828.  throw v0;
  #L16c82a.  v1:= new `java.lang.StringBuilder`;
  #L16c82e.  v2:= 128I;
  #L16c832.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L16c838.  v2:= "DELETE FROM " @kind object;
  #L16c83c.  call temp:= `getTableName`(v5) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16c842.  v3:= temp @kind object;
  #L16c844.  call `appendTableName`(v4, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L16c84a.  v2:= new `com.j256.ormlite.field.FieldType`[v6];
  #L16c84e.  call `appendWhereIds`(v4, v0, v1, v6, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.appendWhereIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;I[Lcom/j256/ormlite/field/FieldType;)V` @kind static;
  #L16c854.  v0:= new `com.j256.ormlite.stmt.mapped.MappedDeleteCollection`;
  #L16c858.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c85e.  v1:= temp @kind object;
  #L16c860.  call `<init>`(v0, v5, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L16c866.  return v0 @kind object;
}
procedure `int` `deleteIds`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.util.Collection` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.deleteIds:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/util/Collection;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16c878.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L16c87e.  v0:= temp;
  #L16c880.  call temp:= `build`(v6, v7, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @kind static;
  #L16c886.  v1:= temp @kind object;
  #L16c888.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L16c88e.  v0:= temp;
  #L16c890.  v2:= new `java.lang.Object`[v0];
  #L16c894.  call temp:= `getIdField`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16c89a.  v3:= temp @kind object;
  #L16c89c.  v0:= 0I;
  #L16c89e.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16c8a4.  v4:= temp @kind object;
  #L16c8a6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16c8ac.  v5:= temp;
  #L16c8ae.  if v5 == 0 then goto L16c8cc;
  #L16c8b2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16c8b8.  v5:= temp @kind object;
  #L16c8ba.  call temp:= `convertJavaFieldToSqlArgValue`(v3, v5) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16c8c0.  v5:= temp @kind object;
  #L16c8c2.  v2[v0]:= v5 @kind object;
  #L16c8c6.  v0:= v0 + 1;
  #L16c8ca.  goto L16c8a6;
  #L16c8cc.  call temp:= `getDataClass`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L16c8d2.  v0:= temp @kind object;
  #L16c8d4.  call temp:= `updateRows`(v8, v0, v1, v2, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind static;
  #L16c8da.  v0:= temp;
  #L16c8dc.  return v0;
}
procedure `int` `deleteObjects`(`com.j256.ormlite.db.DatabaseType` v6 @kind object, `com.j256.ormlite.table.TableInfo` v7 @kind object, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.util.Collection` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.deleteObjects:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/util/Collection;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16c8f0.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L16c8f6.  v0:= temp;
  #L16c8f8.  call temp:= `build`(v6, v7, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;I)Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;` @kind static;
  #L16c8fe.  v1:= temp @kind object;
  #L16c900.  call temp:= `size`(v9) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L16c906.  v0:= temp;
  #L16c908.  v2:= new `java.lang.Object`[v0];
  #L16c90c.  call temp:= `getIdField`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16c912.  v3:= temp @kind object;
  #L16c914.  v0:= 0I;
  #L16c916.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16c91c.  v4:= temp @kind object;
  #L16c91e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16c924.  v5:= temp;
  #L16c926.  if v5 == 0 then goto L16c944;
  #L16c92a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16c930.  v5:= temp @kind object;
  #L16c932.  call temp:= `extractJavaFieldToSqlArgValue`(v3, v5) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16c938.  v5:= temp @kind object;
  #L16c93a.  v2[v0]:= v5 @kind object;
  #L16c93e.  v0:= v0 + 1;
  #L16c942.  goto L16c91e;
  #L16c944.  call temp:= `getDataClass`(v7) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L16c94a.  v0:= temp @kind object;
  #L16c94c.  call temp:= `updateRows`(v8, v0, v1, v2, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind static;
  #L16c952.  v0:= temp;
  #L16c954.  return v0;
}
procedure `int` `updateRows`(`com.j256.ormlite.support.DatabaseConnection` v6 @kind object, `java.lang.Class` v7 @kind object, `com.j256.ormlite.stmt.mapped.MappedDeleteCollection` v8 @kind object, `java.lang.Object`[] v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;.updateRows:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Class;Lcom/j256/ormlite/stmt/mapped/MappedDeleteCollection;[Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L16c968.  v0:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L16c96c.  v1:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16c970.  call temp:= `delete`(v6, v0, v9, v1) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L16c976.  v1:= temp;
  #L16c978.  if v1 <= 0 then goto L16c998;
  #L16c97c.  if v10 == 0 then goto L16c998;
  #L16c980.  v2:= length @variable v9;
  #L16c982.  v0:= 0I;
  #L16c984.  if v0 >= v2 then goto L16c998;
  #L16c988.  v3:= v9[v0] @kind object;
  #L16c98c.  call `remove`(v10, v7, v3) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #L16c992.  v0:= v0 + 1;
  #L16c996.  goto L16c984;
  #L16c998.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16c99c.  v2:= "delete-collection with statement '{}' and {} args, changed {} rows" @kind object;
  #L16c9a0.  v3:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L16c9a4.  v4:= length @variable v9;
  #L16c9a6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16c9ac.  v4:= temp @kind object;
  #L16c9ae.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16c9b4.  v5:= temp @kind object;
  #L16c9b6.  call `debug`(v0, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L16c9bc.  v0:= length @variable v9;
  #L16c9be.  if v0 <= 0 then goto L16c9d0;
  #L16c9c2.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedDeleteCollection.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16c9c6.  v2:= "delete-collection arguments: {}" @kind object;
  #L16c9ca.  call `trace`(v0, v2, v9) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L16c9d0.  return v1;
  #L16c9d2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16c9d4.  v1:= new `java.lang.StringBuilder`;
  #L16c9d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16c9de.  v2:= "Unable to run delete collection stmt: " @kind object;
  #L16c9e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c9e8.  v1:= temp @kind object;
  #L16c9ea.  v2:= v8.`com.j256.ormlite.stmt.mapped.MappedDeleteCollection.statement` @type ^`java.lang.String` @kind object;
  #L16c9ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c9f4.  v1:= temp @kind object;
  #L16c9f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c9fc.  v1:= temp @kind object;
  #L16c9fe.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16ca04.  v0:= temp @kind object;
  #L16ca06.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16c9d2;
}

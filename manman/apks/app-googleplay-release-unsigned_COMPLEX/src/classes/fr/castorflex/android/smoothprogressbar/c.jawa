record `fr.castorflex.android.smoothprogressbar.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `android.graphics.drawable.Drawable` `a`(`int`[] v2 @kind object, `float` v3 ) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:([IF)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L170f94.  if v2 == 0 then goto L170f9e;
  #L170f98.  v0:= length @variable v2;
  #L170f9a.  if v0 != 0 then goto L170fa2;
  #L170f9e.  v0:= 0I;
  #L170fa0.  return v0 @kind object;
  #L170fa2.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L170fa6.  v1:= new `fr.castorflex.android.smoothprogressbar.a`;
  #L170faa.  call `<init>`(v1, v3, v2) @signature `Lfr/castorflex/android/smoothprogressbar/a;.<init>:(F[I)V` @kind direct;
  #L170fb0.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L170fb6.  goto L170fa0;
}
procedure `void` `a`(`float` v2 ) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(F)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L170fc8.  v0:= 0I;
  #L170fca.  v0:= fcmpg(v2, v0);
  #L170fce.  if v0 > 0 then goto L170fe2;
  #L170fd2.  v0:= new `java.lang.IllegalArgumentException`;
  #L170fd6.  v1:= "Speed must be >= 0" @kind object;
  #L170fda.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L170fe0.  throw v0;
  #L170fe2.  return @kind void;
}
procedure `void` `a`(`float` v5 , `java.lang.String` v6 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(FLjava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L170ff4.  v0:= 0I;
  #L170ff6.  v0:= fcmpg(v5, v0);
  #L170ffa.  if v0 >= 0 then goto L171030;
  #L170ffe.  v0:= new `java.lang.IllegalArgumentException`;
  #L171002.  v1:= "%s %d must be positive" @kind object;
  #L171006.  v2:= 2I;
  #L171008.  v2:= new `java.lang.Object`[v2];
  #L17100c.  v3:= 0I;
  #L17100e.  v2[v3]:= v6 @kind object;
  #L171012.  v3:= 1I;
  #L171014.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L17101a.  v4:= temp @kind object;
  #L17101c.  v2[v3]:= v4 @kind object;
  #L171020.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L171026.  v1:= temp @kind object;
  #L171028.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17102e.  throw v0;
  #L171030.  return @kind void;
}
procedure `void` `a`(`int` v4 , `java.lang.String` v5 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(ILjava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L171044.  if v4 > 0 then goto L17106c;
  #L171048.  v0:= new `java.lang.IllegalArgumentException`;
  #L17104c.  v1:= "%s must not be null" @kind object;
  #L171050.  v2:= 1I;
  #L171052.  v2:= new `java.lang.Object`[v2];
  #L171056.  v3:= 0I;
  #L171058.  v2[v3]:= v5 @kind object;
  #L17105c.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L171062.  v1:= temp @kind object;
  #L171064.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17106a.  throw v0;
  #L17106c.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L171080.  if v4 != 0 then goto L1710a8;
  #L171084.  v0:= new `java.lang.IllegalArgumentException`;
  #L171088.  v1:= "%s must be not null" @kind object;
  #L17108c.  v2:= 1I;
  #L17108e.  v2:= new `java.lang.Object`[v2];
  #L171092.  v3:= 0I;
  #L171094.  v2[v3]:= v5 @kind object;
  #L171098.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L17109e.  v1:= temp @kind object;
  #L1710a0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1710a6.  throw v0;
  #L1710a8.  return @kind void;
}
procedure `void` `a`(`int`[] v2 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:([I)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1710bc.  if v2 == 0 then goto L1710c6;
  #L1710c0.  v0:= length @variable v2;
  #L1710c2.  if v0 != 0 then goto L1710d6;
  #L1710c6.  v0:= new `java.lang.IllegalArgumentException`;
  #L1710ca.  v1:= "You must provide at least 1 color" @kind object;
  #L1710ce.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1710d4.  throw v0;
  #L1710d6.  return @kind void;
}

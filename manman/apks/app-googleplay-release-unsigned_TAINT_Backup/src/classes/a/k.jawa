record `a.k` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `a.k.d` @AccessFlag FINAL;
  `boolean` `a.k.e` @AccessFlag FINAL;
  `java.lang.String`[] `a.k.f` @AccessFlag FINAL;
  `java.lang.String`[] `a.k.g` @AccessFlag FINAL;
}
global `a.k` `@@a.k.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.k` `@@a.k.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.k` `@@a.k.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.h`[] `@@a.k.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L086a00.  v7:= 4I;
  #L086a02.  v6:= 3I;
  #L086a04.  v5:= 2I;
  #L086a06.  v4:= 0I;
  #L086a08.  v3:= 1I;
  #L086a0a.  v0:= 15I;
  #L086a0e.  v0:= new `a.h`[v0];
  #L086a12.  v1:= `@@a.h.aW` @type ^`a.h` @kind object;
  #L086a16.  v0[v4]:= v1 @kind object;
  #L086a1a.  v1:= `@@a.h.ba` @type ^`a.h` @kind object;
  #L086a1e.  v0[v3]:= v1 @kind object;
  #L086a22.  v1:= `@@a.h.aX` @type ^`a.h` @kind object;
  #L086a26.  v0[v5]:= v1 @kind object;
  #L086a2a.  v1:= `@@a.h.bb` @type ^`a.h` @kind object;
  #L086a2e.  v0[v6]:= v1 @kind object;
  #L086a32.  v1:= `@@a.h.bh` @type ^`a.h` @kind object;
  #L086a36.  v0[v7]:= v1 @kind object;
  #L086a3a.  v1:= 5I;
  #L086a3c.  v2:= `@@a.h.bg` @type ^`a.h` @kind object;
  #L086a40.  v0[v1]:= v2 @kind object;
  #L086a44.  v1:= 6I;
  #L086a46.  v2:= `@@a.h.ax` @type ^`a.h` @kind object;
  #L086a4a.  v0[v1]:= v2 @kind object;
  #L086a4e.  v1:= 7I;
  #L086a50.  v2:= `@@a.h.aH` @type ^`a.h` @kind object;
  #L086a54.  v0[v1]:= v2 @kind object;
  #L086a58.  v1:= 8I;
  #L086a5c.  v2:= `@@a.h.ay` @type ^`a.h` @kind object;
  #L086a60.  v0[v1]:= v2 @kind object;
  #L086a64.  v1:= 9I;
  #L086a68.  v2:= `@@a.h.aI` @type ^`a.h` @kind object;
  #L086a6c.  v0[v1]:= v2 @kind object;
  #L086a70.  v1:= 10I;
  #L086a74.  v2:= `@@a.h.af` @type ^`a.h` @kind object;
  #L086a78.  v0[v1]:= v2 @kind object;
  #L086a7c.  v1:= 11I;
  #L086a80.  v2:= `@@a.h.ag` @type ^`a.h` @kind object;
  #L086a84.  v0[v1]:= v2 @kind object;
  #L086a88.  v1:= 12I;
  #L086a8c.  v2:= `@@a.h.D` @type ^`a.h` @kind object;
  #L086a90.  v0[v1]:= v2 @kind object;
  #L086a94.  v1:= 13I;
  #L086a98.  v2:= `@@a.h.H` @type ^`a.h` @kind object;
  #L086a9c.  v0[v1]:= v2 @kind object;
  #L086aa0.  v1:= 14I;
  #L086aa4.  v2:= `@@a.h.h` @type ^`a.h` @kind object;
  #L086aa8.  v0[v1]:= v2 @kind object;
  #L086aac.  `@@a.k.h` @type ^`a.h`[] := v0 @kind object;
  #L086ab0.  v0:= new `a.k$a`;
  #L086ab4.  call `<init>`(v0, v3) @signature `La/k$a;.<init>:(Z)V` @kind direct;
  #L086aba.  v1:= `@@a.k.h` @type ^`a.h`[] @kind object;
  #L086abe.  call temp:= `a`(v0, v1) @signature `La/k$a;.a:([La/h;)La/k$a;` @kind virtual;
  #L086ac4.  v0:= temp @kind object;
  #L086ac6.  v1:= new `a.ac`[v7];
  #L086aca.  v2:= `@@a.ac.a` @type ^`a.ac` @kind object;
  #L086ace.  v1[v4]:= v2 @kind object;
  #L086ad2.  v2:= `@@a.ac.b` @type ^`a.ac` @kind object;
  #L086ad6.  v1[v3]:= v2 @kind object;
  #L086ada.  v2:= `@@a.ac.c` @type ^`a.ac` @kind object;
  #L086ade.  v1[v5]:= v2 @kind object;
  #L086ae2.  v2:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L086ae6.  v1[v6]:= v2 @kind object;
  #L086aea.  call temp:= `a`(v0, v1) @signature `La/k$a;.a:([La/ac;)La/k$a;` @kind virtual;
  #L086af0.  v0:= temp @kind object;
  #L086af2.  call temp:= `a`(v0, v3) @signature `La/k$a;.a:(Z)La/k$a;` @kind virtual;
  #L086af8.  v0:= temp @kind object;
  #L086afa.  call temp:= `a`(v0) @signature `La/k$a;.a:()La/k;` @kind virtual;
  #L086b00.  v0:= temp @kind object;
  #L086b02.  `@@a.k.a` @type ^`a.k` := v0 @kind object;
  #L086b06.  v0:= new `a.k$a`;
  #L086b0a.  v1:= `@@a.k.a` @type ^`a.k` @kind object;
  #L086b0e.  call `<init>`(v0, v1) @signature `La/k$a;.<init>:(La/k;)V` @kind direct;
  #L086b14.  v1:= new `a.ac`[v3];
  #L086b18.  v2:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L086b1c.  v1[v4]:= v2 @kind object;
  #L086b20.  call temp:= `a`(v0, v1) @signature `La/k$a;.a:([La/ac;)La/k$a;` @kind virtual;
  #L086b26.  v0:= temp @kind object;
  #L086b28.  call temp:= `a`(v0, v3) @signature `La/k$a;.a:(Z)La/k$a;` @kind virtual;
  #L086b2e.  v0:= temp @kind object;
  #L086b30.  call temp:= `a`(v0) @signature `La/k$a;.a:()La/k;` @kind virtual;
  #L086b36.  v0:= temp @kind object;
  #L086b38.  `@@a.k.b` @type ^`a.k` := v0 @kind object;
  #L086b3c.  v0:= new `a.k$a`;
  #L086b40.  call `<init>`(v0, v4) @signature `La/k$a;.<init>:(Z)V` @kind direct;
  #L086b46.  call temp:= `a`(v0) @signature `La/k$a;.a:()La/k;` @kind virtual;
  #L086b4c.  v0:= temp @kind object;
  #L086b4e.  `@@a.k.c` @type ^`a.k` := v0 @kind object;
  #L086b52.  return @kind void;
}
procedure `void` `<init>`(`a.k` v1 @kind this, `a.k$a` v2 @kind object) @signature `La/k;.<init>:(La/k$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L086b64.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L086b6a.  v0:= v2.`a.k$a.a` @type ^`boolean` @kind boolean;
  #L086b6e.  v1.`a.k.d` @type ^`boolean` := v0 @kind boolean;
  #L086b72.  v0:= v2.`a.k$a.b` @type ^`java.lang.String`[] @kind object;
  #L086b76.  v1.`a.k.f` @type ^`java.lang.String`[] := v0 @kind object;
  #L086b7a.  v0:= v2.`a.k$a.c` @type ^`java.lang.String`[] @kind object;
  #L086b7e.  v1.`a.k.g` @type ^`java.lang.String`[] := v0 @kind object;
  #L086b82.  v0:= v2.`a.k$a.d` @type ^`boolean` @kind boolean;
  #L086b86.  v1.`a.k.e` @type ^`boolean` := v0 @kind boolean;
  #L086b8a.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String`[] v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `La/k;.a:([Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L086b9c.  v0:= 0I;
  #L086b9e.  if v5 == 0 then goto L086bb2;
  #L086ba2.  if v6 == 0 then goto L086bb2;
  #L086ba6.  v1:= length @variable v5;
  #L086ba8.  if v1 == 0 then goto L086bb2;
  #L086bac.  v1:= length @variable v6;
  #L086bae.  if v1 != 0 then goto L086bb4;
  #L086bb2.  return v0;
  #L086bb4.  v2:= length @variable v5;
  #L086bb6.  v1:= v0;
  #L086bb8.  if v1 >= v2 then goto L086bb2;
  #L086bbc.  v3:= v5[v1] @kind object;
  #L086bc0.  call temp:= `a`(v6, v3) @signature `La/a/c;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L086bc6.  v3:= temp;
  #L086bc8.  v4:= -1I;
  #L086bca.  if v3 == v4 then goto L086bd2;
  #L086bce.  v0:= 1I;
  #L086bd0.  goto L086bb2;
  #L086bd2.  v1:= v1 + 1;
  #L086bd6.  goto L086bb8;
}
procedure `a.k` `b`(`a.k` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `La/k;.b:(Ljavax/net/ssl/SSLSocket;Z)La/k;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L086be8.  v0:= v4.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086bec.  if v0 == 0 then goto L086c80;
  #L086bf0.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L086bf4.  v1:= v4.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086bf8.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L086bfe.  v2:= temp @kind object;
  #L086c00.  call temp:= `a`(v0, v1, v2) @signature `La/a/c;.a:(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L086c06.  v0:= temp @kind object;
  #L086c08.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L086c0c.  v1:= v0 @kind object;
  #L086c0e.  v0:= v4.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086c12.  if v0 == 0 then goto L086c8c;
  #L086c16.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L086c1a.  v2:= v4.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086c1e.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L086c24.  v3:= temp @kind object;
  #L086c26.  call temp:= `a`(v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L086c2c.  v0:= temp @kind object;
  #L086c2e.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L086c32.  if v6 == 0 then goto L086c5c;
  #L086c36.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L086c3c.  v2:= temp @kind object;
  #L086c3e.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L086c42.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L086c48.  v2:= temp;
  #L086c4a.  v3:= -1I;
  #L086c4c.  if v2 == v3 then goto L086c5c;
  #L086c50.  v2:= "TLS_FALLBACK_SCSV" @kind object;
  #L086c54.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L086c5a.  v1:= temp @kind object;
  #L086c5c.  v2:= new `a.k$a`;
  #L086c60.  call `<init>`(v2, v4) @signature `La/k$a;.<init>:(La/k;)V` @kind direct;
  #L086c66.  call temp:= `a`(v2, v1) @signature `La/k$a;.a:([Ljava/lang/String;)La/k$a;` @kind virtual;
  #L086c6c.  v1:= temp @kind object;
  #L086c6e.  call temp:= `b`(v1, v0) @signature `La/k$a;.b:([Ljava/lang/String;)La/k$a;` @kind virtual;
  #L086c74.  v0:= temp @kind object;
  #L086c76.  call temp:= `a`(v0) @signature `La/k$a;.a:()La/k;` @kind virtual;
  #L086c7c.  v0:= temp @kind object;
  #L086c7e.  return v0 @kind object;
  #L086c80.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L086c86.  v0:= temp @kind object;
  #L086c88.  v1:= v0 @kind object;
  #L086c8a.  goto L086c0e;
  #L086c8c.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L086c92.  v0:= temp @kind object;
  #L086c94.  goto L086c32;
}
procedure `void` `a`(`a.k` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object, `boolean` v4 ) @signature `La/k;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L086ca8.  call temp:= `b`(v2, v3, v4) @signature `La/k;.b:(Ljavax/net/ssl/SSLSocket;Z)La/k;` @kind direct;
  #L086cae.  v0:= temp @kind object;
  #L086cb0.  v1:= v0.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086cb4.  if v1 == 0 then goto L086cc2;
  #L086cb8.  v1:= v0.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086cbc.  call `setEnabledProtocols`(v3, v1) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L086cc2.  v1:= v0.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086cc6.  if v1 == 0 then goto L086cd4;
  #L086cca.  v0:= v0.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086cce.  call `setEnabledCipherSuites`(v3, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L086cd4.  return @kind void;
}
procedure `boolean` `a`(`a.k` v1 @kind this) @signature `La/k;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L086ce8.  v0:= v1.`a.k.d` @type ^`boolean` @kind boolean;
  #L086cec.  return v0;
}
procedure `boolean` `a`(`a.k` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `La/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L086d00.  v0:= 0I;
  #L086d02.  v1:= v3.`a.k.d` @type ^`boolean` @kind boolean;
  #L086d06.  if v1 != 0 then goto L086d0c;
  #L086d0a.  return v0;
  #L086d0c.  v1:= v3.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086d10.  if v1 == 0 then goto L086d2c;
  #L086d14.  v1:= v3.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086d18.  call temp:= `getEnabledProtocols`(v4) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L086d1e.  v2:= temp @kind object;
  #L086d20.  call temp:= `a`(v1, v2) @signature `La/k;.a:([Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L086d26.  v1:= temp;
  #L086d28.  if v1 == 0 then goto L086d0a;
  #L086d2c.  v1:= v3.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086d30.  if v1 == 0 then goto L086d4c;
  #L086d34.  v1:= v3.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086d38.  call temp:= `getEnabledCipherSuites`(v4) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L086d3e.  v2:= temp @kind object;
  #L086d40.  call temp:= `a`(v1, v2) @signature `La/k;.a:([Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L086d46.  v1:= temp;
  #L086d48.  if v1 == 0 then goto L086d0a;
  #L086d4c.  v0:= 1I;
  #L086d4e.  goto L086d0a;
}
procedure `java.util.List` `b`(`a.k` v5 @kind this) @signature `La/k;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L086d60.  v0:= v5.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086d64.  if v0 != 0 then goto L086d6c;
  #L086d68.  v0:= 0I;
  #L086d6a.  return v0 @kind object;
  #L086d6c.  v1:= new `java.util.ArrayList`;
  #L086d70.  v0:= v5.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086d74.  v0:= length @variable v0;
  #L086d76.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L086d7c.  v2:= v5.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086d80.  v3:= length @variable v2;
  #L086d82.  v0:= 0I;
  #L086d84.  if v0 >= v3 then goto L086da0;
  #L086d88.  v4:= v2[v0] @kind object;
  #L086d8c.  call temp:= `a`(v4) @signature `La/h;.a:(Ljava/lang/String;)La/h;` @kind static;
  #L086d92.  v4:= temp @kind object;
  #L086d94.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L086d9a.  v0:= v0 + 1;
  #L086d9e.  goto L086d84;
  #L086da0.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L086da6.  v0:= temp @kind object;
  #L086da8.  goto L086d6a;
}
procedure `java.util.List` `c`(`a.k` v5 @kind this) @signature `La/k;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L086dbc.  v0:= v5.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086dc0.  if v0 != 0 then goto L086dc8;
  #L086dc4.  v0:= 0I;
  #L086dc6.  return v0 @kind object;
  #L086dc8.  v1:= new `java.util.ArrayList`;
  #L086dcc.  v0:= v5.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086dd0.  v0:= length @variable v0;
  #L086dd2.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L086dd8.  v2:= v5.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086ddc.  v3:= length @variable v2;
  #L086dde.  v0:= 0I;
  #L086de0.  if v0 >= v3 then goto L086dfc;
  #L086de4.  v4:= v2[v0] @kind object;
  #L086de8.  call temp:= `a`(v4) @signature `La/ac;.a:(Ljava/lang/String;)La/ac;` @kind static;
  #L086dee.  v4:= temp @kind object;
  #L086df0.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L086df6.  v0:= v0 + 1;
  #L086dfa.  goto L086de0;
  #L086dfc.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L086e02.  v0:= temp @kind object;
  #L086e04.  goto L086dc6;
}
procedure `boolean` `d`(`a.k` v1 @kind this) @signature `La/k;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L086e18.  v0:= v1.`a.k.e` @type ^`boolean` @kind boolean;
  #L086e1c.  return v0;
}
procedure `boolean` `equals`(`a.k` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `La/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L086e30.  v1:= 1I;
  #L086e32.  v0:= 0I;
  #L086e34.  v2:= instanceof @variable v5 @type ^`a.k` @kind boolean;
  #L086e38.  if v2 != 0 then goto L086e3e;
  #L086e3c.  return v0;
  #L086e3e.  if v5 != v4 then goto L086e46;
  #L086e42.  v0:= v1;
  #L086e44.  goto L086e3c;
  #L086e46.  v5:= (`a.k`) v5 @kind object;
  #L086e4a.  v2:= v4.`a.k.d` @type ^`boolean` @kind boolean;
  #L086e4e.  v3:= v5.`a.k.d` @type ^`boolean` @kind boolean;
  #L086e52.  if v2 != v3 then goto L086e3c;
  #L086e56.  v2:= v4.`a.k.d` @type ^`boolean` @kind boolean;
  #L086e5a.  if v2 == 0 then goto L086e92;
  #L086e5e.  v2:= v4.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086e62.  v3:= v5.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086e66.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L086e6c.  v2:= temp;
  #L086e6e.  if v2 == 0 then goto L086e3c;
  #L086e72.  v2:= v4.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086e76.  v3:= v5.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086e7a.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L086e80.  v2:= temp;
  #L086e82.  if v2 == 0 then goto L086e3c;
  #L086e86.  v2:= v4.`a.k.e` @type ^`boolean` @kind boolean;
  #L086e8a.  v3:= v5.`a.k.e` @type ^`boolean` @kind boolean;
  #L086e8e.  if v2 != v3 then goto L086e3c;
  #L086e92.  v0:= v1;
  #L086e94.  goto L086e3c;
}
procedure `int` `hashCode`(`a.k` v2 @kind this) @signature `La/k;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L086ea8.  v0:= 17I;
  #L086eac.  v1:= v2.`a.k.d` @type ^`boolean` @kind boolean;
  #L086eb0.  if v1 == 0 then goto L086ee6;
  #L086eb4.  v0:= v2.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086eb8.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L086ebe.  v0:= temp;
  #L086ec0.  v0:= v0 + 527;
  #L086ec4.  v0:= v0 * 31;
  #L086ec8.  v1:= v2.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086ecc.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L086ed2.  v1:= temp;
  #L086ed4.  v0:= v0 + v1 @kind int;
  #L086ed6.  v1:= v0 * 31;
  #L086eda.  v0:= v2.`a.k.e` @type ^`boolean` @kind boolean;
  #L086ede.  if v0 == 0 then goto L086ee8;
  #L086ee2.  v0:= 0I;
  #L086ee4.  v0:= v0 + v1 @kind int;
  #L086ee6.  return v0;
  #L086ee8.  v0:= 1I;
  #L086eea.  goto L086ee4;
}
procedure `java.lang.String` `toString`(`a.k` v4 @kind this) @signature `La/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L086efc.  v0:= v4.`a.k.d` @type ^`boolean` @kind boolean;
  #L086f00.  if v0 != 0 then goto L086f0a;
  #L086f04.  v0:= "ConnectionSpec()" @kind object;
  #L086f08.  return v0 @kind object;
  #L086f0a.  v0:= v4.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L086f0e.  if v0 == 0 then goto L086f9a;
  #L086f12.  call temp:= `b`(v4) @signature `La/k;.b:()Ljava/util/List;` @kind virtual;
  #L086f18.  v0:= temp @kind object;
  #L086f1a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L086f20.  v0:= temp @kind object;
  #L086f22.  v1:= v4.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L086f26.  if v1 == 0 then goto L086fa0;
  #L086f2a.  call temp:= `c`(v4) @signature `La/k;.c:()Ljava/util/List;` @kind virtual;
  #L086f30.  v1:= temp @kind object;
  #L086f32.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L086f38.  v1:= temp @kind object;
  #L086f3a.  v2:= new `java.lang.StringBuilder`;
  #L086f3e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L086f44.  v3:= "ConnectionSpec(cipherSuites=" @kind object;
  #L086f48.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086f4e.  v2:= temp @kind object;
  #L086f50.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086f56.  v0:= temp @kind object;
  #L086f58.  v2:= ", tlsVersions=" @kind object;
  #L086f5c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086f62.  v0:= temp @kind object;
  #L086f64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086f6a.  v0:= temp @kind object;
  #L086f6c.  v1:= ", supportsTlsExtensions=" @kind object;
  #L086f70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086f76.  v0:= temp @kind object;
  #L086f78.  v1:= v4.`a.k.e` @type ^`boolean` @kind boolean;
  #L086f7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L086f82.  v0:= temp @kind object;
  #L086f84.  v1:= ")" @kind object;
  #L086f88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L086f8e.  v0:= temp @kind object;
  #L086f90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L086f96.  v0:= temp @kind object;
  #L086f98.  goto L086f08;
  #L086f9a.  v0:= "[all enabled]" @kind object;
  #L086f9e.  goto L086f22;
  #L086fa0.  v1:= "[all enabled]" @kind object;
  #L086fa4.  goto L086f3a;
}

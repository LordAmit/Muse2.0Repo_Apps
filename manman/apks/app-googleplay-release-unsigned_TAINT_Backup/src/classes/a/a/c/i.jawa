record `a.a.c.i` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`a.r` v3 @kind object) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L0784bc.  call temp:= `h`(v3) @signature `La/r;.h:()Ljava/lang/String;` @kind virtual;
  #L0784c2.  v0:= temp @kind object;
  #L0784c4.  call temp:= `j`(v3) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L0784ca.  v1:= temp @kind object;
  #L0784cc.  if v1 == 0 then goto L0784fe;
  #L0784d0.  v2:= new `java.lang.StringBuilder`;
  #L0784d4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0784da.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0784e0.  v0:= temp @kind object;
  #L0784e2.  v2:= 63I;
  #L0784e6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0784ec.  v0:= temp @kind object;
  #L0784ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0784f4.  v0:= temp @kind object;
  #L0784f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0784fc.  v0:= temp @kind object;
  #L0784fe.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.x` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `La/a/c/i;.a:(La/x;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L078510.  v0:= new `java.lang.StringBuilder`;
  #L078514.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07851a.  call temp:= `b`(v2) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L078520.  v1:= temp @kind object;
  #L078522.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078528.  v1:= 32I;
  #L07852c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L078532.  call temp:= `b`(v2, v3) @signature `La/a/c/i;.b:(La/x;Ljava/net/Proxy$Type;)Z` @kind static;
  #L078538.  v1:= temp;
  #L07853a.  if v1 == 0 then goto L078560;
  #L07853e.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078544.  v1:= temp @kind object;
  #L078546.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07854c.  v1:= " HTTP/1.1" @kind object;
  #L078550.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078556.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07855c.  v0:= temp @kind object;
  #L07855e.  return v0 @kind object;
  #L078560.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078566.  v1:= temp @kind object;
  #L078568.  call temp:= `a`(v1) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @kind static;
  #L07856e.  v1:= temp @kind object;
  #L078570.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078576.  goto L07854c;
}
procedure `boolean` `b`(`a.x` v1 @kind object, `java.net.Proxy$Type` v2 @kind object) @signature `La/a/c/i;.b:(La/x;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L078588.  call temp:= `g`(v1) @signature `La/x;.g:()Z` @kind virtual;
  #L07858e.  v0:= temp;
  #L078590.  if v0 != 0 then goto L0785a0;
  #L078594.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L078598.  if v2 != v0 then goto L0785a0;
  #L07859c.  v0:= 1I;
  #L07859e.  return v0;
  #L0785a0.  v0:= 0I;
  #L0785a2.  goto L07859e;
}

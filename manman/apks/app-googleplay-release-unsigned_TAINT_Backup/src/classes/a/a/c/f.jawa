record `a.a.c.f` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L077e58.  v0:= "POST" @kind object;
  #L077e5c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077e62.  v0:= temp;
  #L077e64.  if v0 != 0 then goto L077ea8;
  #L077e68.  v0:= "PATCH" @kind object;
  #L077e6c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077e72.  v0:= temp;
  #L077e74.  if v0 != 0 then goto L077ea8;
  #L077e78.  v0:= "PUT" @kind object;
  #L077e7c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077e82.  v0:= temp;
  #L077e84.  if v0 != 0 then goto L077ea8;
  #L077e88.  v0:= "DELETE" @kind object;
  #L077e8c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077e92.  v0:= temp;
  #L077e94.  if v0 != 0 then goto L077ea8;
  #L077e98.  v0:= "MOVE" @kind object;
  #L077e9c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077ea2.  v0:= temp;
  #L077ea4.  if v0 == 0 then goto L077eac;
  #L077ea8.  v0:= 1I;
  #L077eaa.  return v0;
  #L077eac.  v0:= 0I;
  #L077eae.  goto L077eaa;
}
procedure `boolean` `b`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L077ec0.  v0:= "POST" @kind object;
  #L077ec4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077eca.  v0:= temp;
  #L077ecc.  if v0 != 0 then goto L077f10;
  #L077ed0.  v0:= "PUT" @kind object;
  #L077ed4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077eda.  v0:= temp;
  #L077edc.  if v0 != 0 then goto L077f10;
  #L077ee0.  v0:= "PATCH" @kind object;
  #L077ee4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077eea.  v0:= temp;
  #L077eec.  if v0 != 0 then goto L077f10;
  #L077ef0.  v0:= "PROPPATCH" @kind object;
  #L077ef4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077efa.  v0:= temp;
  #L077efc.  if v0 != 0 then goto L077f10;
  #L077f00.  v0:= "REPORT" @kind object;
  #L077f04.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077f0a.  v0:= temp;
  #L077f0c.  if v0 == 0 then goto L077f14;
  #L077f10.  v0:= 1I;
  #L077f12.  return v0;
  #L077f14.  v0:= 0I;
  #L077f16.  goto L077f12;
}
procedure `boolean` `c`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L077f28.  call temp:= `b`(v1) @signature `La/a/c/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L077f2e.  v0:= temp;
  #L077f30.  if v0 != 0 then goto L077f84;
  #L077f34.  v0:= "OPTIONS" @kind object;
  #L077f38.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077f3e.  v0:= temp;
  #L077f40.  if v0 != 0 then goto L077f84;
  #L077f44.  v0:= "DELETE" @kind object;
  #L077f48.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077f4e.  v0:= temp;
  #L077f50.  if v0 != 0 then goto L077f84;
  #L077f54.  v0:= "PROPFIND" @kind object;
  #L077f58.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077f5e.  v0:= temp;
  #L077f60.  if v0 != 0 then goto L077f84;
  #L077f64.  v0:= "MKCOL" @kind object;
  #L077f68.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077f6e.  v0:= temp;
  #L077f70.  if v0 != 0 then goto L077f84;
  #L077f74.  v0:= "LOCK" @kind object;
  #L077f78.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077f7e.  v0:= temp;
  #L077f80.  if v0 == 0 then goto L077f88;
  #L077f84.  v0:= 1I;
  #L077f86.  return v0;
  #L077f88.  v0:= 0I;
  #L077f8a.  goto L077f86;
}
procedure `boolean` `d`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.d:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L077f9c.  v0:= "PROPFIND" @kind object;
  #L077fa0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077fa6.  v0:= temp;
  #L077fa8.  return v0;
}
procedure `boolean` `e`(`java.lang.String` v1 @kind object) @signature `La/a/c/f;.e:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L077fbc.  v0:= "PROPFIND" @kind object;
  #L077fc0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L077fc6.  v0:= temp;
  #L077fc8.  if v0 != 0 then goto L077fd0;
  #L077fcc.  v0:= 1I;
  #L077fce.  return v0;
  #L077fd0.  v0:= 0I;
  #L077fd2.  goto L077fce;
}

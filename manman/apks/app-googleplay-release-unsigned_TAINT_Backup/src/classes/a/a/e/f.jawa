record `a.a.e.f` @kind class @AccessFlag PUBLIC_FINAL extends `a.a.c.c` @kind interface {
  `a.a.b.g` `a.a.e.f.a` @AccessFlag FINAL;
  `a.u` `a.a.e.f.l` @AccessFlag PRIVATE_FINAL;
  `a.a.e.g` `a.a.e.f.m` @AccessFlag PRIVATE_FINAL;
  `a.a.e.i` `a.a.e.f.n` @AccessFlag PRIVATE;
}
global `b.f` `@@a.a.e.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.e.f.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@a.a.e.f.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@a.a.e.f.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07c4b0.  v7:= 4I;
  #L07c4b2.  v6:= 3I;
  #L07c4b4.  v5:= 2I;
  #L07c4b6.  v4:= 1I;
  #L07c4b8.  v3:= 0I;
  #L07c4ba.  v0:= "connection" @kind object;
  #L07c4be.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c4c4.  v0:= temp @kind object;
  #L07c4c6.  `@@a.a.e.f.b` @type ^`b.f` := v0 @kind object;
  #L07c4ca.  v0:= "host" @kind object;
  #L07c4ce.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c4d4.  v0:= temp @kind object;
  #L07c4d6.  `@@a.a.e.f.c` @type ^`b.f` := v0 @kind object;
  #L07c4da.  v0:= "keep-alive" @kind object;
  #L07c4de.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c4e4.  v0:= temp @kind object;
  #L07c4e6.  `@@a.a.e.f.d` @type ^`b.f` := v0 @kind object;
  #L07c4ea.  v0:= "proxy-connection" @kind object;
  #L07c4ee.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c4f4.  v0:= temp @kind object;
  #L07c4f6.  `@@a.a.e.f.e` @type ^`b.f` := v0 @kind object;
  #L07c4fa.  v0:= "transfer-encoding" @kind object;
  #L07c4fe.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c504.  v0:= temp @kind object;
  #L07c506.  `@@a.a.e.f.f` @type ^`b.f` := v0 @kind object;
  #L07c50a.  v0:= "te" @kind object;
  #L07c50e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c514.  v0:= temp @kind object;
  #L07c516.  `@@a.a.e.f.g` @type ^`b.f` := v0 @kind object;
  #L07c51a.  v0:= "encoding" @kind object;
  #L07c51e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c524.  v0:= temp @kind object;
  #L07c526.  `@@a.a.e.f.h` @type ^`b.f` := v0 @kind object;
  #L07c52a.  v0:= "upgrade" @kind object;
  #L07c52e.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c534.  v0:= temp @kind object;
  #L07c536.  `@@a.a.e.f.i` @type ^`b.f` := v0 @kind object;
  #L07c53a.  v0:= 12I;
  #L07c53e.  v0:= new `b.f`[v0];
  #L07c542.  v1:= `@@a.a.e.f.b` @type ^`b.f` @kind object;
  #L07c546.  v0[v3]:= v1 @kind object;
  #L07c54a.  v1:= `@@a.a.e.f.c` @type ^`b.f` @kind object;
  #L07c54e.  v0[v4]:= v1 @kind object;
  #L07c552.  v1:= `@@a.a.e.f.d` @type ^`b.f` @kind object;
  #L07c556.  v0[v5]:= v1 @kind object;
  #L07c55a.  v1:= `@@a.a.e.f.e` @type ^`b.f` @kind object;
  #L07c55e.  v0[v6]:= v1 @kind object;
  #L07c562.  v1:= `@@a.a.e.f.g` @type ^`b.f` @kind object;
  #L07c566.  v0[v7]:= v1 @kind object;
  #L07c56a.  v1:= 5I;
  #L07c56c.  v2:= `@@a.a.e.f.f` @type ^`b.f` @kind object;
  #L07c570.  v0[v1]:= v2 @kind object;
  #L07c574.  v1:= 6I;
  #L07c576.  v2:= `@@a.a.e.f.h` @type ^`b.f` @kind object;
  #L07c57a.  v0[v1]:= v2 @kind object;
  #L07c57e.  v1:= 7I;
  #L07c580.  v2:= `@@a.a.e.f.i` @type ^`b.f` @kind object;
  #L07c584.  v0[v1]:= v2 @kind object;
  #L07c588.  v1:= 8I;
  #L07c58c.  v2:= `@@a.a.e.c.c` @type ^`b.f` @kind object;
  #L07c590.  v0[v1]:= v2 @kind object;
  #L07c594.  v1:= 9I;
  #L07c598.  v2:= `@@a.a.e.c.d` @type ^`b.f` @kind object;
  #L07c59c.  v0[v1]:= v2 @kind object;
  #L07c5a0.  v1:= 10I;
  #L07c5a4.  v2:= `@@a.a.e.c.e` @type ^`b.f` @kind object;
  #L07c5a8.  v0[v1]:= v2 @kind object;
  #L07c5ac.  v1:= 11I;
  #L07c5b0.  v2:= `@@a.a.e.c.f` @type ^`b.f` @kind object;
  #L07c5b4.  v0[v1]:= v2 @kind object;
  #L07c5b8.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L07c5be.  v0:= temp @kind object;
  #L07c5c0.  `@@a.a.e.f.j` @type ^`java.util.List` := v0 @kind object;
  #L07c5c4.  v0:= 8I;
  #L07c5c8.  v0:= new `b.f`[v0];
  #L07c5cc.  v1:= `@@a.a.e.f.b` @type ^`b.f` @kind object;
  #L07c5d0.  v0[v3]:= v1 @kind object;
  #L07c5d4.  v1:= `@@a.a.e.f.c` @type ^`b.f` @kind object;
  #L07c5d8.  v0[v4]:= v1 @kind object;
  #L07c5dc.  v1:= `@@a.a.e.f.d` @type ^`b.f` @kind object;
  #L07c5e0.  v0[v5]:= v1 @kind object;
  #L07c5e4.  v1:= `@@a.a.e.f.e` @type ^`b.f` @kind object;
  #L07c5e8.  v0[v6]:= v1 @kind object;
  #L07c5ec.  v1:= `@@a.a.e.f.g` @type ^`b.f` @kind object;
  #L07c5f0.  v0[v7]:= v1 @kind object;
  #L07c5f4.  v1:= 5I;
  #L07c5f6.  v2:= `@@a.a.e.f.f` @type ^`b.f` @kind object;
  #L07c5fa.  v0[v1]:= v2 @kind object;
  #L07c5fe.  v1:= 6I;
  #L07c600.  v2:= `@@a.a.e.f.h` @type ^`b.f` @kind object;
  #L07c604.  v0[v1]:= v2 @kind object;
  #L07c608.  v1:= 7I;
  #L07c60a.  v2:= `@@a.a.e.f.i` @type ^`b.f` @kind object;
  #L07c60e.  v0[v1]:= v2 @kind object;
  #L07c612.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L07c618.  v0:= temp @kind object;
  #L07c61a.  `@@a.a.e.f.k` @type ^`java.util.List` := v0 @kind object;
  #L07c61e.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.f` v0 @kind this, `a.u` v1 @kind object, `a.a.b.g` v2 @kind object, `a.a.e.g` v3 @kind object) @signature `La/a/e/f;.<init>:(La/u;La/a/b/g;La/a/e/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L07c630.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07c636.  v0.`a.a.e.f.l` @type ^`a.u` := v1 @kind object;
  #L07c63a.  v0.`a.a.e.f.a` @type ^`a.a.b.g` := v2 @kind object;
  #L07c63e.  v0.`a.a.e.f.m` @type ^`a.a.e.g` := v3 @kind object;
  #L07c642.  return @kind void;
}
procedure `a.z$a` `a`(`java.util.List` v9 @kind object) @signature `La/a/e/f;.a:(Ljava/util/List;)La/z$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07c654.  v2:= 0I;
  #L07c656.  v1:= new `a.q$a`;
  #L07c65a.  call `<init>`(v1) @signature `La/q$a;.<init>:()V` @kind direct;
  #L07c660.  v0:= 0I;
  #L07c662.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L07c668.  v5:= temp;
  #L07c66a.  v4:= v0;
  #L07c66c.  v3:= v2 @kind object;
  #L07c66e.  if v4 >= v5 then goto L07c728;
  #L07c672.  call temp:= `get`(v9, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L07c678.  v0:= temp @kind object;
  #L07c67a.  v0:= (`a.a.e.c`) v0 @kind object;
  #L07c67e.  if v0 != 0 then goto L07c6aa;
  #L07c682.  if v3 == 0 then goto L07c722;
  #L07c686.  v0:= v3.`a.a.c.k.b` @type ^`int`;
  #L07c68a.  v6:= 100I;
  #L07c68e.  if v0 != v6 then goto L07c722;
  #L07c692.  v0:= new `a.q$a`;
  #L07c696.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L07c69c.  v1:= v2 @kind object;
  #L07c69e.  v3:= v4 + 1;
  #L07c6a2.  v4:= v3;
  #L07c6a4.  v3:= v1 @kind object;
  #L07c6a6.  v1:= v0 @kind object;
  #L07c6a8.  goto L07c66e;
  #L07c6aa.  v6:= v0.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07c6ae.  v0:= v0.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07c6b2.  call temp:= `a`(v0) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07c6b8.  v0:= temp @kind object;
  #L07c6ba.  v7:= `@@a.a.e.c.b` @type ^`b.f` @kind object;
  #L07c6be.  call temp:= `equals`(v6, v7) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07c6c4.  v7:= temp;
  #L07c6c6.  if v7 == 0 then goto L07c700;
  #L07c6ca.  v3:= new `java.lang.StringBuilder`;
  #L07c6ce.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07c6d4.  v6:= "HTTP/1.1 " @kind object;
  #L07c6d8.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c6de.  v3:= temp @kind object;
  #L07c6e0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c6e6.  v0:= temp @kind object;
  #L07c6e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07c6ee.  v0:= temp @kind object;
  #L07c6f0.  call temp:= `a`(v0) @signature `La/a/c/k;.a:(Ljava/lang/String;)La/a/c/k;` @kind static;
  #L07c6f6.  v0:= temp @kind object;
  #L07c6f8.  v8:= v1 @kind object;
  #L07c6fa.  v1:= v0 @kind object;
  #L07c6fc.  v0:= v8 @kind object;
  #L07c6fe.  goto L07c69e;
  #L07c700.  v7:= `@@a.a.e.f.k` @type ^`java.util.List` @kind object;
  #L07c704.  call temp:= `contains`(v7, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07c70a.  v7:= temp;
  #L07c70c.  if v7 != 0 then goto L07c722;
  #L07c710.  v7:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L07c714.  call temp:= `a`(v6) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07c71a.  v6:= temp @kind object;
  #L07c71c.  call `a`(v7, v1, v6, v0) @signature `La/a/a;.a:(La/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L07c722.  v0:= v1 @kind object;
  #L07c724.  v1:= v3 @kind object;
  #L07c726.  goto L07c69e;
  #L07c728.  if v3 != 0 then goto L07c73c;
  #L07c72c.  v0:= new `java.net.ProtocolException`;
  #L07c730.  v1:= "Expected ':status' header not present" @kind object;
  #L07c734.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07c73a.  throw v0;
  #L07c73c.  v0:= new `a.z$a`;
  #L07c740.  call `<init>`(v0) @signature `La/z$a;.<init>:()V` @kind direct;
  #L07c746.  v2:= `@@a.v.d` @type ^`a.v` @kind object;
  #L07c74a.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(La/v;)La/z$a;` @kind virtual;
  #L07c750.  v0:= temp @kind object;
  #L07c752.  v2:= v3.`a.a.c.k.b` @type ^`int`;
  #L07c756.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(I)La/z$a;` @kind virtual;
  #L07c75c.  v0:= temp @kind object;
  #L07c75e.  v2:= v3.`a.a.c.k.c` @type ^`java.lang.String` @kind object;
  #L07c762.  call temp:= `a`(v0, v2) @signature `La/z$a;.a:(Ljava/lang/String;)La/z$a;` @kind virtual;
  #L07c768.  v0:= temp @kind object;
  #L07c76a.  call temp:= `a`(v1) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L07c770.  v1:= temp @kind object;
  #L07c772.  call temp:= `a`(v0, v1) @signature `La/z$a;.a:(La/q;)La/z$a;` @kind virtual;
  #L07c778.  v0:= temp @kind object;
  #L07c77a.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.x` v7 @kind object) @signature `La/a/e/f;.b:(La/x;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07c78c.  call temp:= `c`(v7) @signature `La/x;.c:()La/q;` @kind virtual;
  #L07c792.  v1:= temp @kind object;
  #L07c794.  v2:= new `java.util.ArrayList`;
  #L07c798.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L07c79e.  v0:= temp;
  #L07c7a0.  v0:= v0 + 4;
  #L07c7a4.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L07c7aa.  v0:= new `a.a.e.c`;
  #L07c7ae.  v3:= `@@a.a.e.c.c` @type ^`b.f` @kind object;
  #L07c7b2.  call temp:= `b`(v7) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L07c7b8.  v4:= temp @kind object;
  #L07c7ba.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07c7c0.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07c7c6.  v0:= new `a.a.e.c`;
  #L07c7ca.  v3:= `@@a.a.e.c.d` @type ^`b.f` @kind object;
  #L07c7ce.  call temp:= `a`(v7) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07c7d4.  v4:= temp @kind object;
  #L07c7d6.  call temp:= `a`(v4) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @kind static;
  #L07c7dc.  v4:= temp @kind object;
  #L07c7de.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07c7e4.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07c7ea.  v0:= "Host" @kind object;
  #L07c7ee.  call temp:= `a`(v7, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07c7f4.  v0:= temp @kind object;
  #L07c7f6.  if v0 == 0 then goto L07c80e;
  #L07c7fa.  v3:= new `a.a.e.c`;
  #L07c7fe.  v4:= `@@a.a.e.c.f` @type ^`b.f` @kind object;
  #L07c802.  call `<init>`(v3, v4, v0) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07c808.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07c80e.  v0:= new `a.a.e.c`;
  #L07c812.  v3:= `@@a.a.e.c.e` @type ^`b.f` @kind object;
  #L07c816.  call temp:= `a`(v7) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07c81c.  v4:= temp @kind object;
  #L07c81e.  call temp:= `b`(v4) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L07c824.  v4:= temp @kind object;
  #L07c826.  call `<init>`(v0, v3, v4) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07c82c.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07c832.  v0:= 0I;
  #L07c834.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L07c83a.  v3:= temp;
  #L07c83c.  if v0 >= v3 then goto L07c88a;
  #L07c840.  call temp:= `a`(v1, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L07c846.  v4:= temp @kind object;
  #L07c848.  v5:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L07c84c.  call temp:= `toLowerCase`(v4, v5) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L07c852.  v4:= temp @kind object;
  #L07c854.  call temp:= `a`(v4) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07c85a.  v4:= temp @kind object;
  #L07c85c.  v5:= `@@a.a.e.f.j` @type ^`java.util.List` @kind object;
  #L07c860.  call temp:= `contains`(v5, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07c866.  v5:= temp;
  #L07c868.  if v5 != 0 then goto L07c884;
  #L07c86c.  v5:= new `a.a.e.c`;
  #L07c870.  call temp:= `b`(v1, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L07c876.  v6:= temp @kind object;
  #L07c878.  call `<init>`(v5, v4, v6) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @kind direct;
  #L07c87e.  call temp:= `add`(v2, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07c884.  v0:= v0 + 1;
  #L07c888.  goto L07c83c;
  #L07c88a.  return v2 @kind object;
}
procedure `a.aa` `a`(`a.a.e.f` v3 @kind this, `a.z` v4 @kind object) @signature `La/a/e/f;.a:(La/z;)La/aa;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07c89c.  v0:= new `a.a.e.f$a`;
  #L07c8a0.  v1:= v3.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07c8a4.  call temp:= `g`(v1) @signature `La/a/e/i;.g:()Lb/r;` @kind virtual;
  #L07c8aa.  v1:= temp @kind object;
  #L07c8ac.  call `<init>`(v0, v3, v1) @signature `La/a/e/f$a;.<init>:(La/a/e/f;Lb/r;)V` @kind direct;
  #L07c8b2.  v1:= new `a.a.c.h`;
  #L07c8b6.  call temp:= `e`(v4) @signature `La/z;.e:()La/q;` @kind virtual;
  #L07c8bc.  v2:= temp @kind object;
  #L07c8be.  call temp:= `a`(v0) @signature `Lb/k;.a:(Lb/r;)Lb/e;` @kind static;
  #L07c8c4.  v0:= temp @kind object;
  #L07c8c6.  call `<init>`(v1, v2, v0) @signature `La/a/c/h;.<init>:(La/q;Lb/e;)V` @kind direct;
  #L07c8cc.  return v1 @kind object;
}
procedure `a.z$a` `a`(`a.a.e.f` v3 @kind this, `boolean` v4 ) @signature `La/a/e/f;.a:(Z)La/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07c8e0.  v0:= v3.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07c8e4.  call temp:= `d`(v0) @signature `La/a/e/i;.d:()Ljava/util/List;` @kind virtual;
  #L07c8ea.  v0:= temp @kind object;
  #L07c8ec.  call temp:= `a`(v0) @signature `La/a/e/f;.a:(Ljava/util/List;)La/z$a;` @kind static;
  #L07c8f2.  v0:= temp @kind object;
  #L07c8f4.  if v4 == 0 then goto L07c90e;
  #L07c8f8.  v1:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L07c8fc.  call temp:= `a`(v1, v0) @signature `La/a/a;.a:(La/z$a;)I` @kind virtual;
  #L07c902.  v1:= temp;
  #L07c904.  v2:= 100I;
  #L07c908.  if v1 != v2 then goto L07c90e;
  #L07c90c.  v0:= 0I;
  #L07c90e.  return v0 @kind object;
}
procedure `b.q` `a`(`a.a.e.f` v1 @kind this, `a.x` v2 @kind object, `long` v3 ) @signature `La/a/e/f;.a:(La/x;J)Lb/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07c920.  v0:= v1.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07c924.  call temp:= `h`(v0) @signature `La/a/e/i;.h:()Lb/q;` @kind virtual;
  #L07c92a.  v0:= temp @kind object;
  #L07c92c.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.f` v1 @kind this) @signature `La/a/e/f;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07c940.  v0:= v1.`a.a.e.f.m` @type ^`a.a.e.g` @kind object;
  #L07c944.  call `b`(v0) @signature `La/a/e/g;.b:()V` @kind virtual;
  #L07c94a.  return @kind void;
}
procedure `void` `a`(`a.a.e.f` v4 @kind this, `a.x` v5 @kind object) @signature `La/a/e/f;.a:(La/x;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07c95c.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07c960.  if v0 == 0 then goto L07c966;
  #L07c964.  return @kind void;
  #L07c966.  call temp:= `d`(v5) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07c96c.  v0:= temp @kind object;
  #L07c96e.  if v0 == 0 then goto L07c9d6;
  #L07c972.  v0:= 1I;
  #L07c974.  call temp:= `b`(v5) @signature `La/a/e/f;.b:(La/x;)Ljava/util/List;` @kind static;
  #L07c97a.  v1:= temp @kind object;
  #L07c97c.  v2:= v4.`a.a.e.f.m` @type ^`a.a.e.g` @kind object;
  #L07c980.  call temp:= `a`(v2, v1, v0) @signature `La/a/e/g;.a:(Ljava/util/List;Z)La/a/e/i;` @kind virtual;
  #L07c986.  v0:= temp @kind object;
  #L07c988.  v4.`a.a.e.f.n` @type ^`a.a.e.i` := v0 @kind object;
  #L07c98c.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07c990.  call temp:= `e`(v0) @signature `La/a/e/i;.e:()Lb/s;` @kind virtual;
  #L07c996.  v0:= temp @kind object;
  #L07c998.  v1:= v4.`a.a.e.f.l` @type ^`a.u` @kind object;
  #L07c99c.  call temp:= `b`(v1) @signature `La/u;.b:()I` @kind virtual;
  #L07c9a2.  v1:= temp;
  #L07c9a4.  v2:= (`long`) v1 @kind i2l;
  #L07c9a6.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07c9aa.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07c9b0.  v0:= v4.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07c9b4.  call temp:= `f`(v0) @signature `La/a/e/i;.f:()Lb/s;` @kind virtual;
  #L07c9ba.  v0:= temp @kind object;
  #L07c9bc.  v1:= v4.`a.a.e.f.l` @type ^`a.u` @kind object;
  #L07c9c0.  call temp:= `c`(v1) @signature `La/u;.c:()I` @kind virtual;
  #L07c9c6.  v1:= temp;
  #L07c9c8.  v2:= (`long`) v1 @kind i2l;
  #L07c9ca.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07c9ce.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07c9d4.  goto L07c964;
  #L07c9d6.  v0:= 0I;
  #L07c9d8.  goto L07c974;
}
procedure `void` `b`(`a.a.e.f` v1 @kind this) @signature `La/a/e/f;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07c9ec.  v0:= v1.`a.a.e.f.n` @type ^`a.a.e.i` @kind object;
  #L07c9f0.  call temp:= `h`(v0) @signature `La/a/e/i;.h:()Lb/q;` @kind virtual;
  #L07c9f6.  v0:= temp @kind object;
  #L07c9f8.  call `close`(v0) @signature `Lb/q;.close:()V` @kind interface;
  #L07c9fe.  return @kind void;
}

record `a.a.e.g$3` @kind class @AccessFlag  extends `a.a.b` @kind class {
  `boolean` `a.a.e.g$3.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `a.a.e.g$3.c` @AccessFlag FINAL_SYNTHETIC;
  `int` `a.a.e.g$3.d` @AccessFlag FINAL_SYNTHETIC;
  `a.a.e.l` `a.a.e.g$3.e` @AccessFlag FINAL_SYNTHETIC;
  `a.a.e.g` `a.a.e.g$3.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$3` v0 @kind this, `a.a.e.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `boolean` v4 , `int` v5 , `int` v6 , `a.a.e.l` v7 @kind object) @signature `La/a/e/g$3;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ZIILa/a/e/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L07cacc.  v0.`a.a.e.g$3.f` @type ^`a.a.e.g` := v1 @kind object;
  #L07cad0.  v0.`a.a.e.g$3.a` @type ^`boolean` := v4 @kind boolean;
  #L07cad4.  v0.`a.a.e.g$3.c` @type ^`int` := v5;
  #L07cad8.  v0.`a.a.e.g$3.d` @type ^`int` := v6;
  #L07cadc.  v0.`a.a.e.g$3.e` @type ^`a.a.e.l` := v7 @kind object;
  #L07cae0.  call `<init>`(v0, v2, v3) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07cae6.  return @kind void;
}
procedure `void` `b`(`a.a.e.g$3` v5 @kind this) @signature `La/a/e/g$3;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L07caf8.  v0:= v5.`a.a.e.g$3.f` @type ^`a.a.e.g` @kind object;
  #L07cafc.  v1:= v5.`a.a.e.g$3.a` @type ^`boolean` @kind boolean;
  #L07cb00.  v2:= v5.`a.a.e.g$3.c` @type ^`int`;
  #L07cb04.  v3:= v5.`a.a.e.g$3.d` @type ^`int`;
  #L07cb08.  v4:= v5.`a.a.e.g$3.e` @type ^`a.a.e.l` @kind object;
  #L07cb0c.  call `b`(v0, v1, v2, v3, v4) @signature `La/a/e/g;.b:(ZIILa/a/e/l;)V` @kind virtual;
  #Try_end0.  
  #L07cb12.  return @kind void;
  #L07cb14.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07cb16.  goto L07cb12;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07cb14;
}

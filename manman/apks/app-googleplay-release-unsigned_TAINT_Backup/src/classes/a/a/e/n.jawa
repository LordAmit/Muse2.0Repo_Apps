record `a.a.e.n` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `a.a.e.n.a` @AccessFlag PRIVATE;
  `int`[] `a.a.e.n.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.e.n` v1 @kind this) @signature `La/a/e/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L081654.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08165a.  v0:= 10I;
  #L08165e.  v0:= new `int`[v0];
  #L081662.  v1.`a.a.e.n.b` @type ^`int`[] := v0 @kind object;
  #L081666.  return @kind void;
}
procedure `a.a.e.n` `a`(`a.a.e.n` v2 @kind this, `int` v3 , `int` v4 ) @signature `La/a/e/n;.a:(II)La/a/e/n;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L081678.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L08167c.  v0:= length @variable v0;
  #L08167e.  if v3 < v0 then goto L081684;
  #L081682.  return v2 @kind object;
  #L081684.  v0:= 1I;
  #L081686.  v0:= v0 ^< v3 @kind int;
  #L081688.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L08168c.  v0:= v0 ^| v1 @kind int;
  #L08168e.  v2.`a.a.e.n.a` @type ^`int` := v0;
  #L081692.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L081696.  v0[v3]:= v4;
  #L08169a.  goto L081682;
}
procedure `void` `a`(`a.a.e.n` v2 @kind this) @signature `La/a/e/n;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L0816ac.  v1:= 0I;
  #L0816ae.  v2.`a.a.e.n.a` @type ^`int` := v1;
  #L0816b2.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L0816b6.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L0816bc.  return @kind void;
}
procedure `void` `a`(`a.a.e.n` v2 @kind this, `a.a.e.n` v3 @kind object) @signature `La/a/e/n;.a:(La/a/e/n;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L0816d0.  v0:= 0I;
  #L0816d2.  v1:= 10I;
  #L0816d6.  if v0 >= v1 then goto L0816fc;
  #L0816da.  call temp:= `a`(v3, v0) @signature `La/a/e/n;.a:(I)Z` @kind virtual;
  #L0816e0.  v1:= temp;
  #L0816e2.  if v1 != 0 then goto L0816ec;
  #L0816e6.  v0:= v0 + 1;
  #L0816ea.  goto L0816d2;
  #L0816ec.  call temp:= `b`(v3, v0) @signature `La/a/e/n;.b:(I)I` @kind virtual;
  #L0816f2.  v1:= temp;
  #L0816f4.  call temp:= `a`(v2, v0, v1) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L0816fa.  goto L0816e6;
  #L0816fc.  return @kind void;
}
procedure `boolean` `a`(`a.a.e.n` v3 @kind this, `int` v4 ) @signature `La/a/e/n;.a:(I)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L081710.  v0:= 1I;
  #L081712.  v1:= v0 ^< v4 @kind int;
  #L081716.  v2:= v3.`a.a.e.n.a` @type ^`int`;
  #L08171a.  v1:= v1 ^& v2 @kind int;
  #L08171c.  if v1 == 0 then goto L081722;
  #L081720.  return v0;
  #L081722.  v0:= 0I;
  #L081724.  goto L081720;
}
procedure `int` `b`(`a.a.e.n` v1 @kind this) @signature `La/a/e/n;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L081738.  v0:= v1.`a.a.e.n.a` @type ^`int`;
  #L08173c.  call temp:= `bitCount`(v0) @signature `Ljava/lang/Integer;.bitCount:(I)I` @kind static;
  #L081742.  v0:= temp;
  #L081744.  return v0;
}
procedure `int` `b`(`a.a.e.n` v1 @kind this, `int` v2 ) @signature `La/a/e/n;.b:(I)I` @AccessFlag  {
    temp;
    v0;

  #L081758.  v0:= v1.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L08175c.  v0:= v0[v2];
  #L081760.  return v0;
}
procedure `int` `c`(`a.a.e.n` v2 @kind this) @signature `La/a/e/n;.c:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L081774.  v0:= 2I;
  #L081776.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L08177a.  v0:= v0 ^& v1 @kind int;
  #L08177c.  if v0 == 0 then goto L08178c;
  #L081780.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L081784.  v1:= 1I;
  #L081786.  v0:= v0[v1];
  #L08178a.  return v0;
  #L08178c.  v0:= -1I;
  #L08178e.  goto L08178a;
}
procedure `int` `c`(`a.a.e.n` v2 @kind this, `int` v3 ) @signature `La/a/e/n;.c:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L0817a0.  v0:= 16I;
  #L0817a4.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L0817a8.  v0:= v0 ^& v1 @kind int;
  #L0817aa.  if v0 == 0 then goto L0817b8;
  #L0817ae.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L0817b2.  v1:= 4I;
  #L0817b4.  v3:= v0[v1];
  #L0817b8.  return v3;
}
procedure `int` `d`(`a.a.e.n` v2 @kind this) @signature `La/a/e/n;.d:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L0817cc.  v0:= 128I;
  #L0817d0.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L0817d4.  v0:= v0 ^& v1 @kind int;
  #L0817d6.  if v0 == 0 then goto L0817e6;
  #L0817da.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L0817de.  v1:= 7I;
  #L0817e0.  v0:= v0[v1];
  #L0817e4.  return v0;
  #L0817e6.  v0:= 65535I;
  #L0817ec.  goto L0817e4;
}
procedure `int` `d`(`a.a.e.n` v2 @kind this, `int` v3 ) @signature `La/a/e/n;.d:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L081800.  v0:= 32I;
  #L081804.  v1:= v2.`a.a.e.n.a` @type ^`int`;
  #L081808.  v0:= v0 ^& v1 @kind int;
  #L08180a.  if v0 == 0 then goto L081818;
  #L08180e.  v0:= v2.`a.a.e.n.b` @type ^`int`[] @kind object;
  #L081812.  v1:= 5I;
  #L081814.  v3:= v0[v1];
  #L081818.  return v3;
}

record `a.a.e.g$c` @kind class @AccessFlag  extends `a.a.b` @kind class, `a.a.e.h$b` @kind interface {
  `a.a.e.h` `a.a.e.g$c.a` @AccessFlag FINAL;
  `a.a.e.g` `a.a.e.g$c.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$c` v4 @kind this, `a.a.e.g` v5 @kind object, `a.a.e.h` v6 @kind object) @signature `La/a/e/g$c;.<init>:(La/a/e/g;La/a/e/h;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07d01c.  v4.`a.a.e.g$c.c` @type ^`a.a.e.g` := v5 @kind object;
  #L07d020.  v0:= "OkHttp %s" @kind object;
  #L07d024.  v1:= 1I;
  #L07d026.  v1:= new `java.lang.Object`[v1];
  #L07d02a.  v2:= 0I;
  #L07d02c.  v3:= v5.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07d030.  v1[v2]:= v3 @kind object;
  #L07d034.  call `<init>`(v4, v0, v1) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07d03a.  v4.`a.a.e.g$c.a` @type ^`a.a.e.h` := v6 @kind object;
  #L07d03e.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v6 @kind this, `a.a.e.n` v7 @kind object) @signature `La/a/e/g$c;.a:(La/a/e/n;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07d050.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07d054.  v1:= new `a.a.e.g$c$3`;
  #L07d058.  v2:= "OkHttp %s ACK Settings" @kind object;
  #L07d05c.  v3:= 1I;
  #L07d05e.  v3:= new `java.lang.Object`[v3];
  #L07d062.  v4:= 0I;
  #L07d064.  v5:= v6.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d068.  v5:= v5.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07d06c.  v3[v4]:= v5 @kind object;
  #L07d070.  call `<init>`(v1, v6, v2, v3, v7) @signature `La/a/e/g$c$3;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/n;)V` @kind direct;
  #L07d076.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07d07c.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v0 @kind this) @signature `La/a/e/g$c;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L07d090.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `La/a/e/g$c;.a:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L07d0a4.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v1 @kind this, `int` v2 , `int` v3 , `java.util.List` v4 @kind object) @signature `La/a/e/g$c;.a:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07d0b8.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d0bc.  call `a`(v0, v3, v4) @signature `La/a/e/g;.a:(ILjava/util/List;)V` @kind virtual;
  #L07d0c2.  return @kind void;
}
procedure `void` `a`(`a.a.e.g$c` v4 @kind this, `int` v5 , `long` v6 ) @signature `La/a/e/g$c;.a:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07d0d4.  if v5 != 0 then goto L07d100;
  #L07d0d8.  v1:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d0dc.  @monitorenter v1
  #Try_start0.  
  #L07d0de.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d0e2.  v2:= v0.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07d0e6.  v2:= v2 + v6 @kind long;
  #L07d0e8.  v0.`a.a.e.g.k` @type ^`long` := v2 @kind wide;
  #L07d0ec.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d0f0.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L07d0f6.  @monitorexit v1
  #L07d0f8.  return @kind void;
  #L07d0fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d0fc.  @monitorexit v1
  #Try_end0.  
  #L07d0fe.  throw v0;
  #L07d100.  v0:= v4.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d104.  call temp:= `a`(v0, v5) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07d10a.  v1:= temp @kind object;
  #L07d10c.  if v1 == 0 then goto L07d0f8;
  #L07d110.  @monitorenter v1
  #Try_start1.  
  #L07d112.  call `a`(v1, v6) @signature `La/a/e/i;.a:(J)V` @kind virtual;
  #L07d118.  @monitorexit v1
  #L07d11a.  goto L07d0f8;
  #L07d11c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d11e.  @monitorexit v1
  #Try_end1.  
  #L07d120.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d0fa;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07d11c;
}
procedure `void` `a`(`a.a.e.g$c` v1 @kind this, `int` v2 , `a.a.e.b` v3 @kind object) @signature `La/a/e/g$c;.a:(ILa/a/e/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07d14c.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d150.  call temp:= `d`(v0, v2) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07d156.  v0:= temp;
  #L07d158.  if v0 == 0 then goto L07d168;
  #L07d15c.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d160.  call `c`(v0, v2, v3) @signature `La/a/e/g;.c:(ILa/a/e/b;)V` @kind virtual;
  #L07d166.  return @kind void;
  #L07d168.  v0:= v1.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d16c.  call temp:= `b`(v0, v2) @signature `La/a/e/g;.b:(I)La/a/e/i;` @kind virtual;
  #L07d172.  v0:= temp @kind object;
  #L07d174.  if v0 == 0 then goto L07d166;
  #L07d178.  call `c`(v0, v3) @signature `La/a/e/i;.c:(La/a/e/b;)V` @kind virtual;
  #L07d17e.  goto L07d166;
}
procedure `void` `a`(`a.a.e.g$c` v5 @kind this, `int` v6 , `a.a.e.b` v7 @kind object, `b.f` v8 @kind object) @signature `La/a/e/g$c;.a:(ILa/a/e/b;Lb/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07d190.  call temp:= `g`(v8) @signature `Lb/f;.g:()I` @kind virtual;
  #L07d196.  v0:= temp;
  #L07d198.  if v0 <= 0 then goto L07d19c;
  #L07d19c.  v1:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d1a0.  @monitorenter v1
  #Try_start0.  
  #L07d1a2.  v0:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d1a6.  v0:= v0.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d1aa.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07d1b0.  v0:= temp @kind object;
  #L07d1b2.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d1b6.  v2:= v2.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d1ba.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07d1c0.  v2:= temp;
  #L07d1c2.  v2:= new `a.a.e.i`[v2];
  #L07d1c6.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07d1cc.  v0:= temp @kind object;
  #L07d1ce.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L07d1d2.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d1d6.  v3:= 1I;
  #L07d1d8.  v2.`a.a.e.g.h` @type ^`boolean` := v3 @kind boolean;
  #L07d1dc.  @monitorexit v1
  #Try_end0.  
  #L07d1de.  v2:= length @variable v0;
  #L07d1e0.  v1:= 0I;
  #L07d1e2.  if v1 >= v2 then goto L07d22a;
  #L07d1e6.  v3:= v0[v1] @kind object;
  #L07d1ea.  call temp:= `a`(v3) @signature `La/a/e/i;.a:()I` @kind virtual;
  #L07d1f0.  v4:= temp;
  #L07d1f2.  if v4 <= v6 then goto L07d21e;
  #L07d1f6.  call temp:= `c`(v3) @signature `La/a/e/i;.c:()Z` @kind virtual;
  #L07d1fc.  v4:= temp;
  #L07d1fe.  if v4 == 0 then goto L07d21e;
  #L07d202.  v4:= `@@a.a.e.b.e` @type ^`a.a.e.b` @kind object;
  #L07d206.  call `c`(v3, v4) @signature `La/a/e/i;.c:(La/a/e/b;)V` @kind virtual;
  #L07d20c.  v4:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d210.  call temp:= `a`(v3) @signature `La/a/e/i;.a:()I` @kind virtual;
  #L07d216.  v3:= temp;
  #L07d218.  call temp:= `b`(v4, v3) @signature `La/a/e/g;.b:(I)La/a/e/i;` @kind virtual;
  #L07d21e.  v1:= v1 + 1;
  #L07d222.  goto L07d1e2;
  #L07d224.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L07d226.  @monitorexit v1
  #Try_end1.  
  #L07d228.  throw v0;
  #L07d22a.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d224;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07d224;
}
procedure `void` `a`(`a.a.e.g$c` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `La/a/e/g$c;.a:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07d250.  if v4 == 0 then goto L07d26c;
  #L07d254.  v0:= v3.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d258.  call temp:= `c`(v0, v5) @signature `La/a/e/g;.c:(I)La/a/e/l;` @kind virtual;
  #L07d25e.  v0:= temp @kind object;
  #L07d260.  if v0 == 0 then goto L07d26a;
  #L07d264.  call `b`(v0) @signature `La/a/e/l;.b:()V` @kind virtual;
  #L07d26a.  return @kind void;
  #L07d26c.  v0:= v3.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d270.  v1:= 1I;
  #L07d272.  v2:= 0I;
  #L07d274.  call `a`(v0, v1, v5, v6, v2) @signature `La/a/e/g;.a:(ZIILa/a/e/l;)V` @kind virtual;
  #L07d27a.  goto L07d26a;
}
procedure `void` `a`(`a.a.e.g$c` v8 @kind this, `boolean` v9 , `int` v10 , `int` v11 , `java.util.List` v12 @kind object) @signature `La/a/e/g$c;.a:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07d28c.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d290.  call temp:= `d`(v0, v10) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07d296.  v0:= temp;
  #L07d298.  if v0 == 0 then goto L07d2a8;
  #L07d29c.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d2a0.  call `a`(v0, v10, v12, v9) @signature `La/a/e/g;.a:(ILjava/util/List;Z)V` @kind virtual;
  #L07d2a6.  return @kind void;
  #L07d2a8.  v6:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d2ac.  @monitorenter v6
  #Try_start0.  
  #L07d2ae.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d2b2.  v0:= v0.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #L07d2b6.  if v0 == 0 then goto L07d2c4;
  #L07d2ba.  @monitorexit v6
  #L07d2bc.  goto L07d2a6;
  #L07d2be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d2c0.  @monitorexit v6
  #Try_end0.  
  #L07d2c2.  throw v0;
  #Try_start1.  
  #L07d2c4.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d2c8.  call temp:= `a`(v0, v10) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07d2ce.  v0:= temp @kind object;
  #L07d2d0.  if v0 != 0 then goto L07d36e;
  #L07d2d4.  v0:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d2d8.  v0:= v0.`a.a.e.g.f` @type ^`int`;
  #L07d2dc.  if v10 > v0 then goto L07d2e4;
  #L07d2e0.  @monitorexit v6
  #L07d2e2.  goto L07d2a6;
  #L07d2e4.  v0:= v10 %% 2;
  #L07d2e8.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d2ec.  v1:= v1.`a.a.e.g.g` @type ^`int`;
  #L07d2f0.  v1:= v1 %% 2;
  #L07d2f4.  if v0 != v1 then goto L07d2fc;
  #L07d2f8.  @monitorexit v6
  #L07d2fa.  goto L07d2a6;
  #L07d2fc.  v0:= new `a.a.e.i`;
  #L07d300.  v2:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d304.  v3:= 0I;
  #L07d306.  v1:= v10;
  #L07d308.  v4:= v9;
  #L07d30a.  v5:= v12 @kind object;
  #L07d30c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/i;.<init>:(ILa/a/e/g;ZZLjava/util/List;)V` @kind direct;
  #L07d312.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d316.  v1.`a.a.e.g.f` @type ^`int` := v10;
  #L07d31a.  v1:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d31e.  v1:= v1.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d322.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07d328.  v2:= temp @kind object;
  #L07d32a.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07d330.  v1:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07d334.  v2:= new `a.a.e.g$c$1`;
  #L07d338.  v3:= "OkHttp %s stream %d" @kind object;
  #L07d33c.  v4:= 2I;
  #L07d33e.  v4:= new `java.lang.Object`[v4];
  #L07d342.  v5:= 0I;
  #L07d344.  v7:= v8.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d348.  v7:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07d34c.  v4[v5]:= v7 @kind object;
  #L07d350.  v5:= 1I;
  #L07d352.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07d358.  v7:= temp @kind object;
  #L07d35a.  v4[v5]:= v7 @kind object;
  #L07d35e.  call `<init>`(v2, v8, v3, v4, v0) @signature `La/a/e/g$c$1;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;La/a/e/i;)V` @kind direct;
  #L07d364.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07d36a.  @monitorexit v6
  #L07d36c.  goto L07d2a6;
  #L07d36e.  @monitorexit v6
  #Try_end1.  
  #L07d370.  call `a`(v0, v12) @signature `La/a/e/i;.a:(Ljava/util/List;)V` @kind virtual;
  #L07d376.  if v9 == 0 then goto L07d2a6;
  #L07d37a.  call `i`(v0) @signature `La/a/e/i;.i:()V` @kind virtual;
  #L07d380.  goto L07d2a6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d2be;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07d2be;
}
procedure `void` `a`(`a.a.e.g$c` v2 @kind this, `boolean` v3 , `int` v4 , `b.e` v5 @kind object, `int` v6 ) @signature `La/a/e/g$c;.a:(ZILb/e;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07d3a8.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d3ac.  call temp:= `d`(v0, v4) @signature `La/a/e/g;.d:(I)Z` @kind virtual;
  #L07d3b2.  v0:= temp;
  #L07d3b4.  if v0 == 0 then goto L07d3c4;
  #L07d3b8.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d3bc.  call `a`(v0, v4, v5, v6, v3) @signature `La/a/e/g;.a:(ILb/e;IZ)V` @kind virtual;
  #L07d3c2.  return @kind void;
  #L07d3c4.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d3c8.  call temp:= `a`(v0, v4) @signature `La/a/e/g;.a:(I)La/a/e/i;` @kind virtual;
  #L07d3ce.  v0:= temp @kind object;
  #L07d3d0.  if v0 != 0 then goto L07d3ec;
  #L07d3d4.  v0:= v2.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d3d8.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #L07d3dc.  call `a`(v0, v4, v1) @signature `La/a/e/g;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07d3e2.  v0:= (`long`) v6 @kind i2l;
  #L07d3e4.  call `g`(v5, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07d3ea.  goto L07d3c2;
  #L07d3ec.  call `a`(v0, v5, v6) @signature `La/a/e/i;.a:(Lb/e;I)V` @kind virtual;
  #L07d3f2.  if v3 == 0 then goto L07d3c2;
  #L07d3f6.  call `i`(v0) @signature `La/a/e/i;.i:()V` @kind virtual;
  #L07d3fc.  goto L07d3c2;
}
procedure `void` `a`(`a.a.e.g$c` v13 @kind this, `boolean` v14 , `a.a.e.n` v15 @kind object) @signature `La/a/e/g$c;.a:(ZLa/a/e/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L07d410.  v6:= 0L;
  #L07d414.  v1:= 0I;
  #L07d416.  v0:= 0I;
  #L07d418.  v8:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d41c.  @monitorenter v8
  #Try_start0.  
  #L07d41e.  v2:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d422.  v2:= v2.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07d426.  call temp:= `d`(v2) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07d42c.  v2:= temp;
  #L07d42e.  if v14 == 0 then goto L07d440;
  #L07d432.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d436.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07d43a.  call `a`(v3) @signature `La/a/e/n;.a:()V` @kind virtual;
  #L07d440.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d444.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07d448.  call `a`(v3, v15) @signature `La/a/e/n;.a:(La/a/e/n;)V` @kind virtual;
  #L07d44e.  call `a`(v13, v15) @signature `La/a/e/g$c;.a:(La/a/e/n;)V` @kind direct;
  #L07d454.  v3:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d458.  v3:= v3.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07d45c.  call temp:= `d`(v3) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07d462.  v3:= temp;
  #L07d464.  v4:= -1I;
  #L07d466.  if v3 == v4 then goto L07d546;
  #L07d46a.  if v3 == v2 then goto L07d546;
  #L07d46e.  v2:= v3 - v2 @kind int;
  #L07d472.  v2:= (`long`) v2 @kind i2l;
  #L07d474.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d478.  v4:= v4.`a.a.e.g.n` @type ^`boolean` @kind boolean;
  #L07d47c.  if v4 != 0 then goto L07d494;
  #L07d480.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d484.  call `a`(v4, v2) @signature `La/a/e/g;.a:(J)V` @kind virtual;
  #L07d48a.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d48e.  v5:= 1I;
  #L07d490.  v4.`a.a.e.g.n` @type ^`boolean` := v5 @kind boolean;
  #L07d494.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d498.  v4:= v4.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d49c.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L07d4a2.  v4:= temp;
  #L07d4a4.  if v4 != 0 then goto L07d540;
  #L07d4a8.  v0:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d4ac.  v0:= v0.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d4b0.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07d4b6.  v0:= temp @kind object;
  #L07d4b8.  v4:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d4bc.  v4:= v4.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d4c0.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07d4c6.  v4:= temp;
  #L07d4c8.  v4:= new `a.a.e.i`[v4];
  #L07d4cc.  call temp:= `toArray`(v0, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07d4d2.  v0:= temp @kind object;
  #L07d4d4.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L07d4d8.  v4:= v2 @kind wide;
  #L07d4da.  v2:= v0 @kind object;
  #L07d4dc.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07d4e0.  v3:= new `a.a.e.g$c$2`;
  #L07d4e4.  v9:= "OkHttp %s settings" @kind object;
  #L07d4e8.  v10:= 1I;
  #L07d4ea.  v10:= new `java.lang.Object`[v10];
  #L07d4ee.  v11:= 0I;
  #L07d4f0.  v12:= v13.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d4f4.  v12:= v12.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07d4f8.  v10[v11]:= v12 @kind object;
  #L07d4fc.  call `<init>`(v3, v13, v9, v10) @signature `La/a/e/g$c$2;.<init>:(La/a/e/g$c;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07d502.  call `execute`(v0, v3) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07d508.  @monitorexit v8
  #Try_end0.  
  #L07d50a.  if v2 == 0 then goto L07d53e;
  #L07d50e.  v0:= lcmp(v4, v6);
  #L07d512.  if v0 == 0 then goto L07d53e;
  #L07d516.  v3:= length @variable v2;
  #L07d518.  v0:= v1;
  #L07d51a.  if v0 >= v3 then goto L07d53e;
  #L07d51e.  v1:= v2[v0] @kind object;
  #L07d522.  @monitorenter v1
  #Try_start1.  
  #L07d524.  call `a`(v1, v4) @signature `La/a/e/i;.a:(J)V` @kind virtual;
  #L07d52a.  @monitorexit v1
  #Try_end1.  
  #L07d52c.  v0:= v0 + 1;
  #L07d530.  goto L07d51a;
  #L07d532.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start2.  
  #L07d534.  @monitorexit v8
  #Try_end2.  
  #L07d536.  throw v0;
  #L07d538.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L07d53a.  @monitorexit v1
  #Try_end3.  
  #L07d53c.  throw v0;
  #L07d53e.  return @kind void;
  #L07d540.  v4:= v2 @kind wide;
  #L07d542.  v2:= v0 @kind object;
  #L07d544.  goto L07d4dc;
  #L07d546.  v2:= v0 @kind object;
  #L07d548.  v4:= v6 @kind wide;
  #L07d54a.  goto L07d4dc;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d532;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07d538;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07d532;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07d538;
}
procedure `void` `b`(`a.a.e.g$c` v5 @kind this) @signature `La/a/e/g$c;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07d584.  v0:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #L07d588.  v2:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #Try_start0.  
  #L07d58c.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07d590.  call `a`(v1, v5) @signature `La/a/e/h;.a:(La/a/e/h$b;)V` @kind virtual;
  #L07d596.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07d59a.  v3:= 0I;
  #L07d59c.  call temp:= `a`(v1, v3, v5) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @kind virtual;
  #L07d5a2.  v1:= temp;
  #L07d5a4.  if v1 != 0 then goto L07d596;
  #L07d5a8.  v0:= `@@a.a.e.b.a` @type ^`a.a.e.b` @kind object;
  #L07d5ac.  v1:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #Try_end0.  
  #Try_start1.  
  #L07d5b0.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d5b4.  call `a`(v2, v0, v1) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end1.  
  #L07d5ba.  v0:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07d5be.  call `a`(v0) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07d5c4.  return @kind void;
  #L07d5c6.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L07d5c8.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #Try_end2.  
  #Try_start3.  
  #L07d5cc.  v0:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #Try_end3.  
  #Try_start4.  
  #L07d5d0.  v2:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d5d4.  call `a`(v2, v1, v0) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end4.  
  #L07d5da.  v0:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07d5de.  call `a`(v0) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07d5e4.  goto L07d5c4;
  #L07d5e6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d5e8.  v4:= v1 @kind object;
  #L07d5ea.  v1:= v0 @kind object;
  #L07d5ec.  v0:= v4 @kind object;
  #Try_start5.  
  #L07d5ee.  v3:= v5.`a.a.e.g$c.c` @type ^`a.a.e.g` @kind object;
  #L07d5f2.  call `a`(v3, v1, v2) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #Try_end5.  
  #L07d5f8.  v1:= v5.`a.a.e.g$c.a` @type ^`a.a.e.h` @kind object;
  #L07d5fc.  call `a`(v1) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L07d602.  throw v0;
  #L07d604.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L07d606.  goto L07d5f8;
  #L07d608.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d60a.  goto L07d5ee;
  #L07d60c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07d60e.  goto L07d5da;
  #L07d610.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07d612.  goto L07d5ba;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07d5c6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d5e6;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L07d610;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07d5e6;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07d608;
  catch `java.io.IOException` @[Try_start4..Try_end4] goto L07d60c;
  catch `java.io.IOException` @[Try_start5..Try_end5] goto L07d604;
}

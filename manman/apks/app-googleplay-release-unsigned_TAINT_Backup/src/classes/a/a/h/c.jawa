record `a.a.h.c` @kind class @AccessFlag FINAL {
  `java.lang.String` `a.a.h.c.a` @AccessFlag PRIVATE_FINAL;
  `int` `a.a.h.c.b` @AccessFlag PRIVATE_FINAL;
  `int` `a.a.h.c.c` @AccessFlag PRIVATE;
  `int` `a.a.h.c.d` @AccessFlag PRIVATE;
  `int` `a.a.h.c.e` @AccessFlag PRIVATE;
  `int` `a.a.h.c.f` @AccessFlag PRIVATE;
  `char`[] `a.a.h.c.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.h.c` v1 @kind this, `javax.security.auth.x500.X500Principal` v2 @kind object) @signature `La/a/h/c;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L082e18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L082e1e.  v0:= "RFC2253" @kind object;
  #L082e22.  call temp:= `getName`(v2, v0) @signature `Ljavax/security/auth/x500/X500Principal;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L082e28.  v0:= temp @kind object;
  #L082e2a.  v1.`a.a.h.c.a` @type ^`java.lang.String` := v0 @kind object;
  #L082e2e.  v0:= v1.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L082e32.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L082e38.  v0:= temp;
  #L082e3a.  v1.`a.a.h.c.b` @type ^`int` := v0;
  #L082e3e.  return @kind void;
}
procedure `int` `a`(`a.a.h.c` v8 @kind this, `int` v9 ) @signature `La/a/h/c;.a:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L082e50.  v7:= 97I;
  #L082e54.  v6:= 70I;
  #L082e58.  v5:= 65I;
  #L082e5c.  v4:= 57I;
  #L082e60.  v3:= 48I;
  #L082e64.  v0:= v9 + 1;
  #L082e68.  v1:= v8.`a.a.h.c.b` @type ^`int`;
  #L082e6c.  if v0 < v1 then goto L082ea6;
  #L082e70.  v0:= new `java.lang.IllegalStateException`;
  #L082e74.  v1:= new `java.lang.StringBuilder`;
  #L082e78.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L082e7e.  v2:= "Malformed DN: " @kind object;
  #L082e82.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082e88.  v1:= temp @kind object;
  #L082e8a.  v2:= v8.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L082e8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082e94.  v1:= temp @kind object;
  #L082e96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L082e9c.  v1:= temp @kind object;
  #L082e9e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L082ea4.  throw v0;
  #L082ea6.  v0:= v8.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L082eaa.  v0:= v0[v9] @kind char;
  #L082eae.  if v0 < v3 then goto L082eda;
  #L082eb2.  if v0 > v4 then goto L082eda;
  #L082eb6.  v0:= v0 + -48;
  #L082eba.  v1:= v8.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L082ebe.  v2:= v9 + 1;
  #L082ec2.  v1:= v1[v2] @kind char;
  #L082ec6.  if v1 < v3 then goto L082f30;
  #L082eca.  if v1 > v4 then goto L082f30;
  #L082ece.  v1:= v1 + -48;
  #L082ed2.  v0:= v0 ^< 4;
  #L082ed6.  v0:= v0 + v1 @kind int;
  #L082ed8.  return v0;
  #L082eda.  if v0 < v7 then goto L082eec;
  #L082ede.  v1:= 102I;
  #L082ee2.  if v0 > v1 then goto L082eec;
  #L082ee6.  v0:= v0 + -87;
  #L082eea.  goto L082eba;
  #L082eec.  if v0 < v5 then goto L082efa;
  #L082ef0.  if v0 > v6 then goto L082efa;
  #L082ef4.  v0:= v0 + -55;
  #L082ef8.  goto L082eba;
  #L082efa.  v0:= new `java.lang.IllegalStateException`;
  #L082efe.  v1:= new `java.lang.StringBuilder`;
  #L082f02.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L082f08.  v2:= "Malformed DN: " @kind object;
  #L082f0c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082f12.  v1:= temp @kind object;
  #L082f14.  v2:= v8.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L082f18.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082f1e.  v1:= temp @kind object;
  #L082f20.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L082f26.  v1:= temp @kind object;
  #L082f28.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L082f2e.  throw v0;
  #L082f30.  if v1 < v7 then goto L082f42;
  #L082f34.  v2:= 102I;
  #L082f38.  if v1 > v2 then goto L082f42;
  #L082f3c.  v1:= v1 + -87;
  #L082f40.  goto L082ed2;
  #L082f42.  if v1 < v5 then goto L082f50;
  #L082f46.  if v1 > v6 then goto L082f50;
  #L082f4a.  v1:= v1 + -55;
  #L082f4e.  goto L082ed2;
  #L082f50.  v0:= new `java.lang.IllegalStateException`;
  #L082f54.  v1:= new `java.lang.StringBuilder`;
  #L082f58.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L082f5e.  v2:= "Malformed DN: " @kind object;
  #L082f62.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082f68.  v1:= temp @kind object;
  #L082f6a.  v2:= v8.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L082f6e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L082f74.  v1:= temp @kind object;
  #L082f76.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L082f7c.  v1:= temp @kind object;
  #L082f7e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L082f84.  throw v0;
}
procedure `java.lang.String` `a`(`a.a.h.c` v5 @kind this) @signature `La/a/h/c;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L082f98.  v3:= 61I;
  #L082f9c.  v2:= 32I;
  #L082fa0.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L082fa4.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L082fa8.  if v0 >= v1 then goto L082fca;
  #L082fac.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L082fb0.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L082fb4.  v0:= v0[v1] @kind char;
  #L082fb8.  if v0 != v2 then goto L082fca;
  #L082fbc.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L082fc0.  v0:= v0 + 1;
  #L082fc4.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L082fc8.  goto L082fa0;
  #L082fca.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L082fce.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L082fd2.  if v0 != v1 then goto L082fda;
  #L082fd6.  v0:= 0I;
  #L082fd8.  return v0 @kind object;
  #L082fda.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L082fde.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L082fe2.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L082fe6.  v0:= v0 + 1;
  #L082fea.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L082fee.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L082ff2.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L082ff6.  if v0 >= v1 then goto L083028;
  #L082ffa.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L082ffe.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L083002.  v0:= v0[v1] @kind char;
  #L083006.  if v0 == v3 then goto L083028;
  #L08300a.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08300e.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L083012.  v0:= v0[v1] @kind char;
  #L083016.  if v0 == v2 then goto L083028;
  #L08301a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08301e.  v0:= v0 + 1;
  #L083022.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L083026.  goto L082fee;
  #L083028.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08302c.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L083030.  if v0 < v1 then goto L08306a;
  #L083034.  v0:= new `java.lang.IllegalStateException`;
  #L083038.  v1:= new `java.lang.StringBuilder`;
  #L08303c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L083042.  v2:= "Unexpected end of DN: " @kind object;
  #L083046.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08304c.  v1:= temp @kind object;
  #L08304e.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L083052.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083058.  v1:= temp @kind object;
  #L08305a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083060.  v1:= temp @kind object;
  #L083062.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L083068.  throw v0;
  #L08306a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08306e.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L083072.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083076.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08307a.  v0:= v0[v1] @kind char;
  #L08307e.  if v0 != v2 then goto L08310e;
  #L083082.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083086.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L08308a.  if v0 >= v1 then goto L0830bc;
  #L08308e.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083092.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L083096.  v0:= v0[v1] @kind char;
  #L08309a.  if v0 == v3 then goto L0830bc;
  #L08309e.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0830a2.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0830a6.  v0:= v0[v1] @kind char;
  #L0830aa.  if v0 != v2 then goto L0830bc;
  #L0830ae.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0830b2.  v0:= v0 + 1;
  #L0830b6.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0830ba.  goto L083082;
  #L0830bc.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0830c0.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0830c4.  v0:= v0[v1] @kind char;
  #L0830c8.  if v0 != v3 then goto L0830d8;
  #L0830cc.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0830d0.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L0830d4.  if v0 != v1 then goto L08310e;
  #L0830d8.  v0:= new `java.lang.IllegalStateException`;
  #L0830dc.  v1:= new `java.lang.StringBuilder`;
  #L0830e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0830e6.  v2:= "Unexpected end of DN: " @kind object;
  #L0830ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0830f0.  v1:= temp @kind object;
  #L0830f2.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L0830f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0830fc.  v1:= temp @kind object;
  #L0830fe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083104.  v1:= temp @kind object;
  #L083106.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08310c.  throw v0;
  #L08310e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083112.  v0:= v0 + 1;
  #L083116.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L08311a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08311e.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L083122.  if v0 >= v1 then goto L083144;
  #L083126.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08312a.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08312e.  v0:= v0[v1] @kind char;
  #L083132.  if v0 != v2 then goto L083144;
  #L083136.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08313a.  v0:= v0 + 1;
  #L08313e.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L083142.  goto L08311a;
  #L083144.  v0:= v5.`a.a.h.c.e` @type ^`int`;
  #L083148.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L08314c.  v0:= v0 - v1 @kind int;
  #L08314e.  v1:= 4I;
  #L083150.  if v0 <= v1 then goto L083200;
  #L083154.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083158.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L08315c.  v1:= v1 + 3;
  #L083160.  v0:= v0[v1] @kind char;
  #L083164.  v1:= 46I;
  #L083168.  if v0 != v1 then goto L083200;
  #L08316c.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083170.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L083174.  v0:= v0[v1] @kind char;
  #L083178.  v1:= 79I;
  #L08317c.  if v0 == v1 then goto L083194;
  #L083180.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083184.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L083188.  v0:= v0[v1] @kind char;
  #L08318c.  v1:= 111I;
  #L083190.  if v0 != v1 then goto L083200;
  #L083194.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083198.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L08319c.  v1:= v1 + 1;
  #L0831a0.  v0:= v0[v1] @kind char;
  #L0831a4.  v1:= 73I;
  #L0831a8.  if v0 == v1 then goto L0831c4;
  #L0831ac.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0831b0.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L0831b4.  v1:= v1 + 1;
  #L0831b8.  v0:= v0[v1] @kind char;
  #L0831bc.  v1:= 105I;
  #L0831c0.  if v0 != v1 then goto L083200;
  #L0831c4.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0831c8.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L0831cc.  v1:= v1 + 2;
  #L0831d0.  v0:= v0[v1] @kind char;
  #L0831d4.  v1:= 68I;
  #L0831d8.  if v0 == v1 then goto L0831f4;
  #L0831dc.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0831e0.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L0831e4.  v1:= v1 + 2;
  #L0831e8.  v0:= v0[v1] @kind char;
  #L0831ec.  v1:= 100I;
  #L0831f0.  if v0 != v1 then goto L083200;
  #L0831f4.  v0:= v5.`a.a.h.c.d` @type ^`int`;
  #L0831f8.  v0:= v0 + 4;
  #L0831fc.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L083200.  v0:= new `java.lang.String`;
  #L083204.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083208.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L08320c.  v3:= v5.`a.a.h.c.e` @type ^`int`;
  #L083210.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L083214.  v3:= v3 - v4 @kind int;
  #L083216.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L08321c.  goto L082fd8;
}
procedure `java.lang.String` `b`(`a.a.h.c` v5 @kind this) @signature `La/a/h/c;.b:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083230.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083234.  v0:= v0 + 1;
  #L083238.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L08323c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083240.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L083244.  v0:= v5.`a.a.h.c.d` @type ^`int`;
  #L083248.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L08324c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083250.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L083254.  if v0 != v1 then goto L08328e;
  #L083258.  v0:= new `java.lang.IllegalStateException`;
  #L08325c.  v1:= new `java.lang.StringBuilder`;
  #L083260.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L083266.  v2:= "Unexpected end of DN: " @kind object;
  #L08326a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083270.  v1:= temp @kind object;
  #L083272.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L083276.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08327c.  v1:= temp @kind object;
  #L08327e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083284.  v1:= temp @kind object;
  #L083286.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08328c.  throw v0;
  #L08328e.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083292.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L083296.  v0:= v0[v1] @kind char;
  #L08329a.  v1:= 34I;
  #L08329e.  if v0 != v1 then goto L0832dc;
  #L0832a2.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0832a6.  v0:= v0 + 1;
  #L0832aa.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0832ae.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0832b2.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L0832b6.  if v0 >= v1 then goto L083338;
  #L0832ba.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0832be.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0832c2.  v0:= v0[v1] @kind char;
  #L0832c6.  v1:= 32I;
  #L0832ca.  if v0 != v1 then goto L083338;
  #L0832ce.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0832d2.  v0:= v0 + 1;
  #L0832d6.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0832da.  goto L0832ae;
  #L0832dc.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0832e0.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0832e4.  v0:= v0[v1] @kind char;
  #L0832e8.  v1:= 92I;
  #L0832ec.  if v0 != v1 then goto L08331e;
  #L0832f0.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0832f4.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L0832f8.  call temp:= `e`(v5) @signature `La/a/h/c;.e:()C` @kind direct;
  #L0832fe.  v2:= temp;
  #L083300.  v0[v1]:= v2 @kind char;
  #L083304.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083308.  v0:= v0 + 1;
  #L08330c.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L083310.  v0:= v5.`a.a.h.c.e` @type ^`int`;
  #L083314.  v0:= v0 + 1;
  #L083318.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L08331c.  goto L08324c;
  #L08331e.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083322.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L083326.  v2:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08332a.  v3:= v5.`a.a.h.c.c` @type ^`int`;
  #L08332e.  v2:= v2[v3] @kind char;
  #L083332.  v0[v1]:= v2 @kind char;
  #L083336.  goto L083304;
  #L083338.  v0:= new `java.lang.String`;
  #L08333c.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083340.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L083344.  v3:= v5.`a.a.h.c.e` @type ^`int`;
  #L083348.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L08334c.  v3:= v3 - v4 @kind int;
  #L08334e.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L083354.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`a.a.h.c` v5 @kind this) @signature `La/a/h/c;.c:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083368.  v3:= 32I;
  #L08336c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083370.  v0:= v0 + 4;
  #L083374.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L083378.  if v0 < v1 then goto L0833b2;
  #L08337c.  v0:= new `java.lang.IllegalStateException`;
  #L083380.  v1:= new `java.lang.StringBuilder`;
  #L083384.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08338a.  v2:= "Unexpected end of DN: " @kind object;
  #L08338e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083394.  v1:= temp @kind object;
  #L083396.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L08339a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0833a0.  v1:= temp @kind object;
  #L0833a2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0833a8.  v1:= temp @kind object;
  #L0833aa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0833b0.  throw v0;
  #L0833b2.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0833b6.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L0833ba.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0833be.  v0:= v0 + 1;
  #L0833c2.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0833c6.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0833ca.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L0833ce.  if v0 == v1 then goto L08340e;
  #L0833d2.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0833d6.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0833da.  v0:= v0[v1] @kind char;
  #L0833de.  v1:= 43I;
  #L0833e2.  if v0 == v1 then goto L08340e;
  #L0833e6.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0833ea.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0833ee.  v0:= v0[v1] @kind char;
  #L0833f2.  v1:= 44I;
  #L0833f6.  if v0 == v1 then goto L08340e;
  #L0833fa.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0833fe.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L083402.  v0:= v0[v1] @kind char;
  #L083406.  v1:= 59I;
  #L08340a.  if v0 != v1 then goto L083466;
  #L08340e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083412.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L083416.  v0:= v5.`a.a.h.c.e` @type ^`int`;
  #L08341a.  v1:= v5.`a.a.h.c.d` @type ^`int`;
  #L08341e.  v2:= v0 - v1 @kind int;
  #L083422.  v0:= 5I;
  #L083424.  if v2 < v0 then goto L083430;
  #L083428.  v0:= v2 ^& 1;
  #L08342c.  if v0 != 0 then goto L083502;
  #L083430.  v0:= new `java.lang.IllegalStateException`;
  #L083434.  v1:= new `java.lang.StringBuilder`;
  #L083438.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08343e.  v2:= "Unexpected end of DN: " @kind object;
  #L083442.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083448.  v1:= temp @kind object;
  #L08344a.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L08344e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083454.  v1:= temp @kind object;
  #L083456.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08345c.  v1:= temp @kind object;
  #L08345e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L083464.  throw v0;
  #L083466.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08346a.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08346e.  v0:= v0[v1] @kind char;
  #L083472.  if v0 != v3 then goto L0834b4;
  #L083476.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08347a.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L08347e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083482.  v0:= v0 + 1;
  #L083486.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L08348a.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08348e.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L083492.  if v0 >= v1 then goto L083416;
  #L083496.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08349a.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08349e.  v0:= v0[v1] @kind char;
  #L0834a2.  if v0 != v3 then goto L083416;
  #L0834a6.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0834aa.  v0:= v0 + 1;
  #L0834ae.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0834b2.  goto L08348a;
  #L0834b4.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0834b8.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0834bc.  v0:= v0[v1] @kind char;
  #L0834c0.  v1:= 65I;
  #L0834c4.  if v0 < v1 then goto L0834f2;
  #L0834c8.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0834cc.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0834d0.  v0:= v0[v1] @kind char;
  #L0834d4.  v1:= 70I;
  #L0834d8.  if v0 > v1 then goto L0834f2;
  #L0834dc.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0834e0.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0834e4.  v2:= v0[v1] @kind char;
  #L0834e8.  v2:= v2 + 32;
  #L0834ec.  v2:= (`char`) v2 @kind i2c;
  #L0834ee.  v0[v1]:= v2 @kind char;
  #L0834f2.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0834f6.  v0:= v0 + 1;
  #L0834fa.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0834fe.  goto L0833c6;
  #L083502.  v0:= v2 / 2;
  #L083506.  v3:= new `byte`[v0];
  #L08350a.  v1:= 0I;
  #L08350c.  v0:= v5.`a.a.h.c.d` @type ^`int`;
  #L083510.  v0:= v0 + 1;
  #L083514.  v4:= length @variable v3;
  #L083516.  if v1 >= v4 then goto L083532;
  #L08351a.  call temp:= `a`(v5, v0) @signature `La/a/h/c;.a:(I)I` @kind direct;
  #L083520.  v4:= temp;
  #L083522.  v4:= (`byte`) v4 @kind i2b;
  #L083524.  v3[v1]:= v4 @kind byte;
  #L083528.  v0:= v0 + 2;
  #L08352c.  v1:= v1 + 1;
  #L083530.  goto L083514;
  #L083532.  v0:= new `java.lang.String`;
  #L083536.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08353a.  v3:= v5.`a.a.h.c.d` @type ^`int`;
  #L08353e.  call `<init>`(v0, v1, v3, v2) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L083544.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`a.a.h.c` v5 @kind this) @signature `La/a/h/c;.d:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083558.  v4:= 32I;
  #L08355c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083560.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L083564.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083568.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L08356c.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083570.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L083574.  if v0 < v1 then goto L083596;
  #L083578.  v0:= new `java.lang.String`;
  #L08357c.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083580.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L083584.  v3:= v5.`a.a.h.c.e` @type ^`int`;
  #L083588.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L08358c.  v3:= v3 - v4 @kind int;
  #L08358e.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L083594.  return v0 @kind object;
  #L083596.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08359a.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08359e.  v0:= v0[v1] @kind char;
  #L0835a2.  goto L0836ec;
  #L0835a8.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0835ac.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L0835b0.  v2:= v1 + 1;
  #L0835b4.  v5.`a.a.h.c.e` @type ^`int` := v2;
  #L0835b8.  v2:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0835bc.  v3:= v5.`a.a.h.c.c` @type ^`int`;
  #L0835c0.  v2:= v2[v3] @kind char;
  #L0835c4.  v0[v1]:= v2 @kind char;
  #L0835c8.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0835cc.  v0:= v0 + 1;
  #L0835d0.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0835d4.  goto L08356c;
  #L0835d6.  v0:= new `java.lang.String`;
  #L0835da.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0835de.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L0835e2.  v3:= v5.`a.a.h.c.e` @type ^`int`;
  #L0835e6.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L0835ea.  v3:= v3 - v4 @kind int;
  #L0835ec.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L0835f2.  goto L083594;
  #L0835f4.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0835f8.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L0835fc.  v2:= v1 + 1;
  #L083600.  v5.`a.a.h.c.e` @type ^`int` := v2;
  #L083604.  call temp:= `e`(v5) @signature `La/a/h/c;.e:()C` @kind direct;
  #L08360a.  v2:= temp;
  #L08360c.  v0[v1]:= v2 @kind char;
  #L083610.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083614.  v0:= v0 + 1;
  #L083618.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L08361c.  goto L08356c;
  #L08361e.  v0:= v5.`a.a.h.c.e` @type ^`int`;
  #L083622.  v5.`a.a.h.c.f` @type ^`int` := v0;
  #L083626.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08362a.  v0:= v0 + 1;
  #L08362e.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L083632.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083636.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L08363a.  v2:= v1 + 1;
  #L08363e.  v5.`a.a.h.c.e` @type ^`int` := v2;
  #L083642.  v0[v1]:= v4 @kind char;
  #L083646.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08364a.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L08364e.  if v0 >= v1 then goto L083684;
  #L083652.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083656.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L08365a.  v0:= v0[v1] @kind char;
  #L08365e.  if v0 != v4 then goto L083684;
  #L083662.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083666.  v1:= v5.`a.a.h.c.e` @type ^`int`;
  #L08366a.  v2:= v1 + 1;
  #L08366e.  v5.`a.a.h.c.e` @type ^`int` := v2;
  #L083672.  v0[v1]:= v4 @kind char;
  #L083676.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L08367a.  v0:= v0 + 1;
  #L08367e.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L083682.  goto L083646;
  #L083684.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083688.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L08368c.  if v0 == v1 then goto L0836cc;
  #L083690.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083694.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L083698.  v0:= v0[v1] @kind char;
  #L08369c.  v1:= 44I;
  #L0836a0.  if v0 == v1 then goto L0836cc;
  #L0836a4.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0836a8.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0836ac.  v0:= v0[v1] @kind char;
  #L0836b0.  v1:= 43I;
  #L0836b4.  if v0 == v1 then goto L0836cc;
  #L0836b8.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0836bc.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0836c0.  v0:= v0[v1] @kind char;
  #L0836c4.  v1:= 59I;
  #L0836c8.  if v0 != v1 then goto L08356c;
  #L0836cc.  v0:= new `java.lang.String`;
  #L0836d0.  v1:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0836d4.  v2:= v5.`a.a.h.c.d` @type ^`int`;
  #L0836d8.  v3:= v5.`a.a.h.c.f` @type ^`int`;
  #L0836dc.  v4:= v5.`a.a.h.c.d` @type ^`int`;
  #L0836e0.  v3:= v3 - v4 @kind int;
  #L0836e2.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L0836e8.  goto L083594;
  #L0836ec.  switch v0
                  | 32 => goto L08361e
                  | 43 => goto L0835d6
                  | 44 => goto L0835d6
                  | 59 => goto L0835d6
                  | 92 => goto L0835f4
                  | else => goto L0835a8;
}
procedure `char` `e`(`a.a.h.c` v3 @kind this) @signature `La/a/h/c;.e:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L083728.  v0:= v3.`a.a.h.c.c` @type ^`int`;
  #L08372c.  v0:= v0 + 1;
  #L083730.  v3.`a.a.h.c.c` @type ^`int` := v0;
  #L083734.  v0:= v3.`a.a.h.c.c` @type ^`int`;
  #L083738.  v1:= v3.`a.a.h.c.b` @type ^`int`;
  #L08373c.  if v0 != v1 then goto L083776;
  #L083740.  v0:= new `java.lang.IllegalStateException`;
  #L083744.  v1:= new `java.lang.StringBuilder`;
  #L083748.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08374e.  v2:= "Unexpected end of DN: " @kind object;
  #L083752.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083758.  v1:= temp @kind object;
  #L08375a.  v2:= v3.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L08375e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083764.  v1:= temp @kind object;
  #L083766.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08376c.  v1:= temp @kind object;
  #L08376e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L083774.  throw v0;
  #L083776.  v0:= v3.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08377a.  v1:= v3.`a.a.h.c.c` @type ^`int`;
  #L08377e.  v0:= v0[v1] @kind char;
  #L083782.  goto L0837a0;
  #L083788.  call temp:= `f`(v3) @signature `La/a/h/c;.f:()C` @kind direct;
  #L08378e.  v0:= temp;
  #L083790.  return v0;
  #L083792.  v0:= v3.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083796.  v1:= v3.`a.a.h.c.c` @type ^`int`;
  #L08379a.  v0:= v0[v1] @kind char;
  #L08379e.  goto L083790;
  #L0837a0.  switch v0
                  | 32 => goto L083792
                  | 34 => goto L083792
                  | 35 => goto L083792
                  | 37 => goto L083792
                  | 42 => goto L083792
                  | 43 => goto L083792
                  | 44 => goto L083792
                  | 59 => goto L083792
                  | 60 => goto L083792
                  | 61 => goto L083792
                  | 62 => goto L083792
                  | 92 => goto L083792
                  | 95 => goto L083792
                  | else => goto L083788;
}
procedure `char` `f`(`a.a.h.c` v8 @kind this) @signature `La/a/h/c;.f:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08381c.  v6:= 128I;
  #L083820.  v2:= 63I;
  #L083824.  v0:= v8.`a.a.h.c.c` @type ^`int`;
  #L083828.  call temp:= `a`(v8, v0) @signature `La/a/h/c;.a:(I)I` @kind direct;
  #L08382e.  v1:= temp;
  #L083830.  v0:= v8.`a.a.h.c.c` @type ^`int`;
  #L083834.  v0:= v0 + 1;
  #L083838.  v8.`a.a.h.c.c` @type ^`int` := v0;
  #L08383c.  if v1 >= v6 then goto L083844;
  #L083840.  v0:= (`char`) v1 @kind i2c;
  #L083842.  return v0;
  #L083844.  v0:= 192I;
  #L083848.  if v1 < v0 then goto L0838fa;
  #L08384c.  v0:= 247I;
  #L083850.  if v1 > v0 then goto L0838fa;
  #L083854.  v0:= 223I;
  #L083858.  if v1 > v0 then goto L08389e;
  #L08385c.  v0:= 1I;
  #L08385e.  v1:= v1 ^& 31;
  #L083862.  v3:= 0I;
  #L083864.  v7:= v3;
  #L083866.  v3:= v1;
  #L083868.  v1:= v7;
  #L08386a.  if v1 >= v0 then goto L0838f6;
  #L08386e.  v4:= v8.`a.a.h.c.c` @type ^`int`;
  #L083872.  v4:= v4 + 1;
  #L083876.  v8.`a.a.h.c.c` @type ^`int` := v4;
  #L08387a.  v4:= v8.`a.a.h.c.c` @type ^`int`;
  #L08387e.  v5:= v8.`a.a.h.c.b` @type ^`int`;
  #L083882.  if v4 == v5 then goto L08389a;
  #L083886.  v4:= v8.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08388a.  v5:= v8.`a.a.h.c.c` @type ^`int`;
  #L08388e.  v4:= v4[v5] @kind char;
  #L083892.  v5:= 92I;
  #L083896.  if v4 == v5 then goto L0838b6;
  #L08389a.  v0:= v2;
  #L08389c.  goto L083842;
  #L08389e.  v0:= 239I;
  #L0838a2.  if v1 > v0 then goto L0838ae;
  #L0838a6.  v0:= 2I;
  #L0838a8.  v1:= v1 ^& 15;
  #L0838ac.  goto L083862;
  #L0838ae.  v0:= 3I;
  #L0838b0.  v1:= v1 ^& 7;
  #L0838b4.  goto L083862;
  #L0838b6.  v4:= v8.`a.a.h.c.c` @type ^`int`;
  #L0838ba.  v4:= v4 + 1;
  #L0838be.  v8.`a.a.h.c.c` @type ^`int` := v4;
  #L0838c2.  v4:= v8.`a.a.h.c.c` @type ^`int`;
  #L0838c6.  call temp:= `a`(v8, v4) @signature `La/a/h/c;.a:(I)I` @kind direct;
  #L0838cc.  v4:= temp;
  #L0838ce.  v5:= v8.`a.a.h.c.c` @type ^`int`;
  #L0838d2.  v5:= v5 + 1;
  #L0838d6.  v8.`a.a.h.c.c` @type ^`int` := v5;
  #L0838da.  v5:= v4 ^& 192;
  #L0838de.  if v5 == v6 then goto L0838e6;
  #L0838e2.  v0:= v2;
  #L0838e4.  goto L083842;
  #L0838e6.  v3:= v3 ^< 6;
  #L0838ea.  v4:= v4 ^& 63;
  #L0838ee.  v3:= v3 + v4 @kind int;
  #L0838f0.  v1:= v1 + 1;
  #L0838f4.  goto L08386a;
  #L0838f6.  v0:= (`char`) v3 @kind i2c;
  #L0838f8.  goto L083842;
  #L0838fa.  v0:= v2;
  #L0838fc.  goto L083842;
}
procedure `java.lang.String` `a`(`a.a.h.c` v5 @kind this, `java.lang.String` v6 @kind object) @signature `La/a/h/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083910.  v2:= 0I;
  #L083912.  v0:= 0I;
  #L083914.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L083918.  v5.`a.a.h.c.d` @type ^`int` := v0;
  #L08391c.  v5.`a.a.h.c.e` @type ^`int` := v0;
  #L083920.  v5.`a.a.h.c.f` @type ^`int` := v0;
  #L083924.  v0:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L083928.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L08392e.  v0:= temp @kind object;
  #L083930.  v5.`a.a.h.c.g` @type ^`char`[] := v0 @kind object;
  #L083934.  call temp:= `a`(v5) @signature `La/a/h/c;.a:()Ljava/lang/String;` @kind direct;
  #L08393a.  v0:= temp @kind object;
  #L08393c.  if v0 != 0 then goto L083944;
  #L083940.  v1:= v2 @kind object;
  #L083942.  return v1 @kind object;
  #L083944.  v1:= "" @kind object;
  #L083948.  v3:= v5.`a.a.h.c.c` @type ^`int`;
  #L08394c.  v4:= v5.`a.a.h.c.b` @type ^`int`;
  #L083950.  if v3 != v4 then goto L083958;
  #L083954.  v1:= v2 @kind object;
  #L083956.  goto L083942;
  #L083958.  v3:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L08395c.  v4:= v5.`a.a.h.c.c` @type ^`int`;
  #L083960.  v3:= v3[v4] @kind char;
  #L083964.  goto L083a64;
  #L08396a.  call temp:= `d`(v5) @signature `La/a/h/c;.d:()Ljava/lang/String;` @kind direct;
  #L083970.  v1:= temp @kind object;
  #L083972.  call temp:= `equalsIgnoreCase`(v6, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L083978.  v0:= temp;
  #L08397a.  if v0 != 0 then goto L083942;
  #L08397e.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L083982.  v1:= v5.`a.a.h.c.b` @type ^`int`;
  #L083986.  if v0 < v1 then goto L0839a2;
  #L08398a.  v1:= v2 @kind object;
  #L08398c.  goto L083942;
  #L08398e.  call temp:= `b`(v5) @signature `La/a/h/c;.b:()Ljava/lang/String;` @kind direct;
  #L083994.  v1:= temp @kind object;
  #L083996.  goto L083972;
  #L083998.  call temp:= `c`(v5) @signature `La/a/h/c;.c:()Ljava/lang/String;` @kind direct;
  #L08399e.  v1:= temp @kind object;
  #L0839a0.  goto L083972;
  #L0839a2.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0839a6.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0839aa.  v0:= v0[v1] @kind char;
  #L0839ae.  v1:= 44I;
  #L0839b2.  if v0 == v1 then goto L0839ca;
  #L0839b6.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L0839ba.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L0839be.  v0:= v0[v1] @kind char;
  #L0839c2.  v1:= 59I;
  #L0839c6.  if v0 != v1 then goto L083a18;
  #L0839ca.  v0:= v5.`a.a.h.c.c` @type ^`int`;
  #L0839ce.  v0:= v0 + 1;
  #L0839d2.  v5.`a.a.h.c.c` @type ^`int` := v0;
  #L0839d6.  call temp:= `a`(v5) @signature `La/a/h/c;.a:()Ljava/lang/String;` @kind direct;
  #L0839dc.  v0:= temp @kind object;
  #L0839de.  if v0 != 0 then goto L083944;
  #L0839e2.  v0:= new `java.lang.IllegalStateException`;
  #L0839e6.  v1:= new `java.lang.StringBuilder`;
  #L0839ea.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0839f0.  v2:= "Malformed DN: " @kind object;
  #L0839f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0839fa.  v1:= temp @kind object;
  #L0839fc.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L083a00.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083a06.  v1:= temp @kind object;
  #L083a08.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083a0e.  v1:= temp @kind object;
  #L083a10.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L083a16.  throw v0;
  #L083a18.  v0:= v5.`a.a.h.c.g` @type ^`char`[] @kind object;
  #L083a1c.  v1:= v5.`a.a.h.c.c` @type ^`int`;
  #L083a20.  v0:= v0[v1] @kind char;
  #L083a24.  v1:= 43I;
  #L083a28.  if v0 == v1 then goto L0839ca;
  #L083a2c.  v0:= new `java.lang.IllegalStateException`;
  #L083a30.  v1:= new `java.lang.StringBuilder`;
  #L083a34.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L083a3a.  v2:= "Malformed DN: " @kind object;
  #L083a3e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083a44.  v1:= temp @kind object;
  #L083a46.  v2:= v5.`a.a.h.c.a` @type ^`java.lang.String` @kind object;
  #L083a4a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083a50.  v1:= temp @kind object;
  #L083a52.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083a58.  v1:= temp @kind object;
  #L083a5a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L083a60.  throw v0;
  #L083a62.  
  #L083a64.  switch v3
                  | 34 => goto L08398e
                  | 35 => goto L083998
                  | 43 => goto L083972
                  | 44 => goto L083972
                  | 59 => goto L083972
                  | else => goto L08396a;
}

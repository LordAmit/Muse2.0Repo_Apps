record `a.a.h.d` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `a.a.h.d` `@@a.a.h.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/h/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L083aa0.  v0:= new `a.a.h.d`;
  #L083aa4.  call `<init>`(v0) @signature `La/a/h/d;.<init>:()V` @kind direct;
  #L083aaa.  `@@a.a.h.d.a` @type ^`a.a.h.d` := v0 @kind object;
  #L083aae.  return @kind void;
}
procedure `void` `<init>`(`a.a.h.d` v0 @kind this) @signature `La/a/h/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L083ac0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L083ac6.  return @kind void;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v5 @kind object) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083ad8.  v0:= 7I;
  #L083ada.  call temp:= `a`(v5, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L083ae0.  v0:= temp @kind object;
  #L083ae2.  v1:= 2I;
  #L083ae4.  call temp:= `a`(v5, v1) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L083aea.  v1:= temp @kind object;
  #L083aec.  v2:= new `java.util.ArrayList`;
  #L083af0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083af6.  v3:= temp;
  #L083af8.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083afe.  v4:= temp;
  #L083b00.  v3:= v3 + v4 @kind int;
  #L083b02.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L083b08.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L083b0e.  call temp:= `addAll`(v2, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L083b14.  return v2 @kind object;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v5 @kind object, `int` v6 ) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083b28.  v2:= new `java.util.ArrayList`;
  #L083b2c.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L083b32.  call temp:= `getSubjectAlternativeNames`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L083b38.  v0:= temp @kind object;
  #L083b3a.  if v0 != 0 then goto L083b48;
  #L083b3e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L083b44.  v0:= temp @kind object;
  #L083b46.  return v0 @kind object;
  #L083b48.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L083b4e.  v3:= temp @kind object;
  #L083b50.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L083b56.  v0:= temp;
  #L083b58.  if v0 == 0 then goto L083bbe;
  #L083b5c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L083b62.  v0:= temp @kind object;
  #L083b64.  v0:= (`java.util.List`) v0 @kind object;
  #L083b68.  if v0 == 0 then goto L083b50;
  #L083b6c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083b72.  v1:= temp;
  #L083b74.  v4:= 2I;
  #L083b76.  if v1 < v4 then goto L083b50;
  #L083b7a.  v1:= 0I;
  #L083b7c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083b82.  v1:= temp @kind object;
  #L083b84.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L083b88.  if v1 == 0 then goto L083b50;
  #L083b8c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L083b92.  v1:= temp;
  #L083b94.  if v1 != v6 then goto L083b50;
  #L083b98.  v1:= 1I;
  #L083b9a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083ba0.  v0:= temp @kind object;
  #L083ba2.  v0:= (`java.lang.String`) v0 @kind object;
  #L083ba6.  if v0 == 0 then goto L083b50;
  #L083baa.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L083bb0.  goto L083b50;
  #L083bb2.  v0:= Exception @type ^`java.security.cert.CertificateParsingException` @kind object;
  #L083bb4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L083bba.  v0:= temp @kind object;
  #L083bbc.  goto L083b46;
  #L083bbe.  v0:= v2 @kind object;
  #L083bc0.  goto L083b46;
  catch `java.security.cert.CertificateParsingException` @[Try_start0..Try_end0] goto L083bb2;
}
procedure `boolean` `a`(`a.a.h.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L083be4.  v6:= -1I;
  #L083be6.  v5:= 46I;
  #L083bea.  v1:= 1I;
  #L083bec.  v0:= 0I;
  #L083bee.  if v8 == 0 then goto L083c1e;
  #L083bf2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L083bf8.  v2:= temp;
  #L083bfa.  if v2 == 0 then goto L083c1e;
  #L083bfe.  v2:= "." @kind object;
  #L083c02.  call temp:= `startsWith`(v8, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L083c08.  v2:= temp;
  #L083c0a.  if v2 != 0 then goto L083c1e;
  #L083c0e.  v2:= ".." @kind object;
  #L083c12.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L083c18.  v2:= temp;
  #L083c1a.  if v2 == 0 then goto L083c20;
  #L083c1e.  return v0;
  #L083c20.  if v9 == 0 then goto L083c1e;
  #L083c24.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L083c2a.  v2:= temp;
  #L083c2c.  if v2 == 0 then goto L083c1e;
  #L083c30.  v2:= "." @kind object;
  #L083c34.  call temp:= `startsWith`(v9, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L083c3a.  v2:= temp;
  #L083c3c.  if v2 != 0 then goto L083c1e;
  #L083c40.  v2:= ".." @kind object;
  #L083c44.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L083c4a.  v2:= temp;
  #L083c4c.  if v2 != 0 then goto L083c1e;
  #L083c50.  v2:= "." @kind object;
  #L083c54.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L083c5a.  v2:= temp;
  #L083c5c.  if v2 != 0 then goto L083c82;
  #L083c60.  v2:= new `java.lang.StringBuilder`;
  #L083c64.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L083c6a.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083c70.  v2:= temp @kind object;
  #L083c72.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L083c78.  v2:= temp @kind object;
  #L083c7a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083c80.  v8:= temp @kind object;
  #L083c82.  v2:= "." @kind object;
  #L083c86.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L083c8c.  v2:= temp;
  #L083c8e.  if v2 != 0 then goto L083cb4;
  #L083c92.  v2:= new `java.lang.StringBuilder`;
  #L083c96.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L083c9c.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L083ca2.  v2:= temp @kind object;
  #L083ca4.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L083caa.  v2:= temp @kind object;
  #L083cac.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L083cb2.  v9:= temp @kind object;
  #L083cb4.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L083cb8.  call temp:= `toLowerCase`(v9, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L083cbe.  v2:= temp @kind object;
  #L083cc0.  v3:= "*" @kind object;
  #L083cc4.  call temp:= `contains`(v2, v3) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L083cca.  v3:= temp;
  #L083ccc.  if v3 != 0 then goto L083cda;
  #L083cd0.  call temp:= `equals`(v8, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L083cd6.  v0:= temp;
  #L083cd8.  goto L083c1e;
  #L083cda.  v3:= "*." @kind object;
  #L083cde.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L083ce4.  v3:= temp;
  #L083ce6.  if v3 == 0 then goto L083c1e;
  #L083cea.  v3:= 42I;
  #L083cee.  call temp:= `indexOf`(v2, v3, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L083cf4.  v3:= temp;
  #L083cf6.  if v3 != v6 then goto L083c1e;
  #L083cfa.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L083d00.  v3:= temp;
  #L083d02.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L083d08.  v4:= temp;
  #L083d0a.  if v3 < v4 then goto L083c1e;
  #L083d0e.  v3:= "*." @kind object;
  #L083d12.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L083d18.  v3:= temp;
  #L083d1a.  if v3 != 0 then goto L083c1e;
  #L083d1e.  call temp:= `substring`(v2, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L083d24.  v2:= temp @kind object;
  #L083d26.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L083d2c.  v3:= temp;
  #L083d2e.  if v3 == 0 then goto L083c1e;
  #L083d32.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L083d38.  v3:= temp;
  #L083d3a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L083d40.  v2:= temp;
  #L083d42.  v2:= v3 - v2 @kind int;
  #L083d46.  if v2 <= 0 then goto L083d5a;
  #L083d4a.  v2:= v2 + -1;
  #L083d4e.  call temp:= `lastIndexOf`(v8, v5, v2) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L083d54.  v2:= temp;
  #L083d56.  if v2 != v6 then goto L083c1e;
  #L083d5a.  v0:= v1;
  #L083d5c.  goto L083c1e;
}
procedure `boolean` `b`(`a.a.h.d` v5 @kind this, `java.lang.String` v6 @kind object, `java.security.cert.X509Certificate` v7 @kind object) @signature `La/a/h/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083d70.  v1:= 0I;
  #L083d72.  v0:= 7I;
  #L083d74.  call temp:= `a`(v7, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L083d7a.  v3:= temp @kind object;
  #L083d7c.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083d82.  v4:= temp;
  #L083d84.  v2:= v1;
  #L083d86.  if v2 >= v4 then goto L083dae;
  #L083d8a.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083d90.  v0:= temp @kind object;
  #L083d92.  v0:= (`java.lang.String`) v0 @kind object;
  #L083d96.  call temp:= `equalsIgnoreCase`(v6, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L083d9c.  v0:= temp;
  #L083d9e.  if v0 == 0 then goto L083da6;
  #L083da2.  v0:= 1I;
  #L083da4.  return v0;
  #L083da6.  v0:= v2 + 1;
  #L083daa.  v2:= v0;
  #L083dac.  goto L083d86;
  #L083dae.  v0:= v1;
  #L083db0.  goto L083da4;
}
procedure `boolean` `c`(`a.a.h.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.security.cert.X509Certificate` v9 @kind object) @signature `La/a/h/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L083dc4.  v1:= 1I;
  #L083dc6.  v2:= 0I;
  #L083dc8.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L083dcc.  call temp:= `toLowerCase`(v8, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L083dd2.  v4:= temp @kind object;
  #L083dd4.  v0:= 2I;
  #L083dd6.  call temp:= `a`(v9, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L083ddc.  v5:= temp @kind object;
  #L083dde.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083de4.  v6:= temp;
  #L083de6.  v3:= v2;
  #L083de8.  v0:= v2;
  #L083dea.  if v3 >= v6 then goto L083e14;
  #L083dee.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083df4.  v0:= temp @kind object;
  #L083df6.  v0:= (`java.lang.String`) v0 @kind object;
  #L083dfa.  call temp:= `a`(v7, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L083e00.  v0:= temp;
  #L083e02.  if v0 == 0 then goto L083e0a;
  #L083e06.  v0:= v1;
  #L083e08.  return v0;
  #L083e0a.  v0:= v3 + 1;
  #L083e0e.  v3:= v0;
  #L083e10.  v0:= v1;
  #L083e12.  goto L083dea;
  #L083e14.  if v0 != 0 then goto L083e44;
  #L083e18.  call temp:= `getSubjectX500Principal`(v9) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L083e1e.  v0:= temp @kind object;
  #L083e20.  v1:= new `a.a.h.c`;
  #L083e24.  call `<init>`(v1, v0) @signature `La/a/h/c;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @kind direct;
  #L083e2a.  v0:= "cn" @kind object;
  #L083e2e.  call temp:= `a`(v1, v0) @signature `La/a/h/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L083e34.  v0:= temp @kind object;
  #L083e36.  if v0 == 0 then goto L083e44;
  #L083e3a.  call temp:= `a`(v7, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L083e40.  v0:= temp;
  #L083e42.  goto L083e08;
  #L083e44.  v0:= v2;
  #L083e46.  goto L083e08;
}
procedure `boolean` `a`(`a.a.h.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L083e58.  call temp:= `c`(v2) @signature `La/a/c;.c:(Ljava/lang/String;)Z` @kind static;
  #L083e5e.  v0:= temp;
  #L083e60.  if v0 == 0 then goto L083e6e;
  #L083e64.  call temp:= `b`(v1, v2, v3) @signature `La/a/h/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L083e6a.  v0:= temp;
  #L083e6c.  return v0;
  #L083e6e.  call temp:= `c`(v1, v2, v3) @signature `La/a/h/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L083e74.  v0:= temp;
  #L083e76.  goto L083e6c;
}
procedure `boolean` `verify`(`a.a.h.d` v3 @kind this, `java.lang.String` v4 @kind object, `javax.net.ssl.SSLSession` v5 @kind object) @signature `La/a/h/d;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L083e88.  v1:= 0I;
  #Try_start0.  
  #L083e8a.  call temp:= `getPeerCertificates`(v5) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L083e90.  v0:= temp @kind object;
  #L083e92.  v2:= 0I;
  #L083e94.  v0:= v0[v2] @kind object;
  #L083e98.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L083e9c.  call temp:= `a`(v3, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #Try_end0.  
  #L083ea2.  v0:= temp;
  #L083ea4.  return v0;
  #L083ea6.  v0:= Exception @type ^`javax.net.ssl.SSLException` @kind object;
  #L083ea8.  v0:= v1;
  #L083eaa.  goto L083ea4;
  catch `javax.net.ssl.SSLException` @[Try_start0..Try_end0] goto L083ea6;
}

record `a.r` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.r.a` @AccessFlag FINAL;
  `java.lang.String` `a.r.b` @AccessFlag FINAL;
  `int` `a.r.c` @AccessFlag FINAL;
  `java.lang.String` `a.r.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.r.g` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.r.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.r.j` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@a.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L0896d4.  v0:= 16I;
  #L0896d8.  v0:= new `char`[v0];
  #L0896dc.  goto L0896e8;
  #L0896e2.  `@@a.r.d` @type ^`char`[] := v0 @kind object;
  #L0896e6.  return @kind void;
  #L0896e8.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L08970f.  goto L0896e2;
}
procedure `void` `<init>`(`a.r` v4 @kind this, `a.r$a` v5 @kind object) @signature `La/r;.<init>:(La/r$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L089720.  v1:= 0I;
  #L089722.  v3:= 0I;
  #L089724.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08972a.  v0:= v5.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08972e.  v4.`a.r.a` @type ^`java.lang.String` := v0 @kind object;
  #L089732.  v0:= v5.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L089736.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L08973c.  v0:= temp @kind object;
  #L08973e.  v4.`a.r.e` @type ^`java.lang.String` := v0 @kind object;
  #L089742.  v0:= v5.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L089746.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L08974c.  v0:= temp @kind object;
  #L08974e.  v4.`a.r.f` @type ^`java.lang.String` := v0 @kind object;
  #L089752.  v0:= v5.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L089756.  v4.`a.r.b` @type ^`java.lang.String` := v0 @kind object;
  #L08975a.  call temp:= `a`(v5) @signature `La/r$a;.a:()I` @kind virtual;
  #L089760.  v0:= temp;
  #L089762.  v4.`a.r.c` @type ^`int` := v0;
  #L089766.  v0:= v5.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08976a.  call temp:= `a`(v4, v0, v3) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L089770.  v0:= temp @kind object;
  #L089772.  v4.`a.r.g` @type ^`java.util.List` := v0 @kind object;
  #L089776.  v0:= v5.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08977a.  if v0 == 0 then goto L0897b6;
  #L08977e.  v0:= v5.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089782.  v2:= 1I;
  #L089784.  call temp:= `a`(v4, v0, v2) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L08978a.  v0:= temp @kind object;
  #L08978c.  v4.`a.r.h` @type ^`java.util.List` := v0 @kind object;
  #L089790.  v0:= v5.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L089794.  if v0 == 0 then goto L0897a4;
  #L089798.  v0:= v5.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08979c.  call temp:= `a`(v0, v3) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L0897a2.  v1:= temp @kind object;
  #L0897a4.  v4.`a.r.i` @type ^`java.lang.String` := v1 @kind object;
  #L0897a8.  call temp:= `toString`(v5) @signature `La/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L0897ae.  v0:= temp @kind object;
  #L0897b0.  v4.`a.r.j` @type ^`java.lang.String` := v0 @kind object;
  #L0897b4.  return @kind void;
  #L0897b6.  v0:= v1 @kind object;
  #L0897b8.  goto L08978c;
}
procedure `int` `a`(`char` v1 ) @signature `La/r;.a:(C)I` @AccessFlag STATIC {
    temp;
    v0;

  #L0897cc.  v0:= 48I;
  #L0897d0.  if v1 < v0 then goto L0897e2;
  #L0897d4.  v0:= 57I;
  #L0897d8.  if v1 > v0 then goto L0897e2;
  #L0897dc.  v0:= v1 + -48;
  #L0897e0.  return v0;
  #L0897e2.  v0:= 97I;
  #L0897e6.  if v1 < v0 then goto L0897fc;
  #L0897ea.  v0:= 102I;
  #L0897ee.  if v1 > v0 then goto L0897fc;
  #L0897f2.  v0:= v1 + -97;
  #L0897f6.  v0:= v0 + 10;
  #L0897fa.  goto L0897e0;
  #L0897fc.  v0:= 65I;
  #L089800.  if v1 < v0 then goto L089816;
  #L089804.  v0:= 70I;
  #L089808.  if v1 > v0 then goto L089816;
  #L08980c.  v0:= v1 + -65;
  #L089810.  v0:= v0 + 10;
  #L089814.  goto L0897e0;
  #L089816.  v0:= -1I;
  #L089818.  goto L0897e0;
}
procedure `int` `a`(`java.lang.String` v1 @kind object) @signature `La/r;.a:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08982c.  v0:= "http" @kind object;
  #L089830.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L089836.  v0:= temp;
  #L089838.  if v0 == 0 then goto L089842;
  #L08983c.  v0:= 80I;
  #L089840.  return v0;
  #L089842.  v0:= "https" @kind object;
  #L089846.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08984c.  v0:= temp;
  #L08984e.  if v0 == 0 then goto L089858;
  #L089852.  v0:= 443I;
  #L089856.  goto L089840;
  #L089858.  v0:= -1I;
  #L08985a.  goto L089840;
}
procedure `java.lang.String` `a`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 , `java.lang.String` v12 @kind object, `boolean` v13 , `boolean` v14 , `boolean` v15 , `boolean` v16 ) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L08986c.  v2:= v10;
  #L08986e.  if v2 >= v11 then goto L089908;
  #L089872.  call temp:= `codePointAt`(v9, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L089878.  v0:= temp;
  #L08987a.  v1:= 32I;
  #L08987e.  if v0 < v1 then goto L0898cc;
  #L089882.  v1:= 127I;
  #L089886.  if v0 == v1 then goto L0898cc;
  #L08988a.  v1:= 128I;
  #L08988e.  if v0 < v1 then goto L089896;
  #L089892.  if v16 != 0 then goto L0898cc;
  #L089896.  call temp:= `indexOf`(v12, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08989c.  v1:= temp;
  #L08989e.  v3:= -1I;
  #L0898a0.  if v1 != v3 then goto L0898cc;
  #L0898a4.  v1:= 37I;
  #L0898a8.  if v0 != v1 then goto L0898c0;
  #L0898ac.  if v13 == 0 then goto L0898cc;
  #L0898b0.  if v14 == 0 then goto L0898c0;
  #L0898b4.  call temp:= `a`(v9, v2, v11) @signature `La/r;.a:(Ljava/lang/String;II)Z` @kind static;
  #L0898ba.  v1:= temp;
  #L0898bc.  if v1 == 0 then goto L0898cc;
  #L0898c0.  v1:= 43I;
  #L0898c4.  if v0 != v1 then goto L0898fc;
  #L0898c8.  if v15 == 0 then goto L0898fc;
  #L0898cc.  v0:= new `b.c`;
  #L0898d0.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L0898d6.  call temp:= `a`(v0, v9, v10, v2) @signature `Lb/c;.a:(Ljava/lang/String;II)Lb/c;` @kind virtual;
  #L0898dc.  v1:= v9 @kind object;
  #L0898de.  v3:= v11;
  #L0898e0.  v4:= v12 @kind object;
  #L0898e2.  v5:= v13;
  #L0898e4.  v6:= v14;
  #L0898e6.  v7:= v15;
  #L0898e8.  v8:= v16;
  #L0898ec.  call `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IILjava/lang/String;ZZZZ)V` @kind static;
  #L0898f2.  call temp:= `o`(v0) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L0898f8.  v0:= temp @kind object;
  #L0898fa.  return v0 @kind object;
  #L0898fc.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L089902.  v0:= temp;
  #L089904.  v2:= v2 + v0 @kind int;
  #L089906.  goto L08986e;
  #L089908.  call temp:= `substring`(v9, v10, v11) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08990e.  v0:= temp @kind object;
  #L089910.  goto L0898fa;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L089924.  v0:= v4;
  #L089926.  if v0 >= v5 then goto L08996c;
  #L08992a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089930.  v1:= temp;
  #L089932.  v2:= 37I;
  #L089936.  if v1 == v2 then goto L089946;
  #L08993a.  v2:= 43I;
  #L08993e.  if v1 != v2 then goto L089966;
  #L089942.  if v6 == 0 then goto L089966;
  #L089946.  v1:= new `b.c`;
  #L08994a.  call `<init>`(v1) @signature `Lb/c;.<init>:()V` @kind direct;
  #L089950.  call temp:= `a`(v1, v3, v4, v0) @signature `Lb/c;.a:(Ljava/lang/String;II)Lb/c;` @kind virtual;
  #L089956.  call `a`(v1, v3, v0, v5, v6) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IIZ)V` @kind static;
  #L08995c.  call temp:= `o`(v1) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L089962.  v0:= temp @kind object;
  #L089964.  return v0 @kind object;
  #L089966.  v0:= v0 + 1;
  #L08996a.  goto L089926;
  #L08996c.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L089972.  v0:= temp @kind object;
  #L089974.  goto L089964;
}
procedure `java.lang.String` `a`(`java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `boolean` v10 , `boolean` v11 , `boolean` v12 , `boolean` v13 ) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L089988.  v1:= 0I;
  #L08998a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089990.  v2:= temp;
  #L089992.  v0:= v8 @kind object;
  #L089994.  v3:= v9 @kind object;
  #L089996.  v4:= v10;
  #L089998.  v5:= v11;
  #L08999a.  v6:= v12;
  #L08999c.  v7:= v13;
  #L08999e.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L0899a4.  v0:= temp @kind object;
  #L0899a6.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L0899b8.  v0:= 0I;
  #L0899ba.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0899c0.  v1:= temp;
  #L0899c2.  call temp:= `a`(v2, v0, v1, v3) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L0899c8.  v0:= temp @kind object;
  #L0899ca.  return v0 @kind object;
}
procedure `java.util.List` `a`(`a.r` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `La/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0899dc.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0899e2.  v2:= temp;
  #L0899e4.  v3:= new `java.util.ArrayList`;
  #L0899e8.  call `<init>`(v3, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0899ee.  v0:= 0I;
  #L0899f0.  v1:= v0;
  #L0899f2.  if v1 >= v2 then goto L089a20;
  #L0899f6.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0899fc.  v0:= temp @kind object;
  #L0899fe.  v0:= (`java.lang.String`) v0 @kind object;
  #L089a02.  if v0 == 0 then goto L089a1c;
  #L089a06.  call temp:= `a`(v0, v6) @signature `La/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L089a0c.  v0:= temp @kind object;
  #L089a0e.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089a14.  v0:= v1 + 1;
  #L089a18.  v1:= v0;
  #L089a1a.  goto L0899f2;
  #L089a1c.  v0:= 0I;
  #L089a1e.  goto L089a0e;
  #L089a20.  call temp:= `unmodifiableList`(v3) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L089a26.  v0:= temp @kind object;
  #L089a28.  return v0 @kind object;
}
procedure `void` `a`(`b.c` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IILjava/lang/String;ZZZZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L089a3c.  v5:= 37I;
  #L089a40.  v0:= 0I;
  #L089a42.  if v8 >= v9 then goto L089b46;
  #L089a46.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L089a4c.  v2:= temp;
  #L089a4e.  if v11 == 0 then goto L089a7e;
  #L089a52.  v1:= 9I;
  #L089a56.  if v2 == v1 then goto L089a72;
  #L089a5a.  v1:= 10I;
  #L089a5e.  if v2 == v1 then goto L089a72;
  #L089a62.  v1:= 12I;
  #L089a66.  if v2 == v1 then goto L089a72;
  #L089a6a.  v1:= 13I;
  #L089a6e.  if v2 != v1 then goto L089a7e;
  #L089a72.  call temp:= `charCount`(v2) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L089a78.  v1:= temp;
  #L089a7a.  v8:= v8 + v1 @kind int;
  #L089a7c.  goto L089a42;
  #L089a7e.  v1:= 43I;
  #L089a82.  if v2 != v1 then goto L089aa0;
  #L089a86.  if v13 == 0 then goto L089aa0;
  #L089a8a.  if v11 == 0 then goto L089a9a;
  #L089a8e.  v1:= "+" @kind object;
  #L089a92.  call temp:= `a`(v6, v1) @signature `Lb/c;.a:(Ljava/lang/String;)Lb/c;` @kind virtual;
  #L089a98.  goto L089a72;
  #L089a9a.  v1:= "%2B" @kind object;
  #L089a9e.  goto L089a92;
  #L089aa0.  v1:= 32I;
  #L089aa4.  if v2 < v1 then goto L089ae2;
  #L089aa8.  v1:= 127I;
  #L089aac.  if v2 == v1 then goto L089ae2;
  #L089ab0.  v1:= 128I;
  #L089ab4.  if v2 < v1 then goto L089abc;
  #L089ab8.  if v14 != 0 then goto L089ae2;
  #L089abc.  call temp:= `indexOf`(v10, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L089ac2.  v1:= temp;
  #L089ac4.  v3:= -1I;
  #L089ac6.  if v1 != v3 then goto L089ae2;
  #L089aca.  if v2 != v5 then goto L089b3e;
  #L089ace.  if v11 == 0 then goto L089ae2;
  #L089ad2.  if v12 == 0 then goto L089b3e;
  #L089ad6.  call temp:= `a`(v7, v8, v9) @signature `La/r;.a:(Ljava/lang/String;II)Z` @kind static;
  #L089adc.  v1:= temp;
  #L089ade.  if v1 != 0 then goto L089b3e;
  #L089ae2.  if v0 != 0 then goto L089af0;
  #L089ae6.  v0:= new `b.c`;
  #L089aea.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L089af0.  call temp:= `a`(v0, v2) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L089af6.  call temp:= `e`(v0) @signature `Lb/c;.e:()Z` @kind virtual;
  #L089afc.  v1:= temp;
  #L089afe.  if v1 != 0 then goto L089a72;
  #L089b02.  call temp:= `h`(v0) @signature `Lb/c;.h:()B` @kind virtual;
  #L089b08.  v1:= temp;
  #L089b0a.  v1:= v1 ^& 255;
  #L089b0e.  call temp:= `b`(v6, v5) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L089b14.  v3:= `@@a.r.d` @type ^`char`[] @kind object;
  #L089b18.  v4:= v1 ^> 4;
  #L089b1c.  v4:= v4 ^& 15;
  #L089b20.  v3:= v3[v4] @kind char;
  #L089b24.  call temp:= `b`(v6, v3) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L089b2a.  v3:= `@@a.r.d` @type ^`char`[] @kind object;
  #L089b2e.  v1:= v1 ^& 15;
  #L089b32.  v1:= v3[v1] @kind char;
  #L089b36.  call temp:= `b`(v6, v1) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L089b3c.  goto L089af6;
  #L089b3e.  call temp:= `a`(v6, v2) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L089b44.  goto L089a72;
  #L089b46.  return @kind void;
}
procedure `void` `a`(`b.c` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `La/r;.a:(Lb/c;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089b58.  v4:= -1I;
  #L089b5a.  v0:= v7;
  #L089b5c.  if v0 >= v8 then goto L089be4;
  #L089b60.  call temp:= `codePointAt`(v6, v0) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L089b66.  v1:= temp;
  #L089b68.  v2:= 37I;
  #L089b6c.  if v1 != v2 then goto L089bc4;
  #L089b70.  v2:= v0 + 2;
  #L089b74.  if v2 >= v8 then goto L089bc4;
  #L089b78.  v2:= v0 + 1;
  #L089b7c.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089b82.  v2:= temp;
  #L089b84.  call temp:= `a`(v2) @signature `La/r;.a:(C)I` @kind static;
  #L089b8a.  v2:= temp;
  #L089b8c.  v3:= v0 + 2;
  #L089b90.  call temp:= `charAt`(v6, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089b96.  v3:= temp;
  #L089b98.  call temp:= `a`(v3) @signature `La/r;.a:(C)I` @kind static;
  #L089b9e.  v3:= temp;
  #L089ba0.  if v2 == v4 then goto L089bdc;
  #L089ba4.  if v3 == v4 then goto L089bdc;
  #L089ba8.  v2:= v2 ^< 4;
  #L089bac.  v2:= v2 + v3 @kind int;
  #L089bae.  call temp:= `b`(v5, v2) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L089bb4.  v0:= v0 + 2;
  #L089bb8.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L089bbe.  v1:= temp;
  #L089bc0.  v0:= v0 + v1 @kind int;
  #L089bc2.  goto L089b5c;
  #L089bc4.  v2:= 43I;
  #L089bc8.  if v1 != v2 then goto L089bdc;
  #L089bcc.  if v9 == 0 then goto L089bdc;
  #L089bd0.  v2:= 32I;
  #L089bd4.  call temp:= `b`(v5, v2) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L089bda.  goto L089bb8;
  #L089bdc.  call temp:= `a`(v5, v1) @signature `Lb/c;.a:(I)Lb/c;` @kind virtual;
  #L089be2.  goto L089bb8;
  #L089be4.  return @kind void;
}
procedure `void` `a`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `La/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L089bf8.  v0:= 0I;
  #L089bfa.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089c00.  v2:= temp;
  #L089c02.  v1:= v0;
  #L089c04.  if v1 >= v2 then goto L089c2c;
  #L089c08.  v0:= 47I;
  #L089c0c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089c12.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089c18.  v0:= temp @kind object;
  #L089c1a.  v0:= (`java.lang.String`) v0 @kind object;
  #L089c1e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089c24.  v0:= v1 + 1;
  #L089c28.  v1:= v0;
  #L089c2a.  goto L089c04;
  #L089c2c.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r;.a:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L089c40.  v2:= -1I;
  #L089c42.  v0:= v4 + 2;
  #L089c46.  if v0 >= v5 then goto L089c8e;
  #L089c4a.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089c50.  v0:= temp;
  #L089c52.  v1:= 37I;
  #L089c56.  if v0 != v1 then goto L089c8e;
  #L089c5a.  v0:= v4 + 1;
  #L089c5e.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089c64.  v0:= temp;
  #L089c66.  call temp:= `a`(v0) @signature `La/r;.a:(C)I` @kind static;
  #L089c6c.  v0:= temp;
  #L089c6e.  if v0 == v2 then goto L089c8e;
  #L089c72.  v0:= v4 + 2;
  #L089c76.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089c7c.  v0:= temp;
  #L089c7e.  call temp:= `a`(v0) @signature `La/r;.a:(C)I` @kind static;
  #L089c84.  v0:= temp;
  #L089c86.  if v0 == v2 then goto L089c8e;
  #L089c8a.  v0:= 1I;
  #L089c8c.  return v0;
  #L089c8e.  v0:= 0I;
  #L089c90.  goto L089c8c;
}
procedure `java.util.List` `b`(`java.lang.String` v5 @kind object) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089ca4.  v4:= -1I;
  #L089ca6.  v2:= new `java.util.ArrayList`;
  #L089caa.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L089cb0.  v0:= 0I;
  #L089cb2.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089cb8.  v1:= temp;
  #L089cba.  if v0 > v1 then goto L089d28;
  #L089cbe.  v1:= 38I;
  #L089cc2.  call temp:= `indexOf`(v5, v1, v0) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L089cc8.  v1:= temp;
  #L089cca.  if v1 != v4 then goto L089cd6;
  #L089cce.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089cd4.  v1:= temp;
  #L089cd6.  v3:= 61I;
  #L089cda.  call temp:= `indexOf`(v5, v3, v0) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L089ce0.  v3:= temp;
  #L089ce2.  if v3 == v4 then goto L089cea;
  #L089ce6.  if v3 <= v1 then goto L089d06;
  #L089cea.  call temp:= `substring`(v5, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L089cf0.  v0:= temp @kind object;
  #L089cf2.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089cf8.  v0:= 0I;
  #L089cfa.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089d00.  v0:= v1 + 1;
  #L089d04.  goto L089cb2;
  #L089d06.  call temp:= `substring`(v5, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L089d0c.  v0:= temp @kind object;
  #L089d0e.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089d14.  v0:= v3 + 1;
  #L089d18.  call temp:= `substring`(v5, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L089d1e.  v0:= temp @kind object;
  #L089d20.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089d26.  goto L089d00;
  #L089d28.  return v2 @kind object;
}
procedure `void` `b`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089d3c.  v0:= 0I;
  #L089d3e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089d44.  v3:= temp;
  #L089d46.  v2:= v0;
  #L089d48.  if v2 >= v3 then goto L089d98;
  #L089d4c.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089d52.  v0:= temp @kind object;
  #L089d54.  v0:= (`java.lang.String`) v0 @kind object;
  #L089d58.  v1:= v2 + 1;
  #L089d5c.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089d62.  v1:= temp @kind object;
  #L089d64.  v1:= (`java.lang.String`) v1 @kind object;
  #L089d68.  if v2 <= 0 then goto L089d76;
  #L089d6c.  v4:= 38I;
  #L089d70.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089d76.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089d7c.  if v1 == 0 then goto L089d90;
  #L089d80.  v0:= 61I;
  #L089d84.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089d8a.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089d90.  v0:= v2 + 2;
  #L089d94.  v2:= v0;
  #L089d96.  goto L089d48;
  #L089d98.  return @kind void;
}
procedure `a.r` `e`(`java.lang.String` v4 @kind object) @signature `La/r;.e:(Ljava/lang/String;)La/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L089dac.  v0:= 0I;
  #L089dae.  v1:= new `a.r$a`;
  #L089db2.  call `<init>`(v1) @signature `La/r$a;.<init>:()V` @kind direct;
  #L089db8.  call temp:= `a`(v1, v0, v4) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @kind virtual;
  #L089dbe.  v2:= temp @kind object;
  #L089dc0.  v3:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L089dc4.  if v2 != v3 then goto L089dd0;
  #L089dc8.  call temp:= `c`(v1) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L089dce.  v0:= temp @kind object;
  #L089dd0.  return v0 @kind object;
}
procedure `java.net.URI` `a`(`a.r` v4 @kind this) @signature `La/r;.a:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L089de4.  call temp:= `n`(v4) @signature `La/r;.n:()La/r$a;` @kind virtual;
  #L089dea.  v0:= temp @kind object;
  #L089dec.  call temp:= `b`(v0) @signature `La/r$a;.b:()La/r$a;` @kind virtual;
  #L089df2.  v0:= temp @kind object;
  #L089df4.  call temp:= `toString`(v0) @signature `La/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L089dfa.  v1:= temp @kind object;
  #Try_start0.  
  #L089dfc.  v0:= new `java.net.URI`;
  #L089e00.  call `<init>`(v0, v1) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #Try_end0.  
  #L089e06.  return v0 @kind object;
  #L089e08.  v0:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #Try_start1.  
  #L089e0a.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L089e0e.  v3:= "" @kind object;
  #L089e12.  call temp:= `replaceAll`(v1, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L089e18.  v1:= temp @kind object;
  #L089e1a.  call temp:= `create`(v1) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #Try_end1.  
  #L089e20.  v0:= temp @kind object;
  #L089e22.  goto L089e06;
  #L089e24.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L089e26.  v1:= new `java.lang.RuntimeException`;
  #L089e2a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L089e30.  throw v1;
  catch `java.net.URISyntaxException` @[Try_start0..Try_end0] goto L089e08;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L089e24;
}
procedure `java.lang.String` `b`(`a.r` v1 @kind this) @signature `La/r;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L089e60.  v0:= v1.`a.r.a` @type ^`java.lang.String` @kind object;
  #L089e64.  return v0 @kind object;
}
procedure `a.r` `c`(`a.r` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r;.c:(Ljava/lang/String;)La/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L089e78.  call temp:= `d`(v1, v2) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L089e7e.  v0:= temp @kind object;
  #L089e80.  if v0 == 0 then goto L089e8e;
  #L089e84.  call temp:= `c`(v0) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L089e8a.  v0:= temp @kind object;
  #L089e8c.  return v0 @kind object;
  #L089e8e.  v0:= 0I;
  #L089e90.  goto L089e8c;
}
procedure `boolean` `c`(`a.r` v2 @kind this) @signature `La/r;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L089ea4.  v0:= v2.`a.r.a` @type ^`java.lang.String` @kind object;
  #L089ea8.  v1:= "https" @kind object;
  #L089eac.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L089eb2.  v0:= temp;
  #L089eb4.  return v0;
}
procedure `a.r$a` `d`(`a.r` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L089ec8.  v0:= new `a.r$a`;
  #L089ecc.  call `<init>`(v0) @signature `La/r$a;.<init>:()V` @kind direct;
  #L089ed2.  call temp:= `a`(v0, v3, v4) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @kind virtual;
  #L089ed8.  v1:= temp @kind object;
  #L089eda.  v2:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L089ede.  if v1 != v2 then goto L089ee4;
  #L089ee2.  return v0 @kind object;
  #L089ee4.  v0:= 0I;
  #L089ee6.  goto L089ee2;
}
procedure `java.lang.String` `d`(`a.r` v4 @kind this) @signature `La/r;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L089ef8.  v0:= v4.`a.r.e` @type ^`java.lang.String` @kind object;
  #L089efc.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L089f02.  v0:= temp;
  #L089f04.  if v0 == 0 then goto L089f0e;
  #L089f08.  v0:= "" @kind object;
  #L089f0c.  return v0 @kind object;
  #L089f0e.  v0:= v4.`a.r.a` @type ^`java.lang.String` @kind object;
  #L089f12.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089f18.  v0:= temp;
  #L089f1a.  v0:= v0 + 3;
  #L089f1e.  v1:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L089f22.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L089f26.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089f2c.  v2:= temp;
  #L089f2e.  v3:= ":@" @kind object;
  #L089f32.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L089f38.  v1:= temp;
  #L089f3a.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L089f3e.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L089f44.  v0:= temp @kind object;
  #L089f46.  goto L089f0c;
}
procedure `java.lang.String` `e`(`a.r` v3 @kind this) @signature `La/r;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L089f58.  v0:= v3.`a.r.f` @type ^`java.lang.String` @kind object;
  #L089f5c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L089f62.  v0:= temp;
  #L089f64.  if v0 == 0 then goto L089f6e;
  #L089f68.  v0:= "" @kind object;
  #L089f6c.  return v0 @kind object;
  #L089f6e.  v0:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L089f72.  v1:= 58I;
  #L089f76.  v2:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L089f7a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089f80.  v2:= temp;
  #L089f82.  v2:= v2 + 3;
  #L089f86.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L089f8c.  v0:= temp;
  #L089f8e.  v0:= v0 + 1;
  #L089f92.  v1:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L089f96.  v2:= 64I;
  #L089f9a.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L089fa0.  v1:= temp;
  #L089fa2.  v2:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L089fa6.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L089fac.  v0:= temp @kind object;
  #L089fae.  goto L089f6c;
}
procedure `boolean` `equals`(`a.r` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L089fc0.  v0:= instanceof @variable v3 @type ^`a.r` @kind boolean;
  #L089fc4.  if v0 == 0 then goto L089fe4;
  #L089fc8.  v3:= (`a.r`) v3 @kind object;
  #L089fcc.  v0:= v3.`a.r.j` @type ^`java.lang.String` @kind object;
  #L089fd0.  v1:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L089fd4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L089fda.  v0:= temp;
  #L089fdc.  if v0 == 0 then goto L089fe4;
  #L089fe0.  v0:= 1I;
  #L089fe2.  return v0;
  #L089fe4.  v0:= 0I;
  #L089fe6.  goto L089fe2;
}
procedure `java.lang.String` `f`(`a.r` v1 @kind this) @signature `La/r;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L089ff8.  v0:= v1.`a.r.b` @type ^`java.lang.String` @kind object;
  #L089ffc.  return v0 @kind object;
}
procedure `int` `g`(`a.r` v1 @kind this) @signature `La/r;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a010.  v0:= v1.`a.r.c` @type ^`int`;
  #L08a014.  return v0;
}
procedure `java.lang.String` `h`(`a.r` v4 @kind this) @signature `La/r;.h:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08a028.  v0:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a02c.  v1:= 47I;
  #L08a030.  v2:= v4.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a034.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a03a.  v2:= temp;
  #L08a03c.  v2:= v2 + 3;
  #L08a040.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08a046.  v0:= temp;
  #L08a048.  v1:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a04c.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a050.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a056.  v2:= temp;
  #L08a058.  v3:= "?#" @kind object;
  #L08a05c.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08a062.  v1:= temp;
  #L08a064.  v2:= v4.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a068.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a06e.  v0:= temp @kind object;
  #L08a070.  return v0 @kind object;
}
procedure `int` `hashCode`(`a.r` v1 @kind this) @signature `La/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a084.  v0:= v1.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a088.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L08a08e.  v0:= temp;
  #L08a090.  return v0;
}
procedure `java.util.List` `i`(`a.r` v6 @kind this) @signature `La/r;.i:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08a0a4.  v5:= 47I;
  #L08a0a8.  v0:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a0ac.  v1:= v6.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a0b0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a0b6.  v1:= temp;
  #L08a0b8.  v1:= v1 + 3;
  #L08a0bc.  call temp:= `indexOf`(v0, v5, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L08a0c2.  v0:= temp;
  #L08a0c4.  v1:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a0c8.  v2:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a0cc.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a0d2.  v2:= temp;
  #L08a0d4.  v3:= "?#" @kind object;
  #L08a0d8.  call temp:= `a`(v1, v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08a0de.  v1:= temp;
  #L08a0e0.  v2:= new `java.util.ArrayList`;
  #L08a0e4.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L08a0ea.  if v0 >= v1 then goto L08a112;
  #L08a0ee.  v3:= v0 + 1;
  #L08a0f2.  v0:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a0f6.  call temp:= `a`(v0, v3, v1, v5) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08a0fc.  v0:= temp;
  #L08a0fe.  v4:= v6.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a102.  call temp:= `substring`(v4, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a108.  v3:= temp @kind object;
  #L08a10a.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08a110.  goto L08a0ea;
  #L08a112.  return v2 @kind object;
}
procedure `java.lang.String` `j`(`a.r` v5 @kind this) @signature `La/r;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08a124.  v0:= v5.`a.r.h` @type ^`java.util.List` @kind object;
  #L08a128.  if v0 != 0 then goto L08a130;
  #L08a12c.  v0:= 0I;
  #L08a12e.  return v0 @kind object;
  #L08a130.  v0:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a134.  v1:= 63I;
  #L08a138.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08a13e.  v0:= temp;
  #L08a140.  v0:= v0 + 1;
  #L08a144.  v1:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a148.  v2:= v0 + 1;
  #L08a14c.  v3:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a150.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a156.  v3:= temp;
  #L08a158.  v4:= 35I;
  #L08a15c.  call temp:= `a`(v1, v2, v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08a162.  v1:= temp;
  #L08a164.  v2:= v5.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a168.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08a16e.  v0:= temp @kind object;
  #L08a170.  goto L08a12e;
}
procedure `java.lang.String` `k`(`a.r` v2 @kind this) @signature `La/r;.k:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a184.  v0:= v2.`a.r.h` @type ^`java.util.List` @kind object;
  #L08a188.  if v0 != 0 then goto L08a190;
  #L08a18c.  v0:= 0I;
  #L08a18e.  return v0 @kind object;
  #L08a190.  v0:= new `java.lang.StringBuilder`;
  #L08a194.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a19a.  v1:= v2.`a.r.h` @type ^`java.util.List` @kind object;
  #L08a19e.  call `b`(v0, v1) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L08a1a4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a1aa.  v0:= temp @kind object;
  #L08a1ac.  goto L08a18e;
}
procedure `java.lang.String` `l`(`a.r` v2 @kind this) @signature `La/r;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a1c0.  v0:= v2.`a.r.i` @type ^`java.lang.String` @kind object;
  #L08a1c4.  if v0 != 0 then goto L08a1cc;
  #L08a1c8.  v0:= 0I;
  #L08a1ca.  return v0 @kind object;
  #L08a1cc.  v0:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a1d0.  v1:= 35I;
  #L08a1d4.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08a1da.  v0:= temp;
  #L08a1dc.  v0:= v0 + 1;
  #L08a1e0.  v1:= v2.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a1e4.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08a1ea.  v0:= temp @kind object;
  #L08a1ec.  goto L08a1ca;
}
procedure `java.lang.String` `m`(`a.r` v2 @kind this) @signature `La/r;.m:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a200.  v0:= "/..." @kind object;
  #L08a204.  call temp:= `d`(v2, v0) @signature `La/r;.d:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a20a.  v0:= temp @kind object;
  #L08a20c.  v1:= "" @kind object;
  #L08a210.  call temp:= `b`(v0, v1) @signature `La/r$a;.b:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a216.  v0:= temp @kind object;
  #L08a218.  v1:= "" @kind object;
  #L08a21c.  call temp:= `c`(v0, v1) @signature `La/r$a;.c:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a222.  v0:= temp @kind object;
  #L08a224.  call temp:= `c`(v0) @signature `La/r$a;.c:()La/r;` @kind virtual;
  #L08a22a.  v0:= temp @kind object;
  #L08a22c.  call temp:= `toString`(v0) @signature `La/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a232.  v0:= temp @kind object;
  #L08a234.  return v0 @kind object;
}
procedure `a.r$a` `n`(`a.r` v3 @kind this) @signature `La/r;.n:()La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08a248.  v1:= new `a.r$a`;
  #L08a24c.  call `<init>`(v1) @signature `La/r$a;.<init>:()V` @kind direct;
  #L08a252.  v0:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a256.  v1.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08a25a.  call temp:= `d`(v3) @signature `La/r;.d:()Ljava/lang/String;` @kind virtual;
  #L08a260.  v0:= temp @kind object;
  #L08a262.  v1.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08a266.  call temp:= `e`(v3) @signature `La/r;.e:()Ljava/lang/String;` @kind virtual;
  #L08a26c.  v0:= temp @kind object;
  #L08a26e.  v1.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08a272.  v0:= v3.`a.r.b` @type ^`java.lang.String` @kind object;
  #L08a276.  v1.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08a27a.  v0:= v3.`a.r.c` @type ^`int`;
  #L08a27e.  v2:= v3.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a282.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L08a288.  v2:= temp;
  #L08a28a.  if v0 == v2 then goto L08a2ce;
  #L08a28e.  v0:= v3.`a.r.c` @type ^`int`;
  #L08a292.  v1.`a.r$a.e` @type ^`int` := v0;
  #L08a296.  v0:= v1.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08a29a.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L08a2a0.  v0:= v1.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08a2a4.  call temp:= `i`(v3) @signature `La/r;.i:()Ljava/util/List;` @kind virtual;
  #L08a2aa.  v2:= temp @kind object;
  #L08a2ac.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L08a2b2.  call temp:= `j`(v3) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L08a2b8.  v0:= temp @kind object;
  #L08a2ba.  call temp:= `e`(v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a2c0.  call temp:= `l`(v3) @signature `La/r;.l:()Ljava/lang/String;` @kind virtual;
  #L08a2c6.  v0:= temp @kind object;
  #L08a2c8.  v1.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L08a2cc.  return v1 @kind object;
  #L08a2ce.  v0:= -1I;
  #L08a2d0.  goto L08a292;
}
procedure `java.lang.String` `toString`(`a.r` v1 @kind this) @signature `La/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08a2e4.  v0:= v1.`a.r.j` @type ^`java.lang.String` @kind object;
  #L08a2e8.  return v0 @kind object;
}

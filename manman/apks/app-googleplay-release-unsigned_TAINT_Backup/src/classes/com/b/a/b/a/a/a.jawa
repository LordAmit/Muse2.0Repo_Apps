record `com.b.a.b.a.a.a` @kind class @AccessFlag PUBLIC {
}
global `java.util.TimeZone` `@@com.b.a.b.a.a.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L131e30.  v0:= "UTC" @kind object;
  #L131e34.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L131e3a.  v0:= temp @kind object;
  #L131e3c.  `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` := v0 @kind object;
  #L131e40.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L131e54.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L131e5a.  v0:= temp;
  #L131e5c.  if v3 >= v0 then goto L131e80;
  #L131e60.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L131e66.  v0:= temp;
  #L131e68.  v1:= 48I;
  #L131e6c.  if v0 < v1 then goto L131e78;
  #L131e70.  v1:= 57I;
  #L131e74.  if v0 <= v1 then goto L131e7a;
  #L131e78.  return v3;
  #L131e7a.  v3:= v3 + 1;
  #L131e7e.  goto L131e54;
  #L131e80.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L131e86.  v3:= temp;
  #L131e88.  goto L131e78;
}
procedure `int` `a`(`java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L131e9c.  v3:= 10I;
  #L131ea0.  if v5 < 0 then goto L131eb4;
  #L131ea4.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L131eaa.  v0:= temp;
  #L131eac.  if v6 > v0 then goto L131eb4;
  #L131eb0.  if v5 <= v6 then goto L131ec0;
  #L131eb4.  v0:= new `java.lang.NumberFormatException`;
  #L131eb8.  call `<init>`(v0, v4) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L131ebe.  throw v0;
  #L131ec0.  v0:= 0I;
  #L131ec2.  if v5 >= v6 then goto L131f7e;
  #L131ec6.  v1:= v5 + 1;
  #L131eca.  call temp:= `charAt`(v4, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L131ed0.  v0:= temp;
  #L131ed2.  call temp:= `digit`(v0, v3) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L131ed8.  v0:= temp;
  #L131eda.  if v0 >= 0 then goto L131f18;
  #L131ede.  v0:= new `java.lang.NumberFormatException`;
  #L131ee2.  v1:= new `java.lang.StringBuilder`;
  #L131ee6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L131eec.  v2:= "Invalid number: " @kind object;
  #L131ef0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131ef6.  v1:= temp @kind object;
  #L131ef8.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L131efe.  v2:= temp @kind object;
  #L131f00.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131f06.  v1:= temp @kind object;
  #L131f08.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L131f0e.  v1:= temp @kind object;
  #L131f10.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L131f16.  throw v0;
  #L131f18.  v0:= -v0 @kind int;
  #L131f1a.  if v1 >= v6 then goto L131f7a;
  #L131f1e.  v2:= v1 + 1;
  #L131f22.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L131f28.  v1:= temp;
  #L131f2a.  call temp:= `digit`(v1, v3) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L131f30.  v1:= temp;
  #L131f32.  if v1 >= 0 then goto L131f70;
  #L131f36.  v0:= new `java.lang.NumberFormatException`;
  #L131f3a.  v1:= new `java.lang.StringBuilder`;
  #L131f3e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L131f44.  v2:= "Invalid number: " @kind object;
  #L131f48.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131f4e.  v1:= temp @kind object;
  #L131f50.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L131f56.  v2:= temp @kind object;
  #L131f58.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131f5e.  v1:= temp @kind object;
  #L131f60.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L131f66.  v1:= temp @kind object;
  #L131f68.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L131f6e.  throw v0;
  #L131f70.  v0:= v0 * 10;
  #L131f74.  v0:= v0 - v1 @kind int;
  #L131f76.  v1:= v2;
  #L131f78.  goto L131f1a;
  #L131f7a.  v0:= -v0 @kind int;
  #L131f7c.  return v0;
  #L131f7e.  v1:= v5;
  #L131f80.  goto L131f1a;
}
procedure `java.util.Date` `a`(`java.lang.String` v13 @kind object, `java.text.ParsePosition` v14 @kind object) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L131f94.  v12:= 43I;
  #L131f98.  v11:= 5I;
  #L131f9a.  v10:= 45I;
  #L131f9e.  v0:= 0I;
  #Try_start0.  
  #L131fa0.  call temp:= `getIndex`(v14) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L131fa6.  v2:= temp;
  #L131fa8.  v1:= v2 + 4;
  #L131fac.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L131fb2.  v6:= temp;
  #L131fb4.  v2:= 45I;
  #L131fb8.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L131fbe.  v2:= temp;
  #L131fc0.  if v2 == 0 then goto L13243e;
  #L131fc4.  v1:= v1 + 1;
  #L131fc8.  v2:= v1;
  #L131fca.  v1:= v2 + 2;
  #L131fce.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L131fd4.  v7:= temp;
  #L131fd6.  v2:= 45I;
  #L131fda.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L131fe0.  v2:= temp;
  #L131fe2.  if v2 == 0 then goto L132438;
  #L131fe6.  v1:= v1 + 1;
  #L131fea.  v2:= v1;
  #L131fec.  v1:= v2 + 2;
  #L131ff0.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L131ff6.  v8:= temp;
  #L131ff8.  v2:= 84I;
  #L131ffc.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L132002.  v2:= temp;
  #L132004.  if v2 != 0 then goto L132032;
  #L132008.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13200e.  v3:= temp;
  #L132010.  if v3 > v1 then goto L132032;
  #L132014.  v0:= new `java.util.GregorianCalendar`;
  #L132018.  v2:= v7 + -1;
  #L13201c.  call `<init>`(v0, v6, v2, v8) @signature `Ljava/util/GregorianCalendar;.<init>:(III)V` @kind direct;
  #L132022.  call `setIndex`(v14, v1) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L132028.  call temp:= `getTime`(v0) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L13202e.  v0:= temp @kind object;
  #L132030.  return v0 @kind object;
  #L132032.  if v2 == 0 then goto L13242c;
  #L132036.  v2:= v1 + 1;
  #L13203a.  v1:= v2 + 2;
  #L13203e.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L132044.  v3:= temp;
  #L132046.  v2:= 58I;
  #L13204a.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L132050.  v2:= temp;
  #L132052.  if v2 == 0 then goto L132426;
  #L132056.  v1:= v1 + 1;
  #L13205a.  v2:= v1;
  #L13205c.  v1:= v2 + 2;
  #L132060.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L132066.  v2:= temp;
  #L132068.  v4:= 58I;
  #L13206c.  call temp:= `a`(v13, v1, v4) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L132072.  v4:= temp;
  #L132074.  if v4 == 0 then goto L13207c;
  #L132078.  v1:= v1 + 1;
  #L13207c.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L132082.  v4:= temp;
  #L132084.  if v4 <= v1 then goto L13241a;
  #L132088.  call temp:= `charAt`(v13, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L13208e.  v4:= temp;
  #L132090.  v5:= 90I;
  #L132094.  if v4 == v5 then goto L13241a;
  #L132098.  if v4 == v12 then goto L13241a;
  #L13209c.  if v4 == v10 then goto L13241a;
  #L1320a0.  v4:= v1 + 2;
  #L1320a4.  call temp:= `a`(v13, v1, v4) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L1320aa.  v1:= temp;
  #L1320ac.  v5:= 59I;
  #L1320b0.  if v1 <= v5 then goto L1320c0;
  #L1320b4.  v5:= 63I;
  #L1320b8.  if v1 >= v5 then goto L1320c0;
  #L1320bc.  v1:= 59I;
  #L1320c0.  v5:= 46I;
  #L1320c4.  call temp:= `a`(v13, v4, v5) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L1320ca.  v5:= temp;
  #L1320cc.  if v5 == 0 then goto L13240c;
  #L1320d0.  v5:= v4 + 1;
  #L1320d4.  v0:= v5 + 1;
  #L1320d8.  call temp:= `a`(v13, v0) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;I)I` @kind static;
  #L1320de.  v4:= temp;
  #L1320e0.  v0:= v5 + 3;
  #L1320e4.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1320ea.  v9:= temp;
  #L1320ec.  call temp:= `a`(v13, v5, v9) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L1320f2.  v0:= temp;
  #L1320f4.  v5:= v9 - v5 @kind int;
  #L1320f8.  goto L132444;
  #L1320fe.  v5:= v3;
  #L132100.  v3:= v1;
  #L132102.  v1:= v4;
  #L132104.  v4:= v2;
  #L132106.  v2:= v0;
  #L132108.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13210e.  v0:= temp;
  #L132110.  if v0 > v1 then goto L1321e8;
  #L132114.  v0:= new `java.lang.IllegalArgumentException`;
  #L132118.  v1:= "No time zone indicator" @kind object;
  #L13211c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L132122.  throw v0;
  #Try_end0.  
  #L132124.  v0:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L132126.  v2:= v0 @kind object;
  #L132128.  if v13 != 0 then goto L1323d6;
  #L13212c.  v0:= 0I;
  #L13212e.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L132134.  v1:= temp @kind object;
  #L132136.  if v1 == 0 then goto L132146;
  #L13213a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L132140.  v3:= temp;
  #L132142.  if v3 == 0 then goto L132188;
  #L132146.  v1:= new `java.lang.StringBuilder`;
  #L13214a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L132150.  v3:= "(" @kind object;
  #L132154.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13215a.  v1:= temp @kind object;
  #L13215c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L132162.  v3:= temp @kind object;
  #L132164.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L13216a.  v3:= temp @kind object;
  #L13216c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132172.  v1:= temp @kind object;
  #L132174.  v3:= ")" @kind object;
  #L132178.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13217e.  v1:= temp @kind object;
  #L132180.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L132186.  v1:= temp @kind object;
  #L132188.  v3:= new `java.text.ParseException`;
  #L13218c.  v4:= new `java.lang.StringBuilder`;
  #L132190.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L132196.  v5:= "Failed to parse date [" @kind object;
  #L13219a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1321a0.  v4:= temp @kind object;
  #L1321a2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1321a8.  v0:= temp @kind object;
  #L1321aa.  v4:= "]: " @kind object;
  #L1321ae.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1321b4.  v0:= temp @kind object;
  #L1321b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1321bc.  v0:= temp @kind object;
  #L1321be.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1321c4.  v0:= temp @kind object;
  #L1321c6.  call temp:= `getIndex`(v14) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L1321cc.  v1:= temp;
  #L1321ce.  call `<init>`(v3, v0, v1) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1321d4.  call temp:= `initCause`(v3, v2) @signature `Ljava/text/ParseException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1321da.  throw v3;
  #L1321dc.  v0:= v0 * 10;
  #L1321e0.  goto L1320fe;
  #L1321e2.  v0:= v0 * 100;
  #L1321e6.  goto L1320fe;
  #Try_start1.  
  #L1321e8.  call temp:= `charAt`(v13, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1321ee.  v0:= temp;
  #L1321f0.  v9:= 90I;
  #L1321f4.  if v0 != v9 then goto L132268;
  #L1321f8.  v0:= `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` @kind object;
  #L1321fc.  v1:= v1 + 1;
  #L132200.  v9:= new `java.util.GregorianCalendar`;
  #L132204.  call `<init>`(v9, v0) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L13220a.  v0:= 0I;
  #L13220c.  call `setLenient`(v9, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L132212.  v0:= 1I;
  #L132214.  call `set`(v9, v0, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L13221a.  v0:= 2I;
  #L13221c.  v6:= v7 + -1;
  #L132220.  call `set`(v9, v0, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L132226.  v0:= 5I;
  #L132228.  call `set`(v9, v0, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L13222e.  v0:= 11I;
  #L132232.  call `set`(v9, v0, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L132238.  v0:= 12I;
  #L13223c.  call `set`(v9, v0, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L132242.  v0:= 13I;
  #L132246.  call `set`(v9, v0, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L13224c.  v0:= 14I;
  #L132250.  call `set`(v9, v0, v2) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L132256.  call `setIndex`(v14, v1) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L13225c.  call temp:= `getTime`(v9) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L132262.  v0:= temp @kind object;
  #L132264.  goto L132030;
  #L132268.  if v0 == v12 then goto L132270;
  #L13226c.  if v0 != v10 then goto L132390;
  #L132270.  call temp:= `substring`(v13, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L132276.  v0:= temp @kind object;
  #L132278.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13227e.  v9:= temp;
  #L132280.  if v9 < v11 then goto L1322b4;
  #L132284.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13228a.  v9:= temp;
  #L13228c.  v1:= v1 + v9 @kind int;
  #L13228e.  v9:= "+0000" @kind object;
  #L132292.  call temp:= `equals`(v9, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L132298.  v9:= temp;
  #L13229a.  if v9 != 0 then goto L1322ae;
  #L13229e.  v9:= "+00:00" @kind object;
  #L1322a2.  call temp:= `equals`(v9, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1322a8.  v9:= temp;
  #L1322aa.  if v9 == 0 then goto L1322dc;
  #L1322ae.  v0:= `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` @kind object;
  #L1322b2.  goto L132200;
  #L1322b4.  v9:= new `java.lang.StringBuilder`;
  #L1322b8.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1322be.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1322c4.  v0:= temp @kind object;
  #L1322c6.  v9:= "00" @kind object;
  #L1322ca.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1322d0.  v0:= temp @kind object;
  #L1322d2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1322d8.  v0:= temp @kind object;
  #L1322da.  goto L132284;
  #L1322dc.  v9:= new `java.lang.StringBuilder`;
  #L1322e0.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1322e6.  v10:= "GMT" @kind object;
  #L1322ea.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1322f0.  v9:= temp @kind object;
  #L1322f2.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1322f8.  v0:= temp @kind object;
  #L1322fa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L132300.  v9:= temp @kind object;
  #L132302.  call temp:= `getTimeZone`(v9) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L132308.  v0:= temp @kind object;
  #L13230a.  call temp:= `getID`(v0) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L132310.  v10:= temp @kind object;
  #L132312.  call temp:= `equals`(v10, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L132318.  v11:= temp;
  #L13231a.  if v11 != 0 then goto L132200;
  #L13231e.  v11:= ":" @kind object;
  #L132322.  v12:= "" @kind object;
  #L132326.  call temp:= `replace`(v10, v11, v12) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L13232c.  v10:= temp @kind object;
  #L13232e.  call temp:= `equals`(v10, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L132334.  v10:= temp;
  #L132336.  if v10 != 0 then goto L132200;
  #L13233a.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L13233e.  v2:= new `java.lang.StringBuilder`;
  #L132342.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L132348.  v3:= "Mismatching time zone indicator: " @kind object;
  #L13234c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132352.  v2:= temp @kind object;
  #L132354.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13235a.  v2:= temp @kind object;
  #L13235c.  v3:= " given, resolves to " @kind object;
  #L132360.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132366.  v2:= temp @kind object;
  #L132368.  call temp:= `getID`(v0) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L13236e.  v0:= temp @kind object;
  #L132370.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132376.  v0:= temp @kind object;
  #L132378.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13237e.  v0:= temp @kind object;
  #L132380.  call `<init>`(v1, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L132386.  throw v1;
  #L132388.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L13238a.  v2:= v0 @kind object;
  #L13238c.  goto L132128;
  #L132390.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L132394.  v2:= new `java.lang.StringBuilder`;
  #L132398.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13239e.  v3:= "Invalid time zone indicator '" @kind object;
  #L1323a2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1323a8.  v2:= temp @kind object;
  #L1323aa.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1323b0.  v0:= temp @kind object;
  #L1323b2.  v2:= "'" @kind object;
  #L1323b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1323bc.  v0:= temp @kind object;
  #L1323be.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1323c4.  v0:= temp @kind object;
  #L1323c6.  call `<init>`(v1, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1323cc.  throw v1;
  #Try_end1.  
  #L1323ce.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L1323d0.  v2:= v0 @kind object;
  #L1323d2.  goto L132128;
  #L1323d6.  v0:= new `java.lang.StringBuilder`;
  #L1323da.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1323e0.  v1:= 34I;
  #L1323e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1323ea.  v0:= temp @kind object;
  #L1323ec.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1323f2.  v0:= temp @kind object;
  #L1323f4.  v1:= "'" @kind object;
  #L1323f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1323fe.  v0:= temp @kind object;
  #L132400.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L132406.  v0:= temp @kind object;
  #L132408.  goto L13212e;
  #L13240c.  v5:= v3;
  #L13240e.  v3:= v1;
  #L132410.  v1:= v4;
  #L132412.  v4:= v2;
  #L132414.  v2:= v0;
  #L132416.  goto L132108;
  #L13241a.  v4:= v2;
  #L13241c.  v5:= v3;
  #L13241e.  v2:= v0;
  #L132420.  v3:= v0;
  #L132422.  goto L132108;
  #L132426.  v2:= v1;
  #L132428.  goto L13205c;
  #L13242c.  v2:= v0;
  #L13242e.  v3:= v0;
  #L132430.  v4:= v0;
  #L132432.  v5:= v0;
  #L132434.  goto L132108;
  #L132438.  v2:= v1;
  #L13243a.  goto L131fec;
  #L13243e.  v2:= v1;
  #L132440.  goto L131fca;
  #L132444.  switch v5
                  | 1 => goto L1321e2
                  | 2 => goto L1321dc
                  | else => goto L1320fe;
  catch `java.lang.IndexOutOfBoundsException` @[Try_start0..Try_end0] goto L132124;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L132388;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L1323ce;
  catch `java.lang.IndexOutOfBoundsException` @[Try_start1..Try_end1] goto L132124;
  catch `java.lang.NumberFormatException` @[Try_start1..Try_end1] goto L132388;
  catch `java.lang.IllegalArgumentException` @[Try_start1..Try_end1] goto L1323ce;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object, `int` v2 , `char` v3 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L132484.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L13248a.  v0:= temp;
  #L13248c.  if v2 >= v0 then goto L1324a0;
  #L132490.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L132496.  v0:= temp;
  #L132498.  if v0 != v3 then goto L1324a0;
  #L13249c.  v0:= 1I;
  #L13249e.  return v0;
  #L1324a0.  v0:= 0I;
  #L1324a2.  goto L13249e;
}

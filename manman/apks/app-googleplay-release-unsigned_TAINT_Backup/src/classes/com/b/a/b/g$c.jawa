record `com.b.a.b.g$c` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `com.b.a.b.g$d` `com.b.a.b.g$c.b` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$c.c` @AccessFlag ;
  `int` `com.b.a.b.g$c.d` @AccessFlag ;
  `com.b.a.b.g` `com.b.a.b.g$c.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.g$c` v1 @kind this, `com.b.a.b.g` v2 @kind object) @signature `Lcom/b/a/b/g$c;.<init>:(Lcom/b/a/b/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L13beec.  v1.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` := v2 @kind object;
  #L13bef0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13bef6.  v0:= v1.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L13befa.  v0:= v0.`com.b.a.b.g.e` @type ^`com.b.a.b.g$d` @kind object;
  #L13befe.  v0:= v0.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` @kind object;
  #L13bf02.  v1.`com.b.a.b.g$c.b` @type ^`com.b.a.b.g$d` := v0 @kind object;
  #L13bf06.  v0:= 0I;
  #L13bf08.  v1.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` := v0 @kind object;
  #L13bf0c.  v0:= v1.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L13bf10.  v0:= v0.`com.b.a.b.g.d` @type ^`int`;
  #L13bf14.  v1.`com.b.a.b.g$c.d` @type ^`int` := v0;
  #L13bf18.  return @kind void;
}
procedure `com.b.a.b.g$d` `b`(`com.b.a.b.g$c` v3 @kind this) @signature `Lcom/b/a/b/g$c;.b:()Lcom/b/a/b/g$d;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13bf2c.  v0:= v3.`com.b.a.b.g$c.b` @type ^`com.b.a.b.g$d` @kind object;
  #L13bf30.  v1:= v3.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L13bf34.  v1:= v1.`com.b.a.b.g.e` @type ^`com.b.a.b.g$d` @kind object;
  #L13bf38.  if v0 != v1 then goto L13bf48;
  #L13bf3c.  v0:= new `java.util.NoSuchElementException`;
  #L13bf40.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L13bf46.  throw v0;
  #L13bf48.  v1:= v3.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L13bf4c.  v1:= v1.`com.b.a.b.g.d` @type ^`int`;
  #L13bf50.  v2:= v3.`com.b.a.b.g$c.d` @type ^`int`;
  #L13bf54.  if v1 == v2 then goto L13bf64;
  #L13bf58.  v0:= new `java.util.ConcurrentModificationException`;
  #L13bf5c.  call `<init>`(v0) @signature `Ljava/util/ConcurrentModificationException;.<init>:()V` @kind direct;
  #L13bf62.  throw v0;
  #L13bf64.  v1:= v0.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` @kind object;
  #L13bf68.  v3.`com.b.a.b.g$c.b` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L13bf6c.  v3.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` := v0 @kind object;
  #L13bf70.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`com.b.a.b.g$c` v2 @kind this) @signature `Lcom/b/a/b/g$c;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13bf84.  v0:= v2.`com.b.a.b.g$c.b` @type ^`com.b.a.b.g$d` @kind object;
  #L13bf88.  v1:= v2.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L13bf8c.  v1:= v1.`com.b.a.b.g.e` @type ^`com.b.a.b.g$d` @kind object;
  #L13bf90.  if v0 == v1 then goto L13bf98;
  #L13bf94.  v0:= 1I;
  #L13bf96.  return v0;
  #L13bf98.  v0:= 0I;
  #L13bf9a.  goto L13bf96;
}
procedure `void` `remove`(`com.b.a.b.g$c` v3 @kind this) @signature `Lcom/b/a/b/g$c;.remove:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13bfac.  v0:= v3.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` @kind object;
  #L13bfb0.  if v0 != 0 then goto L13bfc0;
  #L13bfb4.  v0:= new `java.lang.IllegalStateException`;
  #L13bfb8.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L13bfbe.  throw v0;
  #L13bfc0.  v0:= v3.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L13bfc4.  v1:= v3.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` @kind object;
  #L13bfc8.  v2:= 1I;
  #L13bfca.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/g;.a:(Lcom/b/a/b/g$d;Z)V` @kind virtual;
  #L13bfd0.  v0:= 0I;
  #L13bfd2.  v3.`com.b.a.b.g$c.c` @type ^`com.b.a.b.g$d` := v0 @kind object;
  #L13bfd6.  v0:= v3.`com.b.a.b.g$c.e` @type ^`com.b.a.b.g` @kind object;
  #L13bfda.  v0:= v0.`com.b.a.b.g.d` @type ^`int`;
  #L13bfde.  v3.`com.b.a.b.g$c.d` @type ^`int` := v0;
  #L13bfe2.  return @kind void;
}

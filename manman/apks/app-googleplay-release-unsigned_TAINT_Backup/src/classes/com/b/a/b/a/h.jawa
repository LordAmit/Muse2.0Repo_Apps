record `com.b.a.b.a.h` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.b.a.h.b` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.w` `@@com.b.a.b.a.h.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L136c4c.  v0:= new `com.b.a.b.a.h$1`;
  #L136c50.  call `<init>`(v0) @signature `Lcom/b/a/b/a/h$1;.<init>:()V` @kind direct;
  #L136c56.  `@@com.b.a.b.a.h.a` @type ^`com.b.a.w` := v0 @kind object;
  #L136c5a.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.b.a.h` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/b/a/h;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L136c6c.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L136c72.  v0.`com.b.a.b.a.h.b` @type ^`com.b.a.f` := v1 @kind object;
  #L136c76.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.h` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/a/h;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L136c88.  if v4 != 0 then goto L136c94;
  #L136c8c.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L136c92.  return @kind void;
  #L136c94.  v0:= v2.`com.b.a.b.a.h.b` @type ^`com.b.a.f` @kind object;
  #L136c98.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L136c9e.  v1:= temp @kind object;
  #L136ca0.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/f;.a:(Ljava/lang/Class;)Lcom/b/a/v;` @kind virtual;
  #L136ca6.  v0:= temp @kind object;
  #L136ca8.  v1:= instanceof @variable v0 @type ^`com.b.a.b.a.h` @kind boolean;
  #L136cac.  if v1 == 0 then goto L136cbe;
  #L136cb0.  call temp:= `d`(v3) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L136cb6.  call temp:= `e`(v3) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L136cbc.  goto L136c92;
  #L136cbe.  call `a`(v0, v3, v4) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L136cc4.  goto L136c92;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.h` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L136cd8.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L136cde.  v0:= temp @kind object;
  #L136ce0.  v1:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L136ce4.  call temp:= `ordinal`(v0) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L136cea.  v0:= temp;
  #L136cec.  v0:= v1[v0];
  #L136cf0.  goto L136dac;
  #L136cf6.  v0:= new `java.lang.IllegalStateException`;
  #L136cfa.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L136d00.  throw v0;
  #L136d02.  v0:= new `java.util.ArrayList`;
  #L136d06.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L136d0c.  call `a`(v4) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L136d12.  call temp:= `e`(v4) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L136d18.  v1:= temp;
  #L136d1a.  if v1 == 0 then goto L136d2e;
  #L136d1e.  call temp:= `b`(v3, v4) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L136d24.  v1:= temp @kind object;
  #L136d26.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L136d2c.  goto L136d12;
  #L136d2e.  call `b`(v4) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L136d34.  return v0 @kind object;
  #L136d36.  v0:= new `com.b.a.b.g`;
  #L136d3a.  call `<init>`(v0) @signature `Lcom/b/a/b/g;.<init>:()V` @kind direct;
  #L136d40.  call `c`(v4) @signature `Lcom/b/a/d/a;.c:()V` @kind virtual;
  #L136d46.  call temp:= `e`(v4) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L136d4c.  v1:= temp;
  #L136d4e.  if v1 == 0 then goto L136d6a;
  #L136d52.  call temp:= `g`(v4) @signature `Lcom/b/a/d/a;.g:()Ljava/lang/String;` @kind virtual;
  #L136d58.  v1:= temp @kind object;
  #L136d5a.  call temp:= `b`(v3, v4) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L136d60.  v2:= temp @kind object;
  #L136d62.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L136d68.  goto L136d46;
  #L136d6a.  call `d`(v4) @signature `Lcom/b/a/d/a;.d:()V` @kind virtual;
  #L136d70.  goto L136d34;
  #L136d72.  call temp:= `h`(v4) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L136d78.  v0:= temp @kind object;
  #L136d7a.  goto L136d34;
  #L136d7c.  call temp:= `k`(v4) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L136d82.  v0:= temp @kind wide;
  #L136d84.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L136d8a.  v0:= temp @kind object;
  #L136d8c.  goto L136d34;
  #L136d8e.  call temp:= `i`(v4) @signature `Lcom/b/a/d/a;.i:()Z` @kind virtual;
  #L136d94.  v0:= temp;
  #L136d96.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L136d9c.  v0:= temp @kind object;
  #L136d9e.  goto L136d34;
  #L136da0.  call `j`(v4) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L136da6.  v0:= 0I;
  #L136da8.  goto L136d34;
  #L136daa.  
  #L136dac.  switch v0
                  | 1 => goto L136d02
                  | 2 => goto L136d36
                  | 3 => goto L136d72
                  | 4 => goto L136d7c
                  | 5 => goto L136d8e
                  | 6 => goto L136da0
                  | else => goto L136cf6;
}

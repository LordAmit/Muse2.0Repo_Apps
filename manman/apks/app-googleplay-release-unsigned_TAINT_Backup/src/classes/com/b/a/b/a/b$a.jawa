record `com.b.a.b.a.b$a` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.v` `com.b.a.b.a.b$a.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.h` `com.b.a.b.a.b$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.b$a` v1 @kind this, `com.b.a.f` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.v` v4 @kind object, `com.b.a.b.h` v5 @kind object) @signature `Lcom/b/a/b/a/b$a;.<init>:(Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L132668.  call `<init>`(v1) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L13266e.  v0:= new `com.b.a.b.a.m`;
  #L132672.  call `<init>`(v0, v2, v4, v3) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L132678.  v1.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` := v0 @kind object;
  #L13267c.  v1.`com.b.a.b.a.b$a.b` @type ^`com.b.a.b.h` := v5 @kind object;
  #L132680.  return @kind void;
}
procedure `java.util.Collection` `a`(`com.b.a.b.a.b$a` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/a;)Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L132694.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L13269a.  v0:= temp @kind object;
  #L13269c.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L1326a0.  if v0 != v1 then goto L1326ae;
  #L1326a4.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L1326aa.  v0:= 0I;
  #L1326ac.  return v0 @kind object;
  #L1326ae.  v0:= v2.`com.b.a.b.a.b$a.b` @type ^`com.b.a.b.h` @kind object;
  #L1326b2.  call temp:= `a`(v0) @signature `Lcom/b/a/b/h;.a:()Ljava/lang/Object;` @kind interface;
  #L1326b8.  v0:= temp @kind object;
  #L1326ba.  v0:= (`java.util.Collection`) v0 @kind object;
  #L1326be.  call `a`(v3) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L1326c4.  call temp:= `e`(v3) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L1326ca.  v1:= temp;
  #L1326cc.  if v1 == 0 then goto L1326e4;
  #L1326d0.  v1:= v2.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` @kind object;
  #L1326d4.  call temp:= `b`(v1, v3) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L1326da.  v1:= temp @kind object;
  #L1326dc.  call temp:= `add`(v0, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1326e2.  goto L1326c4;
  #L1326e4.  call `b`(v3) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L1326ea.  goto L1326ac;
}
procedure `void` `a`(`com.b.a.b.a.b$a` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1326fc.  v2:= (`java.util.Collection`) v2 @kind object;
  #L132700.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/util/Collection;)V` @kind virtual;
  #L132706.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.b$a` v3 @kind this, `com.b.a.d.c` v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L132718.  if v5 != 0 then goto L132724;
  #L13271c.  call temp:= `f`(v4) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L132722.  return @kind void;
  #L132724.  call temp:= `b`(v4) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L13272a.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L132730.  v0:= temp @kind object;
  #L132732.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L132738.  v1:= temp;
  #L13273a.  if v1 == 0 then goto L132752;
  #L13273e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L132744.  v1:= temp @kind object;
  #L132746.  v2:= v3.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` @kind object;
  #L13274a.  call `a`(v2, v4, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L132750.  goto L132732;
  #L132752.  call temp:= `c`(v4) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L132758.  goto L132722;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.b$a` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/b$a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L13276c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/a;)Ljava/util/Collection;` @kind virtual;
  #L132772.  v0:= temp @kind object;
  #L132774.  return v0 @kind object;
}

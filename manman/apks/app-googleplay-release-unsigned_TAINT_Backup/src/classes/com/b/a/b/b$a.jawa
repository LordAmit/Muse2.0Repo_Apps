record `com.b.a.b.b$a` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface, `java.lang.reflect.GenericArrayType` @kind interface {
  `java.lang.reflect.Type` `com.b.a.b.b$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.b$a` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13a240.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13a246.  call temp:= `d`(v2) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L13a24c.  v0:= temp @kind object;
  #L13a24e.  v1.`com.b.a.b.b$a.a` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L13a252.  return @kind void;
}
procedure `boolean` `equals`(`com.b.a.b.b$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/b$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13a264.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L13a268.  if v0 == 0 then goto L13a280;
  #L13a26c.  v2:= (`java.lang.reflect.GenericArrayType`) v2 @kind object;
  #L13a270.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L13a276.  v0:= temp;
  #L13a278.  if v0 == 0 then goto L13a280;
  #L13a27c.  v0:= 1I;
  #L13a27e.  return v0;
  #L13a280.  v0:= 0I;
  #L13a282.  goto L13a27e;
}
procedure `java.lang.reflect.Type` `getGenericComponentType`(`com.b.a.b.b$a` v1 @kind this) @signature `Lcom/b/a/b/b$a;.getGenericComponentType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13a294.  v0:= v1.`com.b.a.b.b$a.a` @type ^`java.lang.reflect.Type` @kind object;
  #L13a298.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.b.a.b.b$a` v1 @kind this) @signature `Lcom/b/a/b/b$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13a2ac.  v0:= v1.`com.b.a.b.b$a.a` @type ^`java.lang.reflect.Type` @kind object;
  #L13a2b0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L13a2b6.  v0:= temp;
  #L13a2b8.  return v0;
}
procedure `java.lang.String` `toString`(`com.b.a.b.b$a` v2 @kind this) @signature `Lcom/b/a/b/b$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13a2cc.  v0:= new `java.lang.StringBuilder`;
  #L13a2d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13a2d6.  v1:= v2.`com.b.a.b.b$a.a` @type ^`java.lang.reflect.Type` @kind object;
  #L13a2da.  call temp:= `f`(v1) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L13a2e0.  v1:= temp @kind object;
  #L13a2e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13a2e8.  v0:= temp @kind object;
  #L13a2ea.  v1:= "[]" @kind object;
  #L13a2ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13a2f4.  v0:= temp @kind object;
  #L13a2f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13a2fc.  v0:= temp @kind object;
  #L13a2fe.  return v0 @kind object;
}

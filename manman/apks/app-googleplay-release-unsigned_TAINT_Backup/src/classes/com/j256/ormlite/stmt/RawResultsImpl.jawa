record `com.j256.ormlite.stmt.RawResultsImpl` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.GenericRawResults` @kind interface {
  `java.lang.String`[] `com.j256.ormlite.stmt.RawResultsImpl.columnNames` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.SelectIterator` `com.j256.ormlite.stmt.RawResultsImpl.iterator` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.RawResultsImpl` v9 @kind this, `com.j256.ormlite.support.ConnectionSource` v10 @kind object, `com.j256.ormlite.support.DatabaseConnection` v11 @kind object, `java.lang.String` v12 @kind object, `java.lang.Class` v13 @kind object, `com.j256.ormlite.support.CompiledStatement` v14 @kind object, `com.j256.ormlite.stmt.GenericRowMapper` v15 @kind object, `com.j256.ormlite.dao.ObjectCache` v16 @kind object) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.<init>:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/String;Ljava/lang/Class;Lcom/j256/ormlite/support/CompiledStatement;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L158e94.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L158e9a.  v0:= new `com.j256.ormlite.stmt.SelectIterator`;
  #L158e9e.  v2:= 0I;
  #L158ea0.  v1:= v13 @kind object;
  #L158ea2.  v3:= v15 @kind object;
  #L158ea4.  v4:= v10 @kind object;
  #L158ea6.  v5:= v11 @kind object;
  #L158ea8.  v6:= v14 @kind object;
  #L158eaa.  v7:= v12 @kind object;
  #L158eac.  v8:= v16 @kind object;
  #L158eb0.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.<init>:(Ljava/lang/Class;Lcom/j256/ormlite/dao/Dao;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/support/DatabaseConnection;Lcom/j256/ormlite/support/CompiledStatement;Ljava/lang/String;Lcom/j256/ormlite/dao/ObjectCache;)V` @kind direct;
  #L158eb6.  v9.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` := v0 @kind object;
  #L158eba.  v0:= v9.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L158ebe.  call temp:= `getRawResults`(v0) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.getRawResults:()Lcom/j256/ormlite/support/DatabaseResults;` @kind virtual;
  #L158ec4.  v0:= temp @kind object;
  #L158ec6.  call temp:= `getColumnNames`(v0) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L158ecc.  v0:= temp @kind object;
  #L158ece.  v9.`com.j256.ormlite.stmt.RawResultsImpl.columnNames` @type ^`java.lang.String`[] := v0 @kind object;
  #L158ed2.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158ee4.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L158ee8.  if v0 == 0 then goto L158efc;
  #L158eec.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L158ef0.  call `close`(v0) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.close:()V` @kind virtual;
  #L158ef6.  v0:= 0I;
  #L158ef8.  v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` := v0 @kind object;
  #L158efc.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158f10.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L158f14.  return v0 @kind object;
}
procedure `java.lang.String`[] `getColumnNames`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.getColumnNames:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158f28.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.columnNames` @type ^`java.lang.String`[] @kind object;
  #L158f2c.  return v0 @kind object;
}
procedure `java.lang.Object` `getFirstResult`(`com.j256.ormlite.stmt.RawResultsImpl` v2 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.getFirstResult:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L158f40.  v0:= v2.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L158f44.  call temp:= `hasNextThrow`(v0) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.hasNextThrow:()Z` @kind virtual;
  #L158f4a.  v0:= temp;
  #L158f4c.  if v0 == 0 then goto L158f68;
  #L158f50.  v0:= v2.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L158f54.  call temp:= `nextThrow`(v0) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.nextThrow:()Ljava/lang/Object;` @kind virtual;
  #Try_end0.  
  #L158f5a.  v0:= temp @kind object;
  #L158f5c.  v1:= "raw results iterator" @kind object;
  #L158f60.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L158f66.  return v0 @kind object;
  #L158f68.  v0:= 0I;
  #L158f6a.  v1:= "raw results iterator" @kind object;
  #L158f6e.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L158f74.  goto L158f66;
  #L158f76.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L158f78.  v1:= "raw results iterator" @kind object;
  #L158f7c.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L158f82.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L158f76;
}
procedure `int` `getNumberColumns`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.getNumberColumns:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158fa0.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.columnNames` @type ^`java.lang.String`[] @kind object;
  #L158fa4.  v0:= length @variable v0;
  #L158fa6.  return v0;
}
procedure `java.util.List` `getResults`(`com.j256.ormlite.stmt.RawResultsImpl` v2 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.getResults:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158fb8.  v0:= new `java.util.ArrayList`;
  #L158fbc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L158fc2.  v1:= v2.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L158fc6.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.hasNext:()Z` @kind virtual;
  #L158fcc.  v1:= temp;
  #L158fce.  if v1 == 0 then goto L158ff4;
  #L158fd2.  v1:= v2.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L158fd6.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/stmt/SelectIterator;.next:()Ljava/lang/Object;` @kind virtual;
  #L158fdc.  v1:= temp @kind object;
  #L158fde.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L158fe4.  goto L158fc2;
  #L158fe6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L158fe8.  v1:= "raw results iterator" @kind object;
  #L158fec.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L158ff2.  throw v0;
  #L158ff4.  v1:= "raw results iterator" @kind object;
  #L158ff8.  call `closeThrowSqlException`(v2, v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeThrowSqlException:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L158ffe.  return v0 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L158fe6;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15901c.  v0:= v1.`com.j256.ormlite.stmt.RawResultsImpl.iterator` @type ^`com.j256.ormlite.stmt.SelectIterator` @kind object;
  #L159020.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.stmt.RawResultsImpl` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L159034.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/stmt/RawResultsImpl;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L15903a.  v0:= temp @kind object;
  #L15903c.  return v0 @kind object;
}

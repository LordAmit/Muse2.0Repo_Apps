record `com.j256.ormlite.logger.LoggerFactory$LogType` @kind class @AccessFlag PUBLIC_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.j256.ormlite.logger.LoggerFactory$LogType.detectClassName` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.j256.ormlite.logger.LoggerFactory$LogType.logClassName` @AccessFlag PRIVATE_FINAL;
}
global `com.j256.ormlite.logger.LoggerFactory$LogType`[] `@@com.j256.ormlite.logger.LoggerFactory$LogType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.ANDROID` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.COMMONS_LOGGING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOCAL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.SLF4J` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L155bd8.  v9:= 4I;
  #L155bda.  v8:= 3I;
  #L155bdc.  v7:= 2I;
  #L155bde.  v6:= 1I;
  #L155be0.  v5:= 0I;
  #L155be2.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L155be6.  v1:= "SLF4J" @kind object;
  #L155bea.  v2:= "org.slf4j.LoggerFactory" @kind object;
  #L155bee.  v3:= "com.j256.ormlite.logger.Slf4jLoggingLog" @kind object;
  #L155bf2.  call `<init>`(v0, v1, v5, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L155bf8.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.SLF4J` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L155bfc.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L155c00.  v1:= "ANDROID" @kind object;
  #L155c04.  v2:= "android.util.Log" @kind object;
  #L155c08.  v3:= "com.j256.ormlite.android.AndroidLog" @kind object;
  #L155c0c.  call `<init>`(v0, v1, v6, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L155c12.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.ANDROID` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L155c16.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L155c1a.  v1:= "COMMONS_LOGGING" @kind object;
  #L155c1e.  v2:= "org.apache.commons.logging.LogFactory" @kind object;
  #L155c22.  v3:= "com.j256.ormlite.logger.CommonsLoggingLog" @kind object;
  #L155c26.  call `<init>`(v0, v1, v7, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L155c2c.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.COMMONS_LOGGING` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L155c30.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L155c34.  v1:= "LOG4J2" @kind object;
  #L155c38.  v2:= "org.apache.logging.log4j.LogManager" @kind object;
  #L155c3c.  v3:= "com.j256.ormlite.logger.Log4j2Log" @kind object;
  #L155c40.  call `<init>`(v0, v1, v8, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L155c46.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J2` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L155c4a.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L155c4e.  v1:= "LOG4J" @kind object;
  #L155c52.  v2:= "org.apache.log4j.Logger" @kind object;
  #L155c56.  v3:= "com.j256.ormlite.logger.Log4jLog" @kind object;
  #L155c5a.  call `<init>`(v0, v1, v9, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L155c60.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L155c64.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType$1`;
  #L155c68.  v1:= "LOCAL" @kind object;
  #L155c6c.  v2:= 5I;
  #L155c6e.  v3:= constclass @type ^`com.j256.ormlite.logger.LocalLog` @kind object;
  #L155c72.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L155c78.  v3:= temp @kind object;
  #L155c7a.  v4:= constclass @type ^`com.j256.ormlite.logger.LocalLog` @kind object;
  #L155c7e.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L155c84.  v4:= temp @kind object;
  #L155c86.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType$1;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L155c8c.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOCAL` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L155c90.  v0:= 6I;
  #L155c92.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`[v0];
  #L155c96.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.SLF4J` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L155c9a.  v0[v5]:= v1 @kind object;
  #L155c9e.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.ANDROID` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L155ca2.  v0[v6]:= v1 @kind object;
  #L155ca6.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.COMMONS_LOGGING` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L155caa.  v0[v7]:= v1 @kind object;
  #L155cae.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J2` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L155cb2.  v0[v8]:= v1 @kind object;
  #L155cb6.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L155cba.  v0[v9]:= v1 @kind object;
  #L155cbe.  v1:= 5I;
  #L155cc0.  v2:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOCAL` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L155cc4.  v0[v1]:= v2 @kind object;
  #L155cc8.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.$VALUES` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType`[] := v0 @kind object;
  #L155ccc.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.logger.LoggerFactory$LogType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L155ce0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L155ce6.  v0.`com.j256.ormlite.logger.LoggerFactory$LogType.detectClassName` @type ^`java.lang.String` := v3 @kind object;
  #L155cea.  v0.`com.j256.ormlite.logger.LoggerFactory$LogType.logClassName` @type ^`java.lang.String` := v4 @kind object;
  #L155cee.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.logger.LoggerFactory$LogType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `com.j256.ormlite.logger.LoggerFactory$1` v5 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lcom/j256/ormlite/logger/LoggerFactory$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L155d00.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L155d06.  return @kind void;
}
procedure `com.j256.ormlite.logger.Log` `createLogFromClassName`(`com.j256.ormlite.logger.LoggerFactory$LogType` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.createLogFromClassName:(Ljava/lang/String;)Lcom/j256/ormlite/logger/Log;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L155d18.  v4:= 1I;
  #L155d1a.  v3:= 0I;
  #L155d1c.  v0:= v5.`com.j256.ormlite.logger.LoggerFactory$LogType.logClassName` @type ^`java.lang.String` @kind object;
  #L155d20.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L155d26.  v0:= temp @kind object;
  #L155d28.  v1:= new `java.lang.Class`[v4];
  #L155d2c.  v2:= constclass @type ^`java.lang.String` @kind object;
  #L155d30.  v1[v3]:= v2 @kind object;
  #L155d34.  call temp:= `getConstructor`(v0, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L155d3a.  v0:= temp @kind object;
  #L155d3c.  v1:= new `java.lang.Object`[v4];
  #L155d40.  v1[v3]:= v6 @kind object;
  #L155d44.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L155d4a.  v0:= temp @kind object;
  #L155d4c.  v0:= (`com.j256.ormlite.logger.Log`) v0 @kind object;
  #L155d50.  return v0 @kind object;
}
procedure `com.j256.ormlite.logger.LoggerFactory$LogType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.valueOf:(Ljava/lang/String;)Lcom/j256/ormlite/logger/LoggerFactory$LogType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L155d64.  v0:= constclass @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L155d68.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L155d6e.  v0:= temp @kind object;
  #L155d70.  v0:= (`com.j256.ormlite.logger.LoggerFactory$LogType`) v0 @kind object;
  #L155d74.  return v0 @kind object;
}
procedure `com.j256.ormlite.logger.LoggerFactory$LogType`[] `values`() @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.values:()[Lcom/j256/ormlite/logger/LoggerFactory$LogType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L155d88.  v0:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.$VALUES` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType`[] @kind object;
  #L155d8c.  call temp:= `clone`(v0) @signature `[Lcom/j256/ormlite/logger/LoggerFactory$LogType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L155d92.  v0:= temp @kind object;
  #L155d94.  v0:= (`com.j256.ormlite.logger.LoggerFactory$LogType`[]) v0 @kind object;
  #L155d98.  return v0 @kind object;
}
procedure `com.j256.ormlite.logger.Log` `createLog`(`com.j256.ormlite.logger.LoggerFactory$LogType` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.createLog:(Ljava/lang/String;)Lcom/j256/ormlite/logger/Log;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L155dac.  call temp:= `createLogFromClassName`(v5, v6) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.createLogFromClassName:(Ljava/lang/String;)Lcom/j256/ormlite/logger/Log;` @kind direct;
  #Try_end0.  
  #L155db2.  v0:= temp @kind object;
  #L155db4.  return v0 @kind object;
  #L155db6.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L155db8.  v0:= new `com.j256.ormlite.logger.LocalLog`;
  #L155dbc.  call `<init>`(v0, v6) @signature `Lcom/j256/ormlite/logger/LocalLog;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L155dc2.  v2:= `@@com.j256.ormlite.logger.Log$Level.WARNING` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L155dc6.  v3:= new `java.lang.StringBuilder`;
  #L155dca.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L155dd0.  v4:= "Unable to call constructor with single String argument for class " @kind object;
  #L155dd4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155dda.  v3:= temp @kind object;
  #L155ddc.  v4:= v5.`com.j256.ormlite.logger.LoggerFactory$LogType.logClassName` @type ^`java.lang.String` @kind object;
  #L155de0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155de6.  v3:= temp @kind object;
  #L155de8.  v4:= ", so had to use local log: " @kind object;
  #L155dec.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155df2.  v3:= temp @kind object;
  #L155df4.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L155dfa.  v1:= temp @kind object;
  #L155dfc.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L155e02.  v1:= temp @kind object;
  #L155e04.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L155e0a.  v1:= temp @kind object;
  #L155e0c.  call `log`(v0, v2, v1) @signature `Lcom/j256/ormlite/logger/Log;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/String;)V` @kind interface;
  #L155e12.  goto L155db4;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L155db6;
}
procedure `boolean` `isAvailable`(`com.j256.ormlite.logger.LoggerFactory$LogType` v3 @kind this) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.isAvailable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L155e34.  v0:= 0I;
  #L155e36.  call temp:= `isAvailableTestClass`(v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.isAvailableTestClass:()Z` @kind virtual;
  #L155e3c.  v1:= temp;
  #L155e3e.  if v1 != 0 then goto L155e44;
  #L155e42.  return v0;
  #Try_start0.  
  #L155e44.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L155e4a.  v1:= temp @kind object;
  #L155e4c.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L155e52.  v1:= temp @kind object;
  #L155e54.  call temp:= `createLogFromClassName`(v3, v1) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.createLogFromClassName:(Ljava/lang/String;)Lcom/j256/ormlite/logger/Log;` @kind direct;
  #L155e5a.  v1:= temp @kind object;
  #L155e5c.  v2:= `@@com.j256.ormlite.logger.Log$Level.INFO` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L155e60.  call temp:= `isLevelEnabled`(v1, v2) @signature `Lcom/j256/ormlite/logger/Log;.isLevelEnabled:(Lcom/j256/ormlite/logger/Log$Level;)Z` @kind interface;
  #Try_end0.  
  #L155e66.  v0:= 1I;
  #L155e68.  goto L155e42;
  #L155e6a.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L155e6c.  goto L155e42;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L155e6a;
}
procedure `boolean` `isAvailableTestClass`(`com.j256.ormlite.logger.LoggerFactory$LogType` v1 @kind this) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.isAvailableTestClass:()Z` @AccessFlag  {
    temp;
    v0;

  #Try_start0.  
  #L155e90.  v0:= v1.`com.j256.ormlite.logger.LoggerFactory$LogType.detectClassName` @type ^`java.lang.String` @kind object;
  #L155e94.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L155e9a.  v0:= 1I;
  #L155e9c.  return v0;
  #L155e9e.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L155ea0.  v0:= 0I;
  #L155ea2.  goto L155e9c;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L155e9e;
}

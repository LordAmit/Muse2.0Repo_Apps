record `com.j256.ormlite.stmt.mapped.MappedDelete` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedDelete` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15cc04.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L15cc0a.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedDelete` `build`(`com.j256.ormlite.db.DatabaseType` v5 @kind object, `com.j256.ormlite.table.TableInfo` v6 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedDelete;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15cc1c.  call temp:= `getIdField`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15cc22.  v0:= temp @kind object;
  #L15cc24.  if v0 != 0 then goto L15cc6e;
  #L15cc28.  v0:= new `java.sql.SQLException`;
  #L15cc2c.  v1:= new `java.lang.StringBuilder`;
  #L15cc30.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15cc36.  v2:= "Cannot delete from " @kind object;
  #L15cc3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cc40.  v1:= temp @kind object;
  #L15cc42.  call temp:= `getDataClass`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L15cc48.  v2:= temp @kind object;
  #L15cc4a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cc50.  v1:= temp @kind object;
  #L15cc52.  v2:= " because it doesn't have an id field" @kind object;
  #L15cc56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cc5c.  v1:= temp @kind object;
  #L15cc5e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cc64.  v1:= temp @kind object;
  #L15cc66.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cc6c.  throw v0;
  #L15cc6e.  v1:= new `java.lang.StringBuilder`;
  #L15cc72.  v2:= 64I;
  #L15cc76.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L15cc7c.  v2:= "DELETE FROM " @kind object;
  #L15cc80.  call temp:= `getTableName`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L15cc86.  v3:= temp @kind object;
  #L15cc88.  call `appendTableName`(v5, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15cc8e.  v2:= 0I;
  #L15cc90.  call `appendWhereFieldEq`(v5, v0, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L15cc96.  v2:= new `com.j256.ormlite.stmt.mapped.MappedDelete`;
  #L15cc9a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cca0.  v1:= temp @kind object;
  #L15cca2.  v3:= 1I;
  #L15cca4.  v3:= new `com.j256.ormlite.field.FieldType`[v3];
  #L15cca8.  v4:= 0I;
  #L15ccaa.  v3[v4]:= v0 @kind object;
  #L15ccae.  call `<init>`(v2, v6, v1, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L15ccb4.  return v2 @kind object;
}
procedure `int` `delete`(`com.j256.ormlite.stmt.mapped.MappedDelete` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.delete:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L15ccc8.  call temp:= `getFieldObjects`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L15ccce.  v0:= temp @kind object;
  #L15ccd0.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L15ccd4.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L15ccd8.  call temp:= `delete`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L15ccde.  v1:= temp;
  #L15cce0.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15cce4.  v3:= "delete data with statement '{}' and {} args, changed {} rows" @kind object;
  #L15cce8.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L15ccec.  v5:= length @variable v0;
  #L15ccee.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15ccf4.  v5:= temp @kind object;
  #L15ccf6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15ccfc.  v6:= temp @kind object;
  #L15ccfe.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L15cd04.  v2:= length @variable v0;
  #L15cd06.  if v2 <= 0 then goto L15cd18;
  #L15cd0a.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15cd0e.  v3:= "delete arguments: {}" @kind object;
  #L15cd12.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L15cd18.  if v1 <= 0 then goto L15cd36;
  #L15cd1c.  if v10 == 0 then goto L15cd36;
  #L15cd20.  v0:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15cd24.  call temp:= `extractJavaFieldToSqlArgValue`(v0, v9) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15cd2a.  v0:= temp @kind object;
  #L15cd2c.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.clazz` @type ^`java.lang.Class` @kind object;
  #L15cd30.  call `remove`(v10, v2, v0) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #Try_end0.  
  #L15cd36.  return v1;
  #L15cd38.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15cd3a.  v1:= new `java.lang.StringBuilder`;
  #L15cd3e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15cd44.  v2:= "Unable to run delete stmt on object " @kind object;
  #L15cd48.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd4e.  v1:= temp @kind object;
  #L15cd50.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd56.  v1:= temp @kind object;
  #L15cd58.  v2:= ": " @kind object;
  #L15cd5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd62.  v1:= temp @kind object;
  #L15cd64.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L15cd68.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd6e.  v1:= temp @kind object;
  #L15cd70.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cd76.  v1:= temp @kind object;
  #L15cd78.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15cd7e.  v0:= temp @kind object;
  #L15cd80.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15cd38;
}
procedure `int` `deleteById`(`com.j256.ormlite.stmt.mapped.MappedDelete` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.deleteById:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15cda4.  v0:= 1I;
  #Try_start0.  
  #L15cda6.  v0:= new `java.lang.Object`[v0];
  #L15cdaa.  v1:= 0I;
  #L15cdac.  call temp:= `convertIdToFieldObject`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.convertIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15cdb2.  v2:= temp @kind object;
  #L15cdb4.  v0[v1]:= v2 @kind object;
  #L15cdb8.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L15cdbc.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L15cdc0.  call temp:= `delete`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L15cdc6.  v1:= temp;
  #L15cdc8.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15cdcc.  v3:= "delete data with statement '{}' and {} args, changed {} rows" @kind object;
  #L15cdd0.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L15cdd4.  v5:= length @variable v0;
  #L15cdd6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15cddc.  v5:= temp @kind object;
  #L15cdde.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15cde4.  v6:= temp @kind object;
  #L15cde6.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L15cdec.  v2:= length @variable v0;
  #L15cdee.  if v2 <= 0 then goto L15ce00;
  #L15cdf2.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15cdf6.  v3:= "delete arguments: {}" @kind object;
  #L15cdfa.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L15ce00.  if v1 <= 0 then goto L15ce12;
  #L15ce04.  if v10 == 0 then goto L15ce12;
  #L15ce08.  v0:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.clazz` @type ^`java.lang.Class` @kind object;
  #L15ce0c.  call `remove`(v10, v0, v9) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #Try_end0.  
  #L15ce12.  return v1;
  #L15ce14.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15ce16.  v1:= new `java.lang.StringBuilder`;
  #L15ce1a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15ce20.  v2:= "Unable to run deleteById stmt on id " @kind object;
  #L15ce24.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ce2a.  v1:= temp @kind object;
  #L15ce2c.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ce32.  v1:= temp @kind object;
  #L15ce34.  v2:= ": " @kind object;
  #L15ce38.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ce3e.  v1:= temp @kind object;
  #L15ce40.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L15ce44.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ce4a.  v1:= temp @kind object;
  #L15ce4c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15ce52.  v1:= temp @kind object;
  #L15ce54.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15ce5a.  v0:= temp @kind object;
  #L15ce5c.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15ce14;
}

record `com.j256.ormlite.table.DatabaseTableConfigLoader` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_END_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_FIELDS_END` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_FIELDS_START` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_START_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.FIELD_NAME_DATA_CLASS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.FIELD_NAME_TABLE_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfigLoader` v0 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15f90c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15f912.  return @kind void;
}
procedure `com.j256.ormlite.table.DatabaseTableConfig` `fromReader`(`java.io.BufferedReader` v7 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15f924.  v3:= 1I;
  #L15f926.  v2:= 0I;
  #L15f928.  v0:= new `com.j256.ormlite.table.DatabaseTableConfig`;
  #L15f92c.  call `<init>`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:()V` @kind direct;
  #L15f932.  v1:= v2;
  #Try_start0.  
  #L15f934.  call temp:= `readLine`(v7) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #Try_end0.  
  #L15f93a.  v4:= temp @kind object;
  #L15f93c.  if v4 != 0 then goto L15f956;
  #L15f940.  if v1 == 0 then goto L15fa04;
  #L15f944.  return v0 @kind object;
  #L15f946.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L15f948.  v1:= "Could not read DatabaseTableConfig from stream" @kind object;
  #L15f94c.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15f952.  v0:= temp @kind object;
  #L15f954.  throw v0;
  #L15f956.  v5:= "# --table-end--" @kind object;
  #L15f95a.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15f960.  v5:= temp;
  #L15f962.  if v5 != 0 then goto L15f940;
  #L15f966.  v5:= "# --table-fields-start--" @kind object;
  #L15f96a.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15f970.  v5:= temp;
  #L15f972.  if v5 == 0 then goto L15f97e;
  #L15f976.  call `readFields`(v7, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readFields:(Ljava/io/BufferedReader;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @kind static;
  #L15f97c.  goto L15f934;
  #L15f97e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15f984.  v5:= temp;
  #L15f986.  if v5 == 0 then goto L15f934;
  #L15f98a.  v5:= "#" @kind object;
  #L15f98e.  call temp:= `startsWith`(v4, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L15f994.  v5:= temp;
  #L15f996.  if v5 != 0 then goto L15f934;
  #L15f99a.  v5:= "# --table-start--" @kind object;
  #L15f99e.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15f9a4.  v5:= temp;
  #L15f9a6.  if v5 != 0 then goto L15f934;
  #L15f9aa.  v1:= "=" @kind object;
  #L15f9ae.  v5:= -2I;
  #L15f9b0.  call temp:= `split`(v4, v1, v5) @signature `Ljava/lang/String;.split:(Ljava/lang/String;I)[Ljava/lang/String;` @kind virtual;
  #L15f9b6.  v1:= temp @kind object;
  #L15f9b8.  v5:= length @variable v1;
  #L15f9ba.  v6:= 2I;
  #L15f9bc.  if v5 == v6 then goto L15f9f2;
  #L15f9c0.  v0:= new `java.sql.SQLException`;
  #L15f9c4.  v1:= new `java.lang.StringBuilder`;
  #L15f9c8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f9ce.  v2:= "DatabaseTableConfig reading from stream cannot parse line: " @kind object;
  #L15f9d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f9d8.  v1:= temp @kind object;
  #L15f9da.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f9e0.  v1:= temp @kind object;
  #L15f9e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f9e8.  v1:= temp @kind object;
  #L15f9ea.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15f9f0.  throw v0;
  #L15f9f2.  v4:= v1[v2] @kind object;
  #L15f9f6.  v1:= v1[v3] @kind object;
  #L15f9fa.  call `readTableField`(v0, v4, v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readTableField:(Lcom/j256/ormlite/table/DatabaseTableConfig;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15fa00.  v1:= v3;
  #L15fa02.  goto L15f934;
  #L15fa04.  v0:= 0I;
  #L15fa06.  goto L15f944;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L15f946;
}
procedure `java.util.List` `loadDatabaseConfigFromReader`(`java.io.BufferedReader` v2 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.loadDatabaseConfigFromReader:(Ljava/io/BufferedReader;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L15fa28.  v0:= new `java.util.ArrayList`;
  #L15fa2c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15fa32.  call temp:= `fromReader`(v2) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @kind static;
  #L15fa38.  v1:= temp @kind object;
  #L15fa3a.  if v1 != 0 then goto L15fa40;
  #L15fa3e.  return v0 @kind object;
  #L15fa40.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15fa46.  goto L15fa32;
}
procedure `void` `readFields`(`java.io.BufferedReader` v3 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v4 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readFields:(Ljava/io/BufferedReader;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15fa58.  v0:= new `java.util.ArrayList`;
  #L15fa5c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L15fa62.  call temp:= `readLine`(v3) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #Try_end0.  
  #L15fa68.  v1:= temp @kind object;
  #L15fa6a.  if v1 == 0 then goto L15fa7e;
  #L15fa6e.  v2:= "# --table-fields-end--" @kind object;
  #L15fa72.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15fa78.  v1:= temp;
  #L15fa7a.  if v1 == 0 then goto L15fa96;
  #L15fa7e.  call `setFieldConfigs`(v4, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setFieldConfigs:(Ljava/util/List;)V` @kind virtual;
  #L15fa84.  return @kind void;
  #L15fa86.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L15fa88.  v1:= "Could not read next field from config file" @kind object;
  #L15fa8c.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15fa92.  v0:= temp @kind object;
  #L15fa94.  throw v0;
  #L15fa96.  call temp:= `fromReader`(v3) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @kind static;
  #L15fa9c.  v1:= temp @kind object;
  #L15fa9e.  if v1 == 0 then goto L15fa7e;
  #L15faa2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15faa8.  goto L15fa62;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L15fa86;
}
procedure `void` `readTableField`(`com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readTableField:(Lcom/j256/ormlite/table/DatabaseTableConfig;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15facc.  v0:= "dataClass" @kind object;
  #L15fad0.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15fad6.  v0:= temp;
  #L15fad8.  if v0 == 0 then goto L15fb20;
  #Try_start0.  
  #L15fadc.  call temp:= `forName`(v5) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L15fae2.  v0:= temp @kind object;
  #L15fae4.  call `setDataClass`(v3, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setDataClass:(Ljava/lang/Class;)V` @kind virtual;
  #Try_end0.  
  #L15faea.  return @kind void;
  #L15faec.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L15faee.  v0:= new `java.lang.IllegalArgumentException`;
  #L15faf2.  v1:= new `java.lang.StringBuilder`;
  #L15faf6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15fafc.  v2:= "Unknown class specified for dataClass: " @kind object;
  #L15fb00.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb06.  v1:= temp @kind object;
  #L15fb08.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb0e.  v1:= temp @kind object;
  #L15fb10.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15fb16.  v1:= temp @kind object;
  #L15fb18.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15fb1e.  throw v0;
  #L15fb20.  v0:= "tableName" @kind object;
  #L15fb24.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15fb2a.  v0:= temp;
  #L15fb2c.  if v0 == 0 then goto L15faea;
  #L15fb30.  call `setTableName`(v3, v5) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setTableName:(Ljava/lang/String;)V` @kind virtual;
  #L15fb36.  goto L15faea;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L15faec;
}
procedure `void` `write`(`java.io.BufferedWriter` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.write:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L15fb58.  call `writeConfig`(v2, v3) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.writeConfig:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @kind static;
  #Try_end0.  
  #L15fb5e.  return @kind void;
  #L15fb60.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L15fb62.  v1:= "Could not write config to writer" @kind object;
  #L15fb66.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15fb6c.  v0:= temp @kind object;
  #L15fb6e.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L15fb60;
}
procedure `void` `writeConfig`(`java.io.BufferedWriter` v3 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v4 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.writeConfig:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15fb90.  v2:= 61I;
  #L15fb94.  v0:= "# --table-start--" @kind object;
  #L15fb98.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15fb9e.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15fba4.  call temp:= `getDataClass`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L15fbaa.  v0:= temp @kind object;
  #L15fbac.  if v0 == 0 then goto L15fbe0;
  #L15fbb0.  v0:= "dataClass" @kind object;
  #L15fbb4.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15fbba.  v0:= temp @kind object;
  #L15fbbc.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15fbc2.  v0:= temp @kind object;
  #L15fbc4.  call temp:= `getDataClass`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L15fbca.  v1:= temp @kind object;
  #L15fbcc.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15fbd2.  v1:= temp @kind object;
  #L15fbd4.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15fbda.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15fbe0.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L15fbe6.  v0:= temp @kind object;
  #L15fbe8.  if v0 == 0 then goto L15fc14;
  #L15fbec.  v0:= "tableName" @kind object;
  #L15fbf0.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15fbf6.  v0:= temp @kind object;
  #L15fbf8.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15fbfe.  v0:= temp @kind object;
  #L15fc00.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L15fc06.  v1:= temp @kind object;
  #L15fc08.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15fc0e.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15fc14.  v0:= "# --table-fields-start--" @kind object;
  #L15fc18.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15fc1e.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15fc24.  call temp:= `getFieldConfigs`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldConfigs:()Ljava/util/List;` @kind virtual;
  #L15fc2a.  v0:= temp @kind object;
  #L15fc2c.  if v0 == 0 then goto L15fc68;
  #L15fc30.  call temp:= `getFieldConfigs`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldConfigs:()Ljava/util/List;` @kind virtual;
  #L15fc36.  v0:= temp @kind object;
  #L15fc38.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15fc3e.  v1:= temp @kind object;
  #L15fc40.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15fc46.  v0:= temp;
  #L15fc48.  if v0 == 0 then goto L15fc68;
  #L15fc4c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15fc52.  v0:= temp @kind object;
  #L15fc54.  v0:= (`com.j256.ormlite.field.DatabaseFieldConfig`) v0 @kind object;
  #L15fc58.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L15fc5e.  v2:= temp @kind object;
  #L15fc60.  call `write`(v3, v0, v2) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.write:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/String;)V` @kind static;
  #L15fc66.  goto L15fc40;
  #L15fc68.  v0:= "# --table-fields-end--" @kind object;
  #L15fc6c.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15fc72.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15fc78.  v0:= "# --table-end--" @kind object;
  #L15fc7c.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15fc82.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15fc88.  return @kind void;
}

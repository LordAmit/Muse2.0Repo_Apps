record `com.j256.ormlite.dao.RuntimeExceptionDao` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.Dao` @kind interface {
  `com.j256.ormlite.dao.Dao` `com.j256.ormlite.dao.RuntimeExceptionDao.dao` @AccessFlag PRIVATE;
}
global `com.j256.ormlite.logger.Log$Level` `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L148f74.  v0:= `@@com.j256.ormlite.logger.Log$Level.DEBUG` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L148f78.  `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @type ^`com.j256.ormlite.logger.Log$Level` := v0 @kind object;
  #L148f7c.  v0:= constclass @type ^`com.j256.ormlite.dao.RuntimeExceptionDao` @kind object;
  #L148f80.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L148f86.  v0:= temp @kind object;
  #L148f88.  `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L148f8c.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.dao.RuntimeExceptionDao` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L148fa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L148fa6.  v0.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` := v1 @kind object;
  #L148faa.  return @kind void;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `createDao`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L148fbc.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L148fc2.  v0:= temp @kind object;
  #L148fc4.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L148fc8.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #L148fce.  return v1 @kind object;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `createDao`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L148fe0.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L148fe6.  v0:= temp @kind object;
  #L148fe8.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L148fec.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #L148ff2.  return v1 @kind object;
}
procedure `void` `logMessage`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.lang.Exception` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L149004.  v0:= `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L149008.  v1:= `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L14900c.  call `log`(v0, v1, v3, v4) @signature `Lcom/j256/ormlite/logger/Logger;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/Throwable;Ljava/lang/String;)V` @kind virtual;
  #L149012.  return @kind void;
}
procedure `void` `assignEmptyForeignCollection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149024.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149028.  call `assignEmptyForeignCollection`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @kind interface;
  #Try_end0.  
  #L14902e.  return @kind void;
  #L149030.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149032.  v1:= new `java.lang.StringBuilder`;
  #L149036.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14903c.  v2:= "assignEmptyForeignCollection threw exception on " @kind object;
  #L149040.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149046.  v1:= temp @kind object;
  #L149048.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14904e.  v1:= temp @kind object;
  #L149050.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149056.  v1:= temp @kind object;
  #L149058.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14905e.  v1:= new `java.lang.RuntimeException`;
  #L149062.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149068.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149030;
}
procedure `java.lang.Object` `callBatchTasks`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.concurrent.Callable` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14908c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149090.  call temp:= `callBatchTasks`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L149096.  v0:= temp @kind object;
  #L149098.  return v0 @kind object;
  #L14909a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L14909c.  v1:= new `java.lang.StringBuilder`;
  #L1490a0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1490a6.  v2:= "callBatchTasks threw exception on: " @kind object;
  #L1490aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1490b0.  v1:= temp @kind object;
  #L1490b2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1490b8.  v1:= temp @kind object;
  #L1490ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1490c0.  v1:= temp @kind object;
  #L1490c2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1490c8.  v1:= new `java.lang.RuntimeException`;
  #L1490cc.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1490d2.  throw v1;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L14909a;
}
procedure `void` `clearObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.clearObjectCache:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1490f4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1490f8.  call `clearObjectCache`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.clearObjectCache:()V` @kind interface;
  #L1490fe.  return @kind void;
}
procedure `void` `closeLastIterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.closeLastIterator:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L149110.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149114.  call `closeLastIterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.closeLastIterator:()V` @kind interface;
  #Try_end0.  
  #L14911a.  return @kind void;
  #L14911c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L14911e.  v1:= "closeLastIterator threw exception" @kind object;
  #L149122.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149128.  v1:= new `java.lang.RuntimeException`;
  #L14912c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149132.  throw v1;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L14911c;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149154.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149158.  call temp:= `closeableIterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L14915e.  v0:= temp @kind object;
  #L149160.  return v0 @kind object;
}
procedure `void` `commit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149174.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149178.  call `commit`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L14917e.  return @kind void;
  #L149180.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149182.  v1:= new `java.lang.StringBuilder`;
  #L149186.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14918c.  v2:= "commit(" @kind object;
  #L149190.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149196.  v1:= temp @kind object;
  #L149198.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14919e.  v1:= temp @kind object;
  #L1491a0.  v2:= ") threw exception" @kind object;
  #L1491a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1491aa.  v1:= temp @kind object;
  #L1491ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1491b2.  v1:= temp @kind object;
  #L1491b4.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1491ba.  v1:= new `java.lang.RuntimeException`;
  #L1491be.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1491c4.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149180;
}
procedure `long` `countOf`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.countOf:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L1491e8.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1491ec.  call temp:= `countOf`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:()J` @kind interface;
  #Try_end0.  
  #L1491f2.  v0:= temp @kind wide;
  #L1491f4.  return v0 @kind wide;
  #L1491f6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1491f8.  v1:= "countOf threw exception" @kind object;
  #L1491fc.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149202.  v1:= new `java.lang.RuntimeException`;
  #L149206.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14920c.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1491f6;
}
procedure `long` `countOf`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149230.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149234.  call temp:= `countOf`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @kind interface;
  #Try_end0.  
  #L14923a.  v0:= temp @kind wide;
  #L14923c.  return v0 @kind wide;
  #L14923e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149240.  v1:= new `java.lang.StringBuilder`;
  #L149244.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14924a.  v2:= "countOf threw exception on " @kind object;
  #L14924e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149254.  v1:= temp @kind object;
  #L149256.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14925c.  v1:= temp @kind object;
  #L14925e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149264.  v1:= temp @kind object;
  #L149266.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14926c.  v1:= new `java.lang.RuntimeException`;
  #L149270.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149276.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14923e;
}
procedure `int` `create`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.create:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149298.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14929c.  call temp:= `create`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1492a2.  v0:= temp;
  #L1492a4.  return v0;
  #L1492a6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1492a8.  v1:= new `java.lang.StringBuilder`;
  #L1492ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1492b2.  v2:= "create threw exception on: " @kind object;
  #L1492b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1492bc.  v1:= temp @kind object;
  #L1492be.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1492c4.  v1:= temp @kind object;
  #L1492c6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1492cc.  v1:= temp @kind object;
  #L1492ce.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1492d4.  v1:= new `java.lang.RuntimeException`;
  #L1492d8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1492de.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1492a6;
}
procedure `int` `create`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.create:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149300.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149304.  call temp:= `create`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L14930a.  v0:= temp;
  #L14930c.  return v0;
  #L14930e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149310.  v1:= new `java.lang.StringBuilder`;
  #L149314.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14931a.  v2:= "create threw exception on: " @kind object;
  #L14931e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149324.  v1:= temp @kind object;
  #L149326.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14932c.  v1:= temp @kind object;
  #L14932e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149334.  v1:= temp @kind object;
  #L149336.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14933c.  v1:= new `java.lang.RuntimeException`;
  #L149340.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149346.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14930e;
}
procedure `java.lang.Object` `createIfNotExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149368.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14936c.  call temp:= `createIfNotExists`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L149372.  v0:= temp @kind object;
  #L149374.  return v0 @kind object;
  #L149376.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149378.  v1:= new `java.lang.StringBuilder`;
  #L14937c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149382.  v2:= "createIfNotExists threw exception on: " @kind object;
  #L149386.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14938c.  v1:= temp @kind object;
  #L14938e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149394.  v1:= temp @kind object;
  #L149396.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14939c.  v1:= temp @kind object;
  #L14939e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1493a4.  v1:= new `java.lang.RuntimeException`;
  #L1493a8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1493ae.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149376;
}
procedure `com.j256.ormlite.dao.Dao$CreateOrUpdateStatus` `createOrUpdate`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1493d0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1493d4.  call temp:= `createOrUpdate`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @kind interface;
  #Try_end0.  
  #L1493da.  v0:= temp @kind object;
  #L1493dc.  return v0 @kind object;
  #L1493de.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1493e0.  v1:= new `java.lang.StringBuilder`;
  #L1493e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1493ea.  v2:= "createOrUpdate threw exception on: " @kind object;
  #L1493ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1493f4.  v1:= temp @kind object;
  #L1493f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1493fc.  v1:= temp @kind object;
  #L1493fe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149404.  v1:= temp @kind object;
  #L149406.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14940c.  v1:= new `java.lang.RuntimeException`;
  #L149410.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149416.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1493de;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedDelete` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149438.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14943c.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @kind interface;
  #Try_end0.  
  #L149442.  v0:= temp;
  #L149444.  return v0;
  #L149446.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149448.  v1:= new `java.lang.StringBuilder`;
  #L14944c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149452.  v2:= "delete threw exception on: " @kind object;
  #L149456.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14945c.  v1:= temp @kind object;
  #L14945e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149464.  v1:= temp @kind object;
  #L149466.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14946c.  v1:= temp @kind object;
  #L14946e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149474.  v1:= new `java.lang.RuntimeException`;
  #L149478.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14947e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149446;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1494a0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1494a4.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1494aa.  v0:= temp;
  #L1494ac.  return v0;
  #L1494ae.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1494b0.  v1:= new `java.lang.StringBuilder`;
  #L1494b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1494ba.  v2:= "delete threw exception on: " @kind object;
  #L1494be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1494c4.  v1:= temp @kind object;
  #L1494c6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1494cc.  v1:= temp @kind object;
  #L1494ce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1494d4.  v1:= temp @kind object;
  #L1494d6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1494dc.  v1:= new `java.lang.RuntimeException`;
  #L1494e0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1494e6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1494ae;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149508.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14950c.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L149512.  v0:= temp;
  #L149514.  return v0;
  #L149516.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149518.  v1:= new `java.lang.StringBuilder`;
  #L14951c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149522.  v2:= "delete threw exception on: " @kind object;
  #L149526.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14952c.  v1:= temp @kind object;
  #L14952e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149534.  v1:= temp @kind object;
  #L149536.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14953c.  v1:= temp @kind object;
  #L14953e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149544.  v1:= new `java.lang.RuntimeException`;
  #L149548.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14954e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149516;
}
procedure `com.j256.ormlite.stmt.DeleteBuilder` `deleteBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149570.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149574.  call temp:= `deleteBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @kind interface;
  #L14957a.  v0:= temp @kind object;
  #L14957c.  return v0 @kind object;
}
procedure `int` `deleteById`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteById:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149590.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149594.  call temp:= `deleteById`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.deleteById:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L14959a.  v0:= temp;
  #L14959c.  return v0;
  #L14959e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1495a0.  v1:= new `java.lang.StringBuilder`;
  #L1495a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1495aa.  v2:= "deleteById threw exception on: " @kind object;
  #L1495ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1495b4.  v1:= temp @kind object;
  #L1495b6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1495bc.  v1:= temp @kind object;
  #L1495be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1495c4.  v1:= temp @kind object;
  #L1495c6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1495cc.  v1:= new `java.lang.RuntimeException`;
  #L1495d0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1495d6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14959e;
}
procedure `int` `deleteIds`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteIds:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1495f8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1495fc.  call temp:= `deleteIds`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.deleteIds:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L149602.  v0:= temp;
  #L149604.  return v0;
  #L149606.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149608.  v1:= new `java.lang.StringBuilder`;
  #L14960c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149612.  v2:= "deleteIds threw exception on: " @kind object;
  #L149616.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14961c.  v1:= temp @kind object;
  #L14961e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149624.  v1:= temp @kind object;
  #L149626.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14962c.  v1:= temp @kind object;
  #L14962e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149634.  v1:= new `java.lang.RuntimeException`;
  #L149638.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14963e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149606;
}
procedure `void` `endThreadConnection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149660.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149664.  call `endThreadConnection`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L14966a.  return @kind void;
  #L14966c.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14966e.  v1:= new `java.lang.StringBuilder`;
  #L149672.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149678.  v2:= "endThreadConnection(" @kind object;
  #L14967c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149682.  v1:= temp @kind object;
  #L149684.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14968a.  v1:= temp @kind object;
  #L14968c.  v2:= ") threw exception" @kind object;
  #L149690.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149696.  v1:= temp @kind object;
  #L149698.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14969e.  v1:= temp @kind object;
  #L1496a0.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1496a6.  v1:= new `java.lang.RuntimeException`;
  #L1496aa.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1496b0.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14966c;
}
procedure `int` `executeRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1496d4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1496d8.  call temp:= `executeRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L1496de.  v0:= temp;
  #L1496e0.  return v0;
  #L1496e2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1496e4.  v1:= new `java.lang.StringBuilder`;
  #L1496e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1496ee.  v2:= "executeRaw threw exception on: " @kind object;
  #L1496f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1496f8.  v1:= temp @kind object;
  #L1496fa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149700.  v1:= temp @kind object;
  #L149702.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149708.  v1:= temp @kind object;
  #L14970a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149710.  v1:= new `java.lang.RuntimeException`;
  #L149714.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14971a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1496e2;
}
procedure `int` `executeRawNoArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.executeRawNoArgs:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14973c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149740.  call temp:= `executeRawNoArgs`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.executeRawNoArgs:(Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L149746.  v0:= temp;
  #L149748.  return v0;
  #L14974a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14974c.  v1:= new `java.lang.StringBuilder`;
  #L149750.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149756.  v2:= "executeRawNoArgs threw exception on: " @kind object;
  #L14975a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149760.  v1:= temp @kind object;
  #L149762.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149768.  v1:= temp @kind object;
  #L14976a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149770.  v1:= temp @kind object;
  #L149772.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149778.  v1:= new `java.lang.RuntimeException`;
  #L14977c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149782.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14974a;
}
procedure `java.lang.Object` `extractId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1497a4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1497a8.  call temp:= `extractId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L1497ae.  v0:= temp @kind object;
  #L1497b0.  return v0 @kind object;
  #L1497b2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1497b4.  v1:= new `java.lang.StringBuilder`;
  #L1497b8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1497be.  v2:= "extractId threw exception on: " @kind object;
  #L1497c2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1497c8.  v1:= temp @kind object;
  #L1497ca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1497d0.  v1:= temp @kind object;
  #L1497d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1497d8.  v1:= temp @kind object;
  #L1497da.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1497e0.  v1:= new `java.lang.RuntimeException`;
  #L1497e4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1497ea.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1497b2;
}
procedure `com.j256.ormlite.field.FieldType` `findForeignFieldType`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14980c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149810.  call temp:= `findForeignFieldType`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @kind interface;
  #L149816.  v0:= temp @kind object;
  #L149818.  return v0 @kind object;
}
procedure `com.j256.ormlite.support.ConnectionSource` `getConnectionSource`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14982c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149830.  call temp:= `getConnectionSource`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind interface;
  #L149836.  v0:= temp @kind object;
  #L149838.  return v0 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14984c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149850.  call temp:= `getDataClass`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L149856.  v0:= temp @kind object;
  #L149858.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.ForeignCollection` `getEmptyForeignCollection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14986c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149870.  call temp:= `getEmptyForeignCollection`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @kind interface;
  #Try_end0.  
  #L149876.  v0:= temp @kind object;
  #L149878.  return v0 @kind object;
  #L14987a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14987c.  v1:= new `java.lang.StringBuilder`;
  #L149880.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149886.  v2:= "getEmptyForeignCollection threw exception on " @kind object;
  #L14988a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149890.  v1:= temp @kind object;
  #L149892.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149898.  v1:= temp @kind object;
  #L14989a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1498a0.  v1:= temp @kind object;
  #L1498a2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1498a8.  v1:= new `java.lang.RuntimeException`;
  #L1498ac.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1498b2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14987a;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1498d4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1498d8.  call temp:= `getObjectCache`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @kind interface;
  #L1498de.  v0:= temp @kind object;
  #L1498e0.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.RawRowMapper` `getRawRowMapper`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1498f4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1498f8.  call temp:= `getRawRowMapper`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @kind interface;
  #L1498fe.  v0:= temp @kind object;
  #L149900.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.GenericRowMapper` `getSelectStarRowMapper`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L149914.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149918.  call temp:= `getSelectStarRowMapper`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @kind interface;
  #Try_end0.  
  #L14991e.  v0:= temp @kind object;
  #L149920.  return v0 @kind object;
  #L149922.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149924.  v1:= "getSelectStarRowMapper threw exception" @kind object;
  #L149928.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14992e.  v1:= new `java.lang.RuntimeException`;
  #L149932.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149938.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149922;
}
procedure `java.lang.String` `getTableName`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14995c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149960.  call temp:= `getTableName`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getTableName:()Ljava/lang/String;` @kind interface;
  #L149966.  v0:= temp @kind object;
  #L149968.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14997c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149980.  call temp:= `getWrappedIterable`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind interface;
  #L149986.  v0:= temp @kind object;
  #L149988.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14999c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1499a0.  call temp:= `getWrappedIterable`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind interface;
  #L1499a6.  v0:= temp @kind object;
  #L1499a8.  return v0 @kind object;
}
procedure `boolean` `idExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.idExists:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1499bc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1499c0.  call temp:= `idExists`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.idExists:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L1499c6.  v0:= temp;
  #L1499c8.  return v0;
  #L1499ca.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1499cc.  v1:= new `java.lang.StringBuilder`;
  #L1499d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1499d6.  v2:= "idExists threw exception on " @kind object;
  #L1499da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1499e0.  v1:= temp @kind object;
  #L1499e2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1499e8.  v1:= temp @kind object;
  #L1499ea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1499f0.  v1:= temp @kind object;
  #L1499f2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1499f8.  v1:= new `java.lang.RuntimeException`;
  #L1499fc.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149a02.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1499ca;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149a24.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149a28.  call temp:= `isAutoCommit`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #L149a2e.  v0:= temp;
  #L149a30.  return v0;
  #L149a32.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149a34.  v1:= new `java.lang.StringBuilder`;
  #L149a38.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149a3e.  v2:= "isAutoCommit(" @kind object;
  #L149a42.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149a48.  v1:= temp @kind object;
  #L149a4a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149a50.  v1:= temp @kind object;
  #L149a52.  v2:= ") threw exception" @kind object;
  #L149a56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149a5c.  v1:= temp @kind object;
  #L149a5e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149a64.  v1:= temp @kind object;
  #L149a66.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149a6c.  v1:= new `java.lang.RuntimeException`;
  #L149a70.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149a76.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149a32;
}
procedure `boolean` `isTableExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isTableExists:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L149a98.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149a9c.  call temp:= `isTableExists`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.isTableExists:()Z` @kind interface;
  #Try_end0.  
  #L149aa2.  v0:= temp;
  #L149aa4.  return v0;
  #L149aa6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149aa8.  v1:= "isTableExists threw exception" @kind object;
  #L149aac.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149ab2.  v1:= new `java.lang.RuntimeException`;
  #L149ab6.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149abc.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149aa6;
}
procedure `boolean` `isUpdatable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isUpdatable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149ae0.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149ae4.  call temp:= `isUpdatable`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.isUpdatable:()Z` @kind interface;
  #L149aea.  v0:= temp;
  #L149aec.  return v0;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149b00.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149b04.  call temp:= `iterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L149b0a.  v0:= temp @kind object;
  #L149b0c.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149b20.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149b24.  call temp:= `iterator`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L149b2a.  v0:= temp @kind object;
  #L149b2c.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149b40.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149b44.  call temp:= `iterator`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #Try_end0.  
  #L149b4a.  v0:= temp @kind object;
  #L149b4c.  return v0 @kind object;
  #L149b4e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149b50.  v1:= new `java.lang.StringBuilder`;
  #L149b54.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149b5a.  v2:= "iterator threw exception on: " @kind object;
  #L149b5e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149b64.  v1:= temp @kind object;
  #L149b66.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149b6c.  v1:= temp @kind object;
  #L149b6e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149b74.  v1:= temp @kind object;
  #L149b76.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149b7c.  v1:= new `java.lang.RuntimeException`;
  #L149b80.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149b86.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149b4e;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149ba8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149bac.  call temp:= `iterator`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #Try_end0.  
  #L149bb2.  v0:= temp @kind object;
  #L149bb4.  return v0 @kind object;
  #L149bb6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149bb8.  v1:= new `java.lang.StringBuilder`;
  #L149bbc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149bc2.  v2:= "iterator threw exception on: " @kind object;
  #L149bc6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149bcc.  v1:= temp @kind object;
  #L149bce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149bd4.  v1:= temp @kind object;
  #L149bd6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149bdc.  v1:= temp @kind object;
  #L149bde.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149be4.  v1:= new `java.lang.RuntimeException`;
  #L149be8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149bee.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149bb6;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L149c10.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L149c16.  v0:= temp @kind object;
  #L149c18.  return v0 @kind object;
}
procedure `java.lang.Object` `mapSelectStarRow`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `com.j256.ormlite.support.DatabaseResults` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L149c2c.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149c30.  call temp:= `mapSelectStarRow`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L149c36.  v0:= temp @kind object;
  #L149c38.  return v0 @kind object;
  #L149c3a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149c3c.  v1:= "mapSelectStarRow threw exception on results" @kind object;
  #L149c40.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149c46.  v1:= new `java.lang.RuntimeException`;
  #L149c4a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149c50.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149c3a;
}
procedure `void` `notifyChanges`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.notifyChanges:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149c74.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149c78.  call `notifyChanges`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.notifyChanges:()V` @kind interface;
  #L149c7e.  return @kind void;
}
procedure `java.lang.String` `objectToString`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149c90.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149c94.  call temp:= `objectToString`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L149c9a.  v0:= temp @kind object;
  #L149c9c.  return v0 @kind object;
}
procedure `boolean` `objectsEqual`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149cb0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149cb4.  call temp:= `objectsEqual`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L149cba.  v0:= temp;
  #L149cbc.  return v0;
  #L149cbe.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149cc0.  v1:= new `java.lang.StringBuilder`;
  #L149cc4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149cca.  v2:= "objectsEqual threw exception on: " @kind object;
  #L149cce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149cd4.  v1:= temp @kind object;
  #L149cd6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149cdc.  v1:= temp @kind object;
  #L149cde.  v2:= " and " @kind object;
  #L149ce2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149ce8.  v1:= temp @kind object;
  #L149cea.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149cf0.  v1:= temp @kind object;
  #L149cf2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149cf8.  v1:= temp @kind object;
  #L149cfa.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149d00.  v1:= new `java.lang.RuntimeException`;
  #L149d04.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149d0a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149cbe;
}
procedure `java.util.List` `query`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149d2c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149d30.  call temp:= `query`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L149d36.  v0:= temp @kind object;
  #L149d38.  return v0 @kind object;
  #L149d3a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149d3c.  v1:= new `java.lang.StringBuilder`;
  #L149d40.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149d46.  v2:= "query threw exception on: " @kind object;
  #L149d4a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149d50.  v1:= temp @kind object;
  #L149d52.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149d58.  v1:= temp @kind object;
  #L149d5a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149d60.  v1:= temp @kind object;
  #L149d62.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149d68.  v1:= new `java.lang.RuntimeException`;
  #L149d6c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149d72.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149d3a;
}
procedure `com.j256.ormlite.stmt.QueryBuilder` `queryBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149d94.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149d98.  call temp:= `queryBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @kind interface;
  #L149d9e.  v0:= temp @kind object;
  #L149da0.  return v0 @kind object;
}
procedure `java.util.List` `queryForAll`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L149db4.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149db8.  call temp:= `queryForAll`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.queryForAll:()Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L149dbe.  v0:= temp @kind object;
  #L149dc0.  return v0 @kind object;
  #L149dc2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149dc4.  v1:= "queryForAll threw exception" @kind object;
  #L149dc8.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149dce.  v1:= new `java.lang.RuntimeException`;
  #L149dd2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149dd8.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149dc2;
}
procedure `java.util.List` `queryForEq`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149dfc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149e00.  call temp:= `queryForEq`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L149e06.  v0:= temp @kind object;
  #L149e08.  return v0 @kind object;
  #L149e0a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149e0c.  v1:= new `java.lang.StringBuilder`;
  #L149e10.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149e16.  v2:= "queryForEq threw exception on: " @kind object;
  #L149e1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149e20.  v1:= temp @kind object;
  #L149e22.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149e28.  v1:= temp @kind object;
  #L149e2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149e30.  v1:= temp @kind object;
  #L149e32.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149e38.  v1:= new `java.lang.RuntimeException`;
  #L149e3c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149e42.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149e0a;
}
procedure `java.util.List` `queryForFieldValues`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L149e64.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149e68.  call temp:= `queryForFieldValues`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L149e6e.  v0:= temp @kind object;
  #L149e70.  return v0 @kind object;
  #L149e72.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149e74.  v1:= "queryForFieldValues threw exception" @kind object;
  #L149e78.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149e7e.  v1:= new `java.lang.RuntimeException`;
  #L149e82.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149e88.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149e72;
}
procedure `java.util.List` `queryForFieldValuesArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L149eac.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149eb0.  call temp:= `queryForFieldValuesArgs`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L149eb6.  v0:= temp @kind object;
  #L149eb8.  return v0 @kind object;
  #L149eba.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149ebc.  v1:= "queryForFieldValuesArgs threw exception" @kind object;
  #L149ec0.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149ec6.  v1:= new `java.lang.RuntimeException`;
  #L149eca.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149ed0.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149eba;
}
procedure `java.lang.Object` `queryForFirst`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149ef4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149ef8.  call temp:= `queryForFirst`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L149efe.  v0:= temp @kind object;
  #L149f00.  return v0 @kind object;
  #L149f02.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149f04.  v1:= new `java.lang.StringBuilder`;
  #L149f08.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149f0e.  v2:= "queryForFirst threw exception on: " @kind object;
  #L149f12.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149f18.  v1:= temp @kind object;
  #L149f1a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149f20.  v1:= temp @kind object;
  #L149f22.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149f28.  v1:= temp @kind object;
  #L149f2a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149f30.  v1:= new `java.lang.RuntimeException`;
  #L149f34.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149f3a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149f02;
}
procedure `java.lang.Object` `queryForId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149f5c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149f60.  call temp:= `queryForId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L149f66.  v0:= temp @kind object;
  #L149f68.  return v0 @kind object;
  #L149f6a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149f6c.  v1:= new `java.lang.StringBuilder`;
  #L149f70.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149f76.  v2:= "queryForId threw exception on: " @kind object;
  #L149f7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149f80.  v1:= temp @kind object;
  #L149f82.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149f88.  v1:= temp @kind object;
  #L149f8a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149f90.  v1:= temp @kind object;
  #L149f92.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L149f98.  v1:= new `java.lang.RuntimeException`;
  #L149f9c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L149fa2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149f6a;
}
procedure `java.util.List` `queryForMatching`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L149fc4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L149fc8.  call temp:= `queryForMatching`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L149fce.  v0:= temp @kind object;
  #L149fd0.  return v0 @kind object;
  #L149fd2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L149fd4.  v1:= new `java.lang.StringBuilder`;
  #L149fd8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L149fde.  v2:= "queryForMatching threw exception on: " @kind object;
  #L149fe2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149fe8.  v1:= temp @kind object;
  #L149fea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149ff0.  v1:= temp @kind object;
  #L149ff2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149ff8.  v1:= temp @kind object;
  #L149ffa.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a000.  v1:= new `java.lang.RuntimeException`;
  #L14a004.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a00a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L149fd2;
}
procedure `java.util.List` `queryForMatchingArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a02c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a030.  call temp:= `queryForMatchingArgs`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L14a036.  v0:= temp @kind object;
  #L14a038.  return v0 @kind object;
  #L14a03a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a03c.  v1:= new `java.lang.StringBuilder`;
  #L14a040.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a046.  v2:= "queryForMatchingArgs threw exception on: " @kind object;
  #L14a04a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a050.  v1:= temp @kind object;
  #L14a052.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a058.  v1:= temp @kind object;
  #L14a05a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a060.  v1:= temp @kind object;
  #L14a062.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a068.  v1:= new `java.lang.RuntimeException`;
  #L14a06c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a072.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a03a;
}
procedure `java.lang.Object` `queryForSameId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a094.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a098.  call temp:= `queryForSameId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L14a09e.  v0:= temp @kind object;
  #L14a0a0.  return v0 @kind object;
  #L14a0a2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a0a4.  v1:= new `java.lang.StringBuilder`;
  #L14a0a8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a0ae.  v2:= "queryForSameId threw exception on: " @kind object;
  #L14a0b2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a0b8.  v1:= temp @kind object;
  #L14a0ba.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a0c0.  v1:= temp @kind object;
  #L14a0c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a0c8.  v1:= temp @kind object;
  #L14a0ca.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a0d0.  v1:= new `java.lang.RuntimeException`;
  #L14a0d4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a0da.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a0a2;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.dao.DatabaseResultsMapper` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a0fc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a100.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L14a106.  v0:= temp @kind object;
  #L14a108.  return v0 @kind object;
  #L14a10a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a10c.  v1:= new `java.lang.StringBuilder`;
  #L14a110.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a116.  v2:= "queryRaw threw exception on: " @kind object;
  #L14a11a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a120.  v1:= temp @kind object;
  #L14a122.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a128.  v1:= temp @kind object;
  #L14a12a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a130.  v1:= temp @kind object;
  #L14a132.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a138.  v1:= new `java.lang.RuntimeException`;
  #L14a13c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a142.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a10a;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.dao.RawRowMapper` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a164.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a168.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L14a16e.  v0:= temp @kind object;
  #L14a170.  return v0 @kind object;
  #L14a172.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a174.  v1:= new `java.lang.StringBuilder`;
  #L14a178.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a17e.  v2:= "queryRaw threw exception on: " @kind object;
  #L14a182.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a188.  v1:= temp @kind object;
  #L14a18a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a190.  v1:= temp @kind object;
  #L14a192.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a198.  v1:= temp @kind object;
  #L14a19a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a1a0.  v1:= new `java.lang.RuntimeException`;
  #L14a1a4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a1aa.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a172;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType`[] v5 @kind object, `com.j256.ormlite.dao.RawRowObjectMapper` v6 @kind object, `java.lang.String`[] v7 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a1cc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a1d0.  call temp:= `queryRaw`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L14a1d6.  v0:= temp @kind object;
  #L14a1d8.  return v0 @kind object;
  #L14a1da.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a1dc.  v1:= new `java.lang.StringBuilder`;
  #L14a1e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a1e6.  v2:= "queryRaw threw exception on: " @kind object;
  #L14a1ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a1f0.  v1:= temp @kind object;
  #L14a1f2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a1f8.  v1:= temp @kind object;
  #L14a1fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a200.  v1:= temp @kind object;
  #L14a202.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a208.  v1:= new `java.lang.RuntimeException`;
  #L14a20c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a212.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a1da;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType`[] v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a234.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a238.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L14a23e.  v0:= temp @kind object;
  #L14a240.  return v0 @kind object;
  #L14a242.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a244.  v1:= new `java.lang.StringBuilder`;
  #L14a248.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a24e.  v2:= "queryRaw threw exception on: " @kind object;
  #L14a252.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a258.  v1:= temp @kind object;
  #L14a25a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a260.  v1:= temp @kind object;
  #L14a262.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a268.  v1:= temp @kind object;
  #L14a26a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a270.  v1:= new `java.lang.RuntimeException`;
  #L14a274.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a27a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a242;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a29c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a2a0.  call temp:= `queryRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L14a2a6.  v0:= temp @kind object;
  #L14a2a8.  return v0 @kind object;
  #L14a2aa.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a2ac.  v1:= new `java.lang.StringBuilder`;
  #L14a2b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a2b6.  v2:= "queryRaw threw exception on: " @kind object;
  #L14a2ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a2c0.  v1:= temp @kind object;
  #L14a2c2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a2c8.  v1:= temp @kind object;
  #L14a2ca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a2d0.  v1:= temp @kind object;
  #L14a2d2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a2d8.  v1:= new `java.lang.RuntimeException`;
  #L14a2dc.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a2e2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a2aa;
}
procedure `long` `queryRawValue`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a304.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a308.  call temp:= `queryRawValue`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @kind interface;
  #Try_end0.  
  #L14a30e.  v0:= temp @kind wide;
  #L14a310.  return v0 @kind wide;
  #L14a312.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a314.  v1:= new `java.lang.StringBuilder`;
  #L14a318.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a31e.  v2:= "queryRawValue threw exception on: " @kind object;
  #L14a322.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a328.  v1:= temp @kind object;
  #L14a32a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a330.  v1:= temp @kind object;
  #L14a332.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a338.  v1:= temp @kind object;
  #L14a33a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a340.  v1:= new `java.lang.RuntimeException`;
  #L14a344.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a34a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a312;
}
procedure `int` `refresh`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a36c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a370.  call temp:= `refresh`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L14a376.  v0:= temp;
  #L14a378.  return v0;
  #L14a37a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a37c.  v1:= new `java.lang.StringBuilder`;
  #L14a380.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a386.  v2:= "refresh threw exception on: " @kind object;
  #L14a38a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a390.  v1:= temp @kind object;
  #L14a392.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a398.  v1:= temp @kind object;
  #L14a39a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a3a0.  v1:= temp @kind object;
  #L14a3a2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a3a8.  v1:= new `java.lang.RuntimeException`;
  #L14a3ac.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a3b2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a37a;
}
procedure `void` `registerObserver`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.dao.Dao$DaoObserver` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14a3d4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a3d8.  call `registerObserver`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @kind interface;
  #L14a3de.  return @kind void;
}
procedure `void` `rollBack`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a3f0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a3f4.  call `rollBack`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L14a3fa.  return @kind void;
  #L14a3fc.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a3fe.  v1:= new `java.lang.StringBuilder`;
  #L14a402.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a408.  v2:= "rollBack(" @kind object;
  #L14a40c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a412.  v1:= temp @kind object;
  #L14a414.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a41a.  v1:= temp @kind object;
  #L14a41c.  v2:= ") threw exception" @kind object;
  #L14a420.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a426.  v1:= temp @kind object;
  #L14a428.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a42e.  v1:= temp @kind object;
  #L14a430.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a436.  v1:= new `java.lang.RuntimeException`;
  #L14a43a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a440.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a3fc;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object, `boolean` v5 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a464.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a468.  call `setAutoCommit`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @kind interface;
  #Try_end0.  
  #L14a46e.  return @kind void;
  #L14a470.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a472.  v1:= new `java.lang.StringBuilder`;
  #L14a476.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a47c.  v2:= "setAutoCommit(" @kind object;
  #L14a480.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a486.  v1:= temp @kind object;
  #L14a488.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a48e.  v1:= temp @kind object;
  #L14a490.  v2:= "," @kind object;
  #L14a494.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a49a.  v1:= temp @kind object;
  #L14a49c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a4a2.  v1:= temp @kind object;
  #L14a4a4.  v2:= ") threw exception" @kind object;
  #L14a4a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a4ae.  v1:= temp @kind object;
  #L14a4b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a4b6.  v1:= temp @kind object;
  #L14a4b8.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a4be.  v1:= new `java.lang.RuntimeException`;
  #L14a4c2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a4c8.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a470;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a4ec.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a4f0.  call `setObjectCache`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @kind interface;
  #Try_end0.  
  #L14a4f6.  return @kind void;
  #L14a4f8.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a4fa.  v1:= new `java.lang.StringBuilder`;
  #L14a4fe.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a504.  v2:= "setObjectCache threw exception on " @kind object;
  #L14a508.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a50e.  v1:= temp @kind object;
  #L14a510.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a516.  v1:= temp @kind object;
  #L14a518.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a51e.  v1:= temp @kind object;
  #L14a520.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a526.  v1:= new `java.lang.RuntimeException`;
  #L14a52a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a530.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a4f8;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `boolean` v4 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectCache:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a554.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a558.  call `setObjectCache`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Z)V` @kind interface;
  #Try_end0.  
  #L14a55e.  return @kind void;
  #L14a560.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a562.  v1:= new `java.lang.StringBuilder`;
  #L14a566.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a56c.  v2:= "setObjectCache(" @kind object;
  #L14a570.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a576.  v1:= temp @kind object;
  #L14a578.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a57e.  v1:= temp @kind object;
  #L14a580.  v2:= ") threw exception" @kind object;
  #L14a584.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a58a.  v1:= temp @kind object;
  #L14a58c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a592.  v1:= temp @kind object;
  #L14a594.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a59a.  v1:= new `java.lang.RuntimeException`;
  #L14a59e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a5a4.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a560;
}
procedure `void` `setObjectFactory`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.table.ObjectFactory` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14a5c8.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a5cc.  call `setObjectFactory`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @kind interface;
  #L14a5d2.  return @kind void;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `startThreadConnection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L14a5e4.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a5e8.  call temp:= `startThreadConnection`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #Try_end0.  
  #L14a5ee.  v0:= temp @kind object;
  #L14a5f0.  return v0 @kind object;
  #L14a5f2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a5f4.  v1:= "startThreadConnection() threw exception" @kind object;
  #L14a5f8.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a5fe.  v1:= new `java.lang.RuntimeException`;
  #L14a602.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a608.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a5f2;
}
procedure `void` `unregisterObserver`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.dao.Dao$DaoObserver` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14a62c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a630.  call `unregisterObserver`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @kind interface;
  #L14a636.  return @kind void;
}
procedure `int` `update`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedUpdate` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a648.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a64c.  call temp:= `update`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @kind interface;
  #Try_end0.  
  #L14a652.  v0:= temp;
  #L14a654.  return v0;
  #L14a656.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a658.  v1:= new `java.lang.StringBuilder`;
  #L14a65c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a662.  v2:= "update threw exception on: " @kind object;
  #L14a666.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a66c.  v1:= temp @kind object;
  #L14a66e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a674.  v1:= temp @kind object;
  #L14a676.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a67c.  v1:= temp @kind object;
  #L14a67e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a684.  v1:= new `java.lang.RuntimeException`;
  #L14a688.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a68e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a656;
}
procedure `int` `update`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a6b0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a6b4.  call temp:= `update`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L14a6ba.  v0:= temp;
  #L14a6bc.  return v0;
  #L14a6be.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a6c0.  v1:= new `java.lang.StringBuilder`;
  #L14a6c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a6ca.  v2:= "update threw exception on: " @kind object;
  #L14a6ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a6d4.  v1:= temp @kind object;
  #L14a6d6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a6dc.  v1:= temp @kind object;
  #L14a6de.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a6e4.  v1:= temp @kind object;
  #L14a6e6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a6ec.  v1:= new `java.lang.RuntimeException`;
  #L14a6f0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a6f6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a6be;
}
procedure `com.j256.ormlite.stmt.UpdateBuilder` `updateBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14a718.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a71c.  call temp:= `updateBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @kind interface;
  #L14a722.  v0:= temp @kind object;
  #L14a724.  return v0 @kind object;
}
procedure `int` `updateId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a738.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a73c.  call temp:= `updateId`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L14a742.  v0:= temp;
  #L14a744.  return v0;
  #L14a746.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a748.  v1:= new `java.lang.StringBuilder`;
  #L14a74c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a752.  v2:= "updateId threw exception on: " @kind object;
  #L14a756.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a75c.  v1:= temp @kind object;
  #L14a75e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a764.  v1:= temp @kind object;
  #L14a766.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a76c.  v1:= temp @kind object;
  #L14a76e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a774.  v1:= new `java.lang.RuntimeException`;
  #L14a778.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a77e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a746;
}
procedure `int` `updateRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L14a7a0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14a7a4.  call temp:= `updateRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L14a7aa.  v0:= temp;
  #L14a7ac.  return v0;
  #L14a7ae.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14a7b0.  v1:= new `java.lang.StringBuilder`;
  #L14a7b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a7ba.  v2:= "updateRaw threw exception on: " @kind object;
  #L14a7be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a7c4.  v1:= temp @kind object;
  #L14a7c6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a7cc.  v1:= temp @kind object;
  #L14a7ce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a7d4.  v1:= temp @kind object;
  #L14a7d6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L14a7dc.  v1:= new `java.lang.RuntimeException`;
  #L14a7e0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L14a7e6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14a7ae;
}

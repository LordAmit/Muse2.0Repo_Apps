record `org.b.a.a.a.c` @kind class @AccessFlag PUBLIC extends `org.b.a.a.a.b` @kind class {
}
procedure `void` `<init>`(`org.b.a.a.a.c` v0 @kind this) @signature `Lorg/b/a/a/a/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L165a70.  call `<init>`(v0) @signature `Lorg/b/a/a/a/b;.<init>:()V` @kind direct;
  #L165a76.  return @kind void;
}
procedure `int` `a`(`org.b.a.a.a.c` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/b/a/a/a/c;.a:([BI)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L165a88.  v0:= v3[v4] @kind byte;
  #L165a8c.  v0:= v0 ^& 255;
  #L165a90.  v1:= 130I;
  #L165a94.  if v0 != v1 then goto L165aba;
  #L165a98.  v0:= v4 + 1;
  #L165a9c.  v0:= v3[v0] @kind byte;
  #L165aa0.  v0:= v0 ^& 255;
  #L165aa4.  v1:= 159I;
  #L165aa8.  if v0 < v1 then goto L165aba;
  #L165aac.  v1:= 241I;
  #L165ab0.  if v0 > v1 then goto L165aba;
  #L165ab4.  v0:= v0 + -159;
  #L165ab8.  return v0;
  #L165aba.  v0:= -1I;
  #L165abc.  goto L165ab8;
}

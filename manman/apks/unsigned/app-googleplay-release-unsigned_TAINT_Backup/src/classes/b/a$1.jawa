record `b.a$1` @kind class @AccessFlag  extends `b.q` @kind interface {
  `b.q` `b.a$1.a` @AccessFlag FINAL_SYNTHETIC;
  `b.a` `b.a$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`b.a$1` v0 @kind this, `b.a` v1 @kind object, `b.q` v2 @kind object) @signature `Lb/a$1;.<init>:(Lb/a;Lb/q;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1186fc.  v0.`b.a$1.b` @type ^`b.a` := v1 @kind object;
  #L118700.  v0.`b.a$1.a` @type ^`b.q` := v2 @kind object;
  #L118704.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11870a.  return @kind void;
}
procedure `b.s` `a`(`b.a$1` v1 @kind this) @signature `Lb/a$1;.a:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11871c.  v0:= v1.`b.a$1.b` @type ^`b.a` @kind object;
  #L118720.  return v0 @kind object;
}
procedure `void` `a_`(`b.a$1` v10 @kind this, `b.c` v11 @kind object, `long` v12 ) @signature `Lb/a$1;.a_:(Lb/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L118734.  v2:= 0L;
  #L118738.  v0:= v11.`b.c.b` @type ^`long` @kind wide;
  #L11873c.  v4:= v12 @kind wide;
  #L11873e.  call `a`(v0, v2, v4) @signature `Lb/t;.a:(JJJ)V` @kind static;
  #L118744.  v4:= v12 @kind wide;
  #L118746.  v0:= lcmp(v4, v2);
  #L11874a.  if v0 <= 0 then goto L1187d2;
  #L11874e.  v0:= v11.`b.c.a` @type ^`b.n` @kind object;
  #L118752.  v6:= v0 @kind object;
  #L118754.  v0:= v2 @kind wide;
  #L118756.  v8:= 65536L;
  #L11875c.  v7:= lcmp(v0, v8);
  #L118760.  if v7 >= 0 then goto L118784;
  #L118764.  v7:= v11.`b.c.a` @type ^`b.n` @kind object;
  #L118768.  v7:= v7.`b.n.c` @type ^`int`;
  #L11876c.  v8:= v11.`b.c.a` @type ^`b.n` @kind object;
  #L118770.  v8:= v8.`b.n.b` @type ^`int`;
  #L118774.  v7:= v7 - v8 @kind int;
  #L118776.  v8:= (`long`) v7 @kind i2l;
  #L118778.  v8:= v8 + v0 @kind long;
  #L11877a.  v0:= lcmp(v8, v4);
  #L11877e.  if v0 < 0 then goto L1187aa;
  #L118782.  v0:= v4 @kind wide;
  #L118784.  v6:= 0I;
  #L118786.  v7:= v10.`b.a$1.b` @type ^`b.a` @kind object;
  #L11878a.  call `c`(v7) @signature `Lb/a;.c:()V` @kind virtual;
  #Try_start0.  
  #L118790.  v7:= v10.`b.a$1.a` @type ^`b.q` @kind object;
  #L118794.  call `a_`(v7, v11, v0) @signature `Lb/q;.a_:(Lb/c;J)V` @kind interface;
  #Try_end0.  
  #L11879a.  v4:= v4 - v0 @kind long;
  #L11879c.  v0:= 1I;
  #L11879e.  v1:= v10.`b.a$1.b` @type ^`b.a` @kind object;
  #L1187a2.  call `a`(v1, v0) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L1187a8.  goto L118746;
  #L1187aa.  v0:= v6.`b.n.f` @type ^`b.n` @kind object;
  #L1187ae.  v6:= v0 @kind object;
  #L1187b0.  v0:= v8 @kind wide;
  #L1187b2.  goto L118756;
  #L1187b4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L1187b6.  v1:= v10.`b.a$1.b` @type ^`b.a` @kind object;
  #L1187ba.  call temp:= `b`(v1, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1187c0.  v0:= temp @kind object;
  #L1187c2.  throw v0;
  #Try_end1.  
  #L1187c4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1187c6.  v1:= v10.`b.a$1.b` @type ^`b.a` @kind object;
  #L1187ca.  call `a`(v1, v6) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L1187d0.  throw v0;
  #L1187d2.  return @kind void;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1187b4;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1187c4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1187c4;
}
procedure `void` `close`(`b.a$1` v3 @kind this) @signature `Lb/a$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1187fc.  v1:= 0I;
  #L1187fe.  v0:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118802.  call `c`(v0) @signature `Lb/a;.c:()V` @kind virtual;
  #Try_start0.  
  #L118808.  v0:= v3.`b.a$1.a` @type ^`b.q` @kind object;
  #L11880c.  call `close`(v0) @signature `Lb/q;.close:()V` @kind interface;
  #Try_end0.  
  #L118812.  v0:= 1I;
  #L118814.  v1:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118818.  call `a`(v1, v0) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L11881e.  return @kind void;
  #L118820.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L118822.  v2:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118826.  call temp:= `b`(v2, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L11882c.  v0:= temp @kind object;
  #L11882e.  throw v0;
  #Try_end1.  
  #L118830.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L118832.  v2:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118836.  call `a`(v2, v1) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L11883c.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L118820;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L118830;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L118830;
}
procedure `void` `flush`(`b.a$1` v3 @kind this) @signature `Lb/a$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L118868.  v1:= 0I;
  #L11886a.  v0:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L11886e.  call `c`(v0) @signature `Lb/a;.c:()V` @kind virtual;
  #Try_start0.  
  #L118874.  v0:= v3.`b.a$1.a` @type ^`b.q` @kind object;
  #L118878.  call `flush`(v0) @signature `Lb/q;.flush:()V` @kind interface;
  #Try_end0.  
  #L11887e.  v0:= 1I;
  #L118880.  v1:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118884.  call `a`(v1, v0) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L11888a.  return @kind void;
  #L11888c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L11888e.  v2:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118892.  call temp:= `b`(v2, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L118898.  v0:= temp @kind object;
  #L11889a.  throw v0;
  #Try_end1.  
  #L11889c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11889e.  v2:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L1188a2.  call `a`(v2, v1) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L1188a8.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L11888c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L11889c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L11889c;
}
procedure `java.lang.String` `toString`(`b.a$1` v2 @kind this) @signature `Lb/a$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1188d4.  v0:= new `java.lang.StringBuilder`;
  #L1188d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1188de.  v1:= "AsyncTimeout.sink(" @kind object;
  #L1188e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1188e8.  v0:= temp @kind object;
  #L1188ea.  v1:= v2.`b.a$1.a` @type ^`b.q` @kind object;
  #L1188ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1188f4.  v0:= temp @kind object;
  #L1188f6.  v1:= ")" @kind object;
  #L1188fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L118900.  v0:= temp @kind object;
  #L118902.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L118908.  v0:= temp @kind object;
  #L11890a.  return v0 @kind object;
}

record `com.j256.ormlite.android.AndroidCompiledStatement` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.CompiledStatement` @kind interface {
  `java.util.List` `com.j256.ormlite.android.AndroidCompiledStatement.args` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` `com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @AccessFlag PRIVATE;
  `android.database.Cursor` `com.j256.ormlite.android.AndroidCompiledStatement.cursor` @AccessFlag PRIVATE;
  `android.database.sqlite.SQLiteDatabase` `com.j256.ormlite.android.AndroidCompiledStatement.db` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `com.j256.ormlite.android.AndroidCompiledStatement.max` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.android.AndroidCompiledStatement.sql` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.StatementBuilder$StatementType` `com.j256.ormlite.android.AndroidCompiledStatement.type` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.android.compat.ApiCompatibility` `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L13fa04.  v0:= constclass @type ^`com.j256.ormlite.android.AndroidCompiledStatement` @kind object;
  #L13fa08.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L13fa0e.  v0:= temp @kind object;
  #L13fa10.  `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L13fa14.  v0:= 0I;
  #L13fa16.  v0:= new `java.lang.String`[v0];
  #L13fa1a.  `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] := v0 @kind object;
  #L13fa1e.  call temp:= `getCompatibility`() @signature `Lcom/j256/ormlite/android/compat/ApiCompatibilityUtils;.getCompatibility:()Lcom/j256/ormlite/android/compat/ApiCompatibility;` @kind static;
  #L13fa24.  v0:= temp @kind object;
  #L13fa26.  `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` := v0 @kind object;
  #L13fa2a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidCompiledStatement` v0 @kind this, `java.lang.String` v1 @kind object, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.<init>:(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L13fa3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13fa42.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` := v1 @kind object;
  #L13fa46.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` := v2 @kind object;
  #L13fa4a.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` := v3 @kind object;
  #L13fa4e.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @type ^`boolean` := v4 @kind boolean;
  #L13fa52.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @type ^`boolean` := v5 @kind boolean;
  #L13fa56.  return @kind void;
}
procedure `int` `execSql`(`android.database.sqlite.SQLiteDatabase` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L13fa68.  call `execSQL`(v5, v7, v8) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L13fa6e.  v0:= 0I;
  #Try_start1.  
  #L13fa70.  v1:= "SELECT CHANGES()" @kind object;
  #L13fa74.  call temp:= `compileStatement`(v5, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #Try_end1.  
  #L13fa7a.  v1:= temp @kind object;
  #Try_start2.  
  #L13fa7c.  call temp:= `simpleQueryForLong`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.simpleQueryForLong:()J` @kind virtual;
  #Try_end2.  
  #L13fa82.  v2:= temp @kind wide;
  #L13fa84.  v0:= (`int`) v2 @kind l2i;
  #L13fa86.  if v1 == 0 then goto L13fa90;
  #L13fa8a.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L13fa90.  v1:= `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L13fa94.  v2:= "executing statement {} changed {} rows: {}" @kind object;
  #L13fa98.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L13fa9e.  v3:= temp @kind object;
  #L13faa0.  call `trace`(v1, v2, v6, v3, v7) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L13faa6.  return v0;
  #L13faa8.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L13faaa.  v1:= new `java.lang.StringBuilder`;
  #L13faae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13fab4.  v2:= "Problems executing " @kind object;
  #L13fab8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fabe.  v1:= temp @kind object;
  #L13fac0.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fac6.  v1:= temp @kind object;
  #L13fac8.  v2:= " Android statement: " @kind object;
  #L13facc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fad2.  v1:= temp @kind object;
  #L13fad4.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fada.  v1:= temp @kind object;
  #L13fadc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13fae2.  v1:= temp @kind object;
  #L13fae4.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L13faea.  v0:= temp @kind object;
  #L13faec.  throw v0;
  #L13faee.  v1:= Exception @type ^`android.database.SQLException` @kind object;
  #L13faf0.  v1:= v0 @kind object;
  #L13faf2.  v0:= 1I;
  #L13faf4.  if v1 == 0 then goto L13fa90;
  #L13faf8.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L13fafe.  goto L13fa90;
  #L13fb00.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13fb02.  v4:= v1 @kind object;
  #L13fb04.  v1:= v0 @kind object;
  #L13fb06.  v0:= v4 @kind object;
  #L13fb08.  if v1 == 0 then goto L13fb12;
  #L13fb0c.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L13fb12.  throw v0;
  #L13fb14.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13fb16.  goto L13fb08;
  #L13fb18.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L13fb1a.  goto L13faf2;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L13faa8;
  catch `android.database.SQLException` @[Try_start1..Try_end1] goto L13faee;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L13fb00;
  catch `android.database.SQLException` @[Try_start2..Try_end2] goto L13fb18;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L13fb14;
}
procedure `java.lang.Object`[] `getArgArray`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L13fb54.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L13fb58.  if v0 != 0 then goto L13fb62;
  #L13fb5c.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] @kind object;
  #L13fb60.  return v0 @kind object;
  #L13fb62.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L13fb66.  v1:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L13fb6a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L13fb70.  v1:= temp;
  #L13fb72.  v1:= new `java.lang.Object`[v1];
  #L13fb76.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L13fb7c.  v0:= temp @kind object;
  #L13fb7e.  goto L13fb60;
}
procedure `java.lang.String`[] `getStringArray`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getStringArray:()[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L13fb90.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L13fb94.  if v0 != 0 then goto L13fb9e;
  #L13fb98.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] @kind object;
  #L13fb9c.  return v0 @kind object;
  #L13fb9e.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L13fba2.  v1:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L13fba6.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L13fbac.  v1:= temp;
  #L13fbae.  v1:= new `java.lang.String`[v1];
  #L13fbb2.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L13fbb8.  v0:= temp @kind object;
  #L13fbba.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L13fbbe.  goto L13fb9c;
}
procedure `void` `isInPrep`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L13fbd0.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fbd4.  if v0 == 0 then goto L13fbe8;
  #L13fbd8.  v0:= new `java.sql.SQLException`;
  #L13fbdc.  v1:= "Query already run. Cannot add argument values." @kind object;
  #L13fbe0.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13fbe6.  throw v0;
  #L13fbe8.  return @kind void;
}
procedure `void` `cancel`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13fbfc.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L13fc00.  if v0 == 0 then goto L13fc0e;
  #L13fc04.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L13fc08.  call `cancel`(v0) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;.cancel:()V` @kind interface;
  #L13fc0e.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13fc20.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fc24.  if v0 == 0 then goto L13fc42;
  #L13fc28.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fc2c.  call temp:= `isClosed`(v0) @signature `Landroid/database/Cursor;.isClosed:()Z` @kind interface;
  #L13fc32.  v0:= temp;
  #L13fc34.  if v0 != 0 then goto L13fc42;
  #Try_start0.  
  #L13fc38.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fc3c.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #Try_end0.  
  #L13fc42.  v0:= 0I;
  #L13fc44.  v3.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` := v0 @kind object;
  #L13fc48.  return @kind void;
  #L13fc4a.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L13fc4c.  v1:= new `java.io.IOException`;
  #L13fc50.  v2:= "Problems closing Android cursor" @kind object;
  #L13fc54.  call `<init>`(v1, v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L13fc5a.  throw v1;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L13fc4a;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13fc7c.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fc80.  if v0 == 0 then goto L13fc8e;
  #L13fc84.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fc88.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L13fc8e.  return @kind void;
}
procedure `int` `getColumnCount`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getColumnCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13fca0.  call temp:= `getCursor`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L13fca6.  v0:= temp @kind object;
  #L13fca8.  call temp:= `getColumnCount`(v0) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L13fcae.  v0:= temp;
  #L13fcb0.  return v0;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getColumnName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13fcc4.  call temp:= `getCursor`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L13fcca.  v0:= temp @kind object;
  #L13fccc.  call temp:= `getColumnName`(v0, v2) @signature `Landroid/database/Cursor;.getColumnName:(I)Ljava/lang/String;` @kind interface;
  #L13fcd2.  v0:= temp @kind object;
  #L13fcd4.  return v0 @kind object;
}
procedure `android.database.Cursor` `getCursor`(`com.j256.ormlite.android.AndroidCompiledStatement` v5 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13fce8.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fcec.  if v0 != 0 then goto L13fd4e;
  #L13fcf0.  v1:= 0I;
  #Try_start0.  
  #L13fcf2.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L13fcf6.  if v0 != 0 then goto L13fd54;
  #L13fcfa.  v1:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L13fcfe.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L13fd02.  if v0 == 0 then goto L13fd16;
  #L13fd06.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` @kind object;
  #L13fd0a.  call temp:= `createCancellationHook`(v0) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility;.createCancellationHook:()Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;` @kind interface;
  #L13fd10.  v0:= temp @kind object;
  #L13fd12.  v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` := v0 @kind object;
  #L13fd16.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` @kind object;
  #L13fd1a.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L13fd1e.  call temp:= `getStringArray`(v5) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getStringArray:()[Ljava/lang/String;` @kind direct;
  #L13fd24.  v3:= temp @kind object;
  #L13fd26.  v4:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L13fd2a.  call temp:= `rawQuery`(v0, v2, v1, v3, v4) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility;.rawQuery:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;)Landroid/database/Cursor;` @kind interface;
  #L13fd30.  v0:= temp @kind object;
  #L13fd32.  v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` := v0 @kind object;
  #L13fd36.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fd3a.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L13fd40.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L13fd44.  v2:= "{}: started rawQuery cursor for: {}" @kind object;
  #L13fd48.  call `trace`(v0, v2, v5, v1) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L13fd4e.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L13fd52.  return v0 @kind object;
  #Try_start1.  
  #L13fd54.  v0:= new `java.lang.StringBuilder`;
  #L13fd58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13fd5e.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L13fd62.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fd68.  v0:= temp @kind object;
  #L13fd6a.  v2:= " LIMIT " @kind object;
  #L13fd6e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fd74.  v0:= temp @kind object;
  #L13fd76.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L13fd7a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fd80.  v0:= temp @kind object;
  #L13fd82.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #Try_end1.  
  #L13fd88.  v1:= temp @kind object;
  #L13fd8a.  goto L13fcfe;
  #L13fd8c.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L13fd8e.  v2:= new `java.lang.StringBuilder`;
  #L13fd92.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13fd98.  v3:= "Problems executing Android query: " @kind object;
  #L13fd9c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fda2.  v2:= temp @kind object;
  #L13fda4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fdaa.  v1:= temp @kind object;
  #L13fdac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13fdb2.  v1:= temp @kind object;
  #L13fdb4.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L13fdba.  v0:= temp @kind object;
  #L13fdbc.  throw v0;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L13fd8c;
  catch `android.database.SQLException` @[Try_start1..Try_end1] goto L13fd8c;
}
procedure `int` `runExecute`(`com.j256.ormlite.android.AndroidCompiledStatement` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runExecute:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13fde8.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L13fdec.  call temp:= `isOkForExecute`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForExecute:()Z` @kind virtual;
  #L13fdf2.  v0:= temp;
  #L13fdf4.  if v0 != 0 then goto L13fe3a;
  #L13fdf8.  v0:= new `java.lang.IllegalArgumentException`;
  #L13fdfc.  v1:= new `java.lang.StringBuilder`;
  #L13fe00.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13fe06.  v2:= "Cannot call execute on a " @kind object;
  #L13fe0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fe10.  v1:= temp @kind object;
  #L13fe12.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L13fe16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fe1c.  v1:= temp @kind object;
  #L13fe1e.  v2:= " statement" @kind object;
  #L13fe22.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fe28.  v1:= temp @kind object;
  #L13fe2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13fe30.  v1:= temp @kind object;
  #L13fe32.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13fe38.  throw v0;
  #L13fe3a.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L13fe3e.  v1:= "runExecute" @kind object;
  #L13fe42.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L13fe46.  call temp:= `getArgArray`(v4) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @kind direct;
  #L13fe4c.  v3:= temp @kind object;
  #L13fe4e.  call temp:= `execSql`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @kind static;
  #L13fe54.  v0:= temp;
  #L13fe56.  return v0;
}
procedure `com.j256.ormlite.support.DatabaseResults` `runQuery`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runQuery:(Lcom/j256/ormlite/dao/ObjectCache;)Lcom/j256/ormlite/support/DatabaseResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13fe68.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L13fe6c.  call temp:= `isOkForQuery`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForQuery:()Z` @kind virtual;
  #L13fe72.  v0:= temp;
  #L13fe74.  if v0 != 0 then goto L13feba;
  #L13fe78.  v0:= new `java.lang.IllegalArgumentException`;
  #L13fe7c.  v1:= new `java.lang.StringBuilder`;
  #L13fe80.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13fe86.  v2:= "Cannot call query on a " @kind object;
  #L13fe8a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fe90.  v1:= temp @kind object;
  #L13fe92.  v2:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L13fe96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fe9c.  v1:= temp @kind object;
  #L13fe9e.  v2:= " statement" @kind object;
  #L13fea2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13fea8.  v1:= temp @kind object;
  #L13feaa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13feb0.  v1:= temp @kind object;
  #L13feb2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13feb8.  throw v0;
  #L13feba.  v0:= new `com.j256.ormlite.android.AndroidDatabaseResults`;
  #L13febe.  call temp:= `getCursor`(v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L13fec4.  v1:= temp @kind object;
  #L13fec6.  v2:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @type ^`boolean` @kind boolean;
  #L13feca.  call `<init>`(v0, v1, v4, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.<init>:(Landroid/database/Cursor;Lcom/j256/ormlite/dao/ObjectCache;Z)V` @kind direct;
  #L13fed0.  return v0 @kind object;
}
procedure `int` `runUpdate`(`com.j256.ormlite.android.AndroidCompiledStatement` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runUpdate:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13fee4.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L13fee8.  call temp:= `isOkForUpdate`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForUpdate:()Z` @kind virtual;
  #L13feee.  v0:= temp;
  #L13fef0.  if v0 != 0 then goto L13ff36;
  #L13fef4.  v0:= new `java.lang.IllegalArgumentException`;
  #L13fef8.  v1:= new `java.lang.StringBuilder`;
  #L13fefc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13ff02.  v2:= "Cannot call update on a " @kind object;
  #L13ff06.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ff0c.  v1:= temp @kind object;
  #L13ff0e.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L13ff12.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ff18.  v1:= temp @kind object;
  #L13ff1a.  v2:= " statement" @kind object;
  #L13ff1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ff24.  v1:= temp @kind object;
  #L13ff26.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13ff2c.  v1:= temp @kind object;
  #L13ff2e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13ff34.  throw v0;
  #L13ff36.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L13ff3a.  if v0 != 0 then goto L13ff5c;
  #L13ff3e.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L13ff42.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L13ff46.  v2:= "runUpdate" @kind object;
  #L13ff4a.  call temp:= `getArgArray`(v4) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @kind direct;
  #L13ff50.  v3:= temp @kind object;
  #L13ff52.  call temp:= `execSql`(v1, v2, v0, v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @kind static;
  #L13ff58.  v0:= temp;
  #L13ff5a.  return v0;
  #L13ff5c.  v0:= new `java.lang.StringBuilder`;
  #L13ff60.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13ff66.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L13ff6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ff70.  v0:= temp @kind object;
  #L13ff72.  v1:= " " @kind object;
  #L13ff76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ff7c.  v0:= temp @kind object;
  #L13ff7e.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L13ff82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ff88.  v0:= temp @kind object;
  #L13ff8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13ff90.  v0:= temp @kind object;
  #L13ff92.  goto L13ff42;
}
procedure `void` `setMaxRows`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setMaxRows:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13ffa4.  call `isInPrep`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @kind direct;
  #L13ffaa.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L13ffb0.  v0:= temp @kind object;
  #L13ffb2.  v1.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` := v0 @kind object;
  #L13ffb6.  return @kind void;
}
procedure `void` `setObject`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object, `com.j256.ormlite.field.SqlType` v6 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setObject:(ILjava/lang/Object;Lcom/j256/ormlite/field/SqlType;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13ffc8.  call `isInPrep`(v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @kind direct;
  #L13ffce.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L13ffd2.  if v0 != 0 then goto L13ffe4;
  #L13ffd6.  v0:= new `java.util.ArrayList`;
  #L13ffda.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L13ffe0.  v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` := v0 @kind object;
  #L13ffe4.  if v5 != 0 then goto L13fff6;
  #L13ffe8.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L13ffec.  v1:= 0I;
  #L13ffee.  call `add`(v0, v4, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L13fff4.  return @kind void;
  #L13fff6.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement$1.$SwitchMap$com$j256$ormlite$field$SqlType` @type ^`int`[] @kind object;
  #L13fffa.  call temp:= `ordinal`(v6) @signature `Lcom/j256/ormlite/field/SqlType;.ordinal:()I` @kind virtual;
  #L140000.  v1:= temp;
  #L140002.  v0:= v0[v1];
  #L140006.  goto L140090;
  #L14000c.  v0:= new `java.sql.SQLException`;
  #L140010.  v1:= new `java.lang.StringBuilder`;
  #L140014.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14001a.  v2:= "Unknown sql argument type: " @kind object;
  #L14001e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140024.  v1:= temp @kind object;
  #L140026.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14002c.  v1:= temp @kind object;
  #L14002e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L140034.  v1:= temp @kind object;
  #L140036.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14003c.  throw v0;
  #L14003e.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L140042.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L140048.  v1:= temp @kind object;
  #L14004a.  call `add`(v0, v4, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L140050.  goto L13fff4;
  #L140052.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L140056.  call `add`(v0, v4, v5) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L14005c.  goto L13fff4;
  #L14005e.  v0:= new `java.sql.SQLException`;
  #L140062.  v1:= new `java.lang.StringBuilder`;
  #L140066.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14006c.  v2:= "Invalid Android type: " @kind object;
  #L140070.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140076.  v1:= temp @kind object;
  #L140078.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14007e.  v1:= temp @kind object;
  #L140080.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L140086.  v1:= temp @kind object;
  #L140088.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14008e.  throw v0;
  #L140090.  switch v0
                  | 1 => goto L14003e
                  | 2 => goto L14003e
                  | 3 => goto L14003e
                  | 4 => goto L14003e
                  | 5 => goto L14003e
                  | 6 => goto L14003e
                  | 7 => goto L14003e
                  | 8 => goto L14003e
                  | 9 => goto L14003e
                  | 10 => goto L14003e
                  | 11 => goto L14003e
                  | 12 => goto L140052
                  | 13 => goto L140052
                  | 14 => goto L14005e
                  | 15 => goto L14005e
                  | else => goto L14000c;
}
procedure `void` `setQueryTimeout`(`com.j256.ormlite.android.AndroidCompiledStatement` v0 @kind this, `long` v1 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setQueryTimeout:(J)V` @AccessFlag PUBLIC {
    temp;

  #L1400e4.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1400f8.  v0:= new `java.lang.StringBuilder`;
  #L1400fc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L140102.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L140108.  v1:= temp @kind object;
  #L14010a.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L140110.  v1:= temp @kind object;
  #L140112.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140118.  v0:= temp @kind object;
  #L14011a.  v1:= "@" @kind object;
  #L14011e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140124.  v0:= temp @kind object;
  #L140126.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L14012c.  v1:= temp;
  #L14012e.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L140134.  v1:= temp @kind object;
  #L140136.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14013c.  v0:= temp @kind object;
  #L14013e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L140144.  v0:= temp @kind object;
  #L140146.  return v0 @kind object;
}

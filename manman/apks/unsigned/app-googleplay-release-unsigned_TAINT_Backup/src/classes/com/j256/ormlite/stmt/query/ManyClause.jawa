record `com.j256.ormlite.stmt.query.ManyClause` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.Clause` @kind interface, `com.j256.ormlite.stmt.query.NeedsFutureClause` @kind interface {
  `com.j256.ormlite.stmt.query.Clause` `com.j256.ormlite.stmt.query.ManyClause.first` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.j256.ormlite.stmt.query.ManyClause.operation` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.query.Clause`[] `com.j256.ormlite.stmt.query.ManyClause.others` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.query.Clause` `com.j256.ormlite.stmt.query.ManyClause.second` @AccessFlag PRIVATE;
  `int` `com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.j256.ormlite.stmt.query.ManyClause.AND_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.ManyClause.OR_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v1 @kind this, `com.j256.ormlite.stmt.query.Clause` v2 @kind object, `com.j256.ormlite.stmt.query.Clause` v3 @kind object, `com.j256.ormlite.stmt.query.Clause`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:(Lcom/j256/ormlite/stmt/query/Clause;Lcom/j256/ormlite/stmt/query/Clause;[Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15e74c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e752.  v1.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v2 @kind object;
  #L15e756.  v1.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v3 @kind object;
  #L15e75a.  v1.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v4 @kind object;
  #L15e75e.  v0:= 0I;
  #L15e760.  v1.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L15e764.  v1.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v5 @kind object;
  #L15e768.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v1 @kind this, `com.j256.ormlite.stmt.query.Clause` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:(Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15e77c.  v0:= 0I;
  #L15e77e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e784.  v1.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v2 @kind object;
  #L15e788.  v1.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L15e78c.  v1.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v0 @kind object;
  #L15e790.  v0:= 0I;
  #L15e792.  v1.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L15e796.  v1.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v3 @kind object;
  #L15e79a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v2 @kind this, `com.j256.ormlite.stmt.query.Clause`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:([Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15e7ac.  v1:= 2I;
  #L15e7ae.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15e7b4.  v0:= 0I;
  #L15e7b6.  v0:= v3[v0] @kind object;
  #L15e7ba.  v2.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L15e7be.  v0:= length @variable v3;
  #L15e7c0.  if v0 >= v1 then goto L15e7da;
  #L15e7c4.  v0:= 0I;
  #L15e7c6.  v2.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L15e7ca.  v0:= length @variable v3;
  #L15e7cc.  v2.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L15e7d0.  v2.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v3 @kind object;
  #L15e7d4.  v2.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v4 @kind object;
  #L15e7d8.  return @kind void;
  #L15e7da.  v0:= 1I;
  #L15e7dc.  v0:= v3[v0] @kind object;
  #L15e7e0.  v2.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L15e7e4.  v2.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v1;
  #L15e7e8.  goto L15e7d0;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.ManyClause` v3 @kind this, `com.j256.ormlite.db.DatabaseType` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.StringBuilder` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15e7fc.  v2:= 32I;
  #L15e800.  v0:= 40I;
  #L15e804.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e80a.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L15e80e.  call `appendSql`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L15e814.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L15e818.  if v0 == 0 then goto L15e836;
  #L15e81c.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` @kind object;
  #L15e820.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e826.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e82c.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L15e830.  call `appendSql`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L15e836.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L15e83a.  if v0 == 0 then goto L15e870;
  #L15e83e.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int`;
  #L15e842.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L15e846.  v1:= length @variable v1;
  #L15e848.  if v0 >= v1 then goto L15e870;
  #L15e84c.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` @kind object;
  #L15e850.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e856.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e85c.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L15e860.  v1:= v1[v0] @kind object;
  #L15e864.  call `appendSql`(v1, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L15e86a.  v0:= v0 + 1;
  #L15e86e.  goto L15e842;
  #L15e870.  v0:= ") " @kind object;
  #L15e874.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e87a.  return @kind void;
}
procedure `void` `setMissingClause`(`com.j256.ormlite.stmt.query.ManyClause` v0 @kind this, `com.j256.ormlite.stmt.query.Clause` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.setMissingClause:(Lcom/j256/ormlite/stmt/query/Clause;)V` @AccessFlag PUBLIC {
    temp;

  #L15e88c.  v0.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v1 @kind object;
  #L15e890.  return @kind void;
}

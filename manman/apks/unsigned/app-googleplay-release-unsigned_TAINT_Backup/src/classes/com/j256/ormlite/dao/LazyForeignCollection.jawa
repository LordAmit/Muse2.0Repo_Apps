record `com.j256.ormlite.dao.LazyForeignCollection` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.BaseForeignCollection` @kind class, `java.io.Serializable` @kind interface {
  `com.j256.ormlite.dao.CloseableIterator` `com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.j256.ormlite.dao.LazyForeignCollection.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.LazyForeignCollection` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L148364.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @kind direct;
  #L14836a.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `access$000`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind object, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.access$000:(Lcom/j256/ormlite/dao/LazyForeignCollection;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L14837c.  call temp:= `seperateIteratorThrow`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind direct;
  #L148382.  v0:= temp @kind object;
  #L148384.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `seperateIteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L148398.  v0:= v2.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14839c.  if v0 != 0 then goto L1483b0;
  #L1483a0.  v0:= new `java.lang.IllegalStateException`;
  #L1483a4.  v1:= "Internal DAO object is null.  Maybe the collection was deserialized or otherwise constructed wrongly.  Use dao.assignEmptyForeignCollection(...) or dao.getEmptyForeignCollection(...) instead" @kind object;
  #L1483a8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1483ae.  throw v0;
  #L1483b0.  v0:= v2.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1483b4.  call temp:= `getPreparedQuery`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getPreparedQuery:()Lcom/j256/ormlite/stmt/PreparedQuery;` @kind virtual;
  #L1483ba.  v1:= temp @kind object;
  #L1483bc.  call temp:= `iterator`(v0, v1, v3) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L1483c2.  v0:= temp @kind object;
  #L1483c4.  return v0 @kind object;
}
procedure `void` `closeLastIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeLastIterator:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1483d8.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L1483dc.  if v0 == 0 then goto L1483f0;
  #L1483e0.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L1483e4.  call `close`(v0) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.close:()V` @kind interface;
  #L1483ea.  v0:= 0I;
  #L1483ec.  v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` := v0 @kind object;
  #L1483f0.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148404.  v0:= -1I;
  #L148406.  call temp:= `closeableIterator`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L14840c.  v0:= temp @kind object;
  #L14840e.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v4 @kind this, `int` v5 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L148420.  call temp:= `iteratorThrow`(v4, v5) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #Try_end0.  
  #L148426.  v0:= temp @kind object;
  #L148428.  return v0 @kind object;
  #L14842a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L14842c.  v1:= new `java.lang.IllegalStateException`;
  #L148430.  v2:= new `java.lang.StringBuilder`;
  #L148434.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14843a.  v3:= "Could not build lazy iterator for " @kind object;
  #L14843e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148444.  v2:= temp @kind object;
  #L148446.  v3:= v4.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L14844a.  call temp:= `getDataClass`(v3) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L148450.  v3:= temp @kind object;
  #L148452.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148458.  v2:= temp @kind object;
  #L14845a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148460.  v2:= temp @kind object;
  #L148462.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L148468.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L14842a;
}
procedure `boolean` `contains`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14848c.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L148492.  v1:= temp @kind object;
  #Try_start0.  
  #L148494.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L14849a.  v0:= temp;
  #L14849c.  if v0 == 0 then goto L1484be;
  #L1484a0.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1484a6.  v0:= temp @kind object;
  #L1484a8.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #Try_end0.  
  #L1484ae.  v0:= temp;
  #L1484b0.  if v0 == 0 then goto L148494;
  #L1484b4.  v0:= 1I;
  #L1484b6.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1484bc.  return v0;
  #L1484be.  v0:= 0I;
  #L1484c0.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1484c6.  goto L1484bc;
  #L1484c8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1484ca.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1484d0.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1484c8;
}
procedure `boolean` `containsAll`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1484f0.  v0:= new `java.util.HashSet`;
  #L1484f4.  call `<init>`(v0, v4) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1484fa.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L148500.  v1:= temp @kind object;
  #Try_start0.  
  #L148502.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L148508.  v2:= temp;
  #L14850a.  if v2 == 0 then goto L148528;
  #L14850e.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L148514.  v2:= temp @kind object;
  #L148516.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L14851c.  goto L148502;
  #L14851e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L148520.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L148526.  throw v0;
  #Try_start1.  
  #L148528.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #Try_end1.  
  #L14852e.  v0:= temp;
  #L148530.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L148536.  return v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L14851e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L14851e;
}
procedure `boolean` `equals`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14855c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L148562.  v0:= temp;
  #L148564.  return v0;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148578.  v0:= -1I;
  #L14857a.  call temp:= `getWrappedIterable`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:(I)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind virtual;
  #L148580.  v0:= temp @kind object;
  #L148582.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:(I)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148594.  v0:= new `com.j256.ormlite.dao.CloseableWrappedIterableImpl`;
  #L148598.  v1:= new `com.j256.ormlite.dao.LazyForeignCollection$1`;
  #L14859c.  call `<init>`(v1, v2, v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection$1;.<init>:(Lcom/j256/ormlite/dao/LazyForeignCollection;I)V` @kind direct;
  #L1485a2.  call `<init>`(v0, v1) @signature `Lcom/j256/ormlite/dao/CloseableWrappedIterableImpl;.<init>:(Lcom/j256/ormlite/dao/CloseableIterable;)V` @kind direct;
  #L1485a8.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1485bc.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L1485c2.  v0:= temp;
  #L1485c4.  return v0;
}
procedure `boolean` `isEager`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.isEager:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1485d8.  v0:= 0I;
  #L1485da.  return v0;
}
procedure `boolean` `isEmpty`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1485ec.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1485f2.  v1:= temp @kind object;
  #Try_start0.  
  #L1485f4.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #Try_end0.  
  #L1485fa.  v0:= temp;
  #L1485fc.  if v0 != 0 then goto L14860a;
  #L148600.  v0:= 1I;
  #L148602.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L148608.  return v0;
  #L14860a.  v0:= 0I;
  #L14860c.  goto L148602;
  #L14860e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L148610.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L148616.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L14860e;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148634.  v0:= -1I;
  #L148636.  call temp:= `closeableIterator`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L14863c.  v0:= temp @kind object;
  #L14863e.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148650.  call temp:= `closeableIterator`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L148656.  v0:= temp @kind object;
  #L148658.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L14866c.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L148672.  v0:= temp @kind object;
  #L148674.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L148688.  v0:= -1I;
  #L14868a.  call temp:= `iteratorThrow`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L148690.  v0:= temp @kind object;
  #L148692.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1486a4.  call temp:= `seperateIteratorThrow`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind direct;
  #L1486aa.  v0:= temp @kind object;
  #L1486ac.  v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` := v0 @kind object;
  #L1486b0.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L1486b4.  return v0 @kind object;
}
procedure `int` `refreshAll`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.refreshAll:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1486c8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1486cc.  v1:= "Cannot call updateAll() on a lazy collection." @kind object;
  #L1486d0.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1486d6.  throw v0;
}
procedure `int` `refreshCollection`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.refreshCollection:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1486e8.  v0:= 0I;
  #L1486ea.  return v0;
}
procedure `boolean` `remove`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1486fc.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L148702.  v1:= temp @kind object;
  #Try_start0.  
  #L148704.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L14870a.  v0:= temp;
  #L14870c.  if v0 == 0 then goto L148734;
  #L148710.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L148716.  v0:= temp @kind object;
  #L148718.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14871e.  v0:= temp;
  #L148720.  if v0 == 0 then goto L148704;
  #L148724.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L14872a.  v0:= 1I;
  #L14872c.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L148732.  return v0;
  #L148734.  v0:= 0I;
  #L148736.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L14873c.  goto L148732;
  #L14873e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L148740.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L148746.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L14873e;
}
procedure `boolean` `removeAll`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L148764.  v0:= 0I;
  #L148766.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L14876c.  v1:= temp @kind object;
  #Try_start0.  
  #L14876e.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L148774.  v2:= temp;
  #L148776.  if v2 == 0 then goto L148798;
  #L14877a.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L148780.  v2:= temp @kind object;
  #L148782.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L148788.  v2:= temp;
  #L14878a.  if v2 == 0 then goto L14876e;
  #L14878e.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L148794.  v0:= 1I;
  #L148796.  goto L14876e;
  #L148798.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L14879e.  return v0;
  #L1487a0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1487a2.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1487a8.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1487a0;
}
procedure `int` `size`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1487c8.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1487ce.  v1:= temp @kind object;
  #L1487d0.  v0:= 0I;
  #Try_start0.  
  #L1487d2.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1487d8.  v2:= temp;
  #L1487da.  if v2 == 0 then goto L1487ea;
  #L1487de.  call `moveToNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.moveToNext:()V` @kind interface;
  #Try_end0.  
  #L1487e4.  v0:= v0 + 1;
  #L1487e8.  goto L1487d2;
  #L1487ea.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1487f0.  return v0;
  #L1487f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1487f4.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1487fa.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1487f2;
}
procedure `java.lang.Object`[] `toArray`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L148818.  v0:= new `java.util.ArrayList`;
  #L14881c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L148822.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L148828.  v1:= temp @kind object;
  #Try_start0.  
  #L14882a.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L148830.  v2:= temp;
  #L148832.  if v2 == 0 then goto L148850;
  #L148836.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14883c.  v2:= temp @kind object;
  #L14883e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L148844.  goto L14882a;
  #L148846.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L148848.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L14884e.  throw v0;
  #Try_start1.  
  #L148850.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #Try_end1.  
  #L148856.  v0:= temp @kind object;
  #L148858.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L14885e.  return v0 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L148846;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L148846;
}
procedure `java.lang.Object`[] `toArray`(`com.j256.ormlite.dao.LazyForeignCollection` v9 @kind this, `java.lang.Object`[] v10 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L148884.  v3:= 0I;
  #L148886.  v2:= 0I;
  #L148888.  call temp:= `iterator`(v9) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L14888e.  v5:= temp @kind object;
  #L148890.  v1:= v2;
  #L148892.  v0:= v3 @kind object;
  #Try_start0.  
  #L148894.  call temp:= `hasNext`(v5) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L14889a.  v4:= temp;
  #L14889c.  if v4 == 0 then goto L1488f0;
  #L1488a0.  call temp:= `next`(v5) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1488a6.  v6:= temp @kind object;
  #L1488a8.  v4:= length @variable v10;
  #L1488aa.  if v1 < v4 then goto L1488e0;
  #L1488ae.  if v0 != 0 then goto L1488d4;
  #L1488b2.  v0:= new `java.util.ArrayList`;
  #L1488b6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1488bc.  v7:= length @variable v10;
  #L1488be.  v4:= v2;
  #L1488c0.  if v4 >= v7 then goto L1488d4;
  #L1488c4.  v8:= v10[v4] @kind object;
  #L1488c8.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1488ce.  v4:= v4 + 1;
  #L1488d2.  goto L1488c0;
  #L1488d4.  call temp:= `add`(v0, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1488da.  v1:= v1 + 1;
  #L1488de.  goto L148894;
  #L1488e0.  v10[v1]:= v6 @kind object;
  #Try_end0.  
  #L1488e4.  goto L1488da;
  #L1488e6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1488e8.  call `closeQuietly`(v5) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1488ee.  throw v0;
  #L1488f0.  call `closeQuietly`(v5) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1488f6.  if v0 != 0 then goto L14890a;
  #L1488fa.  v0:= length @variable v10;
  #L1488fc.  v0:= v0 + -1;
  #L148900.  if v1 >= v0 then goto L148908;
  #L148904.  v10[v1]:= v3 @kind object;
  #L148908.  return v10 @kind object;
  #L14890a.  call temp:= `toArray`(v0, v10) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L148910.  v10:= temp @kind object;
  #L148912.  goto L148908;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1488e6;
}
procedure `int` `updateAll`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.updateAll:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L148930.  v0:= new `java.lang.UnsupportedOperationException`;
  #L148934.  v1:= "Cannot call updateAll() on a lazy collection." @kind object;
  #L148938.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14893e.  throw v0;
}

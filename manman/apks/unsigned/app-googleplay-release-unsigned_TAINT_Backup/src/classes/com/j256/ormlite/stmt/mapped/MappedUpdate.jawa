record `com.j256.ormlite.stmt.mapped.MappedUpdate` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
  `com.j256.ormlite.field.FieldType` `com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @AccessFlag PRIVATE_FINAL;
  `int` `com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedUpdate` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15d770.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L15d776.  v0.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` := v4 @kind object;
  #L15d77a.  v0.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @type ^`int` := v5;
  #L15d77e.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedUpdate` `build`(`com.j256.ormlite.db.DatabaseType` v13 @kind object, `com.j256.ormlite.table.TableInfo` v14 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedUpdate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L15d790.  call temp:= `getIdField`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15d796.  v7:= temp @kind object;
  #L15d798.  if v7 != 0 then goto L15d7e2;
  #L15d79c.  v0:= new `java.sql.SQLException`;
  #L15d7a0.  v1:= new `java.lang.StringBuilder`;
  #L15d7a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d7aa.  v2:= "Cannot update " @kind object;
  #L15d7ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d7b4.  v1:= temp @kind object;
  #L15d7b6.  call temp:= `getDataClass`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L15d7bc.  v2:= temp @kind object;
  #L15d7be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d7c4.  v1:= temp @kind object;
  #L15d7c6.  v2:= " because it doesn't have an id field" @kind object;
  #L15d7ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d7d0.  v1:= temp @kind object;
  #L15d7d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d7d8.  v1:= temp @kind object;
  #L15d7da.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d7e0.  throw v0;
  #L15d7e2.  v8:= new `java.lang.StringBuilder`;
  #L15d7e6.  v0:= 64I;
  #L15d7ea.  call `<init>`(v8, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L15d7f0.  v0:= "UPDATE " @kind object;
  #L15d7f4.  call temp:= `getTableName`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L15d7fa.  v1:= temp @kind object;
  #L15d7fc.  call `appendTableName`(v13, v8, v0, v1) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15d802.  v2:= 1I;
  #L15d804.  v1:= 0I;
  #L15d806.  v4:= 0I;
  #L15d808.  v5:= -1I;
  #L15d80a.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15d810.  v6:= temp @kind object;
  #L15d812.  v9:= length @variable v6;
  #L15d814.  v0:= 0I;
  #L15d816.  v3:= v0;
  #L15d818.  v0:= v1;
  #L15d81a.  if v3 >= v9 then goto L15d84a;
  #L15d81e.  v1:= v6[v3] @kind object;
  #L15d822.  call temp:= `isFieldUpdatable`(v1, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L15d828.  v10:= temp;
  #L15d82a.  if v10 == 0 then goto L15d842;
  #L15d82e.  call temp:= `isVersion`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isVersion:()Z` @kind virtual;
  #L15d834.  v10:= temp;
  #L15d836.  if v10 == 0 then goto L15d83e;
  #L15d83a.  v5:= v0;
  #L15d83c.  v4:= v1 @kind object;
  #L15d83e.  v0:= v0 + 1;
  #L15d842.  v1:= v3 + 1;
  #L15d846.  v3:= v1;
  #L15d848.  goto L15d81a;
  #L15d84a.  v0:= v0 + 1;
  #L15d84e.  if v4 == 0 then goto L15d856;
  #L15d852.  v0:= v0 + 1;
  #L15d856.  v3:= new `com.j256.ormlite.field.FieldType`[v0];
  #L15d85a.  v1:= 0I;
  #L15d85c.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15d862.  v9:= temp @kind object;
  #L15d864.  v10:= length @variable v9;
  #L15d866.  v0:= 0I;
  #L15d868.  v6:= v0;
  #L15d86a.  v0:= v2;
  #L15d86c.  if v6 >= v10 then goto L15d8d0;
  #L15d870.  v11:= v9[v6] @kind object;
  #L15d874.  call temp:= `isFieldUpdatable`(v11, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L15d87a.  v2:= temp;
  #L15d87c.  if v2 != 0 then goto L15d894;
  #L15d880.  v12:= v1;
  #L15d882.  v1:= v0;
  #L15d884.  v0:= v12;
  #L15d886.  v2:= v6 + 1;
  #L15d88a.  v6:= v2;
  #L15d88c.  v12:= v0;
  #L15d88e.  v0:= v1;
  #L15d890.  v1:= v12;
  #L15d892.  goto L15d86c;
  #L15d894.  if v0 == 0 then goto L15d8c4;
  #L15d898.  v0:= "SET " @kind object;
  #L15d89c.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d8a2.  v0:= 0I;
  #L15d8a4.  v2:= 0I;
  #L15d8a6.  call `appendFieldColumnName`(v13, v8, v11, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L15d8ac.  v2:= v1 + 1;
  #L15d8b0.  v3[v1]:= v11 @kind object;
  #L15d8b4.  v1:= "= ?" @kind object;
  #L15d8b8.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d8be.  v1:= v0;
  #L15d8c0.  v0:= v2;
  #L15d8c2.  goto L15d886;
  #L15d8c4.  v2:= ", " @kind object;
  #L15d8c8.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d8ce.  goto L15d8a4;
  #L15d8d0.  v0:= 32I;
  #L15d8d4.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d8da.  v0:= 0I;
  #L15d8dc.  call `appendWhereFieldEq`(v13, v7, v8, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L15d8e2.  v0:= v1 + 1;
  #L15d8e6.  v3[v1]:= v7 @kind object;
  #L15d8ea.  if v4 == 0 then goto L15d912;
  #L15d8ee.  v1:= " AND " @kind object;
  #L15d8f2.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d8f8.  v1:= 0I;
  #L15d8fa.  call `appendFieldColumnName`(v13, v8, v4, v1) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L15d900.  v1:= "= ?" @kind object;
  #L15d904.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d90a.  v1:= v0 + 1;
  #L15d90e.  v3[v0]:= v4 @kind object;
  #L15d912.  v0:= new `com.j256.ormlite.stmt.mapped.MappedUpdate`;
  #L15d916.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d91c.  v2:= temp @kind object;
  #L15d91e.  v1:= v14 @kind object;
  #L15d920.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;I)V` @kind direct;
  #L15d926.  return v0 @kind object;
}
procedure `boolean` `isFieldUpdatable`(`com.j256.ormlite.field.FieldType` v1 @kind object, `com.j256.ormlite.field.FieldType` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L15d938.  if v1 == v2 then goto L15d954;
  #L15d93c.  call temp:= `isForeignCollection`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isForeignCollection:()Z` @kind virtual;
  #L15d942.  v0:= temp;
  #L15d944.  if v0 != 0 then goto L15d954;
  #L15d948.  call temp:= `isReadOnly`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isReadOnly:()Z` @kind virtual;
  #L15d94e.  v0:= temp;
  #L15d950.  if v0 == 0 then goto L15d958;
  #L15d954.  v0:= 0I;
  #L15d956.  return v0;
  #L15d958.  v0:= 1I;
  #L15d95a.  goto L15d956;
}
procedure `int` `update`(`com.j256.ormlite.stmt.mapped.MappedUpdate` v9 @kind this, `com.j256.ormlite.support.DatabaseConnection` v10 @kind object, `java.lang.Object` v11 @kind object, `com.j256.ormlite.dao.ObjectCache` v12 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.update:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L15d96c.  v1:= 0I;
  #L15d96e.  v0:= 0I;
  #Try_start0.  
  #L15d970.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L15d974.  v2:= length @variable v2;
  #L15d976.  v3:= 1I;
  #L15d978.  if v2 > v3 then goto L15d97e;
  #L15d97c.  return v0;
  #L15d97e.  call temp:= `getFieldObjects`(v9, v11) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L15d984.  v3:= temp @kind object;
  #L15d986.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15d98a.  if v2 == 0 then goto L15dac0;
  #L15d98e.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15d992.  call temp:= `extractJavaFieldValue`(v1, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15d998.  v1:= temp @kind object;
  #L15d99a.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15d99e.  call temp:= `moveToNextValue`(v2, v1) @signature `Lcom/j256/ormlite/field/FieldType;.moveToNextValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15d9a4.  v1:= temp @kind object;
  #L15d9a6.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @type ^`int`;
  #L15d9aa.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15d9ae.  call temp:= `convertJavaFieldToSqlArgValue`(v4, v1) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15d9b4.  v4:= temp @kind object;
  #L15d9b6.  v3[v2]:= v4 @kind object;
  #L15d9ba.  v2:= v1 @kind object;
  #L15d9bc.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L15d9c0.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L15d9c4.  call temp:= `update`(v10, v1, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L15d9ca.  v1:= temp;
  #L15d9cc.  if v1 <= 0 then goto L15da3a;
  #L15d9d0.  if v2 == 0 then goto L15d9e2;
  #L15d9d4.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15d9d8.  v5:= 0I;
  #L15d9da.  v6:= 0I;
  #L15d9dc.  call `assignField`(v4, v11, v2, v5, v6) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L15d9e2.  if v12 == 0 then goto L15da3a;
  #L15d9e6.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15d9ea.  call temp:= `extractJavaFieldValue`(v2, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15d9f0.  v2:= temp @kind object;
  #L15d9f2.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.clazz` @type ^`java.lang.Class` @kind object;
  #L15d9f6.  call temp:= `get`(v12, v4, v2) @signature `Lcom/j256/ormlite/dao/ObjectCache;.get:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15d9fc.  v2:= temp @kind object;
  #L15d9fe.  if v2 == 0 then goto L15da3a;
  #L15da02.  if v2 == v11 then goto L15da3a;
  #L15da06.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L15da0a.  call temp:= `getFieldTypes`(v4) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15da10.  v4:= temp @kind object;
  #L15da12.  v5:= length @variable v4;
  #L15da14.  if v0 >= v5 then goto L15da3a;
  #L15da18.  v6:= v4[v0] @kind object;
  #L15da1c.  v7:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L15da20.  if v6 == v7 then goto L15da34;
  #L15da24.  call temp:= `extractJavaFieldValue`(v6, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15da2a.  v7:= temp @kind object;
  #L15da2c.  v8:= 0I;
  #L15da2e.  call `assignField`(v6, v2, v7, v8, v12) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L15da34.  v0:= v0 + 1;
  #L15da38.  goto L15da14;
  #L15da3a.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedUpdate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15da3e.  v2:= "update data with statement '{}' and {} args, changed {} rows" @kind object;
  #L15da42.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L15da46.  v5:= length @variable v3;
  #L15da48.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15da4e.  v5:= temp @kind object;
  #L15da50.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15da56.  v6:= temp @kind object;
  #L15da58.  call `debug`(v0, v2, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L15da5e.  v0:= length @variable v3;
  #L15da60.  if v0 <= 0 then goto L15da72;
  #L15da64.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedUpdate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15da68.  v2:= "update arguments: {}" @kind object;
  #L15da6c.  call `trace`(v0, v2, v3) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L15da72.  v0:= v1;
  #L15da74.  goto L15d97c;
  #L15da76.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15da78.  v1:= new `java.lang.StringBuilder`;
  #L15da7c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15da82.  v2:= "Unable to run update stmt on object " @kind object;
  #L15da86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da8c.  v1:= temp @kind object;
  #L15da8e.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da94.  v1:= temp @kind object;
  #L15da96.  v2:= ": " @kind object;
  #L15da9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15daa0.  v1:= temp @kind object;
  #L15daa2.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L15daa6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15daac.  v1:= temp @kind object;
  #L15daae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15dab4.  v1:= temp @kind object;
  #L15dab6.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15dabc.  v0:= temp @kind object;
  #L15dabe.  throw v0;
  #L15dac0.  v2:= v1 @kind object;
  #L15dac2.  goto L15d9bc;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15da76;
}

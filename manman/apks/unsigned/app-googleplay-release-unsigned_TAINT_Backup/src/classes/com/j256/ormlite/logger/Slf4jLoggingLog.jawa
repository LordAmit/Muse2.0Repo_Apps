record `com.j256.ormlite.logger.Slf4jLoggingLog` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.logger.Log` @kind interface {
  `org.slf4j.Logger` `com.j256.ormlite.logger.Slf4jLoggingLog.logger` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.logger.Slf4jLoggingLog` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L156190.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L156196.  call temp:= `getLogger`(v2) @signature `Lorg/slf4j/LoggerFactory;.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;` @kind static;
  #L15619c.  v0:= temp @kind object;
  #L15619e.  v1.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` := v0 @kind object;
  #L1561a2.  return @kind void;
}
procedure `boolean` `isLevelEnabled`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.isLevelEnabled:(Lcom/j256/ormlite/logger/Log$Level;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1561b4.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L1561b8.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L1561be.  v1:= temp;
  #L1561c0.  v0:= v0[v1];
  #L1561c4.  goto L15622c;
  #L1561ca.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L1561ce.  call temp:= `isInfoEnabled`(v0) @signature `Lorg/slf4j/Logger;.isInfoEnabled:()Z` @kind interface;
  #L1561d4.  v0:= temp;
  #L1561d6.  return v0;
  #L1561d8.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L1561dc.  call temp:= `isTraceEnabled`(v0) @signature `Lorg/slf4j/Logger;.isTraceEnabled:()Z` @kind interface;
  #L1561e2.  v0:= temp;
  #L1561e4.  goto L1561d6;
  #L1561e6.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L1561ea.  call temp:= `isDebugEnabled`(v0) @signature `Lorg/slf4j/Logger;.isDebugEnabled:()Z` @kind interface;
  #L1561f0.  v0:= temp;
  #L1561f2.  goto L1561d6;
  #L1561f4.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L1561f8.  call temp:= `isInfoEnabled`(v0) @signature `Lorg/slf4j/Logger;.isInfoEnabled:()Z` @kind interface;
  #L1561fe.  v0:= temp;
  #L156200.  goto L1561d6;
  #L156202.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L156206.  call temp:= `isWarnEnabled`(v0) @signature `Lorg/slf4j/Logger;.isWarnEnabled:()Z` @kind interface;
  #L15620c.  v0:= temp;
  #L15620e.  goto L1561d6;
  #L156210.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L156214.  call temp:= `isErrorEnabled`(v0) @signature `Lorg/slf4j/Logger;.isErrorEnabled:()Z` @kind interface;
  #L15621a.  v0:= temp;
  #L15621c.  goto L1561d6;
  #L15621e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L156222.  call temp:= `isErrorEnabled`(v0) @signature `Lorg/slf4j/Logger;.isErrorEnabled:()Z` @kind interface;
  #L156228.  v0:= temp;
  #L15622a.  goto L1561d6;
  #L15622c.  switch v0
                  | 1 => goto L1561d8
                  | 2 => goto L1561e6
                  | 3 => goto L1561f4
                  | 4 => goto L156202
                  | 5 => goto L156210
                  | 6 => goto L15621e
                  | else => goto L1561ca;
}
procedure `void` `log`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15625c.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L156260.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L156266.  v1:= temp;
  #L156268.  v0:= v0[v1];
  #L15626c.  goto L1562c8;
  #L156272.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L156276.  call `info`(v0, v4) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;)V` @kind interface;
  #L15627c.  return @kind void;
  #L15627e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L156282.  call `trace`(v0, v4) @signature `Lorg/slf4j/Logger;.trace:(Ljava/lang/String;)V` @kind interface;
  #L156288.  goto L15627c;
  #L15628a.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15628e.  call `debug`(v0, v4) @signature `Lorg/slf4j/Logger;.debug:(Ljava/lang/String;)V` @kind interface;
  #L156294.  goto L15627c;
  #L156296.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15629a.  call `info`(v0, v4) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;)V` @kind interface;
  #L1562a0.  goto L15627c;
  #L1562a2.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L1562a6.  call `warn`(v0, v4) @signature `Lorg/slf4j/Logger;.warn:(Ljava/lang/String;)V` @kind interface;
  #L1562ac.  goto L15627c;
  #L1562ae.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L1562b2.  call `error`(v0, v4) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;)V` @kind interface;
  #L1562b8.  goto L15627c;
  #L1562ba.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L1562be.  call `error`(v0, v4) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;)V` @kind interface;
  #L1562c4.  goto L15627c;
  #L1562c6.  
  #L1562c8.  switch v0
                  | 1 => goto L15627e
                  | 2 => goto L15628a
                  | 3 => goto L156296
                  | 4 => goto L1562a2
                  | 5 => goto L1562ae
                  | 6 => goto L1562ba
                  | else => goto L156272;
}
procedure `void` `log`(`com.j256.ormlite.logger.Slf4jLoggingLog` v2 @kind this, `com.j256.ormlite.logger.Log$Level` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lcom/j256/ormlite/logger/Slf4jLoggingLog;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1562f8.  v0:= `@@com.j256.ormlite.logger.Slf4jLoggingLog$1.$SwitchMap$com$j256$ormlite$logger$Log$Level` @type ^`int`[] @kind object;
  #L1562fc.  call temp:= `ordinal`(v3) @signature `Lcom/j256/ormlite/logger/Log$Level;.ordinal:()I` @kind virtual;
  #L156302.  v1:= temp;
  #L156304.  v0:= v0[v1];
  #L156308.  goto L156364;
  #L15630e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L156312.  call `info`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L156318.  return @kind void;
  #L15631a.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15631e.  call `trace`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L156324.  goto L156318;
  #L156326.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15632a.  call `debug`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L156330.  goto L156318;
  #L156332.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L156336.  call `info`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.info:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L15633c.  goto L156318;
  #L15633e.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L156342.  call `warn`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L156348.  goto L156318;
  #L15634a.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15634e.  call `error`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L156354.  goto L156318;
  #L156356.  v0:= v2.`com.j256.ormlite.logger.Slf4jLoggingLog.logger` @type ^`org.slf4j.Logger` @kind object;
  #L15635a.  call `error`(v0, v4, v5) @signature `Lorg/slf4j/Logger;.error:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L156360.  goto L156318;
  #L156362.  
  #L156364.  switch v0
                  | 1 => goto L15631a
                  | 2 => goto L156326
                  | 3 => goto L156332
                  | 4 => goto L15633e
                  | 5 => goto L15634a
                  | 6 => goto L156356
                  | else => goto L15630e;
}

record `com.b.a.a` @kind class @AccessFlag FINAL extends `com.b.a.k` @kind interface, `com.b.a.s` @kind interface {
  `java.text.DateFormat` `com.b.a.a.a` @AccessFlag PRIVATE_FINAL;
  `java.text.DateFormat` `com.b.a.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this) @signature `Lcom/b/a/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L131a94.  v1:= 2I;
  #L131a96.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L131a9a.  call temp:= `getDateTimeInstance`(v1, v1, v0) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L131aa0.  v0:= temp @kind object;
  #L131aa2.  call temp:= `getDateTimeInstance`(v1, v1) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L131aa8.  v1:= temp @kind object;
  #L131aaa.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L131ab0.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/b/a/a;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L131ac4.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L131ac8.  call temp:= `getDateTimeInstance`(v3, v4, v0) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L131ace.  v0:= temp @kind object;
  #L131ad0.  call temp:= `getDateTimeInstance`(v3, v4) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L131ad6.  v1:= temp @kind object;
  #L131ad8.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L131ade.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/b/a/a;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L131af0.  v0:= new `java.text.SimpleDateFormat`;
  #L131af4.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L131af8.  call `<init>`(v0, v3, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L131afe.  v1:= new `java.text.SimpleDateFormat`;
  #L131b02.  call `<init>`(v1, v3) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L131b08.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L131b0e.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v0 @kind this, `java.text.DateFormat` v1 @kind object, `java.text.DateFormat` v2 @kind object) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L131b20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L131b26.  v0.`com.b.a.a.a` @type ^`java.text.DateFormat` := v1 @kind object;
  #L131b2a.  v0.`com.b.a.a.b` @type ^`java.text.DateFormat` := v2 @kind object;
  #L131b2e.  return @kind void;
}
procedure `java.util.Date` `a`(`com.b.a.a` v4 @kind this, `com.b.a.l` v5 @kind object) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;)Ljava/util/Date;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L131b40.  v1:= v4.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L131b44.  @monitorenter v1
  #Try_start0.  
  #L131b46.  v0:= v4.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L131b4a.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L131b50.  v2:= temp @kind object;
  #L131b52.  call temp:= `parse`(v0, v2) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #Try_end0.  
  #L131b58.  v0:= temp @kind object;
  #Try_start1.  
  #L131b5a.  @monitorexit v1
  #Try_end1.  
  #L131b5c.  return v0 @kind object;
  #L131b5e.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #Try_start2.  
  #L131b60.  v0:= v4.`com.b.a.a.a` @type ^`java.text.DateFormat` @kind object;
  #L131b64.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L131b6a.  v2:= temp @kind object;
  #L131b6c.  call temp:= `parse`(v0, v2) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #Try_end2.  
  #L131b72.  v0:= temp @kind object;
  #Try_start3.  
  #L131b74.  @monitorexit v1
  #L131b76.  goto L131b5c;
  #L131b78.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L131b7a.  @monitorexit v1
  #Try_end3.  
  #L131b7c.  throw v0;
  #L131b7e.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #Try_start4.  
  #L131b80.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L131b86.  v0:= temp @kind object;
  #L131b88.  v2:= new `java.text.ParsePosition`;
  #L131b8c.  v3:= 0I;
  #L131b8e.  call `<init>`(v2, v3) @signature `Ljava/text/ParsePosition;.<init>:(I)V` @kind direct;
  #L131b94.  call temp:= `a`(v0, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @kind static;
  #Try_end4.  
  #L131b9a.  v0:= temp @kind object;
  #Try_start5.  
  #L131b9c.  @monitorexit v1
  #L131b9e.  goto L131b5c;
  #L131ba0.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #L131ba2.  v2:= new `com.b.a.t`;
  #L131ba6.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L131bac.  v3:= temp @kind object;
  #L131bae.  call `<init>`(v2, v3, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L131bb4.  throw v2;
  #Try_end5.  
  catch `java.text.ParseException` @[Try_start0..Try_end0] goto L131b5e;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L131b78;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L131b78;
  catch `java.text.ParseException` @[Try_start2..Try_end2] goto L131b7e;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L131b78;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L131b78;
  catch `java.text.ParseException` @[Try_start4..Try_end4] goto L131ba0;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L131b78;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L131b78;
}
procedure `com.b.a.l` `a`(`com.b.a.a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.r` v4 @kind object) @signature `Lcom/b/a/a;.a:(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L131c0c.  v2:= (`java.util.Date`) v2 @kind object;
  #L131c10.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/b/a/a;.a:(Ljava/util/Date;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @kind virtual;
  #L131c16.  v0:= temp @kind object;
  #L131c18.  return v0 @kind object;
}
procedure `com.b.a.l` `a`(`com.b.a.a` v3 @kind this, `java.util.Date` v4 @kind object, `java.lang.reflect.Type` v5 @kind object, `com.b.a.r` v6 @kind object) @signature `Lcom/b/a/a;.a:(Ljava/util/Date;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L131c2c.  v1:= v3.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L131c30.  @monitorenter v1
  #Try_start0.  
  #L131c32.  v0:= v3.`com.b.a.a.a` @type ^`java.text.DateFormat` @kind object;
  #L131c36.  call temp:= `format`(v0, v4) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L131c3c.  v0:= temp @kind object;
  #L131c3e.  v2:= new `com.b.a.q`;
  #L131c42.  call `<init>`(v2, v0) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L131c48.  @monitorexit v1
  #L131c4a.  return v2 @kind object;
  #L131c4c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L131c4e.  @monitorexit v1
  #Try_end0.  
  #L131c50.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L131c4c;
}
procedure `java.util.Date` `a`(`com.b.a.a` v4 @kind this, `com.b.a.l` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `com.b.a.j` v7 @kind object) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L131c70.  v0:= instanceof @variable v5 @type ^`com.b.a.q` @kind boolean;
  #L131c74.  if v0 != 0 then goto L131c88;
  #L131c78.  v0:= new `com.b.a.p`;
  #L131c7c.  v1:= "The date should be a string value" @kind object;
  #L131c80.  call `<init>`(v0, v1) @signature `Lcom/b/a/p;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L131c86.  throw v0;
  #L131c88.  call temp:= `a`(v4, v5) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;)Ljava/util/Date;` @kind direct;
  #L131c8e.  v0:= temp @kind object;
  #L131c90.  v1:= constclass @type ^`java.util.Date` @kind object;
  #L131c94.  if v6 != v1 then goto L131c9a;
  #L131c98.  return v0 @kind object;
  #L131c9a.  v1:= constclass @type ^`java.sql.Timestamp` @kind object;
  #L131c9e.  if v6 != v1 then goto L131cb8;
  #L131ca2.  v1:= new `java.sql.Timestamp`;
  #L131ca6.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L131cac.  v2:= temp @kind wide;
  #L131cae.  call `<init>`(v1, v2) @signature `Ljava/sql/Timestamp;.<init>:(J)V` @kind direct;
  #L131cb4.  v0:= v1 @kind object;
  #L131cb6.  goto L131c98;
  #L131cb8.  v1:= constclass @type ^`java.sql.Date` @kind object;
  #L131cbc.  if v6 != v1 then goto L131cd6;
  #L131cc0.  v1:= new `java.sql.Date`;
  #L131cc4.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L131cca.  v2:= temp @kind wide;
  #L131ccc.  call `<init>`(v1, v2) @signature `Ljava/sql/Date;.<init>:(J)V` @kind direct;
  #L131cd2.  v0:= v1 @kind object;
  #L131cd4.  goto L131c98;
  #L131cd6.  v0:= new `java.lang.IllegalArgumentException`;
  #L131cda.  v1:= new `java.lang.StringBuilder`;
  #L131cde.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L131ce4.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L131cea.  v2:= temp @kind object;
  #L131cec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131cf2.  v1:= temp @kind object;
  #L131cf4.  v2:= " cannot deserialize to " @kind object;
  #L131cf8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131cfe.  v1:= temp @kind object;
  #L131d00.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131d06.  v1:= temp @kind object;
  #L131d08.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L131d0e.  v1:= temp @kind object;
  #L131d10.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L131d16.  throw v0;
}
procedure `java.lang.Object` `b`(`com.b.a.a` v1 @kind this, `com.b.a.l` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.j` v4 @kind object) @signature `Lcom/b/a/a;.b:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L131d28.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/util/Date;` @kind virtual;
  #L131d2e.  v0:= temp @kind object;
  #L131d30.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.b.a.a` v3 @kind this) @signature `Lcom/b/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L131d44.  v0:= new `java.lang.StringBuilder`;
  #L131d48.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L131d4e.  v1:= constclass @type ^`com.b.a.a` @kind object;
  #L131d52.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L131d58.  v1:= temp @kind object;
  #L131d5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131d60.  v1:= 40I;
  #L131d64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L131d6a.  v1:= temp @kind object;
  #L131d6c.  v2:= v3.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L131d70.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L131d76.  v2:= temp @kind object;
  #L131d78.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L131d7e.  v2:= temp @kind object;
  #L131d80.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131d86.  v1:= temp @kind object;
  #L131d88.  v2:= 41I;
  #L131d8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L131d92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L131d98.  v0:= temp @kind object;
  #L131d9a.  return v0 @kind object;
}

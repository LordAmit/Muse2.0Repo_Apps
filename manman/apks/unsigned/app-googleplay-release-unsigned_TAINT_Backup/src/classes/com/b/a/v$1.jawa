record `com.b.a.v$1` @kind class @AccessFlag  extends `com.b.a.v` @kind class {
  `com.b.a.v` `com.b.a.v$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.v$1` v0 @kind this, `com.b.a.v` v1 @kind object) @signature `Lcom/b/a/v$1;.<init>:(Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13f6d0.  v0.`com.b.a.v$1.a` @type ^`com.b.a.v` := v1 @kind object;
  #L13f6d4.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L13f6da.  return @kind void;
}
procedure `void` `a`(`com.b.a.v$1` v1 @kind this, `com.b.a.d.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/v$1;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13f6ec.  if v3 != 0 then goto L13f6f8;
  #L13f6f0.  call temp:= `f`(v2) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L13f6f6.  return @kind void;
  #L13f6f8.  v0:= v1.`com.b.a.v$1.a` @type ^`com.b.a.v` @kind object;
  #L13f6fc.  call `a`(v0, v2, v3) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L13f702.  goto L13f6f6;
}
procedure `java.lang.Object` `b`(`com.b.a.v$1` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/v$1;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13f714.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L13f71a.  v0:= temp @kind object;
  #L13f71c.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L13f720.  if v0 != v1 then goto L13f72e;
  #L13f724.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L13f72a.  v0:= 0I;
  #L13f72c.  return v0 @kind object;
  #L13f72e.  v0:= v2.`com.b.a.v$1.a` @type ^`com.b.a.v` @kind object;
  #L13f732.  call temp:= `b`(v0, v3) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L13f738.  v0:= temp @kind object;
  #L13f73a.  goto L13f72c;
}

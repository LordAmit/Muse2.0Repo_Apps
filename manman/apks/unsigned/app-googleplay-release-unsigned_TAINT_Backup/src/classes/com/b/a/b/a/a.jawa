record `com.b.a.b.a.a` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.v` @kind class {
  `java.lang.Class` `com.b.a.b.a.a.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.a.c` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.w` `@@com.b.a.b.a.a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L132530.  v0:= new `com.b.a.b.a.a$1`;
  #L132534.  call `<init>`(v0) @signature `Lcom/b/a/b/a/a$1;.<init>:()V` @kind direct;
  #L13253a.  `@@com.b.a.b.a.a.a` @type ^`com.b.a.w` := v0 @kind object;
  #L13253e.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.b.a.a` v1 @kind this, `com.b.a.f` v2 @kind object, `com.b.a.v` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/b/a/a;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L132550.  call `<init>`(v1) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L132556.  v0:= new `com.b.a.b.a.m`;
  #L13255a.  call `<init>`(v0, v2, v3, v4) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L132560.  v1.`com.b.a.b.a.a.c` @type ^`com.b.a.v` := v0 @kind object;
  #L132564.  v1.`com.b.a.b.a.a.b` @type ^`java.lang.Class` := v4 @kind object;
  #L132568.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.a` v4 @kind this, `com.b.a.d.c` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/b/a/b/a/a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13257c.  if v6 != 0 then goto L132588;
  #L132580.  call temp:= `f`(v5) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L132586.  return @kind void;
  #L132588.  call temp:= `b`(v5) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L13258e.  v0:= 0I;
  #L132590.  call temp:= `getLength`(v6) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L132596.  v1:= temp;
  #L132598.  if v0 >= v1 then goto L1325b4;
  #L13259c.  call temp:= `get`(v6, v0) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L1325a2.  v2:= temp @kind object;
  #L1325a4.  v3:= v4.`com.b.a.b.a.a.c` @type ^`com.b.a.v` @kind object;
  #L1325a8.  call `a`(v3, v5, v2) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1325ae.  v0:= v0 + 1;
  #L1325b2.  goto L132598;
  #L1325b4.  call temp:= `c`(v5) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L1325ba.  goto L132586;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.a` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1325cc.  call temp:= `f`(v5) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1325d2.  v0:= temp @kind object;
  #L1325d4.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L1325d8.  if v0 != v1 then goto L1325e6;
  #L1325dc.  call `j`(v5) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L1325e2.  v0:= 0I;
  #L1325e4.  return v0 @kind object;
  #L1325e6.  v2:= new `java.util.ArrayList`;
  #L1325ea.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1325f0.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L1325f6.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L1325fc.  v0:= temp;
  #L1325fe.  if v0 == 0 then goto L132616;
  #L132602.  v0:= v4.`com.b.a.b.a.a.c` @type ^`com.b.a.v` @kind object;
  #L132606.  call temp:= `b`(v0, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L13260c.  v0:= temp @kind object;
  #L13260e.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L132614.  goto L1325f6;
  #L132616.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L13261c.  v0:= v4.`com.b.a.b.a.a.b` @type ^`java.lang.Class` @kind object;
  #L132620.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L132626.  v1:= temp;
  #L132628.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L13262e.  v1:= temp @kind object;
  #L132630.  v0:= 0I;
  #L132632.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L132638.  v3:= temp;
  #L13263a.  if v0 >= v3 then goto L132652;
  #L13263e.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L132644.  v3:= temp @kind object;
  #L132646.  call `set`(v1, v0, v3) @signature `Ljava/lang/reflect/Array;.set:(Ljava/lang/Object;ILjava/lang/Object;)V` @kind static;
  #L13264c.  v0:= v0 + 1;
  #L132650.  goto L132632;
  #L132652.  v0:= v1 @kind object;
  #L132654.  goto L1325e4;
}

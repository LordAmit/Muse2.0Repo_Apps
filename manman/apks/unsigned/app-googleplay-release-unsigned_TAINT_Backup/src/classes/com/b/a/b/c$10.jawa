record `com.b.a.b.c$10` @kind class @AccessFlag  extends `com.b.a.b.h` @kind interface {
  `java.lang.reflect.Type` `com.b.a.b.c$10.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.b.c` `com.b.a.b.c$10.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.c$10` v0 @kind this, `com.b.a.b.c` v1 @kind object, `java.lang.reflect.Type` v2 @kind object) @signature `Lcom/b/a/b/c$10;.<init>:(Lcom/b/a/b/c;Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13b058.  v0.`com.b.a.b.c$10.b` @type ^`com.b.a.b.c` := v1 @kind object;
  #L13b05c.  v0.`com.b.a.b.c$10.a` @type ^`java.lang.reflect.Type` := v2 @kind object;
  #L13b060.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13b066.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.b.a.b.c$10` v3 @kind this) @signature `Lcom/b/a/b/c$10;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13b078.  v0:= v3.`com.b.a.b.c$10.a` @type ^`java.lang.reflect.Type` @kind object;
  #L13b07c.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L13b080.  if v0 == 0 then goto L13b0ee;
  #L13b084.  v0:= v3.`com.b.a.b.c$10.a` @type ^`java.lang.reflect.Type` @kind object;
  #L13b088.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L13b08c.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L13b092.  v0:= temp @kind object;
  #L13b094.  v1:= 0I;
  #L13b096.  v0:= v0[v1] @kind object;
  #L13b09a.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L13b09e.  if v1 == 0 then goto L13b0b0;
  #L13b0a2.  v0:= (`java.lang.Class`) v0 @kind object;
  #L13b0a6.  call temp:= `noneOf`(v0) @signature `Ljava/util/EnumSet;.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L13b0ac.  v0:= temp @kind object;
  #L13b0ae.  return v0 @kind object;
  #L13b0b0.  v0:= new `com.b.a.m`;
  #L13b0b4.  v1:= new `java.lang.StringBuilder`;
  #L13b0b8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13b0be.  v2:= "Invalid EnumSet type: " @kind object;
  #L13b0c2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b0c8.  v1:= temp @kind object;
  #L13b0ca.  v2:= v3.`com.b.a.b.c$10.a` @type ^`java.lang.reflect.Type` @kind object;
  #L13b0ce.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b0d4.  v2:= temp @kind object;
  #L13b0d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b0dc.  v1:= temp @kind object;
  #L13b0de.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b0e4.  v1:= temp @kind object;
  #L13b0e6.  call `<init>`(v0, v1) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b0ec.  throw v0;
  #L13b0ee.  v0:= new `com.b.a.m`;
  #L13b0f2.  v1:= new `java.lang.StringBuilder`;
  #L13b0f6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13b0fc.  v2:= "Invalid EnumSet type: " @kind object;
  #L13b100.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b106.  v1:= temp @kind object;
  #L13b108.  v2:= v3.`com.b.a.b.c$10.a` @type ^`java.lang.reflect.Type` @kind object;
  #L13b10c.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b112.  v2:= temp @kind object;
  #L13b114.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13b11a.  v1:= temp @kind object;
  #L13b11c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13b122.  v1:= temp @kind object;
  #L13b124.  call `<init>`(v0, v1) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b12a.  throw v0;
}

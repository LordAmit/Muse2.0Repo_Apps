record `com.b.a.b.a.n$25` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `java.lang.Class` `com.b.a.b.a.n$25.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.n$25.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.n$25` v0 @kind this, `java.lang.Class` v1 @kind object, `com.b.a.v` v2 @kind object) @signature `Lcom/b/a/b/a/n$25;.<init>:(Ljava/lang/Class;Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L138b84.  v0.`com.b.a.b.a.n$25.a` @type ^`java.lang.Class` := v1 @kind object;
  #L138b88.  v0.`com.b.a.b.a.n$25.b` @type ^`com.b.a.v` := v2 @kind object;
  #L138b8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L138b92.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.n$25` v2 @kind this, `com.b.a.f` v3 @kind object, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/a/n$25;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138ba4.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L138baa.  v0:= temp @kind object;
  #L138bac.  v1:= v2.`com.b.a.b.a.n$25.a` @type ^`java.lang.Class` @kind object;
  #L138bb0.  if v0 != v1 then goto L138bba;
  #L138bb4.  v0:= v2.`com.b.a.b.a.n$25.b` @type ^`com.b.a.v` @kind object;
  #L138bb8.  return v0 @kind object;
  #L138bba.  v0:= 0I;
  #L138bbc.  goto L138bb8;
}
procedure `java.lang.String` `toString`(`com.b.a.b.a.n$25` v2 @kind this) @signature `Lcom/b/a/b/a/n$25;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138bd0.  v0:= new `java.lang.StringBuilder`;
  #L138bd4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L138bda.  v1:= "Factory[type=" @kind object;
  #L138bde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138be4.  v0:= temp @kind object;
  #L138be6.  v1:= v2.`com.b.a.b.a.n$25.a` @type ^`java.lang.Class` @kind object;
  #L138bea.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L138bf0.  v1:= temp @kind object;
  #L138bf2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138bf8.  v0:= temp @kind object;
  #L138bfa.  v1:= ",adapter=" @kind object;
  #L138bfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138c04.  v0:= temp @kind object;
  #L138c06.  v1:= v2.`com.b.a.b.a.n$25.b` @type ^`com.b.a.v` @kind object;
  #L138c0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138c10.  v0:= temp @kind object;
  #L138c12.  v1:= "]" @kind object;
  #L138c16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138c1c.  v0:= temp @kind object;
  #L138c1e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L138c24.  v0:= temp @kind object;
  #L138c26.  return v0 @kind object;
}

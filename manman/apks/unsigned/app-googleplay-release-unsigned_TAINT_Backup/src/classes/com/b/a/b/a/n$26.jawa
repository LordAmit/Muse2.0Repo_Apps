record `com.b.a.b.a.n$26` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `java.lang.Class` `com.b.a.b.a.n$26.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Class` `com.b.a.b.a.n$26.b` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.n$26.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.n$26` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.b.a.v` v3 @kind object) @signature `Lcom/b/a/b/a/n$26;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L138c38.  v0.`com.b.a.b.a.n$26.a` @type ^`java.lang.Class` := v1 @kind object;
  #L138c3c.  v0.`com.b.a.b.a.n$26.b` @type ^`java.lang.Class` := v2 @kind object;
  #L138c40.  v0.`com.b.a.b.a.n$26.c` @type ^`com.b.a.v` := v3 @kind object;
  #L138c44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L138c4a.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.n$26` v2 @kind this, `com.b.a.f` v3 @kind object, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/a/n$26;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138c5c.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L138c62.  v0:= temp @kind object;
  #L138c64.  v1:= v2.`com.b.a.b.a.n$26.a` @type ^`java.lang.Class` @kind object;
  #L138c68.  if v0 == v1 then goto L138c74;
  #L138c6c.  v1:= v2.`com.b.a.b.a.n$26.b` @type ^`java.lang.Class` @kind object;
  #L138c70.  if v0 != v1 then goto L138c7a;
  #L138c74.  v0:= v2.`com.b.a.b.a.n$26.c` @type ^`com.b.a.v` @kind object;
  #L138c78.  return v0 @kind object;
  #L138c7a.  v0:= 0I;
  #L138c7c.  goto L138c78;
}
procedure `java.lang.String` `toString`(`com.b.a.b.a.n$26` v2 @kind this) @signature `Lcom/b/a/b/a/n$26;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138c90.  v0:= new `java.lang.StringBuilder`;
  #L138c94.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L138c9a.  v1:= "Factory[type=" @kind object;
  #L138c9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138ca4.  v0:= temp @kind object;
  #L138ca6.  v1:= v2.`com.b.a.b.a.n$26.b` @type ^`java.lang.Class` @kind object;
  #L138caa.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L138cb0.  v1:= temp @kind object;
  #L138cb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138cb8.  v0:= temp @kind object;
  #L138cba.  v1:= "+" @kind object;
  #L138cbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138cc4.  v0:= temp @kind object;
  #L138cc6.  v1:= v2.`com.b.a.b.a.n$26.a` @type ^`java.lang.Class` @kind object;
  #L138cca.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L138cd0.  v1:= temp @kind object;
  #L138cd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138cd8.  v0:= temp @kind object;
  #L138cda.  v1:= ",adapter=" @kind object;
  #L138cde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138ce4.  v0:= temp @kind object;
  #L138ce6.  v1:= v2.`com.b.a.b.a.n$26.c` @type ^`com.b.a.v` @kind object;
  #L138cea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138cf0.  v0:= temp @kind object;
  #L138cf2.  v1:= "]" @kind object;
  #L138cf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138cfc.  v0:= temp @kind object;
  #L138cfe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L138d04.  v0:= temp @kind object;
  #L138d06.  return v0 @kind object;
}

record `com.b.a.f$3` @kind class @AccessFlag  extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.f$3.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.f$3` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/f$3;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13da78.  v0.`com.b.a.f$3.a` @type ^`com.b.a.f` := v1 @kind object;
  #L13da7c.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L13da82.  return @kind void;
}
procedure `java.lang.Float` `a`(`com.b.a.f$3` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/a;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13da94.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L13da9a.  v0:= temp @kind object;
  #L13da9c.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L13daa0.  if v0 != v1 then goto L13daae;
  #L13daa4.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L13daaa.  v0:= 0I;
  #L13daac.  return v0 @kind object;
  #L13daae.  call temp:= `k`(v3) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L13dab4.  v0:= temp @kind wide;
  #L13dab6.  v0:= (`float`) v0 @kind d2f;
  #L13dab8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L13dabe.  v0:= temp @kind object;
  #L13dac0.  goto L13daac;
}
procedure `void` `a`(`com.b.a.f$3` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Number` v4 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13dad4.  if v4 != 0 then goto L13dae0;
  #L13dad8.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L13dade.  return @kind void;
  #L13dae0.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L13dae6.  v0:= temp;
  #L13dae8.  v0:= (`double`) v0 @kind f2d;
  #L13daea.  call `a`(v0) @signature `Lcom/b/a/f;.a:(D)V` @kind static;
  #L13daf0.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/Number;)Lcom/b/a/d/c;` @kind virtual;
  #L13daf6.  goto L13dade;
}
procedure `void` `a`(`com.b.a.f$3` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L13db08.  v2:= (`java.lang.Number`) v2 @kind object;
  #L13db0c.  call `a`(v0, v1, v2) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @kind virtual;
  #L13db12.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$3` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$3;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L13db24.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/a;)Ljava/lang/Float;` @kind virtual;
  #L13db2a.  v0:= temp @kind object;
  #L13db2c.  return v0 @kind object;
}

record `a.a.c.b` @kind class @AccessFlag PUBLIC_FINAL extends `a.s` @kind interface {
  `boolean` `a.a.c.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.c.b` v0 @kind this, `boolean` v1 ) @signature `La/a/c/b;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L077758.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07775e.  v0.`a.a.c.b.a` @type ^`boolean` := v1 @kind boolean;
  #L077762.  return @kind void;
}
procedure `a.z` `a`(`a.a.c.b` v8 @kind this, `a.s$a` v9 @kind object) @signature `La/a/c/b;.a:(La/s$a;)La/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L077774.  v0:= v9 @kind object;
  #L077776.  v0:= (`a.a.c.g`) v0 @kind object;
  #L07777a.  call temp:= `c`(v0) @signature `La/a/c/g;.c:()La/a/c/c;` @kind virtual;
  #L077780.  v1:= temp @kind object;
  #L077782.  v0:= v9 @kind object;
  #L077784.  v0:= (`a.a.c.g`) v0 @kind object;
  #L077788.  call temp:= `b`(v0) @signature `La/a/c/g;.b:()La/a/b/g;` @kind virtual;
  #L07778e.  v2:= temp @kind object;
  #L077790.  call temp:= `a`(v9) @signature `La/s$a;.a:()La/x;` @kind interface;
  #L077796.  v3:= temp @kind object;
  #L077798.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L07779e.  v4:= temp @kind wide;
  #L0777a0.  call `a`(v1, v3) @signature `La/a/c/c;.a:(La/x;)V` @kind interface;
  #L0777a6.  v0:= 0I;
  #L0777a8.  call temp:= `b`(v3) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L0777ae.  v6:= temp @kind object;
  #L0777b0.  call temp:= `c`(v6) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L0777b6.  v6:= temp;
  #L0777b8.  if v6 == 0 then goto L07782c;
  #L0777bc.  call temp:= `d`(v3) @signature `La/x;.d:()La/y;` @kind virtual;
  #L0777c2.  v6:= temp @kind object;
  #L0777c4.  if v6 == 0 then goto L07782c;
  #L0777c8.  v6:= "100-continue" @kind object;
  #L0777cc.  v7:= "Expect" @kind object;
  #L0777d0.  call temp:= `a`(v3, v7) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L0777d6.  v7:= temp @kind object;
  #L0777d8.  call temp:= `equalsIgnoreCase`(v6, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0777de.  v6:= temp;
  #L0777e0.  if v6 == 0 then goto L0777f4;
  #L0777e4.  call `a`(v1) @signature `La/a/c/c;.a:()V` @kind interface;
  #L0777ea.  v0:= 1I;
  #L0777ec.  call temp:= `a`(v1, v0) @signature `La/a/c/c;.a:(Z)La/z$a;` @kind interface;
  #L0777f2.  v0:= temp @kind object;
  #L0777f4.  if v0 != 0 then goto L07782c;
  #L0777f8.  call temp:= `d`(v3) @signature `La/x;.d:()La/y;` @kind virtual;
  #L0777fe.  v6:= temp @kind object;
  #L077800.  call temp:= `b`(v6) @signature `La/y;.b:()J` @kind virtual;
  #L077806.  v6:= temp @kind wide;
  #L077808.  call temp:= `a`(v1, v3, v6) @signature `La/a/c/c;.a:(La/x;J)Lb/q;` @kind interface;
  #L07780e.  v6:= temp @kind object;
  #L077810.  call temp:= `a`(v6) @signature `Lb/k;.a:(Lb/q;)Lb/d;` @kind static;
  #L077816.  v6:= temp @kind object;
  #L077818.  call temp:= `d`(v3) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07781e.  v7:= temp @kind object;
  #L077820.  call `a`(v7, v6) @signature `La/y;.a:(Lb/d;)V` @kind virtual;
  #L077826.  call `close`(v6) @signature `Lb/d;.close:()V` @kind interface;
  #L07782c.  call `b`(v1) @signature `La/a/c/c;.b:()V` @kind interface;
  #L077832.  if v0 != 0 then goto L077840;
  #L077836.  v0:= 0I;
  #L077838.  call temp:= `a`(v1, v0) @signature `La/a/c/c;.a:(Z)La/z$a;` @kind interface;
  #L07783e.  v0:= temp @kind object;
  #L077840.  call temp:= `a`(v0, v3) @signature `La/z$a;.a:(La/x;)La/z$a;` @kind virtual;
  #L077846.  v0:= temp @kind object;
  #L077848.  call temp:= `b`(v2) @signature `La/a/b/g;.b:()La/a/b/c;` @kind virtual;
  #L07784e.  v3:= temp @kind object;
  #L077850.  call temp:= `c`(v3) @signature `La/a/b/c;.c:()La/p;` @kind virtual;
  #L077856.  v3:= temp @kind object;
  #L077858.  call temp:= `a`(v0, v3) @signature `La/z$a;.a:(La/p;)La/z$a;` @kind virtual;
  #L07785e.  v0:= temp @kind object;
  #L077860.  call temp:= `a`(v0, v4) @signature `La/z$a;.a:(J)La/z$a;` @kind virtual;
  #L077866.  v0:= temp @kind object;
  #L077868.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L07786e.  v4:= temp @kind wide;
  #L077870.  call temp:= `b`(v0, v4) @signature `La/z$a;.b:(J)La/z$a;` @kind virtual;
  #L077876.  v0:= temp @kind object;
  #L077878.  call temp:= `a`(v0) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07787e.  v0:= temp @kind object;
  #L077880.  call temp:= `b`(v0) @signature `La/z;.b:()I` @kind virtual;
  #L077886.  v3:= temp;
  #L077888.  v4:= v8.`a.a.c.b.a` @type ^`boolean` @kind boolean;
  #L07788c.  if v4 == 0 then goto L07797c;
  #L077890.  v4:= 101I;
  #L077894.  if v3 != v4 then goto L07797c;
  #L077898.  call temp:= `g`(v0) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L07789e.  v0:= temp @kind object;
  #L0778a0.  v1:= `@@a.a.c.c` @type ^`a.aa` @kind object;
  #L0778a4.  call temp:= `a`(v0, v1) @signature `La/z$a;.a:(La/aa;)La/z$a;` @kind virtual;
  #L0778aa.  v0:= temp @kind object;
  #L0778ac.  call temp:= `a`(v0) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L0778b2.  v0:= temp @kind object;
  #L0778b4.  v1:= "close" @kind object;
  #L0778b8.  call temp:= `a`(v0) @signature `La/z;.a:()La/x;` @kind virtual;
  #L0778be.  v4:= temp @kind object;
  #L0778c0.  v5:= "Connection" @kind object;
  #L0778c4.  call temp:= `a`(v4, v5) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L0778ca.  v4:= temp @kind object;
  #L0778cc.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0778d2.  v1:= temp;
  #L0778d4.  if v1 != 0 then goto L0778f4;
  #L0778d8.  v1:= "close" @kind object;
  #L0778dc.  v4:= "Connection" @kind object;
  #L0778e0.  call temp:= `a`(v0, v4) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L0778e6.  v4:= temp @kind object;
  #L0778e8.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0778ee.  v1:= temp;
  #L0778f0.  if v1 == 0 then goto L0778fa;
  #L0778f4.  call `d`(v2) @signature `La/a/b/g;.d:()V` @kind virtual;
  #L0778fa.  v1:= 204I;
  #L0778fe.  if v3 == v1 then goto L07790a;
  #L077902.  v1:= 205I;
  #L077906.  if v3 != v1 then goto L07799e;
  #L07790a.  call temp:= `f`(v0) @signature `La/z;.f:()La/aa;` @kind virtual;
  #L077910.  v1:= temp @kind object;
  #L077912.  call temp:= `b`(v1) @signature `La/aa;.b:()J` @kind virtual;
  #L077918.  v4:= temp @kind wide;
  #L07791a.  v6:= 0L;
  #L07791e.  v1:= lcmp(v4, v6);
  #L077922.  if v1 <= 0 then goto L07799e;
  #L077926.  v1:= new `java.net.ProtocolException`;
  #L07792a.  v2:= new `java.lang.StringBuilder`;
  #L07792e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077934.  v4:= "HTTP " @kind object;
  #L077938.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07793e.  v2:= temp @kind object;
  #L077940.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L077946.  v2:= temp @kind object;
  #L077948.  v3:= " had non-zero Content-Length: " @kind object;
  #L07794c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077952.  v2:= temp @kind object;
  #L077954.  call temp:= `f`(v0) @signature `La/z;.f:()La/aa;` @kind virtual;
  #L07795a.  v0:= temp @kind object;
  #L07795c.  call temp:= `b`(v0) @signature `La/aa;.b:()J` @kind virtual;
  #L077962.  v4:= temp @kind wide;
  #L077964.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L07796a.  v0:= temp @kind object;
  #L07796c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077972.  v0:= temp @kind object;
  #L077974.  call `<init>`(v1, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07797a.  throw v1;
  #L07797c.  call temp:= `g`(v0) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L077982.  v4:= temp @kind object;
  #L077984.  call temp:= `a`(v1, v0) @signature `La/a/c/c;.a:(La/z;)La/aa;` @kind interface;
  #L07798a.  v0:= temp @kind object;
  #L07798c.  call temp:= `a`(v4, v0) @signature `La/z$a;.a:(La/aa;)La/z$a;` @kind virtual;
  #L077992.  v0:= temp @kind object;
  #L077994.  call temp:= `a`(v0) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07799a.  v0:= temp @kind object;
  #L07799c.  goto L0778b4;
  #L07799e.  return v0 @kind object;
}

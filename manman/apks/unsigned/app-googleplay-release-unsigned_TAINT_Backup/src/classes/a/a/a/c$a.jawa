record `a.a.a.c$a` @kind class @AccessFlag PUBLIC {
  `long` `a.a.a.c$a.a` @AccessFlag FINAL;
  `a.x` `a.a.a.c$a.b` @AccessFlag FINAL;
  `a.z` `a.a.a.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `a.a.a.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `a.a.a.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `a.a.a.c$a.h` @AccessFlag PRIVATE;
  `long` `a.a.a.c$a.i` @AccessFlag PRIVATE;
  `long` `a.a.a.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `a.a.a.c$a.k` @AccessFlag PRIVATE;
  `int` `a.a.a.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.a.c$a` v7 @kind this, `long` v8 , `a.x` v10 @kind object, `a.z` v11 @kind object) @signature `La/a/a/c$a;.<init>:(JLa/x;La/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L0746f8.  v6:= -1I;
  #L0746fa.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L074700.  v7.`a.a.a.c$a.l` @type ^`int` := v6;
  #L074704.  v7.`a.a.a.c$a.a` @type ^`long` := v8 @kind wide;
  #L074708.  v7.`a.a.a.c$a.b` @type ^`a.x` := v10 @kind object;
  #L07470c.  v7.`a.a.a.c$a.c` @type ^`a.z` := v11 @kind object;
  #L074710.  if v11 == 0 then goto L0747ec;
  #L074714.  call temp:= `i`(v11) @signature `La/z;.i:()J` @kind virtual;
  #L07471a.  v0:= temp @kind wide;
  #L07471c.  v7.`a.a.a.c$a.i` @type ^`long` := v0 @kind wide;
  #L074720.  call temp:= `j`(v11) @signature `La/z;.j:()J` @kind virtual;
  #L074726.  v0:= temp @kind wide;
  #L074728.  v7.`a.a.a.c$a.j` @type ^`long` := v0 @kind wide;
  #L07472c.  call temp:= `e`(v11) @signature `La/z;.e:()La/q;` @kind virtual;
  #L074732.  v1:= temp @kind object;
  #L074734.  v0:= 0I;
  #L074736.  call temp:= `a`(v1) @signature `La/q;.a:()I` @kind virtual;
  #L07473c.  v2:= temp;
  #L07473e.  if v0 >= v2 then goto L0747ec;
  #L074742.  call temp:= `a`(v1, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L074748.  v3:= temp @kind object;
  #L07474a.  call temp:= `b`(v1, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L074750.  v4:= temp @kind object;
  #L074752.  v5:= "Date" @kind object;
  #L074756.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07475c.  v5:= temp;
  #L07475e.  if v5 == 0 then goto L074778;
  #L074762.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L074768.  v3:= temp @kind object;
  #L07476a.  v7.`a.a.a.c$a.d` @type ^`java.util.Date` := v3 @kind object;
  #L07476e.  v7.`a.a.a.c$a.e` @type ^`java.lang.String` := v4 @kind object;
  #L074772.  v0:= v0 + 1;
  #L074776.  goto L07473e;
  #L074778.  v5:= "Expires" @kind object;
  #L07477c.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L074782.  v5:= temp;
  #L074784.  if v5 == 0 then goto L074796;
  #L074788.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L07478e.  v3:= temp @kind object;
  #L074790.  v7.`a.a.a.c$a.h` @type ^`java.util.Date` := v3 @kind object;
  #L074794.  goto L074772;
  #L074796.  v5:= "Last-Modified" @kind object;
  #L07479a.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0747a0.  v5:= temp;
  #L0747a2.  if v5 == 0 then goto L0747b8;
  #L0747a6.  call temp:= `a`(v4) @signature `La/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L0747ac.  v3:= temp @kind object;
  #L0747ae.  v7.`a.a.a.c$a.f` @type ^`java.util.Date` := v3 @kind object;
  #L0747b2.  v7.`a.a.a.c$a.g` @type ^`java.lang.String` := v4 @kind object;
  #L0747b6.  goto L074772;
  #L0747b8.  v5:= "ETag" @kind object;
  #L0747bc.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0747c2.  v5:= temp;
  #L0747c4.  if v5 == 0 then goto L0747ce;
  #L0747c8.  v7.`a.a.a.c$a.k` @type ^`java.lang.String` := v4 @kind object;
  #L0747cc.  goto L074772;
  #L0747ce.  v5:= "Age" @kind object;
  #L0747d2.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0747d8.  v3:= temp;
  #L0747da.  if v3 == 0 then goto L074772;
  #L0747de.  call temp:= `b`(v4, v6) @signature `La/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L0747e4.  v3:= temp;
  #L0747e6.  v7.`a.a.a.c$a.l` @type ^`int` := v3;
  #L0747ea.  goto L074772;
  #L0747ec.  return @kind void;
}
procedure `boolean` `a`(`a.x` v1 @kind object) @signature `La/a/a/c$a;.a:(La/x;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L074800.  v0:= "If-Modified-Since" @kind object;
  #L074804.  call temp:= `a`(v1, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07480a.  v0:= temp @kind object;
  #L07480c.  if v0 != 0 then goto L074820;
  #L074810.  v0:= "If-None-Match" @kind object;
  #L074814.  call temp:= `a`(v1, v0) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07481a.  v0:= temp @kind object;
  #L07481c.  if v0 == 0 then goto L074824;
  #L074820.  v0:= 1I;
  #L074822.  return v0;
  #L074824.  v0:= 0I;
  #L074826.  goto L074822;
}
procedure `a.a.a.c` `b`(`a.a.a.c$a` v14 @kind this) @signature `La/a/a/c$a;.b:()La/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L074838.  v4:= 0L;
  #L07483c.  v13:= -1I;
  #L07483e.  v12:= 0I;
  #L074840.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L074844.  if v0 != 0 then goto L074858;
  #L074848.  v0:= new `a.a.a.c`;
  #L07484c.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L074850.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L074856.  return v0 @kind object;
  #L074858.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L07485c.  call temp:= `g`(v0) @signature `La/x;.g:()Z` @kind virtual;
  #L074862.  v0:= temp;
  #L074864.  if v0 == 0 then goto L074888;
  #L074868.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07486c.  call temp:= `d`(v0) @signature `La/z;.d:()La/p;` @kind virtual;
  #L074872.  v0:= temp @kind object;
  #L074874.  if v0 != 0 then goto L074888;
  #L074878.  v0:= new `a.a.a.c`;
  #L07487c.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L074880.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L074886.  goto L074856;
  #L074888.  v0:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L07488c.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L074890.  call temp:= `a`(v0, v1) @signature `La/a/a/c;.a:(La/z;La/x;)Z` @kind static;
  #L074896.  v0:= temp;
  #L074898.  if v0 != 0 then goto L0748ac;
  #L07489c.  v0:= new `a.a.a.c`;
  #L0748a0.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L0748a4.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L0748aa.  goto L074856;
  #L0748ac.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L0748b0.  call temp:= `f`(v0) @signature `La/x;.f:()La/d;` @kind virtual;
  #L0748b6.  v6:= temp @kind object;
  #L0748b8.  call temp:= `a`(v6) @signature `La/d;.a:()Z` @kind virtual;
  #L0748be.  v0:= temp;
  #L0748c0.  if v0 != 0 then goto L0748d4;
  #L0748c4.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L0748c8.  call temp:= `a`(v0) @signature `La/a/a/c$a;.a:(La/x;)Z` @kind static;
  #L0748ce.  v0:= temp;
  #L0748d0.  if v0 == 0 then goto L0748e4;
  #L0748d4.  v0:= new `a.a.a.c`;
  #L0748d8.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L0748dc.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L0748e2.  goto L074856;
  #L0748e4.  call temp:= `d`(v14) @signature `La/a/a/c$a;.d:()J` @kind direct;
  #L0748ea.  v8:= temp @kind wide;
  #L0748ec.  call temp:= `c`(v14) @signature `La/a/a/c$a;.c:()J` @kind direct;
  #L0748f2.  v0:= temp @kind wide;
  #L0748f4.  call temp:= `c`(v6) @signature `La/d;.c:()I` @kind virtual;
  #L0748fa.  v2:= temp;
  #L0748fc.  if v2 == v13 then goto L07491e;
  #L074900.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L074904.  call temp:= `c`(v6) @signature `La/d;.c:()I` @kind virtual;
  #L07490a.  v3:= temp;
  #L07490c.  v10:= (`long`) v3 @kind i2l;
  #L07490e.  call temp:= `toMillis`(v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L074914.  v2:= temp @kind wide;
  #L074916.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L07491c.  v0:= temp @kind wide;
  #L07491e.  call temp:= `h`(v6) @signature `La/d;.h:()I` @kind virtual;
  #L074924.  v2:= temp;
  #L074926.  if v2 == v13 then goto L074a90;
  #L07492a.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07492e.  call temp:= `h`(v6) @signature `La/d;.h:()I` @kind virtual;
  #L074934.  v3:= temp;
  #L074936.  v10:= (`long`) v3 @kind i2l;
  #L074938.  call temp:= `toMillis`(v2, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L07493e.  v2:= temp @kind wide;
  #L074940.  v7:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L074944.  call temp:= `h`(v7) @signature `La/z;.h:()La/d;` @kind virtual;
  #L07494a.  v7:= temp @kind object;
  #L07494c.  call temp:= `f`(v7) @signature `La/d;.f:()Z` @kind virtual;
  #L074952.  v10:= temp;
  #L074954.  if v10 != 0 then goto L07497a;
  #L074958.  call temp:= `g`(v6) @signature `La/d;.g:()I` @kind virtual;
  #L07495e.  v10:= temp;
  #L074960.  if v10 == v13 then goto L07497a;
  #L074964.  v4:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L074968.  call temp:= `g`(v6) @signature `La/d;.g:()I` @kind virtual;
  #L07496e.  v5:= temp;
  #L074970.  v10:= (`long`) v5 @kind i2l;
  #L074972.  call temp:= `toMillis`(v4, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L074978.  v4:= temp @kind wide;
  #L07497a.  call temp:= `a`(v7) @signature `La/d;.a:()Z` @kind virtual;
  #L074980.  v6:= temp;
  #L074982.  if v6 != 0 then goto L0749f6;
  #L074986.  v6:= v8 + v2 @kind long;
  #L07498a.  v4:= v4 + v0 @kind long;
  #L07498c.  v4:= lcmp(v6, v4);
  #L074990.  if v4 >= 0 then goto L0749f6;
  #L074994.  v4:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L074998.  call temp:= `g`(v4) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L07499e.  v4:= temp @kind object;
  #L0749a0.  v2:= v2 + v8 @kind long;
  #L0749a2.  v0:= lcmp(v2, v0);
  #L0749a6.  if v0 < 0 then goto L0749b8;
  #L0749aa.  v0:= "Warning" @kind object;
  #L0749ae.  v1:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L0749b2.  call temp:= `a`(v4, v0, v1) @signature `La/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/z$a;` @kind virtual;
  #L0749b8.  v0:= 86400000L;
  #L0749be.  v0:= lcmp(v8, v0);
  #L0749c2.  if v0 <= 0 then goto L0749e0;
  #L0749c6.  call temp:= `e`(v14) @signature `La/a/a/c$a;.e:()Z` @kind direct;
  #L0749cc.  v0:= temp;
  #L0749ce.  if v0 == 0 then goto L0749e0;
  #L0749d2.  v0:= "Warning" @kind object;
  #L0749d6.  v1:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L0749da.  call temp:= `a`(v4, v0, v1) @signature `La/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/z$a;` @kind virtual;
  #L0749e0.  v0:= new `a.a.a.c`;
  #L0749e4.  call temp:= `a`(v4) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L0749ea.  v1:= temp @kind object;
  #L0749ec.  call `<init>`(v0, v12, v1) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L0749f2.  goto L074856;
  #L0749f6.  v0:= v14.`a.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L0749fa.  if v0 == 0 then goto L074a5a;
  #L0749fe.  v1:= "If-None-Match" @kind object;
  #L074a02.  v0:= v14.`a.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L074a06.  v2:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L074a0a.  call temp:= `c`(v2) @signature `La/x;.c:()La/q;` @kind virtual;
  #L074a10.  v2:= temp @kind object;
  #L074a12.  call temp:= `b`(v2) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L074a18.  v2:= temp @kind object;
  #L074a1a.  v3:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L074a1e.  call `a`(v3, v2, v1, v0) @signature `La/a/a;.a:(La/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L074a24.  v0:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L074a28.  call temp:= `e`(v0) @signature `La/x;.e:()La/x$a;` @kind virtual;
  #L074a2e.  v0:= temp @kind object;
  #L074a30.  call temp:= `a`(v2) @signature `La/q$a;.a:()La/q;` @kind virtual;
  #L074a36.  v1:= temp @kind object;
  #L074a38.  call temp:= `a`(v0, v1) @signature `La/x$a;.a:(La/q;)La/x$a;` @kind virtual;
  #L074a3e.  v0:= temp @kind object;
  #L074a40.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L074a46.  v1:= temp @kind object;
  #L074a48.  v0:= new `a.a.a.c`;
  #L074a4c.  v2:= v14.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L074a50.  call `<init>`(v0, v1, v2) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L074a56.  goto L074856;
  #L074a5a.  v0:= v14.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L074a5e.  if v0 == 0 then goto L074a6c;
  #L074a62.  v1:= "If-Modified-Since" @kind object;
  #L074a66.  v0:= v14.`a.a.a.c$a.g` @type ^`java.lang.String` @kind object;
  #L074a6a.  goto L074a06;
  #L074a6c.  v0:= v14.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L074a70.  if v0 == 0 then goto L074a7e;
  #L074a74.  v1:= "If-Modified-Since" @kind object;
  #L074a78.  v0:= v14.`a.a.a.c$a.e` @type ^`java.lang.String` @kind object;
  #L074a7c.  goto L074a06;
  #L074a7e.  v0:= new `a.a.a.c`;
  #L074a82.  v1:= v14.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L074a86.  call `<init>`(v0, v1, v12) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L074a8c.  goto L074856;
  #L074a90.  v2:= v4 @kind wide;
  #L074a92.  goto L074940;
}
procedure `long` `c`(`a.a.a.c$a` v6 @kind this) @signature `La/a/a/c$a;.c:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L074aa8.  v2:= 0L;
  #L074aac.  v0:= v6.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L074ab0.  call temp:= `h`(v0) @signature `La/z;.h:()La/d;` @kind virtual;
  #L074ab6.  v0:= temp @kind object;
  #L074ab8.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L074abe.  v1:= temp;
  #L074ac0.  v4:= -1I;
  #L074ac2.  if v1 == v4 then goto L074ade;
  #L074ac6.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L074aca.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L074ad0.  v0:= temp;
  #L074ad2.  v2:= (`long`) v0 @kind i2l;
  #L074ad4.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L074ada.  v2:= temp @kind wide;
  #L074adc.  return v2 @kind wide;
  #L074ade.  v0:= v6.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L074ae2.  if v0 == 0 then goto L074b20;
  #L074ae6.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L074aea.  if v0 == 0 then goto L074b16;
  #L074aee.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L074af2.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L074af8.  v0:= temp @kind wide;
  #L074afa.  v4:= v6.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L074afe.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L074b04.  v4:= temp @kind wide;
  #L074b06.  v0:= v4 - v0 @kind long;
  #L074b0a.  v4:= lcmp(v0, v2);
  #L074b0e.  if v4 <= 0 then goto L074b1c;
  #L074b12.  v2:= v0 @kind wide;
  #L074b14.  goto L074adc;
  #L074b16.  v0:= v6.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L074b1a.  goto L074afa;
  #L074b1c.  v0:= v2 @kind wide;
  #L074b1e.  goto L074b12;
  #L074b20.  v0:= v6.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L074b24.  if v0 == 0 then goto L074adc;
  #L074b28.  v0:= v6.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L074b2c.  call temp:= `a`(v0) @signature `La/z;.a:()La/x;` @kind virtual;
  #L074b32.  v0:= temp @kind object;
  #L074b34.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L074b3a.  v0:= temp @kind object;
  #L074b3c.  call temp:= `k`(v0) @signature `La/r;.k:()Ljava/lang/String;` @kind virtual;
  #L074b42.  v0:= temp @kind object;
  #L074b44.  if v0 != 0 then goto L074adc;
  #L074b48.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L074b4c.  if v0 == 0 then goto L074b7c;
  #L074b50.  v0:= v6.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L074b54.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L074b5a.  v0:= temp @kind wide;
  #L074b5c.  v4:= v6.`a.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L074b60.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L074b66.  v4:= temp @kind wide;
  #L074b68.  v0:= v0 - v4 @kind long;
  #L074b6a.  v4:= lcmp(v0, v2);
  #L074b6e.  if v4 <= 0 then goto L074adc;
  #L074b72.  v2:= 10L;
  #L074b76.  v2:= v0 / v2 @kind long;
  #L074b7a.  goto L074adc;
  #L074b7c.  v0:= v6.`a.a.a.c$a.i` @type ^`long` @kind wide;
  #L074b80.  goto L074b5c;
}
procedure `long` `d`(`a.a.a.c$a` v8 @kind this) @signature `La/a/a/c$a;.d:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L074b94.  v0:= 0L;
  #L074b98.  v2:= v8.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L074b9c.  if v2 == 0 then goto L074bba;
  #L074ba0.  v2:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L074ba4.  v4:= v8.`a.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L074ba8.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L074bae.  v4:= temp @kind wide;
  #L074bb0.  v2:= v2 - v4 @kind long;
  #L074bb2.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L074bb8.  v0:= temp @kind wide;
  #L074bba.  v2:= v8.`a.a.a.c$a.l` @type ^`int`;
  #L074bbe.  v3:= -1I;
  #L074bc0.  if v2 == v3 then goto L074bde;
  #L074bc4.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L074bc8.  v3:= v8.`a.a.a.c$a.l` @type ^`int`;
  #L074bcc.  v4:= (`long`) v3 @kind i2l;
  #L074bce.  call temp:= `toMillis`(v2, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L074bd4.  v2:= temp @kind wide;
  #L074bd6.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L074bdc.  v0:= temp @kind wide;
  #L074bde.  v2:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L074be2.  v4:= v8.`a.a.a.c$a.i` @type ^`long` @kind wide;
  #L074be6.  v2:= v2 - v4 @kind long;
  #L074be8.  v4:= v8.`a.a.a.c$a.a` @type ^`long` @kind wide;
  #L074bec.  v6:= v8.`a.a.a.c$a.j` @type ^`long` @kind wide;
  #L074bf0.  v4:= v4 - v6 @kind long;
  #L074bf2.  v0:= v0 + v2 @kind long;
  #L074bf4.  v0:= v0 + v4 @kind long;
  #L074bf6.  return v0 @kind wide;
}
procedure `boolean` `e`(`a.a.a.c$a` v2 @kind this) @signature `La/a/a/c$a;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L074c08.  v0:= v2.`a.a.a.c$a.c` @type ^`a.z` @kind object;
  #L074c0c.  call temp:= `h`(v0) @signature `La/z;.h:()La/d;` @kind virtual;
  #L074c12.  v0:= temp @kind object;
  #L074c14.  call temp:= `c`(v0) @signature `La/d;.c:()I` @kind virtual;
  #L074c1a.  v0:= temp;
  #L074c1c.  v1:= -1I;
  #L074c1e.  if v0 != v1 then goto L074c2e;
  #L074c22.  v0:= v2.`a.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L074c26.  if v0 != 0 then goto L074c2e;
  #L074c2a.  v0:= 1I;
  #L074c2c.  return v0;
  #L074c2e.  v0:= 0I;
  #L074c30.  goto L074c2c;
}
procedure `a.a.a.c` `a`(`a.a.a.c$a` v3 @kind this) @signature `La/a/a/c$a;.a:()La/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L074c44.  v2:= 0I;
  #L074c46.  call temp:= `b`(v3) @signature `La/a/a/c$a;.b:()La/a/a/c;` @kind direct;
  #L074c4c.  v0:= temp @kind object;
  #L074c4e.  v1:= v0.`a.a.a.c.a` @type ^`a.x` @kind object;
  #L074c52.  if v1 == 0 then goto L074c78;
  #L074c56.  v1:= v3.`a.a.a.c$a.b` @type ^`a.x` @kind object;
  #L074c5a.  call temp:= `f`(v1) @signature `La/x;.f:()La/d;` @kind virtual;
  #L074c60.  v1:= temp @kind object;
  #L074c62.  call temp:= `i`(v1) @signature `La/d;.i:()Z` @kind virtual;
  #L074c68.  v1:= temp;
  #L074c6a.  if v1 == 0 then goto L074c78;
  #L074c6e.  v0:= new `a.a.a.c`;
  #L074c72.  call `<init>`(v0, v2, v2) @signature `La/a/a/c;.<init>:(La/x;La/z;)V` @kind direct;
  #L074c78.  return v0 @kind object;
}

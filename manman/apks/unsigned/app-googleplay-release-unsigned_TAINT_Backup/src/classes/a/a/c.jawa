record `a.a.c` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@a.a.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@a.a.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.aa` `@@a.a.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.y` `@@a.a.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@a.a.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.c.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.c.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.c.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `b.f` `@@a.a.c.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@a.a.c.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@a.a.c.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L078f9c.  v2:= 0I;
  #L078f9e.  v1:= 0I;
  #L078fa0.  v0:= new `byte`[v1];
  #L078fa4.  `@@a.a.c.a` @type ^`byte`[] := v0 @kind object;
  #L078fa8.  v0:= new `java.lang.String`[v1];
  #L078fac.  `@@a.a.c.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L078fb0.  v0:= `@@a.a.c.a` @type ^`byte`[] @kind object;
  #L078fb4.  call temp:= `a`(v2, v0) @signature `La/aa;.a:(La/t;[B)La/aa;` @kind static;
  #L078fba.  v0:= temp @kind object;
  #L078fbc.  `@@a.a.c.c` @type ^`a.aa` := v0 @kind object;
  #L078fc0.  v0:= `@@a.a.c.a` @type ^`byte`[] @kind object;
  #L078fc4.  call temp:= `a`(v2, v0) @signature `La/y;.a:(La/t;[B)La/y;` @kind static;
  #L078fca.  v0:= temp @kind object;
  #L078fcc.  `@@a.a.c.d` @type ^`a.y` := v0 @kind object;
  #L078fd0.  v0:= "efbbbf" @kind object;
  #L078fd4.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L078fda.  v0:= temp @kind object;
  #L078fdc.  `@@a.a.c.g` @type ^`b.f` := v0 @kind object;
  #L078fe0.  v0:= "feff" @kind object;
  #L078fe4.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L078fea.  v0:= temp @kind object;
  #L078fec.  `@@a.a.c.h` @type ^`b.f` := v0 @kind object;
  #L078ff0.  v0:= "fffe" @kind object;
  #L078ff4.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L078ffa.  v0:= temp @kind object;
  #L078ffc.  `@@a.a.c.i` @type ^`b.f` := v0 @kind object;
  #L079000.  v0:= "0000ffff" @kind object;
  #L079004.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07900a.  v0:= temp @kind object;
  #L07900c.  `@@a.a.c.j` @type ^`b.f` := v0 @kind object;
  #L079010.  v0:= "ffff0000" @kind object;
  #L079014.  call temp:= `b`(v0) @signature `Lb/f;.b:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07901a.  v0:= temp @kind object;
  #L07901c.  `@@a.a.c.k` @type ^`b.f` := v0 @kind object;
  #L079020.  v0:= "UTF-8" @kind object;
  #L079024.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L07902a.  v0:= temp @kind object;
  #L07902c.  `@@a.a.c.e` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L079030.  v0:= "UTF-16BE" @kind object;
  #L079034.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L07903a.  v0:= temp @kind object;
  #L07903c.  `@@a.a.c.l` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L079040.  v0:= "UTF-16LE" @kind object;
  #L079044.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L07904a.  v0:= temp @kind object;
  #L07904c.  `@@a.a.c.m` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L079050.  v0:= "UTF-32BE" @kind object;
  #L079054.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L07905a.  v0:= temp @kind object;
  #L07905c.  `@@a.a.c.n` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L079060.  v0:= "UTF-32LE" @kind object;
  #L079064.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L07906a.  v0:= temp @kind object;
  #L07906c.  `@@a.a.c.o` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L079070.  v0:= "GMT" @kind object;
  #L079074.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L07907a.  v0:= temp @kind object;
  #L07907c.  `@@a.a.c.f` @type ^`java.util.TimeZone` := v0 @kind object;
  #L079080.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L079084.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L07908a.  v0:= temp @kind object;
  #L07908c.  `@@a.a.c.p` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L079090.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `La/a/c;.a:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0790a4.  v0:= v3;
  #L0790a6.  if v0 >= v4 then goto L0790ba;
  #L0790aa.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0790b0.  v1:= temp;
  #L0790b2.  goto L0790c4;
  #L0790b8.  v4:= v0;
  #L0790ba.  return v4;
  #L0790bc.  v0:= v0 + 1;
  #L0790c0.  goto L0790a6;
  #L0790c2.  
  #L0790c4.  switch v1
                  | 9 => goto L0790bc
                  | 10 => goto L0790bc
                  | 12 => goto L0790bc
                  | 13 => goto L0790bc
                  | 32 => goto L0790bc
                  | else => goto L0790b8;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `char` v5 ) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079100.  v0:= v3;
  #L079102.  if v0 >= v4 then goto L079114;
  #L079106.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L07910c.  v1:= temp;
  #L07910e.  if v1 != v5 then goto L079116;
  #L079112.  v4:= v0;
  #L079114.  return v4;
  #L079116.  v0:= v0 + 1;
  #L07911a.  goto L079102;
}
procedure `int` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `java.lang.String` v6 @kind object) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L07912c.  v0:= v4;
  #L07912e.  if v0 >= v5 then goto L07914a;
  #L079132.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L079138.  v1:= temp;
  #L07913a.  call temp:= `indexOf`(v6, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L079140.  v1:= temp;
  #L079142.  v2:= -1I;
  #L079144.  if v1 == v2 then goto L07914c;
  #L079148.  v5:= v0;
  #L07914a.  return v5;
  #L07914c.  v0:= v0 + 1;
  #L079150.  goto L07912e;
}
procedure `int` `a`(`java.lang.Object`[] v3 @kind object, `java.lang.Object` v4 @kind object) @signature `La/a/c;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L079164.  v0:= 0I;
  #L079166.  v1:= length @variable v3;
  #L079168.  if v0 >= v1 then goto L079184;
  #L07916c.  v2:= v3[v0] @kind object;
  #L079170.  call temp:= `a`(v2, v4) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L079176.  v2:= temp;
  #L079178.  if v2 == 0 then goto L07917e;
  #L07917c.  return v0;
  #L07917e.  v0:= v0 + 1;
  #L079182.  goto L079168;
  #L079184.  v0:= -1I;
  #L079186.  goto L07917c;
}
procedure `java.lang.String` `a`(`a.r` v3 @kind object, `boolean` v4 ) @signature `La/a/c;.a:(La/r;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L079198.  call temp:= `f`(v3) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07919e.  v0:= temp @kind object;
  #L0791a0.  v1:= ":" @kind object;
  #L0791a4.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L0791aa.  v0:= temp;
  #L0791ac.  if v0 == 0 then goto L079242;
  #L0791b0.  v0:= new `java.lang.StringBuilder`;
  #L0791b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0791ba.  v1:= "[" @kind object;
  #L0791be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0791c4.  v0:= temp @kind object;
  #L0791c6.  call temp:= `f`(v3) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0791cc.  v1:= temp @kind object;
  #L0791ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0791d4.  v0:= temp @kind object;
  #L0791d6.  v1:= "]" @kind object;
  #L0791da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0791e0.  v0:= temp @kind object;
  #L0791e2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0791e8.  v0:= temp @kind object;
  #L0791ea.  if v4 != 0 then goto L07920a;
  #L0791ee.  call temp:= `g`(v3) @signature `La/r;.g:()I` @kind virtual;
  #L0791f4.  v1:= temp;
  #L0791f6.  call temp:= `b`(v3) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L0791fc.  v2:= temp @kind object;
  #L0791fe.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L079204.  v2:= temp;
  #L079206.  if v1 == v2 then goto L079240;
  #L07920a.  v1:= new `java.lang.StringBuilder`;
  #L07920e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L079214.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07921a.  v0:= temp @kind object;
  #L07921c.  v1:= ":" @kind object;
  #L079220.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079226.  v0:= temp @kind object;
  #L079228.  call temp:= `g`(v3) @signature `La/r;.g:()I` @kind virtual;
  #L07922e.  v1:= temp;
  #L079230.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L079236.  v0:= temp @kind object;
  #L079238.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07923e.  v0:= temp @kind object;
  #L079240.  return v0 @kind object;
  #L079242.  call temp:= `f`(v3) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L079248.  v0:= temp @kind object;
  #L07924a.  goto L0791ea;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object) @signature `La/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L07925c.  v0:= 0I;
  #Try_start0.  
  #L07925e.  call temp:= `toASCII`(v3) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L079264.  v1:= temp @kind object;
  #L079266.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L07926a.  call temp:= `toLowerCase`(v1, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L079270.  v1:= temp @kind object;
  #L079272.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L079278.  v2:= temp;
  #L07927a.  if v2 == 0 then goto L079280;
  #L07927e.  return v0 @kind object;
  #L079280.  call temp:= `d`(v1) @signature `La/a/c;.d:(Ljava/lang/String;)Z` @kind static;
  #Try_end0.  
  #L079286.  v2:= temp;
  #L079288.  if v2 != 0 then goto L07927e;
  #L07928c.  v0:= v1 @kind object;
  #L07928e.  goto L07927e;
  #L079290.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L079292.  goto L07927e;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L079290;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0792b4.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L0792b8.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0792be.  v0:= temp @kind object;
  #L0792c0.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `a`(`b.e` v4 @kind object, `java.nio.charset.Charset` v5 @kind object) @signature `La/a/c;.a:(Lb/e;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0792d4.  v2:= 0L;
  #L0792d8.  v0:= `@@a.a.c.g` @type ^`b.f` @kind object;
  #L0792dc.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L0792e2.  v0:= temp;
  #L0792e4.  if v0 == 0 then goto L079302;
  #L0792e8.  v0:= `@@a.a.c.g` @type ^`b.f` @kind object;
  #L0792ec.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L0792f2.  v0:= temp;
  #L0792f4.  v0:= (`long`) v0 @kind i2l;
  #L0792f6.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L0792fc.  v5:= `@@a.a.c.e` @type ^`java.nio.charset.Charset` @kind object;
  #L079300.  return v5 @kind object;
  #L079302.  v0:= `@@a.a.c.h` @type ^`b.f` @kind object;
  #L079306.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L07930c.  v0:= temp;
  #L07930e.  if v0 == 0 then goto L07932c;
  #L079312.  v0:= `@@a.a.c.h` @type ^`b.f` @kind object;
  #L079316.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L07931c.  v0:= temp;
  #L07931e.  v0:= (`long`) v0 @kind i2l;
  #L079320.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L079326.  v5:= `@@a.a.c.l` @type ^`java.nio.charset.Charset` @kind object;
  #L07932a.  goto L079300;
  #L07932c.  v0:= `@@a.a.c.i` @type ^`b.f` @kind object;
  #L079330.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L079336.  v0:= temp;
  #L079338.  if v0 == 0 then goto L079356;
  #L07933c.  v0:= `@@a.a.c.i` @type ^`b.f` @kind object;
  #L079340.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L079346.  v0:= temp;
  #L079348.  v0:= (`long`) v0 @kind i2l;
  #L07934a.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L079350.  v5:= `@@a.a.c.m` @type ^`java.nio.charset.Charset` @kind object;
  #L079354.  goto L079300;
  #L079356.  v0:= `@@a.a.c.j` @type ^`b.f` @kind object;
  #L07935a.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L079360.  v0:= temp;
  #L079362.  if v0 == 0 then goto L079380;
  #L079366.  v0:= `@@a.a.c.j` @type ^`b.f` @kind object;
  #L07936a.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L079370.  v0:= temp;
  #L079372.  v0:= (`long`) v0 @kind i2l;
  #L079374.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07937a.  v5:= `@@a.a.c.n` @type ^`java.nio.charset.Charset` @kind object;
  #L07937e.  goto L079300;
  #L079380.  v0:= `@@a.a.c.k` @type ^`b.f` @kind object;
  #L079384.  call temp:= `a`(v4, v2, v0) @signature `Lb/e;.a:(JLb/f;)Z` @kind interface;
  #L07938a.  v0:= temp;
  #L07938c.  if v0 == 0 then goto L079300;
  #L079390.  v0:= `@@a.a.c.k` @type ^`b.f` @kind object;
  #L079394.  call temp:= `g`(v0) @signature `Lb/f;.g:()I` @kind virtual;
  #L07939a.  v0:= temp;
  #L07939c.  v0:= (`long`) v0 @kind i2l;
  #L07939e.  call `g`(v4, v0) @signature `Lb/e;.g:(J)V` @kind interface;
  #L0793a4.  v5:= `@@a.a.c.o` @type ^`java.nio.charset.Charset` @kind object;
  #L0793a8.  goto L079300;
}
procedure `java.util.List` `a`(`java.util.List` v1 @kind object) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0793bc.  v0:= new `java.util.ArrayList`;
  #L0793c0.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L0793c6.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L0793cc.  v0:= temp @kind object;
  #L0793ce.  return v0 @kind object;
}
procedure `java.util.List` `a`(`java.lang.Object`[] v1 @kind object) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0793e0.  call temp:= `clone`(v1) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L0793e6.  v0:= temp @kind object;
  #L0793e8.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L0793ec.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0793f2.  v0:= temp @kind object;
  #L0793f4.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L0793fa.  v0:= temp @kind object;
  #L0793fc.  return v0 @kind object;
}
procedure `java.util.List` `a`(`java.lang.Object`[] v9 @kind object, `java.lang.Object`[] v10 @kind object) @signature `La/a/c;.a:([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L079410.  v1:= 0I;
  #L079412.  v3:= new `java.util.ArrayList`;
  #L079416.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L07941c.  v4:= length @variable v9;
  #L07941e.  v2:= v1;
  #L079420.  if v2 >= v4 then goto L079454;
  #L079424.  v5:= v9[v2] @kind object;
  #L079428.  v6:= length @variable v10;
  #L07942a.  v0:= v1;
  #L07942c.  if v0 >= v6 then goto L079446;
  #L079430.  v7:= v10[v0] @kind object;
  #L079434.  call temp:= `equals`(v5, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07943a.  v8:= temp;
  #L07943c.  if v8 == 0 then goto L07944e;
  #L079440.  call temp:= `add`(v3, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L079446.  v0:= v2 + 1;
  #L07944a.  v2:= v0;
  #L07944c.  goto L079420;
  #L07944e.  v0:= v0 + 1;
  #L079452.  goto L07942c;
  #L079454.  return v3 @kind object;
}
procedure `java.util.concurrent.ThreadFactory` `a`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `La/a/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079468.  v0:= new `a.a.c$1`;
  #L07946c.  call `<init>`(v0, v1, v2) @signature `La/a/c$1;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L079472.  return v0 @kind object;
}
procedure `void` `a`(`long` v4 , `long` v6 , `long` v8 ) @signature `La/a/c;.a:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L079484.  v0:= v6 ^| v8 @kind long;
  #L079488.  v2:= 0L;
  #L07948c.  v0:= lcmp(v0, v2);
  #L079490.  if v0 < 0 then goto L0794a8;
  #L079494.  v0:= lcmp(v6, v4);
  #L079498.  if v0 > 0 then goto L0794a8;
  #L07949c.  v0:= v4 - v6 @kind long;
  #L0794a0.  v0:= lcmp(v0, v8);
  #L0794a4.  if v0 >= 0 then goto L0794b4;
  #L0794a8.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L0794ac.  call `<init>`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L0794b2.  throw v0;
  #L0794b4.  return @kind void;
}
procedure `void` `a`(`java.io.Closeable` v1 @kind object) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0794c8.  if v1 == 0 then goto L0794d2;
  #Try_start0.  
  #L0794cc.  call `close`(v1) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #Try_end0.  
  #L0794d2.  return @kind void;
  #L0794d4.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L0794d6.  throw v0;
  #L0794d8.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L0794da.  goto L0794d2;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L0794d4;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L0794d8;
}
procedure `void` `a`(`java.net.Socket` v2 @kind object) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0794fc.  if v2 == 0 then goto L079506;
  #Try_start0.  
  #L079500.  call `close`(v2) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end0.  
  #L079506.  return @kind void;
  #L079508.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L07950a.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L079510.  v1:= temp;
  #L079512.  if v1 != 0 then goto L079506;
  #L079516.  throw v0;
  #L079518.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L07951a.  throw v0;
  #L07951c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L07951e.  goto L079506;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L079508;
  catch `java.lang.RuntimeException` @[Try_start0..Try_end0] goto L079518;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L07951c;
}
procedure `boolean` `a`(`b.r` v1 @kind object, `int` v2 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `La/a/c;.a:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #Try_start0.  
  #L079544.  call temp:= `b`(v1, v2, v3) @signature `La/a/c;.b:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #Try_end0.  
  #L07954a.  v0:= temp;
  #L07954c.  return v0;
  #L07954e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L079550.  v0:= 0I;
  #L079552.  goto L07954c;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07954e;
}
procedure `boolean` `a`(`java.lang.AssertionError` v2 @kind object) @signature `La/a/c;.a:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079574.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L07957a.  v0:= temp @kind object;
  #L07957c.  if v0 == 0 then goto L0795a8;
  #L079580.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L079586.  v0:= temp @kind object;
  #L079588.  if v0 == 0 then goto L0795a8;
  #L07958c.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L079592.  v0:= temp @kind object;
  #L079594.  v1:= "getsockname failed" @kind object;
  #L079598.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L07959e.  v0:= temp;
  #L0795a0.  if v0 == 0 then goto L0795a8;
  #L0795a4.  v0:= 1I;
  #L0795a6.  return v0;
  #L0795a8.  v0:= 0I;
  #L0795aa.  goto L0795a6;
}
procedure `boolean` `a`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0795bc.  if v1 == v2 then goto L0795d0;
  #L0795c0.  if v1 == 0 then goto L0795d4;
  #L0795c4.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0795ca.  v0:= temp;
  #L0795cc.  if v0 == 0 then goto L0795d4;
  #L0795d0.  v0:= 1I;
  #L0795d2.  return v0;
  #L0795d4.  v0:= 0I;
  #L0795d6.  goto L0795d2;
}
procedure `java.lang.Object`[] `a`(`java.lang.Class` v2 @kind object, `java.lang.Object`[] v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `La/a/c;.a:(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0795e8.  call temp:= `a`(v3, v4) @signature `La/a/c;.a:([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0795ee.  v1:= temp @kind object;
  #L0795f0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0795f6.  v0:= temp;
  #L0795f8.  call temp:= `newInstance`(v2, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L0795fe.  v0:= temp @kind object;
  #L079600.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L079604.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L079608.  call temp:= `toArray`(v1, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07960e.  v0:= temp @kind object;
  #L079610.  return v0 @kind object;
}
procedure `java.lang.String`[] `a`(`java.lang.String`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/a/c;.a:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L079624.  v2:= 0I;
  #L079626.  v0:= length @variable v3;
  #L079628.  v0:= v0 + 1;
  #L07962c.  v0:= new `java.lang.String`[v0];
  #L079630.  v1:= length @variable v3;
  #L079632.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L079638.  v1:= length @variable v0;
  #L07963a.  v1:= v1 + -1;
  #L07963e.  v0[v1]:= v4 @kind object;
  #L079642.  return v0 @kind object;
}
procedure `int` `b`(`java.lang.String` v4 @kind object) @signature `La/a/c;.b:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L079654.  v0:= 0I;
  #L079656.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L07965c.  v1:= temp;
  #L07965e.  if v0 >= v1 then goto L079682;
  #L079662.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L079668.  v2:= temp;
  #L07966a.  v3:= 31I;
  #L07966e.  if v2 <= v3 then goto L07967a;
  #L079672.  v3:= 127I;
  #L079676.  if v2 < v3 then goto L07967c;
  #L07967a.  return v0;
  #L07967c.  v0:= v0 + 1;
  #L079680.  goto L07965e;
  #L079682.  v0:= -1I;
  #L079684.  goto L07967a;
}
procedure `int` `b`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `La/a/c;.b:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079698.  v0:= v4 + -1;
  #L07969c.  if v0 < v3 then goto L0796b2;
  #L0796a0.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0796a6.  v1:= temp;
  #L0796a8.  goto L0796bc;
  #L0796ae.  v3:= v0 + 1;
  #L0796b2.  return v3;
  #L0796b4.  v0:= v0 + -1;
  #L0796b8.  goto L07969c;
  #L0796ba.  
  #L0796bc.  switch v1
                  | 9 => goto L0796b4
                  | 10 => goto L0796b4
                  | 12 => goto L0796b4
                  | 13 => goto L0796b4
                  | 32 => goto L0796b4
                  | else => goto L0796ae;
}
procedure `boolean` `b`(`b.r` v12 @kind object, `int` v13 , `java.util.concurrent.TimeUnit` v14 @kind object) @signature `La/a/c;.b:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L0796f8.  v2:= 9223372036854775807L;
  #L079702.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L079708.  v6:= temp @kind wide;
  #L07970a.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079710.  v0:= temp @kind object;
  #L079712.  call temp:= `c_`(v0) @signature `Lb/s;.c_:()Z` @kind virtual;
  #L079718.  v0:= temp;
  #L07971a.  if v0 == 0 then goto L07979a;
  #L07971e.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079724.  v0:= temp @kind object;
  #L079726.  call temp:= `d`(v0) @signature `Lb/s;.d:()J` @kind virtual;
  #L07972c.  v0:= temp @kind wide;
  #L07972e.  v0:= v0 - v6 @kind long;
  #L079730.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L079736.  v4:= temp @kind object;
  #L079738.  v8:= (`long`) v13 @kind i2l;
  #L07973a.  call temp:= `toNanos`(v14, v8) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L079740.  v8:= temp @kind wide;
  #L079742.  call temp:= `min`(v0, v8) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L079748.  v8:= temp @kind wide;
  #L07974a.  v8:= v8 + v6 @kind long;
  #L07974c.  call temp:= `a`(v4, v8) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #Try_start0.  
  #L079752.  v4:= new `b.c`;
  #L079756.  call `<init>`(v4) @signature `Lb/c;.<init>:()V` @kind direct;
  #L07975c.  v8:= 8192L;
  #L079760.  call temp:= `a`(v12, v4, v8) @signature `Lb/r;.a:(Lb/c;J)J` @kind interface;
  #L079766.  v8:= temp @kind wide;
  #L079768.  v10:= -1L;
  #L07976c.  v5:= lcmp(v8, v10);
  #L079770.  if v5 == 0 then goto L07979e;
  #L079774.  call `r`(v4) @signature `Lb/c;.r:()V` @kind virtual;
  #Try_end0.  
  #L07977a.  goto L07975c;
  #L07977c.  v4:= Exception @type ^`java.io.InterruptedIOException` @kind object;
  #L07977e.  v4:= 0I;
  #L079780.  v2:= lcmp(v0, v2);
  #L079784.  if v2 != 0 then goto L0797cc;
  #L079788.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L07978e.  v0:= temp @kind object;
  #L079790.  call temp:= `e_`(v0) @signature `Lb/s;.e_:()Lb/s;` @kind virtual;
  #L079796.  v0:= v4;
  #L079798.  return v0;
  #L07979a.  v0:= v2 @kind wide;
  #L07979c.  goto L079730;
  #L07979e.  v4:= 1I;
  #L0797a0.  v2:= lcmp(v0, v2);
  #L0797a4.  if v2 != 0 then goto L0797ba;
  #L0797a8.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L0797ae.  v0:= temp @kind object;
  #L0797b0.  call temp:= `e_`(v0) @signature `Lb/s;.e_:()Lb/s;` @kind virtual;
  #L0797b6.  v0:= v4;
  #L0797b8.  goto L079798;
  #L0797ba.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L0797c0.  v2:= temp @kind object;
  #L0797c2.  v0:= v0 + v6 @kind long;
  #L0797c4.  call temp:= `a`(v2, v0) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #L0797ca.  goto L0797b6;
  #L0797cc.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L0797d2.  v2:= temp @kind object;
  #L0797d4.  v0:= v0 + v6 @kind long;
  #L0797d6.  call temp:= `a`(v2, v0) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #L0797dc.  goto L079796;
  #L0797de.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0797e0.  v2:= lcmp(v0, v2);
  #L0797e4.  if v2 != 0 then goto L0797f8;
  #L0797e8.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L0797ee.  v0:= temp @kind object;
  #L0797f0.  call temp:= `e_`(v0) @signature `Lb/s;.e_:()Lb/s;` @kind virtual;
  #L0797f6.  throw v4;
  #L0797f8.  call temp:= `a`(v12) @signature `Lb/r;.a:()Lb/s;` @kind interface;
  #L0797fe.  v2:= temp @kind object;
  #L079800.  v0:= v0 + v6 @kind long;
  #L079802.  call temp:= `a`(v2, v0) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #L079808.  goto L0797f6;
  catch `java.io.InterruptedIOException` @[Try_start0..Try_end0] goto L07977c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0797de;
}
procedure `java.lang.String` `c`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `La/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L07982c.  call temp:= `a`(v2, v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;II)I` @kind static;
  #L079832.  v0:= temp;
  #L079834.  call temp:= `b`(v2, v0, v4) @signature `La/a/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L07983a.  v1:= temp;
  #L07983c.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L079842.  v0:= temp @kind object;
  #L079844.  return v0 @kind object;
}
procedure `boolean` `c`(`java.lang.String` v1 @kind object) @signature `La/a/c;.c:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L079858.  v0:= `@@a.a.c.p` @type ^`java.util.regex.Pattern` @kind object;
  #L07985c.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L079862.  v0:= temp @kind object;
  #L079864.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L07986a.  v0:= temp;
  #L07986c.  return v0;
}
procedure `boolean` `d`(`java.lang.String` v5 @kind object) @signature `La/a/c;.d:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L079880.  v2:= 1I;
  #L079882.  v1:= 0I;
  #L079884.  v0:= v1;
  #L079886.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L07988c.  v3:= temp;
  #L07988e.  if v0 >= v3 then goto L0798ac;
  #L079892.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L079898.  v3:= temp;
  #L07989a.  v4:= 31I;
  #L07989e.  if v3 <= v4 then goto L0798aa;
  #L0798a2.  v4:= 127I;
  #L0798a6.  if v3 < v4 then goto L0798ae;
  #L0798aa.  v1:= v2;
  #L0798ac.  return v1;
  #L0798ae.  v4:= " #%/:?@[\\]" @kind object;
  #L0798b2.  call temp:= `indexOf`(v4, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L0798b8.  v3:= temp;
  #L0798ba.  v4:= -1I;
  #L0798bc.  if v3 == v4 then goto L0798c4;
  #L0798c0.  v1:= v2;
  #L0798c2.  goto L0798ac;
  #L0798c4.  v0:= v0 + 1;
  #L0798c8.  goto L079886;
}

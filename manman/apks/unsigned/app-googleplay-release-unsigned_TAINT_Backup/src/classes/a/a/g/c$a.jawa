record `a.a.g.c$a` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `boolean` `a.a.g.c$a.a` @AccessFlag ;
  `java.lang.String` `a.a.g.c$a.b` @AccessFlag ;
  `java.util.List` `a.a.g.c$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.g.c$a` v0 @kind this, `java.util.List` v1 @kind object) @signature `La/a/g/c$a;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0824f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0824f6.  v0.`a.a.g.c$a.c` @type ^`java.util.List` := v1 @kind object;
  #L0824fa.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`a.a.g.c$a` v6 @kind this, `java.lang.Object` v7 @kind object, `java.lang.reflect.Method` v8 @kind object, `java.lang.Object`[] v9 @kind object) @signature `La/a/g/c$a;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08250c.  v1:= 0I;
  #L08250e.  v5:= 1I;
  #L082510.  v2:= 0I;
  #L082512.  call temp:= `getName`(v8) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L082518.  v0:= temp @kind object;
  #L08251a.  call temp:= `getReturnType`(v8) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L082520.  v3:= temp @kind object;
  #L082522.  if v9 != 0 then goto L08252a;
  #L082526.  v9:= `@@a.a.c.b` @type ^`java.lang.String`[] @kind object;
  #L08252a.  v4:= "supports" @kind object;
  #L08252e.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082534.  v4:= temp;
  #L082536.  if v4 == 0 then goto L08254c;
  #L08253a.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L08253e.  if v4 != v3 then goto L08254c;
  #L082542.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L082548.  v0:= temp @kind object;
  #L08254a.  return v0 @kind object;
  #L08254c.  v4:= "unsupported" @kind object;
  #L082550.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082556.  v4:= temp;
  #L082558.  if v4 == 0 then goto L08256c;
  #L08255c.  v4:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L082560.  if v4 != v3 then goto L08256c;
  #L082564.  v6.`a.a.g.c$a.a` @type ^`boolean` := v5 @kind boolean;
  #L082568.  v0:= v1 @kind object;
  #L08256a.  goto L08254a;
  #L08256c.  v4:= "protocols" @kind object;
  #L082570.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082576.  v4:= temp;
  #L082578.  if v4 == 0 then goto L082588;
  #L08257c.  v4:= length @variable v9;
  #L08257e.  if v4 != 0 then goto L082588;
  #L082582.  v0:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L082586.  goto L08254a;
  #L082588.  v4:= "selectProtocol" @kind object;
  #L08258c.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082592.  v4:= temp;
  #L082594.  if v4 != 0 then goto L0825a8;
  #L082598.  v4:= "select" @kind object;
  #L08259c.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0825a2.  v4:= temp;
  #L0825a4.  if v4 == 0 then goto L08261e;
  #L0825a8.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L0825ac.  if v4 != v3 then goto L08261e;
  #L0825b0.  v3:= length @variable v9;
  #L0825b2.  if v3 != v5 then goto L08261e;
  #L0825b6.  v3:= v9[v2] @kind object;
  #L0825ba.  v3:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L0825be.  if v3 == 0 then goto L08261e;
  #L0825c2.  v0:= v9[v2] @kind object;
  #L0825c6.  v0:= (`java.util.List`) v0 @kind object;
  #L0825ca.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0825d0.  v3:= temp;
  #L0825d2.  v1:= v2;
  #L0825d4.  if v1 >= v3 then goto L082608;
  #L0825d8.  v4:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L0825dc.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0825e2.  v5:= temp @kind object;
  #L0825e4.  call temp:= `contains`(v4, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L0825ea.  v4:= temp;
  #L0825ec.  if v4 == 0 then goto L082602;
  #L0825f0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0825f6.  v0:= temp @kind object;
  #L0825f8.  v0:= (`java.lang.String`) v0 @kind object;
  #L0825fc.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L082600.  goto L08254a;
  #L082602.  v1:= v1 + 1;
  #L082606.  goto L0825d4;
  #L082608.  v0:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L08260c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L082612.  v0:= temp @kind object;
  #L082614.  v0:= (`java.lang.String`) v0 @kind object;
  #L082618.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08261c.  goto L08254a;
  #L08261e.  v3:= "protocolSelected" @kind object;
  #L082622.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082628.  v3:= temp;
  #L08262a.  if v3 != 0 then goto L08263e;
  #L08262e.  v3:= "selected" @kind object;
  #L082632.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082638.  v0:= temp;
  #L08263a.  if v0 == 0 then goto L082656;
  #L08263e.  v0:= length @variable v9;
  #L082640.  if v0 != v5 then goto L082656;
  #L082644.  v0:= v9[v2] @kind object;
  #L082648.  v0:= (`java.lang.String`) v0 @kind object;
  #L08264c.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L082650.  v0:= v1 @kind object;
  #L082652.  goto L08254a;
  #L082656.  call temp:= `invoke`(v8, v6, v9) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L08265c.  v0:= temp @kind object;
  #L08265e.  goto L08254a;
}

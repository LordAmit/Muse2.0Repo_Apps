record `a.l` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.l.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.l.f` @AccessFlag PRIVATE_FINAL;
  `long` `a.l.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.l.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `a.l.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.l.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.l.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.l.l` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.l.m` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@a.l.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@a.l.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@a.l.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@a.l.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L086fb8.  v0:= "(\\d{2,4})[^\\d]*" @kind object;
  #L086fbc.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L086fc2.  v0:= temp @kind object;
  #L086fc4.  `@@a.l.a` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L086fc8.  v0:= "(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*" @kind object;
  #L086fcc.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L086fd2.  v0:= temp @kind object;
  #L086fd4.  `@@a.l.b` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L086fd8.  v0:= "(\\d{1,2})[^\\d]*" @kind object;
  #L086fdc.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L086fe2.  v0:= temp @kind object;
  #L086fe4.  `@@a.l.c` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L086fe8.  v0:= "(\\d{1,2}):(\\d{1,2}):(\\d{1,2})[^\\d]*" @kind object;
  #L086fec.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L086ff2.  v0:= temp @kind object;
  #L086ff4.  `@@a.l.d` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L086ff8.  return @kind void;
}
procedure `void` `<init>`(`a.l` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `long` v4 , `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `boolean` v8 , `boolean` v9 , `boolean` v10 , `boolean` v11 ) @signature `La/l;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L08700c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L087012.  v1.`a.l.e` @type ^`java.lang.String` := v2 @kind object;
  #L087016.  v1.`a.l.f` @type ^`java.lang.String` := v3 @kind object;
  #L08701a.  v1.`a.l.g` @type ^`long` := v4 @kind wide;
  #L08701e.  v1.`a.l.h` @type ^`java.lang.String` := v6 @kind object;
  #L087022.  v1.`a.l.i` @type ^`java.lang.String` := v7 @kind object;
  #L087026.  v1.`a.l.j` @type ^`boolean` := v8 @kind boolean;
  #L08702a.  v1.`a.l.k` @type ^`boolean` := v9 @kind boolean;
  #L08702e.  v1.`a.l.m` @type ^`boolean` := v10 @kind boolean;
  #L087032.  v1.`a.l.l` @type ^`boolean` := v11 @kind boolean;
  #L087036.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v5 @kind object, `int` v6 , `int` v7 , `boolean` v8 ) @signature `La/l;.a:(Ljava/lang/String;IIZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L087048.  v2:= 1I;
  #L08704a.  v3:= 0I;
  #L08704c.  v0:= v6;
  #L08704e.  if v0 >= v7 then goto L0870b8;
  #L087052.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L087058.  v1:= temp;
  #L08705a.  v4:= 32I;
  #L08705e.  if v1 >= v4 then goto L08706a;
  #L087062.  v4:= 9I;
  #L087066.  if v1 != v4 then goto L0870aa;
  #L08706a.  v4:= 127I;
  #L08706e.  if v1 >= v4 then goto L0870aa;
  #L087072.  v4:= 48I;
  #L087076.  if v1 < v4 then goto L087082;
  #L08707a.  v4:= 57I;
  #L08707e.  if v1 <= v4 then goto L0870aa;
  #L087082.  v4:= 97I;
  #L087086.  if v1 < v4 then goto L087092;
  #L08708a.  v4:= 122I;
  #L08708e.  if v1 <= v4 then goto L0870aa;
  #L087092.  v4:= 65I;
  #L087096.  if v1 < v4 then goto L0870a2;
  #L08709a.  v4:= 90I;
  #L08709e.  if v1 <= v4 then goto L0870aa;
  #L0870a2.  v4:= 58I;
  #L0870a6.  if v1 != v4 then goto L0870ba;
  #L0870aa.  v4:= v2;
  #L0870ac.  if v8 != 0 then goto L0870be;
  #L0870b0.  v1:= v2;
  #L0870b2.  if v4 != v1 then goto L0870c2;
  #L0870b6.  v7:= v0;
  #L0870b8.  return v7;
  #L0870ba.  v4:= v3;
  #L0870bc.  goto L0870ac;
  #L0870be.  v1:= v3;
  #L0870c0.  goto L0870b2;
  #L0870c2.  v0:= v0 + 1;
  #L0870c6.  goto L08704e;
}
procedure `long` `a`(`java.lang.String` v6 @kind object) @signature `La/l;.a:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0870d8.  v0:= -9223372036854775808L;
  #Try_start0.  
  #L0870dc.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #Try_end0.  
  #L0870e2.  v2:= temp @kind wide;
  #L0870e4.  v4:= 0L;
  #L0870e8.  v4:= lcmp(v2, v4);
  #L0870ec.  if v4 > 0 then goto L0870f2;
  #L0870f0.  return v0 @kind wide;
  #L0870f2.  v0:= v2 @kind wide;
  #L0870f4.  goto L0870f0;
  #L0870f6.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L0870f8.  v3:= "-?\\d+" @kind object;
  #L0870fc.  call temp:= `matches`(v6, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L087102.  v3:= temp;
  #L087104.  if v3 == 0 then goto L087124;
  #L087108.  v2:= "-" @kind object;
  #L08710c.  call temp:= `startsWith`(v6, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L087112.  v2:= temp;
  #L087114.  if v2 != 0 then goto L0870f0;
  #L087118.  v0:= 9223372036854775807L;
  #L087122.  goto L0870f0;
  #L087124.  throw v2;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L0870f6;
}
procedure `long` `a`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `La/l;.a:(Ljava/lang/String;II)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L087148.  v0:= 0I;
  #L08714a.  call temp:= `a`(v10, v11, v12, v0) @signature `La/l;.a:(Ljava/lang/String;IIZ)I` @kind static;
  #L087150.  v6:= temp;
  #L087152.  v5:= -1I;
  #L087154.  v4:= -1I;
  #L087156.  v3:= -1I;
  #L087158.  v2:= -1I;
  #L08715a.  v1:= -1I;
  #L08715c.  v0:= -1I;
  #L08715e.  v7:= `@@a.l.d` @type ^`java.util.regex.Pattern` @kind object;
  #L087162.  call temp:= `matcher`(v7, v10) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L087168.  v7:= temp @kind object;
  #L08716a.  if v6 >= v12 then goto L087298;
  #L08716e.  v8:= v6 + 1;
  #L087172.  v9:= 1I;
  #L087174.  call temp:= `a`(v10, v8, v12, v9) @signature `La/l;.a:(Ljava/lang/String;IIZ)I` @kind static;
  #L08717a.  v8:= temp;
  #L08717c.  call temp:= `region`(v7, v6, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L087182.  v6:= -1I;
  #L087184.  if v5 != v6 then goto L0871e6;
  #L087188.  v6:= `@@a.l.d` @type ^`java.util.regex.Pattern` @kind object;
  #L08718c.  call temp:= `usePattern`(v7, v6) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L087192.  v6:= temp @kind object;
  #L087194.  call temp:= `matches`(v6) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L08719a.  v6:= temp;
  #L08719c.  if v6 == 0 then goto L0871e6;
  #L0871a0.  v3:= 1I;
  #L0871a2.  call temp:= `group`(v7, v3) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L0871a8.  v3:= temp @kind object;
  #L0871aa.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L0871b0.  v5:= temp;
  #L0871b2.  v3:= 2I;
  #L0871b4.  call temp:= `group`(v7, v3) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L0871ba.  v3:= temp @kind object;
  #L0871bc.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L0871c2.  v4:= temp;
  #L0871c4.  v3:= 3I;
  #L0871c6.  call temp:= `group`(v7, v3) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L0871cc.  v3:= temp @kind object;
  #L0871ce.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L0871d4.  v3:= temp;
  #L0871d6.  v6:= v8 + 1;
  #L0871da.  v8:= 0I;
  #L0871dc.  call temp:= `a`(v10, v6, v12, v8) @signature `La/l;.a:(Ljava/lang/String;IIZ)I` @kind static;
  #L0871e2.  v6:= temp;
  #L0871e4.  goto L08716a;
  #L0871e6.  v6:= -1I;
  #L0871e8.  if v2 != v6 then goto L087218;
  #L0871ec.  v6:= `@@a.l.c` @type ^`java.util.regex.Pattern` @kind object;
  #L0871f0.  call temp:= `usePattern`(v7, v6) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L0871f6.  v6:= temp @kind object;
  #L0871f8.  call temp:= `matches`(v6) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L0871fe.  v6:= temp;
  #L087200.  if v6 == 0 then goto L087218;
  #L087204.  v2:= 1I;
  #L087206.  call temp:= `group`(v7, v2) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L08720c.  v2:= temp @kind object;
  #L08720e.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L087214.  v2:= temp;
  #L087216.  goto L0871d6;
  #L087218.  v6:= -1I;
  #L08721a.  if v1 != v6 then goto L087266;
  #L08721e.  v6:= `@@a.l.b` @type ^`java.util.regex.Pattern` @kind object;
  #L087222.  call temp:= `usePattern`(v7, v6) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L087228.  v6:= temp @kind object;
  #L08722a.  call temp:= `matches`(v6) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L087230.  v6:= temp;
  #L087232.  if v6 == 0 then goto L087266;
  #L087236.  v1:= 1I;
  #L087238.  call temp:= `group`(v7, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L08723e.  v1:= temp @kind object;
  #L087240.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L087244.  call temp:= `toLowerCase`(v1, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L08724a.  v1:= temp @kind object;
  #L08724c.  v6:= `@@a.l.b` @type ^`java.util.regex.Pattern` @kind object;
  #L087250.  call temp:= `pattern`(v6) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L087256.  v6:= temp @kind object;
  #L087258.  call temp:= `indexOf`(v6, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L08725e.  v1:= temp;
  #L087260.  v1:= v1 / 4;
  #L087264.  goto L0871d6;
  #L087266.  v6:= -1I;
  #L087268.  if v0 != v6 then goto L0871d6;
  #L08726c.  v6:= `@@a.l.a` @type ^`java.util.regex.Pattern` @kind object;
  #L087270.  call temp:= `usePattern`(v7, v6) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L087276.  v6:= temp @kind object;
  #L087278.  call temp:= `matches`(v6) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L08727e.  v6:= temp;
  #L087280.  if v6 == 0 then goto L0871d6;
  #L087284.  v0:= 1I;
  #L087286.  call temp:= `group`(v7, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L08728c.  v0:= temp @kind object;
  #L08728e.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L087294.  v0:= temp;
  #L087296.  goto L0871d6;
  #L087298.  v6:= 70I;
  #L08729c.  if v0 < v6 then goto L0872ac;
  #L0872a0.  v6:= 99I;
  #L0872a4.  if v0 > v6 then goto L0872ac;
  #L0872a8.  v0:= v0 + 1900;
  #L0872ac.  if v0 < 0 then goto L0872bc;
  #L0872b0.  v6:= 69I;
  #L0872b4.  if v0 > v6 then goto L0872bc;
  #L0872b8.  v0:= v0 + 2000;
  #L0872bc.  v6:= 1601I;
  #L0872c0.  if v0 >= v6 then goto L0872d0;
  #L0872c4.  v0:= new `java.lang.IllegalArgumentException`;
  #L0872c8.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L0872ce.  throw v0;
  #L0872d0.  v6:= -1I;
  #L0872d2.  if v1 != v6 then goto L0872e2;
  #L0872d6.  v0:= new `java.lang.IllegalArgumentException`;
  #L0872da.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L0872e0.  throw v0;
  #L0872e2.  v6:= 1I;
  #L0872e4.  if v2 < v6 then goto L0872f0;
  #L0872e8.  v6:= 31I;
  #L0872ec.  if v2 <= v6 then goto L0872fc;
  #L0872f0.  v0:= new `java.lang.IllegalArgumentException`;
  #L0872f4.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L0872fa.  throw v0;
  #L0872fc.  if v5 < 0 then goto L087308;
  #L087300.  v6:= 23I;
  #L087304.  if v5 <= v6 then goto L087314;
  #L087308.  v0:= new `java.lang.IllegalArgumentException`;
  #L08730c.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L087312.  throw v0;
  #L087314.  if v4 < 0 then goto L087320;
  #L087318.  v6:= 59I;
  #L08731c.  if v4 <= v6 then goto L08732c;
  #L087320.  v0:= new `java.lang.IllegalArgumentException`;
  #L087324.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L08732a.  throw v0;
  #L08732c.  if v3 < 0 then goto L087338;
  #L087330.  v6:= 59I;
  #L087334.  if v3 <= v6 then goto L087344;
  #L087338.  v0:= new `java.lang.IllegalArgumentException`;
  #L08733c.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L087342.  throw v0;
  #L087344.  v6:= new `java.util.GregorianCalendar`;
  #L087348.  v7:= `@@a.a.c.f` @type ^`java.util.TimeZone` @kind object;
  #L08734c.  call `<init>`(v6, v7) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L087352.  v7:= 0I;
  #L087354.  call `setLenient`(v6, v7) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L08735a.  v7:= 1I;
  #L08735c.  call `set`(v6, v7, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L087362.  v0:= 2I;
  #L087364.  v1:= v1 + -1;
  #L087368.  call `set`(v6, v0, v1) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L08736e.  v0:= 5I;
  #L087370.  call `set`(v6, v0, v2) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L087376.  v0:= 11I;
  #L08737a.  call `set`(v6, v0, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L087380.  v0:= 12I;
  #L087384.  call `set`(v6, v0, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L08738a.  v0:= 13I;
  #L08738e.  call `set`(v6, v0, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L087394.  v0:= 14I;
  #L087398.  v1:= 0I;
  #L08739a.  call `set`(v6, v0, v1) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L0873a0.  call temp:= `getTimeInMillis`(v6) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L0873a6.  v0:= temp @kind wide;
  #L0873a8.  return v0 @kind wide;
}
procedure `a.l` `a`(`long` v20 , `a.r` v22 @kind object, `java.lang.String` v23 @kind object) @signature `La/l;.a:(JLa/r;Ljava/lang/String;)La/l;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L0873bc.  v2:= 0I;
  #L0873be.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0873c4.  v16:= temp;
  #L0873c6.  v3:= 59I;
  #L0873ca.  v0:= v23 @kind object;
  #L0873ce.  v1:= v16;
  #L0873d2.  call temp:= `a`(v0, v2, v1, v3) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L0873d8.  v3:= temp;
  #L0873da.  v4:= 61I;
  #L0873de.  v0:= v23 @kind object;
  #L0873e2.  call temp:= `a`(v0, v2, v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L0873e8.  v5:= temp;
  #L0873ea.  if v5 != v3 then goto L0873f2;
  #L0873ee.  v3:= 0I;
  #L0873f0.  return v3 @kind object;
  #L0873f2.  v0:= v23 @kind object;
  #L0873f6.  call temp:= `c`(v0, v2, v5) @signature `La/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L0873fc.  v4:= temp @kind object;
  #L0873fe.  call temp:= `isEmpty`(v4) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L087404.  v2:= temp;
  #L087406.  if v2 != 0 then goto L087418;
  #L08740a.  call temp:= `b`(v4) @signature `La/a/c;.b:(Ljava/lang/String;)I` @kind static;
  #L087410.  v2:= temp;
  #L087412.  v6:= -1I;
  #L087414.  if v2 == v6 then goto L08741c;
  #L087418.  v3:= 0I;
  #L08741a.  goto L0873f0;
  #L08741c.  v2:= v5 + 1;
  #L087420.  v0:= v23 @kind object;
  #L087424.  call temp:= `c`(v0, v2, v3) @signature `La/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L08742a.  v5:= temp @kind object;
  #L08742c.  call temp:= `b`(v5) @signature `La/a/c;.b:(Ljava/lang/String;)I` @kind static;
  #L087432.  v2:= temp;
  #L087434.  v6:= -1I;
  #L087436.  if v2 == v6 then goto L08743e;
  #L08743a.  v3:= 0I;
  #L08743c.  goto L0873f0;
  #L08743e.  v14:= 253402300799999L;
  #L087448.  v6:= -1L;
  #L08744c.  v8:= 0I;
  #L08744e.  v2:= 0I;
  #L087450.  v10:= 0I;
  #L087452.  v11:= 0I;
  #L087454.  v12:= 1I;
  #L087456.  v13:= 0I;
  #L087458.  v3:= v3 + 1;
  #L08745c.  v0:= v16;
  #L087460.  if v3 >= v0 then goto L0875ae;
  #L087464.  v9:= 59I;
  #L087468.  v0:= v23 @kind object;
  #L08746c.  v1:= v16;
  #L087470.  call temp:= `a`(v0, v3, v1, v9) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L087476.  v17:= temp;
  #L087478.  v9:= 61I;
  #L08747c.  v0:= v23 @kind object;
  #L087480.  v1:= v17;
  #L087484.  call temp:= `a`(v0, v3, v1, v9) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08748a.  v9:= temp;
  #L08748c.  v0:= v23 @kind object;
  #L087490.  call temp:= `c`(v0, v3, v9) @signature `La/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L087496.  v18:= temp @kind object;
  #L087498.  v0:= v17;
  #L08749c.  if v9 >= v0 then goto L0874f6;
  #L0874a0.  v3:= v9 + 1;
  #L0874a4.  v0:= v23 @kind object;
  #L0874a8.  v1:= v17;
  #L0874ac.  call temp:= `c`(v0, v3, v1) @signature `La/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L0874b2.  v3:= temp @kind object;
  #L0874b4.  v9:= "expires" @kind object;
  #L0874b8.  v0:= v18 @kind object;
  #L0874bc.  call temp:= `equalsIgnoreCase`(v0, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0874c2.  v9:= temp;
  #L0874c4.  if v9 == 0 then goto L087504;
  #L0874c8.  v9:= 0I;
  #Try_start0.  
  #L0874ca.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0874d0.  v18:= temp;
  #L0874d2.  v0:= v18;
  #L0874d6.  call temp:= `a`(v3, v9, v0) @signature `La/l;.a:(Ljava/lang/String;II)J` @kind static;
  #Try_end0.  
  #L0874dc.  v14:= temp @kind wide;
  #L0874de.  v13:= 1I;
  #L0874e0.  v3:= v8 @kind object;
  #L0874e2.  v8:= v14 @kind wide;
  #L0874e4.  v14:= v17 + 1;
  #L0874e8.  v19:= v3 @kind object;
  #L0874ec.  v3:= v14;
  #L0874ee.  v14:= v8 @kind wide;
  #L0874f0.  v8:= v19 @kind object;
  #L0874f4.  goto L08745c;
  #L0874f6.  v3:= "" @kind object;
  #L0874fa.  goto L0874b4;
  #L0874fc.  v3:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L0874fe.  v3:= v8 @kind object;
  #L087500.  v8:= v14 @kind wide;
  #L087502.  goto L0874e4;
  #L087504.  v9:= "max-age" @kind object;
  #L087508.  v0:= v18 @kind object;
  #L08750c.  call temp:= `equalsIgnoreCase`(v0, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L087512.  v9:= temp;
  #L087514.  if v9 == 0 then goto L087530;
  #Try_start1.  
  #L087518.  call temp:= `a`(v3) @signature `La/l;.a:(Ljava/lang/String;)J` @kind static;
  #Try_end1.  
  #L08751e.  v6:= temp @kind wide;
  #L087520.  v13:= 1I;
  #L087522.  v3:= v8 @kind object;
  #L087524.  v8:= v14 @kind wide;
  #L087526.  goto L0874e4;
  #L087528.  v3:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L08752a.  v3:= v8 @kind object;
  #L08752c.  v8:= v14 @kind wide;
  #L08752e.  goto L0874e4;
  #L087530.  v9:= "domain" @kind object;
  #L087534.  v0:= v18 @kind object;
  #L087538.  call temp:= `equalsIgnoreCase`(v0, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08753e.  v9:= temp;
  #L087540.  if v9 == 0 then goto L08755a;
  #Try_start2.  
  #L087544.  call temp:= `b`(v3) @signature `La/l;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #Try_end2.  
  #L08754a.  v3:= temp @kind object;
  #L08754c.  v12:= 0I;
  #L08754e.  v8:= v14 @kind wide;
  #L087550.  goto L0874e4;
  #L087552.  v3:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L087554.  v3:= v8 @kind object;
  #L087556.  v8:= v14 @kind wide;
  #L087558.  goto L0874e4;
  #L08755a.  v9:= "path" @kind object;
  #L08755e.  v0:= v18 @kind object;
  #L087562.  call temp:= `equalsIgnoreCase`(v0, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L087568.  v9:= temp;
  #L08756a.  if v9 == 0 then goto L087576;
  #L08756e.  v2:= v3 @kind object;
  #L087570.  v3:= v8 @kind object;
  #L087572.  v8:= v14 @kind wide;
  #L087574.  goto L0874e4;
  #L087576.  v3:= "secure" @kind object;
  #L08757a.  v0:= v18 @kind object;
  #L08757e.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L087584.  v3:= temp;
  #L087586.  if v3 == 0 then goto L087592;
  #L08758a.  v10:= 1I;
  #L08758c.  v3:= v8 @kind object;
  #L08758e.  v8:= v14 @kind wide;
  #L087590.  goto L0874e4;
  #L087592.  v3:= "httponly" @kind object;
  #L087596.  v0:= v18 @kind object;
  #L08759a.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0875a0.  v3:= temp;
  #L0875a2.  if v3 == 0 then goto L08768e;
  #L0875a6.  v11:= 1I;
  #L0875a8.  v3:= v8 @kind object;
  #L0875aa.  v8:= v14 @kind wide;
  #L0875ac.  goto L0874e4;
  #L0875ae.  v16:= -9223372036854775808L;
  #L0875b2.  v3:= lcmp(v6, v16);
  #L0875b6.  if v3 != 0 then goto L087610;
  #L0875ba.  v6:= -9223372036854775808L;
  #L0875be.  if v8 != 0 then goto L08766a;
  #L0875c2.  call temp:= `f`(v22) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0875c8.  v8:= temp @kind object;
  #L0875ca.  if v2 == 0 then goto L0875de;
  #L0875ce.  v3:= "/" @kind object;
  #L0875d2.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0875d8.  v3:= temp;
  #L0875da.  if v3 != 0 then goto L087686;
  #L0875de.  call temp:= `h`(v22) @signature `La/r;.h:()Ljava/lang/String;` @kind virtual;
  #L0875e4.  v2:= temp @kind object;
  #L0875e6.  v3:= 47I;
  #L0875ea.  call temp:= `lastIndexOf`(v2, v3) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L0875f0.  v3:= temp;
  #L0875f2.  if v3 == 0 then goto L087680;
  #L0875f6.  v9:= 0I;
  #L0875f8.  call temp:= `substring`(v2, v9, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0875fe.  v2:= temp @kind object;
  #L087600.  v9:= v2 @kind object;
  #L087602.  v3:= new `a.l`;
  #L087606.  call `<init>`(v3, v4, v5, v6, v8, v9, v10, v11, v12, v13) @signature `La/l;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @kind direct;
  #L08760c.  goto L0873f0;
  #L087610.  v16:= -1L;
  #L087614.  v3:= lcmp(v6, v16);
  #L087618.  if v3 == 0 then goto L08768a;
  #L08761c.  v14:= 9223372036854775L;
  #L087626.  v3:= lcmp(v6, v14);
  #L08762a.  if v3 > 0 then goto L08765e;
  #L08762e.  v14:= 1000L;
  #L087632.  v6:= v6 * v14 @kind long;
  #L087634.  v6:= v6 + v20 @kind long;
  #L087638.  v3:= lcmp(v6, v20);
  #L08763c.  if v3 < 0 then goto L087652;
  #L087640.  v14:= 253402300799999L;
  #L08764a.  v3:= lcmp(v6, v14);
  #L08764e.  if v3 <= 0 then goto L0875be;
  #L087652.  v6:= 253402300799999L;
  #L08765c.  goto L0875be;
  #L08765e.  v6:= 9223372036854775807L;
  #L087668.  goto L087634;
  #L08766a.  v0:= v22 @kind object;
  #L08766e.  call temp:= `b`(v0, v8) @signature `La/l;.b:(La/r;Ljava/lang/String;)Z` @kind static;
  #L087674.  v3:= temp;
  #L087676.  if v3 != 0 then goto L0875ca;
  #L08767a.  v3:= 0I;
  #L08767c.  goto L0873f0;
  #L087680.  v2:= "/" @kind object;
  #L087684.  goto L087600;
  #L087686.  v9:= v2 @kind object;
  #L087688.  goto L087602;
  #L08768a.  v6:= v14 @kind wide;
  #L08768c.  goto L0875be;
  #L08768e.  v3:= v8 @kind object;
  #L087690.  v8:= v14 @kind wide;
  #L087692.  goto L0874e4;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L0874fc;
  catch `java.lang.NumberFormatException` @[Try_start1..Try_end1] goto L087528;
  catch `java.lang.IllegalArgumentException` @[Try_start2..Try_end2] goto L087552;
}
procedure `a.l` `a`(`a.r` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/l;.a:(La/r;Ljava/lang/String;)La/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L0876d0.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L0876d6.  v0:= temp @kind wide;
  #L0876d8.  call temp:= `a`(v0, v2, v3) @signature `La/l;.a:(JLa/r;Ljava/lang/String;)La/l;` @kind static;
  #L0876de.  v0:= temp @kind object;
  #L0876e0.  return v0 @kind object;
}
procedure `java.util.List` `a`(`a.r` v6 @kind object, `a.q` v7 @kind object) @signature `La/l;.a:(La/r;La/q;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0876f4.  v0:= "Set-Cookie" @kind object;
  #L0876f8.  call temp:= `b`(v7, v0) @signature `La/q;.b:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L0876fe.  v3:= temp @kind object;
  #L087700.  v1:= 0I;
  #L087702.  v0:= 0I;
  #L087704.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08770a.  v4:= temp;
  #L08770c.  v2:= v0;
  #L08770e.  if v2 >= v4 then goto L08774a;
  #L087712.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L087718.  v0:= temp @kind object;
  #L08771a.  v0:= (`java.lang.String`) v0 @kind object;
  #L08771e.  call temp:= `a`(v6, v0) @signature `La/l;.a:(La/r;Ljava/lang/String;)La/l;` @kind static;
  #L087724.  v5:= temp @kind object;
  #L087726.  if v5 != 0 then goto L087732;
  #L08772a.  v0:= v2 + 1;
  #L08772e.  v2:= v0;
  #L087730.  goto L08770e;
  #L087732.  if v1 != 0 then goto L087762;
  #L087736.  v0:= new `java.util.ArrayList`;
  #L08773a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L087740.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L087746.  v1:= v0 @kind object;
  #L087748.  goto L08772a;
  #L08774a.  if v1 == 0 then goto L087758;
  #L08774e.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L087754.  v0:= temp @kind object;
  #L087756.  return v0 @kind object;
  #L087758.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L08775e.  v0:= temp @kind object;
  #L087760.  goto L087756;
  #L087762.  v0:= v1 @kind object;
  #L087764.  goto L087740;
}
procedure `java.lang.String` `b`(`java.lang.String` v1 @kind object) @signature `La/l;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L087778.  v0:= "." @kind object;
  #L08777c.  call temp:= `endsWith`(v1, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L087782.  v0:= temp;
  #L087784.  if v0 == 0 then goto L087794;
  #L087788.  v0:= new `java.lang.IllegalArgumentException`;
  #L08778c.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L087792.  throw v0;
  #L087794.  v0:= "." @kind object;
  #L087798.  call temp:= `startsWith`(v1, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08779e.  v0:= temp;
  #L0877a0.  if v0 == 0 then goto L0877ae;
  #L0877a4.  v0:= 1I;
  #L0877a6.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0877ac.  v1:= temp @kind object;
  #L0877ae.  call temp:= `a`(v1) @signature `La/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L0877b4.  v0:= temp @kind object;
  #L0877b6.  if v0 != 0 then goto L0877c6;
  #L0877ba.  v0:= new `java.lang.IllegalArgumentException`;
  #L0877be.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L0877c4.  throw v0;
  #L0877c6.  return v0 @kind object;
}
procedure `boolean` `b`(`a.r` v4 @kind object, `java.lang.String` v5 @kind object) @signature `La/l;.b:(La/r;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0877d8.  v0:= 1I;
  #L0877da.  call temp:= `f`(v4) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0877e0.  v1:= temp @kind object;
  #L0877e2.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0877e8.  v2:= temp;
  #L0877ea.  if v2 == 0 then goto L0877f0;
  #L0877ee.  return v0;
  #L0877f0.  call temp:= `endsWith`(v1, v5) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0877f6.  v2:= temp;
  #L0877f8.  if v2 == 0 then goto L08782e;
  #L0877fc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L087802.  v2:= temp;
  #L087804.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08780a.  v3:= temp;
  #L08780c.  v2:= v2 - v3 @kind int;
  #L08780e.  v2:= v2 + -1;
  #L087812.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L087818.  v2:= temp;
  #L08781a.  v3:= 46I;
  #L08781e.  if v2 != v3 then goto L08782e;
  #L087822.  call temp:= `c`(v1) @signature `La/a/c;.c:(Ljava/lang/String;)Z` @kind static;
  #L087828.  v1:= temp;
  #L08782a.  if v1 == 0 then goto L0877ee;
  #L08782e.  v0:= 0I;
  #L087830.  goto L0877ee;
}
procedure `java.lang.String` `a`(`a.l` v1 @kind this) @signature `La/l;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L087844.  v0:= v1.`a.l.e` @type ^`java.lang.String` @kind object;
  #L087848.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.l` v6 @kind this, `boolean` v7 ) @signature `La/l;.a:(Z)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08785c.  v0:= new `java.lang.StringBuilder`;
  #L087860.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L087866.  v1:= v6.`a.l.e` @type ^`java.lang.String` @kind object;
  #L08786a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L087870.  v1:= 61I;
  #L087874.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08787a.  v1:= v6.`a.l.f` @type ^`java.lang.String` @kind object;
  #L08787e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L087884.  v1:= v6.`a.l.l` @type ^`boolean` @kind boolean;
  #L087888.  if v1 == 0 then goto L0878a6;
  #L08788c.  v2:= v6.`a.l.g` @type ^`long` @kind wide;
  #L087890.  v4:= -9223372036854775808L;
  #L087894.  v1:= lcmp(v2, v4);
  #L087898.  if v1 != 0 then goto L087914;
  #L08789c.  v1:= "; max-age=0" @kind object;
  #L0878a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878a6.  v1:= v6.`a.l.m` @type ^`boolean` @kind boolean;
  #L0878aa.  if v1 != 0 then goto L0878d0;
  #L0878ae.  v1:= "; domain=" @kind object;
  #L0878b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878b8.  if v7 == 0 then goto L0878c6;
  #L0878bc.  v1:= "." @kind object;
  #L0878c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878c6.  v1:= v6.`a.l.h` @type ^`java.lang.String` @kind object;
  #L0878ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878d0.  v1:= "; path=" @kind object;
  #L0878d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878da.  v1:= temp @kind object;
  #L0878dc.  v2:= v6.`a.l.i` @type ^`java.lang.String` @kind object;
  #L0878e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878e6.  v1:= v6.`a.l.j` @type ^`boolean` @kind boolean;
  #L0878ea.  if v1 == 0 then goto L0878f8;
  #L0878ee.  v1:= "; secure" @kind object;
  #L0878f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878f8.  v1:= v6.`a.l.k` @type ^`boolean` @kind boolean;
  #L0878fc.  if v1 == 0 then goto L08790a;
  #L087900.  v1:= "; httponly" @kind object;
  #L087904.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08790a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L087910.  v0:= temp @kind object;
  #L087912.  return v0 @kind object;
  #L087914.  v1:= "; expires=" @kind object;
  #L087918.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08791e.  v1:= temp @kind object;
  #L087920.  v2:= new `java.util.Date`;
  #L087924.  v4:= v6.`a.l.g` @type ^`long` @kind wide;
  #L087928.  call `<init>`(v2, v4) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L08792e.  call temp:= `a`(v2) @signature `La/a/c/d;.a:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L087934.  v2:= temp @kind object;
  #L087936.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08793c.  goto L0878a6;
}
procedure `java.lang.String` `b`(`a.l` v1 @kind this) @signature `La/l;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L087950.  v0:= v1.`a.l.f` @type ^`java.lang.String` @kind object;
  #L087954.  return v0 @kind object;
}
procedure `boolean` `equals`(`a.l` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `La/l;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L087968.  v0:= 0I;
  #L08796a.  v1:= instanceof @variable v7 @type ^`a.l` @kind boolean;
  #L08796e.  if v1 != 0 then goto L087974;
  #L087972.  return v0;
  #L087974.  v7:= (`a.l`) v7 @kind object;
  #L087978.  v1:= v7.`a.l.e` @type ^`java.lang.String` @kind object;
  #L08797c.  v2:= v6.`a.l.e` @type ^`java.lang.String` @kind object;
  #L087980.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L087986.  v1:= temp;
  #L087988.  if v1 == 0 then goto L087972;
  #L08798c.  v1:= v7.`a.l.f` @type ^`java.lang.String` @kind object;
  #L087990.  v2:= v6.`a.l.f` @type ^`java.lang.String` @kind object;
  #L087994.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08799a.  v1:= temp;
  #L08799c.  if v1 == 0 then goto L087972;
  #L0879a0.  v1:= v7.`a.l.h` @type ^`java.lang.String` @kind object;
  #L0879a4.  v2:= v6.`a.l.h` @type ^`java.lang.String` @kind object;
  #L0879a8.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0879ae.  v1:= temp;
  #L0879b0.  if v1 == 0 then goto L087972;
  #L0879b4.  v1:= v7.`a.l.i` @type ^`java.lang.String` @kind object;
  #L0879b8.  v2:= v6.`a.l.i` @type ^`java.lang.String` @kind object;
  #L0879bc.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0879c2.  v1:= temp;
  #L0879c4.  if v1 == 0 then goto L087972;
  #L0879c8.  v2:= v7.`a.l.g` @type ^`long` @kind wide;
  #L0879cc.  v4:= v6.`a.l.g` @type ^`long` @kind wide;
  #L0879d0.  v1:= lcmp(v2, v4);
  #L0879d4.  if v1 != 0 then goto L087972;
  #L0879d8.  v1:= v7.`a.l.j` @type ^`boolean` @kind boolean;
  #L0879dc.  v2:= v6.`a.l.j` @type ^`boolean` @kind boolean;
  #L0879e0.  if v1 != v2 then goto L087972;
  #L0879e4.  v1:= v7.`a.l.k` @type ^`boolean` @kind boolean;
  #L0879e8.  v2:= v6.`a.l.k` @type ^`boolean` @kind boolean;
  #L0879ec.  if v1 != v2 then goto L087972;
  #L0879f0.  v1:= v7.`a.l.l` @type ^`boolean` @kind boolean;
  #L0879f4.  v2:= v6.`a.l.l` @type ^`boolean` @kind boolean;
  #L0879f8.  if v1 != v2 then goto L087972;
  #L0879fc.  v1:= v7.`a.l.m` @type ^`boolean` @kind boolean;
  #L087a00.  v2:= v6.`a.l.m` @type ^`boolean` @kind boolean;
  #L087a04.  if v1 != v2 then goto L087972;
  #L087a08.  v0:= 1I;
  #L087a0a.  goto L087972;
}
procedure `int` `hashCode`(`a.l` v8 @kind this) @signature `La/l;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L087a1c.  v2:= 1I;
  #L087a1e.  v1:= 0I;
  #L087a20.  v0:= v8.`a.l.e` @type ^`java.lang.String` @kind object;
  #L087a24.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L087a2a.  v0:= temp;
  #L087a2c.  v0:= v0 + 527;
  #L087a30.  v0:= v0 * 31;
  #L087a34.  v3:= v8.`a.l.f` @type ^`java.lang.String` @kind object;
  #L087a38.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L087a3e.  v3:= temp;
  #L087a40.  v0:= v0 + v3 @kind int;
  #L087a42.  v0:= v0 * 31;
  #L087a46.  v3:= v8.`a.l.h` @type ^`java.lang.String` @kind object;
  #L087a4a.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L087a50.  v3:= temp;
  #L087a52.  v0:= v0 + v3 @kind int;
  #L087a54.  v0:= v0 * 31;
  #L087a58.  v3:= v8.`a.l.i` @type ^`java.lang.String` @kind object;
  #L087a5c.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L087a62.  v3:= temp;
  #L087a64.  v0:= v0 + v3 @kind int;
  #L087a66.  v0:= v0 * 31;
  #L087a6a.  v4:= v8.`a.l.g` @type ^`long` @kind wide;
  #L087a6e.  v6:= v8.`a.l.g` @type ^`long` @kind wide;
  #L087a72.  v3:= 32I;
  #L087a76.  v6:= v6 ^>> v3 @kind long;
  #L087a78.  v4:= v4 ^~ v6 @kind long;
  #L087a7a.  v3:= (`int`) v4 @kind l2i;
  #L087a7c.  v0:= v0 + v3 @kind int;
  #L087a7e.  v3:= v0 * 31;
  #L087a82.  v0:= v8.`a.l.j` @type ^`boolean` @kind boolean;
  #L087a86.  if v0 == 0 then goto L087abe;
  #L087a8a.  v0:= v1;
  #L087a8c.  v0:= v0 + v3 @kind int;
  #L087a8e.  v3:= v0 * 31;
  #L087a92.  v0:= v8.`a.l.k` @type ^`boolean` @kind boolean;
  #L087a96.  if v0 == 0 then goto L087ac2;
  #L087a9a.  v0:= v1;
  #L087a9c.  v0:= v0 + v3 @kind int;
  #L087a9e.  v3:= v0 * 31;
  #L087aa2.  v0:= v8.`a.l.l` @type ^`boolean` @kind boolean;
  #L087aa6.  if v0 == 0 then goto L087ac6;
  #L087aaa.  v0:= v1;
  #L087aac.  v0:= v0 + v3 @kind int;
  #L087aae.  v0:= v0 * 31;
  #L087ab2.  v3:= v8.`a.l.m` @type ^`boolean` @kind boolean;
  #L087ab6.  if v3 == 0 then goto L087aca;
  #L087aba.  v0:= v0 + v1 @kind int;
  #L087abc.  return v0;
  #L087abe.  v0:= v2;
  #L087ac0.  goto L087a8c;
  #L087ac2.  v0:= v2;
  #L087ac4.  goto L087a9c;
  #L087ac6.  v0:= v2;
  #L087ac8.  goto L087aac;
  #L087aca.  v1:= v2;
  #L087acc.  goto L087aba;
}
procedure `java.lang.String` `toString`(`a.l` v1 @kind this) @signature `La/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L087ae0.  v0:= 0I;
  #L087ae2.  call temp:= `a`(v1, v0) @signature `La/l;.a:(Z)Ljava/lang/String;` @kind virtual;
  #L087ae8.  v0:= temp @kind object;
  #L087aea.  return v0 @kind object;
}

record `a.x$a` @kind class @AccessFlag PUBLIC {
  `a.r` `a.x$a.a` @AccessFlag ;
  `java.lang.String` `a.x$a.b` @AccessFlag ;
  `a.q$a` `a.x$a.c` @AccessFlag ;
  `a.y` `a.x$a.d` @AccessFlag ;
  `java.lang.Object` `a.x$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`a.x$a` v1 @kind this) @signature `La/x$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L08b2b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08b2be.  v0:= "GET" @kind object;
  #L08b2c2.  v1.`a.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08b2c6.  v0:= new `a.q$a`;
  #L08b2ca.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L08b2d0.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08b2d4.  return @kind void;
}
procedure `void` `<init>`(`a.x$a` v1 @kind this, `a.x` v2 @kind object) @signature `La/x$a;.<init>:(La/x;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L08b2e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08b2ee.  v0:= v2.`a.x.a` @type ^`a.r` @kind object;
  #L08b2f2.  v1.`a.x$a.a` @type ^`a.r` := v0 @kind object;
  #L08b2f6.  v0:= v2.`a.x.b` @type ^`java.lang.String` @kind object;
  #L08b2fa.  v1.`a.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08b2fe.  v0:= v2.`a.x.d` @type ^`a.y` @kind object;
  #L08b302.  v1.`a.x$a.d` @type ^`a.y` := v0 @kind object;
  #L08b306.  v0:= v2.`a.x.e` @type ^`java.lang.Object` @kind object;
  #L08b30a.  v1.`a.x$a.e` @type ^`java.lang.Object` := v0 @kind object;
  #L08b30e.  v0:= v2.`a.x.c` @type ^`a.q` @kind object;
  #L08b312.  call temp:= `b`(v0) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L08b318.  v0:= temp @kind object;
  #L08b31a.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08b31e.  return @kind void;
}
procedure `a.x$a` `a`(`a.x$a` v1 @kind this, `a.q` v2 @kind object) @signature `La/x$a;.a:(La/q;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b330.  call temp:= `b`(v2) @signature `La/q;.b:()La/q$a;` @kind virtual;
  #L08b336.  v0:= temp @kind object;
  #L08b338.  v1.`a.x$a.c` @type ^`a.q$a` := v0 @kind object;
  #L08b33c.  return v1 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v2 @kind this, `a.r` v3 @kind object) @signature `La/x$a;.a:(La/r;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08b350.  if v3 != 0 then goto L08b364;
  #L08b354.  v0:= new `java.lang.NullPointerException`;
  #L08b358.  v1:= "url == null" @kind object;
  #L08b35c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b362.  throw v0;
  #L08b364.  v2.`a.x$a.a` @type ^`a.r` := v3 @kind object;
  #L08b368.  return v2 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L08b37c.  v6:= 4I;
  #L08b37e.  v5:= 3I;
  #L08b380.  v1:= 1I;
  #L08b382.  v2:= 0I;
  #L08b384.  if v8 != 0 then goto L08b398;
  #L08b388.  v0:= new `java.lang.NullPointerException`;
  #L08b38c.  v1:= "url == null" @kind object;
  #L08b390.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b396.  throw v0;
  #L08b398.  v3:= "ws:" @kind object;
  #L08b39c.  v0:= v8 @kind object;
  #L08b39e.  v4:= v2;
  #L08b3a0.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08b3a6.  v0:= temp;
  #L08b3a8.  if v0 == 0 then goto L08b418;
  #L08b3ac.  v0:= new `java.lang.StringBuilder`;
  #L08b3b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b3b6.  v1:= "http:" @kind object;
  #L08b3ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b3c0.  v0:= temp @kind object;
  #L08b3c2.  call temp:= `substring`(v8, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08b3c8.  v1:= temp @kind object;
  #L08b3ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b3d0.  v0:= temp @kind object;
  #L08b3d2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b3d8.  v8:= temp @kind object;
  #L08b3da.  call temp:= `e`(v8) @signature `La/r;.e:(Ljava/lang/String;)La/r;` @kind static;
  #L08b3e0.  v0:= temp @kind object;
  #L08b3e2.  if v0 != 0 then goto L08b45e;
  #L08b3e6.  v0:= new `java.lang.IllegalArgumentException`;
  #L08b3ea.  v1:= new `java.lang.StringBuilder`;
  #L08b3ee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b3f4.  v2:= "unexpected url: " @kind object;
  #L08b3f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b3fe.  v1:= temp @kind object;
  #L08b400.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b406.  v1:= temp @kind object;
  #L08b408.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b40e.  v1:= temp @kind object;
  #L08b410.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b416.  throw v0;
  #L08b418.  v3:= "wss:" @kind object;
  #L08b41c.  v0:= v8 @kind object;
  #L08b41e.  v4:= v2;
  #L08b420.  v5:= v6;
  #L08b422.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08b428.  v0:= temp;
  #L08b42a.  if v0 == 0 then goto L08b3da;
  #L08b42e.  v0:= new `java.lang.StringBuilder`;
  #L08b432.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b438.  v1:= "https:" @kind object;
  #L08b43c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b442.  v0:= temp @kind object;
  #L08b444.  call temp:= `substring`(v8, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08b44a.  v1:= temp @kind object;
  #L08b44c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b452.  v0:= temp @kind object;
  #L08b454.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b45a.  v8:= temp @kind object;
  #L08b45c.  goto L08b3da;
  #L08b45e.  call temp:= `a`(v7, v0) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L08b464.  v0:= temp @kind object;
  #L08b466.  return v0 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v3 @kind this, `java.lang.String` v4 @kind object, `a.y` v5 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08b478.  if v4 != 0 then goto L08b48c;
  #L08b47c.  v0:= new `java.lang.NullPointerException`;
  #L08b480.  v1:= "method == null" @kind object;
  #L08b484.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b48a.  throw v0;
  #L08b48c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08b492.  v0:= temp;
  #L08b494.  if v0 != 0 then goto L08b4a8;
  #L08b498.  v0:= new `java.lang.IllegalArgumentException`;
  #L08b49c.  v1:= "method.length() == 0" @kind object;
  #L08b4a0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b4a6.  throw v0;
  #L08b4a8.  if v5 == 0 then goto L08b4f6;
  #L08b4ac.  call temp:= `c`(v4) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L08b4b2.  v0:= temp;
  #L08b4b4.  if v0 != 0 then goto L08b4f6;
  #L08b4b8.  v0:= new `java.lang.IllegalArgumentException`;
  #L08b4bc.  v1:= new `java.lang.StringBuilder`;
  #L08b4c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b4c6.  v2:= "method " @kind object;
  #L08b4ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b4d0.  v1:= temp @kind object;
  #L08b4d2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b4d8.  v1:= temp @kind object;
  #L08b4da.  v2:= " must not have a request body." @kind object;
  #L08b4de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b4e4.  v1:= temp @kind object;
  #L08b4e6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b4ec.  v1:= temp @kind object;
  #L08b4ee.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b4f4.  throw v0;
  #L08b4f6.  if v5 != 0 then goto L08b544;
  #L08b4fa.  call temp:= `b`(v4) @signature `La/a/c/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L08b500.  v0:= temp;
  #L08b502.  if v0 == 0 then goto L08b544;
  #L08b506.  v0:= new `java.lang.IllegalArgumentException`;
  #L08b50a.  v1:= new `java.lang.StringBuilder`;
  #L08b50e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b514.  v2:= "method " @kind object;
  #L08b518.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b51e.  v1:= temp @kind object;
  #L08b520.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b526.  v1:= temp @kind object;
  #L08b528.  v2:= " must have a request body." @kind object;
  #L08b52c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b532.  v1:= temp @kind object;
  #L08b534.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b53a.  v1:= temp @kind object;
  #L08b53c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b542.  throw v0;
  #L08b544.  v3.`a.x$a.b` @type ^`java.lang.String` := v4 @kind object;
  #L08b548.  v3.`a.x$a.d` @type ^`a.y` := v5 @kind object;
  #L08b54c.  return v3 @kind object;
}
procedure `a.x$a` `a`(`a.x$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b560.  v0:= v1.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L08b564.  call temp:= `c`(v0, v2, v3) @signature `La/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08b56a.  return v1 @kind object;
}
procedure `a.x` `a`(`a.x$a` v2 @kind this) @signature `La/x$a;.a:()La/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08b57c.  v0:= v2.`a.x$a.a` @type ^`a.r` @kind object;
  #L08b580.  if v0 != 0 then goto L08b594;
  #L08b584.  v0:= new `java.lang.IllegalStateException`;
  #L08b588.  v1:= "url == null" @kind object;
  #L08b58c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b592.  throw v0;
  #L08b594.  v0:= new `a.x`;
  #L08b598.  call `<init>`(v0, v2) @signature `La/x;.<init>:(La/x$a;)V` @kind direct;
  #L08b59e.  return v0 @kind object;
}
procedure `a.x$a` `b`(`a.x$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b5b0.  v0:= v1.`a.x$a.c` @type ^`a.q$a` @kind object;
  #L08b5b4.  call temp:= `b`(v0, v2) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08b5ba.  return v1 @kind object;
}

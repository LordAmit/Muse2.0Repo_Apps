record `a.r$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.r$a.a` @AccessFlag ;
  `java.lang.String` `a.r$a.b` @AccessFlag ;
  `java.lang.String` `a.r$a.c` @AccessFlag ;
  `java.lang.String` `a.r$a.d` @AccessFlag ;
  `int` `a.r$a.e` @AccessFlag ;
  `java.util.List` `a.r$a.f` @AccessFlag FINAL;
  `java.util.List` `a.r$a.g` @AccessFlag ;
  `java.lang.String` `a.r$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`a.r$a` v2 @kind this) @signature `La/r$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0886dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0886e2.  v0:= "" @kind object;
  #L0886e6.  v2.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L0886ea.  v0:= "" @kind object;
  #L0886ee.  v2.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L0886f2.  v0:= -1I;
  #L0886f4.  v2.`a.r$a.e` @type ^`int` := v0;
  #L0886f8.  v0:= new `java.util.ArrayList`;
  #L0886fc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L088702.  v2.`a.r$a.f` @type ^`java.util.List` := v0 @kind object;
  #L088706.  v0:= v2.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08870a.  v1:= "" @kind object;
  #L08870e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088714.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v8 @kind object) @signature `La/r$a;.a:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L088728.  v7:= 16I;
  #L08872c.  v6:= 58I;
  #L088730.  v1:= 0I;
  #L088732.  v0:= -1I;
  #L088734.  v2:= v1;
  #L088736.  v3:= v0;
  #L088738.  v0:= v1;
  #L08873a.  v4:= length @variable v8;
  #L08873c.  if v0 >= v4 then goto L088774;
  #L088740.  v5:= v0;
  #L088742.  if v5 >= v7 then goto L088762;
  #L088746.  v4:= v8[v5] @kind byte;
  #L08874a.  if v4 != 0 then goto L088762;
  #L08874e.  v4:= v5 + 1;
  #L088752.  v4:= v8[v4] @kind byte;
  #L088756.  if v4 != 0 then goto L088762;
  #L08875a.  v4:= v5 + 2;
  #L08875e.  v5:= v4;
  #L088760.  goto L088742;
  #L088762.  v4:= v5 - v0 @kind int;
  #L088766.  if v4 <= v2 then goto L08876e;
  #L08876a.  v2:= v4;
  #L08876c.  v3:= v0;
  #L08876e.  v0:= v5 + 2;
  #L088772.  goto L08873a;
  #L088774.  v0:= new `b.c`;
  #L088778.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08877e.  v4:= length @variable v8;
  #L088780.  if v1 >= v4 then goto L0887ce;
  #L088784.  if v1 != v3 then goto L08879c;
  #L088788.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08878e.  v1:= v1 + v2 @kind int;
  #L088790.  if v1 != v7 then goto L08877e;
  #L088794.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08879a.  goto L08877e;
  #L08879c.  if v1 <= 0 then goto L0887a6;
  #L0887a0.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L0887a6.  v4:= v8[v1] @kind byte;
  #L0887aa.  v4:= v4 ^& 255;
  #L0887ae.  v4:= v4 ^< 8;
  #L0887b2.  v5:= v1 + 1;
  #L0887b6.  v5:= v8[v5] @kind byte;
  #L0887ba.  v5:= v5 ^& 255;
  #L0887be.  v4:= v4 ^| v5 @kind int;
  #L0887c0.  v4:= (`long`) v4 @kind i2l;
  #L0887c2.  call temp:= `i`(v0, v4) @signature `Lb/c;.i:(J)Lb/c;` @kind virtual;
  #L0887c8.  v1:= v1 + 2;
  #L0887cc.  goto L08877e;
  #L0887ce.  call temp:= `o`(v0) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L0887d4.  v0:= temp @kind object;
  #L0887d6.  return v0 @kind object;
}
procedure `void` `a`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `La/r$a;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0887e8.  v5:= 1I;
  #L0887ea.  if v8 != v9 then goto L0887f0;
  #L0887ee.  return @kind void;
  #L0887f0.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0887f6.  v0:= temp;
  #L0887f8.  v1:= 47I;
  #L0887fc.  if v0 == v1 then goto L088808;
  #L088800.  v1:= 92I;
  #L088804.  if v0 != v1 then goto L088852;
  #L088808.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08880c.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L088812.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088816.  v1:= "" @kind object;
  #L08881a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088820.  v8:= v8 + 1;
  #L088824.  v2:= v8;
  #L088826.  if v2 >= v9 then goto L0887ee;
  #L08882a.  v0:= "/\\" @kind object;
  #L08882e.  call temp:= `a`(v7, v2, v9, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L088834.  v3:= temp;
  #L088836.  if v3 >= v9 then goto L088872;
  #L08883a.  v4:= v5;
  #L08883c.  v0:= v6 @kind object;
  #L08883e.  v1:= v7 @kind object;
  #L088840.  call `a`(v0, v1, v2, v3, v4, v5) @signature `La/r$a;.a:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L088846.  if v4 == 0 then goto L08884e;
  #L08884a.  v3:= v3 + 1;
  #L08884e.  v2:= v3;
  #L088850.  goto L088826;
  #L088852.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088856.  v1:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08885a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L088860.  v1:= temp;
  #L088862.  v1:= v1 + -1;
  #L088866.  v2:= "" @kind object;
  #L08886a.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L088870.  goto L088824;
  #L088872.  v4:= 0I;
  #L088874.  goto L08883c;
}
procedure `void` `a`(`a.r$a` v8 @kind this, `java.lang.String` v9 @kind object, `int` v10 , `int` v11 , `boolean` v12 , `boolean` v13 ) @signature `La/r$a;.a:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L088888.  v5:= 0I;
  #L08888a.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L08888e.  v7:= 1I;
  #L088890.  v0:= v9 @kind object;
  #L088892.  v1:= v10;
  #L088894.  v2:= v11;
  #L088896.  v4:= v13;
  #L088898.  v6:= v5;
  #L08889a.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L0888a0.  v1:= temp @kind object;
  #L0888a2.  call temp:= `f`(v8, v1) @signature `La/r$a;.f:(Ljava/lang/String;)Z` @kind direct;
  #L0888a8.  v0:= temp;
  #L0888aa.  if v0 == 0 then goto L0888b0;
  #L0888ae.  return @kind void;
  #L0888b0.  call temp:= `g`(v8, v1) @signature `La/r$a;.g:(Ljava/lang/String;)Z` @kind direct;
  #L0888b6.  v0:= temp;
  #L0888b8.  if v0 == 0 then goto L0888c4;
  #L0888bc.  call `d`(v8) @signature `La/r$a;.d:()V` @kind direct;
  #L0888c2.  goto L0888ae;
  #L0888c4.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0888c8.  v2:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0888cc.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0888d2.  v2:= temp;
  #L0888d4.  v2:= v2 + -1;
  #L0888d8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0888de.  v0:= temp @kind object;
  #L0888e0.  v0:= (`java.lang.String`) v0 @kind object;
  #L0888e4.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L0888ea.  v0:= temp;
  #L0888ec.  if v0 == 0 then goto L08891e;
  #L0888f0.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0888f4.  v2:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0888f8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0888fe.  v2:= temp;
  #L088900.  v2:= v2 + -1;
  #L088904.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L08890a.  if v12 == 0 then goto L0888ae;
  #L08890e.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088912.  v1:= "" @kind object;
  #L088916.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08891c.  goto L0888ae;
  #L08891e.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088922.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088928.  goto L08890a;
}
procedure `boolean` `a`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `La/r$a;.a:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L08893c.  v1:= 0I;
  #L08893e.  v0:= v8;
  #L088940.  v4:= v11;
  #L088942.  if v0 >= v9 then goto L0889d0;
  #L088946.  v2:= length @variable v10;
  #L088948.  if v4 != v2 then goto L088950;
  #L08894c.  v0:= v1;
  #L08894e.  return v0;
  #L088950.  if v4 == v11 then goto L08896c;
  #L088954.  call temp:= `charAt`(v7, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08895a.  v2:= temp;
  #L08895c.  v3:= 46I;
  #L088960.  if v2 == v3 then goto L088968;
  #L088964.  v0:= v1;
  #L088966.  goto L08894e;
  #L088968.  v0:= v0 + 1;
  #L08896c.  v2:= v1;
  #L08896e.  v3:= v0;
  #L088970.  if v3 >= v9 then goto L08898c;
  #L088974.  call temp:= `charAt`(v7, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08897a.  v5:= temp;
  #L08897c.  v6:= 48I;
  #L088980.  if v5 < v6 then goto L08898c;
  #L088984.  v6:= 57I;
  #L088988.  if v5 <= v6 then goto L088998;
  #L08898c.  v0:= v3 - v0 @kind int;
  #L088990.  if v0 != 0 then goto L0889c0;
  #L088994.  v0:= v1;
  #L088996.  goto L08894e;
  #L088998.  if v2 != 0 then goto L0889a4;
  #L08899c.  if v0 == v3 then goto L0889a4;
  #L0889a0.  v0:= v1;
  #L0889a2.  goto L08894e;
  #L0889a4.  v2:= v2 * 10;
  #L0889a8.  v2:= v2 + v5 @kind int;
  #L0889aa.  v2:= v2 + -48;
  #L0889ae.  v5:= 255I;
  #L0889b2.  if v2 <= v5 then goto L0889ba;
  #L0889b6.  v0:= v1;
  #L0889b8.  goto L08894e;
  #L0889ba.  v3:= v3 + 1;
  #L0889be.  goto L088970;
  #L0889c0.  v0:= v4 + 1;
  #L0889c4.  v2:= (`byte`) v2 @kind i2b;
  #L0889c6.  v10[v4]:= v2 @kind byte;
  #L0889ca.  v4:= v0;
  #L0889cc.  v0:= v3;
  #L0889ce.  goto L088942;
  #L0889d0.  v0:= v11 + 4;
  #L0889d4.  if v4 == v0 then goto L0889dc;
  #L0889d8.  v0:= v1;
  #L0889da.  goto L08894e;
  #L0889dc.  v0:= 1I;
  #L0889de.  goto L08894e;
}
procedure `int` `b`(`java.lang.String` v8 @kind object, `int` v9 , `int` v10 ) @signature `La/r$a;.b:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0889f0.  v7:= 122I;
  #L0889f4.  v6:= 97I;
  #L0889f8.  v5:= 90I;
  #L0889fc.  v4:= 65I;
  #L088a00.  v0:= -1I;
  #L088a02.  v1:= v10 - v9 @kind int;
  #L088a06.  v2:= 2I;
  #L088a08.  if v1 >= v2 then goto L088a0e;
  #L088a0c.  return v0;
  #L088a0e.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088a14.  v1:= temp;
  #L088a16.  if v1 < v6 then goto L088a1e;
  #L088a1a.  if v1 <= v7 then goto L088a26;
  #L088a1e.  if v1 < v4 then goto L088a0c;
  #L088a22.  if v1 > v5 then goto L088a0c;
  #L088a26.  v1:= v9 + 1;
  #L088a2a.  if v1 >= v10 then goto L088a0c;
  #L088a2e.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088a34.  v2:= temp;
  #L088a36.  if v2 < v6 then goto L088a3e;
  #L088a3a.  if v2 <= v7 then goto L088a6e;
  #L088a3e.  if v2 < v4 then goto L088a46;
  #L088a42.  if v2 <= v5 then goto L088a6e;
  #L088a46.  v3:= 48I;
  #L088a4a.  if v2 < v3 then goto L088a56;
  #L088a4e.  v3:= 57I;
  #L088a52.  if v2 <= v3 then goto L088a6e;
  #L088a56.  v3:= 43I;
  #L088a5a.  if v2 == v3 then goto L088a6e;
  #L088a5e.  v3:= 45I;
  #L088a62.  if v2 == v3 then goto L088a6e;
  #L088a66.  v3:= 46I;
  #L088a6a.  if v2 != v3 then goto L088a74;
  #L088a6e.  v1:= v1 + 1;
  #L088a72.  goto L088a2a;
  #L088a74.  v3:= 58I;
  #L088a78.  if v2 != v3 then goto L088a0c;
  #L088a7c.  v0:= v1;
  #L088a7e.  goto L088a0c;
}
procedure `int` `c`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.c:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L088a90.  v0:= 0I;
  #L088a92.  if v4 >= v5 then goto L088ab8;
  #L088a96.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088a9c.  v1:= temp;
  #L088a9e.  v2:= 92I;
  #L088aa2.  if v1 == v2 then goto L088aae;
  #L088aa6.  v2:= 47I;
  #L088aaa.  if v1 != v2 then goto L088ab8;
  #L088aae.  v0:= v0 + 1;
  #L088ab2.  v4:= v4 + 1;
  #L088ab6.  goto L088a92;
  #L088ab8.  return v0;
}
procedure `int` `d`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.d:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L088acc.  v0:= v4;
  #L088ace.  if v0 >= v5 then goto L088b00;
  #L088ad2.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088ad8.  v1:= temp;
  #L088ada.  goto L088b04;
  #L088ae0.  v0:= v0 + 1;
  #L088ae4.  goto L088ace;
  #L088ae6.  v0:= v0 + 1;
  #L088aea.  if v0 >= v5 then goto L088ae0;
  #L088aee.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088af4.  v1:= temp;
  #L088af6.  v2:= 93I;
  #L088afa.  if v1 != v2 then goto L088ae6;
  #L088afe.  goto L088ae0;
  #L088b00.  v0:= v5;
  #L088b02.  return v0;
  #L088b04.  switch v1
                  | 58 => goto L088b02
                  | 91 => goto L088ae6
                  | else => goto L088ae0;
}
procedure `void` `d`(`a.r$a` v3 @kind this) @signature `La/r$a;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L088b28.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088b2c.  v1:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088b30.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L088b36.  v1:= temp;
  #L088b38.  v1:= v1 + -1;
  #L088b3c.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L088b42.  v0:= temp @kind object;
  #L088b44.  v0:= (`java.lang.String`) v0 @kind object;
  #L088b48.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L088b4e.  v0:= temp;
  #L088b50.  if v0 == 0 then goto L088b84;
  #L088b54.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088b58.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L088b5e.  v0:= temp;
  #L088b60.  if v0 != 0 then goto L088b84;
  #L088b64.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088b68.  v1:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088b6c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L088b72.  v1:= temp;
  #L088b74.  v1:= v1 + -1;
  #L088b78.  v2:= "" @kind object;
  #L088b7c.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L088b82.  return @kind void;
  #L088b84.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L088b88.  v1:= "" @kind object;
  #L088b8c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088b92.  goto L088b82;
}
procedure `java.lang.String` `e`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L088ba4.  v2:= 0I;
  #L088ba6.  call temp:= `a`(v3, v4, v5, v2) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L088bac.  v0:= temp @kind object;
  #L088bae.  v1:= ":" @kind object;
  #L088bb2.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L088bb8.  v1:= temp;
  #L088bba.  if v1 == 0 then goto L088c36;
  #L088bbe.  v1:= "[" @kind object;
  #L088bc2.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L088bc8.  v1:= temp;
  #L088bca.  if v1 == 0 then goto L088bfc;
  #L088bce.  v1:= "]" @kind object;
  #L088bd2.  call temp:= `endsWith`(v0, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L088bd8.  v1:= temp;
  #L088bda.  if v1 == 0 then goto L088bfc;
  #L088bde.  v1:= 1I;
  #L088be0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088be6.  v2:= temp;
  #L088be8.  v2:= v2 + -1;
  #L088bec.  call temp:= `f`(v0, v1, v2) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L088bf2.  v0:= temp @kind object;
  #L088bf4.  if v0 != 0 then goto L088c0e;
  #L088bf8.  v0:= 0I;
  #L088bfa.  return v0 @kind object;
  #L088bfc.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088c02.  v1:= temp;
  #L088c04.  call temp:= `f`(v0, v2, v1) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L088c0a.  v0:= temp @kind object;
  #L088c0c.  goto L088bf4;
  #L088c0e.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L088c14.  v0:= temp @kind object;
  #L088c16.  v1:= length @variable v0;
  #L088c18.  v2:= 16I;
  #L088c1c.  if v1 != v2 then goto L088c2a;
  #L088c20.  call temp:= `a`(v0) @signature `La/r$a;.a:([B)Ljava/lang/String;` @kind static;
  #L088c26.  v0:= temp @kind object;
  #L088c28.  goto L088bfa;
  #L088c2a.  v0:= new `java.lang.AssertionError`;
  #L088c2e.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L088c34.  throw v0;
  #L088c36.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L088c3c.  v0:= temp @kind object;
  #L088c3e.  goto L088bfa;
}
procedure `java.net.InetAddress` `f`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L088c50.  v11:= 1I;
  #L088c52.  v7:= -1I;
  #L088c54.  v3:= 0I;
  #L088c56.  v5:= 0I;
  #L088c58.  v0:= 16I;
  #L088c5c.  v8:= new `byte`[v0];
  #L088c60.  v0:= v13;
  #L088c62.  v4:= v7;
  #L088c64.  v1:= v7;
  #L088c66.  v2:= v5;
  #L088c68.  if v0 >= v14 then goto L088ca6;
  #L088c6c.  v6:= length @variable v8;
  #L088c6e.  if v2 != v6 then goto L088c76;
  #L088c72.  v0:= v3 @kind object;
  #L088c74.  return v0 @kind object;
  #L088c76.  v6:= v0 + 2;
  #L088c7a.  if v6 > v14 then goto L088cb4;
  #L088c7e.  v6:= "::" @kind object;
  #L088c82.  v9:= 2I;
  #L088c84.  call temp:= `regionMatches`(v12, v0, v6, v5, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L088c8a.  v6:= temp;
  #L088c8c.  if v6 == 0 then goto L088cb4;
  #L088c90.  if v1 == v7 then goto L088c98;
  #L088c94.  v0:= v3 @kind object;
  #L088c96.  goto L088c74;
  #L088c98.  v0:= v0 + 2;
  #L088c9c.  v1:= v2 + 2;
  #L088ca0.  if v0 != v14 then goto L088d92;
  #L088ca4.  v2:= v1;
  #L088ca6.  v0:= length @variable v8;
  #L088ca8.  if v2 == v0 then goto L088d78;
  #L088cac.  if v1 != v7 then goto L088d5a;
  #L088cb0.  v0:= v3 @kind object;
  #L088cb2.  goto L088c74;
  #L088cb4.  if v2 == 0 then goto L088ccc;
  #L088cb8.  v6:= ":" @kind object;
  #L088cbc.  call temp:= `regionMatches`(v12, v0, v6, v5, v11) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L088cc2.  v6:= temp;
  #L088cc4.  if v6 == 0 then goto L088cfa;
  #L088cc8.  v0:= v0 + 1;
  #L088ccc.  v4:= v5;
  #L088cce.  v6:= v0;
  #L088cd0.  if v6 >= v14 then goto L088ce8;
  #L088cd4.  call temp:= `charAt`(v12, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088cda.  v9:= temp;
  #L088cdc.  call temp:= `a`(v9) @signature `La/r;.a:(C)I` @kind static;
  #L088ce2.  v9:= temp;
  #L088ce4.  if v9 != v7 then goto L088d28;
  #L088ce8.  v9:= v6 - v0 @kind int;
  #L088cec.  if v9 == 0 then goto L088cf6;
  #L088cf0.  v10:= 4I;
  #L088cf2.  if v9 <= v10 then goto L088d34;
  #L088cf6.  v0:= v3 @kind object;
  #L088cf8.  goto L088c74;
  #L088cfa.  v6:= "." @kind object;
  #L088cfe.  call temp:= `regionMatches`(v12, v0, v6, v5, v11) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L088d04.  v0:= temp;
  #L088d06.  if v0 == 0 then goto L088d24;
  #L088d0a.  v0:= v2 + -2;
  #L088d0e.  call temp:= `a`(v12, v4, v14, v8, v0) @signature `La/r$a;.a:(Ljava/lang/String;II[BI)Z` @kind static;
  #L088d14.  v0:= temp;
  #L088d16.  if v0 != 0 then goto L088d1e;
  #L088d1a.  v0:= v3 @kind object;
  #L088d1c.  goto L088c74;
  #L088d1e.  v2:= v2 + 2;
  #L088d22.  goto L088ca6;
  #L088d24.  v0:= v3 @kind object;
  #L088d26.  goto L088c74;
  #L088d28.  v4:= v4 ^< 4;
  #L088d2c.  v4:= v4 + v9 @kind int;
  #L088d2e.  v6:= v6 + 1;
  #L088d32.  goto L088cd0;
  #L088d34.  v9:= v2 + 1;
  #L088d38.  v10:= v4 ^>> 8;
  #L088d3c.  v10:= v10 ^& 255;
  #L088d40.  v10:= (`byte`) v10 @kind i2b;
  #L088d42.  v8[v2]:= v10 @kind byte;
  #L088d46.  v2:= v9 + 1;
  #L088d4a.  v4:= v4 ^& 255;
  #L088d4e.  v4:= (`byte`) v4 @kind i2b;
  #L088d50.  v8[v9]:= v4 @kind byte;
  #L088d54.  v4:= v0;
  #L088d56.  v0:= v6;
  #L088d58.  goto L088c68;
  #L088d5a.  v0:= length @variable v8;
  #L088d5c.  v3:= v2 - v1 @kind int;
  #L088d60.  v0:= v0 - v3 @kind int;
  #L088d62.  v3:= v2 - v1 @kind int;
  #L088d66.  call `arraycopy`(v8, v1, v8, v0, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L088d6c.  v0:= length @variable v8;
  #L088d6e.  v0:= v0 - v2 @kind int;
  #L088d70.  v0:= v0 + v1 @kind int;
  #L088d72.  call `fill`(v8, v1, v0, v5) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #Try_start0.  
  #L088d78.  call temp:= `getByAddress`(v8) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #Try_end0.  
  #L088d7e.  v0:= temp @kind object;
  #L088d80.  goto L088c74;
  #L088d84.  v0:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L088d86.  v0:= new `java.lang.AssertionError`;
  #L088d8a.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L088d90.  throw v0;
  #L088d92.  v2:= v1;
  #L088d94.  goto L088ccc;
  catch `java.net.UnknownHostException` @[Try_start0..Try_end0] goto L088d84;
}
procedure `boolean` `f`(`a.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r$a;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L088db8.  v0:= "." @kind object;
  #L088dbc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L088dc2.  v0:= temp;
  #L088dc4.  if v0 != 0 then goto L088dd8;
  #L088dc8.  v0:= "%2e" @kind object;
  #L088dcc.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L088dd2.  v0:= temp;
  #L088dd4.  if v0 == 0 then goto L088ddc;
  #L088dd8.  v0:= 1I;
  #L088dda.  return v0;
  #L088ddc.  v0:= 0I;
  #L088dde.  goto L088dda;
}
procedure `int` `g`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 ) @signature `La/r$a;.g:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L088df0.  v8:= -1I;
  #Try_start0.  
  #L088df2.  v3:= "" @kind object;
  #L088df6.  v4:= 0I;
  #L088df8.  v5:= 0I;
  #L088dfa.  v6:= 0I;
  #L088dfc.  v7:= 1I;
  #L088dfe.  v0:= v9 @kind object;
  #L088e00.  v1:= v10;
  #L088e02.  v2:= v11;
  #L088e04.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L088e0a.  v0:= temp @kind object;
  #L088e0c.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L088e12.  v0:= temp;
  #L088e14.  if v0 <= 0 then goto L088e24;
  #L088e18.  v1:= 65535I;
  #L088e1e.  if v0 > v1 then goto L088e24;
  #L088e22.  return v0;
  #L088e24.  v0:= v8;
  #L088e26.  goto L088e22;
  #L088e28.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L088e2a.  v0:= v8;
  #L088e2c.  goto L088e22;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L088e28;
}
procedure `boolean` `g`(`a.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r$a;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L088e50.  v0:= ".." @kind object;
  #L088e54.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L088e5a.  v0:= temp;
  #L088e5c.  if v0 != 0 then goto L088e90;
  #L088e60.  v0:= "%2e." @kind object;
  #L088e64.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L088e6a.  v0:= temp;
  #L088e6c.  if v0 != 0 then goto L088e90;
  #L088e70.  v0:= ".%2e" @kind object;
  #L088e74.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L088e7a.  v0:= temp;
  #L088e7c.  if v0 != 0 then goto L088e90;
  #L088e80.  v0:= "%2e%2e" @kind object;
  #L088e84.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L088e8a.  v0:= temp;
  #L088e8c.  if v0 == 0 then goto L088e94;
  #L088e90.  v0:= 1I;
  #L088e92.  return v0;
  #L088e94.  v0:= 0I;
  #L088e96.  goto L088e92;
}
procedure `int` `a`(`a.r$a` v2 @kind this) @signature `La/r$a;.a:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L088ea8.  v0:= v2.`a.r$a.e` @type ^`int`;
  #L088eac.  v1:= -1I;
  #L088eae.  if v0 == v1 then goto L088eb8;
  #L088eb2.  v0:= v2.`a.r$a.e` @type ^`int`;
  #L088eb6.  return v0;
  #L088eb8.  v0:= v2.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L088ebc.  call temp:= `a`(v0) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L088ec2.  v0:= temp;
  #L088ec4.  goto L088eb6;
}
procedure `a.r$a$a` `a`(`a.r$a` v13 @kind this, `a.r` v14 @kind object, `java.lang.String` v15 @kind object) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L088ed8.  v0:= 0I;
  #L088eda.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088ee0.  v1:= temp;
  #L088ee2.  call temp:= `a`(v15, v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;II)I` @kind static;
  #L088ee8.  v2:= temp;
  #L088eea.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088ef0.  v0:= temp;
  #L088ef2.  call temp:= `b`(v15, v2, v0) @signature `La/a/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L088ef8.  v11:= temp;
  #L088efa.  call temp:= `b`(v15, v2, v11) @signature `La/r$a;.b:(Ljava/lang/String;II)I` @kind static;
  #L088f00.  v0:= temp;
  #L088f02.  v1:= -1I;
  #L088f04.  if v0 == v1 then goto L088fca;
  #L088f08.  v1:= 1I;
  #L088f0a.  v3:= "https:" @kind object;
  #L088f0e.  v4:= 0I;
  #L088f10.  v5:= 6I;
  #L088f12.  v0:= v15 @kind object;
  #L088f14.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L088f1a.  v0:= temp;
  #L088f1c.  if v0 == 0 then goto L088f94;
  #L088f20.  v0:= "https" @kind object;
  #L088f24.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L088f28.  v0:= "https:" @kind object;
  #L088f2c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088f32.  v0:= temp;
  #L088f34.  v2:= v2 + v0 @kind int;
  #L088f36.  v1:= 0I;
  #L088f38.  v0:= 0I;
  #L088f3a.  call temp:= `c`(v15, v2, v11) @signature `La/r$a;.c:(Ljava/lang/String;II)I` @kind static;
  #L088f40.  v3:= temp;
  #L088f42.  v4:= 2I;
  #L088f44.  if v3 >= v4 then goto L088f60;
  #L088f48.  if v14 == 0 then goto L088f60;
  #L088f4c.  v4:= v14.`a.r.a` @type ^`java.lang.String` @kind object;
  #L088f50.  v5:= v13.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L088f54.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L088f5a.  v4:= temp;
  #L088f5c.  if v4 != 0 then goto L0891c4;
  #L088f60.  v2:= v2 + v3 @kind int;
  #L088f62.  v8:= v0;
  #L088f64.  v9:= v1;
  #L088f66.  v1:= v2;
  #L088f68.  v0:= "@/\\?#" @kind object;
  #L088f6c.  call temp:= `a`(v15, v1, v11, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L088f72.  v10:= temp;
  #L088f74.  if v10 == v11 then goto L088fde;
  #L088f78.  call temp:= `charAt`(v15, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088f7e.  v0:= temp;
  #L088f80.  goto L089230;
  #L088f86.  v0:= v8;
  #L088f88.  v2:= v1;
  #L088f8a.  v1:= v9;
  #L088f8c.  v8:= v0;
  #L088f8e.  v9:= v1;
  #L088f90.  v1:= v2;
  #L088f92.  goto L088f68;
  #L088f94.  v1:= 1I;
  #L088f96.  v3:= "http:" @kind object;
  #L088f9a.  v4:= 0I;
  #L088f9c.  v5:= 5I;
  #L088f9e.  v0:= v15 @kind object;
  #L088fa0.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L088fa6.  v0:= temp;
  #L088fa8.  if v0 == 0 then goto L088fc4;
  #L088fac.  v0:= "http" @kind object;
  #L088fb0.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L088fb4.  v0:= "http:" @kind object;
  #L088fb8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088fbe.  v0:= temp;
  #L088fc0.  v2:= v2 + v0 @kind int;
  #L088fc2.  goto L088f36;
  #L088fc4.  v0:= `@@a.r$a$a.c` @type ^`a.r$a$a` @kind object;
  #L088fc8.  return v0 @kind object;
  #L088fca.  if v14 == 0 then goto L088fd8;
  #L088fce.  v0:= v14.`a.r.a` @type ^`java.lang.String` @kind object;
  #L088fd2.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L088fd6.  goto L088f36;
  #L088fd8.  v0:= `@@a.r$a$a.b` @type ^`a.r$a$a` @kind object;
  #L088fdc.  goto L088fc8;
  #L088fde.  v0:= -1I;
  #L088fe0.  goto L088f80;
  #L088fe2.  if v8 != 0 then goto L089074;
  #L088fe6.  v0:= 58I;
  #L088fea.  call temp:= `a`(v15, v1, v10, v0) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L088ff0.  v2:= temp;
  #L088ff2.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L088ff6.  v4:= 1I;
  #L088ff8.  v5:= 0I;
  #L088ffa.  v6:= 0I;
  #L088ffc.  v7:= 1I;
  #L088ffe.  v0:= v15 @kind object;
  #L089000.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089006.  v0:= temp @kind object;
  #L089008.  if v9 == 0 then goto L08903e;
  #L08900c.  v1:= new `java.lang.StringBuilder`;
  #L089010.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089016.  v3:= v13.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L08901a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089020.  v1:= temp @kind object;
  #L089022.  v3:= "%40" @kind object;
  #L089026.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08902c.  v1:= temp @kind object;
  #L08902e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089034.  v0:= temp @kind object;
  #L089036.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08903c.  v0:= temp @kind object;
  #L08903e.  v13.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L089042.  if v2 == v10 then goto L089068;
  #L089046.  v8:= 1I;
  #L089048.  v1:= v2 + 1;
  #L08904c.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L089050.  v4:= 1I;
  #L089052.  v5:= 0I;
  #L089054.  v6:= 0I;
  #L089056.  v7:= 1I;
  #L089058.  v0:= v15 @kind object;
  #L08905a.  v2:= v10;
  #L08905c.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089062.  v0:= temp @kind object;
  #L089064.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L089068.  v9:= 1I;
  #L08906a.  v2:= v10 + 1;
  #L08906e.  v0:= v8;
  #L089070.  v1:= v9;
  #L089072.  goto L088f8c;
  #L089074.  v0:= new `java.lang.StringBuilder`;
  #L089078.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08907e.  v2:= v13.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L089082.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089088.  v0:= temp @kind object;
  #L08908a.  v2:= "%40" @kind object;
  #L08908e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089094.  v12:= temp @kind object;
  #L089096.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08909a.  v4:= 1I;
  #L08909c.  v5:= 0I;
  #L08909e.  v6:= 0I;
  #L0890a0.  v7:= 1I;
  #L0890a2.  v0:= v15 @kind object;
  #L0890a4.  v2:= v10;
  #L0890a6.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L0890ac.  v0:= temp @kind object;
  #L0890ae.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0890b4.  v0:= temp @kind object;
  #L0890b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0890bc.  v0:= temp @kind object;
  #L0890be.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L0890c2.  goto L08906a;
  #L0890c4.  call temp:= `d`(v15, v1, v10) @signature `La/r$a;.d:(Ljava/lang/String;II)I` @kind static;
  #L0890ca.  v0:= temp;
  #L0890cc.  v2:= v0 + 1;
  #L0890d0.  if v2 >= v10 then goto L089102;
  #L0890d4.  call temp:= `e`(v15, v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L0890da.  v1:= temp @kind object;
  #L0890dc.  v13.`a.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L0890e0.  v0:= v0 + 1;
  #L0890e4.  call temp:= `g`(v15, v0, v10) @signature `La/r$a;.g:(Ljava/lang/String;II)I` @kind static;
  #L0890ea.  v0:= temp;
  #L0890ec.  v13.`a.r$a.e` @type ^`int` := v0;
  #L0890f0.  v0:= v13.`a.r$a.e` @type ^`int`;
  #L0890f4.  v1:= -1I;
  #L0890f6.  if v0 != v1 then goto L08911e;
  #L0890fa.  v0:= `@@a.r$a$a.d` @type ^`a.r$a$a` @kind object;
  #L0890fe.  goto L088fc8;
  #L089102.  call temp:= `e`(v15, v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L089108.  v0:= temp @kind object;
  #L08910a.  v13.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08910e.  v0:= v13.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L089112.  call temp:= `a`(v0) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L089118.  v0:= temp;
  #L08911a.  v13.`a.r$a.e` @type ^`int` := v0;
  #L08911e.  v0:= v13.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L089122.  if v0 != 0 then goto L08912e;
  #L089126.  v0:= `@@a.r$a$a.e` @type ^`a.r$a$a` @kind object;
  #L08912a.  goto L088fc8;
  #L08912e.  v2:= v10;
  #L089130.  v0:= "?#" @kind object;
  #L089134.  call temp:= `a`(v15, v2, v11, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08913a.  v0:= temp;
  #L08913c.  call `a`(v13, v15, v2, v0) @signature `La/r$a;.a:(Ljava/lang/String;II)V` @kind direct;
  #L089142.  if v0 >= v11 then goto L08922c;
  #L089146.  call temp:= `charAt`(v15, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08914c.  v1:= temp;
  #L08914e.  v2:= 63I;
  #L089152.  if v1 != v2 then goto L08922c;
  #L089156.  v1:= 35I;
  #L08915a.  call temp:= `a`(v15, v0, v11, v1) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L089160.  v2:= temp;
  #L089162.  v1:= v0 + 1;
  #L089166.  v3:= " \"'<>#" @kind object;
  #L08916a.  v4:= 1I;
  #L08916c.  v5:= 0I;
  #L08916e.  v6:= 1I;
  #L089170.  v7:= 1I;
  #L089172.  v0:= v15 @kind object;
  #L089174.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08917a.  v0:= temp @kind object;
  #L08917c.  call temp:= `b`(v0) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L089182.  v0:= temp @kind object;
  #L089184.  v13.`a.r$a.g` @type ^`java.util.List` := v0 @kind object;
  #L089188.  if v2 >= v11 then goto L0891bc;
  #L08918c.  call temp:= `charAt`(v15, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089192.  v0:= temp;
  #L089194.  v1:= 35I;
  #L089198.  if v0 != v1 then goto L0891bc;
  #L08919c.  v1:= v2 + 1;
  #L0891a0.  v3:= "" @kind object;
  #L0891a4.  v4:= 1I;
  #L0891a6.  v5:= 0I;
  #L0891a8.  v6:= 0I;
  #L0891aa.  v7:= 0I;
  #L0891ac.  v0:= v15 @kind object;
  #L0891ae.  v2:= v11;
  #L0891b0.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L0891b6.  v0:= temp @kind object;
  #L0891b8.  v13.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L0891bc.  v0:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L0891c0.  goto L088fc8;
  #L0891c4.  call temp:= `d`(v14) @signature `La/r;.d:()Ljava/lang/String;` @kind virtual;
  #L0891ca.  v0:= temp @kind object;
  #L0891cc.  v13.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L0891d0.  call temp:= `e`(v14) @signature `La/r;.e:()Ljava/lang/String;` @kind virtual;
  #L0891d6.  v0:= temp @kind object;
  #L0891d8.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L0891dc.  v0:= v14.`a.r.b` @type ^`java.lang.String` @kind object;
  #L0891e0.  v13.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L0891e4.  v0:= v14.`a.r.c` @type ^`int`;
  #L0891e8.  v13.`a.r$a.e` @type ^`int` := v0;
  #L0891ec.  v0:= v13.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0891f0.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L0891f6.  v0:= v13.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L0891fa.  call temp:= `i`(v14) @signature `La/r;.i:()Ljava/util/List;` @kind virtual;
  #L089200.  v1:= temp @kind object;
  #L089202.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L089208.  if v2 == v11 then goto L08921c;
  #L08920c.  call temp:= `charAt`(v15, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089212.  v0:= temp;
  #L089214.  v1:= 35I;
  #L089218.  if v0 != v1 then goto L089130;
  #L08921c.  call temp:= `j`(v14) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L089222.  v0:= temp @kind object;
  #L089224.  call temp:= `e`(v13, v0) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08922a.  goto L089130;
  #L08922c.  v2:= v0;
  #L08922e.  goto L089188;
  #L089230.  switch v0
                  | -1 => goto L0890c4
                  | 35 => goto L0890c4
                  | 47 => goto L0890c4
                  | 63 => goto L0890c4
                  | 64 => goto L088fe2
                  | 92 => goto L0890c4
                  | else => goto L088f86;
}
procedure `a.r$a` `a`(`a.r$a` v3 @kind this, `int` v4 ) @signature `La/r$a;.a:(I)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L089274.  if v4 <= 0 then goto L089282;
  #L089278.  v0:= 65535I;
  #L08927e.  if v4 <= v0 then goto L0892b4;
  #L089282.  v0:= new `java.lang.IllegalArgumentException`;
  #L089286.  v1:= new `java.lang.StringBuilder`;
  #L08928a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089290.  v2:= "unexpected port: " @kind object;
  #L089294.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08929a.  v1:= temp @kind object;
  #L08929c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0892a2.  v1:= temp @kind object;
  #L0892a4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0892aa.  v1:= temp @kind object;
  #L0892ac.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0892b2.  throw v0;
  #L0892b4.  v3.`a.r$a.e` @type ^`int` := v4;
  #L0892b8.  return v3 @kind object;
}
procedure `a.r$a` `a`(`a.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r$a;.a:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0892cc.  if v4 != 0 then goto L0892e0;
  #L0892d0.  v0:= new `java.lang.NullPointerException`;
  #L0892d4.  v1:= "scheme == null" @kind object;
  #L0892d8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0892de.  throw v0;
  #L0892e0.  v0:= "http" @kind object;
  #L0892e4.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0892ea.  v0:= temp;
  #L0892ec.  if v0 == 0 then goto L0892fa;
  #L0892f0.  v0:= "http" @kind object;
  #L0892f4.  v3.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L0892f8.  return v3 @kind object;
  #L0892fa.  v0:= "https" @kind object;
  #L0892fe.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L089304.  v0:= temp;
  #L089306.  if v0 == 0 then goto L089314;
  #L08930a.  v0:= "https" @kind object;
  #L08930e.  v3.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L089312.  goto L0892f8;
  #L089314.  v0:= new `java.lang.IllegalArgumentException`;
  #L089318.  v1:= new `java.lang.StringBuilder`;
  #L08931c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089322.  v2:= "unexpected scheme: " @kind object;
  #L089326.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08932c.  v1:= temp @kind object;
  #L08932e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089334.  v1:= temp @kind object;
  #L089336.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08933c.  v1:= temp @kind object;
  #L08933e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089344.  throw v0;
}
procedure `a.r$a` `b`(`a.r$a` v11 @kind this) @signature `La/r$a;.b:()La/r$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L089358.  v4:= 0I;
  #L08935a.  v2:= 1I;
  #L08935c.  v0:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089360.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089366.  v7:= temp;
  #L089368.  v6:= v4;
  #L08936a.  if v6 >= v7 then goto L0893a0;
  #L08936e.  v0:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089372.  call temp:= `get`(v0, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089378.  v0:= temp @kind object;
  #L08937a.  v0:= (`java.lang.String`) v0 @kind object;
  #L08937e.  v8:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089382.  v1:= "[]" @kind object;
  #L089386.  v3:= v2;
  #L089388.  v5:= v2;
  #L08938a.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089390.  v0:= temp @kind object;
  #L089392.  call temp:= `set`(v8, v6, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L089398.  v0:= v6 + 1;
  #L08939c.  v6:= v0;
  #L08939e.  goto L08936a;
  #L0893a0.  v0:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L0893a4.  if v0 == 0 then goto L0893f2;
  #L0893a8.  v0:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L0893ac.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0893b2.  v1:= temp;
  #L0893b4.  v0:= v4;
  #L0893b6.  if v0 >= v1 then goto L0893f2;
  #L0893ba.  v3:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L0893be.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0893c4.  v5:= temp @kind object;
  #L0893c6.  v5:= (`java.lang.String`) v5 @kind object;
  #L0893ca.  if v5 == 0 then goto L0893ec;
  #L0893ce.  v3:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L0893d2.  v6:= "\\^`{|}" @kind object;
  #L0893d6.  v7:= v2;
  #L0893d8.  v8:= v2;
  #L0893da.  v9:= v2;
  #L0893dc.  v10:= v2;
  #L0893de.  call temp:= `a`(v5, v6, v7, v8, v9, v10) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L0893e4.  v5:= temp @kind object;
  #L0893e6.  call temp:= `set`(v3, v0, v5) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L0893ec.  v0:= v0 + 1;
  #L0893f0.  goto L0893b6;
  #L0893f2.  v0:= v11.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L0893f6.  if v0 == 0 then goto L089412;
  #L0893fa.  v0:= v11.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L0893fe.  v1:= " \"#<>\\^`{|}" @kind object;
  #L089402.  v3:= v2;
  #L089404.  v5:= v4;
  #L089406.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08940c.  v0:= temp @kind object;
  #L08940e.  v11.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L089412.  return v11 @kind object;
}
procedure `a.r$a` `b`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.b:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L089424.  v2:= 0I;
  #L089426.  if v7 != 0 then goto L08943a;
  #L08942a.  v0:= new `java.lang.NullPointerException`;
  #L08942e.  v1:= "username == null" @kind object;
  #L089432.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089438.  throw v0;
  #L08943a.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08943e.  v5:= 1I;
  #L089440.  v0:= v7 @kind object;
  #L089442.  v3:= v2;
  #L089444.  v4:= v2;
  #L089446.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08944c.  v0:= temp @kind object;
  #L08944e.  v6.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L089452.  return v6 @kind object;
}
procedure `a.r$a` `c`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.c:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L089464.  v2:= 0I;
  #L089466.  if v7 != 0 then goto L08947a;
  #L08946a.  v0:= new `java.lang.NullPointerException`;
  #L08946e.  v1:= "password == null" @kind object;
  #L089472.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089478.  throw v0;
  #L08947a.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08947e.  v5:= 1I;
  #L089480.  v0:= v7 @kind object;
  #L089482.  v3:= v2;
  #L089484.  v4:= v2;
  #L089486.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08948c.  v0:= temp @kind object;
  #L08948e.  v6.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L089492.  return v6 @kind object;
}
procedure `a.r` `c`(`a.r$a` v2 @kind this) @signature `La/r$a;.c:()La/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0894a4.  v0:= v2.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L0894a8.  if v0 != 0 then goto L0894bc;
  #L0894ac.  v0:= new `java.lang.IllegalStateException`;
  #L0894b0.  v1:= "scheme == null" @kind object;
  #L0894b4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0894ba.  throw v0;
  #L0894bc.  v0:= v2.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L0894c0.  if v0 != 0 then goto L0894d4;
  #L0894c4.  v0:= new `java.lang.IllegalStateException`;
  #L0894c8.  v1:= "host == null" @kind object;
  #L0894cc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0894d2.  throw v0;
  #L0894d4.  v0:= new `a.r`;
  #L0894d8.  call `<init>`(v0, v2) @signature `La/r;.<init>:(La/r$a;)V` @kind direct;
  #L0894de.  return v0 @kind object;
}
procedure `a.r$a` `d`(`a.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r$a;.d:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0894f0.  if v4 != 0 then goto L089504;
  #L0894f4.  v0:= new `java.lang.NullPointerException`;
  #L0894f8.  v1:= "host == null" @kind object;
  #L0894fc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089502.  throw v0;
  #L089504.  v0:= 0I;
  #L089506.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08950c.  v1:= temp;
  #L08950e.  call temp:= `e`(v4, v0, v1) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L089514.  v0:= temp @kind object;
  #L089516.  if v0 != 0 then goto L08954c;
  #L08951a.  v0:= new `java.lang.IllegalArgumentException`;
  #L08951e.  v1:= new `java.lang.StringBuilder`;
  #L089522.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089528.  v2:= "unexpected host: " @kind object;
  #L08952c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089532.  v1:= temp @kind object;
  #L089534.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08953a.  v1:= temp @kind object;
  #L08953c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089542.  v1:= temp @kind object;
  #L089544.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08954a.  throw v0;
  #L08954c.  v3.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L089550.  return v3 @kind object;
}
procedure `a.r$a` `e`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L089564.  v2:= 1I;
  #L089566.  if v7 == 0 then goto L08958c;
  #L08956a.  v1:= " \"'<>#" @kind object;
  #L08956e.  v3:= 0I;
  #L089570.  v0:= v7 @kind object;
  #L089572.  v4:= v2;
  #L089574.  v5:= v2;
  #L089576.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08957c.  v0:= temp @kind object;
  #L08957e.  call temp:= `b`(v0) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L089584.  v0:= temp @kind object;
  #L089586.  v6.`a.r$a.g` @type ^`java.util.List` := v0 @kind object;
  #L08958a.  return v6 @kind object;
  #L08958c.  v0:= 0I;
  #L08958e.  goto L089586;
}
procedure `java.lang.String` `toString`(`a.r$a` v4 @kind this) @signature `La/r$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0895a0.  v3:= 58I;
  #L0895a4.  v0:= new `java.lang.StringBuilder`;
  #L0895a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0895ae.  v1:= v4.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L0895b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0895b8.  v1:= "://" @kind object;
  #L0895bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0895c2.  v1:= v4.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L0895c6.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L0895cc.  v1:= temp;
  #L0895ce.  if v1 == 0 then goto L0895e2;
  #L0895d2.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L0895d6.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L0895dc.  v1:= temp;
  #L0895de.  if v1 != 0 then goto L089616;
  #L0895e2.  v1:= v4.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L0895e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0895ec.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L0895f0.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L0895f6.  v1:= temp;
  #L0895f8.  if v1 != 0 then goto L08960c;
  #L0895fc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089602.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L089606.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08960c.  v1:= 64I;
  #L089610.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089616.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08961a.  call temp:= `indexOf`(v1, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L089620.  v1:= temp;
  #L089622.  v2:= -1I;
  #L089624.  if v1 == v2 then goto L0896b6;
  #L089628.  v1:= 91I;
  #L08962c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089632.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L089636.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08963c.  v1:= 93I;
  #L089640.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089646.  call temp:= `a`(v4) @signature `La/r$a;.a:()I` @kind virtual;
  #L08964c.  v1:= temp;
  #L08964e.  v2:= v4.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L089652.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L089658.  v2:= temp;
  #L08965a.  if v1 == v2 then goto L08966a;
  #L08965e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089664.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L08966a.  v1:= v4.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08966e.  call `a`(v0, v1) @signature `La/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L089674.  v1:= v4.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L089678.  if v1 == 0 then goto L089690;
  #L08967c.  v1:= 63I;
  #L089680.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089686.  v1:= v4.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08968a.  call `b`(v0, v1) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L089690.  v1:= v4.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L089694.  if v1 == 0 then goto L0896ac;
  #L089698.  v1:= 35I;
  #L08969c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0896a2.  v1:= v4.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L0896a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0896ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0896b2.  v0:= temp @kind object;
  #L0896b4.  return v0 @kind object;
  #L0896b6.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L0896ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0896c0.  goto L089646;
}

record `a.u` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface {
  `int` `a.u.A` @AccessFlag FINAL;
  `int` `a.u.B` @AccessFlag FINAL;
  `a.n` `a.u.c` @AccessFlag FINAL;
  `java.net.Proxy` `a.u.d` @AccessFlag FINAL;
  `java.util.List` `a.u.e` @AccessFlag FINAL;
  `java.util.List` `a.u.f` @AccessFlag FINAL;
  `java.util.List` `a.u.g` @AccessFlag FINAL;
  `java.util.List` `a.u.h` @AccessFlag FINAL;
  `java.net.ProxySelector` `a.u.i` @AccessFlag FINAL;
  `a.m` `a.u.j` @AccessFlag FINAL;
  `a.c` `a.u.k` @AccessFlag FINAL;
  `a.a.a.e` `a.u.l` @AccessFlag FINAL;
  `javax.net.SocketFactory` `a.u.m` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `a.u.n` @AccessFlag FINAL;
  `a.a.h.b` `a.u.o` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `a.u.p` @AccessFlag FINAL;
  `a.g` `a.u.q` @AccessFlag FINAL;
  `a.b` `a.u.r` @AccessFlag FINAL;
  `a.b` `a.u.s` @AccessFlag FINAL;
  `a.j` `a.u.t` @AccessFlag FINAL;
  `a.o` `a.u.u` @AccessFlag FINAL;
  `boolean` `a.u.v` @AccessFlag FINAL;
  `boolean` `a.u.w` @AccessFlag FINAL;
  `boolean` `a.u.x` @AccessFlag FINAL;
  `int` `a.u.y` @AccessFlag FINAL;
  `int` `a.u.z` @AccessFlag FINAL;
}
global `java.util.List` `@@a.u.a` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@a.u.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08a720.  v4:= 2I;
  #L08a722.  v3:= 1I;
  #L08a724.  v2:= 0I;
  #L08a726.  v0:= new `a.v`[v4];
  #L08a72a.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08a72e.  v0[v2]:= v1 @kind object;
  #L08a732.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08a736.  v0[v3]:= v1 @kind object;
  #L08a73a.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L08a740.  v0:= temp @kind object;
  #L08a742.  `@@a.u.a` @type ^`java.util.List` := v0 @kind object;
  #L08a746.  v0:= 3I;
  #L08a748.  v0:= new `a.k`[v0];
  #L08a74c.  v1:= `@@a.k.a` @type ^`a.k` @kind object;
  #L08a750.  v0[v2]:= v1 @kind object;
  #L08a754.  v1:= `@@a.k.b` @type ^`a.k` @kind object;
  #L08a758.  v0[v3]:= v1 @kind object;
  #L08a75c.  v1:= `@@a.k.c` @type ^`a.k` @kind object;
  #L08a760.  v0[v4]:= v1 @kind object;
  #L08a764.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L08a76a.  v0:= temp @kind object;
  #L08a76c.  `@@a.u.b` @type ^`java.util.List` := v0 @kind object;
  #L08a770.  v0:= new `a.u$1`;
  #L08a774.  call `<init>`(v0) @signature `La/u$1;.<init>:()V` @kind direct;
  #L08a77a.  `@@a.a.a.a` @type ^`a.a.a` := v0 @kind object;
  #L08a77e.  return @kind void;
}
procedure `void` `<init>`(`a.u` v1 @kind this) @signature `La/u;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L08a790.  v0:= new `a.u$a`;
  #L08a794.  call `<init>`(v0) @signature `La/u$a;.<init>:()V` @kind direct;
  #L08a79a.  call `<init>`(v1, v0) @signature `La/u;.<init>:(La/u$a;)V` @kind direct;
  #L08a7a0.  return @kind void;
}
procedure `void` `<init>`(`a.u` v4 @kind this, `a.u$a` v5 @kind object) @signature `La/u;.<init>:(La/u$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08a7b4.  v2:= 0I;
  #L08a7b6.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08a7bc.  v0:= v5.`a.u$a.a` @type ^`a.n` @kind object;
  #L08a7c0.  v4.`a.u.c` @type ^`a.n` := v0 @kind object;
  #L08a7c4.  v0:= v5.`a.u$a.b` @type ^`java.net.Proxy` @kind object;
  #L08a7c8.  v4.`a.u.d` @type ^`java.net.Proxy` := v0 @kind object;
  #L08a7cc.  v0:= v5.`a.u$a.c` @type ^`java.util.List` @kind object;
  #L08a7d0.  v4.`a.u.e` @type ^`java.util.List` := v0 @kind object;
  #L08a7d4.  v0:= v5.`a.u$a.d` @type ^`java.util.List` @kind object;
  #L08a7d8.  v4.`a.u.f` @type ^`java.util.List` := v0 @kind object;
  #L08a7dc.  v0:= v5.`a.u$a.e` @type ^`java.util.List` @kind object;
  #L08a7e0.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08a7e6.  v0:= temp @kind object;
  #L08a7e8.  v4.`a.u.g` @type ^`java.util.List` := v0 @kind object;
  #L08a7ec.  v0:= v5.`a.u$a.f` @type ^`java.util.List` @kind object;
  #L08a7f0.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08a7f6.  v0:= temp @kind object;
  #L08a7f8.  v4.`a.u.h` @type ^`java.util.List` := v0 @kind object;
  #L08a7fc.  v0:= v5.`a.u$a.g` @type ^`java.net.ProxySelector` @kind object;
  #L08a800.  v4.`a.u.i` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L08a804.  v0:= v5.`a.u$a.h` @type ^`a.m` @kind object;
  #L08a808.  v4.`a.u.j` @type ^`a.m` := v0 @kind object;
  #L08a80c.  v0:= v5.`a.u$a.i` @type ^`a.c` @kind object;
  #L08a810.  v4.`a.u.k` @type ^`a.c` := v0 @kind object;
  #L08a814.  v0:= v5.`a.u$a.j` @type ^`a.a.a.e` @kind object;
  #L08a818.  v4.`a.u.l` @type ^`a.a.a.e` := v0 @kind object;
  #L08a81c.  v0:= v5.`a.u$a.k` @type ^`javax.net.SocketFactory` @kind object;
  #L08a820.  v4.`a.u.m` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L08a824.  v0:= v4.`a.u.f` @type ^`java.util.List` @kind object;
  #L08a828.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L08a82e.  v3:= temp @kind object;
  #L08a830.  v1:= v2;
  #L08a832.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L08a838.  v0:= temp;
  #L08a83a.  if v0 == 0 then goto L08a864;
  #L08a83e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L08a844.  v0:= temp @kind object;
  #L08a846.  v0:= (`a.k`) v0 @kind object;
  #L08a84a.  if v1 != 0 then goto L08a85a;
  #L08a84e.  call temp:= `a`(v0) @signature `La/k;.a:()Z` @kind virtual;
  #L08a854.  v0:= temp;
  #L08a856.  if v0 == 0 then goto L08a860;
  #L08a85a.  v0:= 1I;
  #L08a85c.  v1:= v0;
  #L08a85e.  goto L08a832;
  #L08a860.  v0:= v2;
  #L08a862.  goto L08a85c;
  #L08a864.  v0:= v5.`a.u$a.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08a868.  if v0 != 0 then goto L08a870;
  #L08a86c.  if v1 != 0 then goto L08a8f6;
  #L08a870.  v0:= v5.`a.u$a.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08a874.  v4.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L08a878.  v0:= v5.`a.u$a.m` @type ^`a.a.h.b` @kind object;
  #L08a87c.  v4.`a.u.o` @type ^`a.a.h.b` := v0 @kind object;
  #L08a880.  v0:= v5.`a.u$a.n` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L08a884.  v4.`a.u.p` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L08a888.  v0:= v5.`a.u$a.o` @type ^`a.g` @kind object;
  #L08a88c.  v1:= v4.`a.u.o` @type ^`a.a.h.b` @kind object;
  #L08a890.  call temp:= `a`(v0, v1) @signature `La/g;.a:(La/a/h/b;)La/g;` @kind virtual;
  #L08a896.  v0:= temp @kind object;
  #L08a898.  v4.`a.u.q` @type ^`a.g` := v0 @kind object;
  #L08a89c.  v0:= v5.`a.u$a.p` @type ^`a.b` @kind object;
  #L08a8a0.  v4.`a.u.r` @type ^`a.b` := v0 @kind object;
  #L08a8a4.  v0:= v5.`a.u$a.q` @type ^`a.b` @kind object;
  #L08a8a8.  v4.`a.u.s` @type ^`a.b` := v0 @kind object;
  #L08a8ac.  v0:= v5.`a.u$a.r` @type ^`a.j` @kind object;
  #L08a8b0.  v4.`a.u.t` @type ^`a.j` := v0 @kind object;
  #L08a8b4.  v0:= v5.`a.u$a.s` @type ^`a.o` @kind object;
  #L08a8b8.  v4.`a.u.u` @type ^`a.o` := v0 @kind object;
  #L08a8bc.  v0:= v5.`a.u$a.t` @type ^`boolean` @kind boolean;
  #L08a8c0.  v4.`a.u.v` @type ^`boolean` := v0 @kind boolean;
  #L08a8c4.  v0:= v5.`a.u$a.u` @type ^`boolean` @kind boolean;
  #L08a8c8.  v4.`a.u.w` @type ^`boolean` := v0 @kind boolean;
  #L08a8cc.  v0:= v5.`a.u$a.v` @type ^`boolean` @kind boolean;
  #L08a8d0.  v4.`a.u.x` @type ^`boolean` := v0 @kind boolean;
  #L08a8d4.  v0:= v5.`a.u$a.w` @type ^`int`;
  #L08a8d8.  v4.`a.u.y` @type ^`int` := v0;
  #L08a8dc.  v0:= v5.`a.u$a.x` @type ^`int`;
  #L08a8e0.  v4.`a.u.z` @type ^`int` := v0;
  #L08a8e4.  v0:= v5.`a.u$a.y` @type ^`int`;
  #L08a8e8.  v4.`a.u.A` @type ^`int` := v0;
  #L08a8ec.  v0:= v5.`a.u$a.z` @type ^`int`;
  #L08a8f0.  v4.`a.u.B` @type ^`int` := v0;
  #L08a8f4.  return @kind void;
  #L08a8f6.  call temp:= `x`(v4) @signature `La/u;.x:()Ljavax/net/ssl/X509TrustManager;` @kind direct;
  #L08a8fc.  v0:= temp @kind object;
  #L08a8fe.  call temp:= `a`(v4, v0) @signature `La/u;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind direct;
  #L08a904.  v1:= temp @kind object;
  #L08a906.  v4.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L08a90a.  call temp:= `a`(v0) @signature `La/a/h/b;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/b;` @kind static;
  #L08a910.  v0:= temp @kind object;
  #L08a912.  v4.`a.u.o` @type ^`a.a.h.b` := v0 @kind object;
  #L08a916.  goto L08a880;
}
procedure `javax.net.ssl.SSLSocketFactory` `a`(`a.u` v4 @kind this, `javax.net.ssl.X509TrustManager` v5 @kind object) @signature `La/u;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L08a928.  v0:= "TLS" @kind object;
  #L08a92c.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L08a932.  v0:= temp @kind object;
  #L08a934.  v1:= 0I;
  #L08a936.  v2:= 1I;
  #L08a938.  v2:= new `javax.net.ssl.TrustManager`[v2];
  #L08a93c.  v3:= 0I;
  #L08a93e.  v2[v3]:= v5 @kind object;
  #L08a942.  v3:= 0I;
  #L08a944.  call `init`(v0, v1, v2, v3) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L08a94a.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #Try_end0.  
  #L08a950.  v0:= temp @kind object;
  #L08a952.  return v0 @kind object;
  #L08a954.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L08a956.  v0:= new `java.lang.AssertionError`;
  #L08a95a.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08a960.  throw v0;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L08a954;
}
procedure `javax.net.ssl.X509TrustManager` `x`(`a.u` v4 @kind this) @signature `La/u;.x:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L08a984.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L08a98a.  v0:= temp @kind object;
  #L08a98c.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L08a992.  v1:= temp @kind object;
  #L08a994.  v0:= 0I;
  #L08a996.  v0:= (`java.security.KeyStore`) v0 @kind object;
  #L08a99a.  call `init`(v1, v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L08a9a0.  call temp:= `getTrustManagers`(v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L08a9a6.  v0:= temp @kind object;
  #L08a9a8.  v1:= length @variable v0;
  #L08a9aa.  v2:= 1I;
  #L08a9ac.  if v1 != v2 then goto L08a9be;
  #L08a9b0.  v1:= 0I;
  #L08a9b2.  v1:= v0[v1] @kind object;
  #L08a9b6.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L08a9ba.  if v1 != 0 then goto L08aa06;
  #L08a9be.  v1:= new `java.lang.IllegalStateException`;
  #L08a9c2.  v2:= new `java.lang.StringBuilder`;
  #L08a9c6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a9cc.  v3:= "Unexpected default trust managers:" @kind object;
  #L08a9d0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a9d6.  v2:= temp @kind object;
  #L08a9d8.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L08a9de.  v0:= temp @kind object;
  #L08a9e0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a9e6.  v0:= temp @kind object;
  #L08a9e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a9ee.  v0:= temp @kind object;
  #L08a9f0.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a9f6.  throw v1;
  #Try_end0.  
  #L08a9f8.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L08a9fa.  v0:= new `java.lang.AssertionError`;
  #L08a9fe.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08aa04.  throw v0;
  #L08aa06.  v1:= 0I;
  #Try_start1.  
  #L08aa08.  v0:= v0[v1] @kind object;
  #L08aa0c.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #Try_end1.  
  #L08aa10.  return v0 @kind object;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L08a9f8;
  catch `java.security.GeneralSecurityException` @[Try_start1..Try_end1] goto L08a9f8;
}
procedure `int` `a`(`a.u` v1 @kind this) @signature `La/u;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08aa3c.  v0:= v1.`a.u.y` @type ^`int`;
  #L08aa40.  return v0;
}
procedure `a.e` `a`(`a.u` v2 @kind this, `a.x` v3 @kind object) @signature `La/u;.a:(La/x;)La/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08aa54.  v0:= new `a.w`;
  #L08aa58.  v1:= 0I;
  #L08aa5a.  call `<init>`(v0, v2, v3, v1) @signature `La/w;.<init>:(La/u;La/x;Z)V` @kind direct;
  #L08aa60.  return v0 @kind object;
}
procedure `int` `b`(`a.u` v1 @kind this) @signature `La/u;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08aa74.  v0:= v1.`a.u.z` @type ^`int`;
  #L08aa78.  return v0;
}
procedure `int` `c`(`a.u` v1 @kind this) @signature `La/u;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08aa8c.  v0:= v1.`a.u.A` @type ^`int`;
  #L08aa90.  return v0;
}
procedure `java.net.Proxy` `d`(`a.u` v1 @kind this) @signature `La/u;.d:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08aaa4.  v0:= v1.`a.u.d` @type ^`java.net.Proxy` @kind object;
  #L08aaa8.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `e`(`a.u` v1 @kind this) @signature `La/u;.e:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08aabc.  v0:= v1.`a.u.i` @type ^`java.net.ProxySelector` @kind object;
  #L08aac0.  return v0 @kind object;
}
procedure `a.m` `f`(`a.u` v1 @kind this) @signature `La/u;.f:()La/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08aad4.  v0:= v1.`a.u.j` @type ^`a.m` @kind object;
  #L08aad8.  return v0 @kind object;
}
procedure `a.a.a.e` `g`(`a.u` v1 @kind this) @signature `La/u;.g:()La/a/a/e;` @AccessFlag  {
    temp;
    v0;

  #L08aaec.  v0:= v1.`a.u.k` @type ^`a.c` @kind object;
  #L08aaf0.  if v0 == 0 then goto L08aafe;
  #L08aaf4.  v0:= v1.`a.u.k` @type ^`a.c` @kind object;
  #L08aaf8.  v0:= v0.`a.c.a` @type ^`a.a.a.e` @kind object;
  #L08aafc.  return v0 @kind object;
  #L08aafe.  v0:= v1.`a.u.l` @type ^`a.a.a.e` @kind object;
  #L08ab02.  goto L08aafc;
}
procedure `a.o` `h`(`a.u` v1 @kind this) @signature `La/u;.h:()La/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ab14.  v0:= v1.`a.u.u` @type ^`a.o` @kind object;
  #L08ab18.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `i`(`a.u` v1 @kind this) @signature `La/u;.i:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ab2c.  v0:= v1.`a.u.m` @type ^`javax.net.SocketFactory` @kind object;
  #L08ab30.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `j`(`a.u` v1 @kind this) @signature `La/u;.j:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ab44.  v0:= v1.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08ab48.  return v0 @kind object;
}
procedure `javax.net.ssl.HostnameVerifier` `k`(`a.u` v1 @kind this) @signature `La/u;.k:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ab5c.  v0:= v1.`a.u.p` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L08ab60.  return v0 @kind object;
}
procedure `a.g` `l`(`a.u` v1 @kind this) @signature `La/u;.l:()La/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ab74.  v0:= v1.`a.u.q` @type ^`a.g` @kind object;
  #L08ab78.  return v0 @kind object;
}
procedure `a.b` `m`(`a.u` v1 @kind this) @signature `La/u;.m:()La/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ab8c.  v0:= v1.`a.u.s` @type ^`a.b` @kind object;
  #L08ab90.  return v0 @kind object;
}
procedure `a.b` `n`(`a.u` v1 @kind this) @signature `La/u;.n:()La/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08aba4.  v0:= v1.`a.u.r` @type ^`a.b` @kind object;
  #L08aba8.  return v0 @kind object;
}
procedure `a.j` `o`(`a.u` v1 @kind this) @signature `La/u;.o:()La/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08abbc.  v0:= v1.`a.u.t` @type ^`a.j` @kind object;
  #L08abc0.  return v0 @kind object;
}
procedure `boolean` `p`(`a.u` v1 @kind this) @signature `La/u;.p:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08abd4.  v0:= v1.`a.u.v` @type ^`boolean` @kind boolean;
  #L08abd8.  return v0;
}
procedure `boolean` `q`(`a.u` v1 @kind this) @signature `La/u;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08abec.  v0:= v1.`a.u.w` @type ^`boolean` @kind boolean;
  #L08abf0.  return v0;
}
procedure `boolean` `r`(`a.u` v1 @kind this) @signature `La/u;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ac04.  v0:= v1.`a.u.x` @type ^`boolean` @kind boolean;
  #L08ac08.  return v0;
}
procedure `a.n` `s`(`a.u` v1 @kind this) @signature `La/u;.s:()La/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ac1c.  v0:= v1.`a.u.c` @type ^`a.n` @kind object;
  #L08ac20.  return v0 @kind object;
}
procedure `java.util.List` `t`(`a.u` v1 @kind this) @signature `La/u;.t:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ac34.  v0:= v1.`a.u.e` @type ^`java.util.List` @kind object;
  #L08ac38.  return v0 @kind object;
}
procedure `java.util.List` `u`(`a.u` v1 @kind this) @signature `La/u;.u:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ac4c.  v0:= v1.`a.u.f` @type ^`java.util.List` @kind object;
  #L08ac50.  return v0 @kind object;
}
procedure `java.util.List` `v`(`a.u` v1 @kind this) @signature `La/u;.v:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ac64.  v0:= v1.`a.u.g` @type ^`java.util.List` @kind object;
  #L08ac68.  return v0 @kind object;
}
procedure `java.util.List` `w`(`a.u` v1 @kind this) @signature `La/u;.w:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ac7c.  v0:= v1.`a.u.h` @type ^`java.util.List` @kind object;
  #L08ac80.  return v0 @kind object;
}

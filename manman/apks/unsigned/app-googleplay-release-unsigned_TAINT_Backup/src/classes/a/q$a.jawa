record `a.q$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `a.q$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`a.q$a` v2 @kind this) @signature `La/q$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0880a4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0880aa.  v0:= new `java.util.ArrayList`;
  #L0880ae.  v1:= 20I;
  #L0880b2.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0880b8.  v2.`a.q$a.a` @type ^`java.util.List` := v0 @kind object;
  #L0880bc.  return @kind void;
}
procedure `void` `d`(`a.q$a` v9 @kind this, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L0880d0.  v5:= 127I;
  #L0880d4.  v8:= 3I;
  #L0880d6.  v7:= 2I;
  #L0880d8.  v6:= 1I;
  #L0880da.  v1:= 0I;
  #L0880dc.  if v10 != 0 then goto L0880f0;
  #L0880e0.  v0:= new `java.lang.NullPointerException`;
  #L0880e4.  v1:= "name == null" @kind object;
  #L0880e8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0880ee.  throw v0;
  #L0880f0.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L0880f6.  v0:= temp;
  #L0880f8.  if v0 == 0 then goto L08810c;
  #L0880fc.  v0:= new `java.lang.IllegalArgumentException`;
  #L088100.  v1:= "name is empty" @kind object;
  #L088104.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08810a.  throw v0;
  #L08810c.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088112.  v2:= temp;
  #L088114.  v0:= v1;
  #L088116.  if v0 >= v2 then goto L08816c;
  #L08811a.  call temp:= `charAt`(v10, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088120.  v3:= temp;
  #L088122.  v4:= 32I;
  #L088126.  if v3 <= v4 then goto L08812e;
  #L08812a.  if v3 < v5 then goto L088166;
  #L08812e.  v2:= new `java.lang.IllegalArgumentException`;
  #L088132.  v4:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L088136.  v5:= new `java.lang.Object`[v8];
  #L08813a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L088140.  v3:= temp @kind object;
  #L088142.  v5[v1]:= v3 @kind object;
  #L088146.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08814c.  v0:= temp @kind object;
  #L08814e.  v5[v6]:= v0 @kind object;
  #L088152.  v5[v7]:= v10 @kind object;
  #L088156.  call temp:= `a`(v4, v5) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L08815c.  v0:= temp @kind object;
  #L08815e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L088164.  throw v2;
  #L088166.  v0:= v0 + 1;
  #L08816a.  goto L088116;
  #L08816c.  if v11 != 0 then goto L088180;
  #L088170.  v0:= new `java.lang.NullPointerException`;
  #L088174.  v1:= "value == null" @kind object;
  #L088178.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08817e.  throw v0;
  #L088180.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L088186.  v2:= temp;
  #L088188.  v0:= v1;
  #L08818a.  if v0 >= v2 then goto L0881ee;
  #L08818e.  call temp:= `charAt`(v11, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088194.  v3:= temp;
  #L088196.  v4:= 31I;
  #L08819a.  if v3 > v4 then goto L0881a6;
  #L08819e.  v4:= 9I;
  #L0881a2.  if v3 != v4 then goto L0881aa;
  #L0881a6.  if v3 < v5 then goto L0881e8;
  #L0881aa.  v2:= new `java.lang.IllegalArgumentException`;
  #L0881ae.  v4:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L0881b2.  v5:= 4I;
  #L0881b4.  v5:= new `java.lang.Object`[v5];
  #L0881b8.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0881be.  v3:= temp @kind object;
  #L0881c0.  v5[v1]:= v3 @kind object;
  #L0881c4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0881ca.  v0:= temp @kind object;
  #L0881cc.  v5[v6]:= v0 @kind object;
  #L0881d0.  v5[v7]:= v10 @kind object;
  #L0881d4.  v5[v8]:= v11 @kind object;
  #L0881d8.  call temp:= `a`(v4, v5) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L0881de.  v0:= temp @kind object;
  #L0881e0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0881e6.  throw v2;
  #L0881e8.  v0:= v0 + 1;
  #L0881ec.  goto L08818a;
  #L0881ee.  return @kind void;
}
procedure `a.q$a` `a`(`a.q$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/q$a;.a:(Ljava/lang/String;)La/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L088200.  v2:= 1I;
  #L088202.  v0:= ":" @kind object;
  #L088206.  call temp:= `indexOf`(v4, v0, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L08820c.  v0:= temp;
  #L08820e.  v1:= -1I;
  #L088210.  if v0 == v1 then goto L088234;
  #L088214.  v1:= 0I;
  #L088216.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08821c.  v1:= temp @kind object;
  #L08821e.  v0:= v0 + 1;
  #L088222.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L088228.  v0:= temp @kind object;
  #L08822a.  call temp:= `b`(v3, v1, v0) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088230.  v0:= temp @kind object;
  #L088232.  return v0 @kind object;
  #L088234.  v0:= ":" @kind object;
  #L088238.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08823e.  v0:= temp;
  #L088240.  if v0 == 0 then goto L08825a;
  #L088244.  v0:= "" @kind object;
  #L088248.  call temp:= `substring`(v4, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08824e.  v1:= temp @kind object;
  #L088250.  call temp:= `b`(v3, v0, v1) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088256.  v0:= temp @kind object;
  #L088258.  goto L088232;
  #L08825a.  v0:= "" @kind object;
  #L08825e.  call temp:= `b`(v3, v0, v4) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088264.  v0:= temp @kind object;
  #L088266.  goto L088232;
}
procedure `a.q$a` `a`(`a.q$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/q$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088278.  call `d`(v1, v2, v3) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L08827e.  call temp:= `b`(v1, v2, v3) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088284.  v0:= temp @kind object;
  #L088286.  return v0 @kind object;
}
procedure `a.q` `a`(`a.q$a` v1 @kind this) @signature `La/q$a;.a:()La/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088298.  v0:= new `a.q`;
  #L08829c.  call `<init>`(v0, v1) @signature `La/q;.<init>:(La/q$a;)V` @kind direct;
  #L0882a2.  return v0 @kind object;
}
procedure `a.q$a` `b`(`a.q$a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0882b4.  v0:= 0I;
  #L0882b6.  v1:= v0;
  #L0882b8.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L0882bc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0882c2.  v0:= temp;
  #L0882c4.  if v1 >= v0 then goto L088304;
  #L0882c8.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L0882cc.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0882d2.  v0:= temp @kind object;
  #L0882d4.  v0:= (`java.lang.String`) v0 @kind object;
  #L0882d8.  call temp:= `equalsIgnoreCase`(v3, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L0882de.  v0:= temp;
  #L0882e0.  if v0 == 0 then goto L0882fc;
  #L0882e4.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L0882e8.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L0882ee.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L0882f2.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L0882f8.  v1:= v1 + -2;
  #L0882fc.  v0:= v1 + 2;
  #L088300.  v1:= v0;
  #L088302.  goto L0882b8;
  #L088304.  return v2 @kind object;
}
procedure `a.q$a` `b`(`a.q$a` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L088318.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08831c.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088322.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088326.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L08832c.  v1:= temp @kind object;
  #L08832e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088334.  return v2 @kind object;
}
procedure `a.q$a` `c`(`a.q$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `La/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;

  #L088348.  call `d`(v0, v1, v2) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L08834e.  call temp:= `b`(v0, v1) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088354.  call temp:= `b`(v0, v1, v2) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08835a.  return v0 @kind object;
}

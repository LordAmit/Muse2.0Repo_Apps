record `fr.castorflex.android.smoothprogressbar.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `android.graphics.drawable.Drawable` `a`(`int`[] v2 @kind object, `float` v3 ) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:([IF)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L16b410.  if v2 == 0 then goto L16b41a;
  #L16b414.  v0:= length @variable v2;
  #L16b416.  if v0 != 0 then goto L16b41e;
  #L16b41a.  v0:= 0I;
  #L16b41c.  return v0 @kind object;
  #L16b41e.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L16b422.  v1:= new `fr.castorflex.android.smoothprogressbar.a`;
  #L16b426.  call `<init>`(v1, v3, v2) @signature `Lfr/castorflex/android/smoothprogressbar/a;.<init>:(F[I)V` @kind direct;
  #L16b42c.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L16b432.  goto L16b41c;
}
procedure `void` `a`(`float` v2 ) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(F)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L16b444.  v0:= 0I;
  #L16b446.  v0:= fcmpg(v2, v0);
  #L16b44a.  if v0 > 0 then goto L16b45e;
  #L16b44e.  v0:= new `java.lang.IllegalArgumentException`;
  #L16b452.  v1:= "Speed must be >= 0" @kind object;
  #L16b456.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b45c.  throw v0;
  #L16b45e.  return @kind void;
}
procedure `void` `a`(`float` v5 , `java.lang.String` v6 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(FLjava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16b470.  v0:= 0I;
  #L16b472.  v0:= fcmpg(v5, v0);
  #L16b476.  if v0 >= 0 then goto L16b4ac;
  #L16b47a.  v0:= new `java.lang.IllegalArgumentException`;
  #L16b47e.  v1:= "%s %d must be positive" @kind object;
  #L16b482.  v2:= 2I;
  #L16b484.  v2:= new `java.lang.Object`[v2];
  #L16b488.  v3:= 0I;
  #L16b48a.  v2[v3]:= v6 @kind object;
  #L16b48e.  v3:= 1I;
  #L16b490.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L16b496.  v4:= temp @kind object;
  #L16b498.  v2[v3]:= v4 @kind object;
  #L16b49c.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16b4a2.  v1:= temp @kind object;
  #L16b4a4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b4aa.  throw v0;
  #L16b4ac.  return @kind void;
}
procedure `void` `a`(`int` v4 , `java.lang.String` v5 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(ILjava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16b4c0.  if v4 > 0 then goto L16b4e8;
  #L16b4c4.  v0:= new `java.lang.IllegalArgumentException`;
  #L16b4c8.  v1:= "%s must not be null" @kind object;
  #L16b4cc.  v2:= 1I;
  #L16b4ce.  v2:= new `java.lang.Object`[v2];
  #L16b4d2.  v3:= 0I;
  #L16b4d4.  v2[v3]:= v5 @kind object;
  #L16b4d8.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16b4de.  v1:= temp @kind object;
  #L16b4e0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b4e6.  throw v0;
  #L16b4e8.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16b4fc.  if v4 != 0 then goto L16b524;
  #L16b500.  v0:= new `java.lang.IllegalArgumentException`;
  #L16b504.  v1:= "%s must be not null" @kind object;
  #L16b508.  v2:= 1I;
  #L16b50a.  v2:= new `java.lang.Object`[v2];
  #L16b50e.  v3:= 0I;
  #L16b510.  v2[v3]:= v5 @kind object;
  #L16b514.  call temp:= `format`(v1, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16b51a.  v1:= temp @kind object;
  #L16b51c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b522.  throw v0;
  #L16b524.  return @kind void;
}
procedure `void` `a`(`int`[] v2 @kind object) @signature `Lfr/castorflex/android/smoothprogressbar/c;.a:([I)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L16b538.  if v2 == 0 then goto L16b542;
  #L16b53c.  v0:= length @variable v2;
  #L16b53e.  if v0 != 0 then goto L16b552;
  #L16b542.  v0:= new `java.lang.IllegalArgumentException`;
  #L16b546.  v1:= "You must provide at least 1 color" @kind object;
  #L16b54a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b550.  throw v0;
  #L16b552.  return @kind void;
}

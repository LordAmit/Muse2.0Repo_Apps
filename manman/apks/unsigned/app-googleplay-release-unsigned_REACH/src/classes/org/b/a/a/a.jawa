record `org.b.a.a.a` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.a.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.a.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.a` `org.b.a.a.a.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.a.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.a.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16f9ac.  v0:= new `org.b.a.a.d.a`;
  #L16f9b0.  call `<init>`(v0) @signature `Lorg/b/a/a/d/a;.<init>:()V` @kind direct;
  #L16f9b6.  `@@org.b.a.a.a.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L16f9ba.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.a` v2 @kind this) @signature `Lorg/b/a/a/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L16f9cc.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L16f9d2.  v0:= new `org.b.a.a.d.b`;
  #L16f9d6.  v1:= `@@org.b.a.a.a.e` @type ^`org.b.a.a.d.m` @kind object;
  #L16f9da.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L16f9e0.  v2.`org.b.a.a.a.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L16f9e4.  v0:= new `org.b.a.a.b.a`;
  #L16f9e8.  call `<init>`(v0) @signature `Lorg/b/a/a/b/a;.<init>:()V` @kind direct;
  #L16f9ee.  v2.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` := v0 @kind object;
  #L16f9f2.  v0:= 2I;
  #L16f9f4.  v0:= new `byte`[v0];
  #L16f9f8.  v2.`org.b.a.a.a.d` @type ^`byte`[] := v0 @kind object;
  #L16f9fc.  call `d`(v2) @signature `Lorg/b/a/a/a;.d:()V` @kind virtual;
  #L16fa02.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.a` v1 @kind this) @signature `Lorg/b/a/a/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16fa14.  v0:= `@@org.b.a.b.g` @type ^`java.lang.String` @kind object;
  #L16fa18.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.a` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/a;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16fa2c.  v6:= 1I;
  #L16fa2e.  v5:= 0I;
  #L16fa30.  v1:= v9 + v10 @kind int;
  #L16fa34.  v0:= v9;
  #L16fa36.  if v0 >= v1 then goto L16fa56;
  #L16fa3a.  v2:= v7.`org.b.a.a.a.a` @type ^`org.b.a.a.d.b` @kind object;
  #L16fa3e.  v3:= v8[v0] @kind byte;
  #L16fa42.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L16fa48.  v2:= temp;
  #L16fa4a.  if v2 != v6 then goto L16faa6;
  #L16fa4e.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L16fa52.  v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L16fa56.  v0:= v7.`org.b.a.a.a.d` @type ^`byte`[] @kind object;
  #L16fa5a.  v1:= v1 + -1;
  #L16fa5e.  v1:= v8[v1] @kind byte;
  #L16fa62.  v0[v5]:= v1 @kind byte;
  #L16fa66.  v0:= v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L16fa6a.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L16fa6e.  if v0 != v1 then goto L16faa0;
  #L16fa72.  v0:= v7.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L16fa76.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/a;.c:()Z` @kind virtual;
  #L16fa7c.  v0:= temp;
  #L16fa7e.  if v0 == 0 then goto L16faa0;
  #L16fa82.  call temp:= `b`(v7) @signature `Lorg/b/a/a/a;.b:()F` @kind virtual;
  #L16fa88.  v0:= temp;
  #L16fa8a.  v1:= 1064514355I;
  #L16fa90.  v0:= fcmpl(v0, v1);
  #L16fa94.  if v0 <= 0 then goto L16faa0;
  #L16fa98.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L16fa9c.  v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L16faa0.  v0:= v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L16faa4.  return v0 @kind object;
  #L16faa6.  v3:= 2I;
  #L16faa8.  if v2 != v3 then goto L16fab6;
  #L16faac.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L16fab0.  v7.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L16fab4.  goto L16fa56;
  #L16fab6.  if v2 != 0 then goto L16fae4;
  #L16faba.  v2:= v7.`org.b.a.a.a.a` @type ^`org.b.a.a.d.b` @kind object;
  #L16fabe.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L16fac4.  v2:= temp;
  #L16fac6.  if v0 != v9 then goto L16faea;
  #L16faca.  v3:= v7.`org.b.a.a.a.d` @type ^`byte`[] @kind object;
  #L16face.  v4:= v8[v9] @kind byte;
  #L16fad2.  v3[v6]:= v4 @kind byte;
  #L16fad6.  v3:= v7.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L16fada.  v4:= v7.`org.b.a.a.a.d` @type ^`byte`[] @kind object;
  #L16fade.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/a;.a:([BII)V` @kind virtual;
  #L16fae4.  v0:= v0 + 1;
  #L16fae8.  goto L16fa36;
  #L16faea.  v3:= v7.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L16faee.  v4:= v0 + -1;
  #L16faf2.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/a;.a:([BII)V` @kind virtual;
  #L16faf8.  goto L16fae4;
}
procedure `float` `b`(`org.b.a.a.a` v1 @kind this) @signature `Lorg/b/a/a/a;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16fb0c.  v0:= v1.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L16fb10.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/a;.a:()F` @kind virtual;
  #L16fb16.  v0:= temp;
  #L16fb18.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.a` v1 @kind this) @signature `Lorg/b/a/a/a;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16fb2c.  v0:= v1.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L16fb30.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.a` v2 @kind this) @signature `Lorg/b/a/a/a;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16fb44.  v0:= v2.`org.b.a.a.a.a` @type ^`org.b.a.a.d.b` @kind object;
  #L16fb48.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L16fb4e.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L16fb52.  v2.`org.b.a.a.a.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L16fb56.  v0:= v2.`org.b.a.a.a.c` @type ^`org.b.a.a.b.a` @kind object;
  #L16fb5a.  call `b`(v0) @signature `Lorg/b/a/a/b/a;.b:()V` @kind virtual;
  #L16fb60.  v0:= v2.`org.b.a.a.a.d` @type ^`byte`[] @kind object;
  #L16fb64.  v1:= 0I;
  #L16fb66.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L16fb6c.  return @kind void;
}

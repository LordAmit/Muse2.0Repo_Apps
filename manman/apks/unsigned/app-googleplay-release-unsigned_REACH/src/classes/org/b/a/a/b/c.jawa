record `org.b.a.a.b.c` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b.g` @kind class {
}
procedure `void` `<init>`(`org.b.a.a.b.c` v0 @kind this) @signature `Lorg/b/a/a/b/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1796b0.  call `<init>`(v0) @signature `Lorg/b/a/a/b/g;.<init>:()V` @kind direct;
  #L1796b6.  return @kind void;
}
procedure `int` `a`(`org.b.a.a.b.c` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/b/a/a/b/c;.a:([BI)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1796c8.  v0:= v3[v4] @kind byte;
  #L1796cc.  v0:= v0 ^& 255;
  #L1796d0.  v1:= 161I;
  #L1796d4.  if v0 < v1 then goto L1796f4;
  #L1796d8.  v1:= v4 + 1;
  #L1796dc.  v1:= v3[v1] @kind byte;
  #L1796e0.  v1:= v1 ^& 255;
  #L1796e4.  v0:= v0 + -161;
  #L1796e8.  v0:= v0 * 94;
  #L1796ec.  v0:= v0 + v1 @kind int;
  #L1796ee.  v0:= v0 + -161;
  #L1796f2.  return v0;
  #L1796f4.  v0:= -1I;
  #L1796f6.  goto L1796f2;
}

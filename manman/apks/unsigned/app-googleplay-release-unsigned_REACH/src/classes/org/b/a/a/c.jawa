record `org.b.a.a.c` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.c.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.c.b` @AccessFlag PRIVATE;
  `org.b.a.a.a.a` `org.b.a.a.c.c` @AccessFlag PRIVATE;
  `org.b.a.a.b.c` `org.b.a.a.c.d` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.c.e` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L18a7ec.  v0:= new `org.b.a.a.d.c`;
  #L18a7f0.  call `<init>`(v0) @signature `Lorg/b/a/a/d/c;.<init>:()V` @kind direct;
  #L18a7f6.  `@@org.b.a.a.c.f` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L18a7fa.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L18a80c.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L18a812.  v0:= new `org.b.a.a.d.b`;
  #L18a816.  v1:= `@@org.b.a.a.c.f` @type ^`org.b.a.a.d.m` @kind object;
  #L18a81a.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L18a820.  v2.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L18a824.  v0:= new `org.b.a.a.a.a`;
  #L18a828.  call `<init>`(v0) @signature `Lorg/b/a/a/a/a;.<init>:()V` @kind direct;
  #L18a82e.  v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` := v0 @kind object;
  #L18a832.  v0:= new `org.b.a.a.b.c`;
  #L18a836.  call `<init>`(v0) @signature `Lorg/b/a/a/b/c;.<init>:()V` @kind direct;
  #L18a83c.  v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` := v0 @kind object;
  #L18a840.  v0:= 2I;
  #L18a842.  v0:= new `byte`[v0];
  #L18a846.  v2.`org.b.a.a.c.e` @type ^`byte`[] := v0 @kind object;
  #L18a84a.  call `d`(v2) @signature `Lorg/b/a/a/c;.d:()V` @kind virtual;
  #L18a850.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.c` v1 @kind this) @signature `Lorg/b/a/a/c;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18a864.  v0:= `@@org.b.a.b.i` @type ^`java.lang.String` @kind object;
  #L18a868.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.c` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/c;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L18a87c.  v6:= 1I;
  #L18a87e.  v5:= 0I;
  #L18a880.  v1:= v9 + v10 @kind int;
  #L18a884.  v0:= v9;
  #L18a886.  if v0 >= v1 then goto L18a8a6;
  #L18a88a.  v2:= v7.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18a88e.  v3:= v8[v0] @kind byte;
  #L18a892.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L18a898.  v2:= temp;
  #L18a89a.  if v2 != v6 then goto L18a8f6;
  #L18a89e.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18a8a2.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18a8a6.  v0:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L18a8aa.  v1:= v1 + -1;
  #L18a8ae.  v1:= v8[v1] @kind byte;
  #L18a8b2.  v0[v5]:= v1 @kind byte;
  #L18a8b6.  v0:= v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18a8ba.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18a8be.  if v0 != v1 then goto L18a8f0;
  #L18a8c2.  v0:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L18a8c6.  call temp:= `c`(v0) @signature `Lorg/b/a/a/a/a;.c:()Z` @kind virtual;
  #L18a8cc.  v0:= temp;
  #L18a8ce.  if v0 == 0 then goto L18a8f0;
  #L18a8d2.  call temp:= `b`(v7) @signature `Lorg/b/a/a/c;.b:()F` @kind virtual;
  #L18a8d8.  v0:= temp;
  #L18a8da.  v1:= 1064514355I;
  #L18a8e0.  v0:= fcmpl(v0, v1);
  #L18a8e4.  if v0 <= 0 then goto L18a8f0;
  #L18a8e8.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18a8ec.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18a8f0.  v0:= v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18a8f4.  return v0 @kind object;
  #L18a8f6.  v3:= 2I;
  #L18a8f8.  if v2 != v3 then goto L18a906;
  #L18a8fc.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18a900.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18a904.  goto L18a8a6;
  #L18a906.  if v2 != 0 then goto L18a942;
  #L18a90a.  v2:= v7.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18a90e.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L18a914.  v2:= temp;
  #L18a916.  if v0 != v9 then goto L18a948;
  #L18a91a.  v3:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L18a91e.  v4:= v8[v9] @kind byte;
  #L18a922.  v3[v6]:= v4 @kind byte;
  #L18a926.  v3:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L18a92a.  v4:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L18a92e.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/a/a;.a:([BII)V` @kind virtual;
  #L18a934.  v3:= v7.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L18a938.  v4:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L18a93c.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/c;.a:([BII)V` @kind virtual;
  #L18a942.  v0:= v0 + 1;
  #L18a946.  goto L18a886;
  #L18a948.  v3:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L18a94c.  v4:= v0 + -1;
  #L18a950.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/a/a;.a:([BII)V` @kind virtual;
  #L18a956.  v3:= v7.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L18a95a.  v4:= v0 + -1;
  #L18a95e.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/c;.a:([BII)V` @kind virtual;
  #L18a964.  goto L18a942;
}
procedure `float` `b`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18a978.  v0:= v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L18a97c.  call temp:= `a`(v0) @signature `Lorg/b/a/a/a/a;.a:()F` @kind virtual;
  #L18a982.  v0:= temp;
  #L18a984.  v1:= v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L18a988.  call temp:= `a`(v1) @signature `Lorg/b/a/a/b/c;.a:()F` @kind virtual;
  #L18a98e.  v1:= temp;
  #L18a990.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L18a996.  v0:= temp;
  #L18a998.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.c` v1 @kind this) @signature `Lorg/b/a/a/c;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18a9ac.  v0:= v1.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18a9b0.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18a9c4.  v0:= v2.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18a9c8.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L18a9ce.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18a9d2.  v2.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18a9d6.  v0:= v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L18a9da.  call `b`(v0) @signature `Lorg/b/a/a/a/a;.b:()V` @kind virtual;
  #L18a9e0.  v0:= v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L18a9e4.  call `b`(v0) @signature `Lorg/b/a/a/b/c;.b:()V` @kind virtual;
  #L18a9ea.  v0:= v2.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L18a9ee.  v1:= 0I;
  #L18a9f0.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L18a9f6.  return @kind void;
}

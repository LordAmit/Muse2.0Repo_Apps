record `org.b.a.a.l` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.l.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.l.b` @AccessFlag PRIVATE;
  `org.b.a.a.a.c` `org.b.a.a.l.c` @AccessFlag PRIVATE;
  `org.b.a.a.b.h` `org.b.a.a.l.d` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.l.e` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.l.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L18fbc0.  v0:= new `org.b.a.a.d.l`;
  #L18fbc4.  call `<init>`(v0) @signature `Lorg/b/a/a/d/l;.<init>:()V` @kind direct;
  #L18fbca.  `@@org.b.a.a.l.f` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L18fbce.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.l` v2 @kind this) @signature `Lorg/b/a/a/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L18fbe0.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L18fbe6.  v0:= new `org.b.a.a.d.b`;
  #L18fbea.  v1:= `@@org.b.a.a.l.f` @type ^`org.b.a.a.d.m` @kind object;
  #L18fbee.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L18fbf4.  v2.`org.b.a.a.l.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L18fbf8.  v0:= new `org.b.a.a.a.c`;
  #L18fbfc.  call `<init>`(v0) @signature `Lorg/b/a/a/a/c;.<init>:()V` @kind direct;
  #L18fc02.  v2.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` := v0 @kind object;
  #L18fc06.  v0:= new `org.b.a.a.b.h`;
  #L18fc0a.  call `<init>`(v0) @signature `Lorg/b/a/a/b/h;.<init>:()V` @kind direct;
  #L18fc10.  v2.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` := v0 @kind object;
  #L18fc14.  v0:= 2I;
  #L18fc16.  v0:= new `byte`[v0];
  #L18fc1a.  v2.`org.b.a.a.l.e` @type ^`byte`[] := v0 @kind object;
  #L18fc1e.  call `d`(v2) @signature `Lorg/b/a/a/l;.d:()V` @kind virtual;
  #L18fc24.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.l` v1 @kind this) @signature `Lorg/b/a/a/l;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fc38.  v0:= `@@org.b.a.b.l` @type ^`java.lang.String` @kind object;
  #L18fc3c.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.l` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lorg/b/a/a/l;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L18fc50.  v7:= 1I;
  #L18fc52.  v6:= 0I;
  #L18fc54.  v1:= v10 + v11 @kind int;
  #L18fc58.  v0:= v10;
  #L18fc5a.  if v0 >= v1 then goto L18fc7a;
  #L18fc5e.  v2:= v8.`org.b.a.a.l.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18fc62.  v3:= v9[v0] @kind byte;
  #L18fc66.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L18fc6c.  v2:= temp;
  #L18fc6e.  if v2 != v7 then goto L18fcca;
  #L18fc72.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18fc76.  v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18fc7a.  v0:= v8.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L18fc7e.  v1:= v1 + -1;
  #L18fc82.  v1:= v9[v1] @kind byte;
  #L18fc86.  v0[v6]:= v1 @kind byte;
  #L18fc8a.  v0:= v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18fc8e.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18fc92.  if v0 != v1 then goto L18fcc4;
  #L18fc96.  v0:= v8.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L18fc9a.  call temp:= `c`(v0) @signature `Lorg/b/a/a/a/c;.c:()Z` @kind virtual;
  #L18fca0.  v0:= temp;
  #L18fca2.  if v0 == 0 then goto L18fcc4;
  #L18fca6.  call temp:= `b`(v8) @signature `Lorg/b/a/a/l;.b:()F` @kind virtual;
  #L18fcac.  v0:= temp;
  #L18fcae.  v1:= 1064514355I;
  #L18fcb4.  v0:= fcmpl(v0, v1);
  #L18fcb8.  if v0 <= 0 then goto L18fcc4;
  #L18fcbc.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18fcc0.  v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18fcc4.  v0:= v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18fcc8.  return v0 @kind object;
  #L18fcca.  v3:= 2I;
  #L18fccc.  if v2 != v3 then goto L18fcda;
  #L18fcd0.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18fcd4.  v8.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18fcd8.  goto L18fc7a;
  #L18fcda.  if v2 != 0 then goto L18fd1a;
  #L18fcde.  v2:= v8.`org.b.a.a.l.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18fce2.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L18fce8.  v2:= temp;
  #L18fcea.  if v0 != v10 then goto L18fd20;
  #L18fcee.  v3:= v8.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L18fcf2.  v4:= v9[v10] @kind byte;
  #L18fcf6.  v3[v7]:= v4 @kind byte;
  #L18fcfa.  v3:= v8.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L18fcfe.  v4:= v8.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L18fd02.  v5:= v2 - 2;
  #L18fd06.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/a/c;.a:([BII)V` @kind virtual;
  #L18fd0c.  v3:= v8.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` @kind object;
  #L18fd10.  v4:= v8.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L18fd14.  call `a`(v3, v4, v6, v2) @signature `Lorg/b/a/a/b/h;.a:([BII)V` @kind virtual;
  #L18fd1a.  v0:= v0 + 1;
  #L18fd1e.  goto L18fc5a;
  #L18fd20.  v3:= v8.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L18fd24.  v4:= v0 + 1;
  #L18fd28.  v4:= v4 - v2 @kind int;
  #L18fd2a.  call `a`(v3, v9, v4, v2) @signature `Lorg/b/a/a/a/c;.a:([BII)V` @kind virtual;
  #L18fd30.  v3:= v8.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` @kind object;
  #L18fd34.  v4:= v0 + -1;
  #L18fd38.  call `a`(v3, v9, v4, v2) @signature `Lorg/b/a/a/b/h;.a:([BII)V` @kind virtual;
  #L18fd3e.  goto L18fd1a;
}
procedure `float` `b`(`org.b.a.a.l` v2 @kind this) @signature `Lorg/b/a/a/l;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18fd50.  v0:= v2.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L18fd54.  call temp:= `a`(v0) @signature `Lorg/b/a/a/a/c;.a:()F` @kind virtual;
  #L18fd5a.  v0:= temp;
  #L18fd5c.  v1:= v2.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` @kind object;
  #L18fd60.  call temp:= `a`(v1) @signature `Lorg/b/a/a/b/h;.a:()F` @kind virtual;
  #L18fd66.  v1:= temp;
  #L18fd68.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L18fd6e.  v0:= temp;
  #L18fd70.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.l` v1 @kind this) @signature `Lorg/b/a/a/l;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18fd84.  v0:= v1.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18fd88.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.l` v2 @kind this) @signature `Lorg/b/a/a/l;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18fd9c.  v0:= v2.`org.b.a.a.l.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18fda0.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L18fda6.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L18fdaa.  v2.`org.b.a.a.l.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18fdae.  v0:= v2.`org.b.a.a.l.c` @type ^`org.b.a.a.a.c` @kind object;
  #L18fdb2.  call `b`(v0) @signature `Lorg/b/a/a/a/c;.b:()V` @kind virtual;
  #L18fdb8.  v0:= v2.`org.b.a.a.l.d` @type ^`org.b.a.a.b.h` @kind object;
  #L18fdbc.  call `b`(v0) @signature `Lorg/b/a/a/b/h;.b:()V` @kind virtual;
  #L18fdc2.  v0:= v2.`org.b.a.a.l.e` @type ^`byte`[] @kind object;
  #L18fdc6.  v1:= 0I;
  #L18fdc8.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L18fdce.  return @kind void;
}

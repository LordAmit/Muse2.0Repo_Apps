record `b.a$2` @kind class @AccessFlag  extends `b.r` @kind interface {
  `b.r` `b.a$2.a` @AccessFlag FINAL_SYNTHETIC;
  `b.a` `b.a$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`b.a$2` v0 @kind this, `b.a` v1 @kind object, `b.r` v2 @kind object) @signature `Lb/a$2;.<init>:(Lb/a;Lb/r;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L119d8c.  v0.`b.a$2.b` @type ^`b.a` := v1 @kind object;
  #L119d90.  v0.`b.a$2.a` @type ^`b.r` := v2 @kind object;
  #L119d94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L119d9a.  return @kind void;
}
procedure `long` `a`(`b.a$2` v4 @kind this, `b.c` v5 @kind object, `long` v6 ) @signature `Lb/a$2;.a:(Lb/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L119dac.  v1:= 0I;
  #L119dae.  v0:= v4.`b.a$2.b` @type ^`b.a` @kind object;
  #L119db2.  call `c`(v0) @signature `Lb/a;.c:()V` @kind virtual;
  #Try_start0.  
  #L119db8.  v0:= v4.`b.a$2.a` @type ^`b.r` @kind object;
  #L119dbc.  call temp:= `a`(v0, v5, v6) @signature `Lb/r;.a:(Lb/c;J)J` @kind interface;
  #Try_end0.  
  #L119dc2.  v0:= temp @kind wide;
  #L119dc4.  v2:= 1I;
  #L119dc6.  v3:= v4.`b.a$2.b` @type ^`b.a` @kind object;
  #L119dca.  call `a`(v3, v2) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L119dd0.  return v0 @kind wide;
  #L119dd2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L119dd4.  v2:= v4.`b.a$2.b` @type ^`b.a` @kind object;
  #L119dd8.  call temp:= `b`(v2, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L119dde.  v0:= temp @kind object;
  #L119de0.  throw v0;
  #Try_end1.  
  #L119de2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L119de4.  v2:= v4.`b.a$2.b` @type ^`b.a` @kind object;
  #L119de8.  call `a`(v2, v1) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L119dee.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L119dd2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L119de2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L119de2;
}
procedure `b.s` `a`(`b.a$2` v1 @kind this) @signature `Lb/a$2;.a:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L119e18.  v0:= v1.`b.a$2.b` @type ^`b.a` @kind object;
  #L119e1c.  return v0 @kind object;
}
procedure `void` `close`(`b.a$2` v3 @kind this) @signature `Lb/a$2;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L119e30.  v1:= 0I;
  #Try_start0.  
  #L119e32.  v0:= v3.`b.a$2.a` @type ^`b.r` @kind object;
  #L119e36.  call `close`(v0) @signature `Lb/r;.close:()V` @kind interface;
  #Try_end0.  
  #L119e3c.  v0:= 1I;
  #L119e3e.  v1:= v3.`b.a$2.b` @type ^`b.a` @kind object;
  #L119e42.  call `a`(v1, v0) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L119e48.  return @kind void;
  #L119e4a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L119e4c.  v2:= v3.`b.a$2.b` @type ^`b.a` @kind object;
  #L119e50.  call temp:= `b`(v2, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L119e56.  v0:= temp @kind object;
  #L119e58.  throw v0;
  #Try_end1.  
  #L119e5a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L119e5c.  v2:= v3.`b.a$2.b` @type ^`b.a` @kind object;
  #L119e60.  call `a`(v2, v1) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L119e66.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L119e4a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L119e5a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L119e5a;
}
procedure `java.lang.String` `toString`(`b.a$2` v2 @kind this) @signature `Lb/a$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L119e90.  v0:= new `java.lang.StringBuilder`;
  #L119e94.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L119e9a.  v1:= "AsyncTimeout.source(" @kind object;
  #L119e9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L119ea4.  v0:= temp @kind object;
  #L119ea6.  v1:= v2.`b.a$2.a` @type ^`b.r` @kind object;
  #L119eaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L119eb0.  v0:= temp @kind object;
  #L119eb2.  v1:= ")" @kind object;
  #L119eb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L119ebc.  v0:= temp @kind object;
  #L119ebe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L119ec4.  v0:= temp @kind object;
  #L119ec6.  return v0 @kind object;
}

record `b.h` @kind class @AccessFlag PUBLIC extends `b.s` @kind class {
  `b.s` `b.h.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`b.h` v2 @kind this, `b.s` v3 @kind object) @signature `Lb/h;.<init>:(Lb/s;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L11c994.  call `<init>`(v2) @signature `Lb/s;.<init>:()V` @kind direct;
  #L11c99a.  if v3 != 0 then goto L11c9ae;
  #L11c99e.  v0:= new `java.lang.IllegalArgumentException`;
  #L11c9a2.  v1:= "delegate == null" @kind object;
  #L11c9a6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11c9ac.  throw v0;
  #L11c9ae.  v2.`b.h.a` @type ^`b.s` := v3 @kind object;
  #L11c9b2.  return @kind void;
}
procedure `b.h` `a`(`b.h` v2 @kind this, `b.s` v3 @kind object) @signature `Lb/h;.a:(Lb/s;)Lb/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L11c9c4.  if v3 != 0 then goto L11c9d8;
  #L11c9c8.  v0:= new `java.lang.IllegalArgumentException`;
  #L11c9cc.  v1:= "delegate == null" @kind object;
  #L11c9d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11c9d6.  throw v0;
  #L11c9d8.  v2.`b.h.a` @type ^`b.s` := v3 @kind object;
  #L11c9dc.  return v2 @kind object;
}
procedure `b.s` `a`(`b.h` v1 @kind this) @signature `Lb/h;.a:()Lb/s;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L11c9f0.  v0:= v1.`b.h.a` @type ^`b.s` @kind object;
  #L11c9f4.  return v0 @kind object;
}
procedure `b.s` `a`(`b.h` v1 @kind this, `long` v2 ) @signature `Lb/h;.a:(J)Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11ca08.  v0:= v1.`b.h.a` @type ^`b.s` @kind object;
  #L11ca0c.  call temp:= `a`(v0, v2) @signature `Lb/s;.a:(J)Lb/s;` @kind virtual;
  #L11ca12.  v0:= temp @kind object;
  #L11ca14.  return v0 @kind object;
}
procedure `b.s` `a`(`b.h` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lb/h;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11ca28.  v0:= v1.`b.h.a` @type ^`b.s` @kind object;
  #L11ca2c.  call temp:= `a`(v0, v2, v4) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L11ca32.  v0:= temp @kind object;
  #L11ca34.  return v0 @kind object;
}
procedure `long` `b_`(`b.h` v2 @kind this) @signature `Lb/h;.b_:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11ca48.  v0:= v2.`b.h.a` @type ^`b.s` @kind object;
  #L11ca4c.  call temp:= `b_`(v0) @signature `Lb/s;.b_:()J` @kind virtual;
  #L11ca52.  v0:= temp @kind wide;
  #L11ca54.  return v0 @kind wide;
}
procedure `boolean` `c_`(`b.h` v1 @kind this) @signature `Lb/h;.c_:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11ca68.  v0:= v1.`b.h.a` @type ^`b.s` @kind object;
  #L11ca6c.  call temp:= `c_`(v0) @signature `Lb/s;.c_:()Z` @kind virtual;
  #L11ca72.  v0:= temp;
  #L11ca74.  return v0;
}
procedure `long` `d`(`b.h` v2 @kind this) @signature `Lb/h;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11ca88.  v0:= v2.`b.h.a` @type ^`b.s` @kind object;
  #L11ca8c.  call temp:= `d`(v0) @signature `Lb/s;.d:()J` @kind virtual;
  #L11ca92.  v0:= temp @kind wide;
  #L11ca94.  return v0 @kind wide;
}
procedure `b.s` `d_`(`b.h` v1 @kind this) @signature `Lb/h;.d_:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11caa8.  v0:= v1.`b.h.a` @type ^`b.s` @kind object;
  #L11caac.  call temp:= `d_`(v0) @signature `Lb/s;.d_:()Lb/s;` @kind virtual;
  #L11cab2.  v0:= temp @kind object;
  #L11cab4.  return v0 @kind object;
}
procedure `b.s` `e_`(`b.h` v1 @kind this) @signature `Lb/h;.e_:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11cac8.  v0:= v1.`b.h.a` @type ^`b.s` @kind object;
  #L11cacc.  call temp:= `e_`(v0) @signature `Lb/s;.e_:()Lb/s;` @kind virtual;
  #L11cad2.  v0:= temp @kind object;
  #L11cad4.  return v0 @kind object;
}
procedure `void` `g`(`b.h` v1 @kind this) @signature `Lb/h;.g:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11cae8.  v0:= v1.`b.h.a` @type ^`b.s` @kind object;
  #L11caec.  call `g`(v0) @signature `Lb/s;.g:()V` @kind virtual;
  #L11caf2.  return @kind void;
}

record `b.o` @kind class @AccessFlag FINAL {
}
global `b.n` `@@b.o.a` @AccessFlag STATIC;
global `long` `@@b.o.b` @AccessFlag STATIC;
procedure `void` `<init>`(`b.o` v0 @kind this) @signature `Lb/o;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L11e8d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11e8d6.  return @kind void;
}
procedure `b.n` `a`() @signature `Lb/o;.a:()Lb/n;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L11e8e8.  v1:= constclass @type ^`b.o` @kind object;
  #L11e8ec.  @monitorenter v1
  #Try_start0.  
  #L11e8ee.  v0:= `@@b.o.a` @type ^`b.n` @kind object;
  #L11e8f2.  if v0 == 0 then goto L11e91a;
  #L11e8f6.  v0:= `@@b.o.a` @type ^`b.n` @kind object;
  #L11e8fa.  v2:= v0.`b.n.f` @type ^`b.n` @kind object;
  #L11e8fe.  `@@b.o.a` @type ^`b.n` := v2 @kind object;
  #L11e902.  v2:= 0I;
  #L11e904.  v0.`b.n.f` @type ^`b.n` := v2 @kind object;
  #L11e908.  v2:= `@@b.o.b` @type ^`long` @kind wide;
  #L11e90c.  v4:= 8192L;
  #L11e910.  v2:= v2 - v4 @kind long;
  #L11e912.  `@@b.o.b` @type ^`long` := v2 @kind wide;
  #L11e916.  @monitorexit v1
  #L11e918.  return v0 @kind object;
  #L11e91a.  @monitorexit v1
  #Try_end0.  
  #L11e91c.  v0:= new `b.n`;
  #L11e920.  call `<init>`(v0) @signature `Lb/n;.<init>:()V` @kind direct;
  #L11e926.  goto L11e918;
  #L11e928.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L11e92a.  @monitorexit v1
  #Try_end1.  
  #L11e92c.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L11e928;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L11e928;
}
procedure `void` `a`(`b.n` v8 @kind object) @signature `Lb/o;.a:(Lb/n;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L11e954.  v6:= 8192L;
  #L11e958.  v0:= v8.`b.n.f` @type ^`b.n` @kind object;
  #L11e95c.  if v0 != 0 then goto L11e968;
  #L11e960.  v0:= v8.`b.n.g` @type ^`b.n` @kind object;
  #L11e964.  if v0 == 0 then goto L11e974;
  #L11e968.  v0:= new `java.lang.IllegalArgumentException`;
  #L11e96c.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L11e972.  throw v0;
  #L11e974.  v0:= v8.`b.n.d` @type ^`boolean` @kind boolean;
  #L11e978.  if v0 == 0 then goto L11e97e;
  #L11e97c.  return @kind void;
  #L11e97e.  v1:= constclass @type ^`b.o` @kind object;
  #L11e982.  @monitorenter v1
  #Try_start0.  
  #L11e984.  v2:= `@@b.o.b` @type ^`long` @kind wide;
  #L11e988.  v2:= v2 + v6 @kind long;
  #L11e98a.  v4:= 65536L;
  #L11e990.  v0:= lcmp(v2, v4);
  #L11e994.  if v0 <= 0 then goto L11e9a2;
  #L11e998.  @monitorexit v1
  #L11e99a.  goto L11e97c;
  #L11e99c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L11e99e.  @monitorexit v1
  #Try_end0.  
  #L11e9a0.  throw v0;
  #Try_start1.  
  #L11e9a2.  v2:= `@@b.o.b` @type ^`long` @kind wide;
  #L11e9a6.  v2:= v2 + v6 @kind long;
  #L11e9a8.  `@@b.o.b` @type ^`long` := v2 @kind wide;
  #L11e9ac.  v0:= `@@b.o.a` @type ^`b.n` @kind object;
  #L11e9b0.  v8.`b.n.f` @type ^`b.n` := v0 @kind object;
  #L11e9b4.  v0:= 0I;
  #L11e9b6.  v8.`b.n.c` @type ^`int` := v0;
  #L11e9ba.  v8.`b.n.b` @type ^`int` := v0;
  #L11e9be.  `@@b.o.a` @type ^`b.n` := v8 @kind object;
  #L11e9c2.  @monitorexit v1
  #Try_end1.  
  #L11e9c4.  goto L11e97c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L11e99c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L11e99c;
}

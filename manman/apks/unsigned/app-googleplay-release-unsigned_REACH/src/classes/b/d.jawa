record `b.d` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `b.q` @kind interface {
}
procedure `b.d` `b`(`java.lang.String` v0 @kind object) @signature `Lb/d;.b:(Ljava/lang/String;)Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.c` `c`() @signature `Lb/d;.c:()Lb/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.d` `c`(`byte`[] v0 @kind object) @signature `Lb/d;.c:([B)Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.d` `c`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lb/d;.c:([BII)Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `flush`() @signature `Lb/d;.flush:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.d` `g`(`int` v0 ) @signature `Lb/d;.g:(I)Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.d` `h`(`int` v0 ) @signature `Lb/d;.h:(I)Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.d` `i`(`int` v0 ) @signature `Lb/d;.i:(I)Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.d` `j`(`long` v0 ) @signature `Lb/d;.j:(J)Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.d` `k`(`long` v0 ) @signature `Lb/d;.k:(J)Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.d` `u`() @signature `Lb/d;.u:()Lb/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}

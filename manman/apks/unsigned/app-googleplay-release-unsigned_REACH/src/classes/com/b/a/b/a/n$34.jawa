record `com.b.a.b.a.n$34` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$34` v0 @kind this) @signature `Lcom/b/a/b/a/n$34;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1432c8.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L1432ce.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicInteger` `a`(`com.b.a.b.a.n$34` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/b/a/n$34;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicInteger;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L1432e0.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L1432e4.  call temp:= `m`(v3) @signature `Lcom/b/a/d/a;.m:()I` @kind virtual;
  #L1432ea.  v1:= temp;
  #L1432ec.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #Try_end0.  
  #L1432f2.  return v0 @kind object;
  #L1432f4.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L1432f6.  v1:= new `com.b.a.t`;
  #L1432fa.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L143300.  throw v1;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L1432f4;
}
procedure `void` `a`(`com.b.a.b.a.n$34` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$34;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L143324.  v2:= (`java.util.concurrent.atomic.AtomicInteger`) v2 @kind object;
  #L143328.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$34;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicInteger;)V` @kind virtual;
  #L14332e.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$34` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.util.concurrent.atomic.AtomicInteger` v4 @kind object) @signature `Lcom/b/a/b/a/n$34;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L143340.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.get:()I` @kind virtual;
  #L143346.  v0:= temp;
  #L143348.  v0:= (`long`) v0 @kind i2l;
  #L14334a.  call temp:= `a`(v3, v0) @signature `Lcom/b/a/d/c;.a:(J)Lcom/b/a/d/c;` @kind virtual;
  #L143350.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$34` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$34;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L143364.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$34;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicInteger;` @kind virtual;
  #L14336a.  v0:= temp @kind object;
  #L14336c.  return v0 @kind object;
}

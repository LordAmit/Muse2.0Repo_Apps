record `com.b.a.v` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.b.a.v` v0 @kind this) @signature `Lcom/b/a/v;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L13c1fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13c202.  return @kind void;
}
procedure `com.b.a.l` `a`(`com.b.a.v` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/v;.a:(Ljava/lang/Object;)Lcom/b/a/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L13c214.  v0:= new `com.b.a.b.a.f`;
  #L13c218.  call `<init>`(v0) @signature `Lcom/b/a/b/a/f;.<init>:()V` @kind direct;
  #L13c21e.  call `a`(v2, v0, v3) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L13c224.  call temp:= `a`(v0) @signature `Lcom/b/a/b/a/f;.a:()Lcom/b/a/l;` @kind virtual;
  #Try_end0.  
  #L13c22a.  v0:= temp @kind object;
  #L13c22c.  return v0 @kind object;
  #L13c22e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L13c230.  v1:= new `com.b.a.m`;
  #L13c234.  call `<init>`(v1, v0) @signature `Lcom/b/a/m;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L13c23a.  throw v1;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L13c22e;
}
procedure `com.b.a.v` `a`(`com.b.a.v` v1 @kind this) @signature `Lcom/b/a/v;.a:()Lcom/b/a/v;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c25c.  v0:= new `com.b.a.v$1`;
  #L13c260.  call `<init>`(v0, v1) @signature `Lcom/b/a/v$1;.<init>:(Lcom/b/a/v;)V` @kind direct;
  #L13c266.  return v0 @kind object;
}
procedure `void` `a`(`com.b.a.d.c` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `b`(`com.b.a.d.a` v0 @kind object) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}

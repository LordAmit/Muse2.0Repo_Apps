record `com.b.a.b.a.n$28` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `java.lang.Class` `com.b.a.b.a.n$28.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.n$28.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.n$28` v0 @kind this, `java.lang.Class` v1 @kind object, `com.b.a.v` v2 @kind object) @signature `Lcom/b/a/b/a/n$28;.<init>:(Ljava/lang/Class;Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L142c18.  v0.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` := v1 @kind object;
  #L142c1c.  v0.`com.b.a.b.a.n$28.b` @type ^`com.b.a.v` := v2 @kind object;
  #L142c20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L142c26.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.n$28` v2 @kind this, `com.b.a.f` v3 @kind object, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/a/n$28;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L142c38.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L142c3e.  v1:= temp @kind object;
  #L142c40.  v0:= v2.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` @kind object;
  #L142c44.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L142c4a.  v0:= temp;
  #L142c4c.  if v0 != 0 then goto L142c54;
  #L142c50.  v0:= 0I;
  #L142c52.  return v0 @kind object;
  #L142c54.  v0:= new `com.b.a.b.a.n$28$1`;
  #L142c58.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/n$28$1;.<init>:(Lcom/b/a/b/a/n$28;Ljava/lang/Class;)V` @kind direct;
  #L142c5e.  goto L142c52;
}
procedure `java.lang.String` `toString`(`com.b.a.b.a.n$28` v2 @kind this) @signature `Lcom/b/a/b/a/n$28;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L142c70.  v0:= new `java.lang.StringBuilder`;
  #L142c74.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L142c7a.  v1:= "Factory[typeHierarchy=" @kind object;
  #L142c7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142c84.  v0:= temp @kind object;
  #L142c86.  v1:= v2.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` @kind object;
  #L142c8a.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L142c90.  v1:= temp @kind object;
  #L142c92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142c98.  v0:= temp @kind object;
  #L142c9a.  v1:= ",adapter=" @kind object;
  #L142c9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142ca4.  v0:= temp @kind object;
  #L142ca6.  v1:= v2.`com.b.a.b.a.n$28.b` @type ^`com.b.a.v` @kind object;
  #L142caa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142cb0.  v0:= temp @kind object;
  #L142cb2.  v1:= "]" @kind object;
  #L142cb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L142cbc.  v0:= temp @kind object;
  #L142cbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L142cc4.  v0:= temp @kind object;
  #L142cc6.  return v0 @kind object;
}

record `com.b.a.b.a.h` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.b.a.h.b` @AccessFlag PRIVATE_FINAL;
}
global `com.b.a.w` `@@com.b.a.b.a.h.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L140994.  v0:= new `com.b.a.b.a.h$1`;
  #L140998.  call `<init>`(v0) @signature `Lcom/b/a/b/a/h$1;.<init>:()V` @kind direct;
  #L14099e.  `@@com.b.a.b.a.h.a` @type ^`com.b.a.w` := v0 @kind object;
  #L1409a2.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.b.a.h` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/b/a/h;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1409b4.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L1409ba.  v0.`com.b.a.b.a.h.b` @type ^`com.b.a.f` := v1 @kind object;
  #L1409be.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.h` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/a/h;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1409d0.  if v4 != 0 then goto L1409dc;
  #L1409d4.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L1409da.  return @kind void;
  #L1409dc.  v0:= v2.`com.b.a.b.a.h.b` @type ^`com.b.a.f` @kind object;
  #L1409e0.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1409e6.  v1:= temp @kind object;
  #L1409e8.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/f;.a:(Ljava/lang/Class;)Lcom/b/a/v;` @kind virtual;
  #L1409ee.  v0:= temp @kind object;
  #L1409f0.  v1:= instanceof @variable v0 @type ^`com.b.a.b.a.h` @kind boolean;
  #L1409f4.  if v1 == 0 then goto L140a06;
  #L1409f8.  call temp:= `d`(v3) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L1409fe.  call temp:= `e`(v3) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L140a04.  goto L1409da;
  #L140a06.  call `a`(v0, v3, v4) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L140a0c.  goto L1409da;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.h` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L140a20.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L140a26.  v0:= temp @kind object;
  #L140a28.  v1:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L140a2c.  call temp:= `ordinal`(v0) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L140a32.  v0:= temp;
  #L140a34.  v0:= v1[v0];
  #L140a38.  goto L140af4;
  #L140a3e.  v0:= new `java.lang.IllegalStateException`;
  #L140a42.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L140a48.  throw v0;
  #L140a4a.  v0:= new `java.util.ArrayList`;
  #L140a4e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L140a54.  call `a`(v4) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L140a5a.  call temp:= `e`(v4) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L140a60.  v1:= temp;
  #L140a62.  if v1 == 0 then goto L140a76;
  #L140a66.  call temp:= `b`(v3, v4) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L140a6c.  v1:= temp @kind object;
  #L140a6e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L140a74.  goto L140a5a;
  #L140a76.  call `b`(v4) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L140a7c.  return v0 @kind object;
  #L140a7e.  v0:= new `com.b.a.b.g`;
  #L140a82.  call `<init>`(v0) @signature `Lcom/b/a/b/g;.<init>:()V` @kind direct;
  #L140a88.  call `c`(v4) @signature `Lcom/b/a/d/a;.c:()V` @kind virtual;
  #L140a8e.  call temp:= `e`(v4) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L140a94.  v1:= temp;
  #L140a96.  if v1 == 0 then goto L140ab2;
  #L140a9a.  call temp:= `g`(v4) @signature `Lcom/b/a/d/a;.g:()Ljava/lang/String;` @kind virtual;
  #L140aa0.  v1:= temp @kind object;
  #L140aa2.  call temp:= `b`(v3, v4) @signature `Lcom/b/a/b/a/h;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L140aa8.  v2:= temp @kind object;
  #L140aaa.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L140ab0.  goto L140a8e;
  #L140ab2.  call `d`(v4) @signature `Lcom/b/a/d/a;.d:()V` @kind virtual;
  #L140ab8.  goto L140a7c;
  #L140aba.  call temp:= `h`(v4) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L140ac0.  v0:= temp @kind object;
  #L140ac2.  goto L140a7c;
  #L140ac4.  call temp:= `k`(v4) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L140aca.  v0:= temp @kind wide;
  #L140acc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L140ad2.  v0:= temp @kind object;
  #L140ad4.  goto L140a7c;
  #L140ad6.  call temp:= `i`(v4) @signature `Lcom/b/a/d/a;.i:()Z` @kind virtual;
  #L140adc.  v0:= temp;
  #L140ade.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L140ae4.  v0:= temp @kind object;
  #L140ae6.  goto L140a7c;
  #L140ae8.  call `j`(v4) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L140aee.  v0:= 0I;
  #L140af0.  goto L140a7c;
  #L140af2.  
  #L140af4.  switch v0
                  | 1 => goto L140a4a
                  | 2 => goto L140a7e
                  | 3 => goto L140aba
                  | 4 => goto L140ac4
                  | 5 => goto L140ad6
                  | 6 => goto L140ae8
                  | else => goto L140a3e;
}

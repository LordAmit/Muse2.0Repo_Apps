record `com.b.a.b.a.i` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.w` @kind interface {
  `com.b.a.b.c` `com.b.a.b.a.i.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.e` `com.b.a.b.a.i.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.d` `com.b.a.b.a.i.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.d` `com.b.a.b.a.i.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.i` v0 @kind this, `com.b.a.b.c` v1 @kind object, `com.b.a.e` v2 @kind object, `com.b.a.b.d` v3 @kind object, `com.b.a.b.a.d` v4 @kind object) @signature `Lcom/b/a/b/a/i;.<init>:(Lcom/b/a/b/c;Lcom/b/a/e;Lcom/b/a/b/d;Lcom/b/a/b/a/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L140da0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L140da6.  v0.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` := v1 @kind object;
  #L140daa.  v0.`com.b.a.b.a.i.b` @type ^`com.b.a.e` := v2 @kind object;
  #L140dae.  v0.`com.b.a.b.a.i.c` @type ^`com.b.a.b.d` := v3 @kind object;
  #L140db2.  v0.`com.b.a.b.a.i.d` @type ^`com.b.a.b.a.d` := v4 @kind object;
  #L140db6.  return @kind void;
}
procedure `com.b.a.b.a.i$b` `a`(`com.b.a.b.a.i` v11 @kind this, `com.b.a.f` v12 @kind object, `java.lang.reflect.Field` v13 @kind object, `java.lang.String` v14 @kind object, `com.b.a.c.a` v15 @kind object, `boolean` v16 , `boolean` v17 ) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/b/a/c/a;ZZ)Lcom/b/a/b/a/i$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L140dc8.  call temp:= `a`(v15) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L140dce.  v0:= temp @kind object;
  #L140dd0.  call temp:= `a`(v0) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L140dd6.  v10:= temp;
  #L140dd8.  v0:= constclass @type ^`com.b.a.a.b` @kind object;
  #L140ddc.  call temp:= `getAnnotation`(v13, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L140de2.  v0:= temp @kind object;
  #L140de4.  v0:= (`com.b.a.a.b`) v0 @kind object;
  #L140de8.  v7:= 0I;
  #L140dea.  if v0 == 0 then goto L140dfe;
  #L140dee.  v1:= v11.`com.b.a.b.a.i.d` @type ^`com.b.a.b.a.d` @kind object;
  #L140df2.  v2:= v11.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` @kind object;
  #L140df6.  call temp:= `a`(v1, v2, v12, v15, v0) @signature `Lcom/b/a/b/a/d;.a:(Lcom/b/a/b/c;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/a/b;)Lcom/b/a/v;` @kind virtual;
  #L140dfc.  v7:= temp @kind object;
  #L140dfe.  if v7 == 0 then goto L140e2e;
  #L140e02.  v6:= 1I;
  #L140e04.  if v7 != 0 then goto L140e10;
  #L140e08.  call temp:= `a`(v12, v15) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L140e0e.  v7:= temp @kind object;
  #L140e10.  v0:= new `com.b.a.b.a.i$1`;
  #L140e14.  v1:= v11 @kind object;
  #L140e16.  v2:= v14 @kind object;
  #L140e18.  v3:= v16;
  #L140e1c.  v4:= v17;
  #L140e20.  v5:= v13 @kind object;
  #L140e22.  v8:= v12 @kind object;
  #L140e24.  v9:= v15 @kind object;
  #L140e26.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/b/a/b/a/i$1;.<init>:(Lcom/b/a/b/a/i;Ljava/lang/String;ZZLjava/lang/reflect/Field;ZLcom/b/a/v;Lcom/b/a/f;Lcom/b/a/c/a;Z)V` @kind direct;
  #L140e2c.  return v0 @kind object;
  #L140e2e.  v6:= 0I;
  #L140e30.  goto L140e04;
}
procedure `java.util.List` `a`(`com.b.a.b.a.i` v5 @kind this, `java.lang.reflect.Field` v6 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L140e44.  v0:= constclass @type ^`com.b.a.a.c` @kind object;
  #L140e48.  call temp:= `getAnnotation`(v6, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L140e4e.  v0:= temp @kind object;
  #L140e50.  v0:= (`com.b.a.a.c`) v0 @kind object;
  #L140e54.  if v0 != 0 then goto L140e6e;
  #L140e58.  v0:= v5.`com.b.a.b.a.i.b` @type ^`com.b.a.e` @kind object;
  #L140e5c.  call temp:= `a`(v0, v6) @signature `Lcom/b/a/e;.a:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind interface;
  #L140e62.  v0:= temp @kind object;
  #L140e64.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L140e6a.  v0:= temp @kind object;
  #L140e6c.  return v0 @kind object;
  #L140e6e.  call temp:= `a`(v0) @signature `Lcom/b/a/a/c;.a:()Ljava/lang/String;` @kind interface;
  #L140e74.  v1:= temp @kind object;
  #L140e76.  call temp:= `b`(v0) @signature `Lcom/b/a/a/c;.b:()[Ljava/lang/String;` @kind interface;
  #L140e7c.  v2:= temp @kind object;
  #L140e7e.  v0:= length @variable v2;
  #L140e80.  if v0 != 0 then goto L140e8e;
  #L140e84.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L140e8a.  v0:= temp @kind object;
  #L140e8c.  goto L140e6c;
  #L140e8e.  v0:= new `java.util.ArrayList`;
  #L140e92.  v3:= length @variable v2;
  #L140e94.  v3:= v3 + 1;
  #L140e98.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L140e9e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L140ea4.  v3:= length @variable v2;
  #L140ea6.  v1:= 0I;
  #L140ea8.  if v1 >= v3 then goto L140e6c;
  #L140eac.  v4:= v2[v1] @kind object;
  #L140eb0.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L140eb6.  v1:= v1 + 1;
  #L140eba.  goto L140ea8;
}
procedure `java.util.Map` `a`(`com.b.a.b.a.i` v17 @kind this, `com.b.a.f` v18 @kind object, `com.b.a.c.a` v19 @kind object, `java.lang.Class` v20 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;Ljava/lang/Class;)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L140ecc.  v10:= new `java.util.LinkedHashMap`;
  #L140ed0.  call `<init>`(v10) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L140ed6.  call temp:= `isInterface`(v20) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L140edc.  v1:= temp;
  #L140ede.  if v1 == 0 then goto L140ee6;
  #L140ee2.  v1:= v10 @kind object;
  #L140ee4.  return v1 @kind object;
  #L140ee6.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L140eec.  v12:= temp @kind object;
  #L140eee.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L140ef2.  v0:= v20 @kind object;
  #L140ef6.  if v0 == v1 then goto L141038;
  #L140efa.  call temp:= `getDeclaredFields`(v20) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L140f00.  v13:= temp @kind object;
  #L140f02.  v14:= length @variable v13;
  #L140f04.  v1:= 0I;
  #L140f06.  v11:= v1;
  #L140f08.  if v11 >= v14 then goto L141008;
  #L140f0c.  v3:= v13[v11] @kind object;
  #L140f10.  v1:= 1I;
  #L140f12.  v0:= v17 @kind object;
  #L140f16.  call temp:= `a`(v0, v3, v1) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L140f1c.  v6:= temp;
  #L140f1e.  v1:= 0I;
  #L140f20.  v0:= v17 @kind object;
  #L140f24.  call temp:= `a`(v0, v3, v1) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L140f2a.  v7:= temp;
  #L140f2c.  if v6 != 0 then goto L140f3c;
  #L140f30.  if v7 != 0 then goto L140f3c;
  #L140f34.  v1:= v11 + 1;
  #L140f38.  v11:= v1;
  #L140f3a.  goto L140f08;
  #L140f3c.  v1:= 1I;
  #L140f3e.  call `setAccessible`(v3, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L140f44.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L140f4a.  v1:= temp @kind object;
  #L140f4c.  call temp:= `getGenericType`(v3) @signature `Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L140f52.  v2:= temp @kind object;
  #L140f54.  v0:= v20 @kind object;
  #L140f58.  call temp:= `a`(v1, v0, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L140f5e.  v15:= temp @kind object;
  #L140f60.  v0:= v17 @kind object;
  #L140f64.  call temp:= `a`(v0, v3) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @kind direct;
  #L140f6a.  v16:= temp @kind object;
  #L140f6c.  v8:= 0I;
  #L140f6e.  v1:= 0I;
  #L140f70.  v9:= v1;
  #L140f72.  call temp:= `size`(v16) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L140f78.  v1:= temp;
  #L140f7a.  if v9 >= v1 then goto L140fc6;
  #L140f7e.  v0:= v16 @kind object;
  #L140f82.  call temp:= `get`(v0, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L140f88.  v4:= temp @kind object;
  #L140f8a.  v4:= (`java.lang.String`) v4 @kind object;
  #L140f8e.  if v9 == 0 then goto L140f94;
  #L140f92.  v6:= 0I;
  #L140f94.  call temp:= `a`(v15) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L140f9a.  v5:= temp @kind object;
  #L140f9c.  v1:= v17 @kind object;
  #L140fa0.  v2:= v18 @kind object;
  #L140fa4.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/b/a/c/a;ZZ)Lcom/b/a/b/a/i$b;` @kind direct;
  #L140faa.  v1:= temp @kind object;
  #L140fac.  call temp:= `put`(v10, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L140fb2.  v1:= temp @kind object;
  #L140fb4.  v1:= (`com.b.a.b.a.i$b`) v1 @kind object;
  #L140fb8.  if v8 != 0 then goto L14103e;
  #L140fbc.  v2:= v9 + 1;
  #L140fc0.  v9:= v2;
  #L140fc2.  v8:= v1 @kind object;
  #L140fc4.  goto L140f72;
  #L140fc6.  if v8 == 0 then goto L140f34;
  #L140fca.  v1:= new `java.lang.IllegalArgumentException`;
  #L140fce.  v2:= new `java.lang.StringBuilder`;
  #L140fd2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L140fd8.  call temp:= `append`(v2, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140fde.  v2:= temp @kind object;
  #L140fe0.  v3:= " declares multiple JSON fields named " @kind object;
  #L140fe4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140fea.  v2:= temp @kind object;
  #L140fec.  v3:= v8.`com.b.a.b.a.i$b.h` @type ^`java.lang.String` @kind object;
  #L140ff0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140ff6.  v2:= temp @kind object;
  #L140ff8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L140ffe.  v2:= temp @kind object;
  #L141000.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141006.  throw v1;
  #L141008.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L14100e.  v1:= temp @kind object;
  #L141010.  call temp:= `getGenericSuperclass`(v20) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L141016.  v2:= temp @kind object;
  #L141018.  v0:= v20 @kind object;
  #L14101c.  call temp:= `a`(v1, v0, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L141022.  v1:= temp @kind object;
  #L141024.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L14102a.  v19:= temp @kind object;
  #L14102c.  call temp:= `a`(v19) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L141032.  v20:= temp @kind object;
  #L141034.  goto L140eee;
  #L141038.  v1:= v10 @kind object;
  #L14103a.  goto L140ee4;
  #L14103e.  v1:= v8 @kind object;
  #L141040.  goto L140fbc;
}
procedure `boolean` `a`(`java.lang.reflect.Field` v1 @kind object, `boolean` v2 , `com.b.a.b.d` v3 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;ZLcom/b/a/b/d;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L141054.  call temp:= `getType`(v1) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L14105a.  v0:= temp @kind object;
  #L14105c.  call temp:= `a`(v3, v0, v2) @signature `Lcom/b/a/b/d;.a:(Ljava/lang/Class;Z)Z` @kind virtual;
  #L141062.  v0:= temp;
  #L141064.  if v0 != 0 then goto L141078;
  #L141068.  call temp:= `a`(v3, v1, v2) @signature `Lcom/b/a/b/d;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L14106e.  v0:= temp;
  #L141070.  if v0 != 0 then goto L141078;
  #L141074.  v0:= 1I;
  #L141076.  return v0;
  #L141078.  v0:= 0I;
  #L14107a.  goto L141076;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.i` v3 @kind this, `com.b.a.f` v4 @kind object, `com.b.a.c.a` v5 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14108c.  call temp:= `a`(v5) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L141092.  v1:= temp @kind object;
  #L141094.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L141098.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14109e.  v0:= temp;
  #L1410a0.  if v0 != 0 then goto L1410a8;
  #L1410a4.  v0:= 0I;
  #L1410a6.  return v0 @kind object;
  #L1410a8.  v0:= v3.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` @kind object;
  #L1410ac.  call temp:= `a`(v0, v5) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @kind virtual;
  #L1410b2.  v2:= temp @kind object;
  #L1410b4.  v0:= new `com.b.a.b.a.i$a`;
  #L1410b8.  call temp:= `a`(v3, v4, v5, v1) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;Ljava/lang/Class;)Ljava/util/Map;` @kind direct;
  #L1410be.  v1:= temp @kind object;
  #L1410c0.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/i$a;.<init>:(Lcom/b/a/b/h;Ljava/util/Map;)V` @kind direct;
  #L1410c6.  goto L1410a6;
}
procedure `boolean` `a`(`com.b.a.b.a.i` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `boolean` v3 ) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1410d8.  v0:= v1.`com.b.a.b.a.i.c` @type ^`com.b.a.b.d` @kind object;
  #L1410dc.  call temp:= `a`(v2, v3, v0) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;ZLcom/b/a/b/d;)Z` @kind static;
  #L1410e2.  v0:= temp;
  #L1410e4.  return v0;
}

record `com.b.a.a` @kind class @AccessFlag FINAL extends `com.b.a.k` @kind interface, `com.b.a.s` @kind interface {
  `java.text.DateFormat` `com.b.a.a.a` @AccessFlag PRIVATE_FINAL;
  `java.text.DateFormat` `com.b.a.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this) @signature `Lcom/b/a/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L13b7dc.  v1:= 2I;
  #L13b7de.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L13b7e2.  call temp:= `getDateTimeInstance`(v1, v1, v0) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L13b7e8.  v0:= temp @kind object;
  #L13b7ea.  call temp:= `getDateTimeInstance`(v1, v1) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L13b7f0.  v1:= temp @kind object;
  #L13b7f2.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L13b7f8.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/b/a/a;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L13b80c.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L13b810.  call temp:= `getDateTimeInstance`(v3, v4, v0) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L13b816.  v0:= temp @kind object;
  #L13b818.  call temp:= `getDateTimeInstance`(v3, v4) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L13b81e.  v1:= temp @kind object;
  #L13b820.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L13b826.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/b/a/a;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L13b838.  v0:= new `java.text.SimpleDateFormat`;
  #L13b83c.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L13b840.  call `<init>`(v0, v3, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L13b846.  v1:= new `java.text.SimpleDateFormat`;
  #L13b84a.  call `<init>`(v1, v3) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b850.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L13b856.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v0 @kind this, `java.text.DateFormat` v1 @kind object, `java.text.DateFormat` v2 @kind object) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13b868.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13b86e.  v0.`com.b.a.a.a` @type ^`java.text.DateFormat` := v1 @kind object;
  #L13b872.  v0.`com.b.a.a.b` @type ^`java.text.DateFormat` := v2 @kind object;
  #L13b876.  return @kind void;
}
procedure `java.util.Date` `a`(`com.b.a.a` v4 @kind this, `com.b.a.l` v5 @kind object) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;)Ljava/util/Date;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13b888.  v1:= v4.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L13b88c.  @monitorenter v1
  #Try_start0.  
  #L13b88e.  v0:= v4.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L13b892.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L13b898.  v2:= temp @kind object;
  #L13b89a.  call temp:= `parse`(v0, v2) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #Try_end0.  
  #L13b8a0.  v0:= temp @kind object;
  #Try_start1.  
  #L13b8a2.  @monitorexit v1
  #Try_end1.  
  #L13b8a4.  return v0 @kind object;
  #L13b8a6.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #Try_start2.  
  #L13b8a8.  v0:= v4.`com.b.a.a.a` @type ^`java.text.DateFormat` @kind object;
  #L13b8ac.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L13b8b2.  v2:= temp @kind object;
  #L13b8b4.  call temp:= `parse`(v0, v2) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #Try_end2.  
  #L13b8ba.  v0:= temp @kind object;
  #Try_start3.  
  #L13b8bc.  @monitorexit v1
  #L13b8be.  goto L13b8a4;
  #L13b8c0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13b8c2.  @monitorexit v1
  #Try_end3.  
  #L13b8c4.  throw v0;
  #L13b8c6.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #Try_start4.  
  #L13b8c8.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L13b8ce.  v0:= temp @kind object;
  #L13b8d0.  v2:= new `java.text.ParsePosition`;
  #L13b8d4.  v3:= 0I;
  #L13b8d6.  call `<init>`(v2, v3) @signature `Ljava/text/ParsePosition;.<init>:(I)V` @kind direct;
  #L13b8dc.  call temp:= `a`(v0, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @kind static;
  #Try_end4.  
  #L13b8e2.  v0:= temp @kind object;
  #Try_start5.  
  #L13b8e4.  @monitorexit v1
  #L13b8e6.  goto L13b8a4;
  #L13b8e8.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #L13b8ea.  v2:= new `com.b.a.t`;
  #L13b8ee.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L13b8f4.  v3:= temp @kind object;
  #L13b8f6.  call `<init>`(v2, v3, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L13b8fc.  throw v2;
  #Try_end5.  
  catch `java.text.ParseException` @[Try_start0..Try_end0] goto L13b8a6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L13b8c0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L13b8c0;
  catch `java.text.ParseException` @[Try_start2..Try_end2] goto L13b8c6;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L13b8c0;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L13b8c0;
  catch `java.text.ParseException` @[Try_start4..Try_end4] goto L13b8e8;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L13b8c0;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L13b8c0;
}
procedure `com.b.a.l` `a`(`com.b.a.a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.r` v4 @kind object) @signature `Lcom/b/a/a;.a:(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L13b954.  v2:= (`java.util.Date`) v2 @kind object;
  #L13b958.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/b/a/a;.a:(Ljava/util/Date;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @kind virtual;
  #L13b95e.  v0:= temp @kind object;
  #L13b960.  return v0 @kind object;
}
procedure `com.b.a.l` `a`(`com.b.a.a` v3 @kind this, `java.util.Date` v4 @kind object, `java.lang.reflect.Type` v5 @kind object, `com.b.a.r` v6 @kind object) @signature `Lcom/b/a/a;.a:(Ljava/util/Date;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13b974.  v1:= v3.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L13b978.  @monitorenter v1
  #Try_start0.  
  #L13b97a.  v0:= v3.`com.b.a.a.a` @type ^`java.text.DateFormat` @kind object;
  #L13b97e.  call temp:= `format`(v0, v4) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L13b984.  v0:= temp @kind object;
  #L13b986.  v2:= new `com.b.a.q`;
  #L13b98a.  call `<init>`(v2, v0) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b990.  @monitorexit v1
  #L13b992.  return v2 @kind object;
  #L13b994.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13b996.  @monitorexit v1
  #Try_end0.  
  #L13b998.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L13b994;
}
procedure `java.util.Date` `a`(`com.b.a.a` v4 @kind this, `com.b.a.l` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `com.b.a.j` v7 @kind object) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13b9b8.  v0:= instanceof @variable v5 @type ^`com.b.a.q` @kind boolean;
  #L13b9bc.  if v0 != 0 then goto L13b9d0;
  #L13b9c0.  v0:= new `com.b.a.p`;
  #L13b9c4.  v1:= "The date should be a string value" @kind object;
  #L13b9c8.  call `<init>`(v0, v1) @signature `Lcom/b/a/p;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13b9ce.  throw v0;
  #L13b9d0.  call temp:= `a`(v4, v5) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;)Ljava/util/Date;` @kind direct;
  #L13b9d6.  v0:= temp @kind object;
  #L13b9d8.  v1:= constclass @type ^`java.util.Date` @kind object;
  #L13b9dc.  if v6 != v1 then goto L13b9e2;
  #L13b9e0.  return v0 @kind object;
  #L13b9e2.  v1:= constclass @type ^`java.sql.Timestamp` @kind object;
  #L13b9e6.  if v6 != v1 then goto L13ba00;
  #L13b9ea.  v1:= new `java.sql.Timestamp`;
  #L13b9ee.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L13b9f4.  v2:= temp @kind wide;
  #L13b9f6.  call `<init>`(v1, v2) @signature `Ljava/sql/Timestamp;.<init>:(J)V` @kind direct;
  #L13b9fc.  v0:= v1 @kind object;
  #L13b9fe.  goto L13b9e0;
  #L13ba00.  v1:= constclass @type ^`java.sql.Date` @kind object;
  #L13ba04.  if v6 != v1 then goto L13ba1e;
  #L13ba08.  v1:= new `java.sql.Date`;
  #L13ba0c.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L13ba12.  v2:= temp @kind wide;
  #L13ba14.  call `<init>`(v1, v2) @signature `Ljava/sql/Date;.<init>:(J)V` @kind direct;
  #L13ba1a.  v0:= v1 @kind object;
  #L13ba1c.  goto L13b9e0;
  #L13ba1e.  v0:= new `java.lang.IllegalArgumentException`;
  #L13ba22.  v1:= new `java.lang.StringBuilder`;
  #L13ba26.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13ba2c.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L13ba32.  v2:= temp @kind object;
  #L13ba34.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ba3a.  v1:= temp @kind object;
  #L13ba3c.  v2:= " cannot deserialize to " @kind object;
  #L13ba40.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ba46.  v1:= temp @kind object;
  #L13ba48.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13ba4e.  v1:= temp @kind object;
  #L13ba50.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13ba56.  v1:= temp @kind object;
  #L13ba58.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13ba5e.  throw v0;
}
procedure `java.lang.Object` `b`(`com.b.a.a` v1 @kind this, `com.b.a.l` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.j` v4 @kind object) @signature `Lcom/b/a/a;.b:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L13ba70.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/util/Date;` @kind virtual;
  #L13ba76.  v0:= temp @kind object;
  #L13ba78.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.b.a.a` v3 @kind this) @signature `Lcom/b/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13ba8c.  v0:= new `java.lang.StringBuilder`;
  #L13ba90.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13ba96.  v1:= constclass @type ^`com.b.a.a` @kind object;
  #L13ba9a.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L13baa0.  v1:= temp @kind object;
  #L13baa2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13baa8.  v1:= 40I;
  #L13baac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bab2.  v1:= temp @kind object;
  #L13bab4.  v2:= v3.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L13bab8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L13babe.  v2:= temp @kind object;
  #L13bac0.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L13bac6.  v2:= temp @kind object;
  #L13bac8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bace.  v1:= temp @kind object;
  #L13bad0.  v2:= 41I;
  #L13bad4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13bada.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13bae0.  v0:= temp @kind object;
  #L13bae2.  return v0 @kind object;
}

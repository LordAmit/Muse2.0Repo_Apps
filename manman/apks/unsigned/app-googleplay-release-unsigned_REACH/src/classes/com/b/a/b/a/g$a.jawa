record `com.b.a.b.a.g$a` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.b.a.g` `com.b.a.b.a.g$a.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.g$a.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.g$a.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.h` `com.b.a.b.a.g$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.g$a` v1 @kind this, `com.b.a.b.a.g` v2 @kind object, `com.b.a.f` v3 @kind object, `java.lang.reflect.Type` v4 @kind object, `com.b.a.v` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `com.b.a.v` v7 @kind object, `com.b.a.b.h` v8 @kind object) @signature `Lcom/b/a/b/a/g$a;.<init>:(Lcom/b/a/b/a/g;Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L140344.  v1.`com.b.a.b.a.g$a.a` @type ^`com.b.a.b.a.g` := v2 @kind object;
  #L140348.  call `<init>`(v1) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L14034e.  v0:= new `com.b.a.b.a.m`;
  #L140352.  call `<init>`(v0, v3, v5, v4) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L140358.  v1.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` := v0 @kind object;
  #L14035c.  v0:= new `com.b.a.b.a.m`;
  #L140360.  call `<init>`(v0, v3, v7, v6) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L140366.  v1.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` := v0 @kind object;
  #L14036a.  v1.`com.b.a.b.a.g$a.d` @type ^`com.b.a.b.h` := v8 @kind object;
  #L14036e.  return @kind void;
}
procedure `java.lang.String` `a`(`com.b.a.b.a.g$a` v2 @kind this, `com.b.a.l` v3 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/l;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L140380.  call temp:= `i`(v3) @signature `Lcom/b/a/l;.i:()Z` @kind virtual;
  #L140386.  v0:= temp;
  #L140388.  if v0 == 0 then goto L1403f2;
  #L14038c.  call temp:= `m`(v3) @signature `Lcom/b/a/l;.m:()Lcom/b/a/q;` @kind virtual;
  #L140392.  v0:= temp @kind object;
  #L140394.  call temp:= `p`(v0) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L14039a.  v1:= temp;
  #L14039c.  if v1 == 0 then goto L1403b2;
  #L1403a0.  call temp:= `a`(v0) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L1403a6.  v0:= temp @kind object;
  #L1403a8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1403ae.  v0:= temp @kind object;
  #L1403b0.  return v0 @kind object;
  #L1403b2.  call temp:= `o`(v0) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L1403b8.  v1:= temp;
  #L1403ba.  if v1 == 0 then goto L1403d0;
  #L1403be.  call temp:= `f`(v0) @signature `Lcom/b/a/q;.f:()Z` @kind virtual;
  #L1403c4.  v0:= temp;
  #L1403c6.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L1403cc.  v0:= temp @kind object;
  #L1403ce.  goto L1403b0;
  #L1403d0.  call temp:= `q`(v0) @signature `Lcom/b/a/q;.q:()Z` @kind virtual;
  #L1403d6.  v1:= temp;
  #L1403d8.  if v1 == 0 then goto L1403e6;
  #L1403dc.  call temp:= `b`(v0) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L1403e2.  v0:= temp @kind object;
  #L1403e4.  goto L1403b0;
  #L1403e6.  v0:= new `java.lang.AssertionError`;
  #L1403ea.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1403f0.  throw v0;
  #L1403f2.  call temp:= `j`(v3) @signature `Lcom/b/a/l;.j:()Z` @kind virtual;
  #L1403f8.  v0:= temp;
  #L1403fa.  if v0 == 0 then goto L140404;
  #L1403fe.  v0:= "null" @kind object;
  #L140402.  goto L1403b0;
  #L140404.  v0:= new `java.lang.AssertionError`;
  #L140408.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L14040e.  throw v0;
}
procedure `java.util.Map` `a`(`com.b.a.b.a.g$a` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/a;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L140420.  call temp:= `f`(v5) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L140426.  v1:= temp @kind object;
  #L140428.  v0:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L14042c.  if v1 != v0 then goto L14043a;
  #L140430.  call `j`(v5) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L140436.  v0:= 0I;
  #L140438.  return v0 @kind object;
  #L14043a.  v0:= v4.`com.b.a.b.a.g$a.d` @type ^`com.b.a.b.h` @kind object;
  #L14043e.  call temp:= `a`(v0) @signature `Lcom/b/a/b/h;.a:()Ljava/lang/Object;` @kind interface;
  #L140444.  v0:= temp @kind object;
  #L140446.  v0:= (`java.util.Map`) v0 @kind object;
  #L14044a.  v2:= `@@com.b.a.d.b.a` @type ^`com.b.a.d.b` @kind object;
  #L14044e.  if v1 != v2 then goto L1404d0;
  #L140452.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L140458.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L14045e.  v1:= temp;
  #L140460.  if v1 == 0 then goto L1404c8;
  #L140464.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L14046a.  v1:= v4.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L14046e.  call temp:= `b`(v1, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L140474.  v1:= temp @kind object;
  #L140476.  v2:= v4.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L14047a.  call temp:= `b`(v2, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L140480.  v2:= temp @kind object;
  #L140482.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L140488.  v2:= temp @kind object;
  #L14048a.  if v2 == 0 then goto L1404c0;
  #L14048e.  v0:= new `com.b.a.t`;
  #L140492.  v2:= new `java.lang.StringBuilder`;
  #L140496.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14049c.  v3:= "duplicate key: " @kind object;
  #L1404a0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1404a6.  v2:= temp @kind object;
  #L1404a8.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1404ae.  v1:= temp @kind object;
  #L1404b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1404b6.  v1:= temp @kind object;
  #L1404b8.  call `<init>`(v0, v1) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1404be.  throw v0;
  #L1404c0.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L1404c6.  goto L140458;
  #L1404c8.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L1404ce.  goto L140438;
  #L1404d0.  call `c`(v5) @signature `Lcom/b/a/d/a;.c:()V` @kind virtual;
  #L1404d6.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L1404dc.  v1:= temp;
  #L1404de.  if v1 == 0 then goto L140542;
  #L1404e2.  v1:= `@@com.b.a.b.e.a` @type ^`com.b.a.b.e` @kind object;
  #L1404e6.  call `a`(v1, v5) @signature `Lcom/b/a/b/e;.a:(Lcom/b/a/d/a;)V` @kind virtual;
  #L1404ec.  v1:= v4.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L1404f0.  call temp:= `b`(v1, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L1404f6.  v1:= temp @kind object;
  #L1404f8.  v2:= v4.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L1404fc.  call temp:= `b`(v2, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L140502.  v2:= temp @kind object;
  #L140504.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14050a.  v2:= temp @kind object;
  #L14050c.  if v2 == 0 then goto L1404d6;
  #L140510.  v0:= new `com.b.a.t`;
  #L140514.  v2:= new `java.lang.StringBuilder`;
  #L140518.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14051e.  v3:= "duplicate key: " @kind object;
  #L140522.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140528.  v2:= temp @kind object;
  #L14052a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140530.  v1:= temp @kind object;
  #L140532.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L140538.  v1:= temp @kind object;
  #L14053a.  call `<init>`(v0, v1) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L140540.  throw v0;
  #L140542.  call `d`(v5) @signature `Lcom/b/a/d/a;.d:()V` @kind virtual;
  #L140548.  goto L140438;
}
procedure `void` `a`(`com.b.a.b.a.g$a` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L14055c.  v2:= (`java.util.Map`) v2 @kind object;
  #L140560.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/util/Map;)V` @kind virtual;
  #L140566.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.g$a` v8 @kind this, `com.b.a.d.c` v9 @kind object, `java.util.Map` v10 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L140578.  v2:= 0I;
  #L14057a.  if v10 != 0 then goto L140586;
  #L14057e.  call temp:= `f`(v9) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L140584.  return @kind void;
  #L140586.  v0:= v8.`com.b.a.b.a.g$a.a` @type ^`com.b.a.b.a.g` @kind object;
  #L14058a.  v0:= v0.`com.b.a.b.a.g.a` @type ^`boolean` @kind boolean;
  #L14058e.  if v0 != 0 then goto L1405f2;
  #L140592.  call temp:= `d`(v9) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L140598.  call temp:= `entrySet`(v10) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L14059e.  v0:= temp @kind object;
  #L1405a0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1405a6.  v1:= temp @kind object;
  #L1405a8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1405ae.  v0:= temp;
  #L1405b0.  if v0 == 0 then goto L1405ea;
  #L1405b4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1405ba.  v0:= temp @kind object;
  #L1405bc.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L1405c0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1405c6.  v2:= temp @kind object;
  #L1405c8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1405ce.  v2:= temp @kind object;
  #L1405d0.  call temp:= `a`(v9, v2) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L1405d6.  v2:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L1405da.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1405e0.  v0:= temp @kind object;
  #L1405e2.  call `a`(v2, v9, v0) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1405e8.  goto L1405a8;
  #L1405ea.  call temp:= `e`(v9) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L1405f0.  goto L140584;
  #L1405f2.  v3:= new `java.util.ArrayList`;
  #L1405f6.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1405fc.  v0:= temp;
  #L1405fe.  call `<init>`(v3, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L140604.  v4:= new `java.util.ArrayList`;
  #L140608.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L14060e.  v0:= temp;
  #L140610.  call `<init>`(v4, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L140616.  call temp:= `entrySet`(v10) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L14061c.  v0:= temp @kind object;
  #L14061e.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L140624.  v5:= temp @kind object;
  #L140626.  v1:= v2;
  #L140628.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L14062e.  v0:= temp;
  #L140630.  if v0 == 0 then goto L14068c;
  #L140634.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14063a.  v0:= temp @kind object;
  #L14063c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L140640.  v6:= v8.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L140644.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L14064a.  v7:= temp @kind object;
  #L14064c.  call temp:= `a`(v6, v7) @signature `Lcom/b/a/v;.a:(Ljava/lang/Object;)Lcom/b/a/l;` @kind virtual;
  #L140652.  v6:= temp @kind object;
  #L140654.  call temp:= `add`(v3, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L14065a.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L140660.  v0:= temp @kind object;
  #L140662.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L140668.  call temp:= `g`(v6) @signature `Lcom/b/a/l;.g:()Z` @kind virtual;
  #L14066e.  v0:= temp;
  #L140670.  if v0 != 0 then goto L140680;
  #L140674.  call temp:= `h`(v6) @signature `Lcom/b/a/l;.h:()Z` @kind virtual;
  #L14067a.  v0:= temp;
  #L14067c.  if v0 == 0 then goto L140688;
  #L140680.  v0:= 1I;
  #L140682.  v0:= v0 ^| v1 @kind int;
  #L140684.  v1:= v0;
  #L140686.  goto L140628;
  #L140688.  v0:= v2;
  #L14068a.  goto L140682;
  #L14068c.  if v1 == 0 then goto L1406e2;
  #L140690.  call temp:= `b`(v9) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L140696.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14069c.  v0:= temp;
  #L14069e.  if v2 >= v0 then goto L1406d8;
  #L1406a2.  call temp:= `b`(v9) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L1406a8.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1406ae.  v0:= temp @kind object;
  #L1406b0.  v0:= (`com.b.a.l`) v0 @kind object;
  #L1406b4.  call `a`(v0, v9) @signature `Lcom/b/a/b/j;.a:(Lcom/b/a/l;Lcom/b/a/d/c;)V` @kind static;
  #L1406ba.  v0:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L1406be.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1406c4.  v1:= temp @kind object;
  #L1406c6.  call `a`(v0, v9, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1406cc.  call temp:= `c`(v9) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L1406d2.  v2:= v2 + 1;
  #L1406d6.  goto L140696;
  #L1406d8.  call temp:= `c`(v9) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L1406de.  goto L140584;
  #L1406e2.  call temp:= `d`(v9) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L1406e8.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1406ee.  v0:= temp;
  #L1406f0.  if v2 >= v0 then goto L140726;
  #L1406f4.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1406fa.  v0:= temp @kind object;
  #L1406fc.  v0:= (`com.b.a.l`) v0 @kind object;
  #L140700.  call temp:= `a`(v8, v0) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/l;)Ljava/lang/String;` @kind direct;
  #L140706.  v0:= temp @kind object;
  #L140708.  call temp:= `a`(v9, v0) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L14070e.  v0:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L140712.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L140718.  v1:= temp @kind object;
  #L14071a.  call `a`(v0, v9, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L140720.  v2:= v2 + 1;
  #L140724.  goto L1406e8;
  #L140726.  call temp:= `e`(v9) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L14072c.  goto L140584;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.g$a` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/g$a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L140740.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/a;)Ljava/util/Map;` @kind virtual;
  #L140746.  v0:= temp @kind object;
  #L140748.  return v0 @kind object;
}

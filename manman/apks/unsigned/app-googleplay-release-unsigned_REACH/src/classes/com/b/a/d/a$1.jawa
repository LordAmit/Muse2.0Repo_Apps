record `com.b.a.d.a$1` @kind class @AccessFlag FINAL extends `com.b.a.b.e` @kind class {
}
procedure `void` `<init>`(`com.b.a.d.a$1` v0 @kind this) @signature `Lcom/b/a/d/a$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L147458.  call `<init>`(v0) @signature `Lcom/b/a/b/e;.<init>:()V` @kind direct;
  #L14745e.  return @kind void;
}
procedure `void` `a`(`com.b.a.d.a$1` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/d/a$1;.a:(Lcom/b/a/d/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L147470.  v0:= instanceof @variable v4 @type ^`com.b.a.b.a.e` @kind boolean;
  #L147474.  if v0 == 0 then goto L147484;
  #L147478.  v4:= (`com.b.a.b.a.e`) v4 @kind object;
  #L14747c.  call `o`(v4) @signature `Lcom/b/a/b/a/e;.o:()V` @kind virtual;
  #L147482.  return @kind void;
  #L147484.  v0:= v4.`com.b.a.d.a.a` @type ^`int`;
  #L147488.  if v0 != 0 then goto L147494;
  #L14748c.  call temp:= `r`(v4) @signature `Lcom/b/a/d/a;.r:()I` @kind virtual;
  #L147492.  v0:= temp;
  #L147494.  v1:= 13I;
  #L147498.  if v0 != v1 then goto L1474a6;
  #L14749c.  v0:= 9I;
  #L1474a0.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L1474a4.  goto L147482;
  #L1474a6.  v1:= 12I;
  #L1474aa.  if v0 != v1 then goto L1474b8;
  #L1474ae.  v0:= 8I;
  #L1474b2.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L1474b6.  goto L147482;
  #L1474b8.  v1:= 14I;
  #L1474bc.  if v0 != v1 then goto L1474ca;
  #L1474c0.  v0:= 10I;
  #L1474c4.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L1474c8.  goto L147482;
  #L1474ca.  v0:= new `java.lang.IllegalStateException`;
  #L1474ce.  v1:= new `java.lang.StringBuilder`;
  #L1474d2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1474d8.  v2:= "Expected a name but was " @kind object;
  #L1474dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1474e2.  v1:= temp @kind object;
  #L1474e4.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1474ea.  v2:= temp @kind object;
  #L1474ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1474f2.  v1:= temp @kind object;
  #L1474f4.  call temp:= `a`(v4) @signature `Lcom/b/a/d/a;.a:(Lcom/b/a/d/a;)Ljava/lang/String;` @kind static;
  #L1474fa.  v2:= temp @kind object;
  #L1474fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L147502.  v1:= temp @kind object;
  #L147504.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14750a.  v1:= temp @kind object;
  #L14750c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L147512.  throw v0;
}

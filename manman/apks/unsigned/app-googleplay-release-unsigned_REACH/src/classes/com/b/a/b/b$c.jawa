record `com.b.a.b.b$c` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface, `java.lang.reflect.WildcardType` @kind interface {
  `java.lang.reflect.Type` `com.b.a.b.b$c.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type` `com.b.a.b.b$c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.b$c` v4 @kind this, `java.lang.reflect.Type`[] v5 @kind object, `java.lang.reflect.Type`[] v6 @kind object) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1442ac.  v1:= 1I;
  #L1442ae.  v2:= 0I;
  #L1442b0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1442b6.  v0:= length @variable v6;
  #L1442b8.  if v0 > v1 then goto L144318;
  #L1442bc.  v0:= v1;
  #L1442be.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L1442c4.  v0:= length @variable v5;
  #L1442c6.  if v0 != v1 then goto L14431c;
  #L1442ca.  v0:= v1;
  #L1442cc.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L1442d2.  v0:= length @variable v6;
  #L1442d4.  if v0 != v1 then goto L144324;
  #L1442d8.  v0:= v6[v2] @kind object;
  #L1442dc.  call temp:= `a`(v0) @signature `Lcom/b/a/b/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1442e2.  v0:= v6[v2] @kind object;
  #L1442e6.  call `h`(v0) @signature `Lcom/b/a/b/b;.h:(Ljava/lang/reflect/Type;)V` @kind static;
  #L1442ec.  v0:= v5[v2] @kind object;
  #L1442f0.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L1442f4.  if v0 != v3 then goto L144320;
  #L1442f8.  call `a`(v1) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L1442fe.  v0:= v6[v2] @kind object;
  #L144302.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L144308.  v0:= temp @kind object;
  #L14430a.  v4.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L14430e.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L144312.  v4.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L144316.  return @kind void;
  #L144318.  v0:= v2;
  #L14431a.  goto L1442be;
  #L14431c.  v0:= v2;
  #L14431e.  goto L1442cc;
  #L144320.  v1:= v2;
  #L144322.  goto L1442f8;
  #L144324.  v0:= v5[v2] @kind object;
  #L144328.  call temp:= `a`(v0) @signature `Lcom/b/a/b/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L14432e.  v0:= v5[v2] @kind object;
  #L144332.  call `h`(v0) @signature `Lcom/b/a/b/b;.h:(Ljava/lang/reflect/Type;)V` @kind static;
  #L144338.  v0:= 0I;
  #L14433a.  v4.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L14433e.  v0:= v5[v2] @kind object;
  #L144342.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L144348.  v0:= temp @kind object;
  #L14434a.  v4.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L14434e.  goto L144316;
}
procedure `boolean` `equals`(`com.b.a.b.b$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/b$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L144360.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L144364.  if v0 == 0 then goto L14437c;
  #L144368.  v2:= (`java.lang.reflect.WildcardType`) v2 @kind object;
  #L14436c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L144372.  v0:= temp;
  #L144374.  if v0 == 0 then goto L14437c;
  #L144378.  v0:= 1I;
  #L14437a.  return v0;
  #L14437c.  v0:= 0I;
  #L14437e.  goto L14437a;
}
procedure `java.lang.reflect.Type`[] `getLowerBounds`(`com.b.a.b.b$c` v3 @kind this) @signature `Lcom/b/a/b/b$c;.getLowerBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L144390.  v0:= v3.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L144394.  if v0 == 0 then goto L1443aa;
  #L144398.  v0:= 1I;
  #L14439a.  v0:= new `java.lang.reflect.Type`[v0];
  #L14439e.  v1:= 0I;
  #L1443a0.  v2:= v3.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1443a4.  v0[v1]:= v2 @kind object;
  #L1443a8.  return v0 @kind object;
  #L1443aa.  v0:= `@@com.b.a.b.b.a` @type ^`java.lang.reflect.Type`[] @kind object;
  #L1443ae.  goto L1443a8;
}
procedure `java.lang.reflect.Type`[] `getUpperBounds`(`com.b.a.b.b$c` v3 @kind this) @signature `Lcom/b/a/b/b$c;.getUpperBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1443c0.  v0:= 1I;
  #L1443c2.  v0:= new `java.lang.reflect.Type`[v0];
  #L1443c6.  v1:= 0I;
  #L1443c8.  v2:= v3.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` @kind object;
  #L1443cc.  v0[v1]:= v2 @kind object;
  #L1443d0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.b.a.b.b$c` v2 @kind this) @signature `Lcom/b/a/b/b$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1443e4.  v0:= v2.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1443e8.  if v0 == 0 then goto L144410;
  #L1443ec.  v0:= v2.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1443f0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1443f6.  v0:= temp;
  #L1443f8.  v0:= v0 + 31;
  #L1443fc.  v1:= v2.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` @kind object;
  #L144400.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L144406.  v1:= temp;
  #L144408.  v1:= v1 + 31;
  #L14440c.  v0:= v0 ^~ v1 @kind int;
  #L14440e.  return v0;
  #L144410.  v0:= 1I;
  #L144412.  goto L1443fc;
}
procedure `java.lang.String` `toString`(`com.b.a.b.b$c` v2 @kind this) @signature `Lcom/b/a/b/b$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L144424.  v0:= v2.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L144428.  if v0 == 0 then goto L144460;
  #L14442c.  v0:= new `java.lang.StringBuilder`;
  #L144430.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L144436.  v1:= "? super " @kind object;
  #L14443a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L144440.  v0:= temp @kind object;
  #L144442.  v1:= v2.`com.b.a.b.b$c.b` @type ^`java.lang.reflect.Type` @kind object;
  #L144446.  call temp:= `f`(v1) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L14444c.  v1:= temp @kind object;
  #L14444e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L144454.  v0:= temp @kind object;
  #L144456.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14445c.  v0:= temp @kind object;
  #L14445e.  return v0 @kind object;
  #L144460.  v0:= v2.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` @kind object;
  #L144464.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L144468.  if v0 != v1 then goto L144472;
  #L14446c.  v0:= "?" @kind object;
  #L144470.  goto L14445e;
  #L144472.  v0:= new `java.lang.StringBuilder`;
  #L144476.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14447c.  v1:= "? extends " @kind object;
  #L144480.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L144486.  v0:= temp @kind object;
  #L144488.  v1:= v2.`com.b.a.b.b$c.a` @type ^`java.lang.reflect.Type` @kind object;
  #L14448c.  call temp:= `f`(v1) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L144492.  v1:= temp @kind object;
  #L144494.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14449a.  v0:= temp @kind object;
  #L14449c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1444a2.  v0:= temp @kind object;
  #L1444a4.  goto L14445e;
}

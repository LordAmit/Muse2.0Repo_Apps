record `com.b.a.b.a.n$12` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$12` v0 @kind this) @signature `Lcom/b/a/b/a/n$12;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L141908.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L14190e.  return @kind void;
}
procedure `java.util.BitSet` `a`(`com.b.a.b.a.n$12` v7 @kind this, `com.b.a.d.a` v8 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/a;)Ljava/util/BitSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L141920.  v3:= 1I;
  #L141922.  v2:= 0I;
  #L141924.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L14192a.  v0:= temp @kind object;
  #L14192c.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L141930.  if v0 != v1 then goto L14193e;
  #L141934.  call `j`(v8) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L14193a.  v0:= 0I;
  #L14193c.  return v0 @kind object;
  #L14193e.  v4:= new `java.util.BitSet`;
  #L141942.  call `<init>`(v4) @signature `Ljava/util/BitSet;.<init>:()V` @kind direct;
  #L141948.  call `a`(v8) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L14194e.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L141954.  v0:= temp @kind object;
  #L141956.  v1:= v2;
  #L141958.  v5:= `@@com.b.a.d.b.b` @type ^`com.b.a.d.b` @kind object;
  #L14195c.  if v0 == v5 then goto L141a2c;
  #L141960.  v5:= `@@com.b.a.b.a.n$29.a` @type ^`int`[] @kind object;
  #L141964.  call temp:= `ordinal`(v0) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L14196a.  v6:= temp;
  #L14196c.  v5:= v5[v6];
  #L141970.  goto L141a38;
  #L141976.  v1:= new `com.b.a.t`;
  #L14197a.  v2:= new `java.lang.StringBuilder`;
  #L14197e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141984.  v3:= "Invalid bitset value type: " @kind object;
  #L141988.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14198e.  v2:= temp @kind object;
  #L141990.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141996.  v0:= temp @kind object;
  #L141998.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14199e.  v0:= temp @kind object;
  #L1419a0.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1419a6.  throw v1;
  #L1419a8.  call temp:= `m`(v8) @signature `Lcom/b/a/d/a;.m:()I` @kind virtual;
  #L1419ae.  v0:= temp;
  #L1419b0.  if v0 == 0 then goto L1419ce;
  #L1419b4.  v0:= v3;
  #L1419b6.  if v0 == 0 then goto L1419c0;
  #L1419ba.  call `set`(v4, v1) @signature `Ljava/util/BitSet;.set:(I)V` @kind virtual;
  #L1419c0.  v1:= v1 + 1;
  #L1419c4.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1419ca.  v0:= temp @kind object;
  #L1419cc.  goto L141958;
  #L1419ce.  v0:= v2;
  #L1419d0.  goto L1419b6;
  #L1419d2.  call temp:= `i`(v8) @signature `Lcom/b/a/d/a;.i:()Z` @kind virtual;
  #L1419d8.  v0:= temp;
  #L1419da.  goto L1419b6;
  #L1419dc.  call temp:= `h`(v8) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L1419e2.  v0:= temp @kind object;
  #Try_start0.  
  #L1419e4.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L1419ea.  v0:= temp;
  #L1419ec.  if v0 == 0 then goto L1419f4;
  #L1419f0.  v0:= v3;
  #L1419f2.  goto L1419b6;
  #L1419f4.  v0:= v2;
  #L1419f6.  goto L1419b6;
  #L1419f8.  v1:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L1419fa.  v1:= new `com.b.a.t`;
  #L1419fe.  v2:= new `java.lang.StringBuilder`;
  #L141a02.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L141a08.  v3:= "Error: Expecting: bitset number value (1, 0), Found: " @kind object;
  #L141a0c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a12.  v2:= temp @kind object;
  #L141a14.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141a1a.  v0:= temp @kind object;
  #L141a1c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141a22.  v0:= temp @kind object;
  #L141a24.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141a2a.  throw v1;
  #L141a2c.  call `b`(v8) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L141a32.  v0:= v4 @kind object;
  #L141a34.  goto L14193c;
  #L141a36.  
  #L141a38.  switch v5
                  | 1 => goto L1419a8
                  | 2 => goto L1419d2
                  | 3 => goto L1419dc
                  | else => goto L141976;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L1419f8;
}
procedure `void` `a`(`com.b.a.b.a.n$12` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L141a6c.  v2:= (`java.util.BitSet`) v2 @kind object;
  #L141a70.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/util/BitSet;)V` @kind virtual;
  #L141a76.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$12` v4 @kind this, `com.b.a.d.c` v5 @kind object, `java.util.BitSet` v6 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/util/BitSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L141a88.  v1:= 0I;
  #L141a8a.  if v6 != 0 then goto L141a96;
  #L141a8e.  call temp:= `f`(v5) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L141a94.  return @kind void;
  #L141a96.  call temp:= `b`(v5) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L141a9c.  v0:= v1;
  #L141a9e.  call temp:= `length`(v6) @signature `Ljava/util/BitSet;.length:()I` @kind virtual;
  #L141aa4.  v2:= temp;
  #L141aa6.  if v0 >= v2 then goto L141aca;
  #L141aaa.  call temp:= `get`(v6, v0) @signature `Ljava/util/BitSet;.get:(I)Z` @kind virtual;
  #L141ab0.  v2:= temp;
  #L141ab2.  if v2 == 0 then goto L141ac6;
  #L141ab6.  v2:= 1I;
  #L141ab8.  v2:= (`long`) v2 @kind i2l;
  #L141aba.  call temp:= `a`(v5, v2) @signature `Lcom/b/a/d/c;.a:(J)Lcom/b/a/d/c;` @kind virtual;
  #L141ac0.  v0:= v0 + 1;
  #L141ac4.  goto L141a9e;
  #L141ac6.  v2:= v1;
  #L141ac8.  goto L141ab8;
  #L141aca.  call temp:= `c`(v5) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L141ad0.  goto L141a94;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$12` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$12;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L141ae4.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/a;)Ljava/util/BitSet;` @kind virtual;
  #L141aea.  v0:= temp @kind object;
  #L141aec.  return v0 @kind object;
}

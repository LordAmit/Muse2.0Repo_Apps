record `com.b.a.b.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.reflect.Type`[] `@@com.b.a.b.b.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1444b8.  v0:= 0I;
  #L1444ba.  v0:= new `java.lang.reflect.Type`[v0];
  #L1444be.  `@@com.b.a.b.b.a` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L1444c2.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v1 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L1444d4.  if v1 == 0 then goto L1444e2;
  #L1444d8.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1444de.  v0:= temp;
  #L1444e0.  return v0;
  #L1444e2.  v0:= 0I;
  #L1444e4.  goto L1444e0;
}
procedure `int` `a`(`java.lang.Object`[] v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/b/b;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1444f8.  v0:= 0I;
  #L1444fa.  v1:= length @variable v2;
  #L1444fc.  if v0 >= v1 then goto L144518;
  #L144500.  v1:= v2[v0] @kind object;
  #L144504.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14450a.  v1:= temp;
  #L14450c.  if v1 == 0 then goto L144512;
  #L144510.  return v0;
  #L144512.  v0:= v0 + 1;
  #L144516.  goto L1444fa;
  #L144518.  v0:= new `java.util.NoSuchElementException`;
  #L14451c.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L144522.  throw v0;
}
procedure `java.lang.Class` `a`(`java.lang.reflect.TypeVariable` v2 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L144534.  call temp:= `getGenericDeclaration`(v2) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L14453a.  v0:= temp @kind object;
  #L14453c.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L144540.  if v1 == 0 then goto L14454a;
  #L144544.  v0:= (`java.lang.Class`) v0 @kind object;
  #L144548.  return v0 @kind object;
  #L14454a.  v0:= 0I;
  #L14454c.  goto L144548;
}
procedure `java.lang.reflect.GenericArrayType` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L144560.  v0:= new `com.b.a.b.b$a`;
  #L144564.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L14456a.  return v0 @kind object;
}
procedure `java.lang.reflect.ParameterizedType` `a`(`java.lang.reflect.Type` v1 @kind object, `java.lang.reflect.Type` v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14457c.  v0:= new `com.b.a.b.b$b`;
  #L144580.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/b/a/b/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L144586.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L144598.  v2:= 0I;
  #L14459a.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L14459e.  call temp:= `b`(v3, v4, v0) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1445a4.  v0:= temp @kind object;
  #L1445a6.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L1445aa.  if v1 == 0 then goto L1445be;
  #L1445ae.  v0:= (`java.lang.reflect.WildcardType`) v0 @kind object;
  #L1445b2.  call temp:= `getUpperBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1445b8.  v0:= temp @kind object;
  #L1445ba.  v0:= v0[v2] @kind object;
  #L1445be.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1445c2.  if v1 == 0 then goto L1445d8;
  #L1445c6.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L1445ca.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1445d0.  v0:= temp @kind object;
  #L1445d2.  v0:= v0[v2] @kind object;
  #L1445d6.  return v0 @kind object;
  #L1445d8.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1445dc.  goto L1445d6;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1445f0.  if v6 != v5 then goto L1445f6;
  #L1445f4.  return v4 @kind object;
  #L1445f6.  call temp:= `isInterface`(v6) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L1445fc.  v0:= temp;
  #L1445fe.  if v0 == 0 then goto L144658;
  #L144602.  call temp:= `getInterfaces`(v5) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L144608.  v1:= temp @kind object;
  #L14460a.  v0:= 0I;
  #L14460c.  v2:= length @variable v1;
  #L14460e.  if v0 >= v2 then goto L144658;
  #L144612.  v3:= v1[v0] @kind object;
  #L144616.  if v3 != v6 then goto L144628;
  #L14461a.  call temp:= `getGenericInterfaces`(v5) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L144620.  v1:= temp @kind object;
  #L144622.  v4:= v1[v0] @kind object;
  #L144626.  goto L1445f4;
  #L144628.  v3:= v1[v0] @kind object;
  #L14462c.  call temp:= `isAssignableFrom`(v6, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L144632.  v3:= temp;
  #L144634.  if v3 == 0 then goto L144652;
  #L144638.  call temp:= `getGenericInterfaces`(v5) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L14463e.  v2:= temp @kind object;
  #L144640.  v2:= v2[v0] @kind object;
  #L144644.  v0:= v1[v0] @kind object;
  #L144648.  call temp:= `a`(v2, v0, v6) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14464e.  v4:= temp @kind object;
  #L144650.  goto L1445f4;
  #L144652.  v0:= v0 + 1;
  #L144656.  goto L14460e;
  #L144658.  call temp:= `isInterface`(v5) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L14465e.  v0:= temp;
  #L144660.  if v0 != 0 then goto L1446a4;
  #L144664.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L144668.  if v5 == v0 then goto L1446a4;
  #L14466c.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L144672.  v0:= temp @kind object;
  #L144674.  if v0 != v6 then goto L144682;
  #L144678.  call temp:= `getGenericSuperclass`(v5) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L14467e.  v4:= temp @kind object;
  #L144680.  goto L1445f4;
  #L144682.  call temp:= `isAssignableFrom`(v6, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L144688.  v1:= temp;
  #L14468a.  if v1 == 0 then goto L1446a0;
  #L14468e.  call temp:= `getGenericSuperclass`(v5) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L144694.  v1:= temp @kind object;
  #L144696.  call temp:= `a`(v1, v0, v6) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14469c.  v4:= temp @kind object;
  #L14469e.  goto L1445f4;
  #L1446a0.  v5:= v0 @kind object;
  #L1446a2.  goto L144664;
  #L1446a4.  v4:= v6 @kind object;
  #L1446a6.  goto L1445f4;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v10 @kind object, `java.lang.Class` v11 @kind object, `java.lang.reflect.Type` v12 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1446b8.  v2:= 1I;
  #L1446ba.  v3:= 0I;
  #L1446bc.  v0:= v12 @kind object;
  #L1446be.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L1446c2.  if v1 == 0 then goto L1446de;
  #L1446c6.  v0:= (`java.lang.reflect.TypeVariable`) v0 @kind object;
  #L1446ca.  call temp:= `a`(v10, v11, v0) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @kind static;
  #L1446d0.  v12:= temp @kind object;
  #L1446d2.  if v12 != v0 then goto L1446da;
  #L1446d6.  v0:= v12 @kind object;
  #L1446d8.  return v0 @kind object;
  #L1446da.  v0:= v12 @kind object;
  #L1446dc.  goto L1446be;
  #L1446de.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L1446e2.  if v1 == 0 then goto L14471a;
  #L1446e6.  v1:= v0 @kind object;
  #L1446e8.  v1:= (`java.lang.Class`) v1 @kind object;
  #L1446ec.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1446f2.  v1:= temp;
  #L1446f4.  if v1 == 0 then goto L14471a;
  #L1446f8.  v0:= (`java.lang.Class`) v0 @kind object;
  #L1446fc.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L144702.  v1:= temp @kind object;
  #L144704.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14470a.  v2:= temp @kind object;
  #L14470c.  if v1 == v2 then goto L1446d8;
  #L144710.  call temp:= `a`(v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @kind static;
  #L144716.  v0:= temp @kind object;
  #L144718.  goto L1446d8;
  #L14471a.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L14471e.  if v1 == 0 then goto L144744;
  #L144722.  v0:= (`java.lang.reflect.GenericArrayType`) v0 @kind object;
  #L144726.  call temp:= `getGenericComponentType`(v0) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14472c.  v1:= temp @kind object;
  #L14472e.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L144734.  v2:= temp @kind object;
  #L144736.  if v1 == v2 then goto L1446d8;
  #L14473a.  call temp:= `a`(v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @kind static;
  #L144740.  v0:= temp @kind object;
  #L144742.  goto L1446d8;
  #L144744.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L144748.  if v1 == 0 then goto L1447c6;
  #L14474c.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L144750.  call temp:= `getOwnerType`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144756.  v1:= temp @kind object;
  #L144758.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14475e.  v5:= temp @kind object;
  #L144760.  if v5 == v1 then goto L1447ac;
  #L144764.  v1:= v2;
  #L144766.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14476c.  v4:= temp @kind object;
  #L14476e.  v6:= length @variable v4;
  #L144770.  v9:= v3;
  #L144772.  v3:= v1;
  #L144774.  v1:= v4 @kind object;
  #L144776.  v4:= v9;
  #L144778.  if v4 >= v6 then goto L1447b0;
  #L14477c.  v7:= v1[v4] @kind object;
  #L144780.  call temp:= `a`(v10, v11, v7) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L144786.  v7:= temp @kind object;
  #L144788.  v8:= v1[v4] @kind object;
  #L14478c.  if v7 == v8 then goto L1447a6;
  #L144790.  if v3 != 0 then goto L1447a2;
  #L144794.  call temp:= `clone`(v1) @signature `[Ljava/lang/reflect/Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L14479a.  v1:= temp @kind object;
  #L14479c.  v1:= (`java.lang.reflect.Type`[]) v1 @kind object;
  #L1447a0.  v3:= v2;
  #L1447a2.  v1[v4]:= v7 @kind object;
  #L1447a6.  v4:= v4 + 1;
  #L1447aa.  goto L144778;
  #L1447ac.  v1:= v3;
  #L1447ae.  goto L144766;
  #L1447b0.  if v3 == 0 then goto L1446d8;
  #L1447b4.  call temp:= `getRawType`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1447ba.  v0:= temp @kind object;
  #L1447bc.  call temp:= `a`(v5, v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L1447c2.  v0:= temp @kind object;
  #L1447c4.  goto L1446d8;
  #L1447c6.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L1447ca.  if v1 == 0 then goto L1446d8;
  #L1447ce.  v0:= (`java.lang.reflect.WildcardType`) v0 @kind object;
  #L1447d2.  call temp:= `getLowerBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1447d8.  v1:= temp @kind object;
  #L1447da.  call temp:= `getUpperBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1447e0.  v4:= temp @kind object;
  #L1447e2.  v5:= length @variable v1;
  #L1447e4.  if v5 != v2 then goto L144808;
  #L1447e8.  v2:= v1[v3] @kind object;
  #L1447ec.  call temp:= `a`(v10, v11, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L1447f2.  v2:= temp @kind object;
  #L1447f4.  v1:= v1[v3] @kind object;
  #L1447f8.  if v2 == v1 then goto L1446d8;
  #L1447fc.  call temp:= `c`(v2) @signature `Lcom/b/a/b/b;.c:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @kind static;
  #L144802.  v0:= temp @kind object;
  #L144804.  goto L1446d8;
  #L144808.  v1:= length @variable v4;
  #L14480a.  if v1 != v2 then goto L1446d8;
  #L14480e.  v1:= v4[v3] @kind object;
  #L144812.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L144818.  v1:= temp @kind object;
  #L14481a.  v2:= v4[v3] @kind object;
  #L14481e.  if v1 == v2 then goto L1446d8;
  #L144822.  call temp:= `b`(v1) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @kind static;
  #L144828.  v0:= temp @kind object;
  #L14482a.  goto L1446d8;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.reflect.TypeVariable` v5 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L144840.  call temp:= `a`(v5) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @kind static;
  #L144846.  v1:= temp @kind object;
  #L144848.  if v1 != 0 then goto L14484e;
  #L14484c.  return v5 @kind object;
  #L14484e.  call temp:= `a`(v3, v4, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L144854.  v0:= temp @kind object;
  #L144856.  v2:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14485a.  if v2 == 0 then goto L14484c;
  #L14485e.  call temp:= `getTypeParameters`(v1) @signature `Ljava/lang/Class;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;` @kind virtual;
  #L144864.  v1:= temp @kind object;
  #L144866.  call temp:= `a`(v1, v5) @signature `Lcom/b/a/b/b;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L14486c.  v1:= temp;
  #L14486e.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L144872.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L144878.  v0:= temp @kind object;
  #L14487a.  v5:= v0[v1] @kind object;
  #L14487e.  goto L14484c;
}
procedure `boolean` `a`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L144890.  if v1 == v2 then goto L1448a4;
  #L144894.  if v1 == 0 then goto L1448a8;
  #L144898.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14489e.  v0:= temp;
  #L1448a0.  if v0 == 0 then goto L1448a8;
  #L1448a4.  v0:= 1I;
  #L1448a6.  return v0;
  #L1448a8.  v0:= 0I;
  #L1448aa.  goto L1448a6;
}
procedure `boolean` `a`(`java.lang.reflect.Type` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1448bc.  v0:= 1I;
  #L1448be.  v1:= 0I;
  #L1448c0.  if v4 != v5 then goto L1448c8;
  #L1448c4.  v1:= v0;
  #L1448c6.  return v1;
  #L1448c8.  v2:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L1448cc.  if v2 == 0 then goto L1448da;
  #L1448d0.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1448d6.  v1:= temp;
  #L1448d8.  goto L1448c6;
  #L1448da.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1448de.  if v2 == 0 then goto L14494e;
  #L1448e2.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1448e6.  if v2 == 0 then goto L1448c6;
  #L1448ea.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L1448ee.  v5:= (`java.lang.reflect.ParameterizedType`) v5 @kind object;
  #L1448f2.  call temp:= `getOwnerType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1448f8.  v2:= temp @kind object;
  #L1448fa.  call temp:= `getOwnerType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144900.  v3:= temp @kind object;
  #L144902.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L144908.  v2:= temp;
  #L14490a.  if v2 == 0 then goto L14494a;
  #L14490e.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144914.  v2:= temp @kind object;
  #L144916.  call temp:= `getRawType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14491c.  v3:= temp @kind object;
  #L14491e.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L144924.  v2:= temp;
  #L144926.  if v2 == 0 then goto L14494a;
  #L14492a.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L144930.  v2:= temp @kind object;
  #L144932.  call temp:= `getActualTypeArguments`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L144938.  v3:= temp @kind object;
  #L14493a.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L144940.  v2:= temp;
  #L144942.  if v2 == 0 then goto L14494a;
  #L144946.  v1:= v0;
  #L144948.  goto L1448c6;
  #L14494a.  v0:= v1;
  #L14494c.  goto L144946;
  #L14494e.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L144952.  if v2 == 0 then goto L144980;
  #L144956.  v0:= instanceof @variable v5 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L14495a.  if v0 == 0 then goto L1448c6;
  #L14495e.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L144962.  v5:= (`java.lang.reflect.GenericArrayType`) v5 @kind object;
  #L144966.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14496c.  v0:= temp @kind object;
  #L14496e.  call temp:= `getGenericComponentType`(v5) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144974.  v1:= temp @kind object;
  #L144976.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L14497c.  v1:= temp;
  #L14497e.  goto L1448c6;
  #L144980.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L144984.  if v2 == 0 then goto L1449da;
  #L144988.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L14498c.  if v2 == 0 then goto L1448c6;
  #L144990.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L144994.  v5:= (`java.lang.reflect.WildcardType`) v5 @kind object;
  #L144998.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14499e.  v2:= temp @kind object;
  #L1449a0.  call temp:= `getUpperBounds`(v5) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1449a6.  v3:= temp @kind object;
  #L1449a8.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L1449ae.  v2:= temp;
  #L1449b0.  if v2 == 0 then goto L1449d6;
  #L1449b4.  call temp:= `getLowerBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1449ba.  v2:= temp @kind object;
  #L1449bc.  call temp:= `getLowerBounds`(v5) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L1449c2.  v3:= temp @kind object;
  #L1449c4.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L1449ca.  v2:= temp;
  #L1449cc.  if v2 == 0 then goto L1449d6;
  #L1449d0.  v1:= v0;
  #L1449d2.  goto L1448c6;
  #L1449d6.  v0:= v1;
  #L1449d8.  goto L1449d0;
  #L1449da.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L1449de.  if v2 == 0 then goto L1448c6;
  #L1449e2.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L1449e6.  if v2 == 0 then goto L1448c6;
  #L1449ea.  v4:= (`java.lang.reflect.TypeVariable`) v4 @kind object;
  #L1449ee.  v5:= (`java.lang.reflect.TypeVariable`) v5 @kind object;
  #L1449f2.  call temp:= `getGenericDeclaration`(v4) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L1449f8.  v2:= temp @kind object;
  #L1449fa.  call temp:= `getGenericDeclaration`(v5) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L144a00.  v3:= temp @kind object;
  #L144a02.  if v2 != v3 then goto L144a28;
  #L144a06.  call temp:= `getName`(v4) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L144a0c.  v2:= temp @kind object;
  #L144a0e.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L144a14.  v3:= temp @kind object;
  #L144a16.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L144a1c.  v2:= temp;
  #L144a1e.  if v2 == 0 then goto L144a28;
  #L144a22.  v1:= v0;
  #L144a24.  goto L1448c6;
  #L144a28.  v0:= v1;
  #L144a2a.  goto L144a22;
}
procedure `java.lang.reflect.Type` `b`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;

  #L144a3c.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L144a42.  v0:= temp;
  #L144a44.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L144a4a.  call temp:= `a`(v1, v2, v3) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L144a50.  v0:= temp @kind object;
  #L144a52.  call temp:= `a`(v1, v2, v0) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L144a58.  v0:= temp @kind object;
  #L144a5a.  return v0 @kind object;
}
procedure `java.lang.reflect.WildcardType` `b`(`java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L144a6c.  v0:= new `com.b.a.b.b$c`;
  #L144a70.  v1:= 1I;
  #L144a72.  v1:= new `java.lang.reflect.Type`[v1];
  #L144a76.  v2:= 0I;
  #L144a78.  v1[v2]:= v3 @kind object;
  #L144a7c.  v2:= `@@com.b.a.b.b.a` @type ^`java.lang.reflect.Type`[] @kind object;
  #L144a80.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L144a86.  return v0 @kind object;
}
procedure `java.lang.reflect.Type`[] `b`(`java.lang.reflect.Type` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L144a98.  v4:= 2I;
  #L144a9a.  v3:= 1I;
  #L144a9c.  v2:= 0I;
  #L144a9e.  v0:= constclass @type ^`java.util.Properties` @kind object;
  #L144aa2.  if v5 != v0 then goto L144abc;
  #L144aa6.  v0:= new `java.lang.reflect.Type`[v4];
  #L144aaa.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L144aae.  v0[v2]:= v1 @kind object;
  #L144ab2.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L144ab6.  v0[v3]:= v1 @kind object;
  #L144aba.  return v0 @kind object;
  #L144abc.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L144ac0.  call temp:= `b`(v5, v6, v0) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L144ac6.  v0:= temp @kind object;
  #L144ac8.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L144acc.  if v1 == 0 then goto L144ade;
  #L144ad0.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L144ad4.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L144ada.  v0:= temp @kind object;
  #L144adc.  goto L144aba;
  #L144ade.  v0:= new `java.lang.reflect.Type`[v4];
  #L144ae2.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L144ae6.  v0[v2]:= v1 @kind object;
  #L144aea.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L144aee.  v0[v3]:= v1 @kind object;
  #L144af2.  goto L144aba;
}
procedure `java.lang.reflect.WildcardType` `c`(`java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/b/b;.c:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L144b04.  v4:= 1I;
  #L144b06.  v3:= 0I;
  #L144b08.  v0:= new `com.b.a.b.b$c`;
  #L144b0c.  v1:= new `java.lang.reflect.Type`[v4];
  #L144b10.  v2:= constclass @type ^`java.lang.Object` @kind object;
  #L144b14.  v1[v3]:= v2 @kind object;
  #L144b18.  v2:= new `java.lang.reflect.Type`[v4];
  #L144b1c.  v2[v3]:= v5 @kind object;
  #L144b20.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L144b26.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `d`(`java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L144b38.  v0:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L144b3c.  if v0 == 0 then goto L144b74;
  #L144b40.  v4:= (`java.lang.Class`) v4 @kind object;
  #L144b44.  call temp:= `isArray`(v4) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L144b4a.  v0:= temp;
  #L144b4c.  if v0 == 0 then goto L144b70;
  #L144b50.  v0:= new `com.b.a.b.b$a`;
  #L144b54.  call temp:= `getComponentType`(v4) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L144b5a.  v1:= temp @kind object;
  #L144b5c.  call temp:= `d`(v1) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L144b62.  v1:= temp @kind object;
  #L144b64.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L144b6a.  v0:= (`java.lang.reflect.Type`) v0 @kind object;
  #L144b6e.  return v0 @kind object;
  #L144b70.  v0:= v4 @kind object;
  #L144b72.  goto L144b6a;
  #L144b74.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L144b78.  if v0 == 0 then goto L144ba4;
  #L144b7c.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L144b80.  v0:= new `com.b.a.b.b$b`;
  #L144b84.  call temp:= `getOwnerType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144b8a.  v1:= temp @kind object;
  #L144b8c.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144b92.  v2:= temp @kind object;
  #L144b94.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L144b9a.  v3:= temp @kind object;
  #L144b9c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/b/a/b/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L144ba2.  goto L144b6e;
  #L144ba4.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L144ba8.  if v0 == 0 then goto L144bc4;
  #L144bac.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L144bb0.  v0:= new `com.b.a.b.b$a`;
  #L144bb4.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144bba.  v1:= temp @kind object;
  #L144bbc.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L144bc2.  goto L144b6e;
  #L144bc4.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L144bc8.  if v0 == 0 then goto L144bec;
  #L144bcc.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L144bd0.  v0:= new `com.b.a.b.b$c`;
  #L144bd4.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L144bda.  v1:= temp @kind object;
  #L144bdc.  call temp:= `getLowerBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L144be2.  v2:= temp @kind object;
  #L144be4.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L144bea.  goto L144b6e;
  #L144bec.  v0:= v4 @kind object;
  #L144bee.  goto L144b6e;
}
procedure `java.lang.Class` `e`(`java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L144c00.  v1:= 0I;
  #L144c02.  v0:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L144c06.  if v0 == 0 then goto L144c10;
  #L144c0a.  v4:= (`java.lang.Class`) v4 @kind object;
  #L144c0e.  return v4 @kind object;
  #L144c10.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L144c14.  if v0 == 0 then goto L144c36;
  #L144c18.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L144c1c.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144c22.  v0:= temp @kind object;
  #L144c24.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L144c28.  call `a`(v1) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L144c2e.  v0:= (`java.lang.Class`) v0 @kind object;
  #L144c32.  v4:= v0 @kind object;
  #L144c34.  goto L144c0e;
  #L144c36.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L144c3a.  if v0 == 0 then goto L144c64;
  #L144c3e.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L144c42.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144c48.  v0:= temp @kind object;
  #L144c4a.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L144c50.  v0:= temp @kind object;
  #L144c52.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L144c58.  v0:= temp @kind object;
  #L144c5a.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L144c60.  v4:= temp @kind object;
  #L144c62.  goto L144c0e;
  #L144c64.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L144c68.  if v0 == 0 then goto L144c72;
  #L144c6c.  v4:= constclass @type ^`java.lang.Object` @kind object;
  #L144c70.  goto L144c0e;
  #L144c72.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L144c76.  if v0 == 0 then goto L144c94;
  #L144c7a.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L144c7e.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L144c84.  v0:= temp @kind object;
  #L144c86.  v0:= v0[v1] @kind object;
  #L144c8a.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L144c90.  v4:= temp @kind object;
  #L144c92.  goto L144c0e;
  #L144c94.  if v4 != 0 then goto L144ce2;
  #L144c98.  v0:= "null" @kind object;
  #L144c9c.  v1:= new `java.lang.IllegalArgumentException`;
  #L144ca0.  v2:= new `java.lang.StringBuilder`;
  #L144ca4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L144caa.  v3:= "Expected a Class, ParameterizedType, or GenericArrayType, but <" @kind object;
  #L144cae.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L144cb4.  v2:= temp @kind object;
  #L144cb6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L144cbc.  v2:= temp @kind object;
  #L144cbe.  v3:= "> is of type " @kind object;
  #L144cc2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L144cc8.  v2:= temp @kind object;
  #L144cca.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L144cd0.  v0:= temp @kind object;
  #L144cd2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L144cd8.  v0:= temp @kind object;
  #L144cda.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L144ce0.  throw v1;
  #L144ce2.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L144ce8.  v0:= temp @kind object;
  #L144cea.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L144cf0.  v0:= temp @kind object;
  #L144cf2.  goto L144c9c;
}
procedure `java.lang.String` `f`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L144d04.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L144d08.  if v0 == 0 then goto L144d1a;
  #L144d0c.  v1:= (`java.lang.Class`) v1 @kind object;
  #L144d10.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L144d16.  v0:= temp @kind object;
  #L144d18.  return v0 @kind object;
  #L144d1a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L144d20.  v0:= temp @kind object;
  #L144d22.  goto L144d18;
}
procedure `java.lang.reflect.Type` `g`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.g:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L144d34.  v0:= instanceof @variable v1 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L144d38.  if v0 == 0 then goto L144d4a;
  #L144d3c.  v1:= (`java.lang.reflect.GenericArrayType`) v1 @kind object;
  #L144d40.  call temp:= `getGenericComponentType`(v1) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L144d46.  v0:= temp @kind object;
  #L144d48.  return v0 @kind object;
  #L144d4a.  v1:= (`java.lang.Class`) v1 @kind object;
  #L144d4e.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L144d54.  v0:= temp @kind object;
  #L144d56.  goto L144d48;
}
procedure `void` `h`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.h:(Ljava/lang/reflect/Type;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L144d68.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L144d6c.  if v0 == 0 then goto L144d80;
  #L144d70.  v1:= (`java.lang.Class`) v1 @kind object;
  #L144d74.  call temp:= `isPrimitive`(v1) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L144d7a.  v0:= temp;
  #L144d7c.  if v0 != 0 then goto L144d8a;
  #L144d80.  v0:= 1I;
  #L144d82.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L144d88.  return @kind void;
  #L144d8a.  v0:= 0I;
  #L144d8c.  goto L144d82;
}

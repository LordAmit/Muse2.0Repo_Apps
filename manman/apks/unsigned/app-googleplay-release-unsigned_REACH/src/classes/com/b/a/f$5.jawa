record `com.b.a.f$5` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.v` `com.b.a.f$5.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.f$5` v0 @kind this, `com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f$5;.<init>:(Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L147940.  v0.`com.b.a.f$5.a` @type ^`com.b.a.v` := v1 @kind object;
  #L147944.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L14794a.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicLong` `a`(`com.b.a.f$5` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/f$5;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicLong;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14795c.  v0:= v4.`com.b.a.f$5.a` @type ^`com.b.a.v` @kind object;
  #L147960.  call temp:= `b`(v0, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L147966.  v0:= temp @kind object;
  #L147968.  v0:= (`java.lang.Number`) v0 @kind object;
  #L14796c.  v1:= new `java.util.concurrent.atomic.AtomicLong`;
  #L147970.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L147976.  v2:= temp @kind wide;
  #L147978.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:(J)V` @kind direct;
  #L14797e.  return v1 @kind object;
}
procedure `void` `a`(`com.b.a.f$5` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/f$5;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L147990.  v2:= (`java.util.concurrent.atomic.AtomicLong`) v2 @kind object;
  #L147994.  call `a`(v0, v1, v2) @signature `Lcom/b/a/f$5;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicLong;)V` @kind virtual;
  #L14799a.  return @kind void;
}
procedure `void` `a`(`com.b.a.f$5` v4 @kind this, `com.b.a.d.c` v5 @kind object, `java.util.concurrent.atomic.AtomicLong` v6 @kind object) @signature `Lcom/b/a/f$5;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicLong;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1479ac.  v0:= v4.`com.b.a.f$5.a` @type ^`com.b.a.v` @kind object;
  #L1479b0.  call temp:= `get`(v6) @signature `Ljava/util/concurrent/atomic/AtomicLong;.get:()J` @kind virtual;
  #L1479b6.  v2:= temp @kind wide;
  #L1479b8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1479be.  v1:= temp @kind object;
  #L1479c0.  call `a`(v0, v5, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1479c6.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$5` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$5;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1479d8.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/f$5;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicLong;` @kind virtual;
  #L1479de.  v0:= temp @kind object;
  #L1479e0.  return v0 @kind object;
}

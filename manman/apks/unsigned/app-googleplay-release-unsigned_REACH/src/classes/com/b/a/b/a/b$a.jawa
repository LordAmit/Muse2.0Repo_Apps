record `com.b.a.b.a.b$a` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.v` `com.b.a.b.a.b$a.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.h` `com.b.a.b.a.b$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.b$a` v1 @kind this, `com.b.a.f` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.v` v4 @kind object, `com.b.a.b.h` v5 @kind object) @signature `Lcom/b/a/b/a/b$a;.<init>:(Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13c3b0.  call `<init>`(v1) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L13c3b6.  v0:= new `com.b.a.b.a.m`;
  #L13c3ba.  call `<init>`(v0, v2, v4, v3) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L13c3c0.  v1.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` := v0 @kind object;
  #L13c3c4.  v1.`com.b.a.b.a.b$a.b` @type ^`com.b.a.b.h` := v5 @kind object;
  #L13c3c8.  return @kind void;
}
procedure `java.util.Collection` `a`(`com.b.a.b.a.b$a` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/a;)Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13c3dc.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L13c3e2.  v0:= temp @kind object;
  #L13c3e4.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L13c3e8.  if v0 != v1 then goto L13c3f6;
  #L13c3ec.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L13c3f2.  v0:= 0I;
  #L13c3f4.  return v0 @kind object;
  #L13c3f6.  v0:= v2.`com.b.a.b.a.b$a.b` @type ^`com.b.a.b.h` @kind object;
  #L13c3fa.  call temp:= `a`(v0) @signature `Lcom/b/a/b/h;.a:()Ljava/lang/Object;` @kind interface;
  #L13c400.  v0:= temp @kind object;
  #L13c402.  v0:= (`java.util.Collection`) v0 @kind object;
  #L13c406.  call `a`(v3) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L13c40c.  call temp:= `e`(v3) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L13c412.  v1:= temp;
  #L13c414.  if v1 == 0 then goto L13c42c;
  #L13c418.  v1:= v2.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` @kind object;
  #L13c41c.  call temp:= `b`(v1, v3) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L13c422.  v1:= temp @kind object;
  #L13c424.  call temp:= `add`(v0, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13c42a.  goto L13c40c;
  #L13c42c.  call `b`(v3) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L13c432.  goto L13c3f4;
}
procedure `void` `a`(`com.b.a.b.a.b$a` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L13c444.  v2:= (`java.util.Collection`) v2 @kind object;
  #L13c448.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/util/Collection;)V` @kind virtual;
  #L13c44e.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.b$a` v3 @kind this, `com.b.a.d.c` v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13c460.  if v5 != 0 then goto L13c46c;
  #L13c464.  call temp:= `f`(v4) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L13c46a.  return @kind void;
  #L13c46c.  call temp:= `b`(v4) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L13c472.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13c478.  v0:= temp @kind object;
  #L13c47a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13c480.  v1:= temp;
  #L13c482.  if v1 == 0 then goto L13c49a;
  #L13c486.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13c48c.  v1:= temp @kind object;
  #L13c48e.  v2:= v3.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` @kind object;
  #L13c492.  call `a`(v2, v4, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L13c498.  goto L13c47a;
  #L13c49a.  call temp:= `c`(v4) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L13c4a0.  goto L13c46a;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.b$a` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/b$a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L13c4b4.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/a;)Ljava/util/Collection;` @kind virtual;
  #L13c4ba.  v0:= temp @kind object;
  #L13c4bc.  return v0 @kind object;
}

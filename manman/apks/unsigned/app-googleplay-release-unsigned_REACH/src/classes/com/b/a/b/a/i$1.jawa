record `com.b.a.b.a.i$1` @kind class @AccessFlag  extends `com.b.a.b.a.i$b` @kind class {
  `java.lang.reflect.Field` `com.b.a.b.a.i$1.a` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `com.b.a.b.a.i$1.b` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.i$1.c` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.f` `com.b.a.b.a.i$1.d` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.c.a` `com.b.a.b.a.i$1.e` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `com.b.a.b.a.i$1.f` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.b.a.i` `com.b.a.b.a.i$1.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.i$1` v0 @kind this, `com.b.a.b.a.i` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 , `boolean` v4 , `java.lang.reflect.Field` v5 @kind object, `boolean` v6 , `com.b.a.v` v7 @kind object, `com.b.a.f` v8 @kind object, `com.b.a.c.a` v9 @kind object, `boolean` v10 ) @signature `Lcom/b/a/b/a/i$1;.<init>:(Lcom/b/a/b/a/i;Ljava/lang/String;ZZLjava/lang/reflect/Field;ZLcom/b/a/v;Lcom/b/a/f;Lcom/b/a/c/a;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L140b48.  v0.`com.b.a.b.a.i$1.g` @type ^`com.b.a.b.a.i` := v1 @kind object;
  #L140b4c.  v0.`com.b.a.b.a.i$1.a` @type ^`java.lang.reflect.Field` := v5 @kind object;
  #L140b50.  v0.`com.b.a.b.a.i$1.b` @type ^`boolean` := v6 @kind boolean;
  #L140b54.  v0.`com.b.a.b.a.i$1.c` @type ^`com.b.a.v` := v7 @kind object;
  #L140b58.  v0.`com.b.a.b.a.i$1.d` @type ^`com.b.a.f` := v8 @kind object;
  #L140b5c.  v0.`com.b.a.b.a.i$1.e` @type ^`com.b.a.c.a` := v9 @kind object;
  #L140b60.  v0.`com.b.a.b.a.i$1.f` @type ^`boolean` := v10 @kind boolean;
  #L140b64.  call `<init>`(v0, v2, v3, v4) @signature `Lcom/b/a/b/a/i$b;.<init>:(Ljava/lang/String;ZZ)V` @kind direct;
  #L140b6a.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.i$1` v2 @kind this, `com.b.a.d.a` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/a/i$1;.a:(Lcom/b/a/d/a;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L140b7c.  v0:= v2.`com.b.a.b.a.i$1.c` @type ^`com.b.a.v` @kind object;
  #L140b80.  call temp:= `b`(v0, v3) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L140b86.  v0:= temp @kind object;
  #L140b88.  if v0 != 0 then goto L140b94;
  #L140b8c.  v1:= v2.`com.b.a.b.a.i$1.f` @type ^`boolean` @kind boolean;
  #L140b90.  if v1 != 0 then goto L140b9e;
  #L140b94.  v1:= v2.`com.b.a.b.a.i$1.a` @type ^`java.lang.reflect.Field` @kind object;
  #L140b98.  call `set`(v1, v4, v0) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L140b9e.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.i$1` v5 @kind this, `com.b.a.d.c` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lcom/b/a/b/a/i$1;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L140bb0.  v0:= v5.`com.b.a.b.a.i$1.a` @type ^`java.lang.reflect.Field` @kind object;
  #L140bb4.  call temp:= `get`(v0, v7) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L140bba.  v1:= temp @kind object;
  #L140bbc.  v0:= v5.`com.b.a.b.a.i$1.b` @type ^`boolean` @kind boolean;
  #L140bc0.  if v0 == 0 then goto L140bd0;
  #L140bc4.  v0:= v5.`com.b.a.b.a.i$1.c` @type ^`com.b.a.v` @kind object;
  #L140bc8.  call `a`(v0, v6, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L140bce.  return @kind void;
  #L140bd0.  v0:= new `com.b.a.b.a.m`;
  #L140bd4.  v2:= v5.`com.b.a.b.a.i$1.d` @type ^`com.b.a.f` @kind object;
  #L140bd8.  v3:= v5.`com.b.a.b.a.i$1.c` @type ^`com.b.a.v` @kind object;
  #L140bdc.  v4:= v5.`com.b.a.b.a.i$1.e` @type ^`com.b.a.c.a` @kind object;
  #L140be0.  call temp:= `b`(v4) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L140be6.  v4:= temp @kind object;
  #L140be8.  call `<init>`(v0, v2, v3, v4) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L140bee.  goto L140bc8;
}
procedure `boolean` `a`(`com.b.a.b.a.i$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/b/a/i$1;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L140c00.  v0:= 0I;
  #L140c02.  v1:= v2.`com.b.a.b.a.i$1.i` @type ^`boolean` @kind boolean;
  #L140c06.  if v1 != 0 then goto L140c0c;
  #L140c0a.  return v0;
  #L140c0c.  v1:= v2.`com.b.a.b.a.i$1.a` @type ^`java.lang.reflect.Field` @kind object;
  #L140c10.  call temp:= `get`(v1, v3) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L140c16.  v1:= temp @kind object;
  #L140c18.  if v1 == v3 then goto L140c0a;
  #L140c1c.  v0:= 1I;
  #L140c1e.  goto L140c0a;
}

record `com.j256.ormlite.stmt.mapped.MappedUpdateId` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedUpdateId` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L167830.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L167836.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedUpdateId` `build`(`com.j256.ormlite.db.DatabaseType` v5 @kind object, `com.j256.ormlite.table.TableInfo` v6 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L167848.  v4:= 0I;
  #L16784a.  call temp:= `getIdField`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L167850.  v0:= temp @kind object;
  #L167852.  if v0 != 0 then goto L16789c;
  #L167856.  v0:= new `java.sql.SQLException`;
  #L16785a.  v1:= new `java.lang.StringBuilder`;
  #L16785e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L167864.  v2:= "Cannot update-id in " @kind object;
  #L167868.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16786e.  v1:= temp @kind object;
  #L167870.  call temp:= `getDataClass`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L167876.  v2:= temp @kind object;
  #L167878.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16787e.  v1:= temp @kind object;
  #L167880.  v2:= " because it doesn't have an id field" @kind object;
  #L167884.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16788a.  v1:= temp @kind object;
  #L16788c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L167892.  v1:= temp @kind object;
  #L167894.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16789a.  throw v0;
  #L16789c.  v1:= new `java.lang.StringBuilder`;
  #L1678a0.  v2:= 64I;
  #L1678a4.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1678aa.  v2:= "UPDATE " @kind object;
  #L1678ae.  call temp:= `getTableName`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L1678b4.  v3:= temp @kind object;
  #L1678b6.  call `appendTableName`(v5, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L1678bc.  v2:= "SET " @kind object;
  #L1678c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1678c6.  call `appendFieldColumnName`(v5, v1, v0, v4) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L1678cc.  v2:= "= ? " @kind object;
  #L1678d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1678d6.  call `appendWhereFieldEq`(v5, v0, v1, v4) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L1678dc.  v2:= new `com.j256.ormlite.stmt.mapped.MappedUpdateId`;
  #L1678e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1678e6.  v1:= temp @kind object;
  #L1678e8.  v3:= 2I;
  #L1678ea.  v3:= new `com.j256.ormlite.field.FieldType`[v3];
  #L1678ee.  v4:= 0I;
  #L1678f0.  v3[v4]:= v0 @kind object;
  #L1678f4.  v4:= 1I;
  #L1678f6.  v3[v4]:= v0 @kind object;
  #L1678fa.  call `<init>`(v2, v6, v1, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L167900.  return v2 @kind object;
}
procedure `java.lang.Object` `extractIdToFieldObject`(`com.j256.ormlite.stmt.mapped.MappedUpdateId` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.extractIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L167914.  v0:= v1.`com.j256.ormlite.stmt.mapped.MappedUpdateId.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L167918.  call temp:= `extractJavaFieldToSqlArgValue`(v0, v2) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16791e.  v0:= temp @kind object;
  #L167920.  return v0 @kind object;
}
procedure `int` `execute`(`com.j256.ormlite.stmt.mapped.MappedUpdateId` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `com.j256.ormlite.dao.ObjectCache` v11 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.execute:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L167934.  v0:= 2I;
  #Try_start0.  
  #L167936.  v0:= new `java.lang.Object`[v0];
  #L16793a.  v1:= 0I;
  #L16793c.  call temp:= `convertIdToFieldObject`(v7, v10) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.convertIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L167942.  v2:= temp @kind object;
  #L167944.  v0[v1]:= v2 @kind object;
  #L167948.  v1:= 1I;
  #L16794a.  call temp:= `extractIdToFieldObject`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdateId;.extractIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L167950.  v2:= temp @kind object;
  #L167952.  v0[v1]:= v2 @kind object;
  #L167956.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.statement` @type ^`java.lang.String` @kind object;
  #L16795a.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16795e.  call temp:= `update`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L167964.  v1:= temp;
  #L167966.  if v1 <= 0 then goto L1679a6;
  #L16796a.  if v11 == 0 then goto L16799a;
  #L16796e.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L167972.  call temp:= `extractJavaFieldValue`(v2, v9) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L167978.  v2:= temp @kind object;
  #L16797a.  v3:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.clazz` @type ^`java.lang.Class` @kind object;
  #L16797e.  call temp:= `updateId`(v11, v3, v2, v10) @signature `Lcom/j256/ormlite/dao/ObjectCache;.updateId:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L167984.  v2:= temp @kind object;
  #L167986.  if v2 == 0 then goto L16799a;
  #L16798a.  if v2 == v9 then goto L16799a;
  #L16798e.  v3:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L167992.  v4:= 0I;
  #L167994.  call `assignField`(v3, v2, v10, v4, v11) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L16799a.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16799e.  v3:= 0I;
  #L1679a0.  call `assignField`(v2, v9, v10, v3, v11) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L1679a6.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedUpdateId.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L1679aa.  v3:= "updating-id with statement '{}' and {} args, changed {} rows" @kind object;
  #L1679ae.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.statement` @type ^`java.lang.String` @kind object;
  #L1679b2.  v5:= length @variable v0;
  #L1679b4.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1679ba.  v5:= temp @kind object;
  #L1679bc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1679c2.  v6:= temp @kind object;
  #L1679c4.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L1679ca.  v2:= length @variable v0;
  #L1679cc.  if v2 <= 0 then goto L1679de;
  #L1679d0.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedUpdateId.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L1679d4.  v3:= "updating-id arguments: {}" @kind object;
  #L1679d8.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L1679de.  return v1;
  #L1679e0.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1679e2.  v1:= new `java.lang.StringBuilder`;
  #L1679e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1679ec.  v2:= "Unable to run update-id stmt on object " @kind object;
  #L1679f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1679f6.  v1:= temp @kind object;
  #L1679f8.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1679fe.  v1:= temp @kind object;
  #L167a00.  v2:= ": " @kind object;
  #L167a04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L167a0a.  v1:= temp @kind object;
  #L167a0c.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedUpdateId.statement` @type ^`java.lang.String` @kind object;
  #L167a10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L167a16.  v1:= temp @kind object;
  #L167a18.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L167a1e.  v1:= temp @kind object;
  #L167a20.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L167a26.  v0:= temp @kind object;
  #L167a28.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1679e0;
}

record `com.j256.ormlite.logger.LoggerFactory$LogType` @kind class @AccessFlag PUBLIC_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.j256.ormlite.logger.LoggerFactory$LogType.detectClassName` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.j256.ormlite.logger.LoggerFactory$LogType.logClassName` @AccessFlag PRIVATE_FINAL;
}
global `com.j256.ormlite.logger.LoggerFactory$LogType`[] `@@com.j256.ormlite.logger.LoggerFactory$LogType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.ANDROID` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.COMMONS_LOGGING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOCAL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.logger.LoggerFactory$LogType` `@@com.j256.ormlite.logger.LoggerFactory$LogType.SLF4J` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L15f920.  v9:= 4I;
  #L15f922.  v8:= 3I;
  #L15f924.  v7:= 2I;
  #L15f926.  v6:= 1I;
  #L15f928.  v5:= 0I;
  #L15f92a.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L15f92e.  v1:= "SLF4J" @kind object;
  #L15f932.  v2:= "org.slf4j.LoggerFactory" @kind object;
  #L15f936.  v3:= "com.j256.ormlite.logger.Slf4jLoggingLog" @kind object;
  #L15f93a.  call `<init>`(v0, v1, v5, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L15f940.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.SLF4J` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L15f944.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L15f948.  v1:= "ANDROID" @kind object;
  #L15f94c.  v2:= "android.util.Log" @kind object;
  #L15f950.  v3:= "com.j256.ormlite.android.AndroidLog" @kind object;
  #L15f954.  call `<init>`(v0, v1, v6, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L15f95a.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.ANDROID` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L15f95e.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L15f962.  v1:= "COMMONS_LOGGING" @kind object;
  #L15f966.  v2:= "org.apache.commons.logging.LogFactory" @kind object;
  #L15f96a.  v3:= "com.j256.ormlite.logger.CommonsLoggingLog" @kind object;
  #L15f96e.  call `<init>`(v0, v1, v7, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L15f974.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.COMMONS_LOGGING` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L15f978.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L15f97c.  v1:= "LOG4J2" @kind object;
  #L15f980.  v2:= "org.apache.logging.log4j.LogManager" @kind object;
  #L15f984.  v3:= "com.j256.ormlite.logger.Log4j2Log" @kind object;
  #L15f988.  call `<init>`(v0, v1, v8, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L15f98e.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J2` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L15f992.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`;
  #L15f996.  v1:= "LOG4J" @kind object;
  #L15f99a.  v2:= "org.apache.log4j.Logger" @kind object;
  #L15f99e.  v3:= "com.j256.ormlite.logger.Log4jLog" @kind object;
  #L15f9a2.  call `<init>`(v0, v1, v9, v2, v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L15f9a8.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L15f9ac.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType$1`;
  #L15f9b0.  v1:= "LOCAL" @kind object;
  #L15f9b4.  v2:= 5I;
  #L15f9b6.  v3:= constclass @type ^`com.j256.ormlite.logger.LocalLog` @kind object;
  #L15f9ba.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15f9c0.  v3:= temp @kind object;
  #L15f9c2.  v4:= constclass @type ^`com.j256.ormlite.logger.LocalLog` @kind object;
  #L15f9c6.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15f9cc.  v4:= temp @kind object;
  #L15f9ce.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType$1;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L15f9d4.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOCAL` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` := v0 @kind object;
  #L15f9d8.  v0:= 6I;
  #L15f9da.  v0:= new `com.j256.ormlite.logger.LoggerFactory$LogType`[v0];
  #L15f9de.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.SLF4J` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L15f9e2.  v0[v5]:= v1 @kind object;
  #L15f9e6.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.ANDROID` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L15f9ea.  v0[v6]:= v1 @kind object;
  #L15f9ee.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.COMMONS_LOGGING` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L15f9f2.  v0[v7]:= v1 @kind object;
  #L15f9f6.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J2` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L15f9fa.  v0[v8]:= v1 @kind object;
  #L15f9fe.  v1:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOG4J` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L15fa02.  v0[v9]:= v1 @kind object;
  #L15fa06.  v1:= 5I;
  #L15fa08.  v2:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.LOCAL` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L15fa0c.  v0[v1]:= v2 @kind object;
  #L15fa10.  `@@com.j256.ormlite.logger.LoggerFactory$LogType.$VALUES` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType`[] := v0 @kind object;
  #L15fa14.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.logger.LoggerFactory$LogType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15fa28.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L15fa2e.  v0.`com.j256.ormlite.logger.LoggerFactory$LogType.detectClassName` @type ^`java.lang.String` := v3 @kind object;
  #L15fa32.  v0.`com.j256.ormlite.logger.LoggerFactory$LogType.logClassName` @type ^`java.lang.String` := v4 @kind object;
  #L15fa36.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.logger.LoggerFactory$LogType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `com.j256.ormlite.logger.LoggerFactory$1` v5 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lcom/j256/ormlite/logger/LoggerFactory$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L15fa48.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L15fa4e.  return @kind void;
}
procedure `com.j256.ormlite.logger.Log` `createLogFromClassName`(`com.j256.ormlite.logger.LoggerFactory$LogType` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.createLogFromClassName:(Ljava/lang/String;)Lcom/j256/ormlite/logger/Log;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15fa60.  v4:= 1I;
  #L15fa62.  v3:= 0I;
  #L15fa64.  v0:= v5.`com.j256.ormlite.logger.LoggerFactory$LogType.logClassName` @type ^`java.lang.String` @kind object;
  #L15fa68.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L15fa6e.  v0:= temp @kind object;
  #L15fa70.  v1:= new `java.lang.Class`[v4];
  #L15fa74.  v2:= constclass @type ^`java.lang.String` @kind object;
  #L15fa78.  v1[v3]:= v2 @kind object;
  #L15fa7c.  call temp:= `getConstructor`(v0, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L15fa82.  v0:= temp @kind object;
  #L15fa84.  v1:= new `java.lang.Object`[v4];
  #L15fa88.  v1[v3]:= v6 @kind object;
  #L15fa8c.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15fa92.  v0:= temp @kind object;
  #L15fa94.  v0:= (`com.j256.ormlite.logger.Log`) v0 @kind object;
  #L15fa98.  return v0 @kind object;
}
procedure `com.j256.ormlite.logger.LoggerFactory$LogType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.valueOf:(Ljava/lang/String;)Lcom/j256/ormlite/logger/LoggerFactory$LogType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15faac.  v0:= constclass @type ^`com.j256.ormlite.logger.LoggerFactory$LogType` @kind object;
  #L15fab0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L15fab6.  v0:= temp @kind object;
  #L15fab8.  v0:= (`com.j256.ormlite.logger.LoggerFactory$LogType`) v0 @kind object;
  #L15fabc.  return v0 @kind object;
}
procedure `com.j256.ormlite.logger.LoggerFactory$LogType`[] `values`() @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.values:()[Lcom/j256/ormlite/logger/LoggerFactory$LogType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15fad0.  v0:= `@@com.j256.ormlite.logger.LoggerFactory$LogType.$VALUES` @type ^`com.j256.ormlite.logger.LoggerFactory$LogType`[] @kind object;
  #L15fad4.  call temp:= `clone`(v0) @signature `[Lcom/j256/ormlite/logger/LoggerFactory$LogType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L15fada.  v0:= temp @kind object;
  #L15fadc.  v0:= (`com.j256.ormlite.logger.LoggerFactory$LogType`[]) v0 @kind object;
  #L15fae0.  return v0 @kind object;
}
procedure `com.j256.ormlite.logger.Log` `createLog`(`com.j256.ormlite.logger.LoggerFactory$LogType` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.createLog:(Ljava/lang/String;)Lcom/j256/ormlite/logger/Log;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L15faf4.  call temp:= `createLogFromClassName`(v5, v6) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.createLogFromClassName:(Ljava/lang/String;)Lcom/j256/ormlite/logger/Log;` @kind direct;
  #Try_end0.  
  #L15fafa.  v0:= temp @kind object;
  #L15fafc.  return v0 @kind object;
  #L15fafe.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L15fb00.  v0:= new `com.j256.ormlite.logger.LocalLog`;
  #L15fb04.  call `<init>`(v0, v6) @signature `Lcom/j256/ormlite/logger/LocalLog;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15fb0a.  v2:= `@@com.j256.ormlite.logger.Log$Level.WARNING` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L15fb0e.  v3:= new `java.lang.StringBuilder`;
  #L15fb12.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15fb18.  v4:= "Unable to call constructor with single String argument for class " @kind object;
  #L15fb1c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb22.  v3:= temp @kind object;
  #L15fb24.  v4:= v5.`com.j256.ormlite.logger.LoggerFactory$LogType.logClassName` @type ^`java.lang.String` @kind object;
  #L15fb28.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb2e.  v3:= temp @kind object;
  #L15fb30.  v4:= ", so had to use local log: " @kind object;
  #L15fb34.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb3a.  v3:= temp @kind object;
  #L15fb3c.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L15fb42.  v1:= temp @kind object;
  #L15fb44.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fb4a.  v1:= temp @kind object;
  #L15fb4c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15fb52.  v1:= temp @kind object;
  #L15fb54.  call `log`(v0, v2, v1) @signature `Lcom/j256/ormlite/logger/Log;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/String;)V` @kind interface;
  #L15fb5a.  goto L15fafc;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15fafe;
}
procedure `boolean` `isAvailable`(`com.j256.ormlite.logger.LoggerFactory$LogType` v3 @kind this) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.isAvailable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15fb7c.  v0:= 0I;
  #L15fb7e.  call temp:= `isAvailableTestClass`(v3) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.isAvailableTestClass:()Z` @kind virtual;
  #L15fb84.  v1:= temp;
  #L15fb86.  if v1 != 0 then goto L15fb8c;
  #L15fb8a.  return v0;
  #Try_start0.  
  #L15fb8c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15fb92.  v1:= temp @kind object;
  #L15fb94.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15fb9a.  v1:= temp @kind object;
  #L15fb9c.  call temp:= `createLogFromClassName`(v3, v1) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.createLogFromClassName:(Ljava/lang/String;)Lcom/j256/ormlite/logger/Log;` @kind direct;
  #L15fba2.  v1:= temp @kind object;
  #L15fba4.  v2:= `@@com.j256.ormlite.logger.Log$Level.INFO` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L15fba8.  call temp:= `isLevelEnabled`(v1, v2) @signature `Lcom/j256/ormlite/logger/Log;.isLevelEnabled:(Lcom/j256/ormlite/logger/Log$Level;)Z` @kind interface;
  #Try_end0.  
  #L15fbae.  v0:= 1I;
  #L15fbb0.  goto L15fb8a;
  #L15fbb2.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L15fbb4.  goto L15fb8a;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15fbb2;
}
procedure `boolean` `isAvailableTestClass`(`com.j256.ormlite.logger.LoggerFactory$LogType` v1 @kind this) @signature `Lcom/j256/ormlite/logger/LoggerFactory$LogType;.isAvailableTestClass:()Z` @AccessFlag  {
    temp;
    v0;

  #Try_start0.  
  #L15fbd8.  v0:= v1.`com.j256.ormlite.logger.LoggerFactory$LogType.detectClassName` @type ^`java.lang.String` @kind object;
  #L15fbdc.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L15fbe2.  v0:= 1I;
  #L15fbe4.  return v0;
  #L15fbe6.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15fbe8.  v0:= 0I;
  #L15fbea.  goto L15fbe4;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15fbe6;
}

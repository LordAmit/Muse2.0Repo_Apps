record `com.j256.ormlite.stmt.query.ManyClause` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.Clause` @kind interface, `com.j256.ormlite.stmt.query.NeedsFutureClause` @kind interface {
  `com.j256.ormlite.stmt.query.Clause` `com.j256.ormlite.stmt.query.ManyClause.first` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.j256.ormlite.stmt.query.ManyClause.operation` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.query.Clause`[] `com.j256.ormlite.stmt.query.ManyClause.others` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.query.Clause` `com.j256.ormlite.stmt.query.ManyClause.second` @AccessFlag PRIVATE;
  `int` `com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.j256.ormlite.stmt.query.ManyClause.AND_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.ManyClause.OR_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v1 @kind this, `com.j256.ormlite.stmt.query.Clause` v2 @kind object, `com.j256.ormlite.stmt.query.Clause` v3 @kind object, `com.j256.ormlite.stmt.query.Clause`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:(Lcom/j256/ormlite/stmt/query/Clause;Lcom/j256/ormlite/stmt/query/Clause;[Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L168494.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16849a.  v1.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v2 @kind object;
  #L16849e.  v1.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v3 @kind object;
  #L1684a2.  v1.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v4 @kind object;
  #L1684a6.  v0:= 0I;
  #L1684a8.  v1.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L1684ac.  v1.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v5 @kind object;
  #L1684b0.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v1 @kind this, `com.j256.ormlite.stmt.query.Clause` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:(Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1684c4.  v0:= 0I;
  #L1684c6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1684cc.  v1.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v2 @kind object;
  #L1684d0.  v1.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L1684d4.  v1.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v0 @kind object;
  #L1684d8.  v0:= 0I;
  #L1684da.  v1.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L1684de.  v1.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v3 @kind object;
  #L1684e2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.ManyClause` v2 @kind this, `com.j256.ormlite.stmt.query.Clause`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.<init>:([Lcom/j256/ormlite/stmt/query/Clause;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1684f4.  v1:= 2I;
  #L1684f6.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1684fc.  v0:= 0I;
  #L1684fe.  v0:= v3[v0] @kind object;
  #L168502.  v2.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L168506.  v0:= length @variable v3;
  #L168508.  if v0 >= v1 then goto L168522;
  #L16850c.  v0:= 0I;
  #L16850e.  v2.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L168512.  v0:= length @variable v3;
  #L168514.  v2.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v0;
  #L168518.  v2.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] := v3 @kind object;
  #L16851c.  v2.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` := v4 @kind object;
  #L168520.  return @kind void;
  #L168522.  v0:= 1I;
  #L168524.  v0:= v3[v0] @kind object;
  #L168528.  v2.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v0 @kind object;
  #L16852c.  v2.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int` := v1;
  #L168530.  goto L168518;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.ManyClause` v3 @kind this, `com.j256.ormlite.db.DatabaseType` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.StringBuilder` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L168544.  v2:= 32I;
  #L168548.  v0:= 40I;
  #L16854c.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L168552.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.first` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L168556.  call `appendSql`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L16855c.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L168560.  if v0 == 0 then goto L16857e;
  #L168564.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` @kind object;
  #L168568.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16856e.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L168574.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` @kind object;
  #L168578.  call `appendSql`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L16857e.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L168582.  if v0 == 0 then goto L1685b8;
  #L168586.  v0:= v3.`com.j256.ormlite.stmt.query.ManyClause.startOthersAt` @type ^`int`;
  #L16858a.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L16858e.  v1:= length @variable v1;
  #L168590.  if v0 >= v1 then goto L1685b8;
  #L168594.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.operation` @type ^`java.lang.String` @kind object;
  #L168598.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16859e.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1685a4.  v1:= v3.`com.j256.ormlite.stmt.query.ManyClause.others` @type ^`com.j256.ormlite.stmt.query.Clause`[] @kind object;
  #L1685a8.  v1:= v1[v0] @kind object;
  #L1685ac.  call `appendSql`(v1, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/stmt/query/Clause;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind interface;
  #L1685b2.  v0:= v0 + 1;
  #L1685b6.  goto L16858a;
  #L1685b8.  v0:= ") " @kind object;
  #L1685bc.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1685c2.  return @kind void;
}
procedure `void` `setMissingClause`(`com.j256.ormlite.stmt.query.ManyClause` v0 @kind this, `com.j256.ormlite.stmt.query.Clause` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/query/ManyClause;.setMissingClause:(Lcom/j256/ormlite/stmt/query/Clause;)V` @AccessFlag PUBLIC {
    temp;

  #L1685d4.  v0.`com.j256.ormlite.stmt.query.ManyClause.second` @type ^`com.j256.ormlite.stmt.query.Clause` := v1 @kind object;
  #L1685d8.  return @kind void;
}

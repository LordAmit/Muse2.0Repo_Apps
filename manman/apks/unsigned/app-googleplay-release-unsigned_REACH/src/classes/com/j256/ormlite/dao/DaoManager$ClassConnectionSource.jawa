record `com.j256.ormlite.dao.DaoManager$ClassConnectionSource` @kind class @AccessFlag  {
  `java.lang.Class` `com.j256.ormlite.dao.DaoManager$ClassConnectionSource.clazz` @AccessFlag ;
  `com.j256.ormlite.support.ConnectionSource` `com.j256.ormlite.dao.DaoManager$ClassConnectionSource.connectionSource` @AccessFlag ;
}
procedure `void` `<init>`(`com.j256.ormlite.dao.DaoManager$ClassConnectionSource` v0 @kind this, `com.j256.ormlite.support.ConnectionSource` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/j256/ormlite/dao/DaoManager$ClassConnectionSource;.<init>:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L150d8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L150d92.  v0.`com.j256.ormlite.dao.DaoManager$ClassConnectionSource.connectionSource` @type ^`com.j256.ormlite.support.ConnectionSource` := v1 @kind object;
  #L150d96.  v0.`com.j256.ormlite.dao.DaoManager$ClassConnectionSource.clazz` @type ^`java.lang.Class` := v2 @kind object;
  #L150d9a.  return @kind void;
}
procedure `boolean` `equals`(`com.j256.ormlite.dao.DaoManager$ClassConnectionSource` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/DaoManager$ClassConnectionSource;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L150dac.  v0:= 0I;
  #L150dae.  if v4 == 0 then goto L150dc6;
  #L150db2.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L150db8.  v1:= temp @kind object;
  #L150dba.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L150dc0.  v2:= temp @kind object;
  #L150dc2.  if v1 == v2 then goto L150dc8;
  #L150dc6.  return v0;
  #L150dc8.  v4:= (`com.j256.ormlite.dao.DaoManager$ClassConnectionSource`) v4 @kind object;
  #L150dcc.  v1:= v3.`com.j256.ormlite.dao.DaoManager$ClassConnectionSource.clazz` @type ^`java.lang.Class` @kind object;
  #L150dd0.  v2:= v4.`com.j256.ormlite.dao.DaoManager$ClassConnectionSource.clazz` @type ^`java.lang.Class` @kind object;
  #L150dd4.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L150dda.  v1:= temp;
  #L150ddc.  if v1 == 0 then goto L150dc6;
  #L150de0.  v1:= v3.`com.j256.ormlite.dao.DaoManager$ClassConnectionSource.connectionSource` @type ^`com.j256.ormlite.support.ConnectionSource` @kind object;
  #L150de4.  v2:= v4.`com.j256.ormlite.dao.DaoManager$ClassConnectionSource.connectionSource` @type ^`com.j256.ormlite.support.ConnectionSource` @kind object;
  #L150de8.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L150dee.  v1:= temp;
  #L150df0.  if v1 == 0 then goto L150dc6;
  #L150df4.  v0:= 1I;
  #L150df6.  goto L150dc6;
}
procedure `int` `hashCode`(`com.j256.ormlite.dao.DaoManager$ClassConnectionSource` v2 @kind this) @signature `Lcom/j256/ormlite/dao/DaoManager$ClassConnectionSource;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L150e08.  v0:= v2.`com.j256.ormlite.dao.DaoManager$ClassConnectionSource.clazz` @type ^`java.lang.Class` @kind object;
  #L150e0c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L150e12.  v0:= temp;
  #L150e14.  v0:= v0 + 31;
  #L150e18.  v0:= v0 * 31;
  #L150e1c.  v1:= v2.`com.j256.ormlite.dao.DaoManager$ClassConnectionSource.connectionSource` @type ^`com.j256.ormlite.support.ConnectionSource` @kind object;
  #L150e20.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L150e26.  v1:= temp;
  #L150e28.  v0:= v0 + v1 @kind int;
  #L150e2a.  return v0;
}

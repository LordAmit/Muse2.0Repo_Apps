record `com.j256.ormlite.dao.RuntimeExceptionDao` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.Dao` @kind interface {
  `com.j256.ormlite.dao.Dao` `com.j256.ormlite.dao.RuntimeExceptionDao.dao` @AccessFlag PRIVATE;
}
global `com.j256.ormlite.logger.Log$Level` `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L152cbc.  v0:= `@@com.j256.ormlite.logger.Log$Level.DEBUG` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L152cc0.  `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @type ^`com.j256.ormlite.logger.Log$Level` := v0 @kind object;
  #L152cc4.  v0:= constclass @type ^`com.j256.ormlite.dao.RuntimeExceptionDao` @kind object;
  #L152cc8.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L152cce.  v0:= temp @kind object;
  #L152cd0.  `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L152cd4.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.dao.RuntimeExceptionDao` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L152ce8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152cee.  v0.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` := v1 @kind object;
  #L152cf2.  return @kind void;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `createDao`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L152d04.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L152d0a.  v0:= temp @kind object;
  #L152d0c.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L152d10.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #L152d16.  return v1 @kind object;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `createDao`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L152d28.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L152d2e.  v0:= temp @kind object;
  #L152d30.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L152d34.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #L152d3a.  return v1 @kind object;
}
procedure `void` `logMessage`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.lang.Exception` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L152d4c.  v0:= `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L152d50.  v1:= `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L152d54.  call `log`(v0, v1, v3, v4) @signature `Lcom/j256/ormlite/logger/Logger;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/Throwable;Ljava/lang/String;)V` @kind virtual;
  #L152d5a.  return @kind void;
}
procedure `void` `assignEmptyForeignCollection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L152d6c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152d70.  call `assignEmptyForeignCollection`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @kind interface;
  #Try_end0.  
  #L152d76.  return @kind void;
  #L152d78.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L152d7a.  v1:= new `java.lang.StringBuilder`;
  #L152d7e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152d84.  v2:= "assignEmptyForeignCollection threw exception on " @kind object;
  #L152d88.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152d8e.  v1:= temp @kind object;
  #L152d90.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152d96.  v1:= temp @kind object;
  #L152d98.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152d9e.  v1:= temp @kind object;
  #L152da0.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L152da6.  v1:= new `java.lang.RuntimeException`;
  #L152daa.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L152db0.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L152d78;
}
procedure `java.lang.Object` `callBatchTasks`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.concurrent.Callable` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L152dd4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152dd8.  call temp:= `callBatchTasks`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L152dde.  v0:= temp @kind object;
  #L152de0.  return v0 @kind object;
  #L152de2.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L152de4.  v1:= new `java.lang.StringBuilder`;
  #L152de8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152dee.  v2:= "callBatchTasks threw exception on: " @kind object;
  #L152df2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152df8.  v1:= temp @kind object;
  #L152dfa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152e00.  v1:= temp @kind object;
  #L152e02.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152e08.  v1:= temp @kind object;
  #L152e0a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L152e10.  v1:= new `java.lang.RuntimeException`;
  #L152e14.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L152e1a.  throw v1;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L152de2;
}
procedure `void` `clearObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.clearObjectCache:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152e3c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152e40.  call `clearObjectCache`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.clearObjectCache:()V` @kind interface;
  #L152e46.  return @kind void;
}
procedure `void` `closeLastIterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.closeLastIterator:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L152e58.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152e5c.  call `closeLastIterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.closeLastIterator:()V` @kind interface;
  #Try_end0.  
  #L152e62.  return @kind void;
  #L152e64.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L152e66.  v1:= "closeLastIterator threw exception" @kind object;
  #L152e6a.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L152e70.  v1:= new `java.lang.RuntimeException`;
  #L152e74.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L152e7a.  throw v1;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L152e64;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152e9c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152ea0.  call temp:= `closeableIterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L152ea6.  v0:= temp @kind object;
  #L152ea8.  return v0 @kind object;
}
procedure `void` `commit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L152ebc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152ec0.  call `commit`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L152ec6.  return @kind void;
  #L152ec8.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L152eca.  v1:= new `java.lang.StringBuilder`;
  #L152ece.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152ed4.  v2:= "commit(" @kind object;
  #L152ed8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152ede.  v1:= temp @kind object;
  #L152ee0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152ee6.  v1:= temp @kind object;
  #L152ee8.  v2:= ") threw exception" @kind object;
  #L152eec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152ef2.  v1:= temp @kind object;
  #L152ef4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152efa.  v1:= temp @kind object;
  #L152efc.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L152f02.  v1:= new `java.lang.RuntimeException`;
  #L152f06.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L152f0c.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L152ec8;
}
procedure `long` `countOf`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.countOf:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L152f30.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152f34.  call temp:= `countOf`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:()J` @kind interface;
  #Try_end0.  
  #L152f3a.  v0:= temp @kind wide;
  #L152f3c.  return v0 @kind wide;
  #L152f3e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L152f40.  v1:= "countOf threw exception" @kind object;
  #L152f44.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L152f4a.  v1:= new `java.lang.RuntimeException`;
  #L152f4e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L152f54.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L152f3e;
}
procedure `long` `countOf`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L152f78.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152f7c.  call temp:= `countOf`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @kind interface;
  #Try_end0.  
  #L152f82.  v0:= temp @kind wide;
  #L152f84.  return v0 @kind wide;
  #L152f86.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L152f88.  v1:= new `java.lang.StringBuilder`;
  #L152f8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152f92.  v2:= "countOf threw exception on " @kind object;
  #L152f96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152f9c.  v1:= temp @kind object;
  #L152f9e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L152fa4.  v1:= temp @kind object;
  #L152fa6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L152fac.  v1:= temp @kind object;
  #L152fae.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L152fb4.  v1:= new `java.lang.RuntimeException`;
  #L152fb8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L152fbe.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L152f86;
}
procedure `int` `create`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.create:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L152fe0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152fe4.  call temp:= `create`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L152fea.  v0:= temp;
  #L152fec.  return v0;
  #L152fee.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L152ff0.  v1:= new `java.lang.StringBuilder`;
  #L152ff4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152ffa.  v2:= "create threw exception on: " @kind object;
  #L152ffe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153004.  v1:= temp @kind object;
  #L153006.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15300c.  v1:= temp @kind object;
  #L15300e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153014.  v1:= temp @kind object;
  #L153016.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15301c.  v1:= new `java.lang.RuntimeException`;
  #L153020.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153026.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L152fee;
}
procedure `int` `create`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.create:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153048.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15304c.  call temp:= `create`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L153052.  v0:= temp;
  #L153054.  return v0;
  #L153056.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153058.  v1:= new `java.lang.StringBuilder`;
  #L15305c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153062.  v2:= "create threw exception on: " @kind object;
  #L153066.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15306c.  v1:= temp @kind object;
  #L15306e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153074.  v1:= temp @kind object;
  #L153076.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15307c.  v1:= temp @kind object;
  #L15307e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153084.  v1:= new `java.lang.RuntimeException`;
  #L153088.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15308e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153056;
}
procedure `java.lang.Object` `createIfNotExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1530b0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1530b4.  call temp:= `createIfNotExists`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L1530ba.  v0:= temp @kind object;
  #L1530bc.  return v0 @kind object;
  #L1530be.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1530c0.  v1:= new `java.lang.StringBuilder`;
  #L1530c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1530ca.  v2:= "createIfNotExists threw exception on: " @kind object;
  #L1530ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1530d4.  v1:= temp @kind object;
  #L1530d6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1530dc.  v1:= temp @kind object;
  #L1530de.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1530e4.  v1:= temp @kind object;
  #L1530e6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1530ec.  v1:= new `java.lang.RuntimeException`;
  #L1530f0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1530f6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1530be;
}
procedure `com.j256.ormlite.dao.Dao$CreateOrUpdateStatus` `createOrUpdate`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153118.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15311c.  call temp:= `createOrUpdate`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @kind interface;
  #Try_end0.  
  #L153122.  v0:= temp @kind object;
  #L153124.  return v0 @kind object;
  #L153126.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153128.  v1:= new `java.lang.StringBuilder`;
  #L15312c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153132.  v2:= "createOrUpdate threw exception on: " @kind object;
  #L153136.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15313c.  v1:= temp @kind object;
  #L15313e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153144.  v1:= temp @kind object;
  #L153146.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15314c.  v1:= temp @kind object;
  #L15314e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153154.  v1:= new `java.lang.RuntimeException`;
  #L153158.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15315e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153126;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedDelete` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153180.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153184.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @kind interface;
  #Try_end0.  
  #L15318a.  v0:= temp;
  #L15318c.  return v0;
  #L15318e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153190.  v1:= new `java.lang.StringBuilder`;
  #L153194.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15319a.  v2:= "delete threw exception on: " @kind object;
  #L15319e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1531a4.  v1:= temp @kind object;
  #L1531a6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1531ac.  v1:= temp @kind object;
  #L1531ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1531b4.  v1:= temp @kind object;
  #L1531b6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1531bc.  v1:= new `java.lang.RuntimeException`;
  #L1531c0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1531c6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15318e;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1531e8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1531ec.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1531f2.  v0:= temp;
  #L1531f4.  return v0;
  #L1531f6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1531f8.  v1:= new `java.lang.StringBuilder`;
  #L1531fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153202.  v2:= "delete threw exception on: " @kind object;
  #L153206.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15320c.  v1:= temp @kind object;
  #L15320e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153214.  v1:= temp @kind object;
  #L153216.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15321c.  v1:= temp @kind object;
  #L15321e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153224.  v1:= new `java.lang.RuntimeException`;
  #L153228.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15322e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1531f6;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153250.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153254.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L15325a.  v0:= temp;
  #L15325c.  return v0;
  #L15325e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153260.  v1:= new `java.lang.StringBuilder`;
  #L153264.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15326a.  v2:= "delete threw exception on: " @kind object;
  #L15326e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153274.  v1:= temp @kind object;
  #L153276.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15327c.  v1:= temp @kind object;
  #L15327e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153284.  v1:= temp @kind object;
  #L153286.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15328c.  v1:= new `java.lang.RuntimeException`;
  #L153290.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153296.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15325e;
}
procedure `com.j256.ormlite.stmt.DeleteBuilder` `deleteBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1532b8.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1532bc.  call temp:= `deleteBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @kind interface;
  #L1532c2.  v0:= temp @kind object;
  #L1532c4.  return v0 @kind object;
}
procedure `int` `deleteById`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteById:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1532d8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1532dc.  call temp:= `deleteById`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.deleteById:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1532e2.  v0:= temp;
  #L1532e4.  return v0;
  #L1532e6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1532e8.  v1:= new `java.lang.StringBuilder`;
  #L1532ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1532f2.  v2:= "deleteById threw exception on: " @kind object;
  #L1532f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1532fc.  v1:= temp @kind object;
  #L1532fe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153304.  v1:= temp @kind object;
  #L153306.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15330c.  v1:= temp @kind object;
  #L15330e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153314.  v1:= new `java.lang.RuntimeException`;
  #L153318.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15331e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1532e6;
}
procedure `int` `deleteIds`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteIds:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153340.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153344.  call temp:= `deleteIds`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.deleteIds:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L15334a.  v0:= temp;
  #L15334c.  return v0;
  #L15334e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153350.  v1:= new `java.lang.StringBuilder`;
  #L153354.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15335a.  v2:= "deleteIds threw exception on: " @kind object;
  #L15335e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153364.  v1:= temp @kind object;
  #L153366.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15336c.  v1:= temp @kind object;
  #L15336e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153374.  v1:= temp @kind object;
  #L153376.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15337c.  v1:= new `java.lang.RuntimeException`;
  #L153380.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153386.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15334e;
}
procedure `void` `endThreadConnection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1533a8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1533ac.  call `endThreadConnection`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L1533b2.  return @kind void;
  #L1533b4.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1533b6.  v1:= new `java.lang.StringBuilder`;
  #L1533ba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1533c0.  v2:= "endThreadConnection(" @kind object;
  #L1533c4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1533ca.  v1:= temp @kind object;
  #L1533cc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1533d2.  v1:= temp @kind object;
  #L1533d4.  v2:= ") threw exception" @kind object;
  #L1533d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1533de.  v1:= temp @kind object;
  #L1533e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1533e6.  v1:= temp @kind object;
  #L1533e8.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1533ee.  v1:= new `java.lang.RuntimeException`;
  #L1533f2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1533f8.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1533b4;
}
procedure `int` `executeRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15341c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153420.  call temp:= `executeRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L153426.  v0:= temp;
  #L153428.  return v0;
  #L15342a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15342c.  v1:= new `java.lang.StringBuilder`;
  #L153430.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153436.  v2:= "executeRaw threw exception on: " @kind object;
  #L15343a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153440.  v1:= temp @kind object;
  #L153442.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153448.  v1:= temp @kind object;
  #L15344a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153450.  v1:= temp @kind object;
  #L153452.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153458.  v1:= new `java.lang.RuntimeException`;
  #L15345c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153462.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15342a;
}
procedure `int` `executeRawNoArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.executeRawNoArgs:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153484.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153488.  call temp:= `executeRawNoArgs`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.executeRawNoArgs:(Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L15348e.  v0:= temp;
  #L153490.  return v0;
  #L153492.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153494.  v1:= new `java.lang.StringBuilder`;
  #L153498.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15349e.  v2:= "executeRawNoArgs threw exception on: " @kind object;
  #L1534a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1534a8.  v1:= temp @kind object;
  #L1534aa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1534b0.  v1:= temp @kind object;
  #L1534b2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1534b8.  v1:= temp @kind object;
  #L1534ba.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1534c0.  v1:= new `java.lang.RuntimeException`;
  #L1534c4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1534ca.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153492;
}
procedure `java.lang.Object` `extractId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1534ec.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1534f0.  call temp:= `extractId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L1534f6.  v0:= temp @kind object;
  #L1534f8.  return v0 @kind object;
  #L1534fa.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1534fc.  v1:= new `java.lang.StringBuilder`;
  #L153500.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153506.  v2:= "extractId threw exception on: " @kind object;
  #L15350a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153510.  v1:= temp @kind object;
  #L153512.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153518.  v1:= temp @kind object;
  #L15351a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153520.  v1:= temp @kind object;
  #L153522.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153528.  v1:= new `java.lang.RuntimeException`;
  #L15352c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153532.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1534fa;
}
procedure `com.j256.ormlite.field.FieldType` `findForeignFieldType`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153554.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153558.  call temp:= `findForeignFieldType`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @kind interface;
  #L15355e.  v0:= temp @kind object;
  #L153560.  return v0 @kind object;
}
procedure `com.j256.ormlite.support.ConnectionSource` `getConnectionSource`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153574.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153578.  call temp:= `getConnectionSource`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind interface;
  #L15357e.  v0:= temp @kind object;
  #L153580.  return v0 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153594.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153598.  call temp:= `getDataClass`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L15359e.  v0:= temp @kind object;
  #L1535a0.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.ForeignCollection` `getEmptyForeignCollection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1535b4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1535b8.  call temp:= `getEmptyForeignCollection`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @kind interface;
  #Try_end0.  
  #L1535be.  v0:= temp @kind object;
  #L1535c0.  return v0 @kind object;
  #L1535c2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1535c4.  v1:= new `java.lang.StringBuilder`;
  #L1535c8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1535ce.  v2:= "getEmptyForeignCollection threw exception on " @kind object;
  #L1535d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1535d8.  v1:= temp @kind object;
  #L1535da.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1535e0.  v1:= temp @kind object;
  #L1535e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1535e8.  v1:= temp @kind object;
  #L1535ea.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1535f0.  v1:= new `java.lang.RuntimeException`;
  #L1535f4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1535fa.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1535c2;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15361c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153620.  call temp:= `getObjectCache`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @kind interface;
  #L153626.  v0:= temp @kind object;
  #L153628.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.RawRowMapper` `getRawRowMapper`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15363c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153640.  call temp:= `getRawRowMapper`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @kind interface;
  #L153646.  v0:= temp @kind object;
  #L153648.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.GenericRowMapper` `getSelectStarRowMapper`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L15365c.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153660.  call temp:= `getSelectStarRowMapper`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @kind interface;
  #Try_end0.  
  #L153666.  v0:= temp @kind object;
  #L153668.  return v0 @kind object;
  #L15366a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15366c.  v1:= "getSelectStarRowMapper threw exception" @kind object;
  #L153670.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153676.  v1:= new `java.lang.RuntimeException`;
  #L15367a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153680.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15366a;
}
procedure `java.lang.String` `getTableName`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1536a4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1536a8.  call temp:= `getTableName`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getTableName:()Ljava/lang/String;` @kind interface;
  #L1536ae.  v0:= temp @kind object;
  #L1536b0.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1536c4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1536c8.  call temp:= `getWrappedIterable`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind interface;
  #L1536ce.  v0:= temp @kind object;
  #L1536d0.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1536e4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1536e8.  call temp:= `getWrappedIterable`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind interface;
  #L1536ee.  v0:= temp @kind object;
  #L1536f0.  return v0 @kind object;
}
procedure `boolean` `idExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.idExists:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153704.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153708.  call temp:= `idExists`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.idExists:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L15370e.  v0:= temp;
  #L153710.  return v0;
  #L153712.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153714.  v1:= new `java.lang.StringBuilder`;
  #L153718.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15371e.  v2:= "idExists threw exception on " @kind object;
  #L153722.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153728.  v1:= temp @kind object;
  #L15372a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153730.  v1:= temp @kind object;
  #L153732.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153738.  v1:= temp @kind object;
  #L15373a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153740.  v1:= new `java.lang.RuntimeException`;
  #L153744.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15374a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153712;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15376c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153770.  call temp:= `isAutoCommit`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #L153776.  v0:= temp;
  #L153778.  return v0;
  #L15377a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15377c.  v1:= new `java.lang.StringBuilder`;
  #L153780.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153786.  v2:= "isAutoCommit(" @kind object;
  #L15378a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153790.  v1:= temp @kind object;
  #L153792.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153798.  v1:= temp @kind object;
  #L15379a.  v2:= ") threw exception" @kind object;
  #L15379e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1537a4.  v1:= temp @kind object;
  #L1537a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1537ac.  v1:= temp @kind object;
  #L1537ae.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1537b4.  v1:= new `java.lang.RuntimeException`;
  #L1537b8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1537be.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15377a;
}
procedure `boolean` `isTableExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isTableExists:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L1537e0.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1537e4.  call temp:= `isTableExists`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.isTableExists:()Z` @kind interface;
  #Try_end0.  
  #L1537ea.  v0:= temp;
  #L1537ec.  return v0;
  #L1537ee.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1537f0.  v1:= "isTableExists threw exception" @kind object;
  #L1537f4.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1537fa.  v1:= new `java.lang.RuntimeException`;
  #L1537fe.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153804.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1537ee;
}
procedure `boolean` `isUpdatable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isUpdatable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153828.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15382c.  call temp:= `isUpdatable`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.isUpdatable:()Z` @kind interface;
  #L153832.  v0:= temp;
  #L153834.  return v0;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153848.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15384c.  call temp:= `iterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L153852.  v0:= temp @kind object;
  #L153854.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153868.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15386c.  call temp:= `iterator`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L153872.  v0:= temp @kind object;
  #L153874.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153888.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15388c.  call temp:= `iterator`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #Try_end0.  
  #L153892.  v0:= temp @kind object;
  #L153894.  return v0 @kind object;
  #L153896.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153898.  v1:= new `java.lang.StringBuilder`;
  #L15389c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1538a2.  v2:= "iterator threw exception on: " @kind object;
  #L1538a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1538ac.  v1:= temp @kind object;
  #L1538ae.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1538b4.  v1:= temp @kind object;
  #L1538b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1538bc.  v1:= temp @kind object;
  #L1538be.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1538c4.  v1:= new `java.lang.RuntimeException`;
  #L1538c8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1538ce.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153896;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1538f0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1538f4.  call temp:= `iterator`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #Try_end0.  
  #L1538fa.  v0:= temp @kind object;
  #L1538fc.  return v0 @kind object;
  #L1538fe.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153900.  v1:= new `java.lang.StringBuilder`;
  #L153904.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15390a.  v2:= "iterator threw exception on: " @kind object;
  #L15390e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153914.  v1:= temp @kind object;
  #L153916.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15391c.  v1:= temp @kind object;
  #L15391e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153924.  v1:= temp @kind object;
  #L153926.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15392c.  v1:= new `java.lang.RuntimeException`;
  #L153930.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153936.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1538fe;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L153958.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L15395e.  v0:= temp @kind object;
  #L153960.  return v0 @kind object;
}
procedure `java.lang.Object` `mapSelectStarRow`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `com.j256.ormlite.support.DatabaseResults` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L153974.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153978.  call temp:= `mapSelectStarRow`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L15397e.  v0:= temp @kind object;
  #L153980.  return v0 @kind object;
  #L153982.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153984.  v1:= "mapSelectStarRow threw exception on results" @kind object;
  #L153988.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15398e.  v1:= new `java.lang.RuntimeException`;
  #L153992.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153998.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153982;
}
procedure `void` `notifyChanges`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.notifyChanges:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1539bc.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1539c0.  call `notifyChanges`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.notifyChanges:()V` @kind interface;
  #L1539c6.  return @kind void;
}
procedure `java.lang.String` `objectToString`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1539d8.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1539dc.  call temp:= `objectToString`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L1539e2.  v0:= temp @kind object;
  #L1539e4.  return v0 @kind object;
}
procedure `boolean` `objectsEqual`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1539f8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1539fc.  call temp:= `objectsEqual`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L153a02.  v0:= temp;
  #L153a04.  return v0;
  #L153a06.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153a08.  v1:= new `java.lang.StringBuilder`;
  #L153a0c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153a12.  v2:= "objectsEqual threw exception on: " @kind object;
  #L153a16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153a1c.  v1:= temp @kind object;
  #L153a1e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153a24.  v1:= temp @kind object;
  #L153a26.  v2:= " and " @kind object;
  #L153a2a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153a30.  v1:= temp @kind object;
  #L153a32.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153a38.  v1:= temp @kind object;
  #L153a3a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153a40.  v1:= temp @kind object;
  #L153a42.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153a48.  v1:= new `java.lang.RuntimeException`;
  #L153a4c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153a52.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153a06;
}
procedure `java.util.List` `query`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153a74.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153a78.  call temp:= `query`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L153a7e.  v0:= temp @kind object;
  #L153a80.  return v0 @kind object;
  #L153a82.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153a84.  v1:= new `java.lang.StringBuilder`;
  #L153a88.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153a8e.  v2:= "query threw exception on: " @kind object;
  #L153a92.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153a98.  v1:= temp @kind object;
  #L153a9a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153aa0.  v1:= temp @kind object;
  #L153aa2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153aa8.  v1:= temp @kind object;
  #L153aaa.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153ab0.  v1:= new `java.lang.RuntimeException`;
  #L153ab4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153aba.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153a82;
}
procedure `com.j256.ormlite.stmt.QueryBuilder` `queryBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153adc.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153ae0.  call temp:= `queryBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @kind interface;
  #L153ae6.  v0:= temp @kind object;
  #L153ae8.  return v0 @kind object;
}
procedure `java.util.List` `queryForAll`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L153afc.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153b00.  call temp:= `queryForAll`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.queryForAll:()Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L153b06.  v0:= temp @kind object;
  #L153b08.  return v0 @kind object;
  #L153b0a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153b0c.  v1:= "queryForAll threw exception" @kind object;
  #L153b10.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153b16.  v1:= new `java.lang.RuntimeException`;
  #L153b1a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153b20.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153b0a;
}
procedure `java.util.List` `queryForEq`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153b44.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153b48.  call temp:= `queryForEq`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L153b4e.  v0:= temp @kind object;
  #L153b50.  return v0 @kind object;
  #L153b52.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153b54.  v1:= new `java.lang.StringBuilder`;
  #L153b58.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153b5e.  v2:= "queryForEq threw exception on: " @kind object;
  #L153b62.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153b68.  v1:= temp @kind object;
  #L153b6a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153b70.  v1:= temp @kind object;
  #L153b72.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153b78.  v1:= temp @kind object;
  #L153b7a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153b80.  v1:= new `java.lang.RuntimeException`;
  #L153b84.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153b8a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153b52;
}
procedure `java.util.List` `queryForFieldValues`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L153bac.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153bb0.  call temp:= `queryForFieldValues`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L153bb6.  v0:= temp @kind object;
  #L153bb8.  return v0 @kind object;
  #L153bba.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153bbc.  v1:= "queryForFieldValues threw exception" @kind object;
  #L153bc0.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153bc6.  v1:= new `java.lang.RuntimeException`;
  #L153bca.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153bd0.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153bba;
}
procedure `java.util.List` `queryForFieldValuesArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L153bf4.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153bf8.  call temp:= `queryForFieldValuesArgs`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L153bfe.  v0:= temp @kind object;
  #L153c00.  return v0 @kind object;
  #L153c02.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153c04.  v1:= "queryForFieldValuesArgs threw exception" @kind object;
  #L153c08.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153c0e.  v1:= new `java.lang.RuntimeException`;
  #L153c12.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153c18.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153c02;
}
procedure `java.lang.Object` `queryForFirst`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153c3c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153c40.  call temp:= `queryForFirst`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L153c46.  v0:= temp @kind object;
  #L153c48.  return v0 @kind object;
  #L153c4a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153c4c.  v1:= new `java.lang.StringBuilder`;
  #L153c50.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153c56.  v2:= "queryForFirst threw exception on: " @kind object;
  #L153c5a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153c60.  v1:= temp @kind object;
  #L153c62.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153c68.  v1:= temp @kind object;
  #L153c6a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153c70.  v1:= temp @kind object;
  #L153c72.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153c78.  v1:= new `java.lang.RuntimeException`;
  #L153c7c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153c82.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153c4a;
}
procedure `java.lang.Object` `queryForId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153ca4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153ca8.  call temp:= `queryForId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L153cae.  v0:= temp @kind object;
  #L153cb0.  return v0 @kind object;
  #L153cb2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153cb4.  v1:= new `java.lang.StringBuilder`;
  #L153cb8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153cbe.  v2:= "queryForId threw exception on: " @kind object;
  #L153cc2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153cc8.  v1:= temp @kind object;
  #L153cca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153cd0.  v1:= temp @kind object;
  #L153cd2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153cd8.  v1:= temp @kind object;
  #L153cda.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153ce0.  v1:= new `java.lang.RuntimeException`;
  #L153ce4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153cea.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153cb2;
}
procedure `java.util.List` `queryForMatching`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153d0c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153d10.  call temp:= `queryForMatching`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L153d16.  v0:= temp @kind object;
  #L153d18.  return v0 @kind object;
  #L153d1a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153d1c.  v1:= new `java.lang.StringBuilder`;
  #L153d20.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153d26.  v2:= "queryForMatching threw exception on: " @kind object;
  #L153d2a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153d30.  v1:= temp @kind object;
  #L153d32.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153d38.  v1:= temp @kind object;
  #L153d3a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153d40.  v1:= temp @kind object;
  #L153d42.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153d48.  v1:= new `java.lang.RuntimeException`;
  #L153d4c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153d52.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153d1a;
}
procedure `java.util.List` `queryForMatchingArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153d74.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153d78.  call temp:= `queryForMatchingArgs`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L153d7e.  v0:= temp @kind object;
  #L153d80.  return v0 @kind object;
  #L153d82.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153d84.  v1:= new `java.lang.StringBuilder`;
  #L153d88.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153d8e.  v2:= "queryForMatchingArgs threw exception on: " @kind object;
  #L153d92.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153d98.  v1:= temp @kind object;
  #L153d9a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153da0.  v1:= temp @kind object;
  #L153da2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153da8.  v1:= temp @kind object;
  #L153daa.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153db0.  v1:= new `java.lang.RuntimeException`;
  #L153db4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153dba.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153d82;
}
procedure `java.lang.Object` `queryForSameId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153ddc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153de0.  call temp:= `queryForSameId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L153de6.  v0:= temp @kind object;
  #L153de8.  return v0 @kind object;
  #L153dea.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153dec.  v1:= new `java.lang.StringBuilder`;
  #L153df0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153df6.  v2:= "queryForSameId threw exception on: " @kind object;
  #L153dfa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153e00.  v1:= temp @kind object;
  #L153e02.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153e08.  v1:= temp @kind object;
  #L153e0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153e10.  v1:= temp @kind object;
  #L153e12.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153e18.  v1:= new `java.lang.RuntimeException`;
  #L153e1c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153e22.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153dea;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.dao.DatabaseResultsMapper` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153e44.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153e48.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L153e4e.  v0:= temp @kind object;
  #L153e50.  return v0 @kind object;
  #L153e52.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153e54.  v1:= new `java.lang.StringBuilder`;
  #L153e58.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153e5e.  v2:= "queryRaw threw exception on: " @kind object;
  #L153e62.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153e68.  v1:= temp @kind object;
  #L153e6a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153e70.  v1:= temp @kind object;
  #L153e72.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153e78.  v1:= temp @kind object;
  #L153e7a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153e80.  v1:= new `java.lang.RuntimeException`;
  #L153e84.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153e8a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153e52;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.dao.RawRowMapper` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153eac.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153eb0.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L153eb6.  v0:= temp @kind object;
  #L153eb8.  return v0 @kind object;
  #L153eba.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153ebc.  v1:= new `java.lang.StringBuilder`;
  #L153ec0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153ec6.  v2:= "queryRaw threw exception on: " @kind object;
  #L153eca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153ed0.  v1:= temp @kind object;
  #L153ed2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153ed8.  v1:= temp @kind object;
  #L153eda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153ee0.  v1:= temp @kind object;
  #L153ee2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153ee8.  v1:= new `java.lang.RuntimeException`;
  #L153eec.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153ef2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153eba;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType`[] v5 @kind object, `com.j256.ormlite.dao.RawRowObjectMapper` v6 @kind object, `java.lang.String`[] v7 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153f14.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153f18.  call temp:= `queryRaw`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L153f1e.  v0:= temp @kind object;
  #L153f20.  return v0 @kind object;
  #L153f22.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153f24.  v1:= new `java.lang.StringBuilder`;
  #L153f28.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153f2e.  v2:= "queryRaw threw exception on: " @kind object;
  #L153f32.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153f38.  v1:= temp @kind object;
  #L153f3a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153f40.  v1:= temp @kind object;
  #L153f42.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153f48.  v1:= temp @kind object;
  #L153f4a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153f50.  v1:= new `java.lang.RuntimeException`;
  #L153f54.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153f5a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153f22;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType`[] v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153f7c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153f80.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L153f86.  v0:= temp @kind object;
  #L153f88.  return v0 @kind object;
  #L153f8a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153f8c.  v1:= new `java.lang.StringBuilder`;
  #L153f90.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153f96.  v2:= "queryRaw threw exception on: " @kind object;
  #L153f9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153fa0.  v1:= temp @kind object;
  #L153fa2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153fa8.  v1:= temp @kind object;
  #L153faa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153fb0.  v1:= temp @kind object;
  #L153fb2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L153fb8.  v1:= new `java.lang.RuntimeException`;
  #L153fbc.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L153fc2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153f8a;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L153fe4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L153fe8.  call temp:= `queryRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L153fee.  v0:= temp @kind object;
  #L153ff0.  return v0 @kind object;
  #L153ff2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L153ff4.  v1:= new `java.lang.StringBuilder`;
  #L153ff8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153ffe.  v2:= "queryRaw threw exception on: " @kind object;
  #L154002.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154008.  v1:= temp @kind object;
  #L15400a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154010.  v1:= temp @kind object;
  #L154012.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L154018.  v1:= temp @kind object;
  #L15401a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L154020.  v1:= new `java.lang.RuntimeException`;
  #L154024.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15402a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L153ff2;
}
procedure `long` `queryRawValue`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15404c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154050.  call temp:= `queryRawValue`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @kind interface;
  #Try_end0.  
  #L154056.  v0:= temp @kind wide;
  #L154058.  return v0 @kind wide;
  #L15405a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15405c.  v1:= new `java.lang.StringBuilder`;
  #L154060.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154066.  v2:= "queryRawValue threw exception on: " @kind object;
  #L15406a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154070.  v1:= temp @kind object;
  #L154072.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154078.  v1:= temp @kind object;
  #L15407a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L154080.  v1:= temp @kind object;
  #L154082.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L154088.  v1:= new `java.lang.RuntimeException`;
  #L15408c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L154092.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15405a;
}
procedure `int` `refresh`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1540b4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1540b8.  call temp:= `refresh`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1540be.  v0:= temp;
  #L1540c0.  return v0;
  #L1540c2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1540c4.  v1:= new `java.lang.StringBuilder`;
  #L1540c8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1540ce.  v2:= "refresh threw exception on: " @kind object;
  #L1540d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1540d8.  v1:= temp @kind object;
  #L1540da.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1540e0.  v1:= temp @kind object;
  #L1540e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1540e8.  v1:= temp @kind object;
  #L1540ea.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1540f0.  v1:= new `java.lang.RuntimeException`;
  #L1540f4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1540fa.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1540c2;
}
procedure `void` `registerObserver`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.dao.Dao$DaoObserver` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15411c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154120.  call `registerObserver`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @kind interface;
  #L154126.  return @kind void;
}
procedure `void` `rollBack`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L154138.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15413c.  call `rollBack`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L154142.  return @kind void;
  #L154144.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L154146.  v1:= new `java.lang.StringBuilder`;
  #L15414a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154150.  v2:= "rollBack(" @kind object;
  #L154154.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15415a.  v1:= temp @kind object;
  #L15415c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154162.  v1:= temp @kind object;
  #L154164.  v2:= ") threw exception" @kind object;
  #L154168.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15416e.  v1:= temp @kind object;
  #L154170.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L154176.  v1:= temp @kind object;
  #L154178.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15417e.  v1:= new `java.lang.RuntimeException`;
  #L154182.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L154188.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L154144;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object, `boolean` v5 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1541ac.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1541b0.  call `setAutoCommit`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @kind interface;
  #Try_end0.  
  #L1541b6.  return @kind void;
  #L1541b8.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1541ba.  v1:= new `java.lang.StringBuilder`;
  #L1541be.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1541c4.  v2:= "setAutoCommit(" @kind object;
  #L1541c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1541ce.  v1:= temp @kind object;
  #L1541d0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1541d6.  v1:= temp @kind object;
  #L1541d8.  v2:= "," @kind object;
  #L1541dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1541e2.  v1:= temp @kind object;
  #L1541e4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1541ea.  v1:= temp @kind object;
  #L1541ec.  v2:= ") threw exception" @kind object;
  #L1541f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1541f6.  v1:= temp @kind object;
  #L1541f8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1541fe.  v1:= temp @kind object;
  #L154200.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L154206.  v1:= new `java.lang.RuntimeException`;
  #L15420a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L154210.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1541b8;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L154234.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154238.  call `setObjectCache`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @kind interface;
  #Try_end0.  
  #L15423e.  return @kind void;
  #L154240.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L154242.  v1:= new `java.lang.StringBuilder`;
  #L154246.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15424c.  v2:= "setObjectCache threw exception on " @kind object;
  #L154250.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154256.  v1:= temp @kind object;
  #L154258.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15425e.  v1:= temp @kind object;
  #L154260.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L154266.  v1:= temp @kind object;
  #L154268.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15426e.  v1:= new `java.lang.RuntimeException`;
  #L154272.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L154278.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L154240;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `boolean` v4 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectCache:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15429c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1542a0.  call `setObjectCache`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Z)V` @kind interface;
  #Try_end0.  
  #L1542a6.  return @kind void;
  #L1542a8.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1542aa.  v1:= new `java.lang.StringBuilder`;
  #L1542ae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1542b4.  v2:= "setObjectCache(" @kind object;
  #L1542b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1542be.  v1:= temp @kind object;
  #L1542c0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1542c6.  v1:= temp @kind object;
  #L1542c8.  v2:= ") threw exception" @kind object;
  #L1542cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1542d2.  v1:= temp @kind object;
  #L1542d4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1542da.  v1:= temp @kind object;
  #L1542dc.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1542e2.  v1:= new `java.lang.RuntimeException`;
  #L1542e6.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1542ec.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1542a8;
}
procedure `void` `setObjectFactory`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.table.ObjectFactory` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154310.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154314.  call `setObjectFactory`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @kind interface;
  #L15431a.  return @kind void;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `startThreadConnection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L15432c.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154330.  call temp:= `startThreadConnection`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #Try_end0.  
  #L154336.  v0:= temp @kind object;
  #L154338.  return v0 @kind object;
  #L15433a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15433c.  v1:= "startThreadConnection() threw exception" @kind object;
  #L154340.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L154346.  v1:= new `java.lang.RuntimeException`;
  #L15434a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L154350.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15433a;
}
procedure `void` `unregisterObserver`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.dao.Dao$DaoObserver` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154374.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154378.  call `unregisterObserver`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @kind interface;
  #L15437e.  return @kind void;
}
procedure `int` `update`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedUpdate` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L154390.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154394.  call temp:= `update`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @kind interface;
  #Try_end0.  
  #L15439a.  v0:= temp;
  #L15439c.  return v0;
  #L15439e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1543a0.  v1:= new `java.lang.StringBuilder`;
  #L1543a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1543aa.  v2:= "update threw exception on: " @kind object;
  #L1543ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1543b4.  v1:= temp @kind object;
  #L1543b6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1543bc.  v1:= temp @kind object;
  #L1543be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1543c4.  v1:= temp @kind object;
  #L1543c6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1543cc.  v1:= new `java.lang.RuntimeException`;
  #L1543d0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1543d6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15439e;
}
procedure `int` `update`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1543f8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1543fc.  call temp:= `update`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L154402.  v0:= temp;
  #L154404.  return v0;
  #L154406.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L154408.  v1:= new `java.lang.StringBuilder`;
  #L15440c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154412.  v2:= "update threw exception on: " @kind object;
  #L154416.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15441c.  v1:= temp @kind object;
  #L15441e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154424.  v1:= temp @kind object;
  #L154426.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15442c.  v1:= temp @kind object;
  #L15442e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L154434.  v1:= new `java.lang.RuntimeException`;
  #L154438.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15443e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L154406;
}
procedure `com.j256.ormlite.stmt.UpdateBuilder` `updateBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154460.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154464.  call temp:= `updateBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @kind interface;
  #L15446a.  v0:= temp @kind object;
  #L15446c.  return v0 @kind object;
}
procedure `int` `updateId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L154480.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L154484.  call temp:= `updateId`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L15448a.  v0:= temp;
  #L15448c.  return v0;
  #L15448e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L154490.  v1:= new `java.lang.StringBuilder`;
  #L154494.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15449a.  v2:= "updateId threw exception on: " @kind object;
  #L15449e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1544a4.  v1:= temp @kind object;
  #L1544a6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1544ac.  v1:= temp @kind object;
  #L1544ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1544b4.  v1:= temp @kind object;
  #L1544b6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1544bc.  v1:= new `java.lang.RuntimeException`;
  #L1544c0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1544c6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15448e;
}
procedure `int` `updateRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1544e8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1544ec.  call temp:= `updateRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L1544f2.  v0:= temp;
  #L1544f4.  return v0;
  #L1544f6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1544f8.  v1:= new `java.lang.StringBuilder`;
  #L1544fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154502.  v2:= "updateRaw threw exception on: " @kind object;
  #L154506.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15450c.  v1:= temp @kind object;
  #L15450e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154514.  v1:= temp @kind object;
  #L154516.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15451c.  v1:= temp @kind object;
  #L15451e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L154524.  v1:= new `java.lang.RuntimeException`;
  #L154528.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15452e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1544f6;
}

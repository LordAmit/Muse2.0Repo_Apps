record `com.j256.ormlite.field.types.EnumStringType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseEnumType` @kind class {
}
global `int` `@@com.j256.ormlite.field.types.EnumStringType.DEFAULT_WIDTH` @AccessFlag PUBLIC_STATIC;
global `com.j256.ormlite.field.types.EnumStringType` `@@com.j256.ormlite.field.types.EnumStringType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/EnumStringType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15cc2c.  v0:= 100I;
  #L15cc30.  `@@com.j256.ormlite.field.types.EnumStringType.DEFAULT_WIDTH` @type ^`int` := v0;
  #L15cc34.  v0:= new `com.j256.ormlite.field.types.EnumStringType`;
  #L15cc38.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.<init>:()V` @kind direct;
  #L15cc3e.  `@@com.j256.ormlite.field.types.EnumStringType.singleTon` @type ^`com.j256.ormlite.field.types.EnumStringType` := v0 @kind object;
  #L15cc42.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.EnumStringType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15cc54.  v0:= `@@com.j256.ormlite.field.SqlType.STRING` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L15cc58.  v1:= 1I;
  #L15cc5a.  v1:= new `java.lang.Class`[v1];
  #L15cc5e.  v2:= 0I;
  #L15cc60.  v3:= constclass @type ^`java.lang.Enum` @kind object;
  #L15cc64.  v1[v2]:= v3 @kind object;
  #L15cc68.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseEnumType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L15cc6e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.EnumStringType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L15cc80.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseEnumType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L15cc86.  return @kind void;
}
procedure `com.j256.ormlite.field.types.EnumStringType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getSingleton:()Lcom/j256/ormlite/field/types/EnumStringType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15cc98.  v0:= `@@com.j256.ormlite.field.types.EnumStringType.singleTon` @type ^`com.j256.ormlite.field.types.EnumStringType` @kind object;
  #L15cc9c.  return v0 @kind object;
}
procedure `int` `getDefaultWidth`(`com.j256.ormlite.field.types.EnumStringType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getDefaultWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ccb0.  v0:= `@@com.j256.ormlite.field.types.EnumStringType.DEFAULT_WIDTH` @type ^`int`;
  #L15ccb4.  return v0;
}
procedure `java.lang.String` `getEnumName`(`com.j256.ormlite.field.types.EnumStringType` v1 @kind this, `java.lang.Enum` v2 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getEnumName:(Ljava/lang/Enum;)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15ccc8.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L15ccce.  v0:= temp @kind object;
  #L15ccd0.  return v0 @kind object;
}
procedure `java.lang.Object` `javaToSqlArg`(`com.j256.ormlite.field.types.EnumStringType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.javaToSqlArg:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cce4.  v3:= (`java.lang.Enum`) v3 @kind object;
  #L15cce8.  call temp:= `getEnumName`(v1, v3) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getEnumName:(Ljava/lang/Enum;)Ljava/lang/String;` @kind virtual;
  #L15ccee.  v0:= temp @kind object;
  #L15ccf0.  return v0 @kind object;
}
procedure `java.lang.Object` `makeConfigObject`(`com.j256.ormlite.field.types.EnumStringType` v6 @kind this, `com.j256.ormlite.field.FieldType` v7 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.makeConfigObject:(Lcom/j256/ormlite/field/FieldType;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15cd04.  v2:= new `java.util.HashMap`;
  #L15cd08.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L15cd0e.  call temp:= `getType`(v7) @signature `Lcom/j256/ormlite/field/FieldType;.getType:()Ljava/lang/Class;` @kind virtual;
  #L15cd14.  v0:= temp @kind object;
  #L15cd16.  call temp:= `getEnumConstants`(v0) @signature `Ljava/lang/Class;.getEnumConstants:()[Ljava/lang/Object;` @kind virtual;
  #L15cd1c.  v0:= temp @kind object;
  #L15cd1e.  v0:= (`java.lang.Enum`[]) v0 @kind object;
  #L15cd22.  v0:= (`java.lang.Enum`[]) v0 @kind object;
  #L15cd26.  if v0 != 0 then goto L15cd70;
  #L15cd2a.  v0:= new `java.sql.SQLException`;
  #L15cd2e.  v1:= new `java.lang.StringBuilder`;
  #L15cd32.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15cd38.  v2:= "Field " @kind object;
  #L15cd3c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd42.  v1:= temp @kind object;
  #L15cd44.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd4a.  v1:= temp @kind object;
  #L15cd4c.  v2:= " improperly configured as type " @kind object;
  #L15cd50.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd56.  v1:= temp @kind object;
  #L15cd58.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cd5e.  v1:= temp @kind object;
  #L15cd60.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cd66.  v1:= temp @kind object;
  #L15cd68.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cd6e.  throw v0;
  #L15cd70.  v3:= length @variable v0;
  #L15cd72.  v1:= 0I;
  #L15cd74.  if v1 >= v3 then goto L15cd90;
  #L15cd78.  v4:= v0[v1] @kind object;
  #L15cd7c.  call temp:= `getEnumName`(v6, v4) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.getEnumName:(Ljava/lang/Enum;)Ljava/lang/String;` @kind virtual;
  #L15cd82.  v5:= temp @kind object;
  #L15cd84.  call temp:= `put`(v2, v5, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15cd8a.  v1:= v1 + 1;
  #L15cd8e.  goto L15cd74;
  #L15cd90.  return v2 @kind object;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.EnumStringType` v0 @kind this, `com.j256.ormlite.field.FieldType` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L15cda4.  return v2 @kind object;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.EnumStringType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15cdb8.  call temp:= `getString`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getString:(I)Ljava/lang/String;` @kind interface;
  #L15cdbe.  v0:= temp @kind object;
  #L15cdc0.  return v0 @kind object;
}
procedure `java.lang.Object` `sqlArgToJava`(`com.j256.ormlite.field.types.EnumStringType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.Object` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.sqlArgToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cdd4.  if v3 != 0 then goto L15cdda;
  #L15cdd8.  return v4 @kind object;
  #L15cdda.  v4:= (`java.lang.String`) v4 @kind object;
  #L15cdde.  call temp:= `getDataTypeConfigObj`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.getDataTypeConfigObj:()Ljava/lang/Object;` @kind virtual;
  #L15cde4.  v0:= temp @kind object;
  #L15cde6.  v0:= (`java.util.Map`) v0 @kind object;
  #L15cdea.  if v0 != 0 then goto L15ce02;
  #L15cdee.  v0:= 0I;
  #L15cdf0.  call temp:= `getUnknownEnumVal`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.getUnknownEnumVal:()Ljava/lang/Enum;` @kind virtual;
  #L15cdf6.  v1:= temp @kind object;
  #L15cdf8.  call temp:= `enumVal`(v3, v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.enumVal:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/lang/Enum;` @kind static;
  #L15cdfe.  v4:= temp @kind object;
  #L15ce00.  goto L15cdd8;
  #L15ce02.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15ce08.  v0:= temp @kind object;
  #L15ce0a.  v0:= (`java.lang.Enum`) v0 @kind object;
  #L15ce0e.  call temp:= `getUnknownEnumVal`(v3) @signature `Lcom/j256/ormlite/field/FieldType;.getUnknownEnumVal:()Ljava/lang/Enum;` @kind virtual;
  #L15ce14.  v1:= temp @kind object;
  #L15ce16.  call temp:= `enumVal`(v3, v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/EnumStringType;.enumVal:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/lang/Enum;` @kind static;
  #L15ce1c.  v4:= temp @kind object;
  #L15ce1e.  goto L15cdd8;
}

record `com.j256.ormlite.stmt.ThreadLocalSelectArg` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.BaseArgumentHolder` @kind class {
  `java.lang.ThreadLocal` `com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L164d64.  call `<init>`(v1) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:()V` @kind direct;
  #L164d6a.  v0:= new `java.lang.ThreadLocal`;
  #L164d6e.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L164d74.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L164d78.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `com.j256.ormlite.field.SqlType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Lcom/j256/ormlite/field/SqlType;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L164d8c.  call `<init>`(v1, v2) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L164d92.  v0:= new `java.lang.ThreadLocal`;
  #L164d96.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L164d9c.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L164da0.  call `setValue`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L164da6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L164db8.  call `<init>`(v1) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:()V` @kind direct;
  #L164dbe.  v0:= new `java.lang.ThreadLocal`;
  #L164dc2.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L164dc8.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L164dcc.  call `setValue`(v1, v2) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L164dd2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L164de4.  call `<init>`(v1, v2) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L164dea.  v0:= new `java.lang.ThreadLocal`;
  #L164dee.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L164df4.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L164df8.  call `setValue`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L164dfe.  return @kind void;
}
procedure `java.lang.Object` `getValue`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.getValue:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L164e10.  v0:= v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L164e14.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L164e1a.  v0:= temp @kind object;
  #L164e1c.  v0:= (`com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper`) v0 @kind object;
  #L164e20.  if v0 != 0 then goto L164e28;
  #L164e24.  v0:= 0I;
  #L164e26.  return v0 @kind object;
  #L164e28.  v0:= v0.`com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper.value` @type ^`java.lang.Object` @kind object;
  #L164e2c.  goto L164e26;
}
procedure `boolean` `isValueSet`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.isValueSet:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L164e40.  v0:= v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L164e44.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L164e4a.  v0:= temp @kind object;
  #L164e4c.  if v0 == 0 then goto L164e54;
  #L164e50.  v0:= 1I;
  #L164e52.  return v0;
  #L164e54.  v0:= 0I;
  #L164e56.  goto L164e52;
}
procedure `void` `setValue`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L164e68.  v0:= v2.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L164e6c.  v1:= new `com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper`;
  #L164e70.  call `<init>`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg$ValueWrapper;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L164e76.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L164e7c.  return @kind void;
}

record `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `boolean` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @AccessFlag PROTECTED;
  `com.j256.ormlite.android.AndroidConnectionSource` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @AccessFlag PROTECTED;
  `boolean` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @AccessFlag PRIVATE_VOLATILE;
}
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @AccessFlag PROTECTED_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L12fb84.  v0:= constclass @type ^`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` @kind object;
  #L12fb88.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L12fb8e.  v0:= temp @kind object;
  #L12fb90.  `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L12fb94.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v3 @kind this, `android.content.Context` v4 @kind object, `java.lang.String` v5 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v6 @kind object, `int` v7 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L12fba8.  call `<init>`(v3, v4, v5, v6, v7) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L12fbae.  v0:= new `com.j256.ormlite.android.AndroidConnectionSource`;
  #L12fbb2.  call `<init>`(v0, v3) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteOpenHelper;)V` @kind direct;
  #L12fbb8.  v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` := v0 @kind object;
  #L12fbbc.  v0:= 1I;
  #L12fbbe.  v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L12fbc2.  v0:= `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L12fbc6.  v1:= "{}: constructed connectionSource {}" @kind object;
  #L12fbca.  v2:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L12fbce.  call `trace`(v0, v1, v3, v2) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L12fbd4.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v6 @kind this, `android.content.Context` v7 @kind object, `java.lang.String` v8 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L12fbe8.  call temp:= `openFileId`(v7, v11) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFileId:(Landroid/content/Context;I)Ljava/io/InputStream;` @kind static;
  #L12fbee.  v5:= temp @kind object;
  #L12fbf0.  v0:= v6 @kind object;
  #L12fbf2.  v1:= v7 @kind object;
  #L12fbf4.  v2:= v8 @kind object;
  #L12fbf6.  v3:= v9 @kind object;
  #L12fbf8.  v4:= v10;
  #L12fbfa.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @kind direct;
  #L12fc00.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v6 @kind this, `android.content.Context` v7 @kind object, `java.lang.String` v8 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v9 @kind object, `int` v10 , `java.io.File` v11 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L12fc14.  call temp:= `openFile`(v11) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFile:(Ljava/io/File;)Ljava/io/InputStream;` @kind static;
  #L12fc1a.  v5:= temp @kind object;
  #L12fc1c.  v0:= v6 @kind object;
  #L12fc1e.  v1:= v7 @kind object;
  #L12fc20.  v2:= v8 @kind object;
  #L12fc22.  v3:= v9 @kind object;
  #L12fc24.  v4:= v10;
  #L12fc26.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @kind direct;
  #L12fc2c.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.content.Context` v5 @kind object, `java.lang.String` v6 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v7 @kind object, `int` v8 , `java.io.InputStream` v9 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12fc40.  v2:= 0I;
  #L12fc42.  call `<init>`(v4, v5, v6, v7, v8) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L12fc48.  v0:= new `com.j256.ormlite.android.AndroidConnectionSource`;
  #L12fc4c.  call `<init>`(v0, v4) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteOpenHelper;)V` @kind direct;
  #L12fc52.  v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` := v0 @kind object;
  #L12fc56.  v0:= 1I;
  #L12fc58.  v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L12fc5c.  if v9 != 0 then goto L12fc62;
  #L12fc60.  return @kind void;
  #Try_start0.  
  #L12fc62.  v1:= new `java.io.BufferedReader`;
  #L12fc66.  v0:= new `java.io.InputStreamReader`;
  #L12fc6a.  call `<init>`(v0, v9) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L12fc70.  v3:= 4096I;
  #L12fc74.  call `<init>`(v1, v0, v3) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;I)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L12fc7a.  call temp:= `loadDatabaseConfigFromReader`(v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.loadDatabaseConfigFromReader:(Ljava/io/BufferedReader;)Ljava/util/List;` @kind static;
  #L12fc80.  v0:= temp @kind object;
  #L12fc82.  call `addCachedDatabaseConfigs`(v0) @signature `Lcom/j256/ormlite/dao/DaoManager;.addCachedDatabaseConfigs:(Ljava/util/Collection;)V` @kind static;
  #Try_end1.  
  #L12fc88.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L12fc8e.  call `closeQuietly`(v2) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L12fc94.  goto L12fc60;
  #L12fc96.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L12fc98.  v1:= v2 @kind object;
  #Try_start2.  
  #L12fc9a.  v2:= new `java.lang.IllegalStateException`;
  #L12fc9e.  v3:= "Could not load object config file" @kind object;
  #L12fca2.  call `<init>`(v2, v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L12fca8.  throw v2;
  #Try_end2.  
  #L12fcaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12fcac.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L12fcb2.  call `closeQuietly`(v9) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L12fcb8.  throw v0;
  #L12fcba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12fcbc.  v1:= v2 @kind object;
  #L12fcbe.  goto L12fcac;
  #L12fcc0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12fcc2.  v9:= v2 @kind object;
  #L12fcc4.  goto L12fcac;
  #L12fcc6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L12fcc8.  v9:= v2 @kind object;
  #L12fcca.  goto L12fc9a;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L12fc96;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L12fcba;
  catch `java.sql.SQLException` @[Try_start1..Try_end1] goto L12fcc6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L12fcc0;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L12fcaa;
}
procedure `java.io.InputStream` `openFile`(`java.io.File` v4 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFile:(Ljava/io/File;)Ljava/io/InputStream;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12fd04.  if v4 != 0 then goto L12fd0c;
  #L12fd08.  v0:= 0I;
  #L12fd0a.  return v0 @kind object;
  #Try_start0.  
  #L12fd0c.  v0:= new `java.io.FileInputStream`;
  #L12fd10.  call `<init>`(v0, v4) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #Try_end0.  
  #L12fd16.  goto L12fd0a;
  #L12fd18.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L12fd1a.  v1:= new `java.lang.IllegalArgumentException`;
  #L12fd1e.  v2:= new `java.lang.StringBuilder`;
  #L12fd22.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12fd28.  v3:= "Could not open config file " @kind object;
  #L12fd2c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12fd32.  v2:= temp @kind object;
  #L12fd34.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12fd3a.  v2:= temp @kind object;
  #L12fd3c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12fd42.  v2:= temp @kind object;
  #L12fd44.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L12fd4a.  throw v1;
  catch `java.io.FileNotFoundException` @[Try_start0..Try_end0] goto L12fd18;
}
procedure `java.io.InputStream` `openFileId`(`android.content.Context` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFileId:(Landroid/content/Context;I)Ljava/io/InputStream;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L12fd6c.  call temp:= `getResources`(v3) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L12fd72.  v0:= temp @kind object;
  #L12fd74.  call temp:= `openRawResource`(v0, v4) @signature `Landroid/content/res/Resources;.openRawResource:(I)Ljava/io/InputStream;` @kind virtual;
  #L12fd7a.  v0:= temp @kind object;
  #L12fd7c.  if v0 != 0 then goto L12fdb2;
  #L12fd80.  v0:= new `java.lang.IllegalStateException`;
  #L12fd84.  v1:= new `java.lang.StringBuilder`;
  #L12fd88.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12fd8e.  v2:= "Could not find object config file with id " @kind object;
  #L12fd92.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12fd98.  v1:= temp @kind object;
  #L12fd9a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L12fda0.  v1:= temp @kind object;
  #L12fda2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12fda8.  v1:= temp @kind object;
  #L12fdaa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12fdb0.  throw v0;
  #L12fdb2.  return v0 @kind object;
}
procedure `void` `close`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12fdc4.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.close:()V` @kind super;
  #L12fdca.  v0:= v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L12fdce.  call `close`(v0) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.close:()V` @kind virtual;
  #L12fdd4.  v0:= 0I;
  #L12fdd6.  v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L12fdda.  return @kind void;
}
procedure `com.j256.ormlite.support.ConnectionSource` `getConnectionSource`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v3 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12fdec.  v0:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` @kind boolean;
  #L12fdf0.  if v0 != 0 then goto L12fe0c;
  #L12fdf4.  v0:= `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L12fdf8.  v1:= new `java.lang.IllegalStateException`;
  #L12fdfc.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L12fe02.  v2:= "Getting connectionSource was called after closed" @kind object;
  #L12fe06.  call `warn`(v0, v1, v2) @signature `Lcom/j256/ormlite/logger/Logger;.warn:(Ljava/lang/Throwable;Ljava/lang/String;)V` @kind virtual;
  #L12fe0c.  v0:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L12fe10.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.Dao` `getDao`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12fe24.  call temp:= `getConnectionSource`(v1) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L12fe2a.  v0:= temp @kind object;
  #L12fe2c.  call temp:= `createDao`(v0, v2) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L12fe32.  v0:= temp @kind object;
  #L12fe34.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `getRuntimeExceptionDao`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getRuntimeExceptionDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L12fe48.  call temp:= `getDao`(v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind virtual;
  #L12fe4e.  v0:= temp @kind object;
  #L12fe50.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L12fe54.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #Try_end0.  
  #L12fe5a.  return v1 @kind object;
  #L12fe5c.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L12fe5e.  v1:= new `java.lang.RuntimeException`;
  #L12fe62.  v2:= new `java.lang.StringBuilder`;
  #L12fe66.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12fe6c.  v3:= "Could not create RuntimeExcepitionDao for class " @kind object;
  #L12fe70.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12fe76.  v2:= temp @kind object;
  #L12fe78.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12fe7e.  v2:= temp @kind object;
  #L12fe80.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12fe86.  v2:= temp @kind object;
  #L12fe88.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L12fe8e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L12fe5c;
}
procedure `boolean` `isOpen`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12feb0.  v0:= v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` @kind boolean;
  #L12feb4.  return v0;
}
procedure `void` `onCreate`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.database.sqlite.SQLiteDatabase` v5 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12fec8.  v0:= 1I;
  #L12feca.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L12fed0.  v3:= temp @kind object;
  #L12fed2.  v1:= 0I;
  #L12fed4.  call temp:= `getSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getSpecialConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L12feda.  v2:= temp @kind object;
  #L12fedc.  v1:= 0I;
  #L12fede.  if v2 != 0 then goto L12ff28;
  #L12fee2.  v1:= new `com.j256.ormlite.android.AndroidDatabaseConnection`;
  #L12fee6.  v2:= v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L12feea.  call `<init>`(v1, v5, v0, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseConnection;.<init>:(Landroid/database/sqlite/SQLiteDatabase;ZZ)V` @kind direct;
  #Try_start0.  
  #L12fef0.  call temp:= `saveSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.saveSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #Try_start1.  
  #L12fef6.  call `onCreate`(v4, v5, v3) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;)V` @kind virtual;
  #Try_end1.  
  #L12fefc.  if v0 == 0 then goto L12ff06;
  #L12ff00.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L12ff06.  return @kind void;
  #L12ff08.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L12ff0a.  v1:= new `java.lang.IllegalStateException`;
  #L12ff0e.  v2:= "Could not save special connection" @kind object;
  #L12ff12.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L12ff18.  throw v1;
  #L12ff1a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12ff1c.  if v0 == 0 then goto L12ff26;
  #L12ff20.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L12ff26.  throw v2;
  #L12ff28.  v0:= v1;
  #L12ff2a.  v1:= v2 @kind object;
  #L12ff2c.  goto L12fef6;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L12ff08;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L12ff1a;
}
procedure `void` `onCreate`(`android.database.sqlite.SQLiteDatabase` v0 @kind object, `com.j256.ormlite.support.ConnectionSource` v1 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `onUpgrade`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.database.sqlite.SQLiteDatabase` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12ff58.  v0:= 1I;
  #L12ff5a.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L12ff60.  v3:= temp @kind object;
  #L12ff62.  v1:= 0I;
  #L12ff64.  call temp:= `getSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getSpecialConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L12ff6a.  v2:= temp @kind object;
  #L12ff6c.  v1:= 0I;
  #L12ff6e.  if v2 != 0 then goto L12ffb8;
  #L12ff72.  v1:= new `com.j256.ormlite.android.AndroidDatabaseConnection`;
  #L12ff76.  v2:= v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L12ff7a.  call `<init>`(v1, v5, v0, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseConnection;.<init>:(Landroid/database/sqlite/SQLiteDatabase;ZZ)V` @kind direct;
  #Try_start0.  
  #L12ff80.  call temp:= `saveSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.saveSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #Try_start1.  
  #L12ff86.  call `onUpgrade`(v4, v5, v3, v6, v7) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;II)V` @kind virtual;
  #Try_end1.  
  #L12ff8c.  if v0 == 0 then goto L12ff96;
  #L12ff90.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L12ff96.  return @kind void;
  #L12ff98.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L12ff9a.  v1:= new `java.lang.IllegalStateException`;
  #L12ff9e.  v2:= "Could not save special connection" @kind object;
  #L12ffa2.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L12ffa8.  throw v1;
  #L12ffaa.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L12ffac.  if v0 == 0 then goto L12ffb6;
  #L12ffb0.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L12ffb6.  throw v2;
  #L12ffb8.  v0:= v1;
  #L12ffba.  v1:= v2 @kind object;
  #L12ffbc.  goto L12ff86;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L12ff98;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L12ffaa;
}
procedure `void` `onUpgrade`(`android.database.sqlite.SQLiteDatabase` v0 @kind object, `com.j256.ormlite.support.ConnectionSource` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v2 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12ffe8.  v0:= new `java.lang.StringBuilder`;
  #L12ffec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12fff2.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L12fff8.  v1:= temp @kind object;
  #L12fffa.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L130000.  v1:= temp @kind object;
  #L130002.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L130008.  v0:= temp @kind object;
  #L13000a.  v1:= "@" @kind object;
  #L13000e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L130014.  v0:= temp @kind object;
  #L130016.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L13001c.  v1:= temp;
  #L13001e.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L130024.  v1:= temp @kind object;
  #L130026.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13002c.  v0:= temp @kind object;
  #L13002e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L130034.  v0:= temp @kind object;
  #L130036.  return v0 @kind object;
}

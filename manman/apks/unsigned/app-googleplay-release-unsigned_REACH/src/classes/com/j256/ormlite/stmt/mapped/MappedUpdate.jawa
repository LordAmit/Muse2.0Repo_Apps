record `com.j256.ormlite.stmt.mapped.MappedUpdate` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
  `com.j256.ormlite.field.FieldType` `com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @AccessFlag PRIVATE_FINAL;
  `int` `com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedUpdate` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1674b8.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L1674be.  v0.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` := v4 @kind object;
  #L1674c2.  v0.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @type ^`int` := v5;
  #L1674c6.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedUpdate` `build`(`com.j256.ormlite.db.DatabaseType` v13 @kind object, `com.j256.ormlite.table.TableInfo` v14 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedUpdate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1674d8.  call temp:= `getIdField`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L1674de.  v7:= temp @kind object;
  #L1674e0.  if v7 != 0 then goto L16752a;
  #L1674e4.  v0:= new `java.sql.SQLException`;
  #L1674e8.  v1:= new `java.lang.StringBuilder`;
  #L1674ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1674f2.  v2:= "Cannot update " @kind object;
  #L1674f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1674fc.  v1:= temp @kind object;
  #L1674fe.  call temp:= `getDataClass`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L167504.  v2:= temp @kind object;
  #L167506.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16750c.  v1:= temp @kind object;
  #L16750e.  v2:= " because it doesn't have an id field" @kind object;
  #L167512.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L167518.  v1:= temp @kind object;
  #L16751a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L167520.  v1:= temp @kind object;
  #L167522.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L167528.  throw v0;
  #L16752a.  v8:= new `java.lang.StringBuilder`;
  #L16752e.  v0:= 64I;
  #L167532.  call `<init>`(v8, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L167538.  v0:= "UPDATE " @kind object;
  #L16753c.  call temp:= `getTableName`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L167542.  v1:= temp @kind object;
  #L167544.  call `appendTableName`(v13, v8, v0, v1) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L16754a.  v2:= 1I;
  #L16754c.  v1:= 0I;
  #L16754e.  v4:= 0I;
  #L167550.  v5:= -1I;
  #L167552.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L167558.  v6:= temp @kind object;
  #L16755a.  v9:= length @variable v6;
  #L16755c.  v0:= 0I;
  #L16755e.  v3:= v0;
  #L167560.  v0:= v1;
  #L167562.  if v3 >= v9 then goto L167592;
  #L167566.  v1:= v6[v3] @kind object;
  #L16756a.  call temp:= `isFieldUpdatable`(v1, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L167570.  v10:= temp;
  #L167572.  if v10 == 0 then goto L16758a;
  #L167576.  call temp:= `isVersion`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isVersion:()Z` @kind virtual;
  #L16757c.  v10:= temp;
  #L16757e.  if v10 == 0 then goto L167586;
  #L167582.  v5:= v0;
  #L167584.  v4:= v1 @kind object;
  #L167586.  v0:= v0 + 1;
  #L16758a.  v1:= v3 + 1;
  #L16758e.  v3:= v1;
  #L167590.  goto L167562;
  #L167592.  v0:= v0 + 1;
  #L167596.  if v4 == 0 then goto L16759e;
  #L16759a.  v0:= v0 + 1;
  #L16759e.  v3:= new `com.j256.ormlite.field.FieldType`[v0];
  #L1675a2.  v1:= 0I;
  #L1675a4.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L1675aa.  v9:= temp @kind object;
  #L1675ac.  v10:= length @variable v9;
  #L1675ae.  v0:= 0I;
  #L1675b0.  v6:= v0;
  #L1675b2.  v0:= v2;
  #L1675b4.  if v6 >= v10 then goto L167618;
  #L1675b8.  v11:= v9[v6] @kind object;
  #L1675bc.  call temp:= `isFieldUpdatable`(v11, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L1675c2.  v2:= temp;
  #L1675c4.  if v2 != 0 then goto L1675dc;
  #L1675c8.  v12:= v1;
  #L1675ca.  v1:= v0;
  #L1675cc.  v0:= v12;
  #L1675ce.  v2:= v6 + 1;
  #L1675d2.  v6:= v2;
  #L1675d4.  v12:= v0;
  #L1675d6.  v0:= v1;
  #L1675d8.  v1:= v12;
  #L1675da.  goto L1675b4;
  #L1675dc.  if v0 == 0 then goto L16760c;
  #L1675e0.  v0:= "SET " @kind object;
  #L1675e4.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1675ea.  v0:= 0I;
  #L1675ec.  v2:= 0I;
  #L1675ee.  call `appendFieldColumnName`(v13, v8, v11, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L1675f4.  v2:= v1 + 1;
  #L1675f8.  v3[v1]:= v11 @kind object;
  #L1675fc.  v1:= "= ?" @kind object;
  #L167600.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L167606.  v1:= v0;
  #L167608.  v0:= v2;
  #L16760a.  goto L1675ce;
  #L16760c.  v2:= ", " @kind object;
  #L167610.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L167616.  goto L1675ec;
  #L167618.  v0:= 32I;
  #L16761c.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L167622.  v0:= 0I;
  #L167624.  call `appendWhereFieldEq`(v13, v7, v8, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L16762a.  v0:= v1 + 1;
  #L16762e.  v3[v1]:= v7 @kind object;
  #L167632.  if v4 == 0 then goto L16765a;
  #L167636.  v1:= " AND " @kind object;
  #L16763a.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L167640.  v1:= 0I;
  #L167642.  call `appendFieldColumnName`(v13, v8, v4, v1) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L167648.  v1:= "= ?" @kind object;
  #L16764c.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L167652.  v1:= v0 + 1;
  #L167656.  v3[v0]:= v4 @kind object;
  #L16765a.  v0:= new `com.j256.ormlite.stmt.mapped.MappedUpdate`;
  #L16765e.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L167664.  v2:= temp @kind object;
  #L167666.  v1:= v14 @kind object;
  #L167668.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;I)V` @kind direct;
  #L16766e.  return v0 @kind object;
}
procedure `boolean` `isFieldUpdatable`(`com.j256.ormlite.field.FieldType` v1 @kind object, `com.j256.ormlite.field.FieldType` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L167680.  if v1 == v2 then goto L16769c;
  #L167684.  call temp:= `isForeignCollection`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isForeignCollection:()Z` @kind virtual;
  #L16768a.  v0:= temp;
  #L16768c.  if v0 != 0 then goto L16769c;
  #L167690.  call temp:= `isReadOnly`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isReadOnly:()Z` @kind virtual;
  #L167696.  v0:= temp;
  #L167698.  if v0 == 0 then goto L1676a0;
  #L16769c.  v0:= 0I;
  #L16769e.  return v0;
  #L1676a0.  v0:= 1I;
  #L1676a2.  goto L16769e;
}
procedure `int` `update`(`com.j256.ormlite.stmt.mapped.MappedUpdate` v9 @kind this, `com.j256.ormlite.support.DatabaseConnection` v10 @kind object, `java.lang.Object` v11 @kind object, `com.j256.ormlite.dao.ObjectCache` v12 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.update:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1676b4.  v1:= 0I;
  #L1676b6.  v0:= 0I;
  #Try_start0.  
  #L1676b8.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L1676bc.  v2:= length @variable v2;
  #L1676be.  v3:= 1I;
  #L1676c0.  if v2 > v3 then goto L1676c6;
  #L1676c4.  return v0;
  #L1676c6.  call temp:= `getFieldObjects`(v9, v11) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L1676cc.  v3:= temp @kind object;
  #L1676ce.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L1676d2.  if v2 == 0 then goto L167808;
  #L1676d6.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L1676da.  call temp:= `extractJavaFieldValue`(v1, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1676e0.  v1:= temp @kind object;
  #L1676e2.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L1676e6.  call temp:= `moveToNextValue`(v2, v1) @signature `Lcom/j256/ormlite/field/FieldType;.moveToNextValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1676ec.  v1:= temp @kind object;
  #L1676ee.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @type ^`int`;
  #L1676f2.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L1676f6.  call temp:= `convertJavaFieldToSqlArgValue`(v4, v1) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1676fc.  v4:= temp @kind object;
  #L1676fe.  v3[v2]:= v4 @kind object;
  #L167702.  v2:= v1 @kind object;
  #L167704.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L167708.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16770c.  call temp:= `update`(v10, v1, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L167712.  v1:= temp;
  #L167714.  if v1 <= 0 then goto L167782;
  #L167718.  if v2 == 0 then goto L16772a;
  #L16771c.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L167720.  v5:= 0I;
  #L167722.  v6:= 0I;
  #L167724.  call `assignField`(v4, v11, v2, v5, v6) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L16772a.  if v12 == 0 then goto L167782;
  #L16772e.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L167732.  call temp:= `extractJavaFieldValue`(v2, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L167738.  v2:= temp @kind object;
  #L16773a.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.clazz` @type ^`java.lang.Class` @kind object;
  #L16773e.  call temp:= `get`(v12, v4, v2) @signature `Lcom/j256/ormlite/dao/ObjectCache;.get:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L167744.  v2:= temp @kind object;
  #L167746.  if v2 == 0 then goto L167782;
  #L16774a.  if v2 == v11 then goto L167782;
  #L16774e.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L167752.  call temp:= `getFieldTypes`(v4) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L167758.  v4:= temp @kind object;
  #L16775a.  v5:= length @variable v4;
  #L16775c.  if v0 >= v5 then goto L167782;
  #L167760.  v6:= v4[v0] @kind object;
  #L167764.  v7:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L167768.  if v6 == v7 then goto L16777c;
  #L16776c.  call temp:= `extractJavaFieldValue`(v6, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L167772.  v7:= temp @kind object;
  #L167774.  v8:= 0I;
  #L167776.  call `assignField`(v6, v2, v7, v8, v12) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L16777c.  v0:= v0 + 1;
  #L167780.  goto L16775c;
  #L167782.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedUpdate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L167786.  v2:= "update data with statement '{}' and {} args, changed {} rows" @kind object;
  #L16778a.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L16778e.  v5:= length @variable v3;
  #L167790.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L167796.  v5:= temp @kind object;
  #L167798.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16779e.  v6:= temp @kind object;
  #L1677a0.  call `debug`(v0, v2, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L1677a6.  v0:= length @variable v3;
  #L1677a8.  if v0 <= 0 then goto L1677ba;
  #L1677ac.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedUpdate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L1677b0.  v2:= "update arguments: {}" @kind object;
  #L1677b4.  call `trace`(v0, v2, v3) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L1677ba.  v0:= v1;
  #L1677bc.  goto L1676c4;
  #L1677be.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1677c0.  v1:= new `java.lang.StringBuilder`;
  #L1677c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1677ca.  v2:= "Unable to run update stmt on object " @kind object;
  #L1677ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1677d4.  v1:= temp @kind object;
  #L1677d6.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1677dc.  v1:= temp @kind object;
  #L1677de.  v2:= ": " @kind object;
  #L1677e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1677e8.  v1:= temp @kind object;
  #L1677ea.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L1677ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1677f4.  v1:= temp @kind object;
  #L1677f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1677fc.  v1:= temp @kind object;
  #L1677fe.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L167804.  v0:= temp @kind object;
  #L167806.  throw v0;
  #L167808.  v2:= v1 @kind object;
  #L16780a.  goto L167704;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1677be;
}

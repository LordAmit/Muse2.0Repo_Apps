record `com.j256.ormlite.stmt.query.SetValue` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.BaseComparison` @kind class {
}
global `com.j256.ormlite.stmt.ArgumentHolder` `@@com.j256.ormlite.stmt.query.SetValue.nullValue` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/stmt/query/SetValue;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16898c.  v0:= new `com.j256.ormlite.stmt.NullArgHolder`;
  #L168990.  call `<init>`(v0) @signature `Lcom/j256/ormlite/stmt/NullArgHolder;.<init>:()V` @kind direct;
  #L168996.  `@@com.j256.ormlite.stmt.query.SetValue.nullValue` @type ^`com.j256.ormlite.stmt.ArgumentHolder` := v0 @kind object;
  #L16899a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.SetValue` v1 @kind this, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetValue;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1689ac.  if v4 != 0 then goto L1689b4;
  #L1689b0.  v4:= `@@com.j256.ormlite.stmt.query.SetValue.nullValue` @type ^`com.j256.ormlite.stmt.ArgumentHolder` @kind object;
  #L1689b4.  v0:= 0I;
  #L1689b6.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Z)V` @kind direct;
  #L1689bc.  return @kind void;
}
procedure `void` `appendOperation`(`com.j256.ormlite.stmt.query.SetValue` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetValue;.appendOperation:(Ljava/lang/StringBuilder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1689d0.  v0:= "= " @kind object;
  #L1689d4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1689da.  return @kind void;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.SetValue` v0 @kind this, `com.j256.ormlite.db.DatabaseType` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetValue;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1689ec.  call `appendSql`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind super;
  #L1689f2.  return @kind void;
}
procedure `void` `appendValue`(`com.j256.ormlite.stmt.query.SetValue` v0 @kind this, `com.j256.ormlite.db.DatabaseType` v1 @kind object, `java.lang.StringBuilder` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetValue;.appendValue:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L168a04.  call `appendValue`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendValue:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind super;
  #L168a0a.  return @kind void;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.stmt.query.SetValue` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/SetValue;.getColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L168a1c.  call temp:= `getColumnName`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.getColumnName:()Ljava/lang/String;` @kind super;
  #L168a22.  v0:= temp @kind object;
  #L168a24.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.stmt.query.SetValue` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/SetValue;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L168a38.  call temp:= `toString`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.toString:()Ljava/lang/String;` @kind super;
  #L168a3e.  v0:= temp @kind object;
  #L168a40.  return v0 @kind object;
}

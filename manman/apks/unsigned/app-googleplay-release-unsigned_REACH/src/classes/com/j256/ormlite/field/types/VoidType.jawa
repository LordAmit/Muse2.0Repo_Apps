record `com.j256.ormlite.field.types.VoidType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.VoidType` v2 @kind this) @signature `Lcom/j256/ormlite/field/types/VoidType;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15e370.  v0:= 0I;
  #L15e372.  v1:= 0I;
  #L15e374.  v1:= new `java.lang.Class`[v1];
  #L15e378.  call `<init>`(v2, v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L15e37e.  return @kind void;
}
procedure `boolean` `isValidForField`(`com.j256.ormlite.field.types.VoidType` v1 @kind this, `java.lang.reflect.Field` v2 @kind object) @signature `Lcom/j256/ormlite/field/types/VoidType;.isValidForField:(Ljava/lang/reflect/Field;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15e390.  v0:= 0I;
  #L15e392.  return v0;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.VoidType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/VoidType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15e3a4.  v0:= 0I;
  #L15e3a6.  return v0 @kind object;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.VoidType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/VoidType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15e3b8.  v0:= 0I;
  #L15e3ba.  return v0 @kind object;
}

record `com.j256.ormlite.dao.LazyForeignCollection` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.BaseForeignCollection` @kind class, `java.io.Serializable` @kind interface {
  `com.j256.ormlite.dao.CloseableIterator` `com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@com.j256.ormlite.dao.LazyForeignCollection.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.LazyForeignCollection` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1520ac.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/BaseForeignCollection;.<init>:(Lcom/j256/ormlite/dao/Dao;Ljava/lang/Object;Ljava/lang/Object;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;Z)V` @kind direct;
  #L1520b2.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `access$000`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind object, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.access$000:(Lcom/j256/ormlite/dao/LazyForeignCollection;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1520c4.  call temp:= `seperateIteratorThrow`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind direct;
  #L1520ca.  v0:= temp @kind object;
  #L1520cc.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `seperateIteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1520e0.  v0:= v2.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1520e4.  if v0 != 0 then goto L1520f8;
  #L1520e8.  v0:= new `java.lang.IllegalStateException`;
  #L1520ec.  v1:= "Internal DAO object is null.  Maybe the collection was deserialized or otherwise constructed wrongly.  Use dao.assignEmptyForeignCollection(...) or dao.getEmptyForeignCollection(...) instead" @kind object;
  #L1520f0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1520f6.  throw v0;
  #L1520f8.  v0:= v2.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1520fc.  call temp:= `getPreparedQuery`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getPreparedQuery:()Lcom/j256/ormlite/stmt/PreparedQuery;` @kind virtual;
  #L152102.  v1:= temp @kind object;
  #L152104.  call temp:= `iterator`(v0, v1, v3) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L15210a.  v0:= temp @kind object;
  #L15210c.  return v0 @kind object;
}
procedure `void` `closeLastIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeLastIterator:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152120.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L152124.  if v0 == 0 then goto L152138;
  #L152128.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L15212c.  call `close`(v0) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.close:()V` @kind interface;
  #L152132.  v0:= 0I;
  #L152134.  v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` := v0 @kind object;
  #L152138.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15214c.  v0:= -1I;
  #L15214e.  call temp:= `closeableIterator`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L152154.  v0:= temp @kind object;
  #L152156.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.LazyForeignCollection` v4 @kind this, `int` v5 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L152168.  call temp:= `iteratorThrow`(v4, v5) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #Try_end0.  
  #L15216e.  v0:= temp @kind object;
  #L152170.  return v0 @kind object;
  #L152172.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L152174.  v1:= new `java.lang.IllegalStateException`;
  #L152178.  v2:= new `java.lang.StringBuilder`;
  #L15217c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L152182.  v3:= "Could not build lazy iterator for " @kind object;
  #L152186.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15218c.  v2:= temp @kind object;
  #L15218e.  v3:= v4.`com.j256.ormlite.dao.LazyForeignCollection.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L152192.  call temp:= `getDataClass`(v3) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L152198.  v3:= temp @kind object;
  #L15219a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1521a0.  v2:= temp @kind object;
  #L1521a2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1521a8.  v2:= temp @kind object;
  #L1521aa.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1521b0.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L152172;
}
procedure `boolean` `contains`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1521d4.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1521da.  v1:= temp @kind object;
  #Try_start0.  
  #L1521dc.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1521e2.  v0:= temp;
  #L1521e4.  if v0 == 0 then goto L152206;
  #L1521e8.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1521ee.  v0:= temp @kind object;
  #L1521f0.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #Try_end0.  
  #L1521f6.  v0:= temp;
  #L1521f8.  if v0 == 0 then goto L1521dc;
  #L1521fc.  v0:= 1I;
  #L1521fe.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L152204.  return v0;
  #L152206.  v0:= 0I;
  #L152208.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15220e.  goto L152204;
  #L152210.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L152212.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L152218.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L152210;
}
procedure `boolean` `containsAll`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L152238.  v0:= new `java.util.HashSet`;
  #L15223c.  call `<init>`(v0, v4) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L152242.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L152248.  v1:= temp @kind object;
  #Try_start0.  
  #L15224a.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L152250.  v2:= temp;
  #L152252.  if v2 == 0 then goto L152270;
  #L152256.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15225c.  v2:= temp @kind object;
  #L15225e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L152264.  goto L15224a;
  #L152266.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L152268.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15226e.  throw v0;
  #Try_start1.  
  #L152270.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #Try_end1.  
  #L152276.  v0:= temp;
  #L152278.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15227e.  return v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L152266;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L152266;
}
procedure `boolean` `equals`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1522a4.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L1522aa.  v0:= temp;
  #L1522ac.  return v0;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1522c0.  v0:= -1I;
  #L1522c2.  call temp:= `getWrappedIterable`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:(I)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind virtual;
  #L1522c8.  v0:= temp @kind object;
  #L1522ca.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.getWrappedIterable:(I)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1522dc.  v0:= new `com.j256.ormlite.dao.CloseableWrappedIterableImpl`;
  #L1522e0.  v1:= new `com.j256.ormlite.dao.LazyForeignCollection$1`;
  #L1522e4.  call `<init>`(v1, v2, v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection$1;.<init>:(Lcom/j256/ormlite/dao/LazyForeignCollection;I)V` @kind direct;
  #L1522ea.  call `<init>`(v0, v1) @signature `Lcom/j256/ormlite/dao/CloseableWrappedIterableImpl;.<init>:(Lcom/j256/ormlite/dao/CloseableIterable;)V` @kind direct;
  #L1522f0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152304.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L15230a.  v0:= temp;
  #L15230c.  return v0;
}
procedure `boolean` `isEager`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.isEager:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152320.  v0:= 0I;
  #L152322.  return v0;
}
procedure `boolean` `isEmpty`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L152334.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L15233a.  v1:= temp @kind object;
  #Try_start0.  
  #L15233c.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #Try_end0.  
  #L152342.  v0:= temp;
  #L152344.  if v0 != 0 then goto L152352;
  #L152348.  v0:= 1I;
  #L15234a.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L152350.  return v0;
  #L152352.  v0:= 0I;
  #L152354.  goto L15234a;
  #L152356.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L152358.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15235e.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L152356;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15237c.  v0:= -1I;
  #L15237e.  call temp:= `closeableIterator`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L152384.  v0:= temp @kind object;
  #L152386.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152398.  call temp:= `closeableIterator`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.closeableIterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L15239e.  v0:= temp @kind object;
  #L1523a0.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1523b4.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1523ba.  v0:= temp @kind object;
  #L1523bc.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1523d0.  v0:= -1I;
  #L1523d2.  call temp:= `iteratorThrow`(v1, v0) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1523d8.  v0:= temp @kind object;
  #L1523da.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iteratorThrow`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1523ec.  call temp:= `seperateIteratorThrow`(v1, v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.seperateIteratorThrow:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind direct;
  #L1523f2.  v0:= temp @kind object;
  #L1523f4.  v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` := v0 @kind object;
  #L1523f8.  v0:= v1.`com.j256.ormlite.dao.LazyForeignCollection.lastIterator` @type ^`com.j256.ormlite.dao.CloseableIterator` @kind object;
  #L1523fc.  return v0 @kind object;
}
procedure `int` `refreshAll`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.refreshAll:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L152410.  v0:= new `java.lang.UnsupportedOperationException`;
  #L152414.  v1:= "Cannot call updateAll() on a lazy collection." @kind object;
  #L152418.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15241e.  throw v0;
}
procedure `int` `refreshCollection`(`com.j256.ormlite.dao.LazyForeignCollection` v1 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.refreshCollection:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L152430.  v0:= 0I;
  #L152432.  return v0;
}
procedure `boolean` `remove`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L152444.  call temp:= `iterator`(v2) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L15244a.  v1:= temp @kind object;
  #Try_start0.  
  #L15244c.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L152452.  v0:= temp;
  #L152454.  if v0 == 0 then goto L15247c;
  #L152458.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15245e.  v0:= temp @kind object;
  #L152460.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L152466.  v0:= temp;
  #L152468.  if v0 == 0 then goto L15244c;
  #L15246c.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L152472.  v0:= 1I;
  #L152474.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15247a.  return v0;
  #L15247c.  v0:= 0I;
  #L15247e.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L152484.  goto L15247a;
  #L152486.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L152488.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15248e.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L152486;
}
procedure `boolean` `removeAll`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1524ac.  v0:= 0I;
  #L1524ae.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1524b4.  v1:= temp @kind object;
  #Try_start0.  
  #L1524b6.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1524bc.  v2:= temp;
  #L1524be.  if v2 == 0 then goto L1524e0;
  #L1524c2.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1524c8.  v2:= temp @kind object;
  #L1524ca.  call temp:= `contains`(v4, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1524d0.  v2:= temp;
  #L1524d2.  if v2 == 0 then goto L1524b6;
  #L1524d6.  call `remove`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.remove:()V` @kind interface;
  #Try_end0.  
  #L1524dc.  v0:= 1I;
  #L1524de.  goto L1524b6;
  #L1524e0.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1524e6.  return v0;
  #L1524e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1524ea.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1524f0.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1524e8;
}
procedure `int` `size`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L152510.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L152516.  v1:= temp @kind object;
  #L152518.  v0:= 0I;
  #Try_start0.  
  #L15251a.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L152520.  v2:= temp;
  #L152522.  if v2 == 0 then goto L152532;
  #L152526.  call `moveToNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.moveToNext:()V` @kind interface;
  #Try_end0.  
  #L15252c.  v0:= v0 + 1;
  #L152530.  goto L15251a;
  #L152532.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L152538.  return v0;
  #L15253a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15253c.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L152542.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L15253a;
}
procedure `java.lang.Object`[] `toArray`(`com.j256.ormlite.dao.LazyForeignCollection` v3 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L152560.  v0:= new `java.util.ArrayList`;
  #L152564.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15256a.  call temp:= `iterator`(v3) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L152570.  v1:= temp @kind object;
  #Try_start0.  
  #L152572.  call temp:= `hasNext`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L152578.  v2:= temp;
  #L15257a.  if v2 == 0 then goto L152598;
  #L15257e.  call temp:= `next`(v1) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L152584.  v2:= temp @kind object;
  #L152586.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L15258c.  goto L152572;
  #L15258e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L152590.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L152596.  throw v0;
  #Try_start1.  
  #L152598.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #Try_end1.  
  #L15259e.  v0:= temp @kind object;
  #L1525a0.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1525a6.  return v0 @kind object;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L15258e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L15258e;
}
procedure `java.lang.Object`[] `toArray`(`com.j256.ormlite.dao.LazyForeignCollection` v9 @kind this, `java.lang.Object`[] v10 @kind object) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1525cc.  v3:= 0I;
  #L1525ce.  v2:= 0I;
  #L1525d0.  call temp:= `iterator`(v9) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1525d6.  v5:= temp @kind object;
  #L1525d8.  v1:= v2;
  #L1525da.  v0:= v3 @kind object;
  #Try_start0.  
  #L1525dc.  call temp:= `hasNext`(v5) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.hasNext:()Z` @kind interface;
  #L1525e2.  v4:= temp;
  #L1525e4.  if v4 == 0 then goto L152638;
  #L1525e8.  call temp:= `next`(v5) @signature `Lcom/j256/ormlite/dao/CloseableIterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1525ee.  v6:= temp @kind object;
  #L1525f0.  v4:= length @variable v10;
  #L1525f2.  if v1 < v4 then goto L152628;
  #L1525f6.  if v0 != 0 then goto L15261c;
  #L1525fa.  v0:= new `java.util.ArrayList`;
  #L1525fe.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L152604.  v7:= length @variable v10;
  #L152606.  v4:= v2;
  #L152608.  if v4 >= v7 then goto L15261c;
  #L15260c.  v8:= v10[v4] @kind object;
  #L152610.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L152616.  v4:= v4 + 1;
  #L15261a.  goto L152608;
  #L15261c.  call temp:= `add`(v0, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L152622.  v1:= v1 + 1;
  #L152626.  goto L1525dc;
  #L152628.  v10[v1]:= v6 @kind object;
  #Try_end0.  
  #L15262c.  goto L152622;
  #L15262e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L152630.  call `closeQuietly`(v5) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L152636.  throw v0;
  #L152638.  call `closeQuietly`(v5) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L15263e.  if v0 != 0 then goto L152652;
  #L152642.  v0:= length @variable v10;
  #L152644.  v0:= v0 + -1;
  #L152648.  if v1 >= v0 then goto L152650;
  #L15264c.  v10[v1]:= v3 @kind object;
  #L152650.  return v10 @kind object;
  #L152652.  call temp:= `toArray`(v0, v10) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L152658.  v10:= temp @kind object;
  #L15265a.  goto L152650;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L15262e;
}
procedure `int` `updateAll`(`com.j256.ormlite.dao.LazyForeignCollection` v2 @kind this) @signature `Lcom/j256/ormlite/dao/LazyForeignCollection;.updateAll:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L152678.  v0:= new `java.lang.UnsupportedOperationException`;
  #L15267c.  v1:= "Cannot call updateAll() on a lazy collection." @kind object;
  #L152680.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L152686.  throw v0;
}

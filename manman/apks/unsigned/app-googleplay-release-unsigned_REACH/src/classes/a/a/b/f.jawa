record `a.a.b.f` @kind class @AccessFlag PUBLIC_FINAL {
  `a.a` `a.a.b.f.a` @AccessFlag PRIVATE_FINAL;
  `a.a.b.d` `a.a.b.f.b` @AccessFlag PRIVATE_FINAL;
  `java.net.Proxy` `a.a.b.f.c` @AccessFlag PRIVATE;
  `java.net.InetSocketAddress` `a.a.b.f.d` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.e` @AccessFlag PRIVATE;
  `int` `a.a.b.f.f` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.g` @AccessFlag PRIVATE;
  `int` `a.a.b.f.h` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.b.f` v2 @kind this, `a.a` v3 @kind object, `a.a.b.d` v4 @kind object) @signature `La/a/b/f;.<init>:(La/a;La/a/b/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L077a0c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L077a12.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L077a18.  v0:= temp @kind object;
  #L077a1a.  v2.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L077a1e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L077a24.  v0:= temp @kind object;
  #L077a26.  v2.`a.a.b.f.g` @type ^`java.util.List` := v0 @kind object;
  #L077a2a.  v0:= new `java.util.ArrayList`;
  #L077a2e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L077a34.  v2.`a.a.b.f.i` @type ^`java.util.List` := v0 @kind object;
  #L077a38.  v2.`a.a.b.f.a` @type ^`a.a` := v3 @kind object;
  #L077a3c.  v2.`a.a.b.f.b` @type ^`a.a.b.d` := v4 @kind object;
  #L077a40.  call temp:= `a`(v3) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077a46.  v0:= temp @kind object;
  #L077a48.  call temp:= `h`(v3) @signature `La/a;.h:()Ljava/net/Proxy;` @kind virtual;
  #L077a4e.  v1:= temp @kind object;
  #L077a50.  call `a`(v2, v0, v1) @signature `La/a/b/f;.a:(La/r;Ljava/net/Proxy;)V` @kind direct;
  #L077a56.  return @kind void;
}
procedure `java.lang.String` `a`(`java.net.InetSocketAddress` v1 @kind object) @signature `La/a/b/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L077a68.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L077a6e.  v0:= temp @kind object;
  #L077a70.  if v0 != 0 then goto L077a7e;
  #L077a74.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L077a7a.  v0:= temp @kind object;
  #L077a7c.  return v0 @kind object;
  #L077a7e.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L077a84.  v0:= temp @kind object;
  #L077a86.  goto L077a7c;
}
procedure `void` `a`(`a.a.b.f` v3 @kind this, `a.r` v4 @kind object, `java.net.Proxy` v5 @kind object) @signature `La/a/b/f;.a:(La/r;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L077a98.  v2:= 0I;
  #L077a9a.  if v5 == 0 then goto L077ab0;
  #L077a9e.  call temp:= `singletonList`(v5) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L077aa4.  v0:= temp @kind object;
  #L077aa6.  v3.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L077aaa.  v3.`a.a.b.f.f` @type ^`int` := v2;
  #L077aae.  return @kind void;
  #L077ab0.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077ab4.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L077aba.  v0:= temp @kind object;
  #L077abc.  call temp:= `a`(v4) @signature `La/r;.a:()Ljava/net/URI;` @kind virtual;
  #L077ac2.  v1:= temp @kind object;
  #L077ac4.  call temp:= `select`(v0, v1) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L077aca.  v0:= temp @kind object;
  #L077acc.  if v0 == 0 then goto L077aea;
  #L077ad0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L077ad6.  v1:= temp;
  #L077ad8.  if v1 != 0 then goto L077aea;
  #L077adc.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L077ae2.  v0:= temp @kind object;
  #L077ae4.  v3.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L077ae8.  goto L077aaa;
  #L077aea.  v0:= 1I;
  #L077aec.  v0:= new `java.net.Proxy`[v0];
  #L077af0.  v1:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L077af4.  v0[v2]:= v1 @kind object;
  #L077af8.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L077afe.  v0:= temp @kind object;
  #L077b00.  goto L077ae4;
}
procedure `void` `a`(`a.a.b.f` v8 @kind this, `java.net.Proxy` v9 @kind object) @signature `La/a/b/f;.a:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L077b14.  v2:= 0I;
  #L077b16.  v0:= new `java.util.ArrayList`;
  #L077b1a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L077b20.  v8.`a.a.b.f.g` @type ^`java.util.List` := v0 @kind object;
  #L077b24.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L077b2a.  v0:= temp @kind object;
  #L077b2c.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L077b30.  if v0 == v1 then goto L077b44;
  #L077b34.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L077b3a.  v0:= temp @kind object;
  #L077b3c.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L077b40.  if v0 != v1 then goto L077bd2;
  #L077b44.  v0:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077b48.  call temp:= `a`(v0) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077b4e.  v0:= temp @kind object;
  #L077b50.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L077b56.  v1:= temp @kind object;
  #L077b58.  v0:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077b5c.  call temp:= `a`(v0) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077b62.  v0:= temp @kind object;
  #L077b64.  call temp:= `g`(v0) @signature `La/r;.g:()I` @kind virtual;
  #L077b6a.  v0:= temp;
  #L077b6c.  v3:= v0;
  #L077b6e.  v0:= v1 @kind object;
  #L077b70.  v1:= 1I;
  #L077b72.  if v3 < v1 then goto L077b80;
  #L077b76.  v1:= 65535I;
  #L077b7c.  if v3 <= v1 then goto L077c36;
  #L077b80.  v1:= new `java.net.SocketException`;
  #L077b84.  v2:= new `java.lang.StringBuilder`;
  #L077b88.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077b8e.  v4:= "No route to " @kind object;
  #L077b92.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077b98.  v2:= temp @kind object;
  #L077b9a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077ba0.  v0:= temp @kind object;
  #L077ba2.  v2:= ":" @kind object;
  #L077ba6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077bac.  v0:= temp @kind object;
  #L077bae.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L077bb4.  v0:= temp @kind object;
  #L077bb6.  v2:= "; port is out of range" @kind object;
  #L077bba.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077bc0.  v0:= temp @kind object;
  #L077bc2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077bc8.  v0:= temp @kind object;
  #L077bca.  call `<init>`(v1, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L077bd0.  throw v1;
  #L077bd2.  call temp:= `address`(v9) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L077bd8.  v0:= temp @kind object;
  #L077bda.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L077bde.  if v1 != 0 then goto L077c1c;
  #L077be2.  v1:= new `java.lang.IllegalArgumentException`;
  #L077be6.  v2:= new `java.lang.StringBuilder`;
  #L077bea.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077bf0.  v3:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L077bf4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077bfa.  v2:= temp @kind object;
  #L077bfc.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L077c02.  v0:= temp @kind object;
  #L077c04.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077c0a.  v0:= temp @kind object;
  #L077c0c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077c12.  v0:= temp @kind object;
  #L077c14.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L077c1a.  throw v1;
  #L077c1c.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L077c20.  call temp:= `a`(v0) @signature `La/a/b/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L077c26.  v1:= temp @kind object;
  #L077c28.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L077c2e.  v0:= temp;
  #L077c30.  v3:= v0;
  #L077c32.  v0:= v1 @kind object;
  #L077c34.  goto L077b70;
  #L077c36.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L077c3c.  v1:= temp @kind object;
  #L077c3e.  v4:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L077c42.  if v1 != v4 then goto L077c5e;
  #L077c46.  v1:= v8.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L077c4a.  call temp:= `createUnresolved`(v0, v3) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L077c50.  v0:= temp @kind object;
  #L077c52.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L077c58.  v8.`a.a.b.f.h` @type ^`int` := v2;
  #L077c5c.  return @kind void;
  #L077c5e.  v1:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077c62.  call temp:= `b`(v1) @signature `La/a;.b:()La/o;` @kind virtual;
  #L077c68.  v1:= temp @kind object;
  #L077c6a.  call temp:= `a`(v1, v0) @signature `La/o;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L077c70.  v4:= temp @kind object;
  #L077c72.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L077c78.  v5:= temp;
  #L077c7a.  v1:= v2;
  #L077c7c.  if v1 >= v5 then goto L077c58;
  #L077c80.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L077c86.  v0:= temp @kind object;
  #L077c88.  v0:= (`java.net.InetAddress`) v0 @kind object;
  #L077c8c.  v6:= v8.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L077c90.  v7:= new `java.net.InetSocketAddress`;
  #L077c94.  call `<init>`(v7, v0, v3) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L077c9a.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L077ca0.  v0:= v1 + 1;
  #L077ca4.  v1:= v0;
  #L077ca6.  goto L077c7c;
}
procedure `boolean` `c`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L077cb8.  v0:= v2.`a.a.b.f.f` @type ^`int`;
  #L077cbc.  v1:= v2.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L077cc0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L077cc6.  v1:= temp;
  #L077cc8.  if v0 >= v1 then goto L077cd0;
  #L077ccc.  v0:= 1I;
  #L077cce.  return v0;
  #L077cd0.  v0:= 0I;
  #L077cd2.  goto L077cce;
}
procedure `java.net.Proxy` `d`(`a.a.b.f` v3 @kind this) @signature `La/a/b/f;.d:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L077ce4.  call temp:= `c`(v3) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L077cea.  v0:= temp;
  #L077cec.  if v0 != 0 then goto L077d4e;
  #L077cf0.  v0:= new `java.net.SocketException`;
  #L077cf4.  v1:= new `java.lang.StringBuilder`;
  #L077cf8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077cfe.  v2:= "No route to " @kind object;
  #L077d02.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077d08.  v1:= temp @kind object;
  #L077d0a.  v2:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077d0e.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077d14.  v2:= temp @kind object;
  #L077d16.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L077d1c.  v2:= temp @kind object;
  #L077d1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077d24.  v1:= temp @kind object;
  #L077d26.  v2:= "; exhausted proxy configurations: " @kind object;
  #L077d2a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077d30.  v1:= temp @kind object;
  #L077d32.  v2:= v3.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L077d36.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077d3c.  v1:= temp @kind object;
  #L077d3e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077d44.  v1:= temp @kind object;
  #L077d46.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L077d4c.  throw v0;
  #L077d4e.  v0:= v3.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L077d52.  v1:= v3.`a.a.b.f.f` @type ^`int`;
  #L077d56.  v2:= v1 + 1;
  #L077d5a.  v3.`a.a.b.f.f` @type ^`int` := v2;
  #L077d5e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L077d64.  v0:= temp @kind object;
  #L077d66.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L077d6a.  call `a`(v3, v0) @signature `La/a/b/f;.a:(Ljava/net/Proxy;)V` @kind direct;
  #L077d70.  return v0 @kind object;
}
procedure `boolean` `e`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L077d84.  v0:= v2.`a.a.b.f.h` @type ^`int`;
  #L077d88.  v1:= v2.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L077d8c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L077d92.  v1:= temp;
  #L077d94.  if v0 >= v1 then goto L077d9c;
  #L077d98.  v0:= 1I;
  #L077d9a.  return v0;
  #L077d9c.  v0:= 0I;
  #L077d9e.  goto L077d9a;
}
procedure `java.net.InetSocketAddress` `f`(`a.a.b.f` v3 @kind this) @signature `La/a/b/f;.f:()Ljava/net/InetSocketAddress;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L077db0.  call temp:= `e`(v3) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L077db6.  v0:= temp;
  #L077db8.  if v0 != 0 then goto L077e1a;
  #L077dbc.  v0:= new `java.net.SocketException`;
  #L077dc0.  v1:= new `java.lang.StringBuilder`;
  #L077dc4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077dca.  v2:= "No route to " @kind object;
  #L077dce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077dd4.  v1:= temp @kind object;
  #L077dd6.  v2:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077dda.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077de0.  v2:= temp @kind object;
  #L077de2.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L077de8.  v2:= temp @kind object;
  #L077dea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077df0.  v1:= temp @kind object;
  #L077df2.  v2:= "; exhausted inet socket addresses: " @kind object;
  #L077df6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077dfc.  v1:= temp @kind object;
  #L077dfe.  v2:= v3.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L077e02.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077e08.  v1:= temp @kind object;
  #L077e0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077e10.  v1:= temp @kind object;
  #L077e12.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L077e18.  throw v0;
  #L077e1a.  v0:= v3.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L077e1e.  v1:= v3.`a.a.b.f.h` @type ^`int`;
  #L077e22.  v2:= v1 + 1;
  #L077e26.  v3.`a.a.b.f.h` @type ^`int` := v2;
  #L077e2a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L077e30.  v0:= temp @kind object;
  #L077e32.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L077e36.  return v0 @kind object;
}
procedure `boolean` `g`(`a.a.b.f` v1 @kind this) @signature `La/a/b/f;.g:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L077e48.  v0:= v1.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L077e4c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L077e52.  v0:= temp;
  #L077e54.  if v0 != 0 then goto L077e5c;
  #L077e58.  v0:= 1I;
  #L077e5a.  return v0;
  #L077e5c.  v0:= 0I;
  #L077e5e.  goto L077e5a;
}
procedure `a.ab` `h`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.h:()La/ab;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L077e70.  v0:= v2.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L077e74.  v1:= 0I;
  #L077e76.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L077e7c.  v0:= temp @kind object;
  #L077e7e.  v0:= (`a.ab`) v0 @kind object;
  #L077e82.  return v0 @kind object;
}
procedure `void` `a`(`a.a.b.f` v3 @kind this, `a.ab` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `La/a/b/f;.a:(La/ab;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L077e94.  call temp:= `b`(v4) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L077e9a.  v0:= temp @kind object;
  #L077e9c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L077ea2.  v0:= temp @kind object;
  #L077ea4.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L077ea8.  if v0 == v1 then goto L077ef2;
  #L077eac.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077eb0.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L077eb6.  v0:= temp @kind object;
  #L077eb8.  if v0 == 0 then goto L077ef2;
  #L077ebc.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077ec0.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L077ec6.  v0:= temp @kind object;
  #L077ec8.  v1:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077ecc.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077ed2.  v1:= temp @kind object;
  #L077ed4.  call temp:= `a`(v1) @signature `La/r;.a:()Ljava/net/URI;` @kind virtual;
  #L077eda.  v1:= temp @kind object;
  #L077edc.  call temp:= `b`(v4) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L077ee2.  v2:= temp @kind object;
  #L077ee4.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L077eea.  v2:= temp @kind object;
  #L077eec.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L077ef2.  v0:= v3.`a.a.b.f.b` @type ^`a.a.b.d` @kind object;
  #L077ef6.  call `a`(v0, v4) @signature `La/a/b/d;.a:(La/ab;)V` @kind virtual;
  #L077efc.  return @kind void;
}
procedure `boolean` `a`(`a.a.b.f` v1 @kind this) @signature `La/a/b/f;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L077f10.  call temp:= `e`(v1) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L077f16.  v0:= temp;
  #L077f18.  if v0 != 0 then goto L077f34;
  #L077f1c.  call temp:= `c`(v1) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L077f22.  v0:= temp;
  #L077f24.  if v0 != 0 then goto L077f34;
  #L077f28.  call temp:= `g`(v1) @signature `La/a/b/f;.g:()Z` @kind direct;
  #L077f2e.  v0:= temp;
  #L077f30.  if v0 == 0 then goto L077f38;
  #L077f34.  v0:= 1I;
  #L077f36.  return v0;
  #L077f38.  v0:= 0I;
  #L077f3a.  goto L077f36;
}
procedure `a.ab` `b`(`a.a.b.f` v4 @kind this) @signature `La/a/b/f;.b:()La/ab;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L077f4c.  call temp:= `e`(v4) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L077f52.  v0:= temp;
  #L077f54.  if v0 != 0 then goto L077f92;
  #L077f58.  call temp:= `c`(v4) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L077f5e.  v0:= temp;
  #L077f60.  if v0 != 0 then goto L077f86;
  #L077f64.  call temp:= `g`(v4) @signature `La/a/b/f;.g:()Z` @kind direct;
  #L077f6a.  v0:= temp;
  #L077f6c.  if v0 != 0 then goto L077f7c;
  #L077f70.  v0:= new `java.util.NoSuchElementException`;
  #L077f74.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L077f7a.  throw v0;
  #L077f7c.  call temp:= `h`(v4) @signature `La/a/b/f;.h:()La/ab;` @kind direct;
  #L077f82.  v0:= temp @kind object;
  #L077f84.  return v0 @kind object;
  #L077f86.  call temp:= `d`(v4) @signature `La/a/b/f;.d:()Ljava/net/Proxy;` @kind direct;
  #L077f8c.  v0:= temp @kind object;
  #L077f8e.  v4.`a.a.b.f.c` @type ^`java.net.Proxy` := v0 @kind object;
  #L077f92.  call temp:= `f`(v4) @signature `La/a/b/f;.f:()Ljava/net/InetSocketAddress;` @kind direct;
  #L077f98.  v0:= temp @kind object;
  #L077f9a.  v4.`a.a.b.f.d` @type ^`java.net.InetSocketAddress` := v0 @kind object;
  #L077f9e.  v0:= new `a.ab`;
  #L077fa2.  v1:= v4.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L077fa6.  v2:= v4.`a.a.b.f.c` @type ^`java.net.Proxy` @kind object;
  #L077faa.  v3:= v4.`a.a.b.f.d` @type ^`java.net.InetSocketAddress` @kind object;
  #L077fae.  call `<init>`(v0, v1, v2, v3) @signature `La/ab;.<init>:(La/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L077fb4.  v1:= v4.`a.a.b.f.b` @type ^`a.a.b.d` @kind object;
  #L077fb8.  call temp:= `c`(v1, v0) @signature `La/a/b/d;.c:(La/ab;)Z` @kind virtual;
  #L077fbe.  v1:= temp;
  #L077fc0.  if v1 == 0 then goto L077f84;
  #L077fc4.  v1:= v4.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L077fc8.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L077fce.  call temp:= `b`(v4) @signature `La/a/b/f;.b:()La/ab;` @kind virtual;
  #L077fd4.  v0:= temp @kind object;
  #L077fd6.  goto L077f84;
}

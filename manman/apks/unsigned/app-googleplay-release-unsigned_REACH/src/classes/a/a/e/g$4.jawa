record `a.a.e.g$4` @kind class @AccessFlag  extends `a.a.b` @kind class {
  `int` `a.a.e.g$4.a` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `a.a.e.g$4.c` @AccessFlag FINAL_SYNTHETIC;
  `a.a.e.g` `a.a.e.g$4.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$4` v0 @kind this, `a.a.e.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object) @signature `La/a/e/g$4;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L07dfa8.  v0.`a.a.e.g$4.d` @type ^`a.a.e.g` := v1 @kind object;
  #L07dfac.  v0.`a.a.e.g$4.a` @type ^`int` := v4;
  #L07dfb0.  v0.`a.a.e.g$4.c` @type ^`java.util.List` := v5 @kind object;
  #L07dfb4.  call `<init>`(v0, v2, v3) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07dfba.  return @kind void;
}
procedure `void` `b`(`a.a.e.g$4` v3 @kind this) @signature `La/a/e/g$4;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07dfcc.  v0:= v3.`a.a.e.g$4.d` @type ^`a.a.e.g` @kind object;
  #L07dfd0.  v0:= v0.`a.a.e.g.i` @type ^`a.a.e.m` @kind object;
  #L07dfd4.  v1:= v3.`a.a.e.g$4.a` @type ^`int`;
  #L07dfd8.  v2:= v3.`a.a.e.g$4.c` @type ^`java.util.List` @kind object;
  #L07dfdc.  call temp:= `a`(v0, v1, v2) @signature `La/a/e/m;.a:(ILjava/util/List;)Z` @kind interface;
  #L07dfe2.  v0:= temp;
  #L07dfe4.  if v0 == 0 then goto L07e020;
  #Try_start0.  
  #L07dfe8.  v0:= v3.`a.a.e.g$4.d` @type ^`a.a.e.g` @kind object;
  #L07dfec.  v0:= v0.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07dff0.  v1:= v3.`a.a.e.g$4.a` @type ^`int`;
  #L07dff4.  v2:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #L07dff8.  call `a`(v0, v1, v2) @signature `La/a/e/j;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07dffe.  v1:= v3.`a.a.e.g$4.d` @type ^`a.a.e.g` @kind object;
  #L07e002.  @monitorenter v1
  #Try_end0.  
  #Try_start1.  
  #L07e004.  v0:= v3.`a.a.e.g$4.d` @type ^`a.a.e.g` @kind object;
  #L07e008.  v0:= v0.`a.a.e.g.r` @type ^`java.util.Set` @kind object;
  #L07e00c.  v2:= v3.`a.a.e.g$4.a` @type ^`int`;
  #L07e010.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e016.  v2:= temp @kind object;
  #L07e018.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L07e01e.  @monitorexit v1
  #L07e020.  return @kind void;
  #L07e022.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e024.  @monitorexit v1
  #Try_end1.  
  #Try_start2.  
  #L07e026.  throw v0;
  #Try_end2.  
  #L07e028.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07e02a.  goto L07e020;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07e028;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07e022;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L07e028;
}

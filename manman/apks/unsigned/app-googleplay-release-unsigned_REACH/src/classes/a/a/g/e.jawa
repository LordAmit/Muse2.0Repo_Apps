record `a.a.g.e` @kind class @AccessFlag PUBLIC {
}
global `a.a.g.e` `@@a.a.g.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@a.a.g.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/g/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L083078.  call temp:= `a`() @signature `La/a/g/e;.a:()La/a/g/e;` @kind static;
  #L08307e.  v0:= temp @kind object;
  #L083080.  `@@a.a.g.e.a` @type ^`a.a.g.e` := v0 @kind object;
  #L083084.  v0:= constclass @type ^`a.u` @kind object;
  #L083088.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L08308e.  v0:= temp @kind object;
  #L083090.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L083096.  v0:= temp @kind object;
  #L083098.  `@@a.a.g.e.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L08309c.  return @kind void;
}
procedure `void` `<init>`(`a.a.g.e` v0 @kind this) @signature `La/a/g/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0830b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0830b6.  return @kind void;
}
procedure `a.a.g.e` `a`() @signature `La/a/g/e;.a:()La/a/g/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L0830c8.  call temp:= `a`() @signature `La/a/g/a;.a:()La/a/g/e;` @kind static;
  #L0830ce.  v0:= temp @kind object;
  #L0830d0.  if v0 == 0 then goto L0830d6;
  #L0830d4.  return v0 @kind object;
  #L0830d6.  call temp:= `a`() @signature `La/a/g/b;.a:()La/a/g/b;` @kind static;
  #L0830dc.  v0:= temp @kind object;
  #L0830de.  if v0 != 0 then goto L0830d4;
  #L0830e2.  call temp:= `a`() @signature `La/a/g/c;.a:()La/a/g/e;` @kind static;
  #L0830e8.  v0:= temp @kind object;
  #L0830ea.  if v0 != 0 then goto L0830d4;
  #L0830ee.  v0:= new `a.a.g.e`;
  #L0830f2.  call `<init>`(v0) @signature `La/a/g/e;.<init>:()V` @kind direct;
  #L0830f8.  goto L0830d4;
}
procedure `java.util.List` `a`(`java.util.List` v5 @kind object) @signature `La/a/g/e;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08310c.  v2:= new `java.util.ArrayList`;
  #L083110.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083116.  v0:= temp;
  #L083118.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L08311e.  v0:= 0I;
  #L083120.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083126.  v3:= temp;
  #L083128.  v1:= v0;
  #L08312a.  if v1 >= v3 then goto L08315a;
  #L08312e.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083134.  v0:= temp @kind object;
  #L083136.  v0:= (`a.v`) v0 @kind object;
  #L08313a.  v4:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08313e.  if v0 != v4 then goto L08314a;
  #L083142.  v0:= v1 + 1;
  #L083146.  v1:= v0;
  #L083148.  goto L08312a;
  #L08314a.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L083150.  v0:= temp @kind object;
  #L083152.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L083158.  goto L083142;
  #L08315a.  return v2 @kind object;
}
procedure `a.a.g.e` `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08316c.  v0:= `@@a.a.g.e.a` @type ^`a.a.g.e` @kind object;
  #L083170.  return v0 @kind object;
}
procedure `byte`[] `b`(`java.util.List` v5 @kind object) @signature `La/a/g/e;.b:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L083184.  v2:= new `b.c`;
  #L083188.  call `<init>`(v2) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08318e.  v0:= 0I;
  #L083190.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083196.  v3:= temp;
  #L083198.  v1:= v0;
  #L08319a.  if v1 >= v3 then goto L0831e0;
  #L08319e.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0831a4.  v0:= temp @kind object;
  #L0831a6.  v0:= (`a.v`) v0 @kind object;
  #L0831aa.  v4:= `@@a.v.a` @type ^`a.v` @kind object;
  #L0831ae.  if v0 != v4 then goto L0831ba;
  #L0831b2.  v0:= v1 + 1;
  #L0831b6.  v1:= v0;
  #L0831b8.  goto L08319a;
  #L0831ba.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L0831c0.  v4:= temp @kind object;
  #L0831c2.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0831c8.  v4:= temp;
  #L0831ca.  call temp:= `b`(v2, v4) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L0831d0.  call temp:= `toString`(v0) @signature `La/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L0831d6.  v0:= temp @kind object;
  #L0831d8.  call temp:= `a`(v2, v0) @signature `Lb/c;.a:(Ljava/lang/String;)Lb/c;` @kind virtual;
  #L0831de.  goto L0831b2;
  #L0831e0.  call temp:= `q`(v2) @signature `Lb/c;.q:()[B` @kind virtual;
  #L0831e6.  v0:= temp @kind object;
  #L0831e8.  return v0 @kind object;
}
procedure `a.a.h.b` `a`(`a.a.g.e` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0831fc.  v0:= new `a.a.h.a`;
  #L083200.  call temp:= `a`(v3) @signature `La/a/h/e;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/e;` @kind static;
  #L083206.  v1:= temp @kind object;
  #L083208.  call `<init>`(v0, v1) @signature `La/a/h/a;.<init>:(La/a/h/e;)V` @kind direct;
  #L08320e.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`a.a.g.e` v2 @kind this, `java.lang.String` v3 @kind object) @signature `La/a/g/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L083220.  v0:= `@@a.a.g.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L083224.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L083228.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L08322e.  v0:= temp;
  #L083230.  if v0 == 0 then goto L083240;
  #L083234.  v0:= new `java.lang.Throwable`;
  #L083238.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08323e.  return v0 @kind object;
  #L083240.  v0:= 0I;
  #L083242.  goto L08323e;
}
procedure `java.lang.String` `a`(`a.a.g.e` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L083254.  v0:= 0I;
  #L083256.  return v0 @kind object;
}
procedure `void` `a`(`a.a.g.e` v2 @kind this, `int` v3 , `java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `La/a/g/e;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L083268.  v0:= 5I;
  #L08326a.  if v3 != v0 then goto L08327e;
  #L08326e.  v0:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L083272.  v1:= `@@a.a.g.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L083276.  call `log`(v1, v0, v4, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L08327c.  return @kind void;
  #L08327e.  v0:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L083282.  goto L083272;
}
procedure `void` `a`(`a.a.g.e` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `La/a/g/e;.a:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L083294.  if v4 != 0 then goto L0832be;
  #L083298.  v0:= new `java.lang.StringBuilder`;
  #L08329c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0832a2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0832a8.  v0:= temp @kind object;
  #L0832aa.  v1:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L0832ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0832b4.  v0:= temp @kind object;
  #L0832b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0832bc.  v3:= temp @kind object;
  #L0832be.  v0:= 5I;
  #L0832c0.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L0832c4.  call `a`(v2, v0, v3, v4) @signature `La/a/g/e;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L0832ca.  return @kind void;
}
procedure `void` `a`(`a.a.g.e` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `La/a/g/e;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L0832dc.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L0832e2.  return @kind void;
}
procedure `void` `a`(`a.a.g.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L0832f4.  return @kind void;
}
procedure `void` `b`(`a.a.g.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `La/a/g/e;.b:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L083308.  return @kind void;
}
procedure `boolean` `b`(`a.a.g.e` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/a/g/e;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08331c.  v0:= 1I;
  #L08331e.  return v0;
}

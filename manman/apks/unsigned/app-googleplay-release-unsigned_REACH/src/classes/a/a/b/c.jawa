record `a.a.b.c` @kind class @AccessFlag PUBLIC_FINAL extends `a.a.e.g$b` @kind class, `a.i` @kind interface {
  `boolean` `a.a.b.c.a` @AccessFlag PUBLIC;
  `int` `a.a.b.c.b` @AccessFlag PUBLIC;
  `int` `a.a.b.c.c` @AccessFlag PUBLIC;
  `java.util.List` `a.a.b.c.d` @AccessFlag PUBLIC_FINAL;
  `long` `a.a.b.c.e` @AccessFlag PUBLIC;
  `a.j` `a.a.b.c.g` @AccessFlag PRIVATE_FINAL;
  `a.ab` `a.a.b.c.h` @AccessFlag PRIVATE_FINAL;
  `java.net.Socket` `a.a.b.c.i` @AccessFlag PRIVATE;
  `java.net.Socket` `a.a.b.c.j` @AccessFlag PRIVATE;
  `a.p` `a.a.b.c.k` @AccessFlag PRIVATE;
  `a.v` `a.a.b.c.l` @AccessFlag PRIVATE;
  `a.a.e.g` `a.a.b.c.m` @AccessFlag PRIVATE;
  `b.e` `a.a.b.c.n` @AccessFlag PRIVATE;
  `b.d` `a.a.b.c.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.b.c` v2 @kind this, `a.j` v3 @kind object, `a.ab` v4 @kind object) @signature `La/a/b/c;.<init>:(La/j;La/ab;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L076b18.  call `<init>`(v2) @signature `La/a/e/g$b;.<init>:()V` @kind direct;
  #L076b1e.  v0:= 1I;
  #L076b20.  v2.`a.a.b.c.c` @type ^`int` := v0;
  #L076b24.  v0:= new `java.util.ArrayList`;
  #L076b28.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L076b2e.  v2.`a.a.b.c.d` @type ^`java.util.List` := v0 @kind object;
  #L076b32.  v0:= 9223372036854775807L;
  #L076b3c.  v2.`a.a.b.c.e` @type ^`long` := v0 @kind wide;
  #L076b40.  v2.`a.a.b.c.g` @type ^`a.j` := v3 @kind object;
  #L076b44.  v2.`a.a.b.c.h` @type ^`a.ab` := v4 @kind object;
  #L076b48.  return @kind void;
}
procedure `a.x` `a`(`a.a.b.c` v8 @kind this, `int` v9 , `int` v10 , `a.x` v11 @kind object, `a.r` v12 @kind object) @signature `La/a/b/c;.a:(IILa/x;La/r;)La/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L076b5c.  v2:= 0I;
  #L076b5e.  v0:= new `java.lang.StringBuilder`;
  #L076b62.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L076b68.  v1:= "CONNECT " @kind object;
  #L076b6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076b72.  v0:= temp @kind object;
  #L076b74.  v1:= 1I;
  #L076b76.  call temp:= `a`(v12, v1) @signature `La/a/c;.a:(La/r;Z)Ljava/lang/String;` @kind static;
  #L076b7c.  v1:= temp @kind object;
  #L076b7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076b84.  v0:= temp @kind object;
  #L076b86.  v1:= " HTTP/1.1" @kind object;
  #L076b8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076b90.  v0:= temp @kind object;
  #L076b92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L076b98.  v3:= temp @kind object;
  #L076b9a.  v4:= new `a.a.d.a`;
  #L076b9e.  v0:= v8.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L076ba2.  v1:= v8.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L076ba6.  call `<init>`(v4, v2, v2, v0, v1) @signature `La/a/d/a;.<init>:(La/u;La/a/b/g;Lb/e;Lb/d;)V` @kind direct;
  #L076bac.  v0:= v8.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L076bb0.  call temp:= `a`(v0) @signature `Lb/e;.a:()Lb/s;` @kind interface;
  #L076bb6.  v0:= temp @kind object;
  #L076bb8.  v6:= (`long`) v9 @kind i2l;
  #L076bba.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L076bbe.  call temp:= `a`(v0, v6, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L076bc4.  v0:= v8.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L076bc8.  call temp:= `a`(v0) @signature `Lb/d;.a:()Lb/s;` @kind interface;
  #L076bce.  v0:= temp @kind object;
  #L076bd0.  v6:= (`long`) v10 @kind i2l;
  #L076bd2.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L076bd6.  call temp:= `a`(v0, v6, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L076bdc.  call temp:= `c`(v11) @signature `La/x;.c:()La/q;` @kind virtual;
  #L076be2.  v0:= temp @kind object;
  #L076be4.  call `a`(v4, v0, v3) @signature `La/a/d/a;.a:(La/q;Ljava/lang/String;)V` @kind virtual;
  #L076bea.  call `b`(v4) @signature `La/a/d/a;.b:()V` @kind virtual;
  #L076bf0.  v0:= 0I;
  #L076bf2.  call temp:= `a`(v4, v0) @signature `La/a/d/a;.a:(Z)La/z$a;` @kind virtual;
  #L076bf8.  v0:= temp @kind object;
  #L076bfa.  call temp:= `a`(v0, v11) @signature `La/z$a;.a:(La/x;)La/z$a;` @kind virtual;
  #L076c00.  v0:= temp @kind object;
  #L076c02.  call temp:= `a`(v0) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L076c08.  v5:= temp @kind object;
  #L076c0a.  call temp:= `a`(v5) @signature `La/a/c/e;.a:(La/z;)J` @kind static;
  #L076c10.  v0:= temp @kind wide;
  #L076c12.  v6:= -1L;
  #L076c16.  v6:= lcmp(v0, v6);
  #L076c1a.  if v6 != 0 then goto L076c22;
  #L076c1e.  v0:= 0L;
  #L076c22.  call temp:= `b`(v4, v0) @signature `La/a/d/a;.b:(J)Lb/r;` @kind virtual;
  #L076c28.  v0:= temp @kind object;
  #L076c2a.  v1:= 2147483647I;
  #L076c30.  v4:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L076c34.  call temp:= `b`(v0, v1, v4) @signature `La/a/c;.b:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L076c3a.  call `close`(v0) @signature `Lb/r;.close:()V` @kind interface;
  #L076c40.  call temp:= `b`(v5) @signature `La/z;.b:()I` @kind virtual;
  #L076c46.  v0:= temp;
  #L076c48.  goto L076d20;
  #L076c4e.  v0:= new `java.io.IOException`;
  #L076c52.  v1:= new `java.lang.StringBuilder`;
  #L076c56.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L076c5c.  v2:= "Unexpected response code for CONNECT: " @kind object;
  #L076c60.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076c66.  v1:= temp @kind object;
  #L076c68.  call temp:= `b`(v5) @signature `La/z;.b:()I` @kind virtual;
  #L076c6e.  v2:= temp;
  #L076c70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L076c76.  v1:= temp @kind object;
  #L076c78.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L076c7e.  v1:= temp @kind object;
  #L076c80.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076c86.  throw v0;
  #L076c88.  v0:= v8.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L076c8c.  call temp:= `c`(v0) @signature `Lb/e;.c:()Lb/c;` @kind interface;
  #L076c92.  v0:= temp @kind object;
  #L076c94.  call temp:= `e`(v0) @signature `Lb/c;.e:()Z` @kind virtual;
  #L076c9a.  v0:= temp;
  #L076c9c.  if v0 == 0 then goto L076cb8;
  #L076ca0.  v0:= v8.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L076ca4.  call temp:= `c`(v0) @signature `Lb/d;.c:()Lb/c;` @kind interface;
  #L076caa.  v0:= temp @kind object;
  #L076cac.  call temp:= `e`(v0) @signature `Lb/c;.e:()Z` @kind virtual;
  #L076cb2.  v0:= temp;
  #L076cb4.  if v0 != 0 then goto L076cc8;
  #L076cb8.  v0:= new `java.io.IOException`;
  #L076cbc.  v1:= "TLS tunnel buffered too many bytes!" @kind object;
  #L076cc0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076cc6.  throw v0;
  #L076cc8.  v11:= v2 @kind object;
  #L076cca.  return v11 @kind object;
  #L076ccc.  v0:= v8.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076cd0.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L076cd6.  v0:= temp @kind object;
  #L076cd8.  call temp:= `d`(v0) @signature `La/a;.d:()La/b;` @kind virtual;
  #L076cde.  v0:= temp @kind object;
  #L076ce0.  v1:= v8.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076ce4.  call temp:= `a`(v0, v1, v5) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L076cea.  v11:= temp @kind object;
  #L076cec.  if v11 != 0 then goto L076d00;
  #L076cf0.  v0:= new `java.io.IOException`;
  #L076cf4.  v1:= "Failed to authenticate with proxy" @kind object;
  #L076cf8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076cfe.  throw v0;
  #L076d00.  v0:= "close" @kind object;
  #L076d04.  v1:= "Connection" @kind object;
  #L076d08.  call temp:= `a`(v5, v1) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L076d0e.  v1:= temp @kind object;
  #L076d10.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L076d16.  v0:= temp;
  #L076d18.  if v0 == 0 then goto L076b9a;
  #L076d1c.  goto L076cca;
  #L076d1e.  
  #L076d20.  switch v0
                  | 200 => goto L076c88
                  | 407 => goto L076ccc
                  | else => goto L076c4e;
}
procedure `void` `a`(`a.a.b.c` v4 @kind this, `int` v5 , `int` v6 ) @signature `La/a/b/c;.a:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L076d44.  v0:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076d48.  call temp:= `b`(v0) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L076d4e.  v1:= temp @kind object;
  #L076d50.  v0:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076d54.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L076d5a.  v0:= temp @kind object;
  #L076d5c.  call temp:= `type`(v1) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L076d62.  v2:= temp @kind object;
  #L076d64.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L076d68.  if v2 == v3 then goto L076d7c;
  #L076d6c.  call temp:= `type`(v1) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L076d72.  v2:= temp @kind object;
  #L076d74.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L076d78.  if v2 != v3 then goto L076dea;
  #L076d7c.  call temp:= `c`(v0) @signature `La/a;.c:()Ljavax/net/SocketFactory;` @kind virtual;
  #L076d82.  v0:= temp @kind object;
  #L076d84.  call temp:= `createSocket`(v0) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L076d8a.  v0:= temp @kind object;
  #L076d8c.  v4.`a.a.b.c.i` @type ^`java.net.Socket` := v0 @kind object;
  #L076d90.  v0:= v4.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L076d94.  call `setSoTimeout`(v0, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #Try_start0.  
  #L076d9a.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L076da0.  v0:= temp @kind object;
  #L076da2.  v1:= v4.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L076da6.  v2:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076daa.  call temp:= `c`(v2) @signature `La/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L076db0.  v2:= temp @kind object;
  #L076db2.  call `a`(v0, v1, v2, v5) @signature `La/a/g/e;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #Try_end0.  
  #L076db8.  v0:= v4.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L076dbc.  call temp:= `b`(v0) @signature `Lb/k;.b:(Ljava/net/Socket;)Lb/r;` @kind static;
  #L076dc2.  v0:= temp @kind object;
  #L076dc4.  call temp:= `a`(v0) @signature `Lb/k;.a:(Lb/r;)Lb/e;` @kind static;
  #L076dca.  v0:= temp @kind object;
  #L076dcc.  v4.`a.a.b.c.n` @type ^`b.e` := v0 @kind object;
  #L076dd0.  v0:= v4.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L076dd4.  call temp:= `a`(v0) @signature `Lb/k;.a:(Ljava/net/Socket;)Lb/q;` @kind static;
  #L076dda.  v0:= temp @kind object;
  #L076ddc.  call temp:= `a`(v0) @signature `Lb/k;.a:(Lb/q;)Lb/d;` @kind static;
  #L076de2.  v0:= temp @kind object;
  #L076de4.  v4.`a.a.b.c.o` @type ^`b.d` := v0 @kind object;
  #L076de8.  return @kind void;
  #L076dea.  v0:= new `java.net.Socket`;
  #L076dee.  call `<init>`(v0, v1) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L076df4.  goto L076d8c;
  #L076df6.  v0:= Exception @type ^`java.net.ConnectException` @kind object;
  #L076df8.  v1:= new `java.net.ConnectException`;
  #L076dfc.  v2:= new `java.lang.StringBuilder`;
  #L076e00.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L076e06.  v3:= "Failed to connect to " @kind object;
  #L076e0a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076e10.  v2:= temp @kind object;
  #L076e12.  v3:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076e16.  call temp:= `c`(v3) @signature `La/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L076e1c.  v3:= temp @kind object;
  #L076e1e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076e24.  v2:= temp @kind object;
  #L076e26.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L076e2c.  v2:= temp @kind object;
  #L076e2e.  call `<init>`(v1, v2) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076e34.  call temp:= `initCause`(v1, v0) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L076e3a.  throw v1;
  catch `java.net.ConnectException` @[Try_start0..Try_end0] goto L076df6;
}
procedure `void` `a`(`a.a.b.c` v6 @kind this, `int` v7 , `int` v8 , `int` v9 ) @signature `La/a/b/c;.a:(III)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L076e5c.  v5:= 0I;
  #L076e5e.  call temp:= `e`(v6) @signature `La/a/b/c;.e:()La/x;` @kind direct;
  #L076e64.  v1:= temp @kind object;
  #L076e66.  call temp:= `a`(v1) @signature `La/x;.a:()La/r;` @kind virtual;
  #L076e6c.  v2:= temp @kind object;
  #L076e6e.  v0:= 0I;
  #L076e70.  v3:= 21I;
  #L076e74.  v0:= v0 + 1;
  #L076e78.  if v0 <= v3 then goto L076eae;
  #L076e7c.  v0:= new `java.net.ProtocolException`;
  #L076e80.  v1:= new `java.lang.StringBuilder`;
  #L076e84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L076e8a.  v2:= "Too many tunnel connections attempted: " @kind object;
  #L076e8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076e94.  v1:= temp @kind object;
  #L076e96.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L076e9c.  v1:= temp @kind object;
  #L076e9e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L076ea4.  v1:= temp @kind object;
  #L076ea6.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076eac.  throw v0;
  #L076eae.  call `a`(v6, v7, v8) @signature `La/a/b/c;.a:(II)V` @kind direct;
  #L076eb4.  call temp:= `a`(v6, v8, v9, v1, v2) @signature `La/a/b/c;.a:(IILa/x;La/r;)La/x;` @kind direct;
  #L076eba.  v1:= temp @kind object;
  #L076ebc.  if v1 != 0 then goto L076ec2;
  #L076ec0.  return @kind void;
  #L076ec2.  v4:= v6.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L076ec6.  call `a`(v4) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L076ecc.  v6.`a.a.b.c.i` @type ^`java.net.Socket` := v5 @kind object;
  #L076ed0.  v6.`a.a.b.c.o` @type ^`b.d` := v5 @kind object;
  #L076ed4.  v6.`a.a.b.c.n` @type ^`b.e` := v5 @kind object;
  #L076ed8.  goto L076e74;
}
procedure `void` `a`(`a.a.b.c` v5 @kind this, `a.a.b.b` v6 @kind object) @signature `La/a/b/c;.a:(La/a/b/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L076eec.  v0:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076ef0.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L076ef6.  v0:= temp @kind object;
  #L076ef8.  call temp:= `i`(v0) @signature `La/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L076efe.  v0:= temp @kind object;
  #L076f00.  if v0 != 0 then goto L076f16;
  #L076f04.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L076f08.  v5.`a.a.b.c.l` @type ^`a.v` := v0 @kind object;
  #L076f0c.  v0:= v5.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L076f10.  v5.`a.a.b.c.j` @type ^`java.net.Socket` := v0 @kind object;
  #L076f14.  return @kind void;
  #L076f16.  call `b`(v5, v6) @signature `La/a/b/c;.b:(La/a/b/b;)V` @kind direct;
  #L076f1c.  v0:= v5.`a.a.b.c.l` @type ^`a.v` @kind object;
  #L076f20.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L076f24.  if v0 != v1 then goto L076f14;
  #L076f28.  v0:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L076f2c.  v1:= 0I;
  #L076f2e.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L076f34.  v0:= new `a.a.e.g$a`;
  #L076f38.  v1:= 1I;
  #L076f3a.  call `<init>`(v0, v1) @signature `La/a/e/g$a;.<init>:(Z)V` @kind direct;
  #L076f40.  v1:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L076f44.  v2:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076f48.  call temp:= `a`(v2) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L076f4e.  v2:= temp @kind object;
  #L076f50.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L076f56.  v2:= temp @kind object;
  #L076f58.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L076f5e.  v2:= temp @kind object;
  #L076f60.  v3:= v5.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L076f64.  v4:= v5.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L076f68.  call temp:= `a`(v0, v1, v2, v3, v4) @signature `La/a/e/g$a;.a:(Ljava/net/Socket;Ljava/lang/String;Lb/e;Lb/d;)La/a/e/g$a;` @kind virtual;
  #L076f6e.  v0:= temp @kind object;
  #L076f70.  call temp:= `a`(v0, v5) @signature `La/a/e/g$a;.a:(La/a/e/g$b;)La/a/e/g$a;` @kind virtual;
  #L076f76.  v0:= temp @kind object;
  #L076f78.  call temp:= `a`(v0) @signature `La/a/e/g$a;.a:()La/a/e/g;` @kind virtual;
  #L076f7e.  v0:= temp @kind object;
  #L076f80.  v5.`a.a.b.c.m` @type ^`a.a.e.g` := v0 @kind object;
  #L076f84.  v0:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L076f88.  call `c`(v0) @signature `La/a/e/g;.c:()V` @kind virtual;
  #L076f8e.  goto L076f14;
}
procedure `void` `b`(`a.a.b.c` v9 @kind this, `a.a.b.b` v10 @kind object) @signature `La/a/b/c;.b:(La/a/b/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L076fa0.  v1:= 0I;
  #L076fa2.  v0:= v9.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L076fa6.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L076fac.  v2:= temp @kind object;
  #L076fae.  call temp:= `i`(v2) @signature `La/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L076fb4.  v0:= temp @kind object;
  #Try_start0.  
  #L076fb6.  v3:= v9.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L076fba.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L076fc0.  v4:= temp @kind object;
  #L076fc2.  call temp:= `f`(v4) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L076fc8.  v4:= temp @kind object;
  #L076fca.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L076fd0.  v5:= temp @kind object;
  #L076fd2.  call temp:= `g`(v5) @signature `La/r;.g:()I` @kind virtual;
  #L076fd8.  v5:= temp;
  #L076fda.  v6:= 1I;
  #L076fdc.  call temp:= `createSocket`(v0, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L076fe2.  v0:= temp @kind object;
  #L076fe4.  v0:= (`javax.net.ssl.SSLSocket`) v0 @kind object;
  #Try_end0.  
  #Try_start1.  
  #L076fe8.  call temp:= `a`(v10, v0) @signature `La/a/b/b;.a:(Ljavax/net/ssl/SSLSocket;)La/k;` @kind virtual;
  #L076fee.  v3:= temp @kind object;
  #L076ff0.  call temp:= `d`(v3) @signature `La/k;.d:()Z` @kind virtual;
  #L076ff6.  v4:= temp;
  #L076ff8.  if v4 == 0 then goto L077022;
  #L076ffc.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L077002.  v4:= temp @kind object;
  #L077004.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07700a.  v5:= temp @kind object;
  #L07700c.  call temp:= `f`(v5) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L077012.  v5:= temp @kind object;
  #L077014.  call temp:= `e`(v2) @signature `La/a;.e:()Ljava/util/List;` @kind virtual;
  #L07701a.  v6:= temp @kind object;
  #L07701c.  call `a`(v4, v0, v5, v6) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L077022.  call `startHandshake`(v0) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L077028.  call temp:= `getSession`(v0) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L07702e.  v4:= temp @kind object;
  #L077030.  call temp:= `a`(v4) @signature `La/p;.a:(Ljavax/net/ssl/SSLSession;)La/p;` @kind static;
  #L077036.  v4:= temp @kind object;
  #L077038.  call temp:= `j`(v2) @signature `La/a;.j:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L07703e.  v5:= temp @kind object;
  #L077040.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077046.  v6:= temp @kind object;
  #L077048.  call temp:= `f`(v6) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07704e.  v6:= temp @kind object;
  #L077050.  call temp:= `getSession`(v0) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L077056.  v7:= temp @kind object;
  #L077058.  call temp:= `verify`(v5, v6, v7) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L07705e.  v5:= temp;
  #L077060.  if v5 != 0 then goto L077154;
  #L077064.  call temp:= `b`(v4) @signature `La/p;.b:()Ljava/util/List;` @kind virtual;
  #L07706a.  v1:= temp @kind object;
  #L07706c.  v3:= 0I;
  #L07706e.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L077074.  v1:= temp @kind object;
  #L077076.  v1:= (`java.security.cert.X509Certificate`) v1 @kind object;
  #L07707a.  v3:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L07707e.  v4:= new `java.lang.StringBuilder`;
  #L077082.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077088.  v5:= "Hostname " @kind object;
  #L07708c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077092.  v4:= temp @kind object;
  #L077094.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07709a.  v2:= temp @kind object;
  #L07709c.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0770a2.  v2:= temp @kind object;
  #L0770a4.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0770aa.  v2:= temp @kind object;
  #L0770ac.  v4:= " not verified:\n    certificate: " @kind object;
  #L0770b0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0770b6.  v2:= temp @kind object;
  #L0770b8.  call temp:= `a`(v1) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L0770be.  v4:= temp @kind object;
  #L0770c0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0770c6.  v2:= temp @kind object;
  #L0770c8.  v4:= "\n    DN: " @kind object;
  #L0770cc.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0770d2.  v2:= temp @kind object;
  #L0770d4.  call temp:= `getSubjectDN`(v1) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L0770da.  v4:= temp @kind object;
  #L0770dc.  call temp:= `getName`(v4) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L0770e2.  v4:= temp @kind object;
  #L0770e4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0770ea.  v2:= temp @kind object;
  #L0770ec.  v4:= "\n    subjectAltNames: " @kind object;
  #L0770f0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0770f6.  v2:= temp @kind object;
  #L0770f8.  call temp:= `a`(v1) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L0770fe.  v1:= temp @kind object;
  #L077100.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077106.  v1:= temp @kind object;
  #L077108.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07710e.  v1:= temp @kind object;
  #L077110.  call `<init>`(v3, v1) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L077116.  throw v3;
  #Try_end1.  
  #L077118.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L07711a.  v8:= v1 @kind object;
  #L07711c.  v1:= v0 @kind object;
  #L07711e.  v0:= v8 @kind object;
  #Try_start2.  
  #L077120.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L077126.  v2:= temp;
  #L077128.  if v2 == 0 then goto L0771f8;
  #L07712c.  v2:= new `java.io.IOException`;
  #L077130.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L077136.  throw v2;
  #Try_end2.  
  #L077138.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07713a.  if v1 == 0 then goto L07714c;
  #L07713e.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L077144.  v2:= temp @kind object;
  #L077146.  call `b`(v2, v1) @signature `La/a/g/e;.b:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L07714c.  call `a`(v1) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L077152.  throw v0;
  #Try_start3.  
  #L077154.  call temp:= `k`(v2) @signature `La/a;.k:()La/g;` @kind virtual;
  #L07715a.  v5:= temp @kind object;
  #L07715c.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077162.  v2:= temp @kind object;
  #L077164.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07716a.  v2:= temp @kind object;
  #L07716c.  call temp:= `b`(v4) @signature `La/p;.b:()Ljava/util/List;` @kind virtual;
  #L077172.  v6:= temp @kind object;
  #L077174.  call `a`(v5, v2, v6) @signature `La/g;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L07717a.  call temp:= `d`(v3) @signature `La/k;.d:()Z` @kind virtual;
  #L077180.  v2:= temp;
  #L077182.  if v2 == 0 then goto L077196;
  #L077186.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L07718c.  v1:= temp @kind object;
  #L07718e.  call temp:= `a`(v1, v0) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L077194.  v1:= temp @kind object;
  #L077196.  v9.`a.a.b.c.j` @type ^`java.net.Socket` := v0 @kind object;
  #L07719a.  v2:= v9.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07719e.  call temp:= `b`(v2) @signature `Lb/k;.b:(Ljava/net/Socket;)Lb/r;` @kind static;
  #L0771a4.  v2:= temp @kind object;
  #L0771a6.  call temp:= `a`(v2) @signature `Lb/k;.a:(Lb/r;)Lb/e;` @kind static;
  #L0771ac.  v2:= temp @kind object;
  #L0771ae.  v9.`a.a.b.c.n` @type ^`b.e` := v2 @kind object;
  #L0771b2.  v2:= v9.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L0771b6.  call temp:= `a`(v2) @signature `Lb/k;.a:(Ljava/net/Socket;)Lb/q;` @kind static;
  #L0771bc.  v2:= temp @kind object;
  #L0771be.  call temp:= `a`(v2) @signature `Lb/k;.a:(Lb/q;)Lb/d;` @kind static;
  #L0771c4.  v2:= temp @kind object;
  #L0771c6.  v9.`a.a.b.c.o` @type ^`b.d` := v2 @kind object;
  #L0771ca.  v9.`a.a.b.c.k` @type ^`a.p` := v4 @kind object;
  #L0771ce.  if v1 == 0 then goto L0771f2;
  #L0771d2.  call temp:= `a`(v1) @signature `La/v;.a:(Ljava/lang/String;)La/v;` @kind static;
  #L0771d8.  v1:= temp @kind object;
  #L0771da.  v9.`a.a.b.c.l` @type ^`a.v` := v1 @kind object;
  #Try_end3.  
  #L0771de.  if v0 == 0 then goto L0771f0;
  #L0771e2.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L0771e8.  v1:= temp @kind object;
  #L0771ea.  call `b`(v1, v0) @signature `La/a/g/e;.b:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L0771f0.  return @kind void;
  #Try_start4.  
  #L0771f2.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #Try_end4.  
  #L0771f6.  goto L0771da;
  #Try_start5.  
  #L0771f8.  throw v0;
  #Try_end5.  
  #L0771fa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0771fc.  v8:= v1 @kind object;
  #L0771fe.  v1:= v0 @kind object;
  #L077200.  v0:= v8 @kind object;
  #L077202.  goto L07713a;
  #L077204.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L077206.  goto L077120;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L077204;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L077138;
  catch `java.lang.AssertionError` @[Try_start1..Try_end1] goto L077118;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0771fa;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L077138;
  catch `java.lang.AssertionError` @[Try_start3..Try_end3] goto L077118;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L0771fa;
  catch `java.lang.AssertionError` @[Try_start4..Try_end4] goto L077118;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L0771fa;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L077138;
}
procedure `a.x` `e`(`a.a.b.c` v4 @kind this) @signature `La/a/b/c;.e:()La/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07725c.  v0:= new `a.x$a`;
  #L077260.  call `<init>`(v0) @signature `La/x$a;.<init>:()V` @kind direct;
  #L077266.  v1:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07726a.  call temp:= `a`(v1) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L077270.  v1:= temp @kind object;
  #L077272.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077278.  v1:= temp @kind object;
  #L07727a.  call temp:= `a`(v0, v1) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L077280.  v0:= temp @kind object;
  #L077282.  v1:= "Host" @kind object;
  #L077286.  v2:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07728a.  call temp:= `a`(v2) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L077290.  v2:= temp @kind object;
  #L077292.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077298.  v2:= temp @kind object;
  #L07729a.  v3:= 1I;
  #L07729c.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(La/r;Z)Ljava/lang/String;` @kind static;
  #L0772a2.  v2:= temp @kind object;
  #L0772a4.  call temp:= `a`(v0, v1, v2) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @kind virtual;
  #L0772aa.  v0:= temp @kind object;
  #L0772ac.  v1:= "Proxy-Connection" @kind object;
  #L0772b0.  v2:= "Keep-Alive" @kind object;
  #L0772b4.  call temp:= `a`(v0, v1, v2) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @kind virtual;
  #L0772ba.  v0:= temp @kind object;
  #L0772bc.  v1:= "User-Agent" @kind object;
  #L0772c0.  call temp:= `a`() @signature `La/a/d;.a:()Ljava/lang/String;` @kind static;
  #L0772c6.  v2:= temp @kind object;
  #L0772c8.  call temp:= `a`(v0, v1, v2) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @kind virtual;
  #L0772ce.  v0:= temp @kind object;
  #L0772d0.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L0772d6.  v0:= temp @kind object;
  #L0772d8.  return v0 @kind object;
}
procedure `a.a.c.c` `a`(`a.a.b.c` v4 @kind this, `a.u` v5 @kind object, `a.a.b.g` v6 @kind object) @signature `La/a/b/c;.a:(La/u;La/a/b/g;)La/a/c/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0772ec.  v0:= v4.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L0772f0.  if v0 == 0 then goto L077304;
  #L0772f4.  v0:= new `a.a.e.f`;
  #L0772f8.  v1:= v4.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L0772fc.  call `<init>`(v0, v5, v6, v1) @signature `La/a/e/f;.<init>:(La/u;La/a/b/g;La/a/e/g;)V` @kind direct;
  #L077302.  return v0 @kind object;
  #L077304.  v0:= v4.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L077308.  call temp:= `b`(v5) @signature `La/u;.b:()I` @kind virtual;
  #L07730e.  v1:= temp;
  #L077310.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L077316.  v0:= v4.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07731a.  call temp:= `a`(v0) @signature `Lb/e;.a:()Lb/s;` @kind interface;
  #L077320.  v0:= temp @kind object;
  #L077322.  call temp:= `b`(v5) @signature `La/u;.b:()I` @kind virtual;
  #L077328.  v1:= temp;
  #L07732a.  v2:= (`long`) v1 @kind i2l;
  #L07732c.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L077330.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L077336.  v0:= v4.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L07733a.  call temp:= `a`(v0) @signature `Lb/d;.a:()Lb/s;` @kind interface;
  #L077340.  v0:= temp @kind object;
  #L077342.  call temp:= `c`(v5) @signature `La/u;.c:()I` @kind virtual;
  #L077348.  v1:= temp;
  #L07734a.  v2:= (`long`) v1 @kind i2l;
  #L07734c.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L077350.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L077356.  v0:= new `a.a.d.a`;
  #L07735a.  v1:= v4.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07735e.  v2:= v4.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L077362.  call `<init>`(v0, v5, v6, v1, v2) @signature `La/a/d/a;.<init>:(La/u;La/a/b/g;Lb/e;Lb/d;)V` @kind direct;
  #L077368.  goto L077302;
}
procedure `a.ab` `a`(`a.a.b.c` v1 @kind this) @signature `La/a/b/c;.a:()La/ab;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07737c.  v0:= v1.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L077380.  return v0 @kind object;
}
procedure `void` `a`(`a.a.b.c` v5 @kind this, `int` v6 , `int` v7 , `int` v8 , `boolean` v9 ) @signature `La/a/b/c;.a:(IIIZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L077394.  v2:= 0I;
  #L077396.  v0:= v5.`a.a.b.c.l` @type ^`a.v` @kind object;
  #L07739a.  if v0 == 0 then goto L0773ae;
  #L07739e.  v0:= new `java.lang.IllegalStateException`;
  #L0773a2.  v1:= "already connected" @kind object;
  #L0773a6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0773ac.  throw v0;
  #L0773ae.  v0:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L0773b2.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L0773b8.  v0:= temp @kind object;
  #L0773ba.  call temp:= `f`(v0) @signature `La/a;.f:()Ljava/util/List;` @kind virtual;
  #L0773c0.  v0:= temp @kind object;
  #L0773c2.  v3:= new `a.a.b.b`;
  #L0773c6.  call `<init>`(v3, v0) @signature `La/a/b/b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L0773cc.  v1:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L0773d0.  call temp:= `a`(v1) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L0773d6.  v1:= temp @kind object;
  #L0773d8.  call temp:= `i`(v1) @signature `La/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L0773de.  v1:= temp @kind object;
  #L0773e0.  if v1 != 0 then goto L077486;
  #L0773e4.  v1:= `@@a.k.c` @type ^`a.k` @kind object;
  #L0773e8.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L0773ee.  v0:= temp;
  #L0773f0.  if v0 != 0 then goto L07740e;
  #L0773f4.  v0:= new `a.a.b.e`;
  #L0773f8.  v1:= new `java.net.UnknownServiceException`;
  #L0773fc.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L077400.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L077406.  call `<init>`(v0, v1) @signature `La/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L07740c.  throw v0;
  #L07740e.  v0:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L077412.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L077418.  v0:= temp @kind object;
  #L07741a.  call temp:= `a`(v0) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077420.  v0:= temp @kind object;
  #L077422.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L077428.  v0:= temp @kind object;
  #L07742a.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L077430.  v1:= temp @kind object;
  #L077432.  call temp:= `b`(v1, v0) @signature `La/a/g/e;.b:(Ljava/lang/String;)Z` @kind virtual;
  #L077438.  v1:= temp;
  #L07743a.  if v1 != 0 then goto L077486;
  #L07743e.  v1:= new `a.a.b.e`;
  #L077442.  v2:= new `java.net.UnknownServiceException`;
  #L077446.  v3:= new `java.lang.StringBuilder`;
  #L07744a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077450.  v4:= "CLEARTEXT communication to " @kind object;
  #L077454.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07745a.  v3:= temp @kind object;
  #L07745c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077462.  v0:= temp @kind object;
  #L077464.  v3:= " not permitted by network security policy" @kind object;
  #L077468.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07746e.  v0:= temp @kind object;
  #L077470.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077476.  v0:= temp @kind object;
  #L077478.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07747e.  call `<init>`(v1, v2) @signature `La/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L077484.  throw v1;
  #L077486.  v1:= v2 @kind object;
  #Try_start0.  
  #L077488.  v0:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07748c.  call temp:= `d`(v0) @signature `La/ab;.d:()Z` @kind virtual;
  #L077492.  v0:= temp;
  #L077494.  if v0 == 0 then goto L0774c6;
  #L077498.  call `a`(v5, v6, v7, v8) @signature `La/a/b/c;.a:(III)V` @kind direct;
  #L07749e.  call `a`(v5, v3) @signature `La/a/b/c;.a:(La/a/b/b;)V` @kind direct;
  #Try_end0.  
  #L0774a4.  v0:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L0774a8.  if v0 == 0 then goto L0774c4;
  #L0774ac.  v1:= v5.`a.a.b.c.g` @type ^`a.j` @kind object;
  #L0774b0.  @monitorenter v1
  #Try_start1.  
  #L0774b2.  v0:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L0774b6.  call temp:= `a`(v0) @signature `La/a/e/g;.a:()I` @kind virtual;
  #L0774bc.  v0:= temp;
  #L0774be.  v5.`a.a.b.c.c` @type ^`int` := v0;
  #L0774c2.  @monitorexit v1
  #Try_end1.  
  #L0774c4.  return @kind void;
  #Try_start2.  
  #L0774c6.  call `a`(v5, v6, v7) @signature `La/a/b/c;.a:(II)V` @kind direct;
  #Try_end2.  
  #L0774cc.  goto L07749e;
  #L0774ce.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L0774d0.  v4:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L0774d4.  call `a`(v4) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L0774da.  v4:= v5.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L0774de.  call `a`(v4) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L0774e4.  v5.`a.a.b.c.j` @type ^`java.net.Socket` := v2 @kind object;
  #L0774e8.  v5.`a.a.b.c.i` @type ^`java.net.Socket` := v2 @kind object;
  #L0774ec.  v5.`a.a.b.c.n` @type ^`b.e` := v2 @kind object;
  #L0774f0.  v5.`a.a.b.c.o` @type ^`b.d` := v2 @kind object;
  #L0774f4.  v5.`a.a.b.c.k` @type ^`a.p` := v2 @kind object;
  #L0774f8.  v5.`a.a.b.c.l` @type ^`a.v` := v2 @kind object;
  #L0774fc.  v5.`a.a.b.c.m` @type ^`a.a.e.g` := v2 @kind object;
  #L077500.  if v1 != 0 then goto L077520;
  #L077504.  v1:= new `a.a.b.e`;
  #L077508.  call `<init>`(v1, v0) @signature `La/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L07750e.  if v9 == 0 then goto L07751e;
  #L077512.  call temp:= `a`(v3, v0) @signature `La/a/b/b;.a:(Ljava/io/IOException;)Z` @kind virtual;
  #L077518.  v0:= temp;
  #L07751a.  if v0 != 0 then goto L077488;
  #L07751e.  throw v1;
  #L077520.  call `a`(v1, v0) @signature `La/a/b/e;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L077526.  goto L07750e;
  #L077528.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L07752a.  @monitorexit v1
  #Try_end3.  
  #L07752c.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L0774ce;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L077528;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L0774ce;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L077528;
}
procedure `void` `a`(`a.a.b.c` v2 @kind this, `a.a.e.g` v3 @kind object) @signature `La/a/b/c;.a:(La/a/e/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07756c.  v1:= v2.`a.a.b.c.g` @type ^`a.j` @kind object;
  #L077570.  @monitorenter v1
  #Try_start0.  
  #L077572.  call temp:= `a`(v3) @signature `La/a/e/g;.a:()I` @kind virtual;
  #L077578.  v0:= temp;
  #L07757a.  v2.`a.a.b.c.c` @type ^`int` := v0;
  #L07757e.  @monitorexit v1
  #L077580.  return @kind void;
  #L077582.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L077584.  @monitorexit v1
  #Try_end0.  
  #L077586.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L077582;
}
procedure `void` `a`(`a.a.b.c` v1 @kind this, `a.a.e.i` v2 @kind object) @signature `La/a/b/c;.a:(La/a/e/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0775a4.  v0:= `@@a.a.e.b.e` @type ^`a.a.e.b` @kind object;
  #L0775a8.  call `a`(v2, v0) @signature `La/a/e/i;.a:(La/a/e/b;)V` @kind virtual;
  #L0775ae.  return @kind void;
}
procedure `boolean` `a`(`a.a.b.c` v2 @kind this, `a.a` v3 @kind object) @signature `La/a/b/c;.a:(La/a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0775c0.  v0:= v2.`a.a.b.c.d` @type ^`java.util.List` @kind object;
  #L0775c4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0775ca.  v0:= temp;
  #L0775cc.  v1:= v2.`a.a.b.c.c` @type ^`int`;
  #L0775d0.  if v0 >= v1 then goto L0775fc;
  #L0775d4.  call temp:= `a`(v2) @signature `La/a/b/c;.a:()La/ab;` @kind virtual;
  #L0775da.  v0:= temp @kind object;
  #L0775dc.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L0775e2.  v0:= temp @kind object;
  #L0775e4.  call temp:= `equals`(v3, v0) @signature `La/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0775ea.  v0:= temp;
  #L0775ec.  if v0 == 0 then goto L0775fc;
  #L0775f0.  v0:= v2.`a.a.b.c.a` @type ^`boolean` @kind boolean;
  #L0775f4.  if v0 != 0 then goto L0775fc;
  #L0775f8.  v0:= 1I;
  #L0775fa.  return v0;
  #L0775fc.  v0:= 0I;
  #L0775fe.  goto L0775fa;
}
procedure `boolean` `a`(`a.a.b.c` v5 @kind this, `boolean` v6 ) @signature `La/a/b/c;.a:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L077610.  v0:= 1I;
  #L077612.  v1:= 0I;
  #L077614.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L077618.  call temp:= `isClosed`(v2) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L07761e.  v2:= temp;
  #L077620.  if v2 != 0 then goto L077644;
  #L077624.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L077628.  call temp:= `isInputShutdown`(v2) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L07762e.  v2:= temp;
  #L077630.  if v2 != 0 then goto L077644;
  #L077634.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L077638.  call temp:= `isOutputShutdown`(v2) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L07763e.  v2:= temp;
  #L077640.  if v2 == 0 then goto L077648;
  #L077644.  v0:= v1;
  #L077646.  return v0;
  #L077648.  v2:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07764c.  if v2 == 0 then goto L077664;
  #L077650.  v2:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L077654.  call temp:= `d`(v2) @signature `La/a/e/g;.d:()Z` @kind virtual;
  #L07765a.  v2:= temp;
  #L07765c.  if v2 == 0 then goto L077646;
  #L077660.  v0:= v1;
  #L077662.  goto L077646;
  #L077664.  if v6 == 0 then goto L077646;
  #Try_start0.  
  #L077668.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07766c.  call temp:= `getSoTimeout`(v2) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #Try_end0.  
  #L077672.  v3:= temp;
  #Try_start1.  
  #L077674.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L077678.  v4:= 1I;
  #L07767a.  call `setSoTimeout`(v2, v4) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L077680.  v2:= v5.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L077684.  call temp:= `e`(v2) @signature `Lb/e;.e:()Z` @kind interface;
  #Try_end1.  
  #L07768a.  v2:= temp;
  #L07768c.  if v2 == 0 then goto L07769e;
  #Try_start2.  
  #L077690.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L077694.  call `setSoTimeout`(v2, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L07769a.  v0:= v1;
  #L07769c.  goto L077646;
  #L07769e.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L0776a2.  call `setSoTimeout`(v2, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L0776a8.  goto L077646;
  #L0776aa.  v1:= Exception @type ^`java.net.SocketTimeoutException` @kind object;
  #L0776ac.  goto L077646;
  #L0776ae.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0776b0.  v4:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L0776b4.  call `setSoTimeout`(v4, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L0776ba.  throw v2;
  #Try_end2.  
  #L0776bc.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L0776be.  v0:= v1;
  #L0776c0.  goto L077646;
  catch `java.net.SocketTimeoutException` @[Try_start0..Try_end0] goto L0776aa;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L0776bc;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0776ae;
  catch `java.net.SocketTimeoutException` @[Try_start2..Try_end2] goto L0776aa;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L0776bc;
}
procedure `java.net.Socket` `b`(`a.a.b.c` v1 @kind this) @signature `La/a/b/c;.b:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0776f8.  v0:= v1.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L0776fc.  return v0 @kind object;
}
procedure `a.p` `c`(`a.a.b.c` v1 @kind this) @signature `La/a/b/c;.c:()La/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L077710.  v0:= v1.`a.a.b.c.k` @type ^`a.p` @kind object;
  #L077714.  return v0 @kind object;
}
procedure `boolean` `d`(`a.a.b.c` v1 @kind this) @signature `La/a/b/c;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L077728.  v0:= v1.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07772c.  if v0 == 0 then goto L077734;
  #L077730.  v0:= 1I;
  #L077732.  return v0;
  #L077734.  v0:= 0I;
  #L077736.  goto L077732;
}
procedure `java.lang.String` `toString`(`a.a.b.c` v2 @kind this) @signature `La/a/b/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L077748.  v0:= new `java.lang.StringBuilder`;
  #L07774c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L077752.  v1:= "Connection{" @kind object;
  #L077756.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07775c.  v0:= temp @kind object;
  #L07775e.  v1:= v2.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L077762.  call temp:= `a`(v1) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L077768.  v1:= temp @kind object;
  #L07776a.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L077770.  v1:= temp @kind object;
  #L077772.  call temp:= `f`(v1) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L077778.  v1:= temp @kind object;
  #L07777a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077780.  v0:= temp @kind object;
  #L077782.  v1:= ":" @kind object;
  #L077786.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07778c.  v0:= temp @kind object;
  #L07778e.  v1:= v2.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L077792.  call temp:= `a`(v1) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L077798.  v1:= temp @kind object;
  #L07779a.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L0777a0.  v1:= temp @kind object;
  #L0777a2.  call temp:= `g`(v1) @signature `La/r;.g:()I` @kind virtual;
  #L0777a8.  v1:= temp;
  #L0777aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L0777b0.  v0:= temp @kind object;
  #L0777b2.  v1:= ", proxy=" @kind object;
  #L0777b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0777bc.  v0:= temp @kind object;
  #L0777be.  v1:= v2.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L0777c2.  call temp:= `b`(v1) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L0777c8.  v1:= temp @kind object;
  #L0777ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0777d0.  v0:= temp @kind object;
  #L0777d2.  v1:= " hostAddress=" @kind object;
  #L0777d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0777dc.  v0:= temp @kind object;
  #L0777de.  v1:= v2.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L0777e2.  call temp:= `c`(v1) @signature `La/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L0777e8.  v1:= temp @kind object;
  #L0777ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0777f0.  v0:= temp @kind object;
  #L0777f2.  v1:= " cipherSuite=" @kind object;
  #L0777f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0777fc.  v1:= temp @kind object;
  #L0777fe.  v0:= v2.`a.a.b.c.k` @type ^`a.p` @kind object;
  #L077802.  if v0 == 0 then goto L077848;
  #L077806.  v0:= v2.`a.a.b.c.k` @type ^`a.p` @kind object;
  #L07780a.  call temp:= `a`(v0) @signature `La/p;.a:()La/h;` @kind virtual;
  #L077810.  v0:= temp @kind object;
  #L077812.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077818.  v0:= temp @kind object;
  #L07781a.  v1:= " protocol=" @kind object;
  #L07781e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077824.  v0:= temp @kind object;
  #L077826.  v1:= v2.`a.a.b.c.l` @type ^`a.v` @kind object;
  #L07782a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L077830.  v0:= temp @kind object;
  #L077832.  v1:= 125I;
  #L077836.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07783c.  v0:= temp @kind object;
  #L07783e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L077844.  v0:= temp @kind object;
  #L077846.  return v0 @kind object;
  #L077848.  v0:= "none" @kind object;
  #L07784c.  goto L077812;
}

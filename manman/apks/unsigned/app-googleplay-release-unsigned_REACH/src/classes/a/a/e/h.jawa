record `a.a.e.h` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `a.a.e.d$a` `a.a.e.h.b` @AccessFlag FINAL;
  `b.e` `a.a.e.h.c` @AccessFlag PRIVATE_FINAL;
  `a.a.e.h$a` `a.a.e.h.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.e.h.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@a.a.e.h.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L07f874.  v0:= constclass @type ^`a.a.e.e` @kind object;
  #L07f878.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L07f87e.  v0:= temp @kind object;
  #L07f880.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L07f886.  v0:= temp @kind object;
  #L07f888.  `@@a.a.e.h.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L07f88c.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.h` v3 @kind this, `b.e` v4 @kind object, `boolean` v5 ) @signature `La/a/e/h;.<init>:(Lb/e;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L07f8a0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07f8a6.  v3.`a.a.e.h.c` @type ^`b.e` := v4 @kind object;
  #L07f8aa.  v3.`a.a.e.h.e` @type ^`boolean` := v5 @kind boolean;
  #L07f8ae.  v0:= new `a.a.e.h$a`;
  #L07f8b2.  v1:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f8b6.  call `<init>`(v0, v1) @signature `La/a/e/h$a;.<init>:(Lb/e;)V` @kind direct;
  #L07f8bc.  v3.`a.a.e.h.d` @type ^`a.a.e.h$a` := v0 @kind object;
  #L07f8c0.  v0:= new `a.a.e.d$a`;
  #L07f8c4.  v1:= 4096I;
  #L07f8c8.  v2:= v3.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07f8cc.  call `<init>`(v0, v1, v2) @signature `La/a/e/d$a;.<init>:(ILb/r;)V` @kind direct;
  #L07f8d2.  v3.`a.a.e.h.b` @type ^`a.a.e.d$a` := v0 @kind object;
  #L07f8d6.  return @kind void;
}
procedure `int` `a`(`int` v4 , `byte` v5 , `short` v6 ) @signature `La/a/e/h;.a:(IBS)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07f8e8.  v0:= v5 ^& 8;
  #L07f8ec.  if v0 == 0 then goto L07f8f4;
  #L07f8f0.  v4:= v4 + -1;
  #L07f8f4.  if v6 <= v4 then goto L07f928;
  #L07f8f8.  v0:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L07f8fc.  v1:= 2I;
  #L07f8fe.  v1:= new `java.lang.Object`[v1];
  #L07f902.  v2:= 0I;
  #L07f904.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L07f90a.  v3:= temp @kind object;
  #L07f90c.  v1[v2]:= v3 @kind object;
  #L07f910.  v2:= 1I;
  #L07f912.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f918.  v3:= temp @kind object;
  #L07f91a.  v1[v2]:= v3 @kind object;
  #L07f91e.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f924.  v0:= temp @kind object;
  #L07f926.  throw v0;
  #L07f928.  v0:= v4 - v6 @kind int;
  #L07f92c.  v0:= (`short`) v0 @kind i2s;
  #L07f92e.  return v0;
}
procedure `int` `a`(`b.e` v2 @kind object) @signature `La/a/e/h;.a:(Lb/e;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L07f940.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07f946.  v0:= temp;
  #L07f948.  v0:= v0 ^& 255;
  #L07f94c.  v0:= v0 ^< 16;
  #L07f950.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07f956.  v1:= temp;
  #L07f958.  v1:= v1 ^& 255;
  #L07f95c.  v1:= v1 ^< 8;
  #L07f960.  v0:= v0 ^| v1 @kind int;
  #L07f962.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07f968.  v1:= temp;
  #L07f96a.  v1:= v1 ^& 255;
  #L07f96e.  v0:= v0 ^| v1 @kind int;
  #L07f970.  return v0;
}
procedure `java.util.List` `a`(`a.a.e.h` v2 @kind this, `int` v3 , `short` v4 , `byte` v5 , `int` v6 ) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L07f984.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07f988.  v1:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07f98c.  v1.`a.a.e.h$a.d` @type ^`int` := v3;
  #L07f990.  v0.`a.a.e.h$a.a` @type ^`int` := v3;
  #L07f994.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07f998.  v0.`a.a.e.h$a.e` @type ^`short` := v4 @kind char;
  #L07f99c.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07f9a0.  v0.`a.a.e.h$a.b` @type ^`byte` := v5 @kind byte;
  #L07f9a4.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07f9a8.  v0.`a.a.e.h$a.c` @type ^`int` := v6;
  #L07f9ac.  v0:= v2.`a.a.e.h.b` @type ^`a.a.e.d$a` @kind object;
  #L07f9b0.  call `a`(v0) @signature `La/a/e/d$a;.a:()V` @kind virtual;
  #L07f9b6.  v0:= v2.`a.a.e.h.b` @type ^`a.a.e.d$a` @kind object;
  #L07f9ba.  call temp:= `b`(v0) @signature `La/a/e/d$a;.b:()Ljava/util/List;` @kind virtual;
  #L07f9c0.  v0:= temp @kind object;
  #L07f9c2.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 ) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07f9d4.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f9d8.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07f9de.  v1:= temp;
  #L07f9e0.  v0:= -2147483648I;
  #L07f9e4.  v0:= v0 ^& v1 @kind int;
  #L07f9e6.  if v0 == 0 then goto L07fa10;
  #L07f9ea.  v0:= 1I;
  #L07f9ec.  v2:= 2147483647I;
  #L07f9f2.  v1:= v1 ^& v2 @kind int;
  #L07f9f4.  v2:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f9f8.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07f9fe.  v2:= temp;
  #L07fa00.  v2:= v2 ^& 255;
  #L07fa04.  v2:= v2 + 1;
  #L07fa08.  call `a`(v4, v5, v1, v2, v0) @signature `La/a/e/h$b;.a:(IIIZ)V` @kind interface;
  #L07fa0e.  return @kind void;
  #L07fa10.  v0:= 0I;
  #L07fa12.  goto L07f9ec;
}
procedure `void` `a`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `La/a/e/h;.a:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07fa24.  v0:= 0I;
  #L07fa26.  if v7 != 0 then goto L07fa3c;
  #L07fa2a.  v1:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L07fa2e.  v0:= new `java.lang.Object`[v0];
  #L07fa32.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fa38.  v0:= temp @kind object;
  #L07fa3a.  throw v0;
  #L07fa3c.  v1:= v6 ^& 1;
  #L07fa40.  if v1 == 0 then goto L07fa8c;
  #L07fa44.  v1:= 1I;
  #L07fa46.  v2:= v6 ^& 8;
  #L07fa4a.  if v2 == 0 then goto L07fa60;
  #L07fa4e.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fa52.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07fa58.  v0:= temp;
  #L07fa5a.  v0:= v0 ^& 255;
  #L07fa5e.  v0:= (`short`) v0 @kind i2s;
  #L07fa60.  v2:= v6 ^& 32;
  #L07fa64.  if v2 == 0 then goto L07fa72;
  #L07fa68.  call `a`(v3, v4, v7) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @kind direct;
  #L07fa6e.  v5:= v5 + -5;
  #L07fa72.  call temp:= `a`(v5, v6, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07fa78.  v2:= temp;
  #L07fa7a.  call temp:= `a`(v3, v2, v0, v6, v7) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L07fa80.  v0:= temp @kind object;
  #L07fa82.  v2:= -1I;
  #L07fa84.  call `a`(v4, v1, v7, v2, v0) @signature `La/a/e/h$b;.a:(ZIILjava/util/List;)V` @kind interface;
  #L07fa8a.  return @kind void;
  #L07fa8c.  v1:= v0;
  #L07fa8e.  goto L07fa46;
}
procedure `void` `b`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.b:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07faa0.  v1:= 1I;
  #L07faa2.  v0:= 0I;
  #L07faa4.  v2:= v7 ^& 1;
  #L07faa8.  if v2 == 0 then goto L07facc;
  #L07faac.  v2:= v1;
  #L07faae.  v3:= v7 ^& 32;
  #L07fab2.  if v3 == 0 then goto L07fad0;
  #L07fab6.  if v1 == 0 then goto L07fad4;
  #L07faba.  v1:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L07fabe.  v0:= new `java.lang.Object`[v0];
  #L07fac2.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fac8.  v0:= temp @kind object;
  #L07faca.  throw v0;
  #L07facc.  v2:= v0;
  #L07face.  goto L07faae;
  #L07fad0.  v1:= v0;
  #L07fad2.  goto L07fab6;
  #L07fad4.  v1:= v7 ^& 8;
  #L07fad8.  if v1 == 0 then goto L07faee;
  #L07fadc.  v0:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fae0.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07fae6.  v0:= temp;
  #L07fae8.  v0:= v0 ^& 255;
  #L07faec.  v0:= (`short`) v0 @kind i2s;
  #L07faee.  call temp:= `a`(v6, v7, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07faf4.  v1:= temp;
  #L07faf6.  v3:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fafa.  call `a`(v5, v2, v8, v3, v1) @signature `La/a/e/h$b;.a:(ZILb/e;I)V` @kind interface;
  #L07fb00.  v1:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fb04.  v2:= (`long`) v0 @kind i2l;
  #L07fb06.  call `g`(v1, v2) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07fb0c.  return @kind void;
}
procedure `void` `c`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.c:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07fb20.  v3:= 0I;
  #L07fb22.  v0:= 5I;
  #L07fb24.  if v6 == v0 then goto L07fb48;
  #L07fb28.  v0:= "TYPE_PRIORITY length: %d != 5" @kind object;
  #L07fb2c.  v1:= 1I;
  #L07fb2e.  v1:= new `java.lang.Object`[v1];
  #L07fb32.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07fb38.  v2:= temp @kind object;
  #L07fb3a.  v1[v3]:= v2 @kind object;
  #L07fb3e.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fb44.  v0:= temp @kind object;
  #L07fb46.  throw v0;
  #L07fb48.  if v8 != 0 then goto L07fb5e;
  #L07fb4c.  v0:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L07fb50.  v1:= new `java.lang.Object`[v3];
  #L07fb54.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fb5a.  v0:= temp @kind object;
  #L07fb5c.  throw v0;
  #L07fb5e.  call `a`(v4, v5, v8) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @kind direct;
  #L07fb64.  return @kind void;
}
procedure `void` `d`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.d:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07fb78.  v2:= 1I;
  #L07fb7a.  v3:= 0I;
  #L07fb7c.  v0:= 4I;
  #L07fb7e.  if v6 == v0 then goto L07fba0;
  #L07fb82.  v0:= "TYPE_RST_STREAM length: %d != 4" @kind object;
  #L07fb86.  v1:= new `java.lang.Object`[v2];
  #L07fb8a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07fb90.  v2:= temp @kind object;
  #L07fb92.  v1[v3]:= v2 @kind object;
  #L07fb96.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fb9c.  v0:= temp @kind object;
  #L07fb9e.  throw v0;
  #L07fba0.  if v8 != 0 then goto L07fbb6;
  #L07fba4.  v0:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L07fba8.  v1:= new `java.lang.Object`[v3];
  #L07fbac.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fbb2.  v0:= temp @kind object;
  #L07fbb4.  throw v0;
  #L07fbb6.  v0:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fbba.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07fbc0.  v0:= temp;
  #L07fbc2.  call temp:= `a`(v0) @signature `La/a/e/b;.a:(I)La/a/e/b;` @kind static;
  #L07fbc8.  v1:= temp @kind object;
  #L07fbca.  if v1 != 0 then goto L07fbec;
  #L07fbce.  v1:= "TYPE_RST_STREAM unexpected error code: %d" @kind object;
  #L07fbd2.  v2:= new `java.lang.Object`[v2];
  #L07fbd6.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07fbdc.  v0:= temp @kind object;
  #L07fbde.  v2[v3]:= v0 @kind object;
  #L07fbe2.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fbe8.  v0:= temp @kind object;
  #L07fbea.  throw v0;
  #L07fbec.  call `a`(v5, v8, v1) @signature `La/a/e/h$b;.a:(ILa/a/e/b;)V` @kind interface;
  #L07fbf2.  return @kind void;
}
procedure `void` `e`(`a.a.e.h` v7 @kind this, `a.a.e.h$b` v8 @kind object, `int` v9 , `byte` v10 , `int` v11 ) @signature `La/a/e/h;.e:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07fc04.  v6:= 1I;
  #L07fc06.  v2:= 0I;
  #L07fc08.  if v11 == 0 then goto L07fc1e;
  #L07fc0c.  v0:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L07fc10.  v1:= new `java.lang.Object`[v2];
  #L07fc14.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fc1a.  v0:= temp @kind object;
  #L07fc1c.  throw v0;
  #L07fc1e.  v0:= v10 ^& 1;
  #L07fc22.  if v0 == 0 then goto L07fc44;
  #L07fc26.  if v9 == 0 then goto L07fc3c;
  #L07fc2a.  v0:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L07fc2e.  v1:= new `java.lang.Object`[v2];
  #L07fc32.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fc38.  v0:= temp @kind object;
  #L07fc3a.  throw v0;
  #L07fc3c.  call `a`(v8) @signature `La/a/e/h$b;.a:()V` @kind interface;
  #L07fc42.  return @kind void;
  #L07fc44.  v0:= v9 %% 6;
  #L07fc48.  if v0 == 0 then goto L07fc6a;
  #L07fc4c.  v0:= "TYPE_SETTINGS length %% 6 != 0: %s" @kind object;
  #L07fc50.  v1:= new `java.lang.Object`[v6];
  #L07fc54.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07fc5a.  v3:= temp @kind object;
  #L07fc5c.  v1[v2]:= v3 @kind object;
  #L07fc60.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fc66.  v0:= temp @kind object;
  #L07fc68.  throw v0;
  #L07fc6a.  v3:= new `a.a.e.n`;
  #L07fc6e.  call `<init>`(v3) @signature `La/a/e/n;.<init>:()V` @kind direct;
  #L07fc74.  v1:= v2;
  #L07fc76.  if v1 >= v9 then goto L07fd0c;
  #L07fc7a.  v0:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fc7e.  call temp:= `i`(v0) @signature `Lb/e;.i:()S` @kind interface;
  #L07fc84.  v0:= temp;
  #L07fc86.  v4:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fc8a.  call temp:= `j`(v4) @signature `Lb/e;.j:()I` @kind interface;
  #L07fc90.  v4:= temp;
  #L07fc92.  goto L07fd14;
  #L07fc98.  call temp:= `a`(v3, v0, v4) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07fc9e.  v0:= v1 + 6;
  #L07fca2.  v1:= v0;
  #L07fca4.  goto L07fc76;
  #L07fca6.  if v4 == 0 then goto L07fc98;
  #L07fcaa.  if v4 == v6 then goto L07fc98;
  #L07fcae.  v0:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L07fcb2.  v1:= new `java.lang.Object`[v2];
  #L07fcb6.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fcbc.  v0:= temp @kind object;
  #L07fcbe.  throw v0;
  #L07fcc0.  v0:= 4I;
  #L07fcc2.  goto L07fc98;
  #L07fcc4.  v0:= 7I;
  #L07fcc6.  if v4 >= 0 then goto L07fc98;
  #L07fcca.  v0:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L07fcce.  v1:= new `java.lang.Object`[v2];
  #L07fcd2.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fcd8.  v0:= temp @kind object;
  #L07fcda.  throw v0;
  #L07fcdc.  v5:= 16384I;
  #L07fce0.  if v4 < v5 then goto L07fcee;
  #L07fce4.  v5:= 16777215I;
  #L07fcea.  if v4 <= v5 then goto L07fc98;
  #L07fcee.  v0:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s" @kind object;
  #L07fcf2.  v1:= new `java.lang.Object`[v6];
  #L07fcf6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07fcfc.  v3:= temp @kind object;
  #L07fcfe.  v1[v2]:= v3 @kind object;
  #L07fd02.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fd08.  v0:= temp @kind object;
  #L07fd0a.  throw v0;
  #L07fd0c.  call `a`(v8, v2, v3) @signature `La/a/e/h$b;.a:(ZLa/a/e/n;)V` @kind interface;
  #L07fd12.  goto L07fc42;
  #L07fd14.  switch v0
                  | 1 => goto L07fc98
                  | 2 => goto L07fca6
                  | 3 => goto L07fcc0
                  | 4 => goto L07fcc4
                  | 5 => goto L07fcdc
                  | 6 => goto L07fc98
                  | else => goto L07fc98;
}
procedure `void` `f`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `La/a/e/h;.f:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07fd44.  v0:= 0I;
  #L07fd46.  if v7 != 0 then goto L07fd5c;
  #L07fd4a.  v1:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L07fd4e.  v0:= new `java.lang.Object`[v0];
  #L07fd52.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fd58.  v0:= temp @kind object;
  #L07fd5a.  throw v0;
  #L07fd5c.  v1:= v6 ^& 8;
  #L07fd60.  if v1 == 0 then goto L07fd76;
  #L07fd64.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fd68.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07fd6e.  v0:= temp;
  #L07fd70.  v0:= v0 ^& 255;
  #L07fd74.  v0:= (`short`) v0 @kind i2s;
  #L07fd76.  v1:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fd7a.  call temp:= `j`(v1) @signature `Lb/e;.j:()I` @kind interface;
  #L07fd80.  v1:= temp;
  #L07fd82.  v2:= 2147483647I;
  #L07fd88.  v1:= v1 ^& v2 @kind int;
  #L07fd8a.  v2:= v5 + -4;
  #L07fd8e.  call temp:= `a`(v2, v6, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07fd94.  v2:= temp;
  #L07fd96.  call temp:= `a`(v3, v2, v0, v6, v7) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L07fd9c.  v0:= temp @kind object;
  #L07fd9e.  call `a`(v4, v7, v1, v0) @signature `La/a/e/h$b;.a:(IILjava/util/List;)V` @kind interface;
  #L07fda4.  return @kind void;
}
procedure `void` `g`(`a.a.e.h` v5 @kind this, `a.a.e.h$b` v6 @kind object, `int` v7 , `byte` v8 , `int` v9 ) @signature `La/a/e/h;.g:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07fdb8.  v0:= 1I;
  #L07fdba.  v1:= 0I;
  #L07fdbc.  v2:= 8I;
  #L07fdc0.  if v7 == v2 then goto L07fde2;
  #L07fdc4.  v2:= "TYPE_PING length != 8: %s" @kind object;
  #L07fdc8.  v0:= new `java.lang.Object`[v0];
  #L07fdcc.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07fdd2.  v3:= temp @kind object;
  #L07fdd4.  v0[v1]:= v3 @kind object;
  #L07fdd8.  call temp:= `b`(v2, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fdde.  v0:= temp @kind object;
  #L07fde0.  throw v0;
  #L07fde2.  if v9 == 0 then goto L07fdf8;
  #L07fde6.  v0:= "TYPE_PING streamId != 0" @kind object;
  #L07fdea.  v1:= new `java.lang.Object`[v1];
  #L07fdee.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fdf4.  v0:= temp @kind object;
  #L07fdf6.  throw v0;
  #L07fdf8.  v2:= v5.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fdfc.  call temp:= `j`(v2) @signature `Lb/e;.j:()I` @kind interface;
  #L07fe02.  v2:= temp;
  #L07fe04.  v3:= v5.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fe08.  call temp:= `j`(v3) @signature `Lb/e;.j:()I` @kind interface;
  #L07fe0e.  v3:= temp;
  #L07fe10.  v4:= v8 ^& 1;
  #L07fe14.  if v4 == 0 then goto L07fe20;
  #L07fe18.  call `a`(v6, v0, v2, v3) @signature `La/a/e/h$b;.a:(ZII)V` @kind interface;
  #L07fe1e.  return @kind void;
  #L07fe20.  v0:= v1;
  #L07fe22.  goto L07fe18;
}
procedure `void` `h`(`a.a.e.h` v6 @kind this, `a.a.e.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `La/a/e/h;.h:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07fe34.  v5:= 1I;
  #L07fe36.  v4:= 0I;
  #L07fe38.  v0:= 8I;
  #L07fe3c.  if v8 >= v0 then goto L07fe5e;
  #L07fe40.  v0:= "TYPE_GOAWAY length < 8: %s" @kind object;
  #L07fe44.  v1:= new `java.lang.Object`[v5];
  #L07fe48.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07fe4e.  v2:= temp @kind object;
  #L07fe50.  v1[v4]:= v2 @kind object;
  #L07fe54.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fe5a.  v0:= temp @kind object;
  #L07fe5c.  throw v0;
  #L07fe5e.  if v10 == 0 then goto L07fe74;
  #L07fe62.  v0:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L07fe66.  v1:= new `java.lang.Object`[v4];
  #L07fe6a.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07fe70.  v0:= temp @kind object;
  #L07fe72.  throw v0;
  #L07fe74.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fe78.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07fe7e.  v1:= temp;
  #L07fe80.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fe84.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07fe8a.  v0:= temp;
  #L07fe8c.  v2:= v8 + -8;
  #L07fe90.  call temp:= `a`(v0) @signature `La/a/e/b;.a:(I)La/a/e/b;` @kind static;
  #L07fe96.  v3:= temp @kind object;
  #L07fe98.  if v3 != 0 then goto L07feba;
  #L07fe9c.  v1:= "TYPE_GOAWAY unexpected error code: %d" @kind object;
  #L07fea0.  v2:= new `java.lang.Object`[v5];
  #L07fea4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07feaa.  v0:= temp @kind object;
  #L07feac.  v2[v4]:= v0 @kind object;
  #L07feb0.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07feb6.  v0:= temp @kind object;
  #L07feb8.  throw v0;
  #L07feba.  v0:= `@@b.f.b` @type ^`b.f` @kind object;
  #L07febe.  if v2 <= 0 then goto L07fed0;
  #L07fec2.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07fec6.  v4:= (`long`) v2 @kind i2l;
  #L07fec8.  call temp:= `c`(v0, v4) @signature `Lb/e;.c:(J)Lb/f;` @kind interface;
  #L07fece.  v0:= temp @kind object;
  #L07fed0.  call `a`(v7, v1, v3, v0) @signature `La/a/e/h$b;.a:(ILa/a/e/b;Lb/f;)V` @kind interface;
  #L07fed6.  return @kind void;
}
procedure `void` `i`(`a.a.e.h` v6 @kind this, `a.a.e.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `La/a/e/h;.i:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07fee8.  v5:= 1I;
  #L07feea.  v4:= 0I;
  #L07feec.  v0:= 4I;
  #L07feee.  if v8 == v0 then goto L07ff10;
  #L07fef2.  v0:= "TYPE_WINDOW_UPDATE length !=4: %s" @kind object;
  #L07fef6.  v1:= new `java.lang.Object`[v5];
  #L07fefa.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ff00.  v2:= temp @kind object;
  #L07ff02.  v1[v4]:= v2 @kind object;
  #L07ff06.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ff0c.  v0:= temp @kind object;
  #L07ff0e.  throw v0;
  #L07ff10.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ff14.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07ff1a.  v0:= temp;
  #L07ff1c.  v0:= (`long`) v0 @kind i2l;
  #L07ff1e.  v2:= 2147483647L;
  #L07ff24.  v0:= v0 ^& v2 @kind long;
  #L07ff26.  v2:= 0L;
  #L07ff2a.  v2:= lcmp(v0, v2);
  #L07ff2e.  if v2 != 0 then goto L07ff50;
  #L07ff32.  v2:= "windowSizeIncrement was 0" @kind object;
  #L07ff36.  v3:= new `java.lang.Object`[v5];
  #L07ff3a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L07ff40.  v0:= temp @kind object;
  #L07ff42.  v3[v4]:= v0 @kind object;
  #L07ff46.  call temp:= `b`(v2, v3) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ff4c.  v0:= temp @kind object;
  #L07ff4e.  throw v0;
  #L07ff50.  call `a`(v7, v10, v0) @signature `La/a/e/h$b;.a:(IJ)V` @kind interface;
  #L07ff56.  return @kind void;
}
procedure `void` `a`(`a.a.e.h` v7 @kind this, `a.a.e.h$b` v8 @kind object) @signature `La/a/e/h;.a:(La/a/e/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07ff68.  v6:= 1I;
  #L07ff6a.  v5:= 0I;
  #L07ff6c.  v0:= v7.`a.a.e.h.e` @type ^`boolean` @kind boolean;
  #L07ff70.  if v0 == 0 then goto L07ff92;
  #L07ff74.  call temp:= `a`(v7, v6, v8) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @kind virtual;
  #L07ff7a.  v0:= temp;
  #L07ff7c.  if v0 != 0 then goto L080014;
  #L07ff80.  v0:= "Required SETTINGS preface not received" @kind object;
  #L07ff84.  v1:= new `java.lang.Object`[v5];
  #L07ff88.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ff8e.  v0:= temp @kind object;
  #L07ff90.  throw v0;
  #L07ff92.  v0:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ff96.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L07ff9a.  call temp:= `g`(v1) @signature `Lb/f;.g:()I` @kind virtual;
  #L07ffa0.  v1:= temp;
  #L07ffa2.  v2:= (`long`) v1 @kind i2l;
  #L07ffa4.  call temp:= `c`(v0, v2) @signature `Lb/e;.c:(J)Lb/f;` @kind interface;
  #L07ffaa.  v0:= temp @kind object;
  #L07ffac.  v1:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07ffb0.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L07ffb4.  call temp:= `isLoggable`(v1, v2) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L07ffba.  v1:= temp;
  #L07ffbc.  if v1 == 0 then goto L07ffe6;
  #L07ffc0.  v1:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07ffc4.  v2:= "<< CONNECTION %s" @kind object;
  #L07ffc8.  v3:= new `java.lang.Object`[v6];
  #L07ffcc.  call temp:= `e`(v0) @signature `Lb/f;.e:()Ljava/lang/String;` @kind virtual;
  #L07ffd2.  v4:= temp @kind object;
  #L07ffd4.  v3[v5]:= v4 @kind object;
  #L07ffd8.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07ffde.  v2:= temp @kind object;
  #L07ffe0.  call `fine`(v1, v2) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L07ffe6.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L07ffea.  call temp:= `equals`(v1, v0) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07fff0.  v1:= temp;
  #L07fff2.  if v1 != 0 then goto L080014;
  #L07fff6.  v1:= "Expected a connection header but was %s" @kind object;
  #L07fffa.  v2:= new `java.lang.Object`[v6];
  #L07fffe.  call temp:= `a`(v0) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L080004.  v0:= temp @kind object;
  #L080006.  v2[v5]:= v0 @kind object;
  #L08000a.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L080010.  v0:= temp @kind object;
  #L080012.  throw v0;
  #L080014.  return @kind void;
}
procedure `boolean` `a`(`a.a.e.h` v7 @kind this, `boolean` v8 , `a.a.e.h$b` v9 @kind object) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L080028.  v1:= 0I;
  #L08002a.  v0:= 1I;
  #Try_start0.  
  #L08002c.  v2:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L080030.  v4:= 9L;
  #L080034.  call `a`(v2, v4) @signature `Lb/e;.a:(J)V` @kind interface;
  #Try_end0.  
  #L08003a.  v2:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L08003e.  call temp:= `a`(v2) @signature `La/a/e/h;.a:(Lb/e;)I` @kind static;
  #L080044.  v2:= temp;
  #L080046.  if v2 < 0 then goto L080052;
  #L08004a.  v3:= 16384I;
  #L08004e.  if v2 <= v3 then goto L080076;
  #L080052.  v3:= "FRAME_SIZE_ERROR: %s" @kind object;
  #L080056.  v0:= new `java.lang.Object`[v0];
  #L08005a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L080060.  v2:= temp @kind object;
  #L080062.  v0[v1]:= v2 @kind object;
  #L080066.  call temp:= `b`(v3, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L08006c.  v0:= temp @kind object;
  #L08006e.  throw v0;
  #L080070.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L080072.  v0:= v1;
  #L080074.  return v0;
  #L080076.  v3:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L08007a.  call temp:= `h`(v3) @signature `Lb/e;.h:()B` @kind interface;
  #L080080.  v3:= temp;
  #L080082.  v3:= v3 ^& 255;
  #L080086.  v3:= (`byte`) v3 @kind i2b;
  #L080088.  if v8 == 0 then goto L0800b0;
  #L08008c.  v4:= 4I;
  #L08008e.  if v3 == v4 then goto L0800b0;
  #L080092.  v2:= "Expected a SETTINGS frame but was %s" @kind object;
  #L080096.  v0:= new `java.lang.Object`[v0];
  #L08009a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L0800a0.  v3:= temp @kind object;
  #L0800a2.  v0[v1]:= v3 @kind object;
  #L0800a6.  call temp:= `b`(v2, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0800ac.  v0:= temp @kind object;
  #L0800ae.  throw v0;
  #L0800b0.  v1:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0800b4.  call temp:= `h`(v1) @signature `Lb/e;.h:()B` @kind interface;
  #L0800ba.  v1:= temp;
  #L0800bc.  v1:= v1 ^& 255;
  #L0800c0.  v1:= (`byte`) v1 @kind i2b;
  #L0800c2.  v4:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0800c6.  call temp:= `j`(v4) @signature `Lb/e;.j:()I` @kind interface;
  #L0800cc.  v4:= temp;
  #L0800ce.  v5:= 2147483647I;
  #L0800d4.  v4:= v4 ^& v5 @kind int;
  #L0800d6.  v5:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L0800da.  v6:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L0800de.  call temp:= `isLoggable`(v5, v6) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L0800e4.  v5:= temp;
  #L0800e6.  if v5 == 0 then goto L0800fc;
  #L0800ea.  v5:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L0800ee.  call temp:= `a`(v0, v4, v2, v3, v1) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L0800f4.  v6:= temp @kind object;
  #L0800f6.  call `fine`(v5, v6) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L0800fc.  goto L080158;
  #L080102.  v1:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L080106.  v2:= (`long`) v2 @kind i2l;
  #L080108.  call `g`(v1, v2) @signature `Lb/e;.g:(J)V` @kind interface;
  #L08010e.  goto L080074;
  #L080110.  call `b`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.b:(La/a/e/h$b;IBI)V` @kind direct;
  #L080116.  goto L080074;
  #L080118.  call `a`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.a:(La/a/e/h$b;IBI)V` @kind direct;
  #L08011e.  goto L080074;
  #L080120.  call `c`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.c:(La/a/e/h$b;IBI)V` @kind direct;
  #L080126.  goto L080074;
  #L080128.  call `d`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.d:(La/a/e/h$b;IBI)V` @kind direct;
  #L08012e.  goto L080074;
  #L080130.  call `e`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.e:(La/a/e/h$b;IBI)V` @kind direct;
  #L080136.  goto L080074;
  #L080138.  call `f`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.f:(La/a/e/h$b;IBI)V` @kind direct;
  #L08013e.  goto L080074;
  #L080140.  call `g`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.g:(La/a/e/h$b;IBI)V` @kind direct;
  #L080146.  goto L080074;
  #L080148.  call `h`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.h:(La/a/e/h$b;IBI)V` @kind direct;
  #L08014e.  goto L080074;
  #L080150.  call `i`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.i:(La/a/e/h$b;IBI)V` @kind direct;
  #L080156.  goto L080074;
  #L080158.  switch v3
                  | 0 => goto L080110
                  | 1 => goto L080118
                  | 2 => goto L080120
                  | 3 => goto L080128
                  | 4 => goto L080130
                  | 5 => goto L080138
                  | 6 => goto L080140
                  | 7 => goto L080148
                  | 8 => goto L080150
                  | else => goto L080102;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L080070;
}
procedure `void` `close`(`a.a.e.h` v1 @kind this) @signature `La/a/e/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0801a4.  v0:= v1.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L0801a8.  call `close`(v0) @signature `Lb/e;.close:()V` @kind interface;
  #L0801ae.  return @kind void;
}

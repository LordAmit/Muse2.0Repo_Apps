record `a.a.e.l` @kind class @AccessFlag FINAL {
  `java.util.concurrent.CountDownLatch` `a.a.e.l.a` @AccessFlag PRIVATE_FINAL;
  `long` `a.a.e.l.b` @AccessFlag PRIVATE;
  `long` `a.a.e.l.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L082920.  v2:= -1L;
  #L082924.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08292a.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L08292e.  v1:= 1I;
  #L082930.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L082936.  v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L08293a.  v4.`a.a.e.l.b` @type ^`long` := v2 @kind wide;
  #L08293e.  v4.`a.a.e.l.c` @type ^`long` := v2 @kind wide;
  #L082942.  return @kind void;
}
procedure `void` `a`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L082954.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L082958.  v2:= -1L;
  #L08295c.  v0:= lcmp(v0, v2);
  #L082960.  if v0 == 0 then goto L082970;
  #L082964.  v0:= new `java.lang.IllegalStateException`;
  #L082968.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L08296e.  throw v0;
  #L082970.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L082976.  v0:= temp @kind wide;
  #L082978.  v4.`a.a.e.l.b` @type ^`long` := v0 @kind wide;
  #L08297c.  return @kind void;
}
procedure `void` `b`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L082990.  v2:= -1L;
  #L082994.  v0:= v4.`a.a.e.l.c` @type ^`long` @kind wide;
  #L082998.  v0:= lcmp(v0, v2);
  #L08299c.  if v0 != 0 then goto L0829ac;
  #L0829a0.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L0829a4.  v0:= lcmp(v0, v2);
  #L0829a8.  if v0 != 0 then goto L0829b8;
  #L0829ac.  v0:= new `java.lang.IllegalStateException`;
  #L0829b0.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L0829b6.  throw v0;
  #L0829b8.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L0829be.  v0:= temp @kind wide;
  #L0829c0.  v4.`a.a.e.l.c` @type ^`long` := v0 @kind wide;
  #L0829c4.  v0:= v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L0829c8.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L0829ce.  return @kind void;
}
procedure `void` `c`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0829e0.  v2:= -1L;
  #L0829e4.  v0:= v4.`a.a.e.l.c` @type ^`long` @kind wide;
  #L0829e8.  v0:= lcmp(v0, v2);
  #L0829ec.  if v0 != 0 then goto L0829fc;
  #L0829f0.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L0829f4.  v0:= lcmp(v0, v2);
  #L0829f8.  if v0 != 0 then goto L082a08;
  #L0829fc.  v0:= new `java.lang.IllegalStateException`;
  #L082a00.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L082a06.  throw v0;
  #L082a08.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L082a0c.  v2:= 1L;
  #L082a10.  v0:= v0 - v2 @kind long;
  #L082a12.  v4.`a.a.e.l.c` @type ^`long` := v0 @kind wide;
  #L082a16.  v0:= v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L082a1a.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L082a20.  return @kind void;
}

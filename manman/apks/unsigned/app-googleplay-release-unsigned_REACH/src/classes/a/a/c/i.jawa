record `a.a.c.i` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`a.r` v3 @kind object) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L07992c.  call temp:= `h`(v3) @signature `La/r;.h:()Ljava/lang/String;` @kind virtual;
  #L079932.  v0:= temp @kind object;
  #L079934.  call temp:= `j`(v3) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L07993a.  v1:= temp @kind object;
  #L07993c.  if v1 == 0 then goto L07996e;
  #L079940.  v2:= new `java.lang.StringBuilder`;
  #L079944.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07994a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079950.  v0:= temp @kind object;
  #L079952.  v2:= 63I;
  #L079956.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07995c.  v0:= temp @kind object;
  #L07995e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079964.  v0:= temp @kind object;
  #L079966.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07996c.  v0:= temp @kind object;
  #L07996e.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.x` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `La/a/c/i;.a:(La/x;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L079980.  v0:= new `java.lang.StringBuilder`;
  #L079984.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07998a.  call temp:= `b`(v2) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L079990.  v1:= temp @kind object;
  #L079992.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L079998.  v1:= 32I;
  #L07999c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0799a2.  call temp:= `b`(v2, v3) @signature `La/a/c/i;.b:(La/x;Ljava/net/Proxy$Type;)Z` @kind static;
  #L0799a8.  v1:= temp;
  #L0799aa.  if v1 == 0 then goto L0799d0;
  #L0799ae.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L0799b4.  v1:= temp @kind object;
  #L0799b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0799bc.  v1:= " HTTP/1.1" @kind object;
  #L0799c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0799c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0799cc.  v0:= temp @kind object;
  #L0799ce.  return v0 @kind object;
  #L0799d0.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L0799d6.  v1:= temp @kind object;
  #L0799d8.  call temp:= `a`(v1) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @kind static;
  #L0799de.  v1:= temp @kind object;
  #L0799e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0799e6.  goto L0799bc;
}
procedure `boolean` `b`(`a.x` v1 @kind object, `java.net.Proxy$Type` v2 @kind object) @signature `La/a/c/i;.b:(La/x;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L0799f8.  call temp:= `g`(v1) @signature `La/x;.g:()Z` @kind virtual;
  #L0799fe.  v0:= temp;
  #L079a00.  if v0 != 0 then goto L079a10;
  #L079a04.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L079a08.  if v2 != v0 then goto L079a10;
  #L079a0c.  v0:= 1I;
  #L079a0e.  return v0;
  #L079a10.  v0:= 0I;
  #L079a12.  goto L079a0e;
}

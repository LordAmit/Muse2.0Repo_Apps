record `a.a.e.g$6` @kind class @AccessFlag  extends `a.a.b` @kind class {
  `int` `a.a.e.g$6.a` @AccessFlag FINAL_SYNTHETIC;
  `b.c` `a.a.e.g$6.c` @AccessFlag FINAL_SYNTHETIC;
  `int` `a.a.e.g$6.d` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `a.a.e.g$6.e` @AccessFlag FINAL_SYNTHETIC;
  `a.a.e.g` `a.a.e.g$6.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.g$6` v0 @kind this, `a.a.e.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `b.c` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `La/a/e/g$6;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILb/c;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L07e124.  v0.`a.a.e.g$6.f` @type ^`a.a.e.g` := v1 @kind object;
  #L07e128.  v0.`a.a.e.g$6.a` @type ^`int` := v4;
  #L07e12c.  v0.`a.a.e.g$6.c` @type ^`b.c` := v5 @kind object;
  #L07e130.  v0.`a.a.e.g$6.d` @type ^`int` := v6;
  #L07e134.  v0.`a.a.e.g$6.e` @type ^`boolean` := v7 @kind boolean;
  #L07e138.  call `<init>`(v0, v2, v3) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L07e13e.  return @kind void;
}
procedure `void` `b`(`a.a.e.g$6` v5 @kind this) @signature `La/a/e/g$6;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L07e150.  v0:= v5.`a.a.e.g$6.f` @type ^`a.a.e.g` @kind object;
  #L07e154.  v0:= v0.`a.a.e.g.i` @type ^`a.a.e.m` @kind object;
  #L07e158.  v1:= v5.`a.a.e.g$6.a` @type ^`int`;
  #L07e15c.  v2:= v5.`a.a.e.g$6.c` @type ^`b.c` @kind object;
  #L07e160.  v3:= v5.`a.a.e.g$6.d` @type ^`int`;
  #L07e164.  v4:= v5.`a.a.e.g$6.e` @type ^`boolean` @kind boolean;
  #L07e168.  call temp:= `a`(v0, v1, v2, v3, v4) @signature `La/a/e/m;.a:(ILb/e;IZ)Z` @kind interface;
  #L07e16e.  v0:= temp;
  #L07e170.  if v0 == 0 then goto L07e18a;
  #L07e174.  v1:= v5.`a.a.e.g$6.f` @type ^`a.a.e.g` @kind object;
  #L07e178.  v1:= v1.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07e17c.  v2:= v5.`a.a.e.g$6.a` @type ^`int`;
  #L07e180.  v3:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #L07e184.  call `a`(v1, v2, v3) @signature `La/a/e/j;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07e18a.  if v0 != 0 then goto L07e196;
  #L07e18e.  v0:= v5.`a.a.e.g$6.e` @type ^`boolean` @kind boolean;
  #L07e192.  if v0 == 0 then goto L07e1b8;
  #L07e196.  v1:= v5.`a.a.e.g$6.f` @type ^`a.a.e.g` @kind object;
  #L07e19a.  @monitorenter v1
  #Try_end0.  
  #Try_start1.  
  #L07e19c.  v0:= v5.`a.a.e.g$6.f` @type ^`a.a.e.g` @kind object;
  #L07e1a0.  v0:= v0.`a.a.e.g.r` @type ^`java.util.Set` @kind object;
  #L07e1a4.  v2:= v5.`a.a.e.g$6.a` @type ^`int`;
  #L07e1a8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e1ae.  v2:= temp @kind object;
  #L07e1b0.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L07e1b6.  @monitorexit v1
  #L07e1b8.  return @kind void;
  #L07e1ba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e1bc.  @monitorexit v1
  #Try_end1.  
  #Try_start2.  
  #L07e1be.  throw v0;
  #Try_end2.  
  #L07e1c0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07e1c2.  goto L07e1b8;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07e1c0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07e1ba;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L07e1c0;
}

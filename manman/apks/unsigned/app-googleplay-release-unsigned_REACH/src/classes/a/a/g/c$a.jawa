record `a.a.g.c$a` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `boolean` `a.a.g.c$a.a` @AccessFlag ;
  `java.lang.String` `a.a.g.c$a.b` @AccessFlag ;
  `java.util.List` `a.a.g.c$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.g.c$a` v0 @kind this, `java.util.List` v1 @kind object) @signature `La/a/g/c$a;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L083960.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L083966.  v0.`a.a.g.c$a.c` @type ^`java.util.List` := v1 @kind object;
  #L08396a.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`a.a.g.c$a` v6 @kind this, `java.lang.Object` v7 @kind object, `java.lang.reflect.Method` v8 @kind object, `java.lang.Object`[] v9 @kind object) @signature `La/a/g/c$a;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08397c.  v1:= 0I;
  #L08397e.  v5:= 1I;
  #L083980.  v2:= 0I;
  #L083982.  call temp:= `getName`(v8) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L083988.  v0:= temp @kind object;
  #L08398a.  call temp:= `getReturnType`(v8) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L083990.  v3:= temp @kind object;
  #L083992.  if v9 != 0 then goto L08399a;
  #L083996.  v9:= `@@a.a.c.b` @type ^`java.lang.String`[] @kind object;
  #L08399a.  v4:= "supports" @kind object;
  #L08399e.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0839a4.  v4:= temp;
  #L0839a6.  if v4 == 0 then goto L0839bc;
  #L0839aa.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L0839ae.  if v4 != v3 then goto L0839bc;
  #L0839b2.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L0839b8.  v0:= temp @kind object;
  #L0839ba.  return v0 @kind object;
  #L0839bc.  v4:= "unsupported" @kind object;
  #L0839c0.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0839c6.  v4:= temp;
  #L0839c8.  if v4 == 0 then goto L0839dc;
  #L0839cc.  v4:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L0839d0.  if v4 != v3 then goto L0839dc;
  #L0839d4.  v6.`a.a.g.c$a.a` @type ^`boolean` := v5 @kind boolean;
  #L0839d8.  v0:= v1 @kind object;
  #L0839da.  goto L0839ba;
  #L0839dc.  v4:= "protocols" @kind object;
  #L0839e0.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0839e6.  v4:= temp;
  #L0839e8.  if v4 == 0 then goto L0839f8;
  #L0839ec.  v4:= length @variable v9;
  #L0839ee.  if v4 != 0 then goto L0839f8;
  #L0839f2.  v0:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L0839f6.  goto L0839ba;
  #L0839f8.  v4:= "selectProtocol" @kind object;
  #L0839fc.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L083a02.  v4:= temp;
  #L083a04.  if v4 != 0 then goto L083a18;
  #L083a08.  v4:= "select" @kind object;
  #L083a0c.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L083a12.  v4:= temp;
  #L083a14.  if v4 == 0 then goto L083a8e;
  #L083a18.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L083a1c.  if v4 != v3 then goto L083a8e;
  #L083a20.  v3:= length @variable v9;
  #L083a22.  if v3 != v5 then goto L083a8e;
  #L083a26.  v3:= v9[v2] @kind object;
  #L083a2a.  v3:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L083a2e.  if v3 == 0 then goto L083a8e;
  #L083a32.  v0:= v9[v2] @kind object;
  #L083a36.  v0:= (`java.util.List`) v0 @kind object;
  #L083a3a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L083a40.  v3:= temp;
  #L083a42.  v1:= v2;
  #L083a44.  if v1 >= v3 then goto L083a78;
  #L083a48.  v4:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L083a4c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083a52.  v5:= temp @kind object;
  #L083a54.  call temp:= `contains`(v4, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L083a5a.  v4:= temp;
  #L083a5c.  if v4 == 0 then goto L083a72;
  #L083a60.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083a66.  v0:= temp @kind object;
  #L083a68.  v0:= (`java.lang.String`) v0 @kind object;
  #L083a6c.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L083a70.  goto L0839ba;
  #L083a72.  v1:= v1 + 1;
  #L083a76.  goto L083a44;
  #L083a78.  v0:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L083a7c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L083a82.  v0:= temp @kind object;
  #L083a84.  v0:= (`java.lang.String`) v0 @kind object;
  #L083a88.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L083a8c.  goto L0839ba;
  #L083a8e.  v3:= "protocolSelected" @kind object;
  #L083a92.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L083a98.  v3:= temp;
  #L083a9a.  if v3 != 0 then goto L083aae;
  #L083a9e.  v3:= "selected" @kind object;
  #L083aa2.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L083aa8.  v0:= temp;
  #L083aaa.  if v0 == 0 then goto L083ac6;
  #L083aae.  v0:= length @variable v9;
  #L083ab0.  if v0 != v5 then goto L083ac6;
  #L083ab4.  v0:= v9[v2] @kind object;
  #L083ab8.  v0:= (`java.lang.String`) v0 @kind object;
  #L083abc.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L083ac0.  v0:= v1 @kind object;
  #L083ac2.  goto L0839ba;
  #L083ac6.  call temp:= `invoke`(v8, v6, v9) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L083acc.  v0:= temp @kind object;
  #L083ace.  goto L0839ba;
}

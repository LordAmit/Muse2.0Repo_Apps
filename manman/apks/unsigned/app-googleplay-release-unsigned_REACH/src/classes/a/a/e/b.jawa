record `a.a.e.b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `a.a.e.b.g` @AccessFlag PUBLIC_FINAL;
}
global `a.a.e.b` `@@a.a.e.b.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b` `@@a.a.e.b.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.a.e.b`[] `@@a.a.e.b.h` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/a/e/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07bcc0.  v8:= 4I;
  #L07bcc2.  v7:= 3I;
  #L07bcc4.  v6:= 2I;
  #L07bcc6.  v5:= 1I;
  #L07bcc8.  v4:= 0I;
  #L07bcca.  v0:= new `a.a.e.b`;
  #L07bcce.  v1:= "NO_ERROR" @kind object;
  #L07bcd2.  call `<init>`(v0, v1, v4, v4) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07bcd8.  `@@a.a.e.b.a` @type ^`a.a.e.b` := v0 @kind object;
  #L07bcdc.  v0:= new `a.a.e.b`;
  #L07bce0.  v1:= "PROTOCOL_ERROR" @kind object;
  #L07bce4.  call `<init>`(v0, v1, v5, v5) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07bcea.  `@@a.a.e.b.b` @type ^`a.a.e.b` := v0 @kind object;
  #L07bcee.  v0:= new `a.a.e.b`;
  #L07bcf2.  v1:= "INTERNAL_ERROR" @kind object;
  #L07bcf6.  call `<init>`(v0, v1, v6, v6) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07bcfc.  `@@a.a.e.b.c` @type ^`a.a.e.b` := v0 @kind object;
  #L07bd00.  v0:= new `a.a.e.b`;
  #L07bd04.  v1:= "FLOW_CONTROL_ERROR" @kind object;
  #L07bd08.  call `<init>`(v0, v1, v7, v7) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07bd0e.  `@@a.a.e.b.d` @type ^`a.a.e.b` := v0 @kind object;
  #L07bd12.  v0:= new `a.a.e.b`;
  #L07bd16.  v1:= "REFUSED_STREAM" @kind object;
  #L07bd1a.  v2:= 7I;
  #L07bd1c.  call `<init>`(v0, v1, v8, v2) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07bd22.  `@@a.a.e.b.e` @type ^`a.a.e.b` := v0 @kind object;
  #L07bd26.  v0:= new `a.a.e.b`;
  #L07bd2a.  v1:= "CANCEL" @kind object;
  #L07bd2e.  v2:= 5I;
  #L07bd30.  v3:= 8I;
  #L07bd34.  call `<init>`(v0, v1, v2, v3) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L07bd3a.  `@@a.a.e.b.f` @type ^`a.a.e.b` := v0 @kind object;
  #L07bd3e.  v0:= 6I;
  #L07bd40.  v0:= new `a.a.e.b`[v0];
  #L07bd44.  v1:= `@@a.a.e.b.a` @type ^`a.a.e.b` @kind object;
  #L07bd48.  v0[v4]:= v1 @kind object;
  #L07bd4c.  v1:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #L07bd50.  v0[v5]:= v1 @kind object;
  #L07bd54.  v1:= `@@a.a.e.b.c` @type ^`a.a.e.b` @kind object;
  #L07bd58.  v0[v6]:= v1 @kind object;
  #L07bd5c.  v1:= `@@a.a.e.b.d` @type ^`a.a.e.b` @kind object;
  #L07bd60.  v0[v7]:= v1 @kind object;
  #L07bd64.  v1:= `@@a.a.e.b.e` @type ^`a.a.e.b` @kind object;
  #L07bd68.  v0[v8]:= v1 @kind object;
  #L07bd6c.  v1:= 5I;
  #L07bd6e.  v2:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #L07bd72.  v0[v1]:= v2 @kind object;
  #L07bd76.  `@@a.a.e.b.h` @type ^`a.a.e.b`[] := v0 @kind object;
  #L07bd7a.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `La/a/e/b;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L07bd8c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L07bd92.  v0.`a.a.e.b.g` @type ^`int` := v3;
  #L07bd96.  return @kind void;
}
procedure `a.a.e.b` `a`(`int` v5 ) @signature `La/a/e/b;.a:(I)La/a/e/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07bda8.  call temp:= `values`() @signature `La/a/e/b;.values:()[La/a/e/b;` @kind static;
  #L07bdae.  v2:= temp @kind object;
  #L07bdb0.  v3:= length @variable v2;
  #L07bdb2.  v0:= 0I;
  #L07bdb4.  v1:= v0;
  #L07bdb6.  if v1 >= v3 then goto L07bdd0;
  #L07bdba.  v0:= v2[v1] @kind object;
  #L07bdbe.  v4:= v0.`a.a.e.b.g` @type ^`int`;
  #L07bdc2.  if v4 != v5 then goto L07bdc8;
  #L07bdc6.  return v0 @kind object;
  #L07bdc8.  v0:= v1 + 1;
  #L07bdcc.  v1:= v0;
  #L07bdce.  goto L07bdb6;
  #L07bdd0.  v0:= 0I;
  #L07bdd2.  goto L07bdc6;
}
procedure `a.a.e.b` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/a/e/b;.valueOf:(Ljava/lang/String;)La/a/e/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07bde4.  v0:= constclass @type ^`a.a.e.b` @kind object;
  #L07bde8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L07bdee.  v0:= temp @kind object;
  #L07bdf0.  v0:= (`a.a.e.b`) v0 @kind object;
  #L07bdf4.  return v0 @kind object;
}
procedure `a.a.e.b`[] `values`() @signature `La/a/e/b;.values:()[La/a/e/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L07be08.  v0:= `@@a.a.e.b.h` @type ^`a.a.e.b`[] @kind object;
  #L07be0c.  call temp:= `clone`(v0) @signature `[La/a/e/b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L07be12.  v0:= temp @kind object;
  #L07be14.  v0:= (`a.a.e.b`[]) v0 @kind object;
  #L07be18.  return v0 @kind object;
}

record `a.a.g.b` @kind class @AccessFlag FINAL extends `a.a.g.e` @kind class {
  `java.lang.reflect.Method` `a.a.g.b.a` @AccessFlag FINAL;
  `java.lang.reflect.Method` `a.a.g.b.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`a.a.g.b` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `La/a/g/b;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L083804.  call `<init>`(v0) @signature `La/a/g/e;.<init>:()V` @kind direct;
  #L08380a.  v0.`a.a.g.b.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L08380e.  v0.`a.a.g.b.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L083812.  return @kind void;
}
procedure `a.a.g.b` `a`() @signature `La/a/g/b;.a:()La/a/g/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L083824.  v0:= constclass @type ^`javax.net.ssl.SSLParameters` @kind object;
  #L083828.  v1:= "setApplicationProtocols" @kind object;
  #L08382c.  v2:= 1I;
  #L08382e.  v2:= new `java.lang.Class`[v2];
  #L083832.  v3:= 0I;
  #L083834.  v4:= constclass @type ^`java.lang.String`[] @kind object;
  #L083838.  v2[v3]:= v4 @kind object;
  #L08383c.  call temp:= `getMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L083842.  v1:= temp @kind object;
  #L083844.  v0:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L083848.  v2:= "getApplicationProtocol" @kind object;
  #L08384c.  v3:= 0I;
  #L08384e.  v3:= new `java.lang.Class`[v3];
  #L083852.  call temp:= `getMethod`(v0, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L083858.  v2:= temp @kind object;
  #L08385a.  v0:= new `a.a.g.b`;
  #L08385e.  call `<init>`(v0, v1, v2) @signature `La/a/g/b;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end0.  
  #L083864.  return v0 @kind object;
  #L083866.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L083868.  v0:= 0I;
  #L08386a.  goto L083864;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L083866;
}
procedure `java.lang.String` `a`(`a.a.g.b` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object) @signature `La/a/g/b;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L08388c.  v0:= v2.`a.a.g.b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L083890.  v1:= 0I;
  #L083892.  v1:= new `java.lang.Object`[v1];
  #L083896.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L08389c.  v0:= temp @kind object;
  #L08389e.  v0:= (`java.lang.String`) v0 @kind object;
  #L0838a2.  if v0 == 0 then goto L0838b6;
  #L0838a6.  v1:= "" @kind object;
  #L0838aa.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #Try_end0.  
  #L0838b0.  v1:= temp;
  #L0838b2.  if v1 == 0 then goto L0838b8;
  #L0838b6.  v0:= 0I;
  #L0838b8.  return v0 @kind object;
  #L0838ba.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L0838bc.  v0:= new `java.lang.AssertionError`;
  #L0838c0.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L0838c6.  throw v0;
  #L0838c8.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L0838ca.  goto L0838bc;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L0838ba;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L0838c8;
}
procedure `void` `a`(`a.a.g.b` v6 @kind this, `javax.net.ssl.SSLSocket` v7 @kind object, `java.lang.String` v8 @kind object, `java.util.List` v9 @kind object) @signature `La/a/g/b;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L0838ec.  call temp:= `getSSLParameters`(v7) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L0838f2.  v0:= temp @kind object;
  #L0838f4.  call temp:= `a`(v9) @signature `La/a/g/b;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L0838fa.  v1:= temp @kind object;
  #L0838fc.  v2:= v6.`a.a.g.b.a` @type ^`java.lang.reflect.Method` @kind object;
  #L083900.  v3:= 1I;
  #L083902.  v3:= new `java.lang.Object`[v3];
  #L083906.  v4:= 0I;
  #L083908.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08390e.  v5:= temp;
  #L083910.  v5:= new `java.lang.String`[v5];
  #L083914.  call temp:= `toArray`(v1, v5) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L08391a.  v1:= temp @kind object;
  #L08391c.  v3[v4]:= v1 @kind object;
  #L083920.  call temp:= `invoke`(v2, v0, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L083926.  call `setSSLParameters`(v7, v0) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #Try_end0.  
  #L08392c.  return @kind void;
  #L08392e.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L083930.  v0:= new `java.lang.AssertionError`;
  #L083934.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08393a.  throw v0;
  #L08393c.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L08393e.  goto L083930;
  catch `java.lang.IllegalAccessException` @[Try_start0..Try_end0] goto L08392e;
  catch `java.lang.reflect.InvocationTargetException` @[Try_start0..Try_end0] goto L08393c;
}

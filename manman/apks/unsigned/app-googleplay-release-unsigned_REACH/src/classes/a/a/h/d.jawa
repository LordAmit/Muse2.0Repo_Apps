record `a.a.h.d` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `a.a.h.d` `@@a.a.h.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/h/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L084f10.  v0:= new `a.a.h.d`;
  #L084f14.  call `<init>`(v0) @signature `La/a/h/d;.<init>:()V` @kind direct;
  #L084f1a.  `@@a.a.h.d.a` @type ^`a.a.h.d` := v0 @kind object;
  #L084f1e.  return @kind void;
}
procedure `void` `<init>`(`a.a.h.d` v0 @kind this) @signature `La/a/h/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L084f30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L084f36.  return @kind void;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v5 @kind object) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L084f48.  v0:= 7I;
  #L084f4a.  call temp:= `a`(v5, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L084f50.  v0:= temp @kind object;
  #L084f52.  v1:= 2I;
  #L084f54.  call temp:= `a`(v5, v1) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L084f5a.  v1:= temp @kind object;
  #L084f5c.  v2:= new `java.util.ArrayList`;
  #L084f60.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L084f66.  v3:= temp;
  #L084f68.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L084f6e.  v4:= temp;
  #L084f70.  v3:= v3 + v4 @kind int;
  #L084f72.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L084f78.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L084f7e.  call temp:= `addAll`(v2, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L084f84.  return v2 @kind object;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v5 @kind object, `int` v6 ) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L084f98.  v2:= new `java.util.ArrayList`;
  #L084f9c.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L084fa2.  call temp:= `getSubjectAlternativeNames`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L084fa8.  v0:= temp @kind object;
  #L084faa.  if v0 != 0 then goto L084fb8;
  #L084fae.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L084fb4.  v0:= temp @kind object;
  #L084fb6.  return v0 @kind object;
  #L084fb8.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L084fbe.  v3:= temp @kind object;
  #L084fc0.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L084fc6.  v0:= temp;
  #L084fc8.  if v0 == 0 then goto L08502e;
  #L084fcc.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L084fd2.  v0:= temp @kind object;
  #L084fd4.  v0:= (`java.util.List`) v0 @kind object;
  #L084fd8.  if v0 == 0 then goto L084fc0;
  #L084fdc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L084fe2.  v1:= temp;
  #L084fe4.  v4:= 2I;
  #L084fe6.  if v1 < v4 then goto L084fc0;
  #L084fea.  v1:= 0I;
  #L084fec.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L084ff2.  v1:= temp @kind object;
  #L084ff4.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L084ff8.  if v1 == 0 then goto L084fc0;
  #L084ffc.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L085002.  v1:= temp;
  #L085004.  if v1 != v6 then goto L084fc0;
  #L085008.  v1:= 1I;
  #L08500a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L085010.  v0:= temp @kind object;
  #L085012.  v0:= (`java.lang.String`) v0 @kind object;
  #L085016.  if v0 == 0 then goto L084fc0;
  #L08501a.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L085020.  goto L084fc0;
  #L085022.  v0:= Exception @type ^`java.security.cert.CertificateParsingException` @kind object;
  #L085024.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L08502a.  v0:= temp @kind object;
  #L08502c.  goto L084fb6;
  #L08502e.  v0:= v2 @kind object;
  #L085030.  goto L084fb6;
  catch `java.security.cert.CertificateParsingException` @[Try_start0..Try_end0] goto L085022;
}
procedure `boolean` `a`(`a.a.h.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L085054.  v6:= -1I;
  #L085056.  v5:= 46I;
  #L08505a.  v1:= 1I;
  #L08505c.  v0:= 0I;
  #L08505e.  if v8 == 0 then goto L08508e;
  #L085062.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L085068.  v2:= temp;
  #L08506a.  if v2 == 0 then goto L08508e;
  #L08506e.  v2:= "." @kind object;
  #L085072.  call temp:= `startsWith`(v8, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L085078.  v2:= temp;
  #L08507a.  if v2 != 0 then goto L08508e;
  #L08507e.  v2:= ".." @kind object;
  #L085082.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L085088.  v2:= temp;
  #L08508a.  if v2 == 0 then goto L085090;
  #L08508e.  return v0;
  #L085090.  if v9 == 0 then goto L08508e;
  #L085094.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08509a.  v2:= temp;
  #L08509c.  if v2 == 0 then goto L08508e;
  #L0850a0.  v2:= "." @kind object;
  #L0850a4.  call temp:= `startsWith`(v9, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0850aa.  v2:= temp;
  #L0850ac.  if v2 != 0 then goto L08508e;
  #L0850b0.  v2:= ".." @kind object;
  #L0850b4.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0850ba.  v2:= temp;
  #L0850bc.  if v2 != 0 then goto L08508e;
  #L0850c0.  v2:= "." @kind object;
  #L0850c4.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0850ca.  v2:= temp;
  #L0850cc.  if v2 != 0 then goto L0850f2;
  #L0850d0.  v2:= new `java.lang.StringBuilder`;
  #L0850d4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0850da.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0850e0.  v2:= temp @kind object;
  #L0850e2.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L0850e8.  v2:= temp @kind object;
  #L0850ea.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0850f0.  v8:= temp @kind object;
  #L0850f2.  v2:= "." @kind object;
  #L0850f6.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0850fc.  v2:= temp;
  #L0850fe.  if v2 != 0 then goto L085124;
  #L085102.  v2:= new `java.lang.StringBuilder`;
  #L085106.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08510c.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085112.  v2:= temp @kind object;
  #L085114.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08511a.  v2:= temp @kind object;
  #L08511c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L085122.  v9:= temp @kind object;
  #L085124.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L085128.  call temp:= `toLowerCase`(v9, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L08512e.  v2:= temp @kind object;
  #L085130.  v3:= "*" @kind object;
  #L085134.  call temp:= `contains`(v2, v3) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L08513a.  v3:= temp;
  #L08513c.  if v3 != 0 then goto L08514a;
  #L085140.  call temp:= `equals`(v8, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085146.  v0:= temp;
  #L085148.  goto L08508e;
  #L08514a.  v3:= "*." @kind object;
  #L08514e.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L085154.  v3:= temp;
  #L085156.  if v3 == 0 then goto L08508e;
  #L08515a.  v3:= 42I;
  #L08515e.  call temp:= `indexOf`(v2, v3, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L085164.  v3:= temp;
  #L085166.  if v3 != v6 then goto L08508e;
  #L08516a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L085170.  v3:= temp;
  #L085172.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L085178.  v4:= temp;
  #L08517a.  if v3 < v4 then goto L08508e;
  #L08517e.  v3:= "*." @kind object;
  #L085182.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085188.  v3:= temp;
  #L08518a.  if v3 != 0 then goto L08508e;
  #L08518e.  call temp:= `substring`(v2, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L085194.  v2:= temp @kind object;
  #L085196.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08519c.  v3:= temp;
  #L08519e.  if v3 == 0 then goto L08508e;
  #L0851a2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0851a8.  v3:= temp;
  #L0851aa.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0851b0.  v2:= temp;
  #L0851b2.  v2:= v3 - v2 @kind int;
  #L0851b6.  if v2 <= 0 then goto L0851ca;
  #L0851ba.  v2:= v2 + -1;
  #L0851be.  call temp:= `lastIndexOf`(v8, v5, v2) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L0851c4.  v2:= temp;
  #L0851c6.  if v2 != v6 then goto L08508e;
  #L0851ca.  v0:= v1;
  #L0851cc.  goto L08508e;
}
procedure `boolean` `b`(`a.a.h.d` v5 @kind this, `java.lang.String` v6 @kind object, `java.security.cert.X509Certificate` v7 @kind object) @signature `La/a/h/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0851e0.  v1:= 0I;
  #L0851e2.  v0:= 7I;
  #L0851e4.  call temp:= `a`(v7, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L0851ea.  v3:= temp @kind object;
  #L0851ec.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0851f2.  v4:= temp;
  #L0851f4.  v2:= v1;
  #L0851f6.  if v2 >= v4 then goto L08521e;
  #L0851fa.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L085200.  v0:= temp @kind object;
  #L085202.  v0:= (`java.lang.String`) v0 @kind object;
  #L085206.  call temp:= `equalsIgnoreCase`(v6, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08520c.  v0:= temp;
  #L08520e.  if v0 == 0 then goto L085216;
  #L085212.  v0:= 1I;
  #L085214.  return v0;
  #L085216.  v0:= v2 + 1;
  #L08521a.  v2:= v0;
  #L08521c.  goto L0851f6;
  #L08521e.  v0:= v1;
  #L085220.  goto L085214;
}
procedure `boolean` `c`(`a.a.h.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.security.cert.X509Certificate` v9 @kind object) @signature `La/a/h/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L085234.  v1:= 1I;
  #L085236.  v2:= 0I;
  #L085238.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L08523c.  call temp:= `toLowerCase`(v8, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L085242.  v4:= temp @kind object;
  #L085244.  v0:= 2I;
  #L085246.  call temp:= `a`(v9, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L08524c.  v5:= temp @kind object;
  #L08524e.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L085254.  v6:= temp;
  #L085256.  v3:= v2;
  #L085258.  v0:= v2;
  #L08525a.  if v3 >= v6 then goto L085284;
  #L08525e.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L085264.  v0:= temp @kind object;
  #L085266.  v0:= (`java.lang.String`) v0 @kind object;
  #L08526a.  call temp:= `a`(v7, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L085270.  v0:= temp;
  #L085272.  if v0 == 0 then goto L08527a;
  #L085276.  v0:= v1;
  #L085278.  return v0;
  #L08527a.  v0:= v3 + 1;
  #L08527e.  v3:= v0;
  #L085280.  v0:= v1;
  #L085282.  goto L08525a;
  #L085284.  if v0 != 0 then goto L0852b4;
  #L085288.  call temp:= `getSubjectX500Principal`(v9) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L08528e.  v0:= temp @kind object;
  #L085290.  v1:= new `a.a.h.c`;
  #L085294.  call `<init>`(v1, v0) @signature `La/a/h/c;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @kind direct;
  #L08529a.  v0:= "cn" @kind object;
  #L08529e.  call temp:= `a`(v1, v0) @signature `La/a/h/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L0852a4.  v0:= temp @kind object;
  #L0852a6.  if v0 == 0 then goto L0852b4;
  #L0852aa.  call temp:= `a`(v7, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L0852b0.  v0:= temp;
  #L0852b2.  goto L085278;
  #L0852b4.  v0:= v2;
  #L0852b6.  goto L085278;
}
procedure `boolean` `a`(`a.a.h.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0852c8.  call temp:= `c`(v2) @signature `La/a/c;.c:(Ljava/lang/String;)Z` @kind static;
  #L0852ce.  v0:= temp;
  #L0852d0.  if v0 == 0 then goto L0852de;
  #L0852d4.  call temp:= `b`(v1, v2, v3) @signature `La/a/h/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L0852da.  v0:= temp;
  #L0852dc.  return v0;
  #L0852de.  call temp:= `c`(v1, v2, v3) @signature `La/a/h/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L0852e4.  v0:= temp;
  #L0852e6.  goto L0852dc;
}
procedure `boolean` `verify`(`a.a.h.d` v3 @kind this, `java.lang.String` v4 @kind object, `javax.net.ssl.SSLSession` v5 @kind object) @signature `La/a/h/d;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0852f8.  v1:= 0I;
  #Try_start0.  
  #L0852fa.  call temp:= `getPeerCertificates`(v5) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L085300.  v0:= temp @kind object;
  #L085302.  v2:= 0I;
  #L085304.  v0:= v0[v2] @kind object;
  #L085308.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L08530c.  call temp:= `a`(v3, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #Try_end0.  
  #L085312.  v0:= temp;
  #L085314.  return v0;
  #L085316.  v0:= Exception @type ^`javax.net.ssl.SSLException` @kind object;
  #L085318.  v0:= v1;
  #L08531a.  goto L085314;
  catch `javax.net.ssl.SSLException` @[Try_start0..Try_end0] goto L085316;
}

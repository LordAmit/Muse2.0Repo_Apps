record `a.a.e.g` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `boolean` `a.a.e.g.b` @AccessFlag FINAL;
  `a.a.e.g$b` `a.a.e.g.c` @AccessFlag FINAL;
  `java.util.Map` `a.a.e.g.d` @AccessFlag FINAL;
  `java.lang.String` `a.a.e.g.e` @AccessFlag FINAL;
  `int` `a.a.e.g.f` @AccessFlag ;
  `int` `a.a.e.g.g` @AccessFlag ;
  `boolean` `a.a.e.g.h` @AccessFlag ;
  `a.a.e.m` `a.a.e.g.i` @AccessFlag FINAL;
  `long` `a.a.e.g.j` @AccessFlag ;
  `long` `a.a.e.g.k` @AccessFlag ;
  `a.a.e.n` `a.a.e.g.l` @AccessFlag ;
  `a.a.e.n` `a.a.e.g.m` @AccessFlag FINAL;
  `boolean` `a.a.e.g.n` @AccessFlag ;
  `java.net.Socket` `a.a.e.g.o` @AccessFlag FINAL;
  `a.a.e.j` `a.a.e.g.p` @AccessFlag FINAL;
  `a.a.e.g$c` `a.a.e.g.q` @AccessFlag FINAL;
  `java.util.Set` `a.a.e.g.r` @AccessFlag FINAL;
  `java.util.concurrent.ExecutorService` `a.a.e.g.t` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `a.a.e.g.u` @AccessFlag PRIVATE;
  `int` `a.a.e.g.v` @AccessFlag PRIVATE;
}
global `java.util.concurrent.ExecutorService` `@@a.a.e.g.a` @AccessFlag STATIC_FINAL;
global `boolean` `@@a.a.e.g.s` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/a/e/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07eadc.  v8:= 1I;
  #L07eade.  v2:= 0I;
  #L07eae0.  v0:= constclass @type ^`a.a.e.g` @kind object;
  #L07eae4.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L07eaea.  v0:= temp;
  #L07eaec.  if v0 != 0 then goto L07eb2a;
  #L07eaf0.  v0:= v8;
  #L07eaf2.  `@@a.a.e.g.s` @type ^`boolean` := v0 @kind boolean;
  #L07eaf6.  v1:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L07eafa.  v3:= 2147483647I;
  #L07eb00.  v4:= 60L;
  #L07eb04.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07eb08.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L07eb0c.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L07eb12.  v0:= "OkHttp Http2Connection" @kind object;
  #L07eb16.  call temp:= `a`(v0, v8) @signature `La/a/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L07eb1c.  v8:= temp @kind object;
  #L07eb1e.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L07eb24.  `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L07eb28.  return @kind void;
  #L07eb2a.  v0:= v2;
  #L07eb2c.  goto L07eaf2;
}
procedure `void` `<init>`(`a.a.e.g` v11 @kind this, `a.a.e.g$a` v12 @kind object) @signature `La/a/e/g;.<init>:(La/a/e/g$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L07eb40.  v10:= 7I;
  #L07eb42.  v1:= 2I;
  #L07eb44.  v2:= 0I;
  #L07eb46.  v3:= 1I;
  #L07eb48.  call `<init>`(v11) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07eb4e.  v0:= new `java.util.LinkedHashMap`;
  #L07eb52.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L07eb58.  v11.`a.a.e.g.d` @type ^`java.util.Map` := v0 @kind object;
  #L07eb5c.  v4:= 0L;
  #L07eb60.  v11.`a.a.e.g.j` @type ^`long` := v4 @kind wide;
  #L07eb64.  v0:= new `a.a.e.n`;
  #L07eb68.  call `<init>`(v0) @signature `La/a/e/n;.<init>:()V` @kind direct;
  #L07eb6e.  v11.`a.a.e.g.l` @type ^`a.a.e.n` := v0 @kind object;
  #L07eb72.  v0:= new `a.a.e.n`;
  #L07eb76.  call `<init>`(v0) @signature `La/a/e/n;.<init>:()V` @kind direct;
  #L07eb7c.  v11.`a.a.e.g.m` @type ^`a.a.e.n` := v0 @kind object;
  #L07eb80.  v11.`a.a.e.g.n` @type ^`boolean` := v2 @kind boolean;
  #L07eb84.  v0:= new `java.util.LinkedHashSet`;
  #L07eb88.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L07eb8e.  v11.`a.a.e.g.r` @type ^`java.util.Set` := v0 @kind object;
  #L07eb92.  v0:= v12.`a.a.e.g$a.f` @type ^`a.a.e.m` @kind object;
  #L07eb96.  v11.`a.a.e.g.i` @type ^`a.a.e.m` := v0 @kind object;
  #L07eb9a.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07eb9e.  v11.`a.a.e.g.b` @type ^`boolean` := v0 @kind boolean;
  #L07eba2.  v0:= v12.`a.a.e.g$a.e` @type ^`a.a.e.g$b` @kind object;
  #L07eba6.  v11.`a.a.e.g.c` @type ^`a.a.e.g$b` := v0 @kind object;
  #L07ebaa.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07ebae.  if v0 == 0 then goto L07ecaa;
  #L07ebb2.  v0:= v3;
  #L07ebb4.  v11.`a.a.e.g.g` @type ^`int` := v0;
  #L07ebb8.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07ebbc.  if v0 == 0 then goto L07ebcc;
  #L07ebc0.  v0:= v11.`a.a.e.g.g` @type ^`int`;
  #L07ebc4.  v0:= v0 + 2;
  #L07ebc8.  v11.`a.a.e.g.g` @type ^`int` := v0;
  #L07ebcc.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07ebd0.  if v0 == 0 then goto L07ebd6;
  #L07ebd4.  v1:= v3;
  #L07ebd6.  v11.`a.a.e.g.v` @type ^`int` := v1;
  #L07ebda.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07ebde.  if v0 == 0 then goto L07ebf0;
  #L07ebe2.  v0:= v11.`a.a.e.g.l` @type ^`a.a.e.n` @kind object;
  #L07ebe6.  v1:= 16777216I;
  #L07ebea.  call temp:= `a`(v0, v10, v1) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07ebf0.  v0:= v12.`a.a.e.g$a.b` @type ^`java.lang.String` @kind object;
  #L07ebf4.  v11.`a.a.e.g.e` @type ^`java.lang.String` := v0 @kind object;
  #L07ebf8.  v1:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L07ebfc.  v4:= 60L;
  #L07ec00.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07ec04.  v7:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L07ec08.  call `<init>`(v7) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L07ec0e.  v0:= "OkHttp %s Push Observer" @kind object;
  #L07ec12.  v8:= new `java.lang.Object`[v3];
  #L07ec16.  v9:= v11.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07ec1a.  v8[v2]:= v9 @kind object;
  #L07ec1e.  call temp:= `a`(v0, v8) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07ec24.  v0:= temp @kind object;
  #L07ec26.  call temp:= `a`(v0, v3) @signature `La/a/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L07ec2c.  v8:= temp @kind object;
  #L07ec2e.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L07ec34.  v11.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L07ec38.  v0:= v11.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07ec3c.  v1:= 65535I;
  #L07ec42.  call temp:= `a`(v0, v10, v1) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07ec48.  v0:= v11.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07ec4c.  v1:= 5I;
  #L07ec4e.  v2:= 16384I;
  #L07ec52.  call temp:= `a`(v0, v1, v2) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07ec58.  v0:= v11.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07ec5c.  call temp:= `d`(v0) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07ec62.  v0:= temp;
  #L07ec64.  v0:= (`long`) v0 @kind i2l;
  #L07ec66.  v11.`a.a.e.g.k` @type ^`long` := v0 @kind wide;
  #L07ec6a.  v0:= v12.`a.a.e.g$a.a` @type ^`java.net.Socket` @kind object;
  #L07ec6e.  v11.`a.a.e.g.o` @type ^`java.net.Socket` := v0 @kind object;
  #L07ec72.  v0:= new `a.a.e.j`;
  #L07ec76.  v1:= v12.`a.a.e.g$a.d` @type ^`b.d` @kind object;
  #L07ec7a.  v2:= v11.`a.a.e.g.b` @type ^`boolean` @kind boolean;
  #L07ec7e.  call `<init>`(v0, v1, v2) @signature `La/a/e/j;.<init>:(Lb/d;Z)V` @kind direct;
  #L07ec84.  v11.`a.a.e.g.p` @type ^`a.a.e.j` := v0 @kind object;
  #L07ec88.  v0:= new `a.a.e.g$c`;
  #L07ec8c.  v1:= new `a.a.e.h`;
  #L07ec90.  v2:= v12.`a.a.e.g$a.c` @type ^`b.e` @kind object;
  #L07ec94.  v3:= v11.`a.a.e.g.b` @type ^`boolean` @kind boolean;
  #L07ec98.  call `<init>`(v1, v2, v3) @signature `La/a/e/h;.<init>:(Lb/e;Z)V` @kind direct;
  #L07ec9e.  call `<init>`(v0, v11, v1) @signature `La/a/e/g$c;.<init>:(La/a/e/g;La/a/e/h;)V` @kind direct;
  #L07eca4.  v11.`a.a.e.g.q` @type ^`a.a.e.g$c` := v0 @kind object;
  #L07eca8.  return @kind void;
  #L07ecaa.  v0:= v1;
  #L07ecac.  goto L07ebb4;
}
procedure `a.a.e.i` `b`(`a.a.e.g` v12 @kind this, `int` v13 , `java.util.List` v14 @kind object, `boolean` v15 ) @signature `La/a/e/g;.b:(ILjava/util/List;Z)La/a/e/i;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L07ecc0.  v10:= 0L;
  #L07ecc4.  v6:= 1I;
  #L07ecc6.  v7:= 0I;
  #L07ecc8.  if v15 != 0 then goto L07ecf8;
  #L07eccc.  v3:= v6;
  #L07ecce.  v4:= 0I;
  #L07ecd0.  v8:= v12.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07ecd4.  @monitorenter v8
  #Try_start0.  
  #L07ecd6.  @monitorenter v12
  #Try_end0.  
  #Try_start1.  
  #L07ecd8.  v0:= v12.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #L07ecdc.  if v0 == 0 then goto L07ecfc;
  #L07ece0.  v0:= new `a.a.e.a`;
  #L07ece4.  call `<init>`(v0) @signature `La/a/e/a;.<init>:()V` @kind direct;
  #L07ecea.  throw v0;
  #L07ecec.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07ecee.  @monitorexit v12
  #Try_end1.  
  #Try_start2.  
  #L07ecf0.  throw v0;
  #L07ecf2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07ecf4.  @monitorexit v8
  #Try_end2.  
  #L07ecf6.  throw v0;
  #L07ecf8.  v3:= v7;
  #L07ecfa.  goto L07ecce;
  #Try_start3.  
  #L07ecfc.  v1:= v12.`a.a.e.g.g` @type ^`int`;
  #L07ed00.  v0:= v12.`a.a.e.g.g` @type ^`int`;
  #L07ed04.  v0:= v0 + 2;
  #L07ed08.  v12.`a.a.e.g.g` @type ^`int` := v0;
  #L07ed0c.  v0:= new `a.a.e.i`;
  #L07ed10.  v2:= v12 @kind object;
  #L07ed12.  v5:= v14 @kind object;
  #L07ed14.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/i;.<init>:(ILa/a/e/g;ZZLjava/util/List;)V` @kind direct;
  #L07ed1a.  if v15 == 0 then goto L07ed36;
  #L07ed1e.  v4:= v12.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07ed22.  v2:= lcmp(v4, v10);
  #L07ed26.  if v2 == 0 then goto L07ed36;
  #L07ed2a.  v4:= v0.`a.a.e.i.b` @type ^`long` @kind wide;
  #L07ed2e.  v2:= lcmp(v4, v10);
  #L07ed32.  if v2 != 0 then goto L07ed38;
  #L07ed36.  v7:= v6;
  #L07ed38.  call temp:= `b`(v0) @signature `La/a/e/i;.b:()Z` @kind virtual;
  #L07ed3e.  v2:= temp;
  #L07ed40.  if v2 == 0 then goto L07ed56;
  #L07ed44.  v2:= v12.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07ed48.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ed4e.  v4:= temp @kind object;
  #L07ed50.  call temp:= `put`(v2, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07ed56.  @monitorexit v12
  #Try_end3.  
  #L07ed58.  if v13 != 0 then goto L07ed78;
  #Try_start4.  
  #L07ed5c.  v2:= v12.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07ed60.  call `a`(v2, v3, v1, v13, v14) @signature `La/a/e/j;.a:(ZIILjava/util/List;)V` @kind virtual;
  #L07ed66.  @monitorexit v8
  #Try_end4.  
  #L07ed68.  if v7 == 0 then goto L07ed76;
  #L07ed6c.  v1:= v12.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07ed70.  call `b`(v1) @signature `La/a/e/j;.b:()V` @kind virtual;
  #L07ed76.  return v0 @kind object;
  #Try_start5.  
  #L07ed78.  v2:= v12.`a.a.e.g.b` @type ^`boolean` @kind boolean;
  #L07ed7c.  if v2 == 0 then goto L07ed90;
  #L07ed80.  v0:= new `java.lang.IllegalArgumentException`;
  #L07ed84.  v1:= "client streams shouldn't have associated stream IDs" @kind object;
  #L07ed88.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07ed8e.  throw v0;
  #L07ed90.  v2:= v12.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07ed94.  call `a`(v2, v13, v1, v14) @signature `La/a/e/j;.a:(IILjava/util/List;)V` @kind virtual;
  #Try_end5.  
  #L07ed9a.  goto L07ed66;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07ecf2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07ecec;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07ecf2;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07ecec;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L07ecf2;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L07ecf2;
}
procedure `int` `a`(`a.a.e.g` v2 @kind this) @signature `La/a/e/g;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07ede4.  @monitorenter v2
  #Try_start0.  
  #L07ede6.  v0:= v2.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07edea.  v1:= 2147483647I;
  #L07edf0.  call temp:= `c`(v0, v1) @signature `La/a/e/n;.c:(I)I` @kind virtual;
  #Try_end0.  
  #L07edf6.  v0:= temp;
  #L07edf8.  @monitorexit v2
  #L07edfa.  return v0;
  #L07edfc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07edfe.  @monitorexit v2
  #L07ee00.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07edfc;
}
procedure `a.a.e.i` `a`(`a.a.e.g` v2 @kind this, `int` v3 ) @signature `La/a/e/g;.a:(I)La/a/e/i;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L07ee20.  @monitorenter v2
  #Try_start0.  
  #L07ee22.  v0:= v2.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07ee26.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ee2c.  v1:= temp @kind object;
  #L07ee2e.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07ee34.  v0:= temp @kind object;
  #L07ee36.  v0:= (`a.a.e.i`) v0 @kind object;
  #Try_end0.  
  #L07ee3a.  @monitorexit v2
  #L07ee3c.  return v0 @kind object;
  #L07ee3e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07ee40.  @monitorexit v2
  #L07ee42.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07ee3e;
}
procedure `a.a.e.i` `a`(`a.a.e.g` v1 @kind this, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `La/a/e/g;.a:(Ljava/util/List;Z)La/a/e/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07ee60.  v0:= 0I;
  #L07ee62.  call temp:= `b`(v1, v0, v2, v3) @signature `La/a/e/g;.b:(ILjava/util/List;Z)La/a/e/i;` @kind direct;
  #L07ee68.  v0:= temp @kind object;
  #L07ee6a.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.g` v8 @kind this, `int` v9 , `long` v10 ) @signature `La/a/e/g;.a:(IJ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07ee7c.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07ee80.  v1:= new `a.a.e.g$2`;
  #L07ee84.  v3:= "OkHttp Window Update %s stream %d" @kind object;
  #L07ee88.  v2:= 2I;
  #L07ee8a.  v4:= new `java.lang.Object`[v2];
  #L07ee8e.  v2:= 0I;
  #L07ee90.  v5:= v8.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07ee94.  v4[v2]:= v5 @kind object;
  #L07ee98.  v2:= 1I;
  #L07ee9a.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07eea0.  v5:= temp @kind object;
  #L07eea2.  v4[v2]:= v5 @kind object;
  #L07eea6.  v2:= v8 @kind object;
  #L07eea8.  v5:= v9;
  #L07eeaa.  v6:= v10 @kind wide;
  #L07eeac.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `La/a/e/g$2;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;IJ)V` @kind direct;
  #L07eeb2.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07eeb8.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v7 @kind this, `int` v8 , `a.a.e.b` v9 @kind object) @signature `La/a/e/g;.a:(ILa/a/e/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07eecc.  v6:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07eed0.  v0:= new `a.a.e.g$1`;
  #L07eed4.  v2:= "OkHttp %s stream %d" @kind object;
  #L07eed8.  v1:= 2I;
  #L07eeda.  v3:= new `java.lang.Object`[v1];
  #L07eede.  v1:= 0I;
  #L07eee0.  v4:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07eee4.  v3[v1]:= v4 @kind object;
  #L07eee8.  v1:= 1I;
  #L07eeea.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07eef0.  v4:= temp @kind object;
  #L07eef2.  v3[v1]:= v4 @kind object;
  #L07eef6.  v1:= v7 @kind object;
  #L07eef8.  v4:= v8;
  #L07eefa.  v5:= v9 @kind object;
  #L07eefc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/g$1;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILa/a/e/b;)V` @kind direct;
  #L07ef02.  call `execute`(v6, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07ef08.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v9 @kind this, `int` v10 , `b.e` v11 @kind object, `int` v12 , `boolean` v13 ) @signature `La/a/e/g;.a:(ILb/e;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07ef1c.  v5:= new `b.c`;
  #L07ef20.  call `<init>`(v5) @signature `Lb/c;.<init>:()V` @kind direct;
  #L07ef26.  v0:= (`long`) v12 @kind i2l;
  #L07ef28.  call `a`(v11, v0) @signature `Lb/e;.a:(J)V` @kind interface;
  #L07ef2e.  v0:= (`long`) v12 @kind i2l;
  #L07ef30.  call temp:= `a`(v11, v5, v0) @signature `Lb/e;.a:(Lb/c;J)J` @kind interface;
  #L07ef36.  call temp:= `b`(v5) @signature `Lb/c;.b:()J` @kind virtual;
  #L07ef3c.  v0:= temp @kind wide;
  #L07ef3e.  v2:= (`long`) v12 @kind i2l;
  #L07ef40.  v0:= lcmp(v0, v2);
  #L07ef44.  if v0 == 0 then goto L07ef8a;
  #L07ef48.  v0:= new `java.io.IOException`;
  #L07ef4c.  v1:= new `java.lang.StringBuilder`;
  #L07ef50.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07ef56.  call temp:= `b`(v5) @signature `Lb/c;.b:()J` @kind virtual;
  #L07ef5c.  v2:= temp @kind wide;
  #L07ef5e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L07ef64.  v1:= temp @kind object;
  #L07ef66.  v2:= " != " @kind object;
  #L07ef6a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07ef70.  v1:= temp @kind object;
  #L07ef72.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L07ef78.  v1:= temp @kind object;
  #L07ef7a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07ef80.  v1:= temp @kind object;
  #L07ef82.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07ef88.  throw v0;
  #L07ef8a.  v8:= v9.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07ef8e.  v0:= new `a.a.e.g$6`;
  #L07ef92.  v2:= "OkHttp %s Push Data[%s]" @kind object;
  #L07ef96.  v1:= 2I;
  #L07ef98.  v3:= new `java.lang.Object`[v1];
  #L07ef9c.  v1:= 0I;
  #L07ef9e.  v4:= v9.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07efa2.  v3[v1]:= v4 @kind object;
  #L07efa6.  v1:= 1I;
  #L07efa8.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07efae.  v4:= temp @kind object;
  #L07efb0.  v3[v1]:= v4 @kind object;
  #L07efb4.  v1:= v9 @kind object;
  #L07efb6.  v4:= v10;
  #L07efb8.  v6:= v12;
  #L07efba.  v7:= v13;
  #L07efbc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/a/e/g$6;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILb/c;IZ)V` @kind direct;
  #L07efc2.  call `execute`(v8, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07efc8.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v7 @kind this, `int` v8 , `java.util.List` v9 @kind object) @signature `La/a/e/g;.a:(ILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07efdc.  @monitorenter v7
  #Try_start0.  
  #L07efde.  v0:= v7.`a.a.e.g.r` @type ^`java.util.Set` @kind object;
  #L07efe2.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07efe8.  v1:= temp @kind object;
  #L07efea.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07eff0.  v0:= temp;
  #L07eff2.  if v0 == 0 then goto L07f004;
  #L07eff6.  v0:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #L07effa.  call `a`(v7, v8, v0) @signature `La/a/e/g;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07f000.  @monitorexit v7
  #L07f002.  return @kind void;
  #L07f004.  v0:= v7.`a.a.e.g.r` @type ^`java.util.Set` @kind object;
  #L07f008.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f00e.  v1:= temp @kind object;
  #L07f010.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07f016.  @monitorexit v7
  #Try_end0.  
  #L07f018.  v6:= v7.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07f01c.  v0:= new `a.a.e.g$4`;
  #L07f020.  v2:= "OkHttp %s Push Request[%s]" @kind object;
  #L07f024.  v1:= 2I;
  #L07f026.  v3:= new `java.lang.Object`[v1];
  #L07f02a.  v1:= 0I;
  #L07f02c.  v4:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07f030.  v3[v1]:= v4 @kind object;
  #L07f034.  v1:= 1I;
  #L07f036.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f03c.  v4:= temp @kind object;
  #L07f03e.  v3[v1]:= v4 @kind object;
  #L07f042.  v1:= v7 @kind object;
  #L07f044.  v4:= v8;
  #L07f046.  v5:= v9 @kind object;
  #L07f048.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/g$4;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @kind direct;
  #L07f04e.  call `execute`(v6, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07f054.  goto L07f002;
  #L07f056.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L07f058.  @monitorexit v7
  #Try_end1.  
  #L07f05a.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07f056;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07f056;
}
procedure `void` `a`(`a.a.e.g` v8 @kind this, `int` v9 , `java.util.List` v10 @kind object, `boolean` v11 ) @signature `La/a/e/g;.a:(ILjava/util/List;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07f080.  v7:= v8.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07f084.  v0:= new `a.a.e.g$5`;
  #L07f088.  v2:= "OkHttp %s Push Headers[%s]" @kind object;
  #L07f08c.  v1:= 2I;
  #L07f08e.  v3:= new `java.lang.Object`[v1];
  #L07f092.  v1:= 0I;
  #L07f094.  v4:= v8.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07f098.  v3[v1]:= v4 @kind object;
  #L07f09c.  v1:= 1I;
  #L07f09e.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f0a4.  v4:= temp @kind object;
  #L07f0a6.  v3[v1]:= v4 @kind object;
  #L07f0aa.  v1:= v8 @kind object;
  #L07f0ac.  v4:= v9;
  #L07f0ae.  v5:= v10 @kind object;
  #L07f0b0.  v6:= v11;
  #L07f0b2.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `La/a/e/g$5;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @kind direct;
  #L07f0b8.  call `execute`(v7, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07f0be.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v10 @kind this, `int` v11 , `boolean` v12 , `b.c` v13 @kind object, `long` v14 ) @signature `La/a/e/g;.a:(IZLb/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L07f0d0.  v1:= 0I;
  #L07f0d2.  v8:= 0L;
  #L07f0d6.  v0:= lcmp(v14, v8);
  #L07f0da.  if v0 != 0 then goto L07f136;
  #L07f0de.  v0:= v10.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f0e2.  call `a`(v0, v12, v11, v13, v1) @signature `La/a/e/j;.a:(ZILb/c;I)V` @kind virtual;
  #L07f0e8.  return @kind void;
  #Try_start0.  
  #L07f0ea.  v2:= v10.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07f0ee.  call temp:= `min`(v14, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L07f0f4.  v2:= temp @kind wide;
  #L07f0f6.  v0:= (`int`) v2 @kind l2i;
  #L07f0f8.  v2:= v10.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f0fc.  call temp:= `c`(v2) @signature `La/a/e/j;.c:()I` @kind virtual;
  #L07f102.  v2:= temp;
  #L07f104.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L07f10a.  v2:= temp;
  #L07f10c.  v4:= v10.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07f110.  v6:= (`long`) v2 @kind i2l;
  #L07f112.  v4:= v4 - v6 @kind long;
  #L07f114.  v10.`a.a.e.g.k` @type ^`long` := v4 @kind wide;
  #L07f118.  @monitorexit v10
  #Try_end0.  
  #L07f11a.  v4:= (`long`) v2 @kind i2l;
  #L07f11c.  v14:= v14 - v4 @kind long;
  #L07f11e.  v3:= v10.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f122.  if v12 == 0 then goto L07f190;
  #L07f126.  v0:= lcmp(v14, v8);
  #L07f12a.  if v0 != 0 then goto L07f190;
  #L07f12e.  v0:= 1I;
  #L07f130.  call `a`(v3, v0, v11, v13, v2) @signature `La/a/e/j;.a:(ZILb/c;I)V` @kind virtual;
  #L07f136.  v0:= lcmp(v14, v8);
  #L07f13a.  if v0 <= 0 then goto L07f0e8;
  #L07f13e.  @monitorenter v10
  #Try_start1.  
  #L07f140.  v2:= v10.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07f144.  v0:= lcmp(v2, v8);
  #L07f148.  if v0 > 0 then goto L07f0ea;
  #L07f14c.  v0:= v10.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07f150.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f156.  v2:= temp @kind object;
  #L07f158.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L07f15e.  v0:= temp;
  #L07f160.  if v0 != 0 then goto L07f188;
  #L07f164.  v0:= new `java.io.IOException`;
  #L07f168.  v1:= "stream closed" @kind object;
  #L07f16c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07f172.  throw v0;
  #Try_end1.  
  #L07f174.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #Try_start2.  
  #L07f176.  v0:= new `java.io.InterruptedIOException`;
  #L07f17a.  call `<init>`(v0) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L07f180.  throw v0;
  #L07f182.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07f184.  @monitorexit v10
  #Try_end2.  
  #L07f186.  throw v0;
  #Try_start3.  
  #L07f188.  call `wait`(v10) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #Try_end3.  
  #L07f18e.  goto L07f140;
  #L07f190.  v0:= v1;
  #L07f192.  goto L07f130;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07f182;
  catch `java.lang.InterruptedException` @[Try_start1..Try_end1] goto L07f174;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07f182;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07f182;
  catch `java.lang.InterruptedException` @[Try_start3..Try_end3] goto L07f174;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07f182;
}
procedure `void` `a`(`a.a.e.g` v3 @kind this, `long` v4 ) @signature `La/a/e/g;.a:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L07f1cc.  v0:= v3.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07f1d0.  v0:= v0 + v4 @kind long;
  #L07f1d2.  v3.`a.a.e.g.k` @type ^`long` := v0 @kind wide;
  #L07f1d6.  v0:= 0L;
  #L07f1da.  v0:= lcmp(v4, v0);
  #L07f1de.  if v0 <= 0 then goto L07f1e8;
  #L07f1e2.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L07f1e8.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v4 @kind this, `a.a.e.b` v5 @kind object) @signature `La/a/e/g;.a:(La/a/e/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07f1fc.  v1:= v4.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f200.  @monitorenter v1
  #Try_start0.  
  #L07f202.  @monitorenter v4
  #Try_end0.  
  #Try_start1.  
  #L07f204.  v0:= v4.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #L07f208.  if v0 == 0 then goto L07f212;
  #L07f20c.  @monitorexit v4
  #Try_end1.  
  #Try_start2.  
  #L07f20e.  @monitorexit v1
  #Try_end2.  
  #L07f210.  return @kind void;
  #L07f212.  v0:= 1I;
  #Try_start3.  
  #L07f214.  v4.`a.a.e.g.h` @type ^`boolean` := v0 @kind boolean;
  #L07f218.  v0:= v4.`a.a.e.g.f` @type ^`int`;
  #L07f21c.  @monitorexit v4
  #Try_end3.  
  #Try_start4.  
  #L07f21e.  v2:= v4.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f222.  v3:= `@@a.a.c.a` @type ^`byte`[] @kind object;
  #L07f226.  call `a`(v2, v0, v5, v3) @signature `La/a/e/j;.a:(ILa/a/e/b;[B)V` @kind virtual;
  #L07f22c.  @monitorexit v1
  #L07f22e.  goto L07f210;
  #L07f230.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07f232.  @monitorexit v1
  #Try_end4.  
  #L07f234.  throw v0;
  #L07f236.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start5.  
  #L07f238.  @monitorexit v4
  #Try_end5.  
  #Try_start6.  
  #L07f23a.  throw v0;
  #Try_end6.  
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07f230;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07f236;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07f230;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07f236;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L07f230;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L07f236;
  catch `java.lang.Throwable` @[Try_start6..Try_end6] goto L07f230;
}
procedure `void` `a`(`a.a.e.g` v7 @kind this, `a.a.e.b` v8 @kind object, `a.a.e.b` v9 @kind object) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07f28c.  v3:= 0I;
  #L07f28e.  v2:= 0I;
  #L07f290.  v0:= `@@a.a.e.g.s` @type ^`boolean` @kind boolean;
  #L07f294.  if v0 != 0 then goto L07f2b0;
  #L07f298.  call temp:= `holdsLock`(v7) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L07f29e.  v0:= temp;
  #L07f2a0.  if v0 == 0 then goto L07f2b0;
  #L07f2a4.  v0:= new `java.lang.AssertionError`;
  #L07f2a8.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L07f2ae.  throw v0;
  #Try_start0.  
  #L07f2b0.  call `a`(v7, v8) @signature `La/a/e/g;.a:(La/a/e/b;)V` @kind virtual;
  #Try_end0.  
  #L07f2b6.  v1:= v2 @kind object;
  #L07f2b8.  @monitorenter v7
  #Try_start1.  
  #L07f2ba.  v0:= v7.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07f2be.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L07f2c4.  v0:= temp;
  #L07f2c6.  if v0 != 0 then goto L07f3bc;
  #L07f2ca.  v0:= v7.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07f2ce.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07f2d4.  v0:= temp @kind object;
  #L07f2d6.  v4:= v7.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07f2da.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07f2e0.  v4:= temp;
  #L07f2e2.  v4:= new `a.a.e.i`[v4];
  #L07f2e6.  call temp:= `toArray`(v0, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07f2ec.  v0:= temp @kind object;
  #L07f2ee.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L07f2f2.  v4:= v7.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07f2f6.  call `clear`(v4) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L07f2fc.  v5:= v0 @kind object;
  #L07f2fe.  v0:= v7.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07f302.  if v0 == 0 then goto L07f3b8;
  #L07f306.  v0:= v7.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07f30a.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07f310.  v0:= temp @kind object;
  #L07f312.  v2:= v7.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07f316.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07f31c.  v2:= temp;
  #L07f31e.  v2:= new `a.a.e.l`[v2];
  #L07f322.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07f328.  v0:= temp @kind object;
  #L07f32a.  v0:= (`a.a.e.l`[]) v0 @kind object;
  #L07f32e.  v2:= 0I;
  #L07f330.  v7.`a.a.e.g.u` @type ^`java.util.Map` := v2 @kind object;
  #L07f334.  v4:= v0 @kind object;
  #L07f336.  @monitorexit v7
  #Try_end1.  
  #L07f338.  if v5 == 0 then goto L07f370;
  #L07f33c.  v6:= length @variable v5;
  #L07f33e.  v2:= v3;
  #L07f340.  v0:= v1 @kind object;
  #L07f342.  if v2 >= v6 then goto L07f36e;
  #L07f346.  v1:= v5[v2] @kind object;
  #Try_start2.  
  #L07f34a.  call `a`(v1, v9) @signature `La/a/e/i;.a:(La/a/e/b;)V` @kind virtual;
  #Try_end2.  
  #L07f350.  v1:= v2 + 1;
  #L07f354.  v2:= v1;
  #L07f356.  goto L07f342;
  #L07f358.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07f35a.  v1:= v0 @kind object;
  #L07f35c.  goto L07f2b8;
  #L07f35e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L07f360.  @monitorexit v7
  #Try_end3.  
  #L07f362.  throw v0;
  #L07f364.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L07f366.  if v0 == 0 then goto L07f350;
  #L07f36a.  v0:= v1 @kind object;
  #L07f36c.  goto L07f350;
  #L07f36e.  v1:= v0 @kind object;
  #L07f370.  if v4 == 0 then goto L07f38c;
  #L07f374.  v2:= length @variable v4;
  #L07f376.  v0:= v3;
  #L07f378.  if v0 >= v2 then goto L07f38c;
  #L07f37c.  v3:= v4[v0] @kind object;
  #L07f380.  call `c`(v3) @signature `La/a/e/l;.c:()V` @kind virtual;
  #L07f386.  v0:= v0 + 1;
  #L07f38a.  goto L07f378;
  #Try_start4.  
  #L07f38c.  v0:= v7.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f390.  call `close`(v0) @signature `La/a/e/j;.close:()V` @kind virtual;
  #Try_end4.  
  #L07f396.  v0:= v1 @kind object;
  #Try_start5.  
  #L07f398.  v1:= v7.`a.a.e.g.o` @type ^`java.net.Socket` @kind object;
  #L07f39c.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end5.  
  #L07f3a2.  if v0 == 0 then goto L07f3b2;
  #L07f3a6.  throw v0;
  #L07f3a8.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07f3aa.  if v1 == 0 then goto L07f398;
  #L07f3ae.  v0:= v1 @kind object;
  #L07f3b0.  goto L07f398;
  #L07f3b2.  return @kind void;
  #L07f3b4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07f3b6.  goto L07f3a2;
  #L07f3b8.  v4:= v2 @kind object;
  #L07f3ba.  goto L07f336;
  #L07f3bc.  v5:= v2 @kind object;
  #L07f3be.  goto L07f2fe;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07f358;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07f35e;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L07f364;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07f35e;
  catch `java.io.IOException` @[Try_start4..Try_end4] goto L07f3a8;
  catch `java.io.IOException` @[Try_start5..Try_end5] goto L07f3b4;
}
procedure `void` `a`(`a.a.e.g` v6 @kind this, `boolean` v7 ) @signature `La/a/e/g;.a:(Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07f418.  v3:= 65535I;
  #L07f41e.  if v7 == 0 then goto L07f45a;
  #L07f422.  v0:= v6.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f426.  call `a`(v0) @signature `La/a/e/j;.a:()V` @kind virtual;
  #L07f42c.  v0:= v6.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f430.  v1:= v6.`a.a.e.g.l` @type ^`a.a.e.n` @kind object;
  #L07f434.  call `b`(v0, v1) @signature `La/a/e/j;.b:(La/a/e/n;)V` @kind virtual;
  #L07f43a.  v0:= v6.`a.a.e.g.l` @type ^`a.a.e.n` @kind object;
  #L07f43e.  call temp:= `d`(v0) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07f444.  v0:= temp;
  #L07f446.  if v0 == v3 then goto L07f45a;
  #L07f44a.  v1:= v6.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f44e.  v2:= 0I;
  #L07f450.  v0:= v0 - v3 @kind int;
  #L07f452.  v4:= (`long`) v0 @kind i2l;
  #L07f454.  call `a`(v1, v2, v4) @signature `La/a/e/j;.a:(IJ)V` @kind virtual;
  #L07f45a.  v0:= new `java.lang.Thread`;
  #L07f45e.  v1:= v6.`a.a.e.g.q` @type ^`a.a.e.g$c` @kind object;
  #L07f462.  call `<init>`(v0, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L07f468.  call `start`(v0) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L07f46e.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v9 @kind this, `boolean` v10 , `int` v11 , `int` v12 , `a.a.e.l` v13 @kind object) @signature `La/a/e/g;.a:(ZIILa/a/e/l;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07f480.  v8:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07f484.  v0:= new `a.a.e.g$3`;
  #L07f488.  v2:= "OkHttp %s ping %08x%08x" @kind object;
  #L07f48c.  v1:= 3I;
  #L07f48e.  v3:= new `java.lang.Object`[v1];
  #L07f492.  v1:= 0I;
  #L07f494.  v4:= v9.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07f498.  v3[v1]:= v4 @kind object;
  #L07f49c.  v1:= 1I;
  #L07f49e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f4a4.  v4:= temp @kind object;
  #L07f4a6.  v3[v1]:= v4 @kind object;
  #L07f4aa.  v1:= 2I;
  #L07f4ac.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f4b2.  v4:= temp @kind object;
  #L07f4b4.  v3[v1]:= v4 @kind object;
  #L07f4b8.  v1:= v9 @kind object;
  #L07f4ba.  v4:= v10;
  #L07f4bc.  v5:= v11;
  #L07f4be.  v6:= v12;
  #L07f4c0.  v7:= v13 @kind object;
  #L07f4c2.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/a/e/g$3;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ZIILa/a/e/l;)V` @kind direct;
  #L07f4c8.  call `execute`(v8, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07f4ce.  return @kind void;
}
procedure `a.a.e.i` `b`(`a.a.e.g` v2 @kind this, `int` v3 ) @signature `La/a/e/g;.b:(I)La/a/e/i;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L07f4e0.  @monitorenter v2
  #Try_start0.  
  #L07f4e2.  v0:= v2.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07f4e6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f4ec.  v1:= temp @kind object;
  #L07f4ee.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07f4f4.  v0:= temp @kind object;
  #L07f4f6.  v0:= (`a.a.e.i`) v0 @kind object;
  #L07f4fa.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #Try_end0.  
  #L07f500.  @monitorexit v2
  #L07f502.  return v0 @kind object;
  #L07f504.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07f506.  @monitorexit v2
  #L07f508.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07f504;
}
procedure `void` `b`(`a.a.e.g` v1 @kind this) @signature `La/a/e/g;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07f528.  v0:= v1.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f52c.  call `b`(v0) @signature `La/a/e/j;.b:()V` @kind virtual;
  #L07f532.  return @kind void;
}
procedure `void` `b`(`a.a.e.g` v1 @kind this, `int` v2 , `a.a.e.b` v3 @kind object) @signature `La/a/e/g;.b:(ILa/a/e/b;)V` @AccessFlag  {
    temp;
    v0;

  #L07f544.  v0:= v1.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f548.  call `a`(v0, v2, v3) @signature `La/a/e/j;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07f54e.  return @kind void;
}
procedure `void` `b`(`a.a.e.g` v2 @kind this, `boolean` v3 , `int` v4 , `int` v5 , `a.a.e.l` v6 @kind object) @signature `La/a/e/g;.b:(ZIILa/a/e/l;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L07f560.  v1:= v2.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f564.  @monitorenter v1
  #L07f566.  if v6 == 0 then goto L07f570;
  #Try_start0.  
  #L07f56a.  call `a`(v6) @signature `La/a/e/l;.a:()V` @kind virtual;
  #L07f570.  v0:= v2.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07f574.  call `a`(v0, v3, v4, v5) @signature `La/a/e/j;.a:(ZII)V` @kind virtual;
  #L07f57a.  @monitorexit v1
  #L07f57c.  return @kind void;
  #L07f57e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07f580.  @monitorexit v1
  #Try_end0.  
  #L07f582.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07f57e;
}
procedure `a.a.e.l` `c`(`a.a.e.g` v2 @kind this, `int` v3 ) @signature `La/a/e/g;.c:(I)La/a/e/l;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L07f5a0.  @monitorenter v2
  #Try_start0.  
  #L07f5a2.  v0:= v2.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07f5a6.  if v0 == 0 then goto L07f5c6;
  #L07f5aa.  v0:= v2.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07f5ae.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f5b4.  v1:= temp @kind object;
  #L07f5b6.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07f5bc.  v0:= temp @kind object;
  #L07f5be.  v0:= (`a.a.e.l`) v0 @kind object;
  #Try_end0.  
  #L07f5c2.  @monitorexit v2
  #L07f5c4.  return v0 @kind object;
  #L07f5c6.  v0:= 0I;
  #L07f5c8.  goto L07f5c2;
  #L07f5ca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07f5cc.  @monitorexit v2
  #L07f5ce.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07f5ca;
}
procedure `void` `c`(`a.a.e.g` v1 @kind this) @signature `La/a/e/g;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07f5ec.  v0:= 1I;
  #L07f5ee.  call `a`(v1, v0) @signature `La/a/e/g;.a:(Z)V` @kind virtual;
  #L07f5f4.  return @kind void;
}
procedure `void` `c`(`a.a.e.g` v7 @kind this, `int` v8 , `a.a.e.b` v9 @kind object) @signature `La/a/e/g;.c:(ILa/a/e/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07f608.  v6:= v7.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07f60c.  v0:= new `a.a.e.g$7`;
  #L07f610.  v2:= "OkHttp %s Push Reset[%s]" @kind object;
  #L07f614.  v1:= 2I;
  #L07f616.  v3:= new `java.lang.Object`[v1];
  #L07f61a.  v1:= 0I;
  #L07f61c.  v4:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07f620.  v3[v1]:= v4 @kind object;
  #L07f624.  v1:= 1I;
  #L07f626.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f62c.  v4:= temp @kind object;
  #L07f62e.  v3[v1]:= v4 @kind object;
  #L07f632.  v1:= v7 @kind object;
  #L07f634.  v4:= v8;
  #L07f636.  v5:= v9 @kind object;
  #L07f638.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/g$7;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILa/a/e/b;)V` @kind direct;
  #L07f63e.  call `execute`(v6, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07f644.  return @kind void;
}
procedure `void` `close`(`a.a.e.g` v2 @kind this) @signature `La/a/e/g;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07f658.  v0:= `@@a.a.e.b.a` @type ^`a.a.e.b` @kind object;
  #L07f65c.  v1:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #L07f660.  call `a`(v2, v0, v1) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #L07f666.  return @kind void;
}
procedure `boolean` `d`(`a.a.e.g` v1 @kind this) @signature `La/a/e/g;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07f678.  @monitorenter v1
  #Try_start0.  
  #L07f67a.  v0:= v1.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #Try_end0.  
  #L07f67e.  @monitorexit v1
  #L07f680.  return v0;
  #L07f682.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07f684.  @monitorexit v1
  #L07f686.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07f682;
}
procedure `boolean` `d`(`a.a.e.g` v1 @kind this, `int` v2 ) @signature `La/a/e/g;.d:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L07f6a4.  if v2 == 0 then goto L07f6b4;
  #L07f6a8.  v0:= v2 ^& 1;
  #L07f6ac.  if v0 != 0 then goto L07f6b4;
  #L07f6b0.  v0:= 1I;
  #L07f6b2.  return v0;
  #L07f6b4.  v0:= 0I;
  #L07f6b6.  goto L07f6b2;
}

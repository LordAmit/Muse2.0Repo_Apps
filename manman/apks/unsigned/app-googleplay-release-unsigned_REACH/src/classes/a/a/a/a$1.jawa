record `a.a.a.a$1` @kind class @AccessFlag  extends `b.r` @kind interface {
  `boolean` `a.a.a.a$1.a` @AccessFlag ;
  `b.e` `a.a.a.a$1.b` @AccessFlag FINAL_SYNTHETIC;
  `a.a.a.b` `a.a.a.a$1.c` @AccessFlag FINAL_SYNTHETIC;
  `b.d` `a.a.a.a$1.d` @AccessFlag FINAL_SYNTHETIC;
  `a.a.a.a` `a.a.a.a$1.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.a.a$1` v0 @kind this, `a.a.a.a` v1 @kind object, `b.e` v2 @kind object, `a.a.a.b` v3 @kind object, `b.d` v4 @kind object) @signature `La/a/a/a$1;.<init>:(La/a/a/a;Lb/e;La/a/a/b;Lb/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L075528.  v0.`a.a.a.a$1.e` @type ^`a.a.a.a` := v1 @kind object;
  #L07552c.  v0.`a.a.a.a$1.b` @type ^`b.e` := v2 @kind object;
  #L075530.  v0.`a.a.a.a$1.c` @type ^`a.a.a.b` := v3 @kind object;
  #L075534.  v0.`a.a.a.a$1.d` @type ^`b.d` := v4 @kind object;
  #L075538.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07553e.  return @kind void;
}
procedure `long` `a`(`a.a.a.a$1` v6 @kind this, `b.c` v7 @kind object, `long` v8 ) @signature `La/a/a/a$1;.a:(Lb/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L075550.  v0:= -1L;
  #L075554.  v3:= 1I;
  #Try_start0.  
  #L075556.  v2:= v6.`a.a.a.a$1.b` @type ^`b.e` @kind object;
  #L07555a.  call temp:= `a`(v2, v7, v8) @signature `Lb/e;.a:(Lb/c;J)J` @kind interface;
  #Try_end0.  
  #L075560.  v4:= temp @kind wide;
  #L075562.  v2:= lcmp(v4, v0);
  #L075566.  if v2 != 0 then goto L07559e;
  #L07556a.  v2:= v6.`a.a.a.a$1.a` @type ^`boolean` @kind boolean;
  #L07556e.  if v2 != 0 then goto L075580;
  #L075572.  v6.`a.a.a.a$1.a` @type ^`boolean` := v3 @kind boolean;
  #L075576.  v2:= v6.`a.a.a.a$1.d` @type ^`b.d` @kind object;
  #L07557a.  call `close`(v2) @signature `Lb/d;.close:()V` @kind interface;
  #L075580.  v4:= v0 @kind wide;
  #L075582.  return v4 @kind wide;
  #L075584.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L075586.  v1:= v6.`a.a.a.a$1.a` @type ^`boolean` @kind boolean;
  #L07558a.  if v1 != 0 then goto L07559c;
  #L07558e.  v6.`a.a.a.a$1.a` @type ^`boolean` := v3 @kind boolean;
  #L075592.  v1:= v6.`a.a.a.a$1.c` @type ^`a.a.a.b` @kind object;
  #L075596.  call `b`(v1) @signature `La/a/a/b;.b:()V` @kind interface;
  #L07559c.  throw v0;
  #L07559e.  v0:= v6.`a.a.a.a$1.d` @type ^`b.d` @kind object;
  #L0755a2.  call temp:= `c`(v0) @signature `Lb/d;.c:()Lb/c;` @kind interface;
  #L0755a8.  v1:= temp @kind object;
  #L0755aa.  call temp:= `b`(v7) @signature `Lb/c;.b:()J` @kind virtual;
  #L0755b0.  v2:= temp @kind wide;
  #L0755b2.  v2:= v2 - v4 @kind long;
  #L0755b4.  v0:= v7 @kind object;
  #L0755b6.  call temp:= `a`(v0, v1, v2, v4) @signature `Lb/c;.a:(Lb/c;JJ)Lb/c;` @kind virtual;
  #L0755bc.  v0:= v6.`a.a.a.a$1.d` @type ^`b.d` @kind object;
  #L0755c0.  call temp:= `u`(v0) @signature `Lb/d;.u:()Lb/d;` @kind interface;
  #L0755c6.  goto L075582;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L075584;
}
procedure `b.s` `a`(`a.a.a.a$1` v1 @kind this) @signature `La/a/a/a$1;.a:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0755e8.  v0:= v1.`a.a.a.a$1.b` @type ^`b.e` @kind object;
  #L0755ec.  call temp:= `a`(v0) @signature `Lb/e;.a:()Lb/s;` @kind interface;
  #L0755f2.  v0:= temp @kind object;
  #L0755f4.  return v0 @kind object;
}
procedure `void` `close`(`a.a.a.a$1` v2 @kind this) @signature `La/a/a/a$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L075608.  v0:= v2.`a.a.a.a$1.a` @type ^`boolean` @kind boolean;
  #L07560c.  if v0 != 0 then goto L075634;
  #L075610.  v0:= 100I;
  #L075614.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L075618.  call temp:= `a`(v2, v0, v1) @signature `La/a/c;.a:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L07561e.  v0:= temp;
  #L075620.  if v0 != 0 then goto L075634;
  #L075624.  v0:= 1I;
  #L075626.  v2.`a.a.a.a$1.a` @type ^`boolean` := v0 @kind boolean;
  #L07562a.  v0:= v2.`a.a.a.a$1.c` @type ^`a.a.a.b` @kind object;
  #L07562e.  call `b`(v0) @signature `La/a/a/b;.b:()V` @kind interface;
  #L075634.  v0:= v2.`a.a.a.a$1.b` @type ^`b.e` @kind object;
  #L075638.  call `close`(v0) @signature `Lb/e;.close:()V` @kind interface;
  #L07563e.  return @kind void;
}

record `a.a.b.b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `a.a.b.b.a` @AccessFlag PRIVATE_FINAL;
  `int` `a.a.b.b.b` @AccessFlag PRIVATE;
  `boolean` `a.a.b.b.c` @AccessFlag PRIVATE;
  `boolean` `a.a.b.b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.b.b` v1 @kind this, `java.util.List` v2 @kind object) @signature `La/a/b/b;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L076900.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L076906.  v0:= 0I;
  #L076908.  v1.`a.a.b.b.b` @type ^`int` := v0;
  #L07690c.  v1.`a.a.b.b.a` @type ^`java.util.List` := v2 @kind object;
  #L076910.  return @kind void;
}
procedure `boolean` `b`(`a.a.b.b` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object) @signature `La/a/b/b;.b:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L076924.  v0:= v2.`a.a.b.b.b` @type ^`int`;
  #L076928.  v1:= v0;
  #L07692a.  v0:= v2.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L07692e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L076934.  v0:= temp;
  #L076936.  if v1 >= v0 then goto L076962;
  #L07693a.  v0:= v2.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L07693e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L076944.  v0:= temp @kind object;
  #L076946.  v0:= (`a.k`) v0 @kind object;
  #L07694a.  call temp:= `a`(v0, v3) @signature `La/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @kind virtual;
  #L076950.  v0:= temp;
  #L076952.  if v0 == 0 then goto L07695a;
  #L076956.  v0:= 1I;
  #L076958.  return v0;
  #L07695a.  v0:= v1 + 1;
  #L07695e.  v1:= v0;
  #L076960.  goto L07692a;
  #L076962.  v0:= 0I;
  #L076964.  goto L076958;
}
procedure `a.k` `a`(`a.a.b.b` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object) @signature `La/a/b/b;.a:(Ljavax/net/ssl/SSLSocket;)La/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L076978.  v1:= 0I;
  #L07697a.  v0:= v5.`a.a.b.b.b` @type ^`int`;
  #L07697e.  v2:= v5.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L076982.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L076988.  v3:= temp;
  #L07698a.  v2:= v0;
  #L07698c.  if v2 >= v3 then goto L076a4e;
  #L076990.  v0:= v5.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L076994.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L07699a.  v0:= temp @kind object;
  #L07699c.  v0:= (`a.k`) v0 @kind object;
  #L0769a0.  call temp:= `a`(v0, v6) @signature `La/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @kind virtual;
  #L0769a6.  v4:= temp;
  #L0769a8.  if v4 == 0 then goto L076a2a;
  #L0769ac.  v1:= v2 + 1;
  #L0769b0.  v5.`a.a.b.b.b` @type ^`int` := v1;
  #L0769b4.  if v0 != 0 then goto L076a32;
  #L0769b8.  v0:= new `java.net.UnknownServiceException`;
  #L0769bc.  v1:= new `java.lang.StringBuilder`;
  #L0769c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0769c6.  v2:= "Unable to find acceptable protocols. isFallback=" @kind object;
  #L0769ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0769d0.  v1:= temp @kind object;
  #L0769d2.  v2:= v5.`a.a.b.b.d` @type ^`boolean` @kind boolean;
  #L0769d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L0769dc.  v1:= temp @kind object;
  #L0769de.  v2:= ", modes=" @kind object;
  #L0769e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0769e8.  v1:= temp @kind object;
  #L0769ea.  v2:= v5.`a.a.b.b.a` @type ^`java.util.List` @kind object;
  #L0769ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0769f4.  v1:= temp @kind object;
  #L0769f6.  v2:= ", supported protocols=" @kind object;
  #L0769fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076a00.  v1:= temp @kind object;
  #L076a02.  call temp:= `getEnabledProtocols`(v6) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L076a08.  v2:= temp @kind object;
  #L076a0a.  call temp:= `toString`(v2) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L076a10.  v2:= temp @kind object;
  #L076a12.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076a18.  v1:= temp @kind object;
  #L076a1a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L076a20.  v1:= temp @kind object;
  #L076a22.  call `<init>`(v0, v1) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076a28.  throw v0;
  #L076a2a.  v0:= v2 + 1;
  #L076a2e.  v2:= v0;
  #L076a30.  goto L07698c;
  #L076a32.  call temp:= `b`(v5, v6) @signature `La/a/b/b;.b:(Ljavax/net/ssl/SSLSocket;)Z` @kind direct;
  #L076a38.  v1:= temp;
  #L076a3a.  v5.`a.a.b.b.c` @type ^`boolean` := v1 @kind boolean;
  #L076a3e.  v1:= `@@a.a.a.a` @type ^`a.a.a` @kind object;
  #L076a42.  v2:= v5.`a.a.b.b.d` @type ^`boolean` @kind boolean;
  #L076a46.  call `a`(v1, v0, v6, v2) @signature `La/a/a;.a:(La/k;Ljavax/net/ssl/SSLSocket;Z)V` @kind virtual;
  #L076a4c.  return v0 @kind object;
  #L076a4e.  v0:= v1 @kind object;
  #L076a50.  goto L0769b4;
}
procedure `boolean` `a`(`a.a.b.b` v3 @kind this, `java.io.IOException` v4 @kind object) @signature `La/a/b/b;.a:(Ljava/io/IOException;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L076a64.  v1:= 1I;
  #L076a66.  v0:= 0I;
  #L076a68.  v3.`a.a.b.b.d` @type ^`boolean` := v1 @kind boolean;
  #L076a6c.  v2:= v3.`a.a.b.b.c` @type ^`boolean` @kind boolean;
  #L076a70.  if v2 != 0 then goto L076a76;
  #L076a74.  return v0;
  #L076a76.  v2:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L076a7a.  if v2 != 0 then goto L076a74;
  #L076a7e.  v2:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L076a82.  if v2 != 0 then goto L076a74;
  #L076a86.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L076a8a.  if v2 == 0 then goto L076a9e;
  #L076a8e.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L076a94.  v2:= temp @kind object;
  #L076a96.  v2:= instanceof @variable v2 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L076a9a.  if v2 != 0 then goto L076a74;
  #L076a9e.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L076aa2.  if v2 != 0 then goto L076a74;
  #L076aa6.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L076aaa.  if v2 != 0 then goto L076ab6;
  #L076aae.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLProtocolException` @kind boolean;
  #L076ab2.  if v2 == 0 then goto L076a74;
  #L076ab6.  v0:= v1;
  #L076ab8.  goto L076a74;
}

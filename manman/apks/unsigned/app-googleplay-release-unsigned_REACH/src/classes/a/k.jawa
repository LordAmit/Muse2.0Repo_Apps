record `a.k` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `a.k.d` @AccessFlag FINAL;
  `boolean` `a.k.e` @AccessFlag FINAL;
  `java.lang.String`[] `a.k.f` @AccessFlag FINAL;
  `java.lang.String`[] `a.k.g` @AccessFlag FINAL;
}
global `a.k` `@@a.k.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.k` `@@a.k.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.k` `@@a.k.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `a.h`[] `@@a.k.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L087e70.  v7:= 4I;
  #L087e72.  v6:= 3I;
  #L087e74.  v5:= 2I;
  #L087e76.  v4:= 0I;
  #L087e78.  v3:= 1I;
  #L087e7a.  v0:= 15I;
  #L087e7e.  v0:= new `a.h`[v0];
  #L087e82.  v1:= `@@a.h.aW` @type ^`a.h` @kind object;
  #L087e86.  v0[v4]:= v1 @kind object;
  #L087e8a.  v1:= `@@a.h.ba` @type ^`a.h` @kind object;
  #L087e8e.  v0[v3]:= v1 @kind object;
  #L087e92.  v1:= `@@a.h.aX` @type ^`a.h` @kind object;
  #L087e96.  v0[v5]:= v1 @kind object;
  #L087e9a.  v1:= `@@a.h.bb` @type ^`a.h` @kind object;
  #L087e9e.  v0[v6]:= v1 @kind object;
  #L087ea2.  v1:= `@@a.h.bh` @type ^`a.h` @kind object;
  #L087ea6.  v0[v7]:= v1 @kind object;
  #L087eaa.  v1:= 5I;
  #L087eac.  v2:= `@@a.h.bg` @type ^`a.h` @kind object;
  #L087eb0.  v0[v1]:= v2 @kind object;
  #L087eb4.  v1:= 6I;
  #L087eb6.  v2:= `@@a.h.ax` @type ^`a.h` @kind object;
  #L087eba.  v0[v1]:= v2 @kind object;
  #L087ebe.  v1:= 7I;
  #L087ec0.  v2:= `@@a.h.aH` @type ^`a.h` @kind object;
  #L087ec4.  v0[v1]:= v2 @kind object;
  #L087ec8.  v1:= 8I;
  #L087ecc.  v2:= `@@a.h.ay` @type ^`a.h` @kind object;
  #L087ed0.  v0[v1]:= v2 @kind object;
  #L087ed4.  v1:= 9I;
  #L087ed8.  v2:= `@@a.h.aI` @type ^`a.h` @kind object;
  #L087edc.  v0[v1]:= v2 @kind object;
  #L087ee0.  v1:= 10I;
  #L087ee4.  v2:= `@@a.h.af` @type ^`a.h` @kind object;
  #L087ee8.  v0[v1]:= v2 @kind object;
  #L087eec.  v1:= 11I;
  #L087ef0.  v2:= `@@a.h.ag` @type ^`a.h` @kind object;
  #L087ef4.  v0[v1]:= v2 @kind object;
  #L087ef8.  v1:= 12I;
  #L087efc.  v2:= `@@a.h.D` @type ^`a.h` @kind object;
  #L087f00.  v0[v1]:= v2 @kind object;
  #L087f04.  v1:= 13I;
  #L087f08.  v2:= `@@a.h.H` @type ^`a.h` @kind object;
  #L087f0c.  v0[v1]:= v2 @kind object;
  #L087f10.  v1:= 14I;
  #L087f14.  v2:= `@@a.h.h` @type ^`a.h` @kind object;
  #L087f18.  v0[v1]:= v2 @kind object;
  #L087f1c.  `@@a.k.h` @type ^`a.h`[] := v0 @kind object;
  #L087f20.  v0:= new `a.k$a`;
  #L087f24.  call `<init>`(v0, v3) @signature `La/k$a;.<init>:(Z)V` @kind direct;
  #L087f2a.  v1:= `@@a.k.h` @type ^`a.h`[] @kind object;
  #L087f2e.  call temp:= `a`(v0, v1) @signature `La/k$a;.a:([La/h;)La/k$a;` @kind virtual;
  #L087f34.  v0:= temp @kind object;
  #L087f36.  v1:= new `a.ac`[v7];
  #L087f3a.  v2:= `@@a.ac.a` @type ^`a.ac` @kind object;
  #L087f3e.  v1[v4]:= v2 @kind object;
  #L087f42.  v2:= `@@a.ac.b` @type ^`a.ac` @kind object;
  #L087f46.  v1[v3]:= v2 @kind object;
  #L087f4a.  v2:= `@@a.ac.c` @type ^`a.ac` @kind object;
  #L087f4e.  v1[v5]:= v2 @kind object;
  #L087f52.  v2:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L087f56.  v1[v6]:= v2 @kind object;
  #L087f5a.  call temp:= `a`(v0, v1) @signature `La/k$a;.a:([La/ac;)La/k$a;` @kind virtual;
  #L087f60.  v0:= temp @kind object;
  #L087f62.  call temp:= `a`(v0, v3) @signature `La/k$a;.a:(Z)La/k$a;` @kind virtual;
  #L087f68.  v0:= temp @kind object;
  #L087f6a.  call temp:= `a`(v0) @signature `La/k$a;.a:()La/k;` @kind virtual;
  #L087f70.  v0:= temp @kind object;
  #L087f72.  `@@a.k.a` @type ^`a.k` := v0 @kind object;
  #L087f76.  v0:= new `a.k$a`;
  #L087f7a.  v1:= `@@a.k.a` @type ^`a.k` @kind object;
  #L087f7e.  call `<init>`(v0, v1) @signature `La/k$a;.<init>:(La/k;)V` @kind direct;
  #L087f84.  v1:= new `a.ac`[v3];
  #L087f88.  v2:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L087f8c.  v1[v4]:= v2 @kind object;
  #L087f90.  call temp:= `a`(v0, v1) @signature `La/k$a;.a:([La/ac;)La/k$a;` @kind virtual;
  #L087f96.  v0:= temp @kind object;
  #L087f98.  call temp:= `a`(v0, v3) @signature `La/k$a;.a:(Z)La/k$a;` @kind virtual;
  #L087f9e.  v0:= temp @kind object;
  #L087fa0.  call temp:= `a`(v0) @signature `La/k$a;.a:()La/k;` @kind virtual;
  #L087fa6.  v0:= temp @kind object;
  #L087fa8.  `@@a.k.b` @type ^`a.k` := v0 @kind object;
  #L087fac.  v0:= new `a.k$a`;
  #L087fb0.  call `<init>`(v0, v4) @signature `La/k$a;.<init>:(Z)V` @kind direct;
  #L087fb6.  call temp:= `a`(v0) @signature `La/k$a;.a:()La/k;` @kind virtual;
  #L087fbc.  v0:= temp @kind object;
  #L087fbe.  `@@a.k.c` @type ^`a.k` := v0 @kind object;
  #L087fc2.  return @kind void;
}
procedure `void` `<init>`(`a.k` v1 @kind this, `a.k$a` v2 @kind object) @signature `La/k;.<init>:(La/k$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L087fd4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L087fda.  v0:= v2.`a.k$a.a` @type ^`boolean` @kind boolean;
  #L087fde.  v1.`a.k.d` @type ^`boolean` := v0 @kind boolean;
  #L087fe2.  v0:= v2.`a.k$a.b` @type ^`java.lang.String`[] @kind object;
  #L087fe6.  v1.`a.k.f` @type ^`java.lang.String`[] := v0 @kind object;
  #L087fea.  v0:= v2.`a.k$a.c` @type ^`java.lang.String`[] @kind object;
  #L087fee.  v1.`a.k.g` @type ^`java.lang.String`[] := v0 @kind object;
  #L087ff2.  v0:= v2.`a.k$a.d` @type ^`boolean` @kind boolean;
  #L087ff6.  v1.`a.k.e` @type ^`boolean` := v0 @kind boolean;
  #L087ffa.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String`[] v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `La/k;.a:([Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08800c.  v0:= 0I;
  #L08800e.  if v5 == 0 then goto L088022;
  #L088012.  if v6 == 0 then goto L088022;
  #L088016.  v1:= length @variable v5;
  #L088018.  if v1 == 0 then goto L088022;
  #L08801c.  v1:= length @variable v6;
  #L08801e.  if v1 != 0 then goto L088024;
  #L088022.  return v0;
  #L088024.  v2:= length @variable v5;
  #L088026.  v1:= v0;
  #L088028.  if v1 >= v2 then goto L088022;
  #L08802c.  v3:= v5[v1] @kind object;
  #L088030.  call temp:= `a`(v6, v3) @signature `La/a/c;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L088036.  v3:= temp;
  #L088038.  v4:= -1I;
  #L08803a.  if v3 == v4 then goto L088042;
  #L08803e.  v0:= 1I;
  #L088040.  goto L088022;
  #L088042.  v1:= v1 + 1;
  #L088046.  goto L088028;
}
procedure `a.k` `b`(`a.k` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `La/k;.b:(Ljavax/net/ssl/SSLSocket;Z)La/k;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L088058.  v0:= v4.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L08805c.  if v0 == 0 then goto L0880f0;
  #L088060.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L088064.  v1:= v4.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L088068.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L08806e.  v2:= temp @kind object;
  #L088070.  call temp:= `a`(v0, v1, v2) @signature `La/a/c;.a:(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L088076.  v0:= temp @kind object;
  #L088078.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L08807c.  v1:= v0 @kind object;
  #L08807e.  v0:= v4.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L088082.  if v0 == 0 then goto L0880fc;
  #L088086.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L08808a.  v2:= v4.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L08808e.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L088094.  v3:= temp @kind object;
  #L088096.  call temp:= `a`(v0, v2, v3) @signature `La/a/c;.a:(Ljava/lang/Class;[Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L08809c.  v0:= temp @kind object;
  #L08809e.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L0880a2.  if v6 == 0 then goto L0880cc;
  #L0880a6.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L0880ac.  v2:= temp @kind object;
  #L0880ae.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L0880b2.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L0880b8.  v2:= temp;
  #L0880ba.  v3:= -1I;
  #L0880bc.  if v2 == v3 then goto L0880cc;
  #L0880c0.  v2:= "TLS_FALLBACK_SCSV" @kind object;
  #L0880c4.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L0880ca.  v1:= temp @kind object;
  #L0880cc.  v2:= new `a.k$a`;
  #L0880d0.  call `<init>`(v2, v4) @signature `La/k$a;.<init>:(La/k;)V` @kind direct;
  #L0880d6.  call temp:= `a`(v2, v1) @signature `La/k$a;.a:([Ljava/lang/String;)La/k$a;` @kind virtual;
  #L0880dc.  v1:= temp @kind object;
  #L0880de.  call temp:= `b`(v1, v0) @signature `La/k$a;.b:([Ljava/lang/String;)La/k$a;` @kind virtual;
  #L0880e4.  v0:= temp @kind object;
  #L0880e6.  call temp:= `a`(v0) @signature `La/k$a;.a:()La/k;` @kind virtual;
  #L0880ec.  v0:= temp @kind object;
  #L0880ee.  return v0 @kind object;
  #L0880f0.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L0880f6.  v0:= temp @kind object;
  #L0880f8.  v1:= v0 @kind object;
  #L0880fa.  goto L08807e;
  #L0880fc.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L088102.  v0:= temp @kind object;
  #L088104.  goto L0880a2;
}
procedure `void` `a`(`a.k` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object, `boolean` v4 ) @signature `La/k;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L088118.  call temp:= `b`(v2, v3, v4) @signature `La/k;.b:(Ljavax/net/ssl/SSLSocket;Z)La/k;` @kind direct;
  #L08811e.  v0:= temp @kind object;
  #L088120.  v1:= v0.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L088124.  if v1 == 0 then goto L088132;
  #L088128.  v1:= v0.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L08812c.  call `setEnabledProtocols`(v3, v1) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L088132.  v1:= v0.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L088136.  if v1 == 0 then goto L088144;
  #L08813a.  v0:= v0.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L08813e.  call `setEnabledCipherSuites`(v3, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L088144.  return @kind void;
}
procedure `boolean` `a`(`a.k` v1 @kind this) @signature `La/k;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088158.  v0:= v1.`a.k.d` @type ^`boolean` @kind boolean;
  #L08815c.  return v0;
}
procedure `boolean` `a`(`a.k` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `La/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L088170.  v0:= 0I;
  #L088172.  v1:= v3.`a.k.d` @type ^`boolean` @kind boolean;
  #L088176.  if v1 != 0 then goto L08817c;
  #L08817a.  return v0;
  #L08817c.  v1:= v3.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L088180.  if v1 == 0 then goto L08819c;
  #L088184.  v1:= v3.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L088188.  call temp:= `getEnabledProtocols`(v4) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L08818e.  v2:= temp @kind object;
  #L088190.  call temp:= `a`(v1, v2) @signature `La/k;.a:([Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L088196.  v1:= temp;
  #L088198.  if v1 == 0 then goto L08817a;
  #L08819c.  v1:= v3.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L0881a0.  if v1 == 0 then goto L0881bc;
  #L0881a4.  v1:= v3.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L0881a8.  call temp:= `getEnabledCipherSuites`(v4) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L0881ae.  v2:= temp @kind object;
  #L0881b0.  call temp:= `a`(v1, v2) @signature `La/k;.a:([Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L0881b6.  v1:= temp;
  #L0881b8.  if v1 == 0 then goto L08817a;
  #L0881bc.  v0:= 1I;
  #L0881be.  goto L08817a;
}
procedure `java.util.List` `b`(`a.k` v5 @kind this) @signature `La/k;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0881d0.  v0:= v5.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L0881d4.  if v0 != 0 then goto L0881dc;
  #L0881d8.  v0:= 0I;
  #L0881da.  return v0 @kind object;
  #L0881dc.  v1:= new `java.util.ArrayList`;
  #L0881e0.  v0:= v5.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L0881e4.  v0:= length @variable v0;
  #L0881e6.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0881ec.  v2:= v5.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L0881f0.  v3:= length @variable v2;
  #L0881f2.  v0:= 0I;
  #L0881f4.  if v0 >= v3 then goto L088210;
  #L0881f8.  v4:= v2[v0] @kind object;
  #L0881fc.  call temp:= `a`(v4) @signature `La/h;.a:(Ljava/lang/String;)La/h;` @kind static;
  #L088202.  v4:= temp @kind object;
  #L088204.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08820a.  v0:= v0 + 1;
  #L08820e.  goto L0881f4;
  #L088210.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L088216.  v0:= temp @kind object;
  #L088218.  goto L0881da;
}
procedure `java.util.List` `c`(`a.k` v5 @kind this) @signature `La/k;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08822c.  v0:= v5.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L088230.  if v0 != 0 then goto L088238;
  #L088234.  v0:= 0I;
  #L088236.  return v0 @kind object;
  #L088238.  v1:= new `java.util.ArrayList`;
  #L08823c.  v0:= v5.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L088240.  v0:= length @variable v0;
  #L088242.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L088248.  v2:= v5.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L08824c.  v3:= length @variable v2;
  #L08824e.  v0:= 0I;
  #L088250.  if v0 >= v3 then goto L08826c;
  #L088254.  v4:= v2[v0] @kind object;
  #L088258.  call temp:= `a`(v4) @signature `La/ac;.a:(Ljava/lang/String;)La/ac;` @kind static;
  #L08825e.  v4:= temp @kind object;
  #L088260.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088266.  v0:= v0 + 1;
  #L08826a.  goto L088250;
  #L08826c.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L088272.  v0:= temp @kind object;
  #L088274.  goto L088236;
}
procedure `boolean` `d`(`a.k` v1 @kind this) @signature `La/k;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088288.  v0:= v1.`a.k.e` @type ^`boolean` @kind boolean;
  #L08828c.  return v0;
}
procedure `boolean` `equals`(`a.k` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `La/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0882a0.  v1:= 1I;
  #L0882a2.  v0:= 0I;
  #L0882a4.  v2:= instanceof @variable v5 @type ^`a.k` @kind boolean;
  #L0882a8.  if v2 != 0 then goto L0882ae;
  #L0882ac.  return v0;
  #L0882ae.  if v5 != v4 then goto L0882b6;
  #L0882b2.  v0:= v1;
  #L0882b4.  goto L0882ac;
  #L0882b6.  v5:= (`a.k`) v5 @kind object;
  #L0882ba.  v2:= v4.`a.k.d` @type ^`boolean` @kind boolean;
  #L0882be.  v3:= v5.`a.k.d` @type ^`boolean` @kind boolean;
  #L0882c2.  if v2 != v3 then goto L0882ac;
  #L0882c6.  v2:= v4.`a.k.d` @type ^`boolean` @kind boolean;
  #L0882ca.  if v2 == 0 then goto L088302;
  #L0882ce.  v2:= v4.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L0882d2.  v3:= v5.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L0882d6.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L0882dc.  v2:= temp;
  #L0882de.  if v2 == 0 then goto L0882ac;
  #L0882e2.  v2:= v4.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L0882e6.  v3:= v5.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L0882ea.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L0882f0.  v2:= temp;
  #L0882f2.  if v2 == 0 then goto L0882ac;
  #L0882f6.  v2:= v4.`a.k.e` @type ^`boolean` @kind boolean;
  #L0882fa.  v3:= v5.`a.k.e` @type ^`boolean` @kind boolean;
  #L0882fe.  if v2 != v3 then goto L0882ac;
  #L088302.  v0:= v1;
  #L088304.  goto L0882ac;
}
procedure `int` `hashCode`(`a.k` v2 @kind this) @signature `La/k;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L088318.  v0:= 17I;
  #L08831c.  v1:= v2.`a.k.d` @type ^`boolean` @kind boolean;
  #L088320.  if v1 == 0 then goto L088356;
  #L088324.  v0:= v2.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L088328.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L08832e.  v0:= temp;
  #L088330.  v0:= v0 + 527;
  #L088334.  v0:= v0 * 31;
  #L088338.  v1:= v2.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L08833c.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L088342.  v1:= temp;
  #L088344.  v0:= v0 + v1 @kind int;
  #L088346.  v1:= v0 * 31;
  #L08834a.  v0:= v2.`a.k.e` @type ^`boolean` @kind boolean;
  #L08834e.  if v0 == 0 then goto L088358;
  #L088352.  v0:= 0I;
  #L088354.  v0:= v0 + v1 @kind int;
  #L088356.  return v0;
  #L088358.  v0:= 1I;
  #L08835a.  goto L088354;
}
procedure `java.lang.String` `toString`(`a.k` v4 @kind this) @signature `La/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08836c.  v0:= v4.`a.k.d` @type ^`boolean` @kind boolean;
  #L088370.  if v0 != 0 then goto L08837a;
  #L088374.  v0:= "ConnectionSpec()" @kind object;
  #L088378.  return v0 @kind object;
  #L08837a.  v0:= v4.`a.k.f` @type ^`java.lang.String`[] @kind object;
  #L08837e.  if v0 == 0 then goto L08840a;
  #L088382.  call temp:= `b`(v4) @signature `La/k;.b:()Ljava/util/List;` @kind virtual;
  #L088388.  v0:= temp @kind object;
  #L08838a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L088390.  v0:= temp @kind object;
  #L088392.  v1:= v4.`a.k.g` @type ^`java.lang.String`[] @kind object;
  #L088396.  if v1 == 0 then goto L088410;
  #L08839a.  call temp:= `c`(v4) @signature `La/k;.c:()Ljava/util/List;` @kind virtual;
  #L0883a0.  v1:= temp @kind object;
  #L0883a2.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L0883a8.  v1:= temp @kind object;
  #L0883aa.  v2:= new `java.lang.StringBuilder`;
  #L0883ae.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0883b4.  v3:= "ConnectionSpec(cipherSuites=" @kind object;
  #L0883b8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0883be.  v2:= temp @kind object;
  #L0883c0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0883c6.  v0:= temp @kind object;
  #L0883c8.  v2:= ", tlsVersions=" @kind object;
  #L0883cc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0883d2.  v0:= temp @kind object;
  #L0883d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0883da.  v0:= temp @kind object;
  #L0883dc.  v1:= ", supportsTlsExtensions=" @kind object;
  #L0883e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0883e6.  v0:= temp @kind object;
  #L0883e8.  v1:= v4.`a.k.e` @type ^`boolean` @kind boolean;
  #L0883ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L0883f2.  v0:= temp @kind object;
  #L0883f4.  v1:= ")" @kind object;
  #L0883f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0883fe.  v0:= temp @kind object;
  #L088400.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L088406.  v0:= temp @kind object;
  #L088408.  goto L088378;
  #L08840a.  v0:= "[all enabled]" @kind object;
  #L08840e.  goto L088392;
  #L088410.  v1:= "[all enabled]" @kind object;
  #L088414.  goto L0883aa;
}

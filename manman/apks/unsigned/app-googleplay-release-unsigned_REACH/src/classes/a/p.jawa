record `a.p` @kind class @AccessFlag PUBLIC_FINAL {
  `a.ac` `a.p.a` @AccessFlag PRIVATE_FINAL;
  `a.h` `a.p.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.p.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `a.p.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.p` v0 @kind this, `a.ac` v1 @kind object, `a.h` v2 @kind object, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object) @signature `La/p;.<init>:(La/ac;La/h;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L08932c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L089332.  v0.`a.p.a` @type ^`a.ac` := v1 @kind object;
  #L089336.  v0.`a.p.b` @type ^`a.h` := v2 @kind object;
  #L08933a.  v0.`a.p.c` @type ^`java.util.List` := v3 @kind object;
  #L08933e.  v0.`a.p.d` @type ^`java.util.List` := v4 @kind object;
  #L089342.  return @kind void;
}
procedure `a.p` `a`(`javax.net.ssl.SSLSession` v5 @kind object) @signature `La/p;.a:(Ljavax/net/ssl/SSLSession;)La/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089354.  call temp:= `getCipherSuite`(v5) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L08935a.  v0:= temp @kind object;
  #L08935c.  if v0 != 0 then goto L089370;
  #L089360.  v0:= new `java.lang.IllegalStateException`;
  #L089364.  v1:= "cipherSuite == null" @kind object;
  #L089368.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08936e.  throw v0;
  #L089370.  call temp:= `a`(v0) @signature `La/h;.a:(Ljava/lang/String;)La/h;` @kind static;
  #L089376.  v2:= temp @kind object;
  #L089378.  call temp:= `getProtocol`(v5) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L08937e.  v0:= temp @kind object;
  #L089380.  if v0 != 0 then goto L089394;
  #L089384.  v0:= new `java.lang.IllegalStateException`;
  #L089388.  v1:= "tlsVersion == null" @kind object;
  #L08938c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L089392.  throw v0;
  #L089394.  call temp:= `a`(v0) @signature `La/ac;.a:(Ljava/lang/String;)La/ac;` @kind static;
  #L08939a.  v3:= temp @kind object;
  #Try_start0.  
  #L08939c.  call temp:= `getPeerCertificates`(v5) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #Try_end0.  
  #L0893a2.  v0:= temp @kind object;
  #L0893a4.  if v0 == 0 then goto L0893d6;
  #L0893a8.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0893ae.  v0:= temp @kind object;
  #L0893b0.  call temp:= `getLocalCertificates`(v5) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L0893b6.  v1:= temp @kind object;
  #L0893b8.  if v1 == 0 then goto L0893e0;
  #L0893bc.  call temp:= `a`(v1) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L0893c2.  v1:= temp @kind object;
  #L0893c4.  v4:= new `a.p`;
  #L0893c8.  call `<init>`(v4, v3, v2, v0, v1) @signature `La/p;.<init>:(La/ac;La/h;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L0893ce.  return v4 @kind object;
  #L0893d0.  v0:= Exception @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind object;
  #L0893d2.  v0:= 0I;
  #L0893d4.  goto L0893a4;
  #L0893d6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0893dc.  v0:= temp @kind object;
  #L0893de.  goto L0893b0;
  #L0893e0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0893e6.  v1:= temp @kind object;
  #L0893e8.  goto L0893c4;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[Try_start0..Try_end0] goto L0893d0;
}
procedure `a.h` `a`(`a.p` v1 @kind this) @signature `La/p;.a:()La/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08940c.  v0:= v1.`a.p.b` @type ^`a.h` @kind object;
  #L089410.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.p` v1 @kind this) @signature `La/p;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L089424.  v0:= v1.`a.p.c` @type ^`java.util.List` @kind object;
  #L089428.  return v0 @kind object;
}
procedure `boolean` `equals`(`a.p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08943c.  v0:= 0I;
  #L08943e.  v1:= instanceof @variable v4 @type ^`a.p` @kind boolean;
  #L089442.  if v1 != 0 then goto L089448;
  #L089446.  return v0;
  #L089448.  v4:= (`a.p`) v4 @kind object;
  #L08944c.  v1:= v3.`a.p.b` @type ^`a.h` @kind object;
  #L089450.  v2:= v4.`a.p.b` @type ^`a.h` @kind object;
  #L089454.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L08945a.  v1:= temp;
  #L08945c.  if v1 == 0 then goto L089446;
  #L089460.  v1:= v3.`a.p.b` @type ^`a.h` @kind object;
  #L089464.  v2:= v4.`a.p.b` @type ^`a.h` @kind object;
  #L089468.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08946e.  v1:= temp;
  #L089470.  if v1 == 0 then goto L089446;
  #L089474.  v1:= v3.`a.p.c` @type ^`java.util.List` @kind object;
  #L089478.  v2:= v4.`a.p.c` @type ^`java.util.List` @kind object;
  #L08947c.  call temp:= `equals`(v1, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L089482.  v1:= temp;
  #L089484.  if v1 == 0 then goto L089446;
  #L089488.  v1:= v3.`a.p.d` @type ^`java.util.List` @kind object;
  #L08948c.  v2:= v4.`a.p.d` @type ^`java.util.List` @kind object;
  #L089490.  call temp:= `equals`(v1, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L089496.  v1:= temp;
  #L089498.  if v1 == 0 then goto L089446;
  #L08949c.  v0:= 1I;
  #L08949e.  goto L089446;
}
procedure `int` `hashCode`(`a.p` v2 @kind this) @signature `La/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0894b0.  v0:= v2.`a.p.a` @type ^`a.ac` @kind object;
  #L0894b4.  if v0 == 0 then goto L089500;
  #L0894b8.  v0:= v2.`a.p.a` @type ^`a.ac` @kind object;
  #L0894bc.  call temp:= `hashCode`(v0) @signature `La/ac;.hashCode:()I` @kind virtual;
  #L0894c2.  v0:= temp;
  #L0894c4.  v0:= v0 + 527;
  #L0894c8.  v0:= v0 * 31;
  #L0894cc.  v1:= v2.`a.p.b` @type ^`a.h` @kind object;
  #L0894d0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L0894d6.  v1:= temp;
  #L0894d8.  v0:= v0 + v1 @kind int;
  #L0894da.  v0:= v0 * 31;
  #L0894de.  v1:= v2.`a.p.c` @type ^`java.util.List` @kind object;
  #L0894e2.  call temp:= `hashCode`(v1) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L0894e8.  v1:= temp;
  #L0894ea.  v0:= v0 + v1 @kind int;
  #L0894ec.  v0:= v0 * 31;
  #L0894f0.  v1:= v2.`a.p.d` @type ^`java.util.List` @kind object;
  #L0894f4.  call temp:= `hashCode`(v1) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L0894fa.  v1:= temp;
  #L0894fc.  v0:= v0 + v1 @kind int;
  #L0894fe.  return v0;
  #L089500.  v0:= 0I;
  #L089502.  goto L0894c4;
}

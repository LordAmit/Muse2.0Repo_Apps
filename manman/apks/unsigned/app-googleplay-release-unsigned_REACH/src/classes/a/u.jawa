record `a.u` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface {
  `int` `a.u.A` @AccessFlag FINAL;
  `int` `a.u.B` @AccessFlag FINAL;
  `a.n` `a.u.c` @AccessFlag FINAL;
  `java.net.Proxy` `a.u.d` @AccessFlag FINAL;
  `java.util.List` `a.u.e` @AccessFlag FINAL;
  `java.util.List` `a.u.f` @AccessFlag FINAL;
  `java.util.List` `a.u.g` @AccessFlag FINAL;
  `java.util.List` `a.u.h` @AccessFlag FINAL;
  `java.net.ProxySelector` `a.u.i` @AccessFlag FINAL;
  `a.m` `a.u.j` @AccessFlag FINAL;
  `a.c` `a.u.k` @AccessFlag FINAL;
  `a.a.a.e` `a.u.l` @AccessFlag FINAL;
  `javax.net.SocketFactory` `a.u.m` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `a.u.n` @AccessFlag FINAL;
  `a.a.h.b` `a.u.o` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `a.u.p` @AccessFlag FINAL;
  `a.g` `a.u.q` @AccessFlag FINAL;
  `a.b` `a.u.r` @AccessFlag FINAL;
  `a.b` `a.u.s` @AccessFlag FINAL;
  `a.j` `a.u.t` @AccessFlag FINAL;
  `a.o` `a.u.u` @AccessFlag FINAL;
  `boolean` `a.u.v` @AccessFlag FINAL;
  `boolean` `a.u.w` @AccessFlag FINAL;
  `boolean` `a.u.x` @AccessFlag FINAL;
  `int` `a.u.y` @AccessFlag FINAL;
  `int` `a.u.z` @AccessFlag FINAL;
}
global `java.util.List` `@@a.u.a` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@a.u.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08bb90.  v4:= 2I;
  #L08bb92.  v3:= 1I;
  #L08bb94.  v2:= 0I;
  #L08bb96.  v0:= new `a.v`[v4];
  #L08bb9a.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08bb9e.  v0[v2]:= v1 @kind object;
  #L08bba2.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08bba6.  v0[v3]:= v1 @kind object;
  #L08bbaa.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L08bbb0.  v0:= temp @kind object;
  #L08bbb2.  `@@a.u.a` @type ^`java.util.List` := v0 @kind object;
  #L08bbb6.  v0:= 3I;
  #L08bbb8.  v0:= new `a.k`[v0];
  #L08bbbc.  v1:= `@@a.k.a` @type ^`a.k` @kind object;
  #L08bbc0.  v0[v2]:= v1 @kind object;
  #L08bbc4.  v1:= `@@a.k.b` @type ^`a.k` @kind object;
  #L08bbc8.  v0[v3]:= v1 @kind object;
  #L08bbcc.  v1:= `@@a.k.c` @type ^`a.k` @kind object;
  #L08bbd0.  v0[v4]:= v1 @kind object;
  #L08bbd4.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L08bbda.  v0:= temp @kind object;
  #L08bbdc.  `@@a.u.b` @type ^`java.util.List` := v0 @kind object;
  #L08bbe0.  v0:= new `a.u$1`;
  #L08bbe4.  call `<init>`(v0) @signature `La/u$1;.<init>:()V` @kind direct;
  #L08bbea.  `@@a.a.a.a` @type ^`a.a.a` := v0 @kind object;
  #L08bbee.  return @kind void;
}
procedure `void` `<init>`(`a.u` v1 @kind this) @signature `La/u;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L08bc00.  v0:= new `a.u$a`;
  #L08bc04.  call `<init>`(v0) @signature `La/u$a;.<init>:()V` @kind direct;
  #L08bc0a.  call `<init>`(v1, v0) @signature `La/u;.<init>:(La/u$a;)V` @kind direct;
  #L08bc10.  return @kind void;
}
procedure `void` `<init>`(`a.u` v4 @kind this, `a.u$a` v5 @kind object) @signature `La/u;.<init>:(La/u$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08bc24.  v2:= 0I;
  #L08bc26.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08bc2c.  v0:= v5.`a.u$a.a` @type ^`a.n` @kind object;
  #L08bc30.  v4.`a.u.c` @type ^`a.n` := v0 @kind object;
  #L08bc34.  v0:= v5.`a.u$a.b` @type ^`java.net.Proxy` @kind object;
  #L08bc38.  v4.`a.u.d` @type ^`java.net.Proxy` := v0 @kind object;
  #L08bc3c.  v0:= v5.`a.u$a.c` @type ^`java.util.List` @kind object;
  #L08bc40.  v4.`a.u.e` @type ^`java.util.List` := v0 @kind object;
  #L08bc44.  v0:= v5.`a.u$a.d` @type ^`java.util.List` @kind object;
  #L08bc48.  v4.`a.u.f` @type ^`java.util.List` := v0 @kind object;
  #L08bc4c.  v0:= v5.`a.u$a.e` @type ^`java.util.List` @kind object;
  #L08bc50.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08bc56.  v0:= temp @kind object;
  #L08bc58.  v4.`a.u.g` @type ^`java.util.List` := v0 @kind object;
  #L08bc5c.  v0:= v5.`a.u$a.f` @type ^`java.util.List` @kind object;
  #L08bc60.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08bc66.  v0:= temp @kind object;
  #L08bc68.  v4.`a.u.h` @type ^`java.util.List` := v0 @kind object;
  #L08bc6c.  v0:= v5.`a.u$a.g` @type ^`java.net.ProxySelector` @kind object;
  #L08bc70.  v4.`a.u.i` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L08bc74.  v0:= v5.`a.u$a.h` @type ^`a.m` @kind object;
  #L08bc78.  v4.`a.u.j` @type ^`a.m` := v0 @kind object;
  #L08bc7c.  v0:= v5.`a.u$a.i` @type ^`a.c` @kind object;
  #L08bc80.  v4.`a.u.k` @type ^`a.c` := v0 @kind object;
  #L08bc84.  v0:= v5.`a.u$a.j` @type ^`a.a.a.e` @kind object;
  #L08bc88.  v4.`a.u.l` @type ^`a.a.a.e` := v0 @kind object;
  #L08bc8c.  v0:= v5.`a.u$a.k` @type ^`javax.net.SocketFactory` @kind object;
  #L08bc90.  v4.`a.u.m` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L08bc94.  v0:= v4.`a.u.f` @type ^`java.util.List` @kind object;
  #L08bc98.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L08bc9e.  v3:= temp @kind object;
  #L08bca0.  v1:= v2;
  #L08bca2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L08bca8.  v0:= temp;
  #L08bcaa.  if v0 == 0 then goto L08bcd4;
  #L08bcae.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L08bcb4.  v0:= temp @kind object;
  #L08bcb6.  v0:= (`a.k`) v0 @kind object;
  #L08bcba.  if v1 != 0 then goto L08bcca;
  #L08bcbe.  call temp:= `a`(v0) @signature `La/k;.a:()Z` @kind virtual;
  #L08bcc4.  v0:= temp;
  #L08bcc6.  if v0 == 0 then goto L08bcd0;
  #L08bcca.  v0:= 1I;
  #L08bccc.  v1:= v0;
  #L08bcce.  goto L08bca2;
  #L08bcd0.  v0:= v2;
  #L08bcd2.  goto L08bccc;
  #L08bcd4.  v0:= v5.`a.u$a.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08bcd8.  if v0 != 0 then goto L08bce0;
  #L08bcdc.  if v1 != 0 then goto L08bd66;
  #L08bce0.  v0:= v5.`a.u$a.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08bce4.  v4.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L08bce8.  v0:= v5.`a.u$a.m` @type ^`a.a.h.b` @kind object;
  #L08bcec.  v4.`a.u.o` @type ^`a.a.h.b` := v0 @kind object;
  #L08bcf0.  v0:= v5.`a.u$a.n` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L08bcf4.  v4.`a.u.p` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L08bcf8.  v0:= v5.`a.u$a.o` @type ^`a.g` @kind object;
  #L08bcfc.  v1:= v4.`a.u.o` @type ^`a.a.h.b` @kind object;
  #L08bd00.  call temp:= `a`(v0, v1) @signature `La/g;.a:(La/a/h/b;)La/g;` @kind virtual;
  #L08bd06.  v0:= temp @kind object;
  #L08bd08.  v4.`a.u.q` @type ^`a.g` := v0 @kind object;
  #L08bd0c.  v0:= v5.`a.u$a.p` @type ^`a.b` @kind object;
  #L08bd10.  v4.`a.u.r` @type ^`a.b` := v0 @kind object;
  #L08bd14.  v0:= v5.`a.u$a.q` @type ^`a.b` @kind object;
  #L08bd18.  v4.`a.u.s` @type ^`a.b` := v0 @kind object;
  #L08bd1c.  v0:= v5.`a.u$a.r` @type ^`a.j` @kind object;
  #L08bd20.  v4.`a.u.t` @type ^`a.j` := v0 @kind object;
  #L08bd24.  v0:= v5.`a.u$a.s` @type ^`a.o` @kind object;
  #L08bd28.  v4.`a.u.u` @type ^`a.o` := v0 @kind object;
  #L08bd2c.  v0:= v5.`a.u$a.t` @type ^`boolean` @kind boolean;
  #L08bd30.  v4.`a.u.v` @type ^`boolean` := v0 @kind boolean;
  #L08bd34.  v0:= v5.`a.u$a.u` @type ^`boolean` @kind boolean;
  #L08bd38.  v4.`a.u.w` @type ^`boolean` := v0 @kind boolean;
  #L08bd3c.  v0:= v5.`a.u$a.v` @type ^`boolean` @kind boolean;
  #L08bd40.  v4.`a.u.x` @type ^`boolean` := v0 @kind boolean;
  #L08bd44.  v0:= v5.`a.u$a.w` @type ^`int`;
  #L08bd48.  v4.`a.u.y` @type ^`int` := v0;
  #L08bd4c.  v0:= v5.`a.u$a.x` @type ^`int`;
  #L08bd50.  v4.`a.u.z` @type ^`int` := v0;
  #L08bd54.  v0:= v5.`a.u$a.y` @type ^`int`;
  #L08bd58.  v4.`a.u.A` @type ^`int` := v0;
  #L08bd5c.  v0:= v5.`a.u$a.z` @type ^`int`;
  #L08bd60.  v4.`a.u.B` @type ^`int` := v0;
  #L08bd64.  return @kind void;
  #L08bd66.  call temp:= `x`(v4) @signature `La/u;.x:()Ljavax/net/ssl/X509TrustManager;` @kind direct;
  #L08bd6c.  v0:= temp @kind object;
  #L08bd6e.  call temp:= `a`(v4, v0) @signature `La/u;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind direct;
  #L08bd74.  v1:= temp @kind object;
  #L08bd76.  v4.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L08bd7a.  call temp:= `a`(v0) @signature `La/a/h/b;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/b;` @kind static;
  #L08bd80.  v0:= temp @kind object;
  #L08bd82.  v4.`a.u.o` @type ^`a.a.h.b` := v0 @kind object;
  #L08bd86.  goto L08bcf0;
}
procedure `javax.net.ssl.SSLSocketFactory` `a`(`a.u` v4 @kind this, `javax.net.ssl.X509TrustManager` v5 @kind object) @signature `La/u;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L08bd98.  v0:= "TLS" @kind object;
  #L08bd9c.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L08bda2.  v0:= temp @kind object;
  #L08bda4.  v1:= 0I;
  #L08bda6.  v2:= 1I;
  #L08bda8.  v2:= new `javax.net.ssl.TrustManager`[v2];
  #L08bdac.  v3:= 0I;
  #L08bdae.  v2[v3]:= v5 @kind object;
  #L08bdb2.  v3:= 0I;
  #L08bdb4.  call `init`(v0, v1, v2, v3) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L08bdba.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #Try_end0.  
  #L08bdc0.  v0:= temp @kind object;
  #L08bdc2.  return v0 @kind object;
  #L08bdc4.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L08bdc6.  v0:= new `java.lang.AssertionError`;
  #L08bdca.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08bdd0.  throw v0;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L08bdc4;
}
procedure `javax.net.ssl.X509TrustManager` `x`(`a.u` v4 @kind this) @signature `La/u;.x:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L08bdf4.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L08bdfa.  v0:= temp @kind object;
  #L08bdfc.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L08be02.  v1:= temp @kind object;
  #L08be04.  v0:= 0I;
  #L08be06.  v0:= (`java.security.KeyStore`) v0 @kind object;
  #L08be0a.  call `init`(v1, v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L08be10.  call temp:= `getTrustManagers`(v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L08be16.  v0:= temp @kind object;
  #L08be18.  v1:= length @variable v0;
  #L08be1a.  v2:= 1I;
  #L08be1c.  if v1 != v2 then goto L08be2e;
  #L08be20.  v1:= 0I;
  #L08be22.  v1:= v0[v1] @kind object;
  #L08be26.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L08be2a.  if v1 != 0 then goto L08be76;
  #L08be2e.  v1:= new `java.lang.IllegalStateException`;
  #L08be32.  v2:= new `java.lang.StringBuilder`;
  #L08be36.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08be3c.  v3:= "Unexpected default trust managers:" @kind object;
  #L08be40.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08be46.  v2:= temp @kind object;
  #L08be48.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L08be4e.  v0:= temp @kind object;
  #L08be50.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08be56.  v0:= temp @kind object;
  #L08be58.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08be5e.  v0:= temp @kind object;
  #L08be60.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08be66.  throw v1;
  #Try_end0.  
  #L08be68.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L08be6a.  v0:= new `java.lang.AssertionError`;
  #L08be6e.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08be74.  throw v0;
  #L08be76.  v1:= 0I;
  #Try_start1.  
  #L08be78.  v0:= v0[v1] @kind object;
  #L08be7c.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #Try_end1.  
  #L08be80.  return v0 @kind object;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L08be68;
  catch `java.security.GeneralSecurityException` @[Try_start1..Try_end1] goto L08be68;
}
procedure `int` `a`(`a.u` v1 @kind this) @signature `La/u;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08beac.  v0:= v1.`a.u.y` @type ^`int`;
  #L08beb0.  return v0;
}
procedure `a.e` `a`(`a.u` v2 @kind this, `a.x` v3 @kind object) @signature `La/u;.a:(La/x;)La/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08bec4.  v0:= new `a.w`;
  #L08bec8.  v1:= 0I;
  #L08beca.  call `<init>`(v0, v2, v3, v1) @signature `La/w;.<init>:(La/u;La/x;Z)V` @kind direct;
  #L08bed0.  return v0 @kind object;
}
procedure `int` `b`(`a.u` v1 @kind this) @signature `La/u;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bee4.  v0:= v1.`a.u.z` @type ^`int`;
  #L08bee8.  return v0;
}
procedure `int` `c`(`a.u` v1 @kind this) @signature `La/u;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08befc.  v0:= v1.`a.u.A` @type ^`int`;
  #L08bf00.  return v0;
}
procedure `java.net.Proxy` `d`(`a.u` v1 @kind this) @signature `La/u;.d:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bf14.  v0:= v1.`a.u.d` @type ^`java.net.Proxy` @kind object;
  #L08bf18.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `e`(`a.u` v1 @kind this) @signature `La/u;.e:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bf2c.  v0:= v1.`a.u.i` @type ^`java.net.ProxySelector` @kind object;
  #L08bf30.  return v0 @kind object;
}
procedure `a.m` `f`(`a.u` v1 @kind this) @signature `La/u;.f:()La/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bf44.  v0:= v1.`a.u.j` @type ^`a.m` @kind object;
  #L08bf48.  return v0 @kind object;
}
procedure `a.a.a.e` `g`(`a.u` v1 @kind this) @signature `La/u;.g:()La/a/a/e;` @AccessFlag  {
    temp;
    v0;

  #L08bf5c.  v0:= v1.`a.u.k` @type ^`a.c` @kind object;
  #L08bf60.  if v0 == 0 then goto L08bf6e;
  #L08bf64.  v0:= v1.`a.u.k` @type ^`a.c` @kind object;
  #L08bf68.  v0:= v0.`a.c.a` @type ^`a.a.a.e` @kind object;
  #L08bf6c.  return v0 @kind object;
  #L08bf6e.  v0:= v1.`a.u.l` @type ^`a.a.a.e` @kind object;
  #L08bf72.  goto L08bf6c;
}
procedure `a.o` `h`(`a.u` v1 @kind this) @signature `La/u;.h:()La/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bf84.  v0:= v1.`a.u.u` @type ^`a.o` @kind object;
  #L08bf88.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `i`(`a.u` v1 @kind this) @signature `La/u;.i:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bf9c.  v0:= v1.`a.u.m` @type ^`javax.net.SocketFactory` @kind object;
  #L08bfa0.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `j`(`a.u` v1 @kind this) @signature `La/u;.j:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bfb4.  v0:= v1.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08bfb8.  return v0 @kind object;
}
procedure `javax.net.ssl.HostnameVerifier` `k`(`a.u` v1 @kind this) @signature `La/u;.k:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bfcc.  v0:= v1.`a.u.p` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L08bfd0.  return v0 @kind object;
}
procedure `a.g` `l`(`a.u` v1 @kind this) @signature `La/u;.l:()La/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bfe4.  v0:= v1.`a.u.q` @type ^`a.g` @kind object;
  #L08bfe8.  return v0 @kind object;
}
procedure `a.b` `m`(`a.u` v1 @kind this) @signature `La/u;.m:()La/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08bffc.  v0:= v1.`a.u.s` @type ^`a.b` @kind object;
  #L08c000.  return v0 @kind object;
}
procedure `a.b` `n`(`a.u` v1 @kind this) @signature `La/u;.n:()La/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c014.  v0:= v1.`a.u.r` @type ^`a.b` @kind object;
  #L08c018.  return v0 @kind object;
}
procedure `a.j` `o`(`a.u` v1 @kind this) @signature `La/u;.o:()La/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c02c.  v0:= v1.`a.u.t` @type ^`a.j` @kind object;
  #L08c030.  return v0 @kind object;
}
procedure `boolean` `p`(`a.u` v1 @kind this) @signature `La/u;.p:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c044.  v0:= v1.`a.u.v` @type ^`boolean` @kind boolean;
  #L08c048.  return v0;
}
procedure `boolean` `q`(`a.u` v1 @kind this) @signature `La/u;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c05c.  v0:= v1.`a.u.w` @type ^`boolean` @kind boolean;
  #L08c060.  return v0;
}
procedure `boolean` `r`(`a.u` v1 @kind this) @signature `La/u;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c074.  v0:= v1.`a.u.x` @type ^`boolean` @kind boolean;
  #L08c078.  return v0;
}
procedure `a.n` `s`(`a.u` v1 @kind this) @signature `La/u;.s:()La/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c08c.  v0:= v1.`a.u.c` @type ^`a.n` @kind object;
  #L08c090.  return v0 @kind object;
}
procedure `java.util.List` `t`(`a.u` v1 @kind this) @signature `La/u;.t:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c0a4.  v0:= v1.`a.u.e` @type ^`java.util.List` @kind object;
  #L08c0a8.  return v0 @kind object;
}
procedure `java.util.List` `u`(`a.u` v1 @kind this) @signature `La/u;.u:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c0bc.  v0:= v1.`a.u.f` @type ^`java.util.List` @kind object;
  #L08c0c0.  return v0 @kind object;
}
procedure `java.util.List` `v`(`a.u` v1 @kind this) @signature `La/u;.v:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c0d4.  v0:= v1.`a.u.g` @type ^`java.util.List` @kind object;
  #L08c0d8.  return v0 @kind object;
}
procedure `java.util.List` `w`(`a.u` v1 @kind this) @signature `La/u;.w:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08c0ec.  v0:= v1.`a.u.h` @type ^`java.util.List` @kind object;
  #L08c0f0.  return v0 @kind object;
}

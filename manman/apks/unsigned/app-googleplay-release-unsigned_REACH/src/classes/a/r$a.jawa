record `a.r$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.r$a.a` @AccessFlag ;
  `java.lang.String` `a.r$a.b` @AccessFlag ;
  `java.lang.String` `a.r$a.c` @AccessFlag ;
  `java.lang.String` `a.r$a.d` @AccessFlag ;
  `int` `a.r$a.e` @AccessFlag ;
  `java.util.List` `a.r$a.f` @AccessFlag FINAL;
  `java.util.List` `a.r$a.g` @AccessFlag ;
  `java.lang.String` `a.r$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`a.r$a` v2 @kind this) @signature `La/r$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L089b4c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L089b52.  v0:= "" @kind object;
  #L089b56.  v2.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L089b5a.  v0:= "" @kind object;
  #L089b5e.  v2.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L089b62.  v0:= -1I;
  #L089b64.  v2.`a.r$a.e` @type ^`int` := v0;
  #L089b68.  v0:= new `java.util.ArrayList`;
  #L089b6c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L089b72.  v2.`a.r$a.f` @type ^`java.util.List` := v0 @kind object;
  #L089b76.  v0:= v2.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089b7a.  v1:= "" @kind object;
  #L089b7e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089b84.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v8 @kind object) @signature `La/r$a;.a:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L089b98.  v7:= 16I;
  #L089b9c.  v6:= 58I;
  #L089ba0.  v1:= 0I;
  #L089ba2.  v0:= -1I;
  #L089ba4.  v2:= v1;
  #L089ba6.  v3:= v0;
  #L089ba8.  v0:= v1;
  #L089baa.  v4:= length @variable v8;
  #L089bac.  if v0 >= v4 then goto L089be4;
  #L089bb0.  v5:= v0;
  #L089bb2.  if v5 >= v7 then goto L089bd2;
  #L089bb6.  v4:= v8[v5] @kind byte;
  #L089bba.  if v4 != 0 then goto L089bd2;
  #L089bbe.  v4:= v5 + 1;
  #L089bc2.  v4:= v8[v4] @kind byte;
  #L089bc6.  if v4 != 0 then goto L089bd2;
  #L089bca.  v4:= v5 + 2;
  #L089bce.  v5:= v4;
  #L089bd0.  goto L089bb2;
  #L089bd2.  v4:= v5 - v0 @kind int;
  #L089bd6.  if v4 <= v2 then goto L089bde;
  #L089bda.  v2:= v4;
  #L089bdc.  v3:= v0;
  #L089bde.  v0:= v5 + 2;
  #L089be2.  goto L089baa;
  #L089be4.  v0:= new `b.c`;
  #L089be8.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L089bee.  v4:= length @variable v8;
  #L089bf0.  if v1 >= v4 then goto L089c3e;
  #L089bf4.  if v1 != v3 then goto L089c0c;
  #L089bf8.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L089bfe.  v1:= v1 + v2 @kind int;
  #L089c00.  if v1 != v7 then goto L089bee;
  #L089c04.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L089c0a.  goto L089bee;
  #L089c0c.  if v1 <= 0 then goto L089c16;
  #L089c10.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L089c16.  v4:= v8[v1] @kind byte;
  #L089c1a.  v4:= v4 ^& 255;
  #L089c1e.  v4:= v4 ^< 8;
  #L089c22.  v5:= v1 + 1;
  #L089c26.  v5:= v8[v5] @kind byte;
  #L089c2a.  v5:= v5 ^& 255;
  #L089c2e.  v4:= v4 ^| v5 @kind int;
  #L089c30.  v4:= (`long`) v4 @kind i2l;
  #L089c32.  call temp:= `i`(v0, v4) @signature `Lb/c;.i:(J)Lb/c;` @kind virtual;
  #L089c38.  v1:= v1 + 2;
  #L089c3c.  goto L089bee;
  #L089c3e.  call temp:= `o`(v0) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L089c44.  v0:= temp @kind object;
  #L089c46.  return v0 @kind object;
}
procedure `void` `a`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `La/r$a;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L089c58.  v5:= 1I;
  #L089c5a.  if v8 != v9 then goto L089c60;
  #L089c5e.  return @kind void;
  #L089c60.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089c66.  v0:= temp;
  #L089c68.  v1:= 47I;
  #L089c6c.  if v0 == v1 then goto L089c78;
  #L089c70.  v1:= 92I;
  #L089c74.  if v0 != v1 then goto L089cc2;
  #L089c78.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089c7c.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L089c82.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089c86.  v1:= "" @kind object;
  #L089c8a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089c90.  v8:= v8 + 1;
  #L089c94.  v2:= v8;
  #L089c96.  if v2 >= v9 then goto L089c5e;
  #L089c9a.  v0:= "/\\" @kind object;
  #L089c9e.  call temp:= `a`(v7, v2, v9, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L089ca4.  v3:= temp;
  #L089ca6.  if v3 >= v9 then goto L089ce2;
  #L089caa.  v4:= v5;
  #L089cac.  v0:= v6 @kind object;
  #L089cae.  v1:= v7 @kind object;
  #L089cb0.  call `a`(v0, v1, v2, v3, v4, v5) @signature `La/r$a;.a:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L089cb6.  if v4 == 0 then goto L089cbe;
  #L089cba.  v3:= v3 + 1;
  #L089cbe.  v2:= v3;
  #L089cc0.  goto L089c96;
  #L089cc2.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089cc6.  v1:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089cca.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089cd0.  v1:= temp;
  #L089cd2.  v1:= v1 + -1;
  #L089cd6.  v2:= "" @kind object;
  #L089cda.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L089ce0.  goto L089c94;
  #L089ce2.  v4:= 0I;
  #L089ce4.  goto L089cac;
}
procedure `void` `a`(`a.r$a` v8 @kind this, `java.lang.String` v9 @kind object, `int` v10 , `int` v11 , `boolean` v12 , `boolean` v13 ) @signature `La/r$a;.a:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L089cf8.  v5:= 0I;
  #L089cfa.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L089cfe.  v7:= 1I;
  #L089d00.  v0:= v9 @kind object;
  #L089d02.  v1:= v10;
  #L089d04.  v2:= v11;
  #L089d06.  v4:= v13;
  #L089d08.  v6:= v5;
  #L089d0a.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L089d10.  v1:= temp @kind object;
  #L089d12.  call temp:= `f`(v8, v1) @signature `La/r$a;.f:(Ljava/lang/String;)Z` @kind direct;
  #L089d18.  v0:= temp;
  #L089d1a.  if v0 == 0 then goto L089d20;
  #L089d1e.  return @kind void;
  #L089d20.  call temp:= `g`(v8, v1) @signature `La/r$a;.g:(Ljava/lang/String;)Z` @kind direct;
  #L089d26.  v0:= temp;
  #L089d28.  if v0 == 0 then goto L089d34;
  #L089d2c.  call `d`(v8) @signature `La/r$a;.d:()V` @kind direct;
  #L089d32.  goto L089d1e;
  #L089d34.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089d38.  v2:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089d3c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089d42.  v2:= temp;
  #L089d44.  v2:= v2 + -1;
  #L089d48.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089d4e.  v0:= temp @kind object;
  #L089d50.  v0:= (`java.lang.String`) v0 @kind object;
  #L089d54.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L089d5a.  v0:= temp;
  #L089d5c.  if v0 == 0 then goto L089d8e;
  #L089d60.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089d64.  v2:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089d68.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089d6e.  v2:= temp;
  #L089d70.  v2:= v2 + -1;
  #L089d74.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L089d7a.  if v12 == 0 then goto L089d1e;
  #L089d7e.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089d82.  v1:= "" @kind object;
  #L089d86.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089d8c.  goto L089d1e;
  #L089d8e.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089d92.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L089d98.  goto L089d7a;
}
procedure `boolean` `a`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `La/r$a;.a:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L089dac.  v1:= 0I;
  #L089dae.  v0:= v8;
  #L089db0.  v4:= v11;
  #L089db2.  if v0 >= v9 then goto L089e40;
  #L089db6.  v2:= length @variable v10;
  #L089db8.  if v4 != v2 then goto L089dc0;
  #L089dbc.  v0:= v1;
  #L089dbe.  return v0;
  #L089dc0.  if v4 == v11 then goto L089ddc;
  #L089dc4.  call temp:= `charAt`(v7, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089dca.  v2:= temp;
  #L089dcc.  v3:= 46I;
  #L089dd0.  if v2 == v3 then goto L089dd8;
  #L089dd4.  v0:= v1;
  #L089dd6.  goto L089dbe;
  #L089dd8.  v0:= v0 + 1;
  #L089ddc.  v2:= v1;
  #L089dde.  v3:= v0;
  #L089de0.  if v3 >= v9 then goto L089dfc;
  #L089de4.  call temp:= `charAt`(v7, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089dea.  v5:= temp;
  #L089dec.  v6:= 48I;
  #L089df0.  if v5 < v6 then goto L089dfc;
  #L089df4.  v6:= 57I;
  #L089df8.  if v5 <= v6 then goto L089e08;
  #L089dfc.  v0:= v3 - v0 @kind int;
  #L089e00.  if v0 != 0 then goto L089e30;
  #L089e04.  v0:= v1;
  #L089e06.  goto L089dbe;
  #L089e08.  if v2 != 0 then goto L089e14;
  #L089e0c.  if v0 == v3 then goto L089e14;
  #L089e10.  v0:= v1;
  #L089e12.  goto L089dbe;
  #L089e14.  v2:= v2 * 10;
  #L089e18.  v2:= v2 + v5 @kind int;
  #L089e1a.  v2:= v2 + -48;
  #L089e1e.  v5:= 255I;
  #L089e22.  if v2 <= v5 then goto L089e2a;
  #L089e26.  v0:= v1;
  #L089e28.  goto L089dbe;
  #L089e2a.  v3:= v3 + 1;
  #L089e2e.  goto L089de0;
  #L089e30.  v0:= v4 + 1;
  #L089e34.  v2:= (`byte`) v2 @kind i2b;
  #L089e36.  v10[v4]:= v2 @kind byte;
  #L089e3a.  v4:= v0;
  #L089e3c.  v0:= v3;
  #L089e3e.  goto L089db2;
  #L089e40.  v0:= v11 + 4;
  #L089e44.  if v4 == v0 then goto L089e4c;
  #L089e48.  v0:= v1;
  #L089e4a.  goto L089dbe;
  #L089e4c.  v0:= 1I;
  #L089e4e.  goto L089dbe;
}
procedure `int` `b`(`java.lang.String` v8 @kind object, `int` v9 , `int` v10 ) @signature `La/r$a;.b:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L089e60.  v7:= 122I;
  #L089e64.  v6:= 97I;
  #L089e68.  v5:= 90I;
  #L089e6c.  v4:= 65I;
  #L089e70.  v0:= -1I;
  #L089e72.  v1:= v10 - v9 @kind int;
  #L089e76.  v2:= 2I;
  #L089e78.  if v1 >= v2 then goto L089e7e;
  #L089e7c.  return v0;
  #L089e7e.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089e84.  v1:= temp;
  #L089e86.  if v1 < v6 then goto L089e8e;
  #L089e8a.  if v1 <= v7 then goto L089e96;
  #L089e8e.  if v1 < v4 then goto L089e7c;
  #L089e92.  if v1 > v5 then goto L089e7c;
  #L089e96.  v1:= v9 + 1;
  #L089e9a.  if v1 >= v10 then goto L089e7c;
  #L089e9e.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089ea4.  v2:= temp;
  #L089ea6.  if v2 < v6 then goto L089eae;
  #L089eaa.  if v2 <= v7 then goto L089ede;
  #L089eae.  if v2 < v4 then goto L089eb6;
  #L089eb2.  if v2 <= v5 then goto L089ede;
  #L089eb6.  v3:= 48I;
  #L089eba.  if v2 < v3 then goto L089ec6;
  #L089ebe.  v3:= 57I;
  #L089ec2.  if v2 <= v3 then goto L089ede;
  #L089ec6.  v3:= 43I;
  #L089eca.  if v2 == v3 then goto L089ede;
  #L089ece.  v3:= 45I;
  #L089ed2.  if v2 == v3 then goto L089ede;
  #L089ed6.  v3:= 46I;
  #L089eda.  if v2 != v3 then goto L089ee4;
  #L089ede.  v1:= v1 + 1;
  #L089ee2.  goto L089e9a;
  #L089ee4.  v3:= 58I;
  #L089ee8.  if v2 != v3 then goto L089e7c;
  #L089eec.  v0:= v1;
  #L089eee.  goto L089e7c;
}
procedure `int` `c`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.c:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L089f00.  v0:= 0I;
  #L089f02.  if v4 >= v5 then goto L089f28;
  #L089f06.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089f0c.  v1:= temp;
  #L089f0e.  v2:= 92I;
  #L089f12.  if v1 == v2 then goto L089f1e;
  #L089f16.  v2:= 47I;
  #L089f1a.  if v1 != v2 then goto L089f28;
  #L089f1e.  v0:= v0 + 1;
  #L089f22.  v4:= v4 + 1;
  #L089f26.  goto L089f02;
  #L089f28.  return v0;
}
procedure `int` `d`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.d:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L089f3c.  v0:= v4;
  #L089f3e.  if v0 >= v5 then goto L089f70;
  #L089f42.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089f48.  v1:= temp;
  #L089f4a.  goto L089f74;
  #L089f50.  v0:= v0 + 1;
  #L089f54.  goto L089f3e;
  #L089f56.  v0:= v0 + 1;
  #L089f5a.  if v0 >= v5 then goto L089f50;
  #L089f5e.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L089f64.  v1:= temp;
  #L089f66.  v2:= 93I;
  #L089f6a.  if v1 != v2 then goto L089f56;
  #L089f6e.  goto L089f50;
  #L089f70.  v0:= v5;
  #L089f72.  return v0;
  #L089f74.  switch v1
                  | 58 => goto L089f72
                  | 91 => goto L089f56
                  | else => goto L089f50;
}
procedure `void` `d`(`a.r$a` v3 @kind this) @signature `La/r$a;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L089f98.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089f9c.  v1:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089fa0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089fa6.  v1:= temp;
  #L089fa8.  v1:= v1 + -1;
  #L089fac.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L089fb2.  v0:= temp @kind object;
  #L089fb4.  v0:= (`java.lang.String`) v0 @kind object;
  #L089fb8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L089fbe.  v0:= temp;
  #L089fc0.  if v0 == 0 then goto L089ff4;
  #L089fc4.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089fc8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L089fce.  v0:= temp;
  #L089fd0.  if v0 != 0 then goto L089ff4;
  #L089fd4.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089fd8.  v1:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089fdc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089fe2.  v1:= temp;
  #L089fe4.  v1:= v1 + -1;
  #L089fe8.  v2:= "" @kind object;
  #L089fec.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L089ff2.  return @kind void;
  #L089ff4.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L089ff8.  v1:= "" @kind object;
  #L089ffc.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08a002.  goto L089ff2;
}
procedure `java.lang.String` `e`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08a014.  v2:= 0I;
  #L08a016.  call temp:= `a`(v3, v4, v5, v2) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L08a01c.  v0:= temp @kind object;
  #L08a01e.  v1:= ":" @kind object;
  #L08a022.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L08a028.  v1:= temp;
  #L08a02a.  if v1 == 0 then goto L08a0a6;
  #L08a02e.  v1:= "[" @kind object;
  #L08a032.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08a038.  v1:= temp;
  #L08a03a.  if v1 == 0 then goto L08a06c;
  #L08a03e.  v1:= "]" @kind object;
  #L08a042.  call temp:= `endsWith`(v0, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08a048.  v1:= temp;
  #L08a04a.  if v1 == 0 then goto L08a06c;
  #L08a04e.  v1:= 1I;
  #L08a050.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a056.  v2:= temp;
  #L08a058.  v2:= v2 + -1;
  #L08a05c.  call temp:= `f`(v0, v1, v2) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L08a062.  v0:= temp @kind object;
  #L08a064.  if v0 != 0 then goto L08a07e;
  #L08a068.  v0:= 0I;
  #L08a06a.  return v0 @kind object;
  #L08a06c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a072.  v1:= temp;
  #L08a074.  call temp:= `f`(v0, v2, v1) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L08a07a.  v0:= temp @kind object;
  #L08a07c.  goto L08a064;
  #L08a07e.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L08a084.  v0:= temp @kind object;
  #L08a086.  v1:= length @variable v0;
  #L08a088.  v2:= 16I;
  #L08a08c.  if v1 != v2 then goto L08a09a;
  #L08a090.  call temp:= `a`(v0) @signature `La/r$a;.a:([B)Ljava/lang/String;` @kind static;
  #L08a096.  v0:= temp @kind object;
  #L08a098.  goto L08a06a;
  #L08a09a.  v0:= new `java.lang.AssertionError`;
  #L08a09e.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08a0a4.  throw v0;
  #L08a0a6.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L08a0ac.  v0:= temp @kind object;
  #L08a0ae.  goto L08a06a;
}
procedure `java.net.InetAddress` `f`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L08a0c0.  v11:= 1I;
  #L08a0c2.  v7:= -1I;
  #L08a0c4.  v3:= 0I;
  #L08a0c6.  v5:= 0I;
  #L08a0c8.  v0:= 16I;
  #L08a0cc.  v8:= new `byte`[v0];
  #L08a0d0.  v0:= v13;
  #L08a0d2.  v4:= v7;
  #L08a0d4.  v1:= v7;
  #L08a0d6.  v2:= v5;
  #L08a0d8.  if v0 >= v14 then goto L08a116;
  #L08a0dc.  v6:= length @variable v8;
  #L08a0de.  if v2 != v6 then goto L08a0e6;
  #L08a0e2.  v0:= v3 @kind object;
  #L08a0e4.  return v0 @kind object;
  #L08a0e6.  v6:= v0 + 2;
  #L08a0ea.  if v6 > v14 then goto L08a124;
  #L08a0ee.  v6:= "::" @kind object;
  #L08a0f2.  v9:= 2I;
  #L08a0f4.  call temp:= `regionMatches`(v12, v0, v6, v5, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L08a0fa.  v6:= temp;
  #L08a0fc.  if v6 == 0 then goto L08a124;
  #L08a100.  if v1 == v7 then goto L08a108;
  #L08a104.  v0:= v3 @kind object;
  #L08a106.  goto L08a0e4;
  #L08a108.  v0:= v0 + 2;
  #L08a10c.  v1:= v2 + 2;
  #L08a110.  if v0 != v14 then goto L08a202;
  #L08a114.  v2:= v1;
  #L08a116.  v0:= length @variable v8;
  #L08a118.  if v2 == v0 then goto L08a1e8;
  #L08a11c.  if v1 != v7 then goto L08a1ca;
  #L08a120.  v0:= v3 @kind object;
  #L08a122.  goto L08a0e4;
  #L08a124.  if v2 == 0 then goto L08a13c;
  #L08a128.  v6:= ":" @kind object;
  #L08a12c.  call temp:= `regionMatches`(v12, v0, v6, v5, v11) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L08a132.  v6:= temp;
  #L08a134.  if v6 == 0 then goto L08a16a;
  #L08a138.  v0:= v0 + 1;
  #L08a13c.  v4:= v5;
  #L08a13e.  v6:= v0;
  #L08a140.  if v6 >= v14 then goto L08a158;
  #L08a144.  call temp:= `charAt`(v12, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a14a.  v9:= temp;
  #L08a14c.  call temp:= `a`(v9) @signature `La/r;.a:(C)I` @kind static;
  #L08a152.  v9:= temp;
  #L08a154.  if v9 != v7 then goto L08a198;
  #L08a158.  v9:= v6 - v0 @kind int;
  #L08a15c.  if v9 == 0 then goto L08a166;
  #L08a160.  v10:= 4I;
  #L08a162.  if v9 <= v10 then goto L08a1a4;
  #L08a166.  v0:= v3 @kind object;
  #L08a168.  goto L08a0e4;
  #L08a16a.  v6:= "." @kind object;
  #L08a16e.  call temp:= `regionMatches`(v12, v0, v6, v5, v11) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L08a174.  v0:= temp;
  #L08a176.  if v0 == 0 then goto L08a194;
  #L08a17a.  v0:= v2 + -2;
  #L08a17e.  call temp:= `a`(v12, v4, v14, v8, v0) @signature `La/r$a;.a:(Ljava/lang/String;II[BI)Z` @kind static;
  #L08a184.  v0:= temp;
  #L08a186.  if v0 != 0 then goto L08a18e;
  #L08a18a.  v0:= v3 @kind object;
  #L08a18c.  goto L08a0e4;
  #L08a18e.  v2:= v2 + 2;
  #L08a192.  goto L08a116;
  #L08a194.  v0:= v3 @kind object;
  #L08a196.  goto L08a0e4;
  #L08a198.  v4:= v4 ^< 4;
  #L08a19c.  v4:= v4 + v9 @kind int;
  #L08a19e.  v6:= v6 + 1;
  #L08a1a2.  goto L08a140;
  #L08a1a4.  v9:= v2 + 1;
  #L08a1a8.  v10:= v4 ^>> 8;
  #L08a1ac.  v10:= v10 ^& 255;
  #L08a1b0.  v10:= (`byte`) v10 @kind i2b;
  #L08a1b2.  v8[v2]:= v10 @kind byte;
  #L08a1b6.  v2:= v9 + 1;
  #L08a1ba.  v4:= v4 ^& 255;
  #L08a1be.  v4:= (`byte`) v4 @kind i2b;
  #L08a1c0.  v8[v9]:= v4 @kind byte;
  #L08a1c4.  v4:= v0;
  #L08a1c6.  v0:= v6;
  #L08a1c8.  goto L08a0d8;
  #L08a1ca.  v0:= length @variable v8;
  #L08a1cc.  v3:= v2 - v1 @kind int;
  #L08a1d0.  v0:= v0 - v3 @kind int;
  #L08a1d2.  v3:= v2 - v1 @kind int;
  #L08a1d6.  call `arraycopy`(v8, v1, v8, v0, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L08a1dc.  v0:= length @variable v8;
  #L08a1de.  v0:= v0 - v2 @kind int;
  #L08a1e0.  v0:= v0 + v1 @kind int;
  #L08a1e2.  call `fill`(v8, v1, v0, v5) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #Try_start0.  
  #L08a1e8.  call temp:= `getByAddress`(v8) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #Try_end0.  
  #L08a1ee.  v0:= temp @kind object;
  #L08a1f0.  goto L08a0e4;
  #L08a1f4.  v0:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L08a1f6.  v0:= new `java.lang.AssertionError`;
  #L08a1fa.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08a200.  throw v0;
  #L08a202.  v2:= v1;
  #L08a204.  goto L08a13c;
  catch `java.net.UnknownHostException` @[Try_start0..Try_end0] goto L08a1f4;
}
procedure `boolean` `f`(`a.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r$a;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L08a228.  v0:= "." @kind object;
  #L08a22c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a232.  v0:= temp;
  #L08a234.  if v0 != 0 then goto L08a248;
  #L08a238.  v0:= "%2e" @kind object;
  #L08a23c.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08a242.  v0:= temp;
  #L08a244.  if v0 == 0 then goto L08a24c;
  #L08a248.  v0:= 1I;
  #L08a24a.  return v0;
  #L08a24c.  v0:= 0I;
  #L08a24e.  goto L08a24a;
}
procedure `int` `g`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 ) @signature `La/r$a;.g:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L08a260.  v8:= -1I;
  #Try_start0.  
  #L08a262.  v3:= "" @kind object;
  #L08a266.  v4:= 0I;
  #L08a268.  v5:= 0I;
  #L08a26a.  v6:= 0I;
  #L08a26c.  v7:= 1I;
  #L08a26e.  v0:= v9 @kind object;
  #L08a270.  v1:= v10;
  #L08a272.  v2:= v11;
  #L08a274.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a27a.  v0:= temp @kind object;
  #L08a27c.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L08a282.  v0:= temp;
  #L08a284.  if v0 <= 0 then goto L08a294;
  #L08a288.  v1:= 65535I;
  #L08a28e.  if v0 > v1 then goto L08a294;
  #L08a292.  return v0;
  #L08a294.  v0:= v8;
  #L08a296.  goto L08a292;
  #L08a298.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L08a29a.  v0:= v8;
  #L08a29c.  goto L08a292;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L08a298;
}
procedure `boolean` `g`(`a.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r$a;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L08a2c0.  v0:= ".." @kind object;
  #L08a2c4.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a2ca.  v0:= temp;
  #L08a2cc.  if v0 != 0 then goto L08a300;
  #L08a2d0.  v0:= "%2e." @kind object;
  #L08a2d4.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08a2da.  v0:= temp;
  #L08a2dc.  if v0 != 0 then goto L08a300;
  #L08a2e0.  v0:= ".%2e" @kind object;
  #L08a2e4.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08a2ea.  v0:= temp;
  #L08a2ec.  if v0 != 0 then goto L08a300;
  #L08a2f0.  v0:= "%2e%2e" @kind object;
  #L08a2f4.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08a2fa.  v0:= temp;
  #L08a2fc.  if v0 == 0 then goto L08a304;
  #L08a300.  v0:= 1I;
  #L08a302.  return v0;
  #L08a304.  v0:= 0I;
  #L08a306.  goto L08a302;
}
procedure `int` `a`(`a.r$a` v2 @kind this) @signature `La/r$a;.a:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L08a318.  v0:= v2.`a.r$a.e` @type ^`int`;
  #L08a31c.  v1:= -1I;
  #L08a31e.  if v0 == v1 then goto L08a328;
  #L08a322.  v0:= v2.`a.r$a.e` @type ^`int`;
  #L08a326.  return v0;
  #L08a328.  v0:= v2.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08a32c.  call temp:= `a`(v0) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L08a332.  v0:= temp;
  #L08a334.  goto L08a326;
}
procedure `a.r$a$a` `a`(`a.r$a` v13 @kind this, `a.r` v14 @kind object, `java.lang.String` v15 @kind object) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L08a348.  v0:= 0I;
  #L08a34a.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a350.  v1:= temp;
  #L08a352.  call temp:= `a`(v15, v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;II)I` @kind static;
  #L08a358.  v2:= temp;
  #L08a35a.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a360.  v0:= temp;
  #L08a362.  call temp:= `b`(v15, v2, v0) @signature `La/a/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L08a368.  v11:= temp;
  #L08a36a.  call temp:= `b`(v15, v2, v11) @signature `La/r$a;.b:(Ljava/lang/String;II)I` @kind static;
  #L08a370.  v0:= temp;
  #L08a372.  v1:= -1I;
  #L08a374.  if v0 == v1 then goto L08a43a;
  #L08a378.  v1:= 1I;
  #L08a37a.  v3:= "https:" @kind object;
  #L08a37e.  v4:= 0I;
  #L08a380.  v5:= 6I;
  #L08a382.  v0:= v15 @kind object;
  #L08a384.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08a38a.  v0:= temp;
  #L08a38c.  if v0 == 0 then goto L08a404;
  #L08a390.  v0:= "https" @kind object;
  #L08a394.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08a398.  v0:= "https:" @kind object;
  #L08a39c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a3a2.  v0:= temp;
  #L08a3a4.  v2:= v2 + v0 @kind int;
  #L08a3a6.  v1:= 0I;
  #L08a3a8.  v0:= 0I;
  #L08a3aa.  call temp:= `c`(v15, v2, v11) @signature `La/r$a;.c:(Ljava/lang/String;II)I` @kind static;
  #L08a3b0.  v3:= temp;
  #L08a3b2.  v4:= 2I;
  #L08a3b4.  if v3 >= v4 then goto L08a3d0;
  #L08a3b8.  if v14 == 0 then goto L08a3d0;
  #L08a3bc.  v4:= v14.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a3c0.  v5:= v13.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08a3c4.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08a3ca.  v4:= temp;
  #L08a3cc.  if v4 != 0 then goto L08a634;
  #L08a3d0.  v2:= v2 + v3 @kind int;
  #L08a3d2.  v8:= v0;
  #L08a3d4.  v9:= v1;
  #L08a3d6.  v1:= v2;
  #L08a3d8.  v0:= "@/\\?#" @kind object;
  #L08a3dc.  call temp:= `a`(v15, v1, v11, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08a3e2.  v10:= temp;
  #L08a3e4.  if v10 == v11 then goto L08a44e;
  #L08a3e8.  call temp:= `charAt`(v15, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a3ee.  v0:= temp;
  #L08a3f0.  goto L08a6a0;
  #L08a3f6.  v0:= v8;
  #L08a3f8.  v2:= v1;
  #L08a3fa.  v1:= v9;
  #L08a3fc.  v8:= v0;
  #L08a3fe.  v9:= v1;
  #L08a400.  v1:= v2;
  #L08a402.  goto L08a3d8;
  #L08a404.  v1:= 1I;
  #L08a406.  v3:= "http:" @kind object;
  #L08a40a.  v4:= 0I;
  #L08a40c.  v5:= 5I;
  #L08a40e.  v0:= v15 @kind object;
  #L08a410.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08a416.  v0:= temp;
  #L08a418.  if v0 == 0 then goto L08a434;
  #L08a41c.  v0:= "http" @kind object;
  #L08a420.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08a424.  v0:= "http:" @kind object;
  #L08a428.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a42e.  v0:= temp;
  #L08a430.  v2:= v2 + v0 @kind int;
  #L08a432.  goto L08a3a6;
  #L08a434.  v0:= `@@a.r$a$a.c` @type ^`a.r$a$a` @kind object;
  #L08a438.  return v0 @kind object;
  #L08a43a.  if v14 == 0 then goto L08a448;
  #L08a43e.  v0:= v14.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08a442.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08a446.  goto L08a3a6;
  #L08a448.  v0:= `@@a.r$a$a.b` @type ^`a.r$a$a` @kind object;
  #L08a44c.  goto L08a438;
  #L08a44e.  v0:= -1I;
  #L08a450.  goto L08a3f0;
  #L08a452.  if v8 != 0 then goto L08a4e4;
  #L08a456.  v0:= 58I;
  #L08a45a.  call temp:= `a`(v15, v1, v10, v0) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08a460.  v2:= temp;
  #L08a462.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08a466.  v4:= 1I;
  #L08a468.  v5:= 0I;
  #L08a46a.  v6:= 0I;
  #L08a46c.  v7:= 1I;
  #L08a46e.  v0:= v15 @kind object;
  #L08a470.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a476.  v0:= temp @kind object;
  #L08a478.  if v9 == 0 then goto L08a4ae;
  #L08a47c.  v1:= new `java.lang.StringBuilder`;
  #L08a480.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a486.  v3:= v13.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L08a48a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a490.  v1:= temp @kind object;
  #L08a492.  v3:= "%40" @kind object;
  #L08a496.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a49c.  v1:= temp @kind object;
  #L08a49e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a4a4.  v0:= temp @kind object;
  #L08a4a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a4ac.  v0:= temp @kind object;
  #L08a4ae.  v13.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08a4b2.  if v2 == v10 then goto L08a4d8;
  #L08a4b6.  v8:= 1I;
  #L08a4b8.  v1:= v2 + 1;
  #L08a4bc.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08a4c0.  v4:= 1I;
  #L08a4c2.  v5:= 0I;
  #L08a4c4.  v6:= 0I;
  #L08a4c6.  v7:= 1I;
  #L08a4c8.  v0:= v15 @kind object;
  #L08a4ca.  v2:= v10;
  #L08a4cc.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a4d2.  v0:= temp @kind object;
  #L08a4d4.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08a4d8.  v9:= 1I;
  #L08a4da.  v2:= v10 + 1;
  #L08a4de.  v0:= v8;
  #L08a4e0.  v1:= v9;
  #L08a4e2.  goto L08a3fc;
  #L08a4e4.  v0:= new `java.lang.StringBuilder`;
  #L08a4e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a4ee.  v2:= v13.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08a4f2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a4f8.  v0:= temp @kind object;
  #L08a4fa.  v2:= "%40" @kind object;
  #L08a4fe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a504.  v12:= temp @kind object;
  #L08a506.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08a50a.  v4:= 1I;
  #L08a50c.  v5:= 0I;
  #L08a50e.  v6:= 0I;
  #L08a510.  v7:= 1I;
  #L08a512.  v0:= v15 @kind object;
  #L08a514.  v2:= v10;
  #L08a516.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a51c.  v0:= temp @kind object;
  #L08a51e.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a524.  v0:= temp @kind object;
  #L08a526.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a52c.  v0:= temp @kind object;
  #L08a52e.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08a532.  goto L08a4da;
  #L08a534.  call temp:= `d`(v15, v1, v10) @signature `La/r$a;.d:(Ljava/lang/String;II)I` @kind static;
  #L08a53a.  v0:= temp;
  #L08a53c.  v2:= v0 + 1;
  #L08a540.  if v2 >= v10 then goto L08a572;
  #L08a544.  call temp:= `e`(v15, v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L08a54a.  v1:= temp @kind object;
  #L08a54c.  v13.`a.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L08a550.  v0:= v0 + 1;
  #L08a554.  call temp:= `g`(v15, v0, v10) @signature `La/r$a;.g:(Ljava/lang/String;II)I` @kind static;
  #L08a55a.  v0:= temp;
  #L08a55c.  v13.`a.r$a.e` @type ^`int` := v0;
  #L08a560.  v0:= v13.`a.r$a.e` @type ^`int`;
  #L08a564.  v1:= -1I;
  #L08a566.  if v0 != v1 then goto L08a58e;
  #L08a56a.  v0:= `@@a.r$a$a.d` @type ^`a.r$a$a` @kind object;
  #L08a56e.  goto L08a438;
  #L08a572.  call temp:= `e`(v15, v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L08a578.  v0:= temp @kind object;
  #L08a57a.  v13.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08a57e.  v0:= v13.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08a582.  call temp:= `a`(v0) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L08a588.  v0:= temp;
  #L08a58a.  v13.`a.r$a.e` @type ^`int` := v0;
  #L08a58e.  v0:= v13.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08a592.  if v0 != 0 then goto L08a59e;
  #L08a596.  v0:= `@@a.r$a$a.e` @type ^`a.r$a$a` @kind object;
  #L08a59a.  goto L08a438;
  #L08a59e.  v2:= v10;
  #L08a5a0.  v0:= "?#" @kind object;
  #L08a5a4.  call temp:= `a`(v15, v2, v11, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08a5aa.  v0:= temp;
  #L08a5ac.  call `a`(v13, v15, v2, v0) @signature `La/r$a;.a:(Ljava/lang/String;II)V` @kind direct;
  #L08a5b2.  if v0 >= v11 then goto L08a69c;
  #L08a5b6.  call temp:= `charAt`(v15, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a5bc.  v1:= temp;
  #L08a5be.  v2:= 63I;
  #L08a5c2.  if v1 != v2 then goto L08a69c;
  #L08a5c6.  v1:= 35I;
  #L08a5ca.  call temp:= `a`(v15, v0, v11, v1) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08a5d0.  v2:= temp;
  #L08a5d2.  v1:= v0 + 1;
  #L08a5d6.  v3:= " \"'<>#" @kind object;
  #L08a5da.  v4:= 1I;
  #L08a5dc.  v5:= 0I;
  #L08a5de.  v6:= 1I;
  #L08a5e0.  v7:= 1I;
  #L08a5e2.  v0:= v15 @kind object;
  #L08a5e4.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a5ea.  v0:= temp @kind object;
  #L08a5ec.  call temp:= `b`(v0) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L08a5f2.  v0:= temp @kind object;
  #L08a5f4.  v13.`a.r$a.g` @type ^`java.util.List` := v0 @kind object;
  #L08a5f8.  if v2 >= v11 then goto L08a62c;
  #L08a5fc.  call temp:= `charAt`(v15, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a602.  v0:= temp;
  #L08a604.  v1:= 35I;
  #L08a608.  if v0 != v1 then goto L08a62c;
  #L08a60c.  v1:= v2 + 1;
  #L08a610.  v3:= "" @kind object;
  #L08a614.  v4:= 1I;
  #L08a616.  v5:= 0I;
  #L08a618.  v6:= 0I;
  #L08a61a.  v7:= 0I;
  #L08a61c.  v0:= v15 @kind object;
  #L08a61e.  v2:= v11;
  #L08a620.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a626.  v0:= temp @kind object;
  #L08a628.  v13.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L08a62c.  v0:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L08a630.  goto L08a438;
  #L08a634.  call temp:= `d`(v14) @signature `La/r;.d:()Ljava/lang/String;` @kind virtual;
  #L08a63a.  v0:= temp @kind object;
  #L08a63c.  v13.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08a640.  call temp:= `e`(v14) @signature `La/r;.e:()Ljava/lang/String;` @kind virtual;
  #L08a646.  v0:= temp @kind object;
  #L08a648.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08a64c.  v0:= v14.`a.r.b` @type ^`java.lang.String` @kind object;
  #L08a650.  v13.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08a654.  v0:= v14.`a.r.c` @type ^`int`;
  #L08a658.  v13.`a.r$a.e` @type ^`int` := v0;
  #L08a65c.  v0:= v13.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08a660.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L08a666.  v0:= v13.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08a66a.  call temp:= `i`(v14) @signature `La/r;.i:()Ljava/util/List;` @kind virtual;
  #L08a670.  v1:= temp @kind object;
  #L08a672.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L08a678.  if v2 == v11 then goto L08a68c;
  #L08a67c.  call temp:= `charAt`(v15, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08a682.  v0:= temp;
  #L08a684.  v1:= 35I;
  #L08a688.  if v0 != v1 then goto L08a5a0;
  #L08a68c.  call temp:= `j`(v14) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L08a692.  v0:= temp @kind object;
  #L08a694.  call temp:= `e`(v13, v0) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08a69a.  goto L08a5a0;
  #L08a69c.  v2:= v0;
  #L08a69e.  goto L08a5f8;
  #L08a6a0.  switch v0
                  | -1 => goto L08a534
                  | 35 => goto L08a534
                  | 47 => goto L08a534
                  | 63 => goto L08a534
                  | 64 => goto L08a452
                  | 92 => goto L08a534
                  | else => goto L08a3f6;
}
procedure `a.r$a` `a`(`a.r$a` v3 @kind this, `int` v4 ) @signature `La/r$a;.a:(I)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08a6e4.  if v4 <= 0 then goto L08a6f2;
  #L08a6e8.  v0:= 65535I;
  #L08a6ee.  if v4 <= v0 then goto L08a724;
  #L08a6f2.  v0:= new `java.lang.IllegalArgumentException`;
  #L08a6f6.  v1:= new `java.lang.StringBuilder`;
  #L08a6fa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a700.  v2:= "unexpected port: " @kind object;
  #L08a704.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a70a.  v1:= temp @kind object;
  #L08a70c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a712.  v1:= temp @kind object;
  #L08a714.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a71a.  v1:= temp @kind object;
  #L08a71c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a722.  throw v0;
  #L08a724.  v3.`a.r$a.e` @type ^`int` := v4;
  #L08a728.  return v3 @kind object;
}
procedure `a.r$a` `a`(`a.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r$a;.a:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08a73c.  if v4 != 0 then goto L08a750;
  #L08a740.  v0:= new `java.lang.NullPointerException`;
  #L08a744.  v1:= "scheme == null" @kind object;
  #L08a748.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a74e.  throw v0;
  #L08a750.  v0:= "http" @kind object;
  #L08a754.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08a75a.  v0:= temp;
  #L08a75c.  if v0 == 0 then goto L08a76a;
  #L08a760.  v0:= "http" @kind object;
  #L08a764.  v3.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08a768.  return v3 @kind object;
  #L08a76a.  v0:= "https" @kind object;
  #L08a76e.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08a774.  v0:= temp;
  #L08a776.  if v0 == 0 then goto L08a784;
  #L08a77a.  v0:= "https" @kind object;
  #L08a77e.  v3.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08a782.  goto L08a768;
  #L08a784.  v0:= new `java.lang.IllegalArgumentException`;
  #L08a788.  v1:= new `java.lang.StringBuilder`;
  #L08a78c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a792.  v2:= "unexpected scheme: " @kind object;
  #L08a796.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a79c.  v1:= temp @kind object;
  #L08a79e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a7a4.  v1:= temp @kind object;
  #L08a7a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a7ac.  v1:= temp @kind object;
  #L08a7ae.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a7b4.  throw v0;
}
procedure `a.r$a` `b`(`a.r$a` v11 @kind this) @signature `La/r$a;.b:()La/r$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L08a7c8.  v4:= 0I;
  #L08a7ca.  v2:= 1I;
  #L08a7cc.  v0:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08a7d0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08a7d6.  v7:= temp;
  #L08a7d8.  v6:= v4;
  #L08a7da.  if v6 >= v7 then goto L08a810;
  #L08a7de.  v0:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08a7e2.  call temp:= `get`(v0, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08a7e8.  v0:= temp @kind object;
  #L08a7ea.  v0:= (`java.lang.String`) v0 @kind object;
  #L08a7ee.  v8:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08a7f2.  v1:= "[]" @kind object;
  #L08a7f6.  v3:= v2;
  #L08a7f8.  v5:= v2;
  #L08a7fa.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a800.  v0:= temp @kind object;
  #L08a802.  call temp:= `set`(v8, v6, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L08a808.  v0:= v6 + 1;
  #L08a80c.  v6:= v0;
  #L08a80e.  goto L08a7da;
  #L08a810.  v0:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08a814.  if v0 == 0 then goto L08a862;
  #L08a818.  v0:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08a81c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08a822.  v1:= temp;
  #L08a824.  v0:= v4;
  #L08a826.  if v0 >= v1 then goto L08a862;
  #L08a82a.  v3:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08a82e.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08a834.  v5:= temp @kind object;
  #L08a836.  v5:= (`java.lang.String`) v5 @kind object;
  #L08a83a.  if v5 == 0 then goto L08a85c;
  #L08a83e.  v3:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08a842.  v6:= "\\^`{|}" @kind object;
  #L08a846.  v7:= v2;
  #L08a848.  v8:= v2;
  #L08a84a.  v9:= v2;
  #L08a84c.  v10:= v2;
  #L08a84e.  call temp:= `a`(v5, v6, v7, v8, v9, v10) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a854.  v5:= temp @kind object;
  #L08a856.  call temp:= `set`(v3, v0, v5) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L08a85c.  v0:= v0 + 1;
  #L08a860.  goto L08a826;
  #L08a862.  v0:= v11.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08a866.  if v0 == 0 then goto L08a882;
  #L08a86a.  v0:= v11.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08a86e.  v1:= " \"#<>\\^`{|}" @kind object;
  #L08a872.  v3:= v2;
  #L08a874.  v5:= v4;
  #L08a876.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a87c.  v0:= temp @kind object;
  #L08a87e.  v11.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L08a882.  return v11 @kind object;
}
procedure `a.r$a` `b`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.b:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08a894.  v2:= 0I;
  #L08a896.  if v7 != 0 then goto L08a8aa;
  #L08a89a.  v0:= new `java.lang.NullPointerException`;
  #L08a89e.  v1:= "username == null" @kind object;
  #L08a8a2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a8a8.  throw v0;
  #L08a8aa.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08a8ae.  v5:= 1I;
  #L08a8b0.  v0:= v7 @kind object;
  #L08a8b2.  v3:= v2;
  #L08a8b4.  v4:= v2;
  #L08a8b6.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a8bc.  v0:= temp @kind object;
  #L08a8be.  v6.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08a8c2.  return v6 @kind object;
}
procedure `a.r$a` `c`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.c:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08a8d4.  v2:= 0I;
  #L08a8d6.  if v7 != 0 then goto L08a8ea;
  #L08a8da.  v0:= new `java.lang.NullPointerException`;
  #L08a8de.  v1:= "password == null" @kind object;
  #L08a8e2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a8e8.  throw v0;
  #L08a8ea.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08a8ee.  v5:= 1I;
  #L08a8f0.  v0:= v7 @kind object;
  #L08a8f2.  v3:= v2;
  #L08a8f4.  v4:= v2;
  #L08a8f6.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a8fc.  v0:= temp @kind object;
  #L08a8fe.  v6.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08a902.  return v6 @kind object;
}
procedure `a.r` `c`(`a.r$a` v2 @kind this) @signature `La/r$a;.c:()La/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08a914.  v0:= v2.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08a918.  if v0 != 0 then goto L08a92c;
  #L08a91c.  v0:= new `java.lang.IllegalStateException`;
  #L08a920.  v1:= "scheme == null" @kind object;
  #L08a924.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a92a.  throw v0;
  #L08a92c.  v0:= v2.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08a930.  if v0 != 0 then goto L08a944;
  #L08a934.  v0:= new `java.lang.IllegalStateException`;
  #L08a938.  v1:= "host == null" @kind object;
  #L08a93c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a942.  throw v0;
  #L08a944.  v0:= new `a.r`;
  #L08a948.  call `<init>`(v0, v2) @signature `La/r;.<init>:(La/r$a;)V` @kind direct;
  #L08a94e.  return v0 @kind object;
}
procedure `a.r$a` `d`(`a.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r$a;.d:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08a960.  if v4 != 0 then goto L08a974;
  #L08a964.  v0:= new `java.lang.NullPointerException`;
  #L08a968.  v1:= "host == null" @kind object;
  #L08a96c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a972.  throw v0;
  #L08a974.  v0:= 0I;
  #L08a976.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08a97c.  v1:= temp;
  #L08a97e.  call temp:= `e`(v4, v0, v1) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L08a984.  v0:= temp @kind object;
  #L08a986.  if v0 != 0 then goto L08a9bc;
  #L08a98a.  v0:= new `java.lang.IllegalArgumentException`;
  #L08a98e.  v1:= new `java.lang.StringBuilder`;
  #L08a992.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08a998.  v2:= "unexpected host: " @kind object;
  #L08a99c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a9a2.  v1:= temp @kind object;
  #L08a9a4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08a9aa.  v1:= temp @kind object;
  #L08a9ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08a9b2.  v1:= temp @kind object;
  #L08a9b4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08a9ba.  throw v0;
  #L08a9bc.  v3.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08a9c0.  return v3 @kind object;
}
procedure `a.r$a` `e`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08a9d4.  v2:= 1I;
  #L08a9d6.  if v7 == 0 then goto L08a9fc;
  #L08a9da.  v1:= " \"'<>#" @kind object;
  #L08a9de.  v3:= 0I;
  #L08a9e0.  v0:= v7 @kind object;
  #L08a9e2.  v4:= v2;
  #L08a9e4.  v5:= v2;
  #L08a9e6.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08a9ec.  v0:= temp @kind object;
  #L08a9ee.  call temp:= `b`(v0) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L08a9f4.  v0:= temp @kind object;
  #L08a9f6.  v6.`a.r$a.g` @type ^`java.util.List` := v0 @kind object;
  #L08a9fa.  return v6 @kind object;
  #L08a9fc.  v0:= 0I;
  #L08a9fe.  goto L08a9f6;
}
procedure `java.lang.String` `toString`(`a.r$a` v4 @kind this) @signature `La/r$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08aa10.  v3:= 58I;
  #L08aa14.  v0:= new `java.lang.StringBuilder`;
  #L08aa18.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08aa1e.  v1:= v4.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08aa22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aa28.  v1:= "://" @kind object;
  #L08aa2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aa32.  v1:= v4.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L08aa36.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08aa3c.  v1:= temp;
  #L08aa3e.  if v1 == 0 then goto L08aa52;
  #L08aa42.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08aa46.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08aa4c.  v1:= temp;
  #L08aa4e.  if v1 != 0 then goto L08aa86;
  #L08aa52.  v1:= v4.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L08aa56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aa5c.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08aa60.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08aa66.  v1:= temp;
  #L08aa68.  if v1 != 0 then goto L08aa7c;
  #L08aa6c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aa72.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08aa76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aa7c.  v1:= 64I;
  #L08aa80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aa86.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08aa8a.  call temp:= `indexOf`(v1, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08aa90.  v1:= temp;
  #L08aa92.  v2:= -1I;
  #L08aa94.  if v1 == v2 then goto L08ab26;
  #L08aa98.  v1:= 91I;
  #L08aa9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aaa2.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08aaa6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aaac.  v1:= 93I;
  #L08aab0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aab6.  call temp:= `a`(v4) @signature `La/r$a;.a:()I` @kind virtual;
  #L08aabc.  v1:= temp;
  #L08aabe.  v2:= v4.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08aac2.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L08aac8.  v2:= temp;
  #L08aaca.  if v1 == v2 then goto L08aada;
  #L08aace.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aad4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aada.  v1:= v4.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08aade.  call `a`(v0, v1) @signature `La/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L08aae4.  v1:= v4.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08aae8.  if v1 == 0 then goto L08ab00;
  #L08aaec.  v1:= 63I;
  #L08aaf0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08aaf6.  v1:= v4.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08aafa.  call `b`(v0, v1) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L08ab00.  v1:= v4.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08ab04.  if v1 == 0 then goto L08ab1c;
  #L08ab08.  v1:= 35I;
  #L08ab0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08ab12.  v1:= v4.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08ab16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08ab1c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08ab22.  v0:= temp @kind object;
  #L08ab24.  return v0 @kind object;
  #L08ab26.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08ab2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08ab30.  goto L08aab6;
}

record `a.w$a` @kind class @AccessFlag FINAL extends `a.a.b` @kind class {
  `a.w` `a.w$a.a` @AccessFlag FINAL_SYNTHETIC;
  `a.f` `a.w$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `java.lang.String` `a`(`a.w$a` v1 @kind this) @signature `La/w$a;.a:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L08c2c8.  v0:= v1.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c2cc.  v0:= v0.`a.w.c` @type ^`a.x` @kind object;
  #L08c2d0.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L08c2d6.  v0:= temp @kind object;
  #L08c2d8.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L08c2de.  v0:= temp @kind object;
  #L08c2e0.  return v0 @kind object;
}
procedure `void` `b`(`a.w$a` v5 @kind this) @signature `La/w$a;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08c2f4.  v1:= 1I;
  #L08c2f6.  v2:= 0I;
  #Try_start0.  
  #L08c2f8.  v0:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c2fc.  call temp:= `f`(v0) @signature `La/w;.f:()La/z;` @kind virtual;
  #L08c302.  v0:= temp @kind object;
  #L08c304.  v3:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c308.  v3:= v3.`a.w.b` @type ^`a.a.c.j` @kind object;
  #L08c30c.  call temp:= `a`(v3) @signature `La/a/c/j;.a:()Z` @kind virtual;
  #Try_end0.  
  #L08c312.  v2:= temp;
  #L08c314.  if v2 == 0 then goto L08c34c;
  #Try_start1.  
  #L08c318.  v0:= v5.`a.w$a.c` @type ^`a.f` @kind object;
  #L08c31c.  v2:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c320.  v3:= new `java.io.IOException`;
  #L08c324.  v4:= "Canceled" @kind object;
  #L08c328.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08c32e.  call `a`(v0, v2, v3) @signature `La/f;.a:(La/e;Ljava/io/IOException;)V` @kind interface;
  #Try_end1.  
  #L08c334.  v0:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c338.  v0:= v0.`a.w.a` @type ^`a.u` @kind object;
  #L08c33c.  call temp:= `s`(v0) @signature `La/u;.s:()La/n;` @kind virtual;
  #L08c342.  v0:= temp @kind object;
  #L08c344.  call `a`(v0, v5) @signature `La/n;.a:(La/w$a;)V` @kind virtual;
  #L08c34a.  return @kind void;
  #Try_start2.  
  #L08c34c.  v2:= v5.`a.w$a.c` @type ^`a.f` @kind object;
  #L08c350.  v3:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c354.  call `a`(v2, v3, v0) @signature `La/f;.a:(La/e;La/z;)V` @kind interface;
  #Try_end2.  
  #L08c35a.  goto L08c334;
  #L08c35c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L08c35e.  if v1 == 0 then goto L08c3bc;
  #Try_start3.  
  #L08c362.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L08c368.  v1:= temp @kind object;
  #L08c36a.  v2:= 4I;
  #L08c36c.  v3:= new `java.lang.StringBuilder`;
  #L08c370.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08c376.  v4:= "Callback failure for " @kind object;
  #L08c37a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c380.  v3:= temp @kind object;
  #L08c382.  v4:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c386.  call temp:= `d`(v4) @signature `La/w;.d:()Ljava/lang/String;` @kind virtual;
  #L08c38c.  v4:= temp @kind object;
  #L08c38e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08c394.  v3:= temp @kind object;
  #L08c396.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08c39c.  v3:= temp @kind object;
  #L08c39e.  call `a`(v1, v2, v3, v0) @signature `La/a/g/e;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #Try_end3.  
  #L08c3a4.  v0:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c3a8.  v0:= v0.`a.w.a` @type ^`a.u` @kind object;
  #L08c3ac.  call temp:= `s`(v0) @signature `La/u;.s:()La/n;` @kind virtual;
  #L08c3b2.  v0:= temp @kind object;
  #L08c3b4.  call `a`(v0, v5) @signature `La/n;.a:(La/w$a;)V` @kind virtual;
  #L08c3ba.  goto L08c34a;
  #Try_start4.  
  #L08c3bc.  v1:= v5.`a.w$a.c` @type ^`a.f` @kind object;
  #L08c3c0.  v2:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c3c4.  call `a`(v1, v2, v0) @signature `La/f;.a:(La/e;Ljava/io/IOException;)V` @kind interface;
  #Try_end4.  
  #L08c3ca.  goto L08c3a4;
  #L08c3cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L08c3ce.  v1:= v5.`a.w$a.a` @type ^`a.w` @kind object;
  #L08c3d2.  v1:= v1.`a.w.a` @type ^`a.u` @kind object;
  #L08c3d6.  call temp:= `s`(v1) @signature `La/u;.s:()La/n;` @kind virtual;
  #L08c3dc.  v1:= temp @kind object;
  #L08c3de.  call `a`(v1, v5) @signature `La/n;.a:(La/w$a;)V` @kind virtual;
  #L08c3e4.  throw v0;
  #L08c3e6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L08c3e8.  v1:= v2;
  #L08c3ea.  goto L08c35e;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L08c3e6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L08c3cc;
  catch `java.io.IOException` @[Try_start1..Try_end1] goto L08c35c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L08c3cc;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L08c35c;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L08c3cc;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L08c3cc;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L08c3cc;
}

record `com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` @kind class @AccessFlag  extends `com.j256.ormlite.support.GeneratedKeyHolder` @kind interface {
  `java.lang.Number` `com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @AccessFlag ;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` v0 @kind this) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15c4cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15c4d2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` v0 @kind this, `com.j256.ormlite.stmt.mapped.MappedCreate$1` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.<init>:(Lcom/j256/ormlite/stmt/mapped/MappedCreate$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L15c4e4.  call `<init>`(v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.<init>:()V` @kind direct;
  #L15c4ea.  return @kind void;
}
procedure `void` `addKey`(`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` v3 @kind this, `java.lang.Number` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.addKey:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15c4fc.  v0:= v3.`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @type ^`java.lang.Number` @kind object;
  #L15c500.  if v0 != 0 then goto L15c50a;
  #L15c504.  v3.`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @type ^`java.lang.Number` := v4 @kind object;
  #L15c508.  return @kind void;
  #L15c50a.  v0:= new `java.sql.SQLException`;
  #L15c50e.  v1:= new `java.lang.StringBuilder`;
  #L15c512.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c518.  v2:= "generated key has already been set to " @kind object;
  #L15c51c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c522.  v1:= temp @kind object;
  #L15c524.  v2:= v3.`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @type ^`java.lang.Number` @kind object;
  #L15c528.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c52e.  v1:= temp @kind object;
  #L15c530.  v2:= ", now set to " @kind object;
  #L15c534.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c53a.  v1:= temp @kind object;
  #L15c53c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c542.  v1:= temp @kind object;
  #L15c544.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c54a.  v1:= temp @kind object;
  #L15c54c.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c552.  throw v0;
}
procedure `java.lang.Number` `getKey`(`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/mapped/MappedCreate$KeyHolder;.getKey:()Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c564.  v0:= v1.`com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder.key` @type ^`java.lang.Number` @kind object;
  #L15c568.  return v0 @kind object;
}

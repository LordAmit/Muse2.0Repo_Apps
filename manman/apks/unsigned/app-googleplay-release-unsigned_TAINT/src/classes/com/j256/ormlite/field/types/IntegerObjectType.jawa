record `com.j256.ormlite.field.types.IntegerObjectType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
global `com.j256.ormlite.field.types.IntegerObjectType` `@@com.j256.ormlite.field.types.IntegerObjectType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1532e8.  v0:= new `com.j256.ormlite.field.types.IntegerObjectType`;
  #L1532ec.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.<init>:()V` @kind direct;
  #L1532f2.  `@@com.j256.ormlite.field.types.IntegerObjectType.singleTon` @type ^`com.j256.ormlite.field.types.IntegerObjectType` := v0 @kind object;
  #L1532f6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.IntegerObjectType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L153308.  v0:= `@@com.j256.ormlite.field.SqlType.INTEGER` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L15330c.  v1:= 1I;
  #L15330e.  v1:= new `java.lang.Class`[v1];
  #L153312.  v2:= 0I;
  #L153314.  v3:= constclass @type ^`java.lang.Integer` @kind object;
  #L153318.  v1[v2]:= v3 @kind object;
  #L15331c.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L153322.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.IntegerObjectType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L153334.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L15333a.  return @kind void;
}
procedure `com.j256.ormlite.field.types.IntegerObjectType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.getSingleton:()Lcom/j256/ormlite/field/types/IntegerObjectType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15334c.  v0:= `@@com.j256.ormlite.field.types.IntegerObjectType.singleTon` @type ^`com.j256.ormlite.field.types.IntegerObjectType` @kind object;
  #L153350.  return v0 @kind object;
}
procedure `java.lang.Object` `convertIdNumber`(`com.j256.ormlite.field.types.IntegerObjectType` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.convertIdNumber:(Ljava/lang/Number;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153364.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L15336a.  v0:= temp;
  #L15336c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L153372.  v0:= temp @kind object;
  #L153374.  return v0 @kind object;
}
procedure `boolean` `isEscapedValue`(`com.j256.ormlite.field.types.IntegerObjectType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.isEscapedValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153388.  v0:= 0I;
  #L15338a.  return v0;
}
procedure `boolean` `isValidForVersion`(`com.j256.ormlite.field.types.IntegerObjectType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.isValidForVersion:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15339c.  v0:= 1I;
  #L15339e.  return v0;
}
procedure `boolean` `isValidGeneratedType`(`com.j256.ormlite.field.types.IntegerObjectType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.isValidGeneratedType:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1533b0.  v0:= 1I;
  #L1533b2.  return v0;
}
procedure `java.lang.Object` `moveToNextValue`(`com.j256.ormlite.field.types.IntegerObjectType` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.moveToNextValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1533c4.  if v2 != 0 then goto L1533d4;
  #L1533c8.  v0:= 1I;
  #L1533ca.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1533d0.  v0:= temp @kind object;
  #L1533d2.  return v0 @kind object;
  #L1533d4.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1533d8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1533de.  v0:= temp;
  #L1533e0.  v0:= v0 + 1;
  #L1533e4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1533ea.  v0:= temp @kind object;
  #L1533ec.  goto L1533d2;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.IntegerObjectType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153400.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L153406.  v0:= temp;
  #L153408.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15340e.  v0:= temp @kind object;
  #L153410.  return v0 @kind object;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.IntegerObjectType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/IntegerObjectType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153424.  call temp:= `getInt`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getInt:(I)I` @kind interface;
  #L15342a.  v0:= temp;
  #L15342c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L153432.  v0:= temp @kind object;
  #L153434.  return v0 @kind object;
}

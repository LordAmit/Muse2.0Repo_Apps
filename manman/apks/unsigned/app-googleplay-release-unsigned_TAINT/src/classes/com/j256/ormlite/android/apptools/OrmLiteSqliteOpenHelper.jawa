record `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `boolean` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @AccessFlag PROTECTED;
  `com.j256.ormlite.android.AndroidConnectionSource` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @AccessFlag PROTECTED;
  `boolean` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @AccessFlag PRIVATE_VOLATILE;
}
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @AccessFlag PROTECTED_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1288ec.  v0:= constclass @type ^`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` @kind object;
  #L1288f0.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L1288f6.  v0:= temp @kind object;
  #L1288f8.  `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L1288fc.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v3 @kind this, `android.content.Context` v4 @kind object, `java.lang.String` v5 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v6 @kind object, `int` v7 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L128910.  call `<init>`(v3, v4, v5, v6, v7) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L128916.  v0:= new `com.j256.ormlite.android.AndroidConnectionSource`;
  #L12891a.  call `<init>`(v0, v3) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteOpenHelper;)V` @kind direct;
  #L128920.  v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` := v0 @kind object;
  #L128924.  v0:= 1I;
  #L128926.  v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L12892a.  v0:= `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L12892e.  v1:= "{}: constructed connectionSource {}" @kind object;
  #L128932.  v2:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L128936.  call `trace`(v0, v1, v3, v2) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L12893c.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v6 @kind this, `android.content.Context` v7 @kind object, `java.lang.String` v8 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L128950.  call temp:= `openFileId`(v7, v11) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFileId:(Landroid/content/Context;I)Ljava/io/InputStream;` @kind static;
  #L128956.  v5:= temp @kind object;
  #L128958.  v0:= v6 @kind object;
  #L12895a.  v1:= v7 @kind object;
  #L12895c.  v2:= v8 @kind object;
  #L12895e.  v3:= v9 @kind object;
  #L128960.  v4:= v10;
  #L128962.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @kind direct;
  #L128968.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v6 @kind this, `android.content.Context` v7 @kind object, `java.lang.String` v8 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v9 @kind object, `int` v10 , `java.io.File` v11 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L12897c.  call temp:= `openFile`(v11) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFile:(Ljava/io/File;)Ljava/io/InputStream;` @kind static;
  #L128982.  v5:= temp @kind object;
  #L128984.  v0:= v6 @kind object;
  #L128986.  v1:= v7 @kind object;
  #L128988.  v2:= v8 @kind object;
  #L12898a.  v3:= v9 @kind object;
  #L12898c.  v4:= v10;
  #L12898e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @kind direct;
  #L128994.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.content.Context` v5 @kind object, `java.lang.String` v6 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v7 @kind object, `int` v8 , `java.io.InputStream` v9 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1289a8.  v2:= 0I;
  #L1289aa.  call `<init>`(v4, v5, v6, v7, v8) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L1289b0.  v0:= new `com.j256.ormlite.android.AndroidConnectionSource`;
  #L1289b4.  call `<init>`(v0, v4) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteOpenHelper;)V` @kind direct;
  #L1289ba.  v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` := v0 @kind object;
  #L1289be.  v0:= 1I;
  #L1289c0.  v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L1289c4.  if v9 != 0 then goto L1289ca;
  #L1289c8.  return @kind void;
  #Try_start0.  
  #L1289ca.  v1:= new `java.io.BufferedReader`;
  #L1289ce.  v0:= new `java.io.InputStreamReader`;
  #L1289d2.  call `<init>`(v0, v9) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1289d8.  v3:= 4096I;
  #L1289dc.  call `<init>`(v1, v0, v3) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;I)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L1289e2.  call temp:= `loadDatabaseConfigFromReader`(v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.loadDatabaseConfigFromReader:(Ljava/io/BufferedReader;)Ljava/util/List;` @kind static;
  #L1289e8.  v0:= temp @kind object;
  #L1289ea.  call `addCachedDatabaseConfigs`(v0) @signature `Lcom/j256/ormlite/dao/DaoManager;.addCachedDatabaseConfigs:(Ljava/util/Collection;)V` @kind static;
  #Try_end1.  
  #L1289f0.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1289f6.  call `closeQuietly`(v2) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1289fc.  goto L1289c8;
  #L1289fe.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L128a00.  v1:= v2 @kind object;
  #Try_start2.  
  #L128a02.  v2:= new `java.lang.IllegalStateException`;
  #L128a06.  v3:= "Could not load object config file" @kind object;
  #L128a0a.  call `<init>`(v2, v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L128a10.  throw v2;
  #Try_end2.  
  #L128a12.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L128a14.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L128a1a.  call `closeQuietly`(v9) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L128a20.  throw v0;
  #L128a22.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L128a24.  v1:= v2 @kind object;
  #L128a26.  goto L128a14;
  #L128a28.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L128a2a.  v9:= v2 @kind object;
  #L128a2c.  goto L128a14;
  #L128a2e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L128a30.  v9:= v2 @kind object;
  #L128a32.  goto L128a02;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1289fe;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L128a22;
  catch `java.sql.SQLException` @[Try_start1..Try_end1] goto L128a2e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L128a28;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L128a12;
}
procedure `java.io.InputStream` `openFile`(`java.io.File` v4 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFile:(Ljava/io/File;)Ljava/io/InputStream;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L128a6c.  if v4 != 0 then goto L128a74;
  #L128a70.  v0:= 0I;
  #L128a72.  return v0 @kind object;
  #Try_start0.  
  #L128a74.  v0:= new `java.io.FileInputStream`;
  #L128a78.  call `<init>`(v0, v4) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #Try_end0.  
  #L128a7e.  goto L128a72;
  #L128a80.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L128a82.  v1:= new `java.lang.IllegalArgumentException`;
  #L128a86.  v2:= new `java.lang.StringBuilder`;
  #L128a8a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L128a90.  v3:= "Could not open config file " @kind object;
  #L128a94.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L128a9a.  v2:= temp @kind object;
  #L128a9c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L128aa2.  v2:= temp @kind object;
  #L128aa4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L128aaa.  v2:= temp @kind object;
  #L128aac.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L128ab2.  throw v1;
  catch `java.io.FileNotFoundException` @[Try_start0..Try_end0] goto L128a80;
}
procedure `java.io.InputStream` `openFileId`(`android.content.Context` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFileId:(Landroid/content/Context;I)Ljava/io/InputStream;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L128ad4.  call temp:= `getResources`(v3) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L128ada.  v0:= temp @kind object;
  #L128adc.  call temp:= `openRawResource`(v0, v4) @signature `Landroid/content/res/Resources;.openRawResource:(I)Ljava/io/InputStream;` @kind virtual;
  #L128ae2.  v0:= temp @kind object;
  #L128ae4.  if v0 != 0 then goto L128b1a;
  #L128ae8.  v0:= new `java.lang.IllegalStateException`;
  #L128aec.  v1:= new `java.lang.StringBuilder`;
  #L128af0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L128af6.  v2:= "Could not find object config file with id " @kind object;
  #L128afa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L128b00.  v1:= temp @kind object;
  #L128b02.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L128b08.  v1:= temp @kind object;
  #L128b0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L128b10.  v1:= temp @kind object;
  #L128b12.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L128b18.  throw v0;
  #L128b1a.  return v0 @kind object;
}
procedure `void` `close`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L128b2c.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.close:()V` @kind super;
  #L128b32.  v0:= v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L128b36.  call `close`(v0) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.close:()V` @kind virtual;
  #L128b3c.  v0:= 0I;
  #L128b3e.  v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L128b42.  return @kind void;
}
procedure `com.j256.ormlite.support.ConnectionSource` `getConnectionSource`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v3 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L128b54.  v0:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` @kind boolean;
  #L128b58.  if v0 != 0 then goto L128b74;
  #L128b5c.  v0:= `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L128b60.  v1:= new `java.lang.IllegalStateException`;
  #L128b64.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L128b6a.  v2:= "Getting connectionSource was called after closed" @kind object;
  #L128b6e.  call `warn`(v0, v1, v2) @signature `Lcom/j256/ormlite/logger/Logger;.warn:(Ljava/lang/Throwable;Ljava/lang/String;)V` @kind virtual;
  #L128b74.  v0:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L128b78.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.Dao` `getDao`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L128b8c.  call temp:= `getConnectionSource`(v1) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L128b92.  v0:= temp @kind object;
  #L128b94.  call temp:= `createDao`(v0, v2) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L128b9a.  v0:= temp @kind object;
  #L128b9c.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `getRuntimeExceptionDao`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getRuntimeExceptionDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L128bb0.  call temp:= `getDao`(v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind virtual;
  #L128bb6.  v0:= temp @kind object;
  #L128bb8.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L128bbc.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #Try_end0.  
  #L128bc2.  return v1 @kind object;
  #L128bc4.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L128bc6.  v1:= new `java.lang.RuntimeException`;
  #L128bca.  v2:= new `java.lang.StringBuilder`;
  #L128bce.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L128bd4.  v3:= "Could not create RuntimeExcepitionDao for class " @kind object;
  #L128bd8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L128bde.  v2:= temp @kind object;
  #L128be0.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L128be6.  v2:= temp @kind object;
  #L128be8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L128bee.  v2:= temp @kind object;
  #L128bf0.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L128bf6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L128bc4;
}
procedure `boolean` `isOpen`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L128c18.  v0:= v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` @kind boolean;
  #L128c1c.  return v0;
}
procedure `void` `onCreate`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.database.sqlite.SQLiteDatabase` v5 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L128c30.  v0:= 1I;
  #L128c32.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L128c38.  v3:= temp @kind object;
  #L128c3a.  v1:= 0I;
  #L128c3c.  call temp:= `getSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getSpecialConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L128c42.  v2:= temp @kind object;
  #L128c44.  v1:= 0I;
  #L128c46.  if v2 != 0 then goto L128c90;
  #L128c4a.  v1:= new `com.j256.ormlite.android.AndroidDatabaseConnection`;
  #L128c4e.  v2:= v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L128c52.  call `<init>`(v1, v5, v0, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseConnection;.<init>:(Landroid/database/sqlite/SQLiteDatabase;ZZ)V` @kind direct;
  #Try_start0.  
  #L128c58.  call temp:= `saveSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.saveSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #Try_start1.  
  #L128c5e.  call `onCreate`(v4, v5, v3) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;)V` @kind virtual;
  #Try_end1.  
  #L128c64.  if v0 == 0 then goto L128c6e;
  #L128c68.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L128c6e.  return @kind void;
  #L128c70.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L128c72.  v1:= new `java.lang.IllegalStateException`;
  #L128c76.  v2:= "Could not save special connection" @kind object;
  #L128c7a.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L128c80.  throw v1;
  #L128c82.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L128c84.  if v0 == 0 then goto L128c8e;
  #L128c88.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L128c8e.  throw v2;
  #L128c90.  v0:= v1;
  #L128c92.  v1:= v2 @kind object;
  #L128c94.  goto L128c5e;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L128c70;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L128c82;
}
procedure `void` `onCreate`(`android.database.sqlite.SQLiteDatabase` v0 @kind object, `com.j256.ormlite.support.ConnectionSource` v1 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `onUpgrade`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.database.sqlite.SQLiteDatabase` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L128cc0.  v0:= 1I;
  #L128cc2.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L128cc8.  v3:= temp @kind object;
  #L128cca.  v1:= 0I;
  #L128ccc.  call temp:= `getSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getSpecialConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L128cd2.  v2:= temp @kind object;
  #L128cd4.  v1:= 0I;
  #L128cd6.  if v2 != 0 then goto L128d20;
  #L128cda.  v1:= new `com.j256.ormlite.android.AndroidDatabaseConnection`;
  #L128cde.  v2:= v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L128ce2.  call `<init>`(v1, v5, v0, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseConnection;.<init>:(Landroid/database/sqlite/SQLiteDatabase;ZZ)V` @kind direct;
  #Try_start0.  
  #L128ce8.  call temp:= `saveSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.saveSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #Try_start1.  
  #L128cee.  call `onUpgrade`(v4, v5, v3, v6, v7) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;II)V` @kind virtual;
  #Try_end1.  
  #L128cf4.  if v0 == 0 then goto L128cfe;
  #L128cf8.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L128cfe.  return @kind void;
  #L128d00.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L128d02.  v1:= new `java.lang.IllegalStateException`;
  #L128d06.  v2:= "Could not save special connection" @kind object;
  #L128d0a.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L128d10.  throw v1;
  #L128d12.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L128d14.  if v0 == 0 then goto L128d1e;
  #L128d18.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L128d1e.  throw v2;
  #L128d20.  v0:= v1;
  #L128d22.  v1:= v2 @kind object;
  #L128d24.  goto L128cee;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L128d00;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L128d12;
}
procedure `void` `onUpgrade`(`android.database.sqlite.SQLiteDatabase` v0 @kind object, `com.j256.ormlite.support.ConnectionSource` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v2 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L128d50.  v0:= new `java.lang.StringBuilder`;
  #L128d54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L128d5a.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L128d60.  v1:= temp @kind object;
  #L128d62.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L128d68.  v1:= temp @kind object;
  #L128d6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L128d70.  v0:= temp @kind object;
  #L128d72.  v1:= "@" @kind object;
  #L128d76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L128d7c.  v0:= temp @kind object;
  #L128d7e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L128d84.  v1:= temp;
  #L128d86.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L128d8c.  v1:= temp @kind object;
  #L128d8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L128d94.  v0:= temp @kind object;
  #L128d96.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L128d9c.  v0:= temp @kind object;
  #L128d9e.  return v0 @kind object;
}

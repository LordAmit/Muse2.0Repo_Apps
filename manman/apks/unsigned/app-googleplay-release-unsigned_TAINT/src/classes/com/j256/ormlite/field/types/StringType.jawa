record `com.j256.ormlite.field.types.StringType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
global `int` `@@com.j256.ormlite.field.types.StringType.DEFAULT_WIDTH` @AccessFlag PUBLIC_STATIC;
global `com.j256.ormlite.field.types.StringType` `@@com.j256.ormlite.field.types.StringType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/StringType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L153638.  v0:= 255I;
  #L15363c.  `@@com.j256.ormlite.field.types.StringType.DEFAULT_WIDTH` @type ^`int` := v0;
  #L153640.  v0:= new `com.j256.ormlite.field.types.StringType`;
  #L153644.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/StringType;.<init>:()V` @kind direct;
  #L15364a.  `@@com.j256.ormlite.field.types.StringType.singleTon` @type ^`com.j256.ormlite.field.types.StringType` := v0 @kind object;
  #L15364e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.StringType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/StringType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L153660.  v0:= `@@com.j256.ormlite.field.SqlType.STRING` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L153664.  v1:= 1I;
  #L153666.  v1:= new `java.lang.Class`[v1];
  #L15366a.  v2:= 0I;
  #L15366c.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L153670.  v1[v2]:= v3 @kind object;
  #L153674.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L15367a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.StringType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object) @signature `Lcom/j256/ormlite/field/types/StringType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L15368c.  call `<init>`(v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L153692.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.StringType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/StringType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L1536a4.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L1536aa.  return @kind void;
}
procedure `com.j256.ormlite.field.types.StringType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/StringType;.getSingleton:()Lcom/j256/ormlite/field/types/StringType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1536bc.  v0:= `@@com.j256.ormlite.field.types.StringType.singleTon` @type ^`com.j256.ormlite.field.types.StringType` @kind object;
  #L1536c0.  return v0 @kind object;
}
procedure `int` `getDefaultWidth`(`com.j256.ormlite.field.types.StringType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/StringType;.getDefaultWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1536d4.  v0:= `@@com.j256.ormlite.field.types.StringType.DEFAULT_WIDTH` @type ^`int`;
  #L1536d8.  return v0;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.StringType` v0 @kind this, `com.j256.ormlite.field.FieldType` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/field/types/StringType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1536ec.  return v2 @kind object;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.StringType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/StringType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153700.  call temp:= `getString`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getString:(I)Ljava/lang/String;` @kind interface;
  #L153706.  v0:= temp @kind object;
  #L153708.  return v0 @kind object;
}

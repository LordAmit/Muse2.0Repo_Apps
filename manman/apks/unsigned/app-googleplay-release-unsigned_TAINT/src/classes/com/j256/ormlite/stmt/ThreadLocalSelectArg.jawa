record `com.j256.ormlite.stmt.ThreadLocalSelectArg` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.BaseArgumentHolder` @kind class {
  `java.lang.ThreadLocal` `com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15b01c.  call `<init>`(v1) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:()V` @kind direct;
  #L15b022.  v0:= new `java.lang.ThreadLocal`;
  #L15b026.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L15b02c.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L15b030.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `com.j256.ormlite.field.SqlType` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Lcom/j256/ormlite/field/SqlType;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15b044.  call `<init>`(v1, v2) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L15b04a.  v0:= new `java.lang.ThreadLocal`;
  #L15b04e.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L15b054.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L15b058.  call `setValue`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L15b05e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15b070.  call `<init>`(v1) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:()V` @kind direct;
  #L15b076.  v0:= new `java.lang.ThreadLocal`;
  #L15b07a.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L15b080.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L15b084.  call `setValue`(v1, v2) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L15b08a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15b09c.  call `<init>`(v1, v2) @signature `Lcom/j256/ormlite/stmt/BaseArgumentHolder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b0a2.  v0:= new `java.lang.ThreadLocal`;
  #L15b0a6.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L15b0ac.  v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L15b0b0.  call `setValue`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @kind virtual;
  #L15b0b6.  return @kind void;
}
procedure `java.lang.Object` `getValue`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.getValue:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15b0c8.  v0:= v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L15b0cc.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L15b0d2.  v0:= temp @kind object;
  #L15b0d4.  v0:= (`com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper`) v0 @kind object;
  #L15b0d8.  if v0 != 0 then goto L15b0e0;
  #L15b0dc.  v0:= 0I;
  #L15b0de.  return v0 @kind object;
  #L15b0e0.  v0:= v0.`com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper.value` @type ^`java.lang.Object` @kind object;
  #L15b0e4.  goto L15b0de;
}
procedure `boolean` `isValueSet`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.isValueSet:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15b0f8.  v0:= v1.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L15b0fc.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L15b102.  v0:= temp @kind object;
  #L15b104.  if v0 == 0 then goto L15b10c;
  #L15b108.  v0:= 1I;
  #L15b10a.  return v0;
  #L15b10c.  v0:= 0I;
  #L15b10e.  goto L15b10a;
}
procedure `void` `setValue`(`com.j256.ormlite.stmt.ThreadLocalSelectArg` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b120.  v0:= v2.`com.j256.ormlite.stmt.ThreadLocalSelectArg.threadValue` @type ^`java.lang.ThreadLocal` @kind object;
  #L15b124.  v1:= new `com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper`;
  #L15b128.  call `<init>`(v1, v3) @signature `Lcom/j256/ormlite/stmt/ThreadLocalSelectArg$ValueWrapper;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L15b12e.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L15b134.  return @kind void;
}

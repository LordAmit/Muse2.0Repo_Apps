record `com.j256.ormlite.stmt.RawRowMapperImpl` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.RawRowMapper` @kind interface {
  `com.j256.ormlite.table.TableInfo` `com.j256.ormlite.stmt.RawRowMapperImpl.tableInfo` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.RawRowMapperImpl` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/RawRowMapperImpl;.<init>:(Lcom/j256/ormlite/table/TableInfo;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L159050.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L159056.  v0.`com.j256.ormlite.stmt.RawRowMapperImpl.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` := v1 @kind object;
  #L15905a.  return @kind void;
}
procedure `java.lang.Object` `mapRow`(`com.j256.ormlite.stmt.RawRowMapperImpl` v6 @kind this, `java.lang.String`[] v7 @kind object, `java.lang.String`[] v8 @kind object) @signature `Lcom/j256/ormlite/stmt/RawRowMapperImpl;.mapRow:([Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15906c.  v1:= 0I;
  #L15906e.  v0:= v6.`com.j256.ormlite.stmt.RawRowMapperImpl.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L159072.  call temp:= `createObject`(v0) @signature `Lcom/j256/ormlite/table/TableInfo;.createObject:()Ljava/lang/Object;` @kind virtual;
  #L159078.  v2:= temp @kind object;
  #L15907a.  v0:= v1;
  #L15907c.  v3:= length @variable v7;
  #L15907e.  if v0 >= v3 then goto L1590b4;
  #L159082.  v3:= length @variable v8;
  #L159084.  if v0 < v3 then goto L15908e;
  #L159088.  v0:= v0 + 1;
  #L15908c.  goto L15907c;
  #L15908e.  v3:= v6.`com.j256.ormlite.stmt.RawRowMapperImpl.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L159092.  v4:= v7[v0] @kind object;
  #L159096.  call temp:= `getFieldTypeByColumnName`(v3, v4) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypeByColumnName:(Ljava/lang/String;)Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L15909c.  v3:= temp @kind object;
  #L15909e.  v4:= v8[v0] @kind object;
  #L1590a2.  call temp:= `convertStringToJavaField`(v3, v4, v0) @signature `Lcom/j256/ormlite/field/FieldType;.convertStringToJavaField:(Ljava/lang/String;I)Ljava/lang/Object;` @kind virtual;
  #L1590a8.  v4:= temp @kind object;
  #L1590aa.  v5:= 0I;
  #L1590ac.  call `assignField`(v3, v2, v4, v1, v5) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L1590b2.  goto L159088;
  #L1590b4.  return v2 @kind object;
}

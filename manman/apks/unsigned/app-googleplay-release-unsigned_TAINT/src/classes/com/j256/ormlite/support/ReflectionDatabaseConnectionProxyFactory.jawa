record `com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.DatabaseConnectionProxyFactory` @kind interface {
  `java.lang.reflect.Constructor` `com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.constructor` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.proxyClass` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/j256/ormlite/support/ReflectionDatabaseConnectionProxyFactory;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L15f140.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15f146.  v3.`com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.proxyClass` @type ^`java.lang.Class` := v4 @kind object;
  #L15f14a.  v0:= 1I;
  #Try_start0.  
  #L15f14c.  v0:= new `java.lang.Class`[v0];
  #L15f150.  v1:= 0I;
  #L15f152.  v2:= constclass @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L15f156.  v0[v1]:= v2 @kind object;
  #L15f15a.  call temp:= `getConstructor`(v4, v0) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L15f160.  v0:= temp @kind object;
  #L15f162.  v3.`com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.constructor` @type ^`java.lang.reflect.Constructor` := v0 @kind object;
  #Try_end0.  
  #L15f166.  return @kind void;
  #L15f168.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15f16a.  v0:= new `java.lang.IllegalArgumentException`;
  #L15f16e.  v1:= new `java.lang.StringBuilder`;
  #L15f172.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f178.  v2:= "Could not find constructor with DatabaseConnection argument in " @kind object;
  #L15f17c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f182.  v1:= temp @kind object;
  #L15f184.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f18a.  v1:= temp @kind object;
  #L15f18c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f192.  v1:= temp @kind object;
  #L15f194.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15f19a.  throw v0;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15f168;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `createProxy`(`com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/support/ReflectionDatabaseConnectionProxyFactory;.createProxy:(Lcom/j256/ormlite/support/DatabaseConnection;)Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15f1bc.  v0:= v3.`com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.constructor` @type ^`java.lang.reflect.Constructor` @kind object;
  #L15f1c0.  v1:= 1I;
  #L15f1c2.  v1:= new `java.lang.Object`[v1];
  #L15f1c6.  v2:= 0I;
  #L15f1c8.  v1[v2]:= v4 @kind object;
  #L15f1cc.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15f1d2.  v0:= temp @kind object;
  #L15f1d4.  v0:= (`com.j256.ormlite.support.DatabaseConnection`) v0 @kind object;
  #Try_end0.  
  #L15f1d8.  return v0 @kind object;
  #L15f1da.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15f1dc.  v1:= new `java.lang.StringBuilder`;
  #L15f1e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f1e6.  v2:= "Could not create a new instance of " @kind object;
  #L15f1ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f1f0.  v1:= temp @kind object;
  #L15f1f2.  v2:= v3.`com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory.proxyClass` @type ^`java.lang.Class` @kind object;
  #L15f1f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f1fc.  v1:= temp @kind object;
  #L15f1fe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f204.  v1:= temp @kind object;
  #L15f206.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15f20c.  v0:= temp @kind object;
  #L15f20e.  throw v0;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15f1da;
}

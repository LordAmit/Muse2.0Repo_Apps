record `com.j256.ormlite.android.AndroidConnectionSource` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.BaseConnectionSource` @kind class, `com.j256.ormlite.support.ConnectionSource` @kind interface {
  `boolean` `com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @AccessFlag PRIVATE;
  `com.j256.ormlite.support.DatabaseConnection` `com.j256.ormlite.android.AndroidConnectionSource.connection` @AccessFlag PRIVATE;
  `com.j256.ormlite.db.DatabaseType` `com.j256.ormlite.android.AndroidConnectionSource.databaseType` @AccessFlag PRIVATE_FINAL;
  `android.database.sqlite.SQLiteOpenHelper` `com.j256.ormlite.android.AndroidConnectionSource.helper` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.j256.ormlite.android.AndroidConnectionSource.isOpen` @AccessFlag PRIVATE_VOLATILE;
  `android.database.sqlite.SQLiteDatabase` `com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @AccessFlag PRIVATE_FINAL;
}
global `com.j256.ormlite.support.DatabaseConnectionProxyFactory` `@@com.j256.ormlite.android.AndroidConnectionSource.connectionProxyFactory` @AccessFlag PRIVATE_STATIC;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L140384.  v0:= constclass @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L140388.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L14038e.  v0:= temp @kind object;
  #L140390.  `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L140394.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidConnectionSource` v2 @kind this, `android.database.sqlite.SQLiteDatabase` v3 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1403a8.  v1:= 0I;
  #L1403aa.  call `<init>`(v2) @signature `Lcom/j256/ormlite/support/BaseConnectionSource;.<init>:()V` @kind direct;
  #L1403b0.  v2.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L1403b4.  v0:= 1I;
  #L1403b6.  v2.`com.j256.ormlite.android.AndroidConnectionSource.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L1403ba.  v0:= new `com.j256.ormlite.db.SqliteAndroidDatabaseType`;
  #L1403be.  call `<init>`(v0) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.<init>:()V` @kind direct;
  #L1403c4.  v2.`com.j256.ormlite.android.AndroidConnectionSource.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` := v0 @kind object;
  #L1403c8.  v0:= 0I;
  #L1403ca.  v2.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` := v0 @kind boolean;
  #L1403ce.  v2.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` := v1 @kind object;
  #L1403d2.  v2.`com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @type ^`android.database.sqlite.SQLiteDatabase` := v3 @kind object;
  #L1403d6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidConnectionSource` v2 @kind this, `android.database.sqlite.SQLiteOpenHelper` v3 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteOpenHelper;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1403e8.  v1:= 0I;
  #L1403ea.  call `<init>`(v2) @signature `Lcom/j256/ormlite/support/BaseConnectionSource;.<init>:()V` @kind direct;
  #L1403f0.  v2.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L1403f4.  v0:= 1I;
  #L1403f6.  v2.`com.j256.ormlite.android.AndroidConnectionSource.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L1403fa.  v0:= new `com.j256.ormlite.db.SqliteAndroidDatabaseType`;
  #L1403fe.  call `<init>`(v0) @signature `Lcom/j256/ormlite/db/SqliteAndroidDatabaseType;.<init>:()V` @kind direct;
  #L140404.  v2.`com.j256.ormlite.android.AndroidConnectionSource.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` := v0 @kind object;
  #L140408.  v0:= 0I;
  #L14040a.  v2.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` := v0 @kind boolean;
  #L14040e.  v2.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` := v3 @kind object;
  #L140412.  v2.`com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @type ^`android.database.sqlite.SQLiteDatabase` := v1 @kind object;
  #L140416.  return @kind void;
}
procedure `void` `setDatabaseConnectionProxyFactory`(`com.j256.ormlite.support.DatabaseConnectionProxyFactory` v0 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.setDatabaseConnectionProxyFactory:(Lcom/j256/ormlite/support/DatabaseConnectionProxyFactory;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L140428.  `@@com.j256.ormlite.android.AndroidConnectionSource.connectionProxyFactory` @type ^`com.j256.ormlite.support.DatabaseConnectionProxyFactory` := v0 @kind object;
  #L14042c.  return @kind void;
}
procedure `void` `clearSpecialConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `com.j256.ormlite.support.DatabaseConnection` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L140440.  v0:= `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L140444.  call temp:= `clearSpecial`(v1, v2, v0) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.clearSpecial:(Lcom/j256/ormlite/support/DatabaseConnection;Lcom/j256/ormlite/logger/Logger;)Z` @kind virtual;
  #L14044a.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14045c.  v0:= 0I;
  #L14045e.  v1.`com.j256.ormlite.android.AndroidConnectionSource.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L140462.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.android.AndroidConnectionSource` v0 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;

  #L140474.  call `close`(v0) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.close:()V` @kind virtual;
  #L14047a.  return @kind void;
}
procedure `com.j256.ormlite.db.DatabaseType` `getDatabaseType`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14048c.  v0:= v1.`com.j256.ormlite.android.AndroidConnectionSource.databaseType` @type ^`com.j256.ormlite.db.DatabaseType` @kind object;
  #L140490.  return v0 @kind object;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `getReadOnlyConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getReadOnlyConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1404a4.  call temp:= `getReadWriteConnection`(v1, v2) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getReadWriteConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind virtual;
  #L1404aa.  v0:= temp @kind object;
  #L1404ac.  return v0 @kind object;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `getReadWriteConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getReadWriteConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1404c0.  call temp:= `getSavedConnection`(v5) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.getSavedConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @kind virtual;
  #L1404c6.  v0:= temp @kind object;
  #L1404c8.  if v0 == 0 then goto L1404ce;
  #L1404cc.  return v0 @kind object;
  #L1404ce.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L1404d2.  if v0 != 0 then goto L14057e;
  #L1404d6.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L1404da.  if v0 != 0 then goto L140578;
  #Try_start0.  
  #L1404de.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` @kind object;
  #L1404e2.  call temp:= `getWritableDatabase`(v0) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #Try_end0.  
  #L1404e8.  v0:= temp @kind object;
  #L1404ea.  v1:= new `com.j256.ormlite.android.AndroidDatabaseConnection`;
  #L1404ee.  v2:= 1I;
  #L1404f0.  v3:= v5.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L1404f4.  call `<init>`(v1, v0, v2, v3) @signature `Lcom/j256/ormlite/android/AndroidDatabaseConnection;.<init>:(Landroid/database/sqlite/SQLiteDatabase;ZZ)V` @kind direct;
  #L1404fa.  v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L1404fe.  v1:= `@@com.j256.ormlite.android.AndroidConnectionSource.connectionProxyFactory` @type ^`com.j256.ormlite.support.DatabaseConnectionProxyFactory` @kind object;
  #L140502.  if v1 == 0 then goto L14051a;
  #L140506.  v1:= `@@com.j256.ormlite.android.AndroidConnectionSource.connectionProxyFactory` @type ^`com.j256.ormlite.support.DatabaseConnectionProxyFactory` @kind object;
  #L14050a.  v2:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L14050e.  call temp:= `createProxy`(v1, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxyFactory;.createProxy:(Lcom/j256/ormlite/support/DatabaseConnection;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L140514.  v1:= temp @kind object;
  #L140516.  v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L14051a.  v1:= `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L14051e.  v2:= "created connection {} for db {}, helper {}" @kind object;
  #L140522.  v3:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L140526.  v4:= v5.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` @kind object;
  #L14052a.  call `trace`(v1, v2, v3, v0, v4) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L140530.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L140534.  goto L1404cc;
  #L140536.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L140538.  v1:= new `java.lang.StringBuilder`;
  #L14053c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L140542.  v2:= "Getting a writable database from helper " @kind object;
  #L140546.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14054c.  v1:= temp @kind object;
  #L14054e.  v2:= v5.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` @kind object;
  #L140552.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140558.  v1:= temp @kind object;
  #L14055a.  v2:= " failed" @kind object;
  #L14055e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140564.  v1:= temp @kind object;
  #L140566.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14056c.  v1:= temp @kind object;
  #L14056e.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L140574.  v0:= temp @kind object;
  #L140576.  throw v0;
  #L140578.  v0:= v5.`com.j256.ormlite.android.AndroidConnectionSource.sqliteDatabase` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L14057c.  goto L1404ea;
  #L14057e.  v0:= `@@com.j256.ormlite.android.AndroidConnectionSource.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L140582.  v1:= "{}: returning read-write connection {}, helper {}" @kind object;
  #L140586.  v2:= v5.`com.j256.ormlite.android.AndroidConnectionSource.connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L14058a.  v3:= v5.`com.j256.ormlite.android.AndroidConnectionSource.helper` @type ^`android.database.sqlite.SQLiteOpenHelper` @kind object;
  #L14058e.  call `trace`(v0, v1, v5, v2, v3) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L140594.  goto L140530;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L140536;
}
procedure `boolean` `isCancelQueriesEnabled`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.isCancelQueriesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1405b8.  v0:= v1.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L1405bc.  return v0;
}
procedure `boolean` `isOpen`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.isOpen:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1405d0.  v0:= v1.`com.j256.ormlite.android.AndroidConnectionSource.isOpen` @type ^`boolean` @kind boolean;
  #L1405d4.  return v0;
}
procedure `boolean` `isSingleConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.isSingleConnection:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1405e8.  v0:= 1I;
  #L1405ea.  return v0;
}
procedure `void` `releaseConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v0 @kind this, `com.j256.ormlite.support.DatabaseConnection` v1 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.releaseConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;

  #L1405fc.  return @kind void;
}
procedure `boolean` `saveSpecialConnection`(`com.j256.ormlite.android.AndroidConnectionSource` v1 @kind this, `com.j256.ormlite.support.DatabaseConnection` v2 @kind object) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.saveSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L140610.  call temp:= `saveSpecial`(v1, v2) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.saveSpecial:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind virtual;
  #L140616.  v0:= temp;
  #L140618.  return v0;
}
procedure `void` `setCancelQueriesEnabled`(`com.j256.ormlite.android.AndroidConnectionSource` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.setCancelQueriesEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L14062c.  v0.`com.j256.ormlite.android.AndroidConnectionSource.cancelQueriesEnabled` @type ^`boolean` := v1 @kind boolean;
  #L140630.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.AndroidConnectionSource` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L140644.  v0:= new `java.lang.StringBuilder`;
  #L140648.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14064e.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L140654.  v1:= temp @kind object;
  #L140656.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L14065c.  v1:= temp @kind object;
  #L14065e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140664.  v0:= temp @kind object;
  #L140666.  v1:= "@" @kind object;
  #L14066a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140670.  v0:= temp @kind object;
  #L140672.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L140678.  v1:= temp;
  #L14067a.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L140680.  v1:= temp @kind object;
  #L140682.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L140688.  v0:= temp @kind object;
  #L14068a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L140690.  v0:= temp @kind object;
  #L140692.  return v0 @kind object;
}

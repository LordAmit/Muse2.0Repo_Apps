record `com.adonai.manman.DonateHelper$1` @kind class @AccessFlag  extends `com.a.a.b.d$d` @kind interface {
  `com.adonai.manman.DonateHelper` `com.adonai.manman.DonateHelper$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.adonai.manman.DonateHelper$1` v0 @kind this, `com.adonai.manman.DonateHelper` v1 @kind object) @signature `Lcom/adonai/manman/DonateHelper$1;.<init>:(Lcom/adonai/manman/DonateHelper;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L120af8.  v0.`com.adonai.manman.DonateHelper$1.this$0` @type ^`com.adonai.manman.DonateHelper` := v1 @kind object;
  #L120afc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L120b02.  return @kind void;
}
procedure `void` `onIabSetupFinished`(`com.adonai.manman.DonateHelper$1` v2 @kind this, `com.a.a.b.e` v3 @kind object) @signature `Lcom/adonai/manman/DonateHelper$1;.onIabSetupFinished:(Lcom/a/a/b/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L120b14.  call temp:= `b`(v3) @signature `Lcom/a/a/b/e;.b:()Z` @kind virtual;
  #L120b1a.  v0:= temp;
  #L120b1c.  if v0 == 0 then goto L120b2c;
  #L120b20.  v0:= v2.`com.adonai.manman.DonateHelper$1.this$0` @type ^`com.adonai.manman.DonateHelper` @kind object;
  #L120b24.  v1:= 1I;
  #L120b26.  call temp:= `access$002`(v0, v1) @signature `Lcom/adonai/manman/DonateHelper;.access$002:(Lcom/adonai/manman/DonateHelper;Z)Z` @kind static;
  #L120b2c.  return @kind void;
}

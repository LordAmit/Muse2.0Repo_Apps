record `com.b.a.b.a.l` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.v` @kind class {
  `com.b.a.s` `com.b.a.b.a.l.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.k` `com.b.a.b.a.l.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.f` `com.b.a.b.a.l.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.c.a` `com.b.a.b.a.l.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.w` `com.b.a.b.a.l.e` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.l$a` `com.b.a.b.a.l.f` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.l.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.b.a.b.a.l` v2 @kind this, `com.b.a.s` v3 @kind object, `com.b.a.k` v4 @kind object, `com.b.a.f` v5 @kind object, `com.b.a.c.a` v6 @kind object, `com.b.a.w` v7 @kind object) @signature `Lcom/b/a/b/a/l;.<init>:(Lcom/b/a/s;Lcom/b/a/k;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/w;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L137820.  call `<init>`(v2) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L137826.  v0:= new `com.b.a.b.a.l$a`;
  #L13782a.  v1:= 0I;
  #L13782c.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/l$a;.<init>:(Lcom/b/a/b/a/l;Lcom/b/a/b/a/l$1;)V` @kind direct;
  #L137832.  v2.`com.b.a.b.a.l.f` @type ^`com.b.a.b.a.l$a` := v0 @kind object;
  #L137836.  v2.`com.b.a.b.a.l.a` @type ^`com.b.a.s` := v3 @kind object;
  #L13783a.  v2.`com.b.a.b.a.l.b` @type ^`com.b.a.k` := v4 @kind object;
  #L13783e.  v2.`com.b.a.b.a.l.c` @type ^`com.b.a.f` := v5 @kind object;
  #L137842.  v2.`com.b.a.b.a.l.d` @type ^`com.b.a.c.a` := v6 @kind object;
  #L137846.  v2.`com.b.a.b.a.l.e` @type ^`com.b.a.w` := v7 @kind object;
  #L13784a.  return @kind void;
}
procedure `com.b.a.w` `a`(`com.b.a.c.a` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/a/l;.a:(Lcom/b/a/c/a;Ljava/lang/Object;)Lcom/b/a/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L13785c.  v0:= new `com.b.a.b.a.l$b`;
  #L137860.  v1:= 0I;
  #L137862.  v2:= 0I;
  #L137864.  call `<init>`(v0, v4, v3, v1, v2) @signature `Lcom/b/a/b/a/l$b;.<init>:(Ljava/lang/Object;Lcom/b/a/c/a;ZLjava/lang/Class;)V` @kind direct;
  #L13786a.  return v0 @kind object;
}
procedure `com.b.a.v` `b`(`com.b.a.b.a.l` v3 @kind this) @signature `Lcom/b/a/b/a/l;.b:()Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L13787c.  v0:= v3.`com.b.a.b.a.l.g` @type ^`com.b.a.v` @kind object;
  #L137880.  if v0 == 0 then goto L137886;
  #L137884.  return v0 @kind object;
  #L137886.  v0:= v3.`com.b.a.b.a.l.c` @type ^`com.b.a.f` @kind object;
  #L13788a.  v1:= v3.`com.b.a.b.a.l.e` @type ^`com.b.a.w` @kind object;
  #L13788e.  v2:= v3.`com.b.a.b.a.l.d` @type ^`com.b.a.c.a` @kind object;
  #L137892.  call temp:= `a`(v0, v1, v2) @signature `Lcom/b/a/f;.a:(Lcom/b/a/w;Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L137898.  v0:= temp @kind object;
  #L13789a.  v3.`com.b.a.b.a.l.g` @type ^`com.b.a.v` := v0 @kind object;
  #L13789e.  goto L137884;
}
procedure `void` `a`(`com.b.a.b.a.l` v3 @kind this, `com.b.a.d.c` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/b/a/b/a/l;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1378b0.  v0:= v3.`com.b.a.b.a.l.a` @type ^`com.b.a.s` @kind object;
  #L1378b4.  if v0 != 0 then goto L1378c8;
  #L1378b8.  call temp:= `b`(v3) @signature `Lcom/b/a/b/a/l;.b:()Lcom/b/a/v;` @kind direct;
  #L1378be.  v0:= temp @kind object;
  #L1378c0.  call `a`(v0, v4, v5) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1378c6.  return @kind void;
  #L1378c8.  if v5 != 0 then goto L1378d4;
  #L1378cc.  call temp:= `f`(v4) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L1378d2.  goto L1378c6;
  #L1378d4.  v0:= v3.`com.b.a.b.a.l.a` @type ^`com.b.a.s` @kind object;
  #L1378d8.  v1:= v3.`com.b.a.b.a.l.d` @type ^`com.b.a.c.a` @kind object;
  #L1378dc.  call temp:= `b`(v1) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1378e2.  v1:= temp @kind object;
  #L1378e4.  v2:= v3.`com.b.a.b.a.l.f` @type ^`com.b.a.b.a.l$a` @kind object;
  #L1378e8.  call temp:= `a`(v0, v5, v1, v2) @signature `Lcom/b/a/s;.a:(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @kind interface;
  #L1378ee.  v0:= temp @kind object;
  #L1378f0.  call `a`(v0, v4) @signature `Lcom/b/a/b/j;.a:(Lcom/b/a/l;Lcom/b/a/d/c;)V` @kind static;
  #L1378f6.  goto L1378c6;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.l` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/l;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L137908.  v0:= v4.`com.b.a.b.a.l.b` @type ^`com.b.a.k` @kind object;
  #L13790c.  if v0 != 0 then goto L137922;
  #L137910.  call temp:= `b`(v4) @signature `Lcom/b/a/b/a/l;.b:()Lcom/b/a/v;` @kind direct;
  #L137916.  v0:= temp @kind object;
  #L137918.  call temp:= `b`(v0, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L13791e.  v0:= temp @kind object;
  #L137920.  return v0 @kind object;
  #L137922.  call temp:= `a`(v5) @signature `Lcom/b/a/b/j;.a:(Lcom/b/a/d/a;)Lcom/b/a/l;` @kind static;
  #L137928.  v0:= temp @kind object;
  #L13792a.  call temp:= `j`(v0) @signature `Lcom/b/a/l;.j:()Z` @kind virtual;
  #L137930.  v1:= temp;
  #L137932.  if v1 == 0 then goto L13793a;
  #L137936.  v0:= 0I;
  #L137938.  goto L137920;
  #L13793a.  v1:= v4.`com.b.a.b.a.l.b` @type ^`com.b.a.k` @kind object;
  #L13793e.  v2:= v4.`com.b.a.b.a.l.d` @type ^`com.b.a.c.a` @kind object;
  #L137942.  call temp:= `b`(v2) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L137948.  v2:= temp @kind object;
  #L13794a.  v3:= v4.`com.b.a.b.a.l.f` @type ^`com.b.a.b.a.l$a` @kind object;
  #L13794e.  call temp:= `b`(v1, v0, v2, v3) @signature `Lcom/b/a/k;.b:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/lang/Object;` @kind interface;
  #L137954.  v0:= temp @kind object;
  #L137956.  goto L137920;
}

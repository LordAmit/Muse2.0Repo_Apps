record `com.b.a.b.a.l$b` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `com.b.a.c.a` `com.b.a.b.a.l$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.b.a.l$b.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.b.a.b.a.l$b.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.s` `com.b.a.b.a.l$b.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.k` `com.b.a.b.a.l$b.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.l$b` v2 @kind this, `java.lang.Object` v3 @kind object, `com.b.a.c.a` v4 @kind object, `boolean` v5 , `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/a/l$b;.<init>:(Ljava/lang/Object;Lcom/b/a/c/a;ZLjava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L13772c.  v1:= 0I;
  #L13772e.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L137734.  v0:= instanceof @variable v3 @type ^`com.b.a.s` @kind boolean;
  #L137738.  if v0 == 0 then goto L13777c;
  #L13773c.  v0:= v3 @kind object;
  #L13773e.  v0:= (`com.b.a.s`) v0 @kind object;
  #L137742.  v2.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` := v0 @kind object;
  #L137746.  v0:= instanceof @variable v3 @type ^`com.b.a.k` @kind boolean;
  #L13774a.  if v0 == 0 then goto L137780;
  #L13774e.  v3:= (`com.b.a.k`) v3 @kind object;
  #L137752.  v2.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` := v3 @kind object;
  #L137756.  v0:= v2.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` @kind object;
  #L13775a.  if v0 != 0 then goto L137766;
  #L13775e.  v0:= v2.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` @kind object;
  #L137762.  if v0 == 0 then goto L137784;
  #L137766.  v0:= 1I;
  #L137768.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L13776e.  v2.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` := v4 @kind object;
  #L137772.  v2.`com.b.a.b.a.l$b.b` @type ^`boolean` := v5 @kind boolean;
  #L137776.  v2.`com.b.a.b.a.l$b.c` @type ^`java.lang.Class` := v6 @kind object;
  #L13777a.  return @kind void;
  #L13777c.  v0:= v1 @kind object;
  #L13777e.  goto L137742;
  #L137780.  v3:= v1 @kind object;
  #L137782.  goto L137752;
  #L137784.  v0:= 0I;
  #L137786.  goto L137768;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.l$b` v6 @kind this, `com.b.a.f` v7 @kind object, `com.b.a.c.a` v8 @kind object) @signature `Lcom/b/a/b/a/l$b;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L137798.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L13779c.  if v0 == 0 then goto L1377f4;
  #L1377a0.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L1377a4.  call temp:= `equals`(v0, v8) @signature `Lcom/b/a/c/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1377aa.  v0:= temp;
  #L1377ac.  if v0 != 0 then goto L1377d0;
  #L1377b0.  v0:= v6.`com.b.a.b.a.l$b.b` @type ^`boolean` @kind boolean;
  #L1377b4.  if v0 == 0 then goto L1377f0;
  #L1377b8.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L1377bc.  call temp:= `b`(v0) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1377c2.  v0:= temp @kind object;
  #L1377c4.  call temp:= `a`(v8) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L1377ca.  v1:= temp @kind object;
  #L1377cc.  if v0 != v1 then goto L1377f0;
  #L1377d0.  v0:= 1I;
  #L1377d2.  if v0 == 0 then goto L13780a;
  #L1377d6.  v0:= new `com.b.a.b.a.l`;
  #L1377da.  v1:= v6.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` @kind object;
  #L1377de.  v2:= v6.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` @kind object;
  #L1377e2.  v3:= v7 @kind object;
  #L1377e4.  v4:= v8 @kind object;
  #L1377e6.  v5:= v6 @kind object;
  #L1377e8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/b/a/b/a/l;.<init>:(Lcom/b/a/s;Lcom/b/a/k;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/w;)V` @kind direct;
  #L1377ee.  return v0 @kind object;
  #L1377f0.  v0:= 0I;
  #L1377f2.  goto L1377d2;
  #L1377f4.  v0:= v6.`com.b.a.b.a.l$b.c` @type ^`java.lang.Class` @kind object;
  #L1377f8.  call temp:= `a`(v8) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L1377fe.  v1:= temp @kind object;
  #L137800.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L137806.  v0:= temp;
  #L137808.  goto L1377d2;
  #L13780a.  v0:= 0I;
  #L13780c.  goto L1377ee;
}

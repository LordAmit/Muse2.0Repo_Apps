record `com.b.a.b.a.n$28` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `java.lang.Class` `com.b.a.b.a.n$28.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.n$28.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.n$28` v0 @kind this, `java.lang.Class` v1 @kind object, `com.b.a.v` v2 @kind object) @signature `Lcom/b/a/b/a/n$28;.<init>:(Ljava/lang/Class;Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L138ed0.  v0.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` := v1 @kind object;
  #L138ed4.  v0.`com.b.a.b.a.n$28.b` @type ^`com.b.a.v` := v2 @kind object;
  #L138ed8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L138ede.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.n$28` v2 @kind this, `com.b.a.f` v3 @kind object, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/a/n$28;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138ef0.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L138ef6.  v1:= temp @kind object;
  #L138ef8.  v0:= v2.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` @kind object;
  #L138efc.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L138f02.  v0:= temp;
  #L138f04.  if v0 != 0 then goto L138f0c;
  #L138f08.  v0:= 0I;
  #L138f0a.  return v0 @kind object;
  #L138f0c.  v0:= new `com.b.a.b.a.n$28$1`;
  #L138f10.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/n$28$1;.<init>:(Lcom/b/a/b/a/n$28;Ljava/lang/Class;)V` @kind direct;
  #L138f16.  goto L138f0a;
}
procedure `java.lang.String` `toString`(`com.b.a.b.a.n$28` v2 @kind this) @signature `Lcom/b/a/b/a/n$28;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138f28.  v0:= new `java.lang.StringBuilder`;
  #L138f2c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L138f32.  v1:= "Factory[typeHierarchy=" @kind object;
  #L138f36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138f3c.  v0:= temp @kind object;
  #L138f3e.  v1:= v2.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` @kind object;
  #L138f42.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L138f48.  v1:= temp @kind object;
  #L138f4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138f50.  v0:= temp @kind object;
  #L138f52.  v1:= ",adapter=" @kind object;
  #L138f56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138f5c.  v0:= temp @kind object;
  #L138f5e.  v1:= v2.`com.b.a.b.a.n$28.b` @type ^`com.b.a.v` @kind object;
  #L138f62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138f68.  v0:= temp @kind object;
  #L138f6a.  v1:= "]" @kind object;
  #L138f6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138f74.  v0:= temp @kind object;
  #L138f76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L138f7c.  v0:= temp @kind object;
  #L138f7e.  return v0 @kind object;
}

record `com.b.a.b.a.i` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.w` @kind interface {
  `com.b.a.b.c` `com.b.a.b.a.i.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.e` `com.b.a.b.a.i.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.d` `com.b.a.b.a.i.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.a.d` `com.b.a.b.a.i.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.i` v0 @kind this, `com.b.a.b.c` v1 @kind object, `com.b.a.e` v2 @kind object, `com.b.a.b.d` v3 @kind object, `com.b.a.b.a.d` v4 @kind object) @signature `Lcom/b/a/b/a/i;.<init>:(Lcom/b/a/b/c;Lcom/b/a/e;Lcom/b/a/b/d;Lcom/b/a/b/a/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L137058.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13705e.  v0.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` := v1 @kind object;
  #L137062.  v0.`com.b.a.b.a.i.b` @type ^`com.b.a.e` := v2 @kind object;
  #L137066.  v0.`com.b.a.b.a.i.c` @type ^`com.b.a.b.d` := v3 @kind object;
  #L13706a.  v0.`com.b.a.b.a.i.d` @type ^`com.b.a.b.a.d` := v4 @kind object;
  #L13706e.  return @kind void;
}
procedure `com.b.a.b.a.i$b` `a`(`com.b.a.b.a.i` v11 @kind this, `com.b.a.f` v12 @kind object, `java.lang.reflect.Field` v13 @kind object, `java.lang.String` v14 @kind object, `com.b.a.c.a` v15 @kind object, `boolean` v16 , `boolean` v17 ) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/b/a/c/a;ZZ)Lcom/b/a/b/a/i$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L137080.  call temp:= `a`(v15) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L137086.  v0:= temp @kind object;
  #L137088.  call temp:= `a`(v0) @signature `Lcom/b/a/b/i;.a:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L13708e.  v10:= temp;
  #L137090.  v0:= constclass @type ^`com.b.a.a.b` @kind object;
  #L137094.  call temp:= `getAnnotation`(v13, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L13709a.  v0:= temp @kind object;
  #L13709c.  v0:= (`com.b.a.a.b`) v0 @kind object;
  #L1370a0.  v7:= 0I;
  #L1370a2.  if v0 == 0 then goto L1370b6;
  #L1370a6.  v1:= v11.`com.b.a.b.a.i.d` @type ^`com.b.a.b.a.d` @kind object;
  #L1370aa.  v2:= v11.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` @kind object;
  #L1370ae.  call temp:= `a`(v1, v2, v12, v15, v0) @signature `Lcom/b/a/b/a/d;.a:(Lcom/b/a/b/c;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/a/b;)Lcom/b/a/v;` @kind virtual;
  #L1370b4.  v7:= temp @kind object;
  #L1370b6.  if v7 == 0 then goto L1370e6;
  #L1370ba.  v6:= 1I;
  #L1370bc.  if v7 != 0 then goto L1370c8;
  #L1370c0.  call temp:= `a`(v12, v15) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L1370c6.  v7:= temp @kind object;
  #L1370c8.  v0:= new `com.b.a.b.a.i$1`;
  #L1370cc.  v1:= v11 @kind object;
  #L1370ce.  v2:= v14 @kind object;
  #L1370d0.  v3:= v16;
  #L1370d4.  v4:= v17;
  #L1370d8.  v5:= v13 @kind object;
  #L1370da.  v8:= v12 @kind object;
  #L1370dc.  v9:= v15 @kind object;
  #L1370de.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/b/a/b/a/i$1;.<init>:(Lcom/b/a/b/a/i;Ljava/lang/String;ZZLjava/lang/reflect/Field;ZLcom/b/a/v;Lcom/b/a/f;Lcom/b/a/c/a;Z)V` @kind direct;
  #L1370e4.  return v0 @kind object;
  #L1370e6.  v6:= 0I;
  #L1370e8.  goto L1370bc;
}
procedure `java.util.List` `a`(`com.b.a.b.a.i` v5 @kind this, `java.lang.reflect.Field` v6 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1370fc.  v0:= constclass @type ^`com.b.a.a.c` @kind object;
  #L137100.  call temp:= `getAnnotation`(v6, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L137106.  v0:= temp @kind object;
  #L137108.  v0:= (`com.b.a.a.c`) v0 @kind object;
  #L13710c.  if v0 != 0 then goto L137126;
  #L137110.  v0:= v5.`com.b.a.b.a.i.b` @type ^`com.b.a.e` @kind object;
  #L137114.  call temp:= `a`(v0, v6) @signature `Lcom/b/a/e;.a:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind interface;
  #L13711a.  v0:= temp @kind object;
  #L13711c.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L137122.  v0:= temp @kind object;
  #L137124.  return v0 @kind object;
  #L137126.  call temp:= `a`(v0) @signature `Lcom/b/a/a/c;.a:()Ljava/lang/String;` @kind interface;
  #L13712c.  v1:= temp @kind object;
  #L13712e.  call temp:= `b`(v0) @signature `Lcom/b/a/a/c;.b:()[Ljava/lang/String;` @kind interface;
  #L137134.  v2:= temp @kind object;
  #L137136.  v0:= length @variable v2;
  #L137138.  if v0 != 0 then goto L137146;
  #L13713c.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L137142.  v0:= temp @kind object;
  #L137144.  goto L137124;
  #L137146.  v0:= new `java.util.ArrayList`;
  #L13714a.  v3:= length @variable v2;
  #L13714c.  v3:= v3 + 1;
  #L137150.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L137156.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13715c.  v3:= length @variable v2;
  #L13715e.  v1:= 0I;
  #L137160.  if v1 >= v3 then goto L137124;
  #L137164.  v4:= v2[v1] @kind object;
  #L137168.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13716e.  v1:= v1 + 1;
  #L137172.  goto L137160;
}
procedure `java.util.Map` `a`(`com.b.a.b.a.i` v17 @kind this, `com.b.a.f` v18 @kind object, `com.b.a.c.a` v19 @kind object, `java.lang.Class` v20 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;Ljava/lang/Class;)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L137184.  v10:= new `java.util.LinkedHashMap`;
  #L137188.  call `<init>`(v10) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L13718e.  call temp:= `isInterface`(v20) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L137194.  v1:= temp;
  #L137196.  if v1 == 0 then goto L13719e;
  #L13719a.  v1:= v10 @kind object;
  #L13719c.  return v1 @kind object;
  #L13719e.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1371a4.  v12:= temp @kind object;
  #L1371a6.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1371aa.  v0:= v20 @kind object;
  #L1371ae.  if v0 == v1 then goto L1372f0;
  #L1371b2.  call temp:= `getDeclaredFields`(v20) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L1371b8.  v13:= temp @kind object;
  #L1371ba.  v14:= length @variable v13;
  #L1371bc.  v1:= 0I;
  #L1371be.  v11:= v1;
  #L1371c0.  if v11 >= v14 then goto L1372c0;
  #L1371c4.  v3:= v13[v11] @kind object;
  #L1371c8.  v1:= 1I;
  #L1371ca.  v0:= v17 @kind object;
  #L1371ce.  call temp:= `a`(v0, v3, v1) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L1371d4.  v6:= temp;
  #L1371d6.  v1:= 0I;
  #L1371d8.  v0:= v17 @kind object;
  #L1371dc.  call temp:= `a`(v0, v3, v1) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L1371e2.  v7:= temp;
  #L1371e4.  if v6 != 0 then goto L1371f4;
  #L1371e8.  if v7 != 0 then goto L1371f4;
  #L1371ec.  v1:= v11 + 1;
  #L1371f0.  v11:= v1;
  #L1371f2.  goto L1371c0;
  #L1371f4.  v1:= 1I;
  #L1371f6.  call `setAccessible`(v3, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1371fc.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L137202.  v1:= temp @kind object;
  #L137204.  call temp:= `getGenericType`(v3) @signature `Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L13720a.  v2:= temp @kind object;
  #L13720c.  v0:= v20 @kind object;
  #L137210.  call temp:= `a`(v1, v0, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L137216.  v15:= temp @kind object;
  #L137218.  v0:= v17 @kind object;
  #L13721c.  call temp:= `a`(v0, v3) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @kind direct;
  #L137222.  v16:= temp @kind object;
  #L137224.  v8:= 0I;
  #L137226.  v1:= 0I;
  #L137228.  v9:= v1;
  #L13722a.  call temp:= `size`(v16) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L137230.  v1:= temp;
  #L137232.  if v9 >= v1 then goto L13727e;
  #L137236.  v0:= v16 @kind object;
  #L13723a.  call temp:= `get`(v0, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L137240.  v4:= temp @kind object;
  #L137242.  v4:= (`java.lang.String`) v4 @kind object;
  #L137246.  if v9 == 0 then goto L13724c;
  #L13724a.  v6:= 0I;
  #L13724c.  call temp:= `a`(v15) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L137252.  v5:= temp @kind object;
  #L137254.  v1:= v17 @kind object;
  #L137258.  v2:= v18 @kind object;
  #L13725c.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/b/a/c/a;ZZ)Lcom/b/a/b/a/i$b;` @kind direct;
  #L137262.  v1:= temp @kind object;
  #L137264.  call temp:= `put`(v10, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13726a.  v1:= temp @kind object;
  #L13726c.  v1:= (`com.b.a.b.a.i$b`) v1 @kind object;
  #L137270.  if v8 != 0 then goto L1372f6;
  #L137274.  v2:= v9 + 1;
  #L137278.  v9:= v2;
  #L13727a.  v8:= v1 @kind object;
  #L13727c.  goto L13722a;
  #L13727e.  if v8 == 0 then goto L1371ec;
  #L137282.  v1:= new `java.lang.IllegalArgumentException`;
  #L137286.  v2:= new `java.lang.StringBuilder`;
  #L13728a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L137290.  call temp:= `append`(v2, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L137296.  v2:= temp @kind object;
  #L137298.  v3:= " declares multiple JSON fields named " @kind object;
  #L13729c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1372a2.  v2:= temp @kind object;
  #L1372a4.  v3:= v8.`com.b.a.b.a.i$b.h` @type ^`java.lang.String` @kind object;
  #L1372a8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1372ae.  v2:= temp @kind object;
  #L1372b0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1372b6.  v2:= temp @kind object;
  #L1372b8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1372be.  throw v1;
  #L1372c0.  call temp:= `b`(v19) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1372c6.  v1:= temp @kind object;
  #L1372c8.  call temp:= `getGenericSuperclass`(v20) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1372ce.  v2:= temp @kind object;
  #L1372d0.  v0:= v20 @kind object;
  #L1372d4.  call temp:= `a`(v1, v0, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L1372da.  v1:= temp @kind object;
  #L1372dc.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L1372e2.  v19:= temp @kind object;
  #L1372e4.  call temp:= `a`(v19) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L1372ea.  v20:= temp @kind object;
  #L1372ec.  goto L1371a6;
  #L1372f0.  v1:= v10 @kind object;
  #L1372f2.  goto L13719c;
  #L1372f6.  v1:= v8 @kind object;
  #L1372f8.  goto L137274;
}
procedure `boolean` `a`(`java.lang.reflect.Field` v1 @kind object, `boolean` v2 , `com.b.a.b.d` v3 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;ZLcom/b/a/b/d;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L13730c.  call temp:= `getType`(v1) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L137312.  v0:= temp @kind object;
  #L137314.  call temp:= `a`(v3, v0, v2) @signature `Lcom/b/a/b/d;.a:(Ljava/lang/Class;Z)Z` @kind virtual;
  #L13731a.  v0:= temp;
  #L13731c.  if v0 != 0 then goto L137330;
  #L137320.  call temp:= `a`(v3, v1, v2) @signature `Lcom/b/a/b/d;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L137326.  v0:= temp;
  #L137328.  if v0 != 0 then goto L137330;
  #L13732c.  v0:= 1I;
  #L13732e.  return v0;
  #L137330.  v0:= 0I;
  #L137332.  goto L13732e;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.i` v3 @kind this, `com.b.a.f` v4 @kind object, `com.b.a.c.a` v5 @kind object) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L137344.  call temp:= `a`(v5) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L13734a.  v1:= temp @kind object;
  #L13734c.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L137350.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L137356.  v0:= temp;
  #L137358.  if v0 != 0 then goto L137360;
  #L13735c.  v0:= 0I;
  #L13735e.  return v0 @kind object;
  #L137360.  v0:= v3.`com.b.a.b.a.i.a` @type ^`com.b.a.b.c` @kind object;
  #L137364.  call temp:= `a`(v0, v5) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @kind virtual;
  #L13736a.  v2:= temp @kind object;
  #L13736c.  v0:= new `com.b.a.b.a.i$a`;
  #L137370.  call temp:= `a`(v3, v4, v5, v1) @signature `Lcom/b/a/b/a/i;.a:(Lcom/b/a/f;Lcom/b/a/c/a;Ljava/lang/Class;)Ljava/util/Map;` @kind direct;
  #L137376.  v1:= temp @kind object;
  #L137378.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/i$a;.<init>:(Lcom/b/a/b/h;Ljava/util/Map;)V` @kind direct;
  #L13737e.  goto L13735e;
}
procedure `boolean` `a`(`com.b.a.b.a.i` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `boolean` v3 ) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L137390.  v0:= v1.`com.b.a.b.a.i.c` @type ^`com.b.a.b.d` @kind object;
  #L137394.  call temp:= `a`(v2, v3, v0) @signature `Lcom/b/a/b/a/i;.a:(Ljava/lang/reflect/Field;ZLcom/b/a/b/d;)Z` @kind static;
  #L13739a.  v0:= temp;
  #L13739c.  return v0;
}

record `org.b.a.a.d.k` @kind class @AccessFlag PUBLIC {
  `int` `org.b.a.a.d.k.a` @AccessFlag PRIVATE;
  `int` `org.b.a.a.d.k.b` @AccessFlag PRIVATE;
  `int` `org.b.a.a.d.k.c` @AccessFlag PRIVATE;
  `int` `org.b.a.a.d.k.d` @AccessFlag PRIVATE;
  `int`[] `org.b.a.a.d.k.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.a.d.k` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int`[] v5 @kind object) @signature `Lorg/b/a/a/d/k;.<init>:(IIII[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L183c74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L183c7a.  v0.`org.b.a.a.d.k.a` @type ^`int` := v1;
  #L183c7e.  v0.`org.b.a.a.d.k.b` @type ^`int` := v2;
  #L183c82.  v0.`org.b.a.a.d.k.c` @type ^`int` := v3;
  #L183c86.  v0.`org.b.a.a.d.k.d` @type ^`int` := v4;
  #L183c8a.  v0.`org.b.a.a.d.k.e` @type ^`int`[] := v5 @kind object;
  #L183c8e.  return @kind void;
}
procedure `int` `a`(`int` v1 , `int` v2 ) @signature `Lorg/b/a/a/d/k;.a:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L183ca0.  v0:= v2 ^< 16;
  #L183ca4.  v0:= v0 ^| v1 @kind int;
  #L183ca6.  return v0;
}
procedure `int` `a`(`int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lorg/b/a/a/d/k;.a:(IIII)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L183cb8.  v0:= v3 ^< 8;
  #L183cbc.  v0:= v0 ^| v2 @kind int;
  #L183cbe.  v1:= v5 ^< 8;
  #L183cc2.  v1:= v1 ^| v4 @kind int;
  #L183cc4.  call temp:= `a`(v0, v1) @signature `Lorg/b/a/a/d/k;.a:(II)I` @kind static;
  #L183cca.  v0:= temp;
  #L183ccc.  return v0;
}
procedure `int` `a`(`int` v4 , `int` v5 , `int` v6 , `int` v7 , `int` v8 , `int` v9 , `int` v10 , `int` v11 ) @signature `Lorg/b/a/a/d/k;.a:(IIIIIIII)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L183ce0.  v0:= v5 ^< 4;
  #L183ce4.  v0:= v0 ^| v4 @kind int;
  #L183ce6.  v1:= v7 ^< 4;
  #L183cea.  v1:= v1 ^| v6 @kind int;
  #L183cec.  v2:= v9 ^< 4;
  #L183cf0.  v2:= v2 ^| v8 @kind int;
  #L183cf2.  v3:= v11 ^< 4;
  #L183cf6.  v3:= v3 ^| v10 @kind int;
  #L183cf8.  call temp:= `a`(v0, v1, v2, v3) @signature `Lorg/b/a/a/d/k;.a:(IIII)I` @kind static;
  #L183cfe.  v0:= temp;
  #L183d00.  return v0;
}
procedure `int` `a`(`org.b.a.a.d.k` v3 @kind this, `int` v4 ) @signature `Lorg/b/a/a/d/k;.a:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L183d14.  v0:= v3.`org.b.a.a.d.k.e` @type ^`int`[] @kind object;
  #L183d18.  v1:= v3.`org.b.a.a.d.k.a` @type ^`int`;
  #L183d1c.  v1:= v4 ^> v1 @kind int;
  #L183d20.  v0:= v0[v1];
  #L183d24.  v1:= v3.`org.b.a.a.d.k.b` @type ^`int`;
  #L183d28.  v1:= v1 ^& v4 @kind int;
  #L183d2a.  v2:= v3.`org.b.a.a.d.k.c` @type ^`int`;
  #L183d2e.  v1:= v1 ^< v2 @kind int;
  #L183d30.  v0:= v0 ^> v1 @kind int;
  #L183d32.  v1:= v3.`org.b.a.a.d.k.d` @type ^`int`;
  #L183d36.  v0:= v0 ^& v1 @kind int;
  #L183d38.  return v0;
}

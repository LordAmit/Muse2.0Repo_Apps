record `org.b.a.a.m` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.b$a` `org.b.a.a.m.a` @AccessFlag PRIVATE;
  `org.b.a.a.c.l` `org.b.a.a.m.b` @AccessFlag PRIVATE;
  `boolean` `org.b.a.a.m.c` @AccessFlag PRIVATE;
  `short` `org.b.a.a.m.d` @AccessFlag PRIVATE;
  `int` `org.b.a.a.m.e` @AccessFlag PRIVATE;
  `int`[] `org.b.a.a.m.f` @AccessFlag PRIVATE;
  `int` `org.b.a.a.m.g` @AccessFlag PRIVATE;
  `int` `org.b.a.a.m.h` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.a.m.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.a.m` v1 @kind this, `org.b.a.a.c.l` v2 @kind object) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L186098.  call `<init>`(v1) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L18609e.  v1.`org.b.a.a.m.b` @type ^`org.b.a.a.c.l` := v2 @kind object;
  #L1860a2.  v0:= 0I;
  #L1860a4.  v1.`org.b.a.a.m.c` @type ^`boolean` := v0 @kind boolean;
  #L1860a8.  v0:= 0I;
  #L1860aa.  v1.`org.b.a.a.m.i` @type ^`org.b.a.a.b` := v0 @kind object;
  #L1860ae.  v0:= 4I;
  #L1860b0.  v0:= new `int`[v0];
  #L1860b4.  v1.`org.b.a.a.m.f` @type ^`int`[] := v0 @kind object;
  #L1860b8.  call `d`(v1) @signature `Lorg/b/a/a/m;.d:()V` @kind virtual;
  #L1860be.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.m` v1 @kind this, `org.b.a.a.c.l` v2 @kind object, `boolean` v3 , `org.b.a.a.b` v4 @kind object) @signature `Lorg/b/a/a/m;.<init>:(Lorg/b/a/a/c/l;ZLorg/b/a/a/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1860d0.  call `<init>`(v1) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L1860d6.  v1.`org.b.a.a.m.b` @type ^`org.b.a.a.c.l` := v2 @kind object;
  #L1860da.  v1.`org.b.a.a.m.c` @type ^`boolean` := v3 @kind boolean;
  #L1860de.  v1.`org.b.a.a.m.i` @type ^`org.b.a.a.b` := v4 @kind object;
  #L1860e2.  v0:= 4I;
  #L1860e4.  v0:= new `int`[v0];
  #L1860e8.  v1.`org.b.a.a.m.f` @type ^`int`[] := v0 @kind object;
  #L1860ec.  call `d`(v1) @signature `Lorg/b/a/a/m;.d:()V` @kind virtual;
  #L1860f2.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.m` v1 @kind this) @signature `Lorg/b/a/a/m;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L186104.  v0:= v1.`org.b.a.a.m.i` @type ^`org.b.a.a.b` @kind object;
  #L186108.  if v0 != 0 then goto L18611a;
  #L18610c.  v0:= v1.`org.b.a.a.m.b` @type ^`org.b.a.a.c.l` @kind object;
  #L186110.  call temp:= `b`(v0) @signature `Lorg/b/a/a/c/l;.b:()Ljava/lang/String;` @kind virtual;
  #L186116.  v0:= temp @kind object;
  #L186118.  return v0 @kind object;
  #L18611a.  v0:= v1.`org.b.a.a.m.i` @type ^`org.b.a.a.b` @kind object;
  #L18611e.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L186124.  v0:= temp @kind object;
  #L186126.  goto L186118;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.m` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/m;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L186138.  v6:= 64I;
  #L18613c.  v0:= v9 + v10 @kind int;
  #L186140.  if v9 >= v0 then goto L1861ec;
  #L186144.  v1:= v7.`org.b.a.a.m.b` @type ^`org.b.a.a.c.l` @kind object;
  #L186148.  v2:= v8[v9] @kind byte;
  #L18614c.  call temp:= `a`(v1, v2) @signature `Lorg/b/a/a/c/l;.a:(B)S` @kind virtual;
  #L186152.  v1:= temp;
  #L186154.  v2:= 250I;
  #L186158.  if v1 >= v2 then goto L186168;
  #L18615c.  v2:= v7.`org.b.a.a.m.g` @type ^`int`;
  #L186160.  v2:= v2 + 1;
  #L186164.  v7.`org.b.a.a.m.g` @type ^`int` := v2;
  #L186168.  if v1 >= v6 then goto L1861ba;
  #L18616c.  v2:= v7.`org.b.a.a.m.h` @type ^`int`;
  #L186170.  v2:= v2 + 1;
  #L186174.  v7.`org.b.a.a.m.h` @type ^`int` := v2;
  #L186178.  v2:= v7.`org.b.a.a.m.d` @type ^`short` @kind short;
  #L18617c.  if v2 >= v6 then goto L1861ba;
  #L186180.  v2:= v7.`org.b.a.a.m.e` @type ^`int`;
  #L186184.  v2:= v2 + 1;
  #L186188.  v7.`org.b.a.a.m.e` @type ^`int` := v2;
  #L18618c.  v2:= v7.`org.b.a.a.m.c` @type ^`boolean` @kind boolean;
  #L186190.  if v2 != 0 then goto L1861c4;
  #L186194.  v2:= v7.`org.b.a.a.m.f` @type ^`int`[] @kind object;
  #L186198.  v3:= v7.`org.b.a.a.m.b` @type ^`org.b.a.a.c.l` @kind object;
  #L18619c.  v4:= v7.`org.b.a.a.m.d` @type ^`short` @kind short;
  #L1861a0.  v4:= v4 * 64;
  #L1861a4.  v4:= v4 + v1 @kind int;
  #L1861a6.  call temp:= `a`(v3, v4) @signature `Lorg/b/a/a/c/l;.a:(I)B` @kind virtual;
  #L1861ac.  v3:= temp;
  #L1861ae.  v4:= v2[v3];
  #L1861b2.  v4:= v4 + 1;
  #L1861b6.  v2[v3]:= v4;
  #L1861ba.  v7.`org.b.a.a.m.d` @type ^`short` := v1 @kind char;
  #L1861be.  v9:= v9 + 1;
  #L1861c2.  goto L186140;
  #L1861c4.  v2:= v7.`org.b.a.a.m.f` @type ^`int`[] @kind object;
  #L1861c8.  v3:= v7.`org.b.a.a.m.b` @type ^`org.b.a.a.c.l` @kind object;
  #L1861cc.  v4:= v1 * 64;
  #L1861d0.  v5:= v7.`org.b.a.a.m.d` @type ^`short` @kind short;
  #L1861d4.  v4:= v4 + v5 @kind int;
  #L1861d6.  call temp:= `a`(v3, v4) @signature `Lorg/b/a/a/c/l;.a:(I)B` @kind virtual;
  #L1861dc.  v3:= temp;
  #L1861de.  v4:= v2[v3];
  #L1861e2.  v4:= v4 + 1;
  #L1861e6.  v2[v3]:= v4;
  #L1861ea.  goto L1861ba;
  #L1861ec.  v0:= v7.`org.b.a.a.m.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1861f0.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1861f4.  if v0 != v1 then goto L186222;
  #L1861f8.  v0:= v7.`org.b.a.a.m.e` @type ^`int`;
  #L1861fc.  v1:= 1024I;
  #L186200.  if v0 <= v1 then goto L186222;
  #L186204.  call temp:= `b`(v7) @signature `Lorg/b/a/a/m;.b:()F` @kind virtual;
  #L18620a.  v0:= temp;
  #L18620c.  v1:= 1064514355I;
  #L186212.  v1:= fcmpl(v0, v1);
  #L186216.  if v1 <= 0 then goto L186228;
  #L18621a.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18621e.  v7.`org.b.a.a.m.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L186222.  v0:= v7.`org.b.a.a.m.a` @type ^`org.b.a.a.b$a` @kind object;
  #L186226.  return v0 @kind object;
  #L186228.  v1:= 1028443341I;
  #L18622e.  v0:= fcmpg(v0, v1);
  #L186232.  if v0 >= 0 then goto L186222;
  #L186236.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L18623a.  v7.`org.b.a.a.m.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18623e.  goto L186222;
}
procedure `float` `b`(`org.b.a.a.m` v3 @kind this) @signature `Lorg/b/a/a/m;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L186250.  v2:= 1.0F;
  #L186254.  v0:= v3.`org.b.a.a.m.e` @type ^`int`;
  #L186258.  if v0 <= 0 then goto L1862a0;
  #L18625c.  v0:= v3.`org.b.a.a.m.f` @type ^`int`[] @kind object;
  #L186260.  v1:= 3I;
  #L186262.  v0:= v0[v1];
  #L186266.  v0:= (`float`) v0 @kind i2f;
  #L186268.  v0:= v0 * v2 @kind float;
  #L18626a.  v1:= v3.`org.b.a.a.m.e` @type ^`int`;
  #L18626e.  v1:= (`float`) v1 @kind i2f;
  #L186270.  v0:= v0 / v1 @kind float;
  #L186272.  v1:= v3.`org.b.a.a.m.b` @type ^`org.b.a.a.c.l` @kind object;
  #L186276.  call temp:= `a`(v1) @signature `Lorg/b/a/a/c/l;.a:()F` @kind virtual;
  #L18627c.  v1:= temp;
  #L18627e.  v0:= v0 / v1 @kind float;
  #L186280.  v1:= v3.`org.b.a.a.m.h` @type ^`int`;
  #L186284.  v1:= (`float`) v1 @kind i2f;
  #L186286.  v0:= v0 * v1 @kind float;
  #L186288.  v1:= v3.`org.b.a.a.m.g` @type ^`int`;
  #L18628c.  v1:= (`float`) v1 @kind i2f;
  #L18628e.  v0:= v0 / v1 @kind float;
  #L186290.  v1:= fcmpl(v0, v2);
  #L186294.  if v1 < 0 then goto L18629e;
  #L186298.  v0:= 1065185444I;
  #L18629e.  return v0;
  #L1862a0.  v0:= 1008981770I;
  #L1862a6.  goto L18629e;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.m` v1 @kind this) @signature `Lorg/b/a/a/m;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1862b8.  v0:= v1.`org.b.a.a.m.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1862bc.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.m` v3 @kind this) @signature `Lorg/b/a/a/m;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1862d0.  v1:= 0I;
  #L1862d2.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1862d6.  v3.`org.b.a.a.m.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1862da.  v0:= 255I;
  #L1862de.  v3.`org.b.a.a.m.d` @type ^`short` := v0 @kind char;
  #L1862e2.  v0:= v1;
  #L1862e4.  v2:= 4I;
  #L1862e6.  if v0 >= v2 then goto L1862f8;
  #L1862ea.  v2:= v3.`org.b.a.a.m.f` @type ^`int`[] @kind object;
  #L1862ee.  v2[v0]:= v1;
  #L1862f2.  v0:= v0 + 1;
  #L1862f6.  goto L1862e4;
  #L1862f8.  v3.`org.b.a.a.m.e` @type ^`int` := v1;
  #L1862fc.  v3.`org.b.a.a.m.g` @type ^`int` := v1;
  #L186300.  v3.`org.b.a.a.m.h` @type ^`int` := v1;
  #L186304.  return @kind void;
}

record `org.b.a.a.g` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.g.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.g.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.f` `org.b.a.a.g.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.g.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.g.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L185018.  v0:= new `org.b.a.a.d.f`;
  #L18501c.  call `<init>`(v0) @signature `Lorg/b/a/a/d/f;.<init>:()V` @kind direct;
  #L185022.  `@@org.b.a.a.g.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L185026.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.g` v2 @kind this) @signature `Lorg/b/a/a/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L185038.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L18503e.  v0:= new `org.b.a.a.d.b`;
  #L185042.  v1:= `@@org.b.a.a.g.e` @type ^`org.b.a.a.d.m` @kind object;
  #L185046.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L18504c.  v2.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L185050.  v0:= new `org.b.a.a.b.f`;
  #L185054.  call `<init>`(v0) @signature `Lorg/b/a/a/b/f;.<init>:()V` @kind direct;
  #L18505a.  v2.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` := v0 @kind object;
  #L18505e.  v0:= 2I;
  #L185060.  v0:= new `byte`[v0];
  #L185064.  v2.`org.b.a.a.g.d` @type ^`byte`[] := v0 @kind object;
  #L185068.  call `d`(v2) @signature `Lorg/b/a/a/g;.d:()V` @kind virtual;
  #L18506e.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L185080.  v0:= `@@org.b.a.b.h` @type ^`java.lang.String` @kind object;
  #L185084.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.g` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/g;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L185098.  v6:= 1I;
  #L18509a.  v5:= 0I;
  #L18509c.  v1:= v9 + v10 @kind int;
  #L1850a0.  v0:= v9;
  #L1850a2.  if v0 >= v1 then goto L1850c2;
  #L1850a6.  v2:= v7.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L1850aa.  v3:= v8[v0] @kind byte;
  #L1850ae.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L1850b4.  v2:= temp;
  #L1850b6.  if v2 != v6 then goto L185112;
  #L1850ba.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1850be.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1850c2.  v0:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L1850c6.  v1:= v1 + -1;
  #L1850ca.  v1:= v8[v1] @kind byte;
  #L1850ce.  v0[v5]:= v1 @kind byte;
  #L1850d2.  v0:= v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1850d6.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1850da.  if v0 != v1 then goto L18510c;
  #L1850de.  v0:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L1850e2.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/f;.c:()Z` @kind virtual;
  #L1850e8.  v0:= temp;
  #L1850ea.  if v0 == 0 then goto L18510c;
  #L1850ee.  call temp:= `b`(v7) @signature `Lorg/b/a/a/g;.b:()F` @kind virtual;
  #L1850f4.  v0:= temp;
  #L1850f6.  v1:= 1064514355I;
  #L1850fc.  v0:= fcmpl(v0, v1);
  #L185100.  if v0 <= 0 then goto L18510c;
  #L185104.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L185108.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L18510c.  v0:= v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L185110.  return v0 @kind object;
  #L185112.  v3:= 2I;
  #L185114.  if v2 != v3 then goto L185122;
  #L185118.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18511c.  v7.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L185120.  goto L1850c2;
  #L185122.  if v2 != 0 then goto L185150;
  #L185126.  v2:= v7.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L18512a.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L185130.  v2:= temp;
  #L185132.  if v0 != v9 then goto L185156;
  #L185136.  v3:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L18513a.  v4:= v8[v9] @kind byte;
  #L18513e.  v3[v6]:= v4 @kind byte;
  #L185142.  v3:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L185146.  v4:= v7.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L18514a.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/f;.a:([BII)V` @kind virtual;
  #L185150.  v0:= v0 + 1;
  #L185154.  goto L1850a2;
  #L185156.  v3:= v7.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L18515a.  v4:= v0 + -1;
  #L18515e.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/f;.a:([BII)V` @kind virtual;
  #L185164.  goto L185150;
}
procedure `float` `b`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L185178.  v0:= v1.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L18517c.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/f;.a:()F` @kind virtual;
  #L185182.  v0:= temp;
  #L185184.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.g` v1 @kind this) @signature `Lorg/b/a/a/g;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L185198.  v0:= v1.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` @kind object;
  #L18519c.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.g` v2 @kind this) @signature `Lorg/b/a/a/g;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1851b0.  v0:= v2.`org.b.a.a.g.a` @type ^`org.b.a.a.d.b` @kind object;
  #L1851b4.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L1851ba.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1851be.  v2.`org.b.a.a.g.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1851c2.  v0:= v2.`org.b.a.a.g.c` @type ^`org.b.a.a.b.f` @kind object;
  #L1851c6.  call `b`(v0) @signature `Lorg/b/a/a/b/f;.b:()V` @kind virtual;
  #L1851cc.  v0:= v2.`org.b.a.a.g.d` @type ^`byte`[] @kind object;
  #L1851d0.  v1:= 0I;
  #L1851d2.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L1851d8.  return @kind void;
}

record `a.a.e.l` @kind class @AccessFlag FINAL {
  `java.util.concurrent.CountDownLatch` `a.a.e.l.a` @AccessFlag PRIVATE_FINAL;
  `long` `a.a.e.l.b` @AccessFlag PRIVATE;
  `long` `a.a.e.l.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0814b0.  v2:= -1L;
  #L0814b4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0814ba.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L0814be.  v1:= 1I;
  #L0814c0.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L0814c6.  v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L0814ca.  v4.`a.a.e.l.b` @type ^`long` := v2 @kind wide;
  #L0814ce.  v4.`a.a.e.l.c` @type ^`long` := v2 @kind wide;
  #L0814d2.  return @kind void;
}
procedure `void` `a`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0814e4.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L0814e8.  v2:= -1L;
  #L0814ec.  v0:= lcmp(v0, v2);
  #L0814f0.  if v0 == 0 then goto L081500;
  #L0814f4.  v0:= new `java.lang.IllegalStateException`;
  #L0814f8.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L0814fe.  throw v0;
  #L081500.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L081506.  v0:= temp @kind wide;
  #L081508.  v4.`a.a.e.l.b` @type ^`long` := v0 @kind wide;
  #L08150c.  return @kind void;
}
procedure `void` `b`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L081520.  v2:= -1L;
  #L081524.  v0:= v4.`a.a.e.l.c` @type ^`long` @kind wide;
  #L081528.  v0:= lcmp(v0, v2);
  #L08152c.  if v0 != 0 then goto L08153c;
  #L081530.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L081534.  v0:= lcmp(v0, v2);
  #L081538.  if v0 != 0 then goto L081548;
  #L08153c.  v0:= new `java.lang.IllegalStateException`;
  #L081540.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L081546.  throw v0;
  #L081548.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L08154e.  v0:= temp @kind wide;
  #L081550.  v4.`a.a.e.l.c` @type ^`long` := v0 @kind wide;
  #L081554.  v0:= v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L081558.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L08155e.  return @kind void;
}
procedure `void` `c`(`a.a.e.l` v4 @kind this) @signature `La/a/e/l;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L081570.  v2:= -1L;
  #L081574.  v0:= v4.`a.a.e.l.c` @type ^`long` @kind wide;
  #L081578.  v0:= lcmp(v0, v2);
  #L08157c.  if v0 != 0 then goto L08158c;
  #L081580.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L081584.  v0:= lcmp(v0, v2);
  #L081588.  if v0 != 0 then goto L081598;
  #L08158c.  v0:= new `java.lang.IllegalStateException`;
  #L081590.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L081596.  throw v0;
  #L081598.  v0:= v4.`a.a.e.l.b` @type ^`long` @kind wide;
  #L08159c.  v2:= 1L;
  #L0815a0.  v0:= v0 - v2 @kind long;
  #L0815a2.  v4.`a.a.e.l.c` @type ^`long` := v0 @kind wide;
  #L0815a6.  v0:= v4.`a.a.e.l.a` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L0815aa.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L0815b0.  return @kind void;
}

record `a.a.e.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `b.f` `@@a.a.e.e.a` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@a.a.e.e.b` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@a.a.e.e.c` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@a.a.e.e.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L07bf10.  v7:= 8I;
  #L07bf14.  v10:= 4I;
  #L07bf16.  v9:= 3I;
  #L07bf18.  v6:= 1I;
  #L07bf1a.  v1:= 0I;
  #L07bf1c.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L07bf20.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07bf26.  v0:= temp @kind object;
  #L07bf28.  `@@a.a.e.e.a` @type ^`b.f` := v0 @kind object;
  #L07bf2c.  v0:= 10I;
  #L07bf30.  v0:= new `java.lang.String`[v0];
  #L07bf34.  v2:= "DATA" @kind object;
  #L07bf38.  v0[v1]:= v2 @kind object;
  #L07bf3c.  v2:= "HEADERS" @kind object;
  #L07bf40.  v0[v6]:= v2 @kind object;
  #L07bf44.  v2:= 2I;
  #L07bf46.  v3:= "PRIORITY" @kind object;
  #L07bf4a.  v0[v2]:= v3 @kind object;
  #L07bf4e.  v2:= "RST_STREAM" @kind object;
  #L07bf52.  v0[v9]:= v2 @kind object;
  #L07bf56.  v2:= "SETTINGS" @kind object;
  #L07bf5a.  v0[v10]:= v2 @kind object;
  #L07bf5e.  v2:= 5I;
  #L07bf60.  v3:= "PUSH_PROMISE" @kind object;
  #L07bf64.  v0[v2]:= v3 @kind object;
  #L07bf68.  v2:= 6I;
  #L07bf6a.  v3:= "PING" @kind object;
  #L07bf6e.  v0[v2]:= v3 @kind object;
  #L07bf72.  v2:= 7I;
  #L07bf74.  v3:= "GOAWAY" @kind object;
  #L07bf78.  v0[v2]:= v3 @kind object;
  #L07bf7c.  v2:= "WINDOW_UPDATE" @kind object;
  #L07bf80.  v0[v7]:= v2 @kind object;
  #L07bf84.  v2:= 9I;
  #L07bf88.  v3:= "CONTINUATION" @kind object;
  #L07bf8c.  v0[v2]:= v3 @kind object;
  #L07bf90.  `@@a.a.e.e.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L07bf94.  v0:= 64I;
  #L07bf98.  v0:= new `java.lang.String`[v0];
  #L07bf9c.  `@@a.a.e.e.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L07bfa0.  v0:= 256I;
  #L07bfa4.  v0:= new `java.lang.String`[v0];
  #L07bfa8.  `@@a.a.e.e.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L07bfac.  v0:= v1;
  #L07bfae.  v2:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07bfb2.  v2:= length @variable v2;
  #L07bfb4.  if v0 >= v2 then goto L07bff2;
  #L07bfb8.  v2:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07bfbc.  v3:= "%8s" @kind object;
  #L07bfc0.  v4:= new `java.lang.Object`[v6];
  #L07bfc4.  call temp:= `toBinaryString`(v0) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L07bfca.  v5:= temp @kind object;
  #L07bfcc.  v4[v1]:= v5 @kind object;
  #L07bfd0.  call temp:= `a`(v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07bfd6.  v3:= temp @kind object;
  #L07bfd8.  v4:= 32I;
  #L07bfdc.  v5:= 48I;
  #L07bfe0.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L07bfe6.  v3:= temp @kind object;
  #L07bfe8.  v2[v0]:= v3 @kind object;
  #L07bfec.  v0:= v0 + 1;
  #L07bff0.  goto L07bfae;
  #L07bff2.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07bff6.  v2:= "" @kind object;
  #L07bffa.  v0[v1]:= v2 @kind object;
  #L07bffe.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c002.  v2:= "END_STREAM" @kind object;
  #L07c006.  v0[v6]:= v2 @kind object;
  #L07c00a.  v3:= new `int`[v6];
  #L07c00e.  v3[v1]:= v6;
  #L07c012.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c016.  v2:= "PADDED" @kind object;
  #L07c01a.  v0[v7]:= v2 @kind object;
  #L07c01e.  v2:= length @variable v3;
  #L07c020.  v0:= v1;
  #L07c022.  if v0 >= v2 then goto L07c06a;
  #L07c026.  v4:= v3[v0];
  #L07c02a.  v5:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c02e.  v6:= v4 ^| 8;
  #L07c032.  v7:= new `java.lang.StringBuilder`;
  #L07c036.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07c03c.  v8:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c040.  v4:= v8[v4] @kind object;
  #L07c044.  call temp:= `append`(v7, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c04a.  v4:= temp @kind object;
  #L07c04c.  v7:= "|PADDED" @kind object;
  #L07c050.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c056.  v4:= temp @kind object;
  #L07c058.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07c05e.  v4:= temp @kind object;
  #L07c060.  v5[v6]:= v4 @kind object;
  #L07c064.  v0:= v0 + 1;
  #L07c068.  goto L07c022;
  #L07c06a.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c06e.  v2:= "END_HEADERS" @kind object;
  #L07c072.  v0[v10]:= v2 @kind object;
  #L07c076.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c07a.  v2:= 32I;
  #L07c07e.  v4:= "PRIORITY" @kind object;
  #L07c082.  v0[v2]:= v4 @kind object;
  #L07c086.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c08a.  v2:= 36I;
  #L07c08e.  v4:= "END_HEADERS|PRIORITY" @kind object;
  #L07c092.  v0[v2]:= v4 @kind object;
  #L07c096.  v4:= new `int`[v9];
  #L07c09a.  goto L07c198;
  #L07c0a0.  v5:= length @variable v4;
  #L07c0a2.  v2:= v1;
  #L07c0a4.  if v2 >= v5 then goto L07c16a;
  #L07c0a8.  v6:= v4[v2];
  #L07c0ac.  v7:= length @variable v3;
  #L07c0ae.  v0:= v1;
  #L07c0b0.  if v0 >= v7 then goto L07c162;
  #L07c0b4.  v8:= v3[v0];
  #L07c0b8.  v9:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c0bc.  v10:= v8 ^| v6 @kind int;
  #L07c0c0.  v11:= new `java.lang.StringBuilder`;
  #L07c0c4.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07c0ca.  v12:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c0ce.  v12:= v12[v8] @kind object;
  #L07c0d2.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c0d8.  v11:= temp @kind object;
  #L07c0da.  v12:= 124I;
  #L07c0de.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c0e4.  v11:= temp @kind object;
  #L07c0e6.  v12:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c0ea.  v12:= v12[v6] @kind object;
  #L07c0ee.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c0f4.  v11:= temp @kind object;
  #L07c0f6.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07c0fc.  v11:= temp @kind object;
  #L07c0fe.  v9[v10]:= v11 @kind object;
  #L07c102.  v9:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c106.  v10:= v8 ^| v6 @kind int;
  #L07c10a.  v10:= v10 ^| 8;
  #L07c10e.  v11:= new `java.lang.StringBuilder`;
  #L07c112.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07c118.  v12:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c11c.  v8:= v12[v8] @kind object;
  #L07c120.  call temp:= `append`(v11, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c126.  v8:= temp @kind object;
  #L07c128.  v11:= 124I;
  #L07c12c.  call temp:= `append`(v8, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c132.  v8:= temp @kind object;
  #L07c134.  v11:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c138.  v11:= v11[v6] @kind object;
  #L07c13c.  call temp:= `append`(v8, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c142.  v8:= temp @kind object;
  #L07c144.  v11:= "|PADDED" @kind object;
  #L07c148.  call temp:= `append`(v8, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c14e.  v8:= temp @kind object;
  #L07c150.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07c156.  v8:= temp @kind object;
  #L07c158.  v9[v10]:= v8 @kind object;
  #L07c15c.  v0:= v0 + 1;
  #L07c160.  goto L07c0b0;
  #L07c162.  v0:= v2 + 1;
  #L07c166.  v2:= v0;
  #L07c168.  goto L07c0a4;
  #L07c16a.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c16e.  v0:= length @variable v0;
  #L07c170.  if v1 >= v0 then goto L07c196;
  #L07c174.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c178.  v0:= v0[v1] @kind object;
  #L07c17c.  if v0 != 0 then goto L07c190;
  #L07c180.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c184.  v2:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07c188.  v2:= v2[v1] @kind object;
  #L07c18c.  v0[v1]:= v2 @kind object;
  #L07c190.  v1:= v1 + 1;
  #L07c194.  goto L07c16a;
  #L07c196.  return @kind void;
  #L07c198.  v4:= (4I, 32I, 36I) @kind object;
  #L07c1ab.  goto L07c0a0;
}
procedure `void` `<init>`(`a.a.e.e` v0 @kind this) @signature `La/a/e/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L07c1bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07c1c2.  return @kind void;
}
procedure `java.lang.IllegalArgumentException` `a`(`java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `La/a/e/e;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L07c1d4.  v0:= new `java.lang.IllegalArgumentException`;
  #L07c1d8.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07c1de.  v1:= temp @kind object;
  #L07c1e0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07c1e6.  throw v0;
}
procedure `java.lang.String` `a`(`byte` v3 , `byte` v4 ) @signature `La/a/e/e;.a:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L07c1f8.  if v4 != 0 then goto L07c202;
  #L07c1fc.  v0:= "" @kind object;
  #L07c200.  return v0 @kind object;
  #L07c202.  goto L07c284;
  #L07c208.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c20c.  v0:= length @variable v0;
  #L07c20e.  if v4 >= v0 then goto L07c25a;
  #L07c212.  v0:= `@@a.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L07c216.  v0:= v0[v4] @kind object;
  #L07c21a.  v1:= 5I;
  #L07c21c.  if v3 != v1 then goto L07c264;
  #L07c220.  v1:= v4 ^& 4;
  #L07c224.  if v1 == 0 then goto L07c264;
  #L07c228.  v1:= "HEADERS" @kind object;
  #L07c22c.  v2:= "PUSH_PROMISE" @kind object;
  #L07c230.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L07c236.  v0:= temp @kind object;
  #L07c238.  goto L07c200;
  #L07c23a.  v0:= 1I;
  #L07c23c.  if v4 != v0 then goto L07c246;
  #L07c240.  v0:= "ACK" @kind object;
  #L07c244.  goto L07c200;
  #L07c246.  v0:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07c24a.  v0:= v0[v4] @kind object;
  #L07c24e.  goto L07c200;
  #L07c250.  v0:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07c254.  v0:= v0[v4] @kind object;
  #L07c258.  goto L07c200;
  #L07c25a.  v0:= `@@a.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L07c25e.  v0:= v0[v4] @kind object;
  #L07c262.  goto L07c21a;
  #L07c264.  if v3 != 0 then goto L07c200;
  #L07c268.  v1:= v4 ^& 32;
  #L07c26c.  if v1 == 0 then goto L07c200;
  #L07c270.  v1:= "PRIORITY" @kind object;
  #L07c274.  v2:= "COMPRESSED" @kind object;
  #L07c278.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L07c27e.  v0:= temp @kind object;
  #L07c280.  goto L07c200;
  #L07c282.  
  #L07c284.  switch v3
                  | 2 => goto L07c250
                  | 3 => goto L07c250
                  | 4 => goto L07c23a
                  | 5 => goto L07c208
                  | 6 => goto L07c23a
                  | 7 => goto L07c250
                  | 8 => goto L07c250
                  | else => goto L07c208;
}
procedure `java.lang.String` `a`(`boolean` v7 , `int` v8 , `int` v9 , `byte` v10 , `byte` v11 ) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07c2b8.  v6:= 1I;
  #L07c2ba.  v5:= 0I;
  #L07c2bc.  v0:= `@@a.a.e.e.d` @type ^`java.lang.String`[] @kind object;
  #L07c2c0.  v0:= length @variable v0;
  #L07c2c2.  if v10 >= v0 then goto L07c31c;
  #L07c2c6.  v0:= `@@a.a.e.e.d` @type ^`java.lang.String`[] @kind object;
  #L07c2ca.  v0:= v0[v10] @kind object;
  #L07c2ce.  call temp:= `a`(v10, v11) @signature `La/a/e/e;.a:(BB)Ljava/lang/String;` @kind static;
  #L07c2d4.  v2:= temp @kind object;
  #L07c2d6.  v3:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L07c2da.  v1:= 5I;
  #L07c2dc.  v4:= new `java.lang.Object`[v1];
  #L07c2e0.  if v7 == 0 then goto L07c33a;
  #L07c2e4.  v1:= "<<" @kind object;
  #L07c2e8.  v4[v5]:= v1 @kind object;
  #L07c2ec.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07c2f2.  v1:= temp @kind object;
  #L07c2f4.  v4[v6]:= v1 @kind object;
  #L07c2f8.  v1:= 2I;
  #L07c2fa.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07c300.  v5:= temp @kind object;
  #L07c302.  v4[v1]:= v5 @kind object;
  #L07c306.  v1:= 3I;
  #L07c308.  v4[v1]:= v0 @kind object;
  #L07c30c.  v0:= 4I;
  #L07c30e.  v4[v0]:= v2 @kind object;
  #L07c312.  call temp:= `a`(v3, v4) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07c318.  v0:= temp @kind object;
  #L07c31a.  return v0 @kind object;
  #L07c31c.  v0:= "0x%02x" @kind object;
  #L07c320.  v1:= new `java.lang.Object`[v6];
  #L07c324.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L07c32a.  v2:= temp @kind object;
  #L07c32c.  v1[v5]:= v2 @kind object;
  #L07c330.  call temp:= `a`(v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07c336.  v0:= temp @kind object;
  #L07c338.  goto L07c2ce;
  #L07c33a.  v1:= ">>" @kind object;
  #L07c33e.  goto L07c2e8;
}
procedure `java.io.IOException` `b`(`java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L07c350.  v0:= new `java.io.IOException`;
  #L07c354.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07c35a.  v1:= temp @kind object;
  #L07c35c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07c362.  throw v0;
}

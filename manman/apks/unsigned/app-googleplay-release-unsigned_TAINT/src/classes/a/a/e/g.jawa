record `a.a.e.g` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `boolean` `a.a.e.g.b` @AccessFlag FINAL;
  `a.a.e.g$b` `a.a.e.g.c` @AccessFlag FINAL;
  `java.util.Map` `a.a.e.g.d` @AccessFlag FINAL;
  `java.lang.String` `a.a.e.g.e` @AccessFlag FINAL;
  `int` `a.a.e.g.f` @AccessFlag ;
  `int` `a.a.e.g.g` @AccessFlag ;
  `boolean` `a.a.e.g.h` @AccessFlag ;
  `a.a.e.m` `a.a.e.g.i` @AccessFlag FINAL;
  `long` `a.a.e.g.j` @AccessFlag ;
  `long` `a.a.e.g.k` @AccessFlag ;
  `a.a.e.n` `a.a.e.g.l` @AccessFlag ;
  `a.a.e.n` `a.a.e.g.m` @AccessFlag FINAL;
  `boolean` `a.a.e.g.n` @AccessFlag ;
  `java.net.Socket` `a.a.e.g.o` @AccessFlag FINAL;
  `a.a.e.j` `a.a.e.g.p` @AccessFlag FINAL;
  `a.a.e.g$c` `a.a.e.g.q` @AccessFlag FINAL;
  `java.util.Set` `a.a.e.g.r` @AccessFlag FINAL;
  `java.util.concurrent.ExecutorService` `a.a.e.g.t` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `a.a.e.g.u` @AccessFlag PRIVATE;
  `int` `a.a.e.g.v` @AccessFlag PRIVATE;
}
global `java.util.concurrent.ExecutorService` `@@a.a.e.g.a` @AccessFlag STATIC_FINAL;
global `boolean` `@@a.a.e.g.s` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/a/e/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07d66c.  v8:= 1I;
  #L07d66e.  v2:= 0I;
  #L07d670.  v0:= constclass @type ^`a.a.e.g` @kind object;
  #L07d674.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L07d67a.  v0:= temp;
  #L07d67c.  if v0 != 0 then goto L07d6ba;
  #L07d680.  v0:= v8;
  #L07d682.  `@@a.a.e.g.s` @type ^`boolean` := v0 @kind boolean;
  #L07d686.  v1:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L07d68a.  v3:= 2147483647I;
  #L07d690.  v4:= 60L;
  #L07d694.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07d698.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L07d69c.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L07d6a2.  v0:= "OkHttp Http2Connection" @kind object;
  #L07d6a6.  call temp:= `a`(v0, v8) @signature `La/a/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L07d6ac.  v8:= temp @kind object;
  #L07d6ae.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L07d6b4.  `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L07d6b8.  return @kind void;
  #L07d6ba.  v0:= v2;
  #L07d6bc.  goto L07d682;
}
procedure `void` `<init>`(`a.a.e.g` v11 @kind this, `a.a.e.g$a` v12 @kind object) @signature `La/a/e/g;.<init>:(La/a/e/g$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L07d6d0.  v10:= 7I;
  #L07d6d2.  v1:= 2I;
  #L07d6d4.  v2:= 0I;
  #L07d6d6.  v3:= 1I;
  #L07d6d8.  call `<init>`(v11) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07d6de.  v0:= new `java.util.LinkedHashMap`;
  #L07d6e2.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L07d6e8.  v11.`a.a.e.g.d` @type ^`java.util.Map` := v0 @kind object;
  #L07d6ec.  v4:= 0L;
  #L07d6f0.  v11.`a.a.e.g.j` @type ^`long` := v4 @kind wide;
  #L07d6f4.  v0:= new `a.a.e.n`;
  #L07d6f8.  call `<init>`(v0) @signature `La/a/e/n;.<init>:()V` @kind direct;
  #L07d6fe.  v11.`a.a.e.g.l` @type ^`a.a.e.n` := v0 @kind object;
  #L07d702.  v0:= new `a.a.e.n`;
  #L07d706.  call `<init>`(v0) @signature `La/a/e/n;.<init>:()V` @kind direct;
  #L07d70c.  v11.`a.a.e.g.m` @type ^`a.a.e.n` := v0 @kind object;
  #L07d710.  v11.`a.a.e.g.n` @type ^`boolean` := v2 @kind boolean;
  #L07d714.  v0:= new `java.util.LinkedHashSet`;
  #L07d718.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L07d71e.  v11.`a.a.e.g.r` @type ^`java.util.Set` := v0 @kind object;
  #L07d722.  v0:= v12.`a.a.e.g$a.f` @type ^`a.a.e.m` @kind object;
  #L07d726.  v11.`a.a.e.g.i` @type ^`a.a.e.m` := v0 @kind object;
  #L07d72a.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07d72e.  v11.`a.a.e.g.b` @type ^`boolean` := v0 @kind boolean;
  #L07d732.  v0:= v12.`a.a.e.g$a.e` @type ^`a.a.e.g$b` @kind object;
  #L07d736.  v11.`a.a.e.g.c` @type ^`a.a.e.g$b` := v0 @kind object;
  #L07d73a.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07d73e.  if v0 == 0 then goto L07d83a;
  #L07d742.  v0:= v3;
  #L07d744.  v11.`a.a.e.g.g` @type ^`int` := v0;
  #L07d748.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07d74c.  if v0 == 0 then goto L07d75c;
  #L07d750.  v0:= v11.`a.a.e.g.g` @type ^`int`;
  #L07d754.  v0:= v0 + 2;
  #L07d758.  v11.`a.a.e.g.g` @type ^`int` := v0;
  #L07d75c.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07d760.  if v0 == 0 then goto L07d766;
  #L07d764.  v1:= v3;
  #L07d766.  v11.`a.a.e.g.v` @type ^`int` := v1;
  #L07d76a.  v0:= v12.`a.a.e.g$a.g` @type ^`boolean` @kind boolean;
  #L07d76e.  if v0 == 0 then goto L07d780;
  #L07d772.  v0:= v11.`a.a.e.g.l` @type ^`a.a.e.n` @kind object;
  #L07d776.  v1:= 16777216I;
  #L07d77a.  call temp:= `a`(v0, v10, v1) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07d780.  v0:= v12.`a.a.e.g$a.b` @type ^`java.lang.String` @kind object;
  #L07d784.  v11.`a.a.e.g.e` @type ^`java.lang.String` := v0 @kind object;
  #L07d788.  v1:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L07d78c.  v4:= 60L;
  #L07d790.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07d794.  v7:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L07d798.  call `<init>`(v7) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L07d79e.  v0:= "OkHttp %s Push Observer" @kind object;
  #L07d7a2.  v8:= new `java.lang.Object`[v3];
  #L07d7a6.  v9:= v11.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07d7aa.  v8[v2]:= v9 @kind object;
  #L07d7ae.  call temp:= `a`(v0, v8) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07d7b4.  v0:= temp @kind object;
  #L07d7b6.  call temp:= `a`(v0, v3) @signature `La/a/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L07d7bc.  v8:= temp @kind object;
  #L07d7be.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L07d7c4.  v11.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` := v1 @kind object;
  #L07d7c8.  v0:= v11.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07d7cc.  v1:= 65535I;
  #L07d7d2.  call temp:= `a`(v0, v10, v1) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07d7d8.  v0:= v11.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07d7dc.  v1:= 5I;
  #L07d7de.  v2:= 16384I;
  #L07d7e2.  call temp:= `a`(v0, v1, v2) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07d7e8.  v0:= v11.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07d7ec.  call temp:= `d`(v0) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07d7f2.  v0:= temp;
  #L07d7f4.  v0:= (`long`) v0 @kind i2l;
  #L07d7f6.  v11.`a.a.e.g.k` @type ^`long` := v0 @kind wide;
  #L07d7fa.  v0:= v12.`a.a.e.g$a.a` @type ^`java.net.Socket` @kind object;
  #L07d7fe.  v11.`a.a.e.g.o` @type ^`java.net.Socket` := v0 @kind object;
  #L07d802.  v0:= new `a.a.e.j`;
  #L07d806.  v1:= v12.`a.a.e.g$a.d` @type ^`b.d` @kind object;
  #L07d80a.  v2:= v11.`a.a.e.g.b` @type ^`boolean` @kind boolean;
  #L07d80e.  call `<init>`(v0, v1, v2) @signature `La/a/e/j;.<init>:(Lb/d;Z)V` @kind direct;
  #L07d814.  v11.`a.a.e.g.p` @type ^`a.a.e.j` := v0 @kind object;
  #L07d818.  v0:= new `a.a.e.g$c`;
  #L07d81c.  v1:= new `a.a.e.h`;
  #L07d820.  v2:= v12.`a.a.e.g$a.c` @type ^`b.e` @kind object;
  #L07d824.  v3:= v11.`a.a.e.g.b` @type ^`boolean` @kind boolean;
  #L07d828.  call `<init>`(v1, v2, v3) @signature `La/a/e/h;.<init>:(Lb/e;Z)V` @kind direct;
  #L07d82e.  call `<init>`(v0, v11, v1) @signature `La/a/e/g$c;.<init>:(La/a/e/g;La/a/e/h;)V` @kind direct;
  #L07d834.  v11.`a.a.e.g.q` @type ^`a.a.e.g$c` := v0 @kind object;
  #L07d838.  return @kind void;
  #L07d83a.  v0:= v1;
  #L07d83c.  goto L07d744;
}
procedure `a.a.e.i` `b`(`a.a.e.g` v12 @kind this, `int` v13 , `java.util.List` v14 @kind object, `boolean` v15 ) @signature `La/a/e/g;.b:(ILjava/util/List;Z)La/a/e/i;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L07d850.  v10:= 0L;
  #L07d854.  v6:= 1I;
  #L07d856.  v7:= 0I;
  #L07d858.  if v15 != 0 then goto L07d888;
  #L07d85c.  v3:= v6;
  #L07d85e.  v4:= 0I;
  #L07d860.  v8:= v12.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07d864.  @monitorenter v8
  #Try_start0.  
  #L07d866.  @monitorenter v12
  #Try_end0.  
  #Try_start1.  
  #L07d868.  v0:= v12.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #L07d86c.  if v0 == 0 then goto L07d88c;
  #L07d870.  v0:= new `a.a.e.a`;
  #L07d874.  call `<init>`(v0) @signature `La/a/e/a;.<init>:()V` @kind direct;
  #L07d87a.  throw v0;
  #L07d87c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d87e.  @monitorexit v12
  #Try_end1.  
  #Try_start2.  
  #L07d880.  throw v0;
  #L07d882.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d884.  @monitorexit v8
  #Try_end2.  
  #L07d886.  throw v0;
  #L07d888.  v3:= v7;
  #L07d88a.  goto L07d85e;
  #Try_start3.  
  #L07d88c.  v1:= v12.`a.a.e.g.g` @type ^`int`;
  #L07d890.  v0:= v12.`a.a.e.g.g` @type ^`int`;
  #L07d894.  v0:= v0 + 2;
  #L07d898.  v12.`a.a.e.g.g` @type ^`int` := v0;
  #L07d89c.  v0:= new `a.a.e.i`;
  #L07d8a0.  v2:= v12 @kind object;
  #L07d8a2.  v5:= v14 @kind object;
  #L07d8a4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/i;.<init>:(ILa/a/e/g;ZZLjava/util/List;)V` @kind direct;
  #L07d8aa.  if v15 == 0 then goto L07d8c6;
  #L07d8ae.  v4:= v12.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07d8b2.  v2:= lcmp(v4, v10);
  #L07d8b6.  if v2 == 0 then goto L07d8c6;
  #L07d8ba.  v4:= v0.`a.a.e.i.b` @type ^`long` @kind wide;
  #L07d8be.  v2:= lcmp(v4, v10);
  #L07d8c2.  if v2 != 0 then goto L07d8c8;
  #L07d8c6.  v7:= v6;
  #L07d8c8.  call temp:= `b`(v0) @signature `La/a/e/i;.b:()Z` @kind virtual;
  #L07d8ce.  v2:= temp;
  #L07d8d0.  if v2 == 0 then goto L07d8e6;
  #L07d8d4.  v2:= v12.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d8d8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07d8de.  v4:= temp @kind object;
  #L07d8e0.  call temp:= `put`(v2, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07d8e6.  @monitorexit v12
  #Try_end3.  
  #L07d8e8.  if v13 != 0 then goto L07d908;
  #Try_start4.  
  #L07d8ec.  v2:= v12.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07d8f0.  call `a`(v2, v3, v1, v13, v14) @signature `La/a/e/j;.a:(ZIILjava/util/List;)V` @kind virtual;
  #L07d8f6.  @monitorexit v8
  #Try_end4.  
  #L07d8f8.  if v7 == 0 then goto L07d906;
  #L07d8fc.  v1:= v12.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07d900.  call `b`(v1) @signature `La/a/e/j;.b:()V` @kind virtual;
  #L07d906.  return v0 @kind object;
  #Try_start5.  
  #L07d908.  v2:= v12.`a.a.e.g.b` @type ^`boolean` @kind boolean;
  #L07d90c.  if v2 == 0 then goto L07d920;
  #L07d910.  v0:= new `java.lang.IllegalArgumentException`;
  #L07d914.  v1:= "client streams shouldn't have associated stream IDs" @kind object;
  #L07d918.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07d91e.  throw v0;
  #L07d920.  v2:= v12.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07d924.  call `a`(v2, v13, v1, v14) @signature `La/a/e/j;.a:(IILjava/util/List;)V` @kind virtual;
  #Try_end5.  
  #L07d92a.  goto L07d8f6;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d882;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07d87c;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07d882;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07d87c;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L07d882;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L07d882;
}
procedure `int` `a`(`a.a.e.g` v2 @kind this) @signature `La/a/e/g;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07d974.  @monitorenter v2
  #Try_start0.  
  #L07d976.  v0:= v2.`a.a.e.g.m` @type ^`a.a.e.n` @kind object;
  #L07d97a.  v1:= 2147483647I;
  #L07d980.  call temp:= `c`(v0, v1) @signature `La/a/e/n;.c:(I)I` @kind virtual;
  #Try_end0.  
  #L07d986.  v0:= temp;
  #L07d988.  @monitorexit v2
  #L07d98a.  return v0;
  #L07d98c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d98e.  @monitorexit v2
  #L07d990.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d98c;
}
procedure `a.a.e.i` `a`(`a.a.e.g` v2 @kind this, `int` v3 ) @signature `La/a/e/g;.a:(I)La/a/e/i;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L07d9b0.  @monitorenter v2
  #Try_start0.  
  #L07d9b2.  v0:= v2.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07d9b6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07d9bc.  v1:= temp @kind object;
  #L07d9be.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07d9c4.  v0:= temp @kind object;
  #L07d9c6.  v0:= (`a.a.e.i`) v0 @kind object;
  #Try_end0.  
  #L07d9ca.  @monitorexit v2
  #L07d9cc.  return v0 @kind object;
  #L07d9ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d9d0.  @monitorexit v2
  #L07d9d2.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d9ce;
}
procedure `a.a.e.i` `a`(`a.a.e.g` v1 @kind this, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `La/a/e/g;.a:(Ljava/util/List;Z)La/a/e/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07d9f0.  v0:= 0I;
  #L07d9f2.  call temp:= `b`(v1, v0, v2, v3) @signature `La/a/e/g;.b:(ILjava/util/List;Z)La/a/e/i;` @kind direct;
  #L07d9f8.  v0:= temp @kind object;
  #L07d9fa.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.g` v8 @kind this, `int` v9 , `long` v10 ) @signature `La/a/e/g;.a:(IJ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07da0c.  v0:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07da10.  v1:= new `a.a.e.g$2`;
  #L07da14.  v3:= "OkHttp Window Update %s stream %d" @kind object;
  #L07da18.  v2:= 2I;
  #L07da1a.  v4:= new `java.lang.Object`[v2];
  #L07da1e.  v2:= 0I;
  #L07da20.  v5:= v8.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07da24.  v4[v2]:= v5 @kind object;
  #L07da28.  v2:= 1I;
  #L07da2a.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07da30.  v5:= temp @kind object;
  #L07da32.  v4[v2]:= v5 @kind object;
  #L07da36.  v2:= v8 @kind object;
  #L07da38.  v5:= v9;
  #L07da3a.  v6:= v10 @kind wide;
  #L07da3c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `La/a/e/g$2;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;IJ)V` @kind direct;
  #L07da42.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07da48.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v7 @kind this, `int` v8 , `a.a.e.b` v9 @kind object) @signature `La/a/e/g;.a:(ILa/a/e/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07da5c.  v6:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07da60.  v0:= new `a.a.e.g$1`;
  #L07da64.  v2:= "OkHttp %s stream %d" @kind object;
  #L07da68.  v1:= 2I;
  #L07da6a.  v3:= new `java.lang.Object`[v1];
  #L07da6e.  v1:= 0I;
  #L07da70.  v4:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07da74.  v3[v1]:= v4 @kind object;
  #L07da78.  v1:= 1I;
  #L07da7a.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07da80.  v4:= temp @kind object;
  #L07da82.  v3[v1]:= v4 @kind object;
  #L07da86.  v1:= v7 @kind object;
  #L07da88.  v4:= v8;
  #L07da8a.  v5:= v9 @kind object;
  #L07da8c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/g$1;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILa/a/e/b;)V` @kind direct;
  #L07da92.  call `execute`(v6, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07da98.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v9 @kind this, `int` v10 , `b.e` v11 @kind object, `int` v12 , `boolean` v13 ) @signature `La/a/e/g;.a:(ILb/e;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07daac.  v5:= new `b.c`;
  #L07dab0.  call `<init>`(v5) @signature `Lb/c;.<init>:()V` @kind direct;
  #L07dab6.  v0:= (`long`) v12 @kind i2l;
  #L07dab8.  call `a`(v11, v0) @signature `Lb/e;.a:(J)V` @kind interface;
  #L07dabe.  v0:= (`long`) v12 @kind i2l;
  #L07dac0.  call temp:= `a`(v11, v5, v0) @signature `Lb/e;.a:(Lb/c;J)J` @kind interface;
  #L07dac6.  call temp:= `b`(v5) @signature `Lb/c;.b:()J` @kind virtual;
  #L07dacc.  v0:= temp @kind wide;
  #L07dace.  v2:= (`long`) v12 @kind i2l;
  #L07dad0.  v0:= lcmp(v0, v2);
  #L07dad4.  if v0 == 0 then goto L07db1a;
  #L07dad8.  v0:= new `java.io.IOException`;
  #L07dadc.  v1:= new `java.lang.StringBuilder`;
  #L07dae0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07dae6.  call temp:= `b`(v5) @signature `Lb/c;.b:()J` @kind virtual;
  #L07daec.  v2:= temp @kind wide;
  #L07daee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L07daf4.  v1:= temp @kind object;
  #L07daf6.  v2:= " != " @kind object;
  #L07dafa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07db00.  v1:= temp @kind object;
  #L07db02.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L07db08.  v1:= temp @kind object;
  #L07db0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07db10.  v1:= temp @kind object;
  #L07db12.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07db18.  throw v0;
  #L07db1a.  v8:= v9.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07db1e.  v0:= new `a.a.e.g$6`;
  #L07db22.  v2:= "OkHttp %s Push Data[%s]" @kind object;
  #L07db26.  v1:= 2I;
  #L07db28.  v3:= new `java.lang.Object`[v1];
  #L07db2c.  v1:= 0I;
  #L07db2e.  v4:= v9.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07db32.  v3[v1]:= v4 @kind object;
  #L07db36.  v1:= 1I;
  #L07db38.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07db3e.  v4:= temp @kind object;
  #L07db40.  v3[v1]:= v4 @kind object;
  #L07db44.  v1:= v9 @kind object;
  #L07db46.  v4:= v10;
  #L07db48.  v6:= v12;
  #L07db4a.  v7:= v13;
  #L07db4c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/a/e/g$6;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILb/c;IZ)V` @kind direct;
  #L07db52.  call `execute`(v8, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07db58.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v7 @kind this, `int` v8 , `java.util.List` v9 @kind object) @signature `La/a/e/g;.a:(ILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07db6c.  @monitorenter v7
  #Try_start0.  
  #L07db6e.  v0:= v7.`a.a.e.g.r` @type ^`java.util.Set` @kind object;
  #L07db72.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07db78.  v1:= temp @kind object;
  #L07db7a.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07db80.  v0:= temp;
  #L07db82.  if v0 == 0 then goto L07db94;
  #L07db86.  v0:= `@@a.a.e.b.b` @type ^`a.a.e.b` @kind object;
  #L07db8a.  call `a`(v7, v8, v0) @signature `La/a/e/g;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07db90.  @monitorexit v7
  #L07db92.  return @kind void;
  #L07db94.  v0:= v7.`a.a.e.g.r` @type ^`java.util.Set` @kind object;
  #L07db98.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07db9e.  v1:= temp @kind object;
  #L07dba0.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L07dba6.  @monitorexit v7
  #Try_end0.  
  #L07dba8.  v6:= v7.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07dbac.  v0:= new `a.a.e.g$4`;
  #L07dbb0.  v2:= "OkHttp %s Push Request[%s]" @kind object;
  #L07dbb4.  v1:= 2I;
  #L07dbb6.  v3:= new `java.lang.Object`[v1];
  #L07dbba.  v1:= 0I;
  #L07dbbc.  v4:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07dbc0.  v3[v1]:= v4 @kind object;
  #L07dbc4.  v1:= 1I;
  #L07dbc6.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07dbcc.  v4:= temp @kind object;
  #L07dbce.  v3[v1]:= v4 @kind object;
  #L07dbd2.  v1:= v7 @kind object;
  #L07dbd4.  v4:= v8;
  #L07dbd6.  v5:= v9 @kind object;
  #L07dbd8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/g$4;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @kind direct;
  #L07dbde.  call `execute`(v6, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07dbe4.  goto L07db92;
  #L07dbe6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start1.  
  #L07dbe8.  @monitorexit v7
  #Try_end1.  
  #L07dbea.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07dbe6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07dbe6;
}
procedure `void` `a`(`a.a.e.g` v8 @kind this, `int` v9 , `java.util.List` v10 @kind object, `boolean` v11 ) @signature `La/a/e/g;.a:(ILjava/util/List;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07dc10.  v7:= v8.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07dc14.  v0:= new `a.a.e.g$5`;
  #L07dc18.  v2:= "OkHttp %s Push Headers[%s]" @kind object;
  #L07dc1c.  v1:= 2I;
  #L07dc1e.  v3:= new `java.lang.Object`[v1];
  #L07dc22.  v1:= 0I;
  #L07dc24.  v4:= v8.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07dc28.  v3[v1]:= v4 @kind object;
  #L07dc2c.  v1:= 1I;
  #L07dc2e.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07dc34.  v4:= temp @kind object;
  #L07dc36.  v3[v1]:= v4 @kind object;
  #L07dc3a.  v1:= v8 @kind object;
  #L07dc3c.  v4:= v9;
  #L07dc3e.  v5:= v10 @kind object;
  #L07dc40.  v6:= v11;
  #L07dc42.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `La/a/e/g$5;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @kind direct;
  #L07dc48.  call `execute`(v7, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07dc4e.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v10 @kind this, `int` v11 , `boolean` v12 , `b.c` v13 @kind object, `long` v14 ) @signature `La/a/e/g;.a:(IZLb/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L07dc60.  v1:= 0I;
  #L07dc62.  v8:= 0L;
  #L07dc66.  v0:= lcmp(v14, v8);
  #L07dc6a.  if v0 != 0 then goto L07dcc6;
  #L07dc6e.  v0:= v10.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07dc72.  call `a`(v0, v12, v11, v13, v1) @signature `La/a/e/j;.a:(ZILb/c;I)V` @kind virtual;
  #L07dc78.  return @kind void;
  #Try_start0.  
  #L07dc7a.  v2:= v10.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07dc7e.  call temp:= `min`(v14, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L07dc84.  v2:= temp @kind wide;
  #L07dc86.  v0:= (`int`) v2 @kind l2i;
  #L07dc88.  v2:= v10.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07dc8c.  call temp:= `c`(v2) @signature `La/a/e/j;.c:()I` @kind virtual;
  #L07dc92.  v2:= temp;
  #L07dc94.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L07dc9a.  v2:= temp;
  #L07dc9c.  v4:= v10.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07dca0.  v6:= (`long`) v2 @kind i2l;
  #L07dca2.  v4:= v4 - v6 @kind long;
  #L07dca4.  v10.`a.a.e.g.k` @type ^`long` := v4 @kind wide;
  #L07dca8.  @monitorexit v10
  #Try_end0.  
  #L07dcaa.  v4:= (`long`) v2 @kind i2l;
  #L07dcac.  v14:= v14 - v4 @kind long;
  #L07dcae.  v3:= v10.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07dcb2.  if v12 == 0 then goto L07dd20;
  #L07dcb6.  v0:= lcmp(v14, v8);
  #L07dcba.  if v0 != 0 then goto L07dd20;
  #L07dcbe.  v0:= 1I;
  #L07dcc0.  call `a`(v3, v0, v11, v13, v2) @signature `La/a/e/j;.a:(ZILb/c;I)V` @kind virtual;
  #L07dcc6.  v0:= lcmp(v14, v8);
  #L07dcca.  if v0 <= 0 then goto L07dc78;
  #L07dcce.  @monitorenter v10
  #Try_start1.  
  #L07dcd0.  v2:= v10.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07dcd4.  v0:= lcmp(v2, v8);
  #L07dcd8.  if v0 > 0 then goto L07dc7a;
  #L07dcdc.  v0:= v10.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07dce0.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07dce6.  v2:= temp @kind object;
  #L07dce8.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L07dcee.  v0:= temp;
  #L07dcf0.  if v0 != 0 then goto L07dd18;
  #L07dcf4.  v0:= new `java.io.IOException`;
  #L07dcf8.  v1:= "stream closed" @kind object;
  #L07dcfc.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07dd02.  throw v0;
  #Try_end1.  
  #L07dd04.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #Try_start2.  
  #L07dd06.  v0:= new `java.io.InterruptedIOException`;
  #L07dd0a.  call `<init>`(v0) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L07dd10.  throw v0;
  #L07dd12.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07dd14.  @monitorexit v10
  #Try_end2.  
  #L07dd16.  throw v0;
  #Try_start3.  
  #L07dd18.  call `wait`(v10) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #Try_end3.  
  #L07dd1e.  goto L07dcd0;
  #L07dd20.  v0:= v1;
  #L07dd22.  goto L07dcc0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07dd12;
  catch `java.lang.InterruptedException` @[Try_start1..Try_end1] goto L07dd04;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07dd12;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07dd12;
  catch `java.lang.InterruptedException` @[Try_start3..Try_end3] goto L07dd04;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07dd12;
}
procedure `void` `a`(`a.a.e.g` v3 @kind this, `long` v4 ) @signature `La/a/e/g;.a:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L07dd5c.  v0:= v3.`a.a.e.g.k` @type ^`long` @kind wide;
  #L07dd60.  v0:= v0 + v4 @kind long;
  #L07dd62.  v3.`a.a.e.g.k` @type ^`long` := v0 @kind wide;
  #L07dd66.  v0:= 0L;
  #L07dd6a.  v0:= lcmp(v4, v0);
  #L07dd6e.  if v0 <= 0 then goto L07dd78;
  #L07dd72.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L07dd78.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v4 @kind this, `a.a.e.b` v5 @kind object) @signature `La/a/e/g;.a:(La/a/e/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07dd8c.  v1:= v4.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07dd90.  @monitorenter v1
  #Try_start0.  
  #L07dd92.  @monitorenter v4
  #Try_end0.  
  #Try_start1.  
  #L07dd94.  v0:= v4.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #L07dd98.  if v0 == 0 then goto L07dda2;
  #L07dd9c.  @monitorexit v4
  #Try_end1.  
  #Try_start2.  
  #L07dd9e.  @monitorexit v1
  #Try_end2.  
  #L07dda0.  return @kind void;
  #L07dda2.  v0:= 1I;
  #Try_start3.  
  #L07dda4.  v4.`a.a.e.g.h` @type ^`boolean` := v0 @kind boolean;
  #L07dda8.  v0:= v4.`a.a.e.g.f` @type ^`int`;
  #L07ddac.  @monitorexit v4
  #Try_end3.  
  #Try_start4.  
  #L07ddae.  v2:= v4.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07ddb2.  v3:= `@@a.a.c.a` @type ^`byte`[] @kind object;
  #L07ddb6.  call `a`(v2, v0, v5, v3) @signature `La/a/e/j;.a:(ILa/a/e/b;[B)V` @kind virtual;
  #L07ddbc.  @monitorexit v1
  #L07ddbe.  goto L07dda0;
  #L07ddc0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07ddc2.  @monitorexit v1
  #Try_end4.  
  #L07ddc4.  throw v0;
  #L07ddc6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start5.  
  #L07ddc8.  @monitorexit v4
  #Try_end5.  
  #Try_start6.  
  #L07ddca.  throw v0;
  #Try_end6.  
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07ddc0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07ddc6;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07ddc0;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07ddc6;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L07ddc0;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L07ddc6;
  catch `java.lang.Throwable` @[Try_start6..Try_end6] goto L07ddc0;
}
procedure `void` `a`(`a.a.e.g` v7 @kind this, `a.a.e.b` v8 @kind object, `a.a.e.b` v9 @kind object) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07de1c.  v3:= 0I;
  #L07de1e.  v2:= 0I;
  #L07de20.  v0:= `@@a.a.e.g.s` @type ^`boolean` @kind boolean;
  #L07de24.  if v0 != 0 then goto L07de40;
  #L07de28.  call temp:= `holdsLock`(v7) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L07de2e.  v0:= temp;
  #L07de30.  if v0 == 0 then goto L07de40;
  #L07de34.  v0:= new `java.lang.AssertionError`;
  #L07de38.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L07de3e.  throw v0;
  #Try_start0.  
  #L07de40.  call `a`(v7, v8) @signature `La/a/e/g;.a:(La/a/e/b;)V` @kind virtual;
  #Try_end0.  
  #L07de46.  v1:= v2 @kind object;
  #L07de48.  @monitorenter v7
  #Try_start1.  
  #L07de4a.  v0:= v7.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07de4e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L07de54.  v0:= temp;
  #L07de56.  if v0 != 0 then goto L07df4c;
  #L07de5a.  v0:= v7.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07de5e.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07de64.  v0:= temp @kind object;
  #L07de66.  v4:= v7.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07de6a.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07de70.  v4:= temp;
  #L07de72.  v4:= new `a.a.e.i`[v4];
  #L07de76.  call temp:= `toArray`(v0, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07de7c.  v0:= temp @kind object;
  #L07de7e.  v0:= (`a.a.e.i`[]) v0 @kind object;
  #L07de82.  v4:= v7.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07de86.  call `clear`(v4) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L07de8c.  v5:= v0 @kind object;
  #L07de8e.  v0:= v7.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07de92.  if v0 == 0 then goto L07df48;
  #L07de96.  v0:= v7.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07de9a.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L07dea0.  v0:= temp @kind object;
  #L07dea2.  v2:= v7.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07dea6.  call temp:= `size`(v2) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L07deac.  v2:= temp;
  #L07deae.  v2:= new `a.a.e.l`[v2];
  #L07deb2.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L07deb8.  v0:= temp @kind object;
  #L07deba.  v0:= (`a.a.e.l`[]) v0 @kind object;
  #L07debe.  v2:= 0I;
  #L07dec0.  v7.`a.a.e.g.u` @type ^`java.util.Map` := v2 @kind object;
  #L07dec4.  v4:= v0 @kind object;
  #L07dec6.  @monitorexit v7
  #Try_end1.  
  #L07dec8.  if v5 == 0 then goto L07df00;
  #L07decc.  v6:= length @variable v5;
  #L07dece.  v2:= v3;
  #L07ded0.  v0:= v1 @kind object;
  #L07ded2.  if v2 >= v6 then goto L07defe;
  #L07ded6.  v1:= v5[v2] @kind object;
  #Try_start2.  
  #L07deda.  call `a`(v1, v9) @signature `La/a/e/i;.a:(La/a/e/b;)V` @kind virtual;
  #Try_end2.  
  #L07dee0.  v1:= v2 + 1;
  #L07dee4.  v2:= v1;
  #L07dee6.  goto L07ded2;
  #L07dee8.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07deea.  v1:= v0 @kind object;
  #L07deec.  goto L07de48;
  #L07deee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L07def0.  @monitorexit v7
  #Try_end3.  
  #L07def2.  throw v0;
  #L07def4.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L07def6.  if v0 == 0 then goto L07dee0;
  #L07defa.  v0:= v1 @kind object;
  #L07defc.  goto L07dee0;
  #L07defe.  v1:= v0 @kind object;
  #L07df00.  if v4 == 0 then goto L07df1c;
  #L07df04.  v2:= length @variable v4;
  #L07df06.  v0:= v3;
  #L07df08.  if v0 >= v2 then goto L07df1c;
  #L07df0c.  v3:= v4[v0] @kind object;
  #L07df10.  call `c`(v3) @signature `La/a/e/l;.c:()V` @kind virtual;
  #L07df16.  v0:= v0 + 1;
  #L07df1a.  goto L07df08;
  #Try_start4.  
  #L07df1c.  v0:= v7.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07df20.  call `close`(v0) @signature `La/a/e/j;.close:()V` @kind virtual;
  #Try_end4.  
  #L07df26.  v0:= v1 @kind object;
  #Try_start5.  
  #L07df28.  v1:= v7.`a.a.e.g.o` @type ^`java.net.Socket` @kind object;
  #L07df2c.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end5.  
  #L07df32.  if v0 == 0 then goto L07df42;
  #L07df36.  throw v0;
  #L07df38.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07df3a.  if v1 == 0 then goto L07df28;
  #L07df3e.  v0:= v1 @kind object;
  #L07df40.  goto L07df28;
  #L07df42.  return @kind void;
  #L07df44.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07df46.  goto L07df32;
  #L07df48.  v4:= v2 @kind object;
  #L07df4a.  goto L07dec6;
  #L07df4c.  v5:= v2 @kind object;
  #L07df4e.  goto L07de8e;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07dee8;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07deee;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L07def4;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07deee;
  catch `java.io.IOException` @[Try_start4..Try_end4] goto L07df38;
  catch `java.io.IOException` @[Try_start5..Try_end5] goto L07df44;
}
procedure `void` `a`(`a.a.e.g` v6 @kind this, `boolean` v7 ) @signature `La/a/e/g;.a:(Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07dfa8.  v3:= 65535I;
  #L07dfae.  if v7 == 0 then goto L07dfea;
  #L07dfb2.  v0:= v6.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07dfb6.  call `a`(v0) @signature `La/a/e/j;.a:()V` @kind virtual;
  #L07dfbc.  v0:= v6.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07dfc0.  v1:= v6.`a.a.e.g.l` @type ^`a.a.e.n` @kind object;
  #L07dfc4.  call `b`(v0, v1) @signature `La/a/e/j;.b:(La/a/e/n;)V` @kind virtual;
  #L07dfca.  v0:= v6.`a.a.e.g.l` @type ^`a.a.e.n` @kind object;
  #L07dfce.  call temp:= `d`(v0) @signature `La/a/e/n;.d:()I` @kind virtual;
  #L07dfd4.  v0:= temp;
  #L07dfd6.  if v0 == v3 then goto L07dfea;
  #L07dfda.  v1:= v6.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07dfde.  v2:= 0I;
  #L07dfe0.  v0:= v0 - v3 @kind int;
  #L07dfe2.  v4:= (`long`) v0 @kind i2l;
  #L07dfe4.  call `a`(v1, v2, v4) @signature `La/a/e/j;.a:(IJ)V` @kind virtual;
  #L07dfea.  v0:= new `java.lang.Thread`;
  #L07dfee.  v1:= v6.`a.a.e.g.q` @type ^`a.a.e.g$c` @kind object;
  #L07dff2.  call `<init>`(v0, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L07dff8.  call `start`(v0) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L07dffe.  return @kind void;
}
procedure `void` `a`(`a.a.e.g` v9 @kind this, `boolean` v10 , `int` v11 , `int` v12 , `a.a.e.l` v13 @kind object) @signature `La/a/e/g;.a:(ZIILa/a/e/l;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07e010.  v8:= `@@a.a.e.g.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07e014.  v0:= new `a.a.e.g$3`;
  #L07e018.  v2:= "OkHttp %s ping %08x%08x" @kind object;
  #L07e01c.  v1:= 3I;
  #L07e01e.  v3:= new `java.lang.Object`[v1];
  #L07e022.  v1:= 0I;
  #L07e024.  v4:= v9.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07e028.  v3[v1]:= v4 @kind object;
  #L07e02c.  v1:= 1I;
  #L07e02e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e034.  v4:= temp @kind object;
  #L07e036.  v3[v1]:= v4 @kind object;
  #L07e03a.  v1:= 2I;
  #L07e03c.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e042.  v4:= temp @kind object;
  #L07e044.  v3[v1]:= v4 @kind object;
  #L07e048.  v1:= v9 @kind object;
  #L07e04a.  v4:= v10;
  #L07e04c.  v5:= v11;
  #L07e04e.  v6:= v12;
  #L07e050.  v7:= v13 @kind object;
  #L07e052.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/a/e/g$3;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ZIILa/a/e/l;)V` @kind direct;
  #L07e058.  call `execute`(v8, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07e05e.  return @kind void;
}
procedure `a.a.e.i` `b`(`a.a.e.g` v2 @kind this, `int` v3 ) @signature `La/a/e/g;.b:(I)La/a/e/i;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L07e070.  @monitorenter v2
  #Try_start0.  
  #L07e072.  v0:= v2.`a.a.e.g.d` @type ^`java.util.Map` @kind object;
  #L07e076.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e07c.  v1:= temp @kind object;
  #L07e07e.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07e084.  v0:= temp @kind object;
  #L07e086.  v0:= (`a.a.e.i`) v0 @kind object;
  #L07e08a.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #Try_end0.  
  #L07e090.  @monitorexit v2
  #L07e092.  return v0 @kind object;
  #L07e094.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e096.  @monitorexit v2
  #L07e098.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07e094;
}
procedure `void` `b`(`a.a.e.g` v1 @kind this) @signature `La/a/e/g;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07e0b8.  v0:= v1.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07e0bc.  call `b`(v0) @signature `La/a/e/j;.b:()V` @kind virtual;
  #L07e0c2.  return @kind void;
}
procedure `void` `b`(`a.a.e.g` v1 @kind this, `int` v2 , `a.a.e.b` v3 @kind object) @signature `La/a/e/g;.b:(ILa/a/e/b;)V` @AccessFlag  {
    temp;
    v0;

  #L07e0d4.  v0:= v1.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07e0d8.  call `a`(v0, v2, v3) @signature `La/a/e/j;.a:(ILa/a/e/b;)V` @kind virtual;
  #L07e0de.  return @kind void;
}
procedure `void` `b`(`a.a.e.g` v2 @kind this, `boolean` v3 , `int` v4 , `int` v5 , `a.a.e.l` v6 @kind object) @signature `La/a/e/g;.b:(ZIILa/a/e/l;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L07e0f0.  v1:= v2.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07e0f4.  @monitorenter v1
  #L07e0f6.  if v6 == 0 then goto L07e100;
  #Try_start0.  
  #L07e0fa.  call `a`(v6) @signature `La/a/e/l;.a:()V` @kind virtual;
  #L07e100.  v0:= v2.`a.a.e.g.p` @type ^`a.a.e.j` @kind object;
  #L07e104.  call `a`(v0, v3, v4, v5) @signature `La/a/e/j;.a:(ZII)V` @kind virtual;
  #L07e10a.  @monitorexit v1
  #L07e10c.  return @kind void;
  #L07e10e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e110.  @monitorexit v1
  #Try_end0.  
  #L07e112.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07e10e;
}
procedure `a.a.e.l` `c`(`a.a.e.g` v2 @kind this, `int` v3 ) @signature `La/a/e/g;.c:(I)La/a/e/l;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L07e130.  @monitorenter v2
  #Try_start0.  
  #L07e132.  v0:= v2.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07e136.  if v0 == 0 then goto L07e156;
  #L07e13a.  v0:= v2.`a.a.e.g.u` @type ^`java.util.Map` @kind object;
  #L07e13e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e144.  v1:= temp @kind object;
  #L07e146.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L07e14c.  v0:= temp @kind object;
  #L07e14e.  v0:= (`a.a.e.l`) v0 @kind object;
  #Try_end0.  
  #L07e152.  @monitorexit v2
  #L07e154.  return v0 @kind object;
  #L07e156.  v0:= 0I;
  #L07e158.  goto L07e152;
  #L07e15a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e15c.  @monitorexit v2
  #L07e15e.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07e15a;
}
procedure `void` `c`(`a.a.e.g` v1 @kind this) @signature `La/a/e/g;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07e17c.  v0:= 1I;
  #L07e17e.  call `a`(v1, v0) @signature `La/a/e/g;.a:(Z)V` @kind virtual;
  #L07e184.  return @kind void;
}
procedure `void` `c`(`a.a.e.g` v7 @kind this, `int` v8 , `a.a.e.b` v9 @kind object) @signature `La/a/e/g;.c:(ILa/a/e/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07e198.  v6:= v7.`a.a.e.g.t` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L07e19c.  v0:= new `a.a.e.g$7`;
  #L07e1a0.  v2:= "OkHttp %s Push Reset[%s]" @kind object;
  #L07e1a4.  v1:= 2I;
  #L07e1a6.  v3:= new `java.lang.Object`[v1];
  #L07e1aa.  v1:= 0I;
  #L07e1ac.  v4:= v7.`a.a.e.g.e` @type ^`java.lang.String` @kind object;
  #L07e1b0.  v3[v1]:= v4 @kind object;
  #L07e1b4.  v1:= 1I;
  #L07e1b6.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e1bc.  v4:= temp @kind object;
  #L07e1be.  v3[v1]:= v4 @kind object;
  #L07e1c2.  v1:= v7 @kind object;
  #L07e1c4.  v4:= v8;
  #L07e1c6.  v5:= v9 @kind object;
  #L07e1c8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `La/a/e/g$7;.<init>:(La/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILa/a/e/b;)V` @kind direct;
  #L07e1ce.  call `execute`(v6, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L07e1d4.  return @kind void;
}
procedure `void` `close`(`a.a.e.g` v2 @kind this) @signature `La/a/e/g;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07e1e8.  v0:= `@@a.a.e.b.a` @type ^`a.a.e.b` @kind object;
  #L07e1ec.  v1:= `@@a.a.e.b.f` @type ^`a.a.e.b` @kind object;
  #L07e1f0.  call `a`(v2, v0, v1) @signature `La/a/e/g;.a:(La/a/e/b;La/a/e/b;)V` @kind virtual;
  #L07e1f6.  return @kind void;
}
procedure `boolean` `d`(`a.a.e.g` v1 @kind this) @signature `La/a/e/g;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07e208.  @monitorenter v1
  #Try_start0.  
  #L07e20a.  v0:= v1.`a.a.e.g.h` @type ^`boolean` @kind boolean;
  #Try_end0.  
  #L07e20e.  @monitorexit v1
  #L07e210.  return v0;
  #L07e212.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07e214.  @monitorexit v1
  #L07e216.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07e212;
}
procedure `boolean` `d`(`a.a.e.g` v1 @kind this, `int` v2 ) @signature `La/a/e/g;.d:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L07e234.  if v2 == 0 then goto L07e244;
  #L07e238.  v0:= v2 ^& 1;
  #L07e23c.  if v0 != 0 then goto L07e244;
  #L07e240.  v0:= 1I;
  #L07e242.  return v0;
  #L07e244.  v0:= 0I;
  #L07e246.  goto L07e242;
}

record `a.a.c.j` @kind class @AccessFlag PUBLIC_FINAL extends `a.s` @kind interface {
  `a.u` `a.a.c.j.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.c.j.b` @AccessFlag PRIVATE_FINAL;
  `a.a.b.g` `a.a.c.j.c` @AccessFlag PRIVATE;
  `java.lang.Object` `a.a.c.j.d` @AccessFlag PRIVATE;
  `boolean` `a.a.c.j.e` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`a.a.c.j` v0 @kind this, `a.u` v1 @kind object, `boolean` v2 ) @signature `La/a/c/j;.<init>:(La/u;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L0785b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0785ba.  v0.`a.a.c.j.a` @type ^`a.u` := v1 @kind object;
  #L0785be.  v0.`a.a.c.j.b` @type ^`boolean` := v2 @kind boolean;
  #L0785c2.  return @kind void;
}
procedure `a.a` `a`(`a.a.c.j` v13 @kind this, `a.r` v14 @kind object) @signature `La/a/c/j;.a:(La/r;)La/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L0785d4.  v7:= 0I;
  #L0785d6.  call temp:= `c`(v14) @signature `La/r;.c:()Z` @kind virtual;
  #L0785dc.  v0:= temp;
  #L0785de.  if v0 == 0 then goto L078676;
  #L0785e2.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L0785e6.  call temp:= `j`(v0) @signature `La/u;.j:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L0785ec.  v5:= temp @kind object;
  #L0785ee.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L0785f2.  call temp:= `k`(v0) @signature `La/u;.k:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L0785f8.  v6:= temp @kind object;
  #L0785fa.  v0:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L0785fe.  call temp:= `l`(v0) @signature `La/u;.l:()La/g;` @kind virtual;
  #L078604.  v7:= temp @kind object;
  #L078606.  v0:= new `a.a`;
  #L07860a.  call temp:= `f`(v14) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L078610.  v1:= temp @kind object;
  #L078612.  call temp:= `g`(v14) @signature `La/r;.g:()I` @kind virtual;
  #L078618.  v2:= temp;
  #L07861a.  v3:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07861e.  call temp:= `h`(v3) @signature `La/u;.h:()La/o;` @kind virtual;
  #L078624.  v3:= temp @kind object;
  #L078626.  v4:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07862a.  call temp:= `i`(v4) @signature `La/u;.i:()Ljavax/net/SocketFactory;` @kind virtual;
  #L078630.  v4:= temp @kind object;
  #L078632.  v8:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078636.  call temp:= `n`(v8) @signature `La/u;.n:()La/b;` @kind virtual;
  #L07863c.  v8:= temp @kind object;
  #L07863e.  v9:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078642.  call temp:= `d`(v9) @signature `La/u;.d:()Ljava/net/Proxy;` @kind virtual;
  #L078648.  v9:= temp @kind object;
  #L07864a.  v10:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07864e.  call temp:= `t`(v10) @signature `La/u;.t:()Ljava/util/List;` @kind virtual;
  #L078654.  v10:= temp @kind object;
  #L078656.  v11:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07865a.  call temp:= `u`(v11) @signature `La/u;.u:()Ljava/util/List;` @kind virtual;
  #L078660.  v11:= temp @kind object;
  #L078662.  v12:= v13.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078666.  call temp:= `e`(v12) @signature `La/u;.e:()Ljava/net/ProxySelector;` @kind virtual;
  #L07866c.  v12:= temp @kind object;
  #L07866e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `La/a;.<init>:(Ljava/lang/String;ILa/o;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;La/g;La/b;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L078674.  return v0 @kind object;
  #L078676.  v6:= v7 @kind object;
  #L078678.  v5:= v7 @kind object;
  #L07867a.  goto L078606;
}
procedure `a.x` `a`(`a.a.c.j` v6 @kind this, `a.z` v7 @kind object) @signature `La/a/c/j;.a:(La/z;)La/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07868c.  v1:= 0I;
  #L07868e.  if v7 != 0 then goto L07869e;
  #L078692.  v0:= new `java.lang.IllegalStateException`;
  #L078696.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L07869c.  throw v0;
  #L07869e.  v0:= v6.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L0786a2.  call temp:= `b`(v0) @signature `La/a/b/g;.b:()La/a/b/c;` @kind virtual;
  #L0786a8.  v0:= temp @kind object;
  #L0786aa.  if v0 == 0 then goto L0786d6;
  #L0786ae.  call temp:= `a`(v0) @signature `La/i;.a:()La/ab;` @kind interface;
  #L0786b4.  v0:= temp @kind object;
  #L0786b6.  call temp:= `b`(v7) @signature `La/z;.b:()I` @kind virtual;
  #L0786bc.  v2:= temp;
  #L0786be.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L0786c4.  v3:= temp @kind object;
  #L0786c6.  call temp:= `b`(v3) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L0786cc.  v3:= temp @kind object;
  #L0786ce.  goto L0788a0;
  #L0786d4.  return v1 @kind object;
  #L0786d6.  v0:= v1 @kind object;
  #L0786d8.  goto L0786b6;
  #L0786da.  if v0 == 0 then goto L078706;
  #L0786de.  call temp:= `b`(v0) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L0786e4.  v1:= temp @kind object;
  #L0786e6.  call temp:= `type`(v1) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L0786ec.  v1:= temp @kind object;
  #L0786ee.  v2:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L0786f2.  if v1 == v2 then goto L078714;
  #L0786f6.  v0:= new `java.net.ProtocolException`;
  #L0786fa.  v1:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L0786fe.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L078704.  throw v0;
  #L078706.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07870a.  call temp:= `d`(v1) @signature `La/u;.d:()Ljava/net/Proxy;` @kind virtual;
  #L078710.  v1:= temp @kind object;
  #L078712.  goto L0786e6;
  #L078714.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078718.  call temp:= `n`(v1) @signature `La/u;.n:()La/b;` @kind virtual;
  #L07871e.  v1:= temp @kind object;
  #L078720.  call temp:= `a`(v1, v0, v7) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L078726.  v1:= temp @kind object;
  #L078728.  goto L0786d4;
  #L07872a.  v1:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L07872e.  call temp:= `m`(v1) @signature `La/u;.m:()La/b;` @kind virtual;
  #L078734.  v1:= temp @kind object;
  #L078736.  call temp:= `a`(v1, v0, v7) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L07873c.  v1:= temp @kind object;
  #L07873e.  goto L0786d4;
  #L078740.  v0:= "GET" @kind object;
  #L078744.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07874a.  v0:= temp;
  #L07874c.  if v0 != 0 then goto L078760;
  #L078750.  v0:= "HEAD" @kind object;
  #L078754.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07875a.  v0:= temp;
  #L07875c.  if v0 == 0 then goto L0786d4;
  #L078760.  v0:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078764.  call temp:= `q`(v0) @signature `La/u;.q:()Z` @kind virtual;
  #L07876a.  v0:= temp;
  #L07876c.  if v0 == 0 then goto L0786d4;
  #L078770.  v0:= "Location" @kind object;
  #L078774.  call temp:= `a`(v7, v0) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07877a.  v0:= temp @kind object;
  #L07877c.  if v0 == 0 then goto L0786d4;
  #L078780.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078786.  v2:= temp @kind object;
  #L078788.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07878e.  v2:= temp @kind object;
  #L078790.  call temp:= `c`(v2, v0) @signature `La/r;.c:(Ljava/lang/String;)La/r;` @kind virtual;
  #L078796.  v0:= temp @kind object;
  #L078798.  if v0 == 0 then goto L0786d4;
  #L07879c.  call temp:= `b`(v0) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L0787a2.  v2:= temp @kind object;
  #L0787a4.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L0787aa.  v4:= temp @kind object;
  #L0787ac.  call temp:= `a`(v4) @signature `La/x;.a:()La/r;` @kind virtual;
  #L0787b2.  v4:= temp @kind object;
  #L0787b4.  call temp:= `b`(v4) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L0787ba.  v4:= temp @kind object;
  #L0787bc.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0787c2.  v2:= temp;
  #L0787c4.  if v2 != 0 then goto L0787d8;
  #L0787c8.  v2:= v6.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L0787cc.  call temp:= `p`(v2) @signature `La/u;.p:()Z` @kind virtual;
  #L0787d2.  v2:= temp;
  #L0787d4.  if v2 == 0 then goto L0786d4;
  #L0787d8.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L0787de.  v2:= temp @kind object;
  #L0787e0.  call temp:= `e`(v2) @signature `La/x;.e:()La/x$a;` @kind virtual;
  #L0787e6.  v2:= temp @kind object;
  #L0787e8.  call temp:= `c`(v3) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L0787ee.  v4:= temp;
  #L0787f0.  if v4 == 0 then goto L078834;
  #L0787f4.  call temp:= `d`(v3) @signature `La/a/c/f;.d:(Ljava/lang/String;)Z` @kind static;
  #L0787fa.  v4:= temp;
  #L0787fc.  call temp:= `e`(v3) @signature `La/a/c/f;.e:(Ljava/lang/String;)Z` @kind static;
  #L078802.  v5:= temp;
  #L078804.  if v5 == 0 then goto L07885e;
  #L078808.  v3:= "GET" @kind object;
  #L07880c.  call temp:= `a`(v2, v3, v1) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @kind virtual;
  #L078812.  if v4 != 0 then goto L078834;
  #L078816.  v1:= "Transfer-Encoding" @kind object;
  #L07881a.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L078820.  v1:= "Content-Length" @kind object;
  #L078824.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07882a.  v1:= "Content-Type" @kind object;
  #L07882e.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L078834.  call temp:= `a`(v6, v7, v0) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @kind direct;
  #L07883a.  v1:= temp;
  #L07883c.  if v1 != 0 then goto L07884a;
  #L078840.  v1:= "Authorization" @kind object;
  #L078844.  call temp:= `b`(v2, v1) @signature `La/x$a;.b:(Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07884a.  call temp:= `a`(v2, v0) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L078850.  v0:= temp @kind object;
  #L078852.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L078858.  v1:= temp @kind object;
  #L07885a.  goto L0786d4;
  #L07885e.  if v4 == 0 then goto L078872;
  #L078862.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078868.  v1:= temp @kind object;
  #L07886a.  call temp:= `d`(v1) @signature `La/x;.d:()La/y;` @kind virtual;
  #L078870.  v1:= temp @kind object;
  #L078872.  call temp:= `a`(v2, v3, v1) @signature `La/x$a;.a:(Ljava/lang/String;La/y;)La/x$a;` @kind virtual;
  #L078878.  goto L078812;
  #L07887a.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078880.  v0:= temp @kind object;
  #L078882.  call temp:= `d`(v0) @signature `La/x;.d:()La/y;` @kind virtual;
  #L078888.  v0:= temp @kind object;
  #L07888a.  v0:= instanceof @variable v0 @type ^`a.a.c.l` @kind boolean;
  #L07888e.  if v0 != 0 then goto L0786d4;
  #L078892.  call temp:= `a`(v7) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078898.  v1:= temp @kind object;
  #L07889a.  goto L0786d4;
  #L07889e.  
  #L0788a0.  switch v2
                  | 300 => goto L078760
                  | 301 => goto L078760
                  | 302 => goto L078760
                  | 303 => goto L078760
                  | 307 => goto L078740
                  | 308 => goto L078740
                  | 401 => goto L07872a
                  | 407 => goto L0786da
                  | 408 => goto L07887a
                  | else => goto L0786d4;
}
procedure `boolean` `a`(`a.a.c.j` v3 @kind this, `a.z` v4 @kind object, `a.r` v5 @kind object) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L0788fc.  call temp:= `a`(v4) @signature `La/z;.a:()La/x;` @kind virtual;
  #L078902.  v0:= temp @kind object;
  #L078904.  call temp:= `a`(v0) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07890a.  v0:= temp @kind object;
  #L07890c.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L078912.  v1:= temp @kind object;
  #L078914.  call temp:= `f`(v5) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07891a.  v2:= temp @kind object;
  #L07891c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L078922.  v1:= temp;
  #L078924.  if v1 == 0 then goto L07895c;
  #L078928.  call temp:= `g`(v0) @signature `La/r;.g:()I` @kind virtual;
  #L07892e.  v1:= temp;
  #L078930.  call temp:= `g`(v5) @signature `La/r;.g:()I` @kind virtual;
  #L078936.  v2:= temp;
  #L078938.  if v1 != v2 then goto L07895c;
  #L07893c.  call temp:= `b`(v0) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L078942.  v0:= temp @kind object;
  #L078944.  call temp:= `b`(v5) @signature `La/r;.b:()Ljava/lang/String;` @kind virtual;
  #L07894a.  v1:= temp @kind object;
  #L07894c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L078952.  v0:= temp;
  #L078954.  if v0 == 0 then goto L07895c;
  #L078958.  v0:= 1I;
  #L07895a.  return v0;
  #L07895c.  v0:= 0I;
  #L07895e.  goto L07895a;
}
procedure `boolean` `a`(`a.a.c.j` v3 @kind this, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `La/a/c/j;.a:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L078970.  v0:= 1I;
  #L078972.  v1:= 0I;
  #L078974.  v2:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L078978.  if v2 == 0 then goto L07897e;
  #L07897c.  return v1;
  #L07897e.  v2:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L078982.  if v2 == 0 then goto L07899a;
  #L078986.  v2:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L07898a.  if v2 == 0 then goto L078996;
  #L07898e.  if v5 != 0 then goto L078996;
  #L078992.  v1:= v0;
  #L078994.  goto L07897c;
  #L078996.  v0:= v1;
  #L078998.  goto L078992;
  #L07899a.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L07899e.  if v2 == 0 then goto L0789b2;
  #L0789a2.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L0789a8.  v2:= temp @kind object;
  #L0789aa.  v2:= instanceof @variable v2 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L0789ae.  if v2 != 0 then goto L07897c;
  #L0789b2.  v2:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L0789b6.  if v2 != 0 then goto L07897c;
  #L0789ba.  v1:= v0;
  #L0789bc.  goto L07897c;
}
procedure `boolean` `a`(`a.a.c.j` v2 @kind this, `java.io.IOException` v3 @kind object, `boolean` v4 , `a.x` v5 @kind object) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L0789d0.  v0:= 0I;
  #L0789d2.  v1:= v2.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L0789d6.  call `a`(v1, v3) @signature `La/a/b/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L0789dc.  v1:= v2.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L0789e0.  call temp:= `r`(v1) @signature `La/u;.r:()Z` @kind virtual;
  #L0789e6.  v1:= temp;
  #L0789e8.  if v1 != 0 then goto L0789ee;
  #L0789ec.  return v0;
  #L0789ee.  if v4 == 0 then goto L078a02;
  #L0789f2.  call temp:= `d`(v5) @signature `La/x;.d:()La/y;` @kind virtual;
  #L0789f8.  v1:= temp @kind object;
  #L0789fa.  v1:= instanceof @variable v1 @type ^`a.a.c.l` @kind boolean;
  #L0789fe.  if v1 != 0 then goto L0789ec;
  #L078a02.  call temp:= `a`(v2, v3, v4) @signature `La/a/c/j;.a:(Ljava/io/IOException;Z)Z` @kind direct;
  #L078a08.  v1:= temp;
  #L078a0a.  if v1 == 0 then goto L0789ec;
  #L078a0e.  v1:= v2.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078a12.  call temp:= `e`(v1) @signature `La/a/b/g;.e:()Z` @kind virtual;
  #L078a18.  v1:= temp;
  #L078a1a.  if v1 == 0 then goto L0789ec;
  #L078a1e.  v0:= 1I;
  #L078a20.  goto L0789ec;
}
procedure `a.z` `a`(`a.a.c.j` v10 @kind this, `a.s$a` v11 @kind object) @signature `La/a/c/j;.a:(La/s$a;)La/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L078a34.  v5:= 0I;
  #L078a36.  v3:= 0I;
  #L078a38.  call temp:= `a`(v11) @signature `La/s$a;.a:()La/x;` @kind interface;
  #L078a3e.  v1:= temp @kind object;
  #L078a40.  v2:= new `a.a.b.g`;
  #L078a44.  v4:= v10.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078a48.  call temp:= `o`(v4) @signature `La/u;.o:()La/j;` @kind virtual;
  #L078a4e.  v4:= temp @kind object;
  #L078a50.  call temp:= `a`(v1) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078a56.  v6:= temp @kind object;
  #L078a58.  call temp:= `a`(v10, v6) @signature `La/a/c/j;.a:(La/r;)La/a;` @kind direct;
  #L078a5e.  v6:= temp @kind object;
  #L078a60.  v7:= v10.`a.a.c.j.d` @type ^`java.lang.Object` @kind object;
  #L078a64.  call `<init>`(v2, v4, v6, v7) @signature `La/a/b/g;.<init>:(La/j;La/a;Ljava/lang/Object;)V` @kind direct;
  #L078a6a.  v10.`a.a.c.j.c` @type ^`a.a.b.g` := v2 @kind object;
  #L078a6e.  v2:= v3 @kind object;
  #L078a70.  v4:= v5;
  #L078a72.  v6:= v1 @kind object;
  #L078a74.  v1:= v10.`a.a.c.j.e` @type ^`boolean` @kind boolean;
  #L078a78.  if v1 == 0 then goto L078a96;
  #L078a7c.  v1:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078a80.  call `c`(v1) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L078a86.  v1:= new `java.io.IOException`;
  #L078a8a.  v2:= "Canceled" @kind object;
  #L078a8e.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L078a94.  throw v1;
  #Try_start0.  
  #L078a96.  v0:= v11 @kind object;
  #L078a98.  v0:= (`a.a.c.g`) v0 @kind object;
  #L078a9c.  v1:= v0 @kind object;
  #L078a9e.  v7:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078aa2.  v8:= 0I;
  #L078aa4.  v9:= 0I;
  #L078aa6.  call temp:= `a`(v1, v6, v7, v8, v9) @signature `La/a/c/g;.a:(La/x;La/a/b/g;La/a/c/c;La/i;)La/z;` @kind virtual;
  #Try_end0.  
  #L078aac.  v1:= temp @kind object;
  #L078aae.  if v2 == 0 then goto L078ae2;
  #L078ab2.  call temp:= `g`(v1) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L078ab8.  v1:= temp @kind object;
  #L078aba.  call temp:= `g`(v2) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L078ac0.  v2:= temp @kind object;
  #L078ac2.  call temp:= `a`(v2, v3) @signature `La/z$a;.a:(La/aa;)La/z$a;` @kind virtual;
  #L078ac8.  v2:= temp @kind object;
  #L078aca.  call temp:= `a`(v2) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L078ad0.  v2:= temp @kind object;
  #L078ad2.  call temp:= `c`(v1, v2) @signature `La/z$a;.c:(La/z;)La/z$a;` @kind virtual;
  #L078ad8.  v1:= temp @kind object;
  #L078ada.  call temp:= `a`(v1) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L078ae0.  v1:= temp @kind object;
  #L078ae2.  call temp:= `a`(v10, v1) @signature `La/a/c/j;.a:(La/z;)La/x;` @kind direct;
  #L078ae8.  v6:= temp @kind object;
  #L078aea.  if v6 != 0 then goto L078b5a;
  #L078aee.  v2:= v10.`a.a.c.j.b` @type ^`boolean` @kind boolean;
  #L078af2.  if v2 != 0 then goto L078b00;
  #L078af6.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078afa.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L078b00.  return v1 @kind object;
  #L078b02.  v1:= Exception @type ^`a.a.b.e` @kind object;
  #Try_start1.  
  #L078b04.  call temp:= `a`(v1) @signature `La/a/b/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L078b0a.  v7:= temp @kind object;
  #L078b0c.  v8:= 0I;
  #L078b0e.  call temp:= `a`(v10, v7, v8, v6) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @kind direct;
  #L078b14.  v7:= temp;
  #L078b16.  if v7 != 0 then goto L078a74;
  #L078b1a.  call temp:= `a`(v1) @signature `La/a/b/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L078b20.  v1:= temp @kind object;
  #L078b22.  throw v1;
  #Try_end1.  
  #L078b24.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L078b26.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078b2a.  call `a`(v2, v3) @signature `La/a/b/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L078b30.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078b34.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L078b3a.  throw v1;
  #L078b3c.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start2.  
  #L078b3e.  v7:= instanceof @variable v1 @type ^`a.a.e.a` @kind boolean;
  #L078b42.  if v7 != 0 then goto L078b56;
  #L078b46.  v7:= 1I;
  #L078b48.  call temp:= `a`(v10, v1, v7, v6) @signature `La/a/c/j;.a:(Ljava/io/IOException;ZLa/x;)Z` @kind direct;
  #L078b4e.  v7:= temp;
  #L078b50.  if v7 != 0 then goto L078a74;
  #L078b54.  throw v1;
  #Try_end2.  
  #L078b56.  v7:= v5;
  #L078b58.  goto L078b48;
  #L078b5a.  call temp:= `f`(v1) @signature `La/z;.f:()La/aa;` @kind virtual;
  #L078b60.  v2:= temp @kind object;
  #L078b62.  call `a`(v2) @signature `La/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L078b68.  v2:= v4 + 1;
  #L078b6c.  v4:= 20I;
  #L078b70.  if v2 <= v4 then goto L078bb0;
  #L078b74.  v1:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078b78.  call `c`(v1) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L078b7e.  v1:= new `java.net.ProtocolException`;
  #L078b82.  v3:= new `java.lang.StringBuilder`;
  #L078b86.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L078b8c.  v4:= "Too many follow-up requests: " @kind object;
  #L078b90.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078b96.  v3:= temp @kind object;
  #L078b98.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L078b9e.  v2:= temp @kind object;
  #L078ba0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L078ba6.  v2:= temp @kind object;
  #L078ba8.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L078bae.  throw v1;
  #L078bb0.  call temp:= `d`(v6) @signature `La/x;.d:()La/y;` @kind virtual;
  #L078bb6.  v4:= temp @kind object;
  #L078bb8.  v4:= instanceof @variable v4 @type ^`a.a.c.l` @kind boolean;
  #L078bbc.  if v4 == 0 then goto L078be2;
  #L078bc0.  v2:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078bc4.  call `c`(v2) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L078bca.  v2:= new `java.net.HttpRetryException`;
  #L078bce.  v3:= "Cannot retry streamed HTTP body" @kind object;
  #L078bd2.  call temp:= `b`(v1) @signature `La/z;.b:()I` @kind virtual;
  #L078bd8.  v1:= temp;
  #L078bda.  call `<init>`(v2, v3, v1) @signature `Ljava/net/HttpRetryException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L078be0.  throw v2;
  #L078be2.  call temp:= `a`(v6) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078be8.  v4:= temp @kind object;
  #L078bea.  call temp:= `a`(v10, v1, v4) @signature `La/a/c/j;.a:(La/z;La/r;)Z` @kind direct;
  #L078bf0.  v4:= temp;
  #L078bf2.  if v4 != 0 then goto L078c36;
  #L078bf6.  v4:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078bfa.  call `c`(v4) @signature `La/a/b/g;.c:()V` @kind virtual;
  #L078c00.  v4:= new `a.a.b.g`;
  #L078c04.  v7:= v10.`a.a.c.j.a` @type ^`a.u` @kind object;
  #L078c08.  call temp:= `o`(v7) @signature `La/u;.o:()La/j;` @kind virtual;
  #L078c0e.  v7:= temp @kind object;
  #L078c10.  call temp:= `a`(v6) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078c16.  v8:= temp @kind object;
  #L078c18.  call temp:= `a`(v10, v8) @signature `La/a/c/j;.a:(La/r;)La/a;` @kind direct;
  #L078c1e.  v8:= temp @kind object;
  #L078c20.  v9:= v10.`a.a.c.j.d` @type ^`java.lang.Object` @kind object;
  #L078c24.  call `<init>`(v4, v7, v8, v9) @signature `La/a/b/g;.<init>:(La/j;La/a;Ljava/lang/Object;)V` @kind direct;
  #L078c2a.  v10.`a.a.c.j.c` @type ^`a.a.b.g` := v4 @kind object;
  #L078c2e.  v4:= v2;
  #L078c30.  v2:= v1 @kind object;
  #L078c32.  goto L078a74;
  #L078c36.  v4:= v10.`a.a.c.j.c` @type ^`a.a.b.g` @kind object;
  #L078c3a.  call temp:= `a`(v4) @signature `La/a/b/g;.a:()La/a/c/c;` @kind virtual;
  #L078c40.  v4:= temp @kind object;
  #L078c42.  if v4 == 0 then goto L078c2e;
  #L078c46.  v2:= new `java.lang.IllegalStateException`;
  #L078c4a.  v3:= new `java.lang.StringBuilder`;
  #L078c4e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L078c54.  v4:= "Closing the body of " @kind object;
  #L078c58.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078c5e.  v3:= temp @kind object;
  #L078c60.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078c66.  v1:= temp @kind object;
  #L078c68.  v3:= " didn't close its backing stream. Bad interceptor?" @kind object;
  #L078c6c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078c72.  v1:= temp @kind object;
  #L078c74.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L078c7a.  v1:= temp @kind object;
  #L078c7c.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L078c82.  throw v2;
  catch `a.a.b.e` @[Try_start0..Try_end0] goto L078b02;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L078b3c;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L078b24;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L078b24;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L078b24;
}
procedure `void` `a`(`a.a.c.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `La/a/c/j;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L078cb8.  v0.`a.a.c.j.d` @type ^`java.lang.Object` := v1 @kind object;
  #L078cbc.  return @kind void;
}
procedure `boolean` `a`(`a.a.c.j` v1 @kind this) @signature `La/a/c/j;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L078cd0.  v0:= v1.`a.a.c.j.e` @type ^`boolean` @kind boolean;
  #L078cd4.  return v0;
}

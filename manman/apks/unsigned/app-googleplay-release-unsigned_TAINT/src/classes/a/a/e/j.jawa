record `a.a.e.j` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `a.a.e.d$b` `a.a.e.j.a` @AccessFlag FINAL;
  `b.d` `a.a.e.j.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.e.j.d` @AccessFlag PRIVATE_FINAL;
  `b.c` `a.a.e.j.e` @AccessFlag PRIVATE_FINAL;
  `int` `a.a.e.j.f` @AccessFlag PRIVATE;
  `boolean` `a.a.e.j.g` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@a.a.e.j.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L080324.  v0:= constclass @type ^`a.a.e.e` @kind object;
  #L080328.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L08032e.  v0:= temp @kind object;
  #L080330.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L080336.  v0:= temp @kind object;
  #L080338.  `@@a.a.e.j.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L08033c.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.j` v2 @kind this, `b.d` v3 @kind object, `boolean` v4 ) @signature `La/a/e/j;.<init>:(Lb/d;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L080350.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L080356.  v2.`a.a.e.j.c` @type ^`b.d` := v3 @kind object;
  #L08035a.  v2.`a.a.e.j.d` @type ^`boolean` := v4 @kind boolean;
  #L08035e.  v0:= new `b.c`;
  #L080362.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L080368.  v2.`a.a.e.j.e` @type ^`b.c` := v0 @kind object;
  #L08036c.  v0:= new `a.a.e.d$b`;
  #L080370.  v1:= v2.`a.a.e.j.e` @type ^`b.c` @kind object;
  #L080374.  call `<init>`(v0, v1) @signature `La/a/e/d$b;.<init>:(Lb/c;)V` @kind direct;
  #L08037a.  v2.`a.a.e.j.a` @type ^`a.a.e.d$b` := v0 @kind object;
  #L08037e.  v0:= 16384I;
  #L080382.  v2.`a.a.e.j.f` @type ^`int` := v0;
  #L080386.  return @kind void;
}
procedure `void` `a`(`b.d` v1 @kind object, `int` v2 ) @signature `La/a/e/j;.a:(Lb/d;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L080398.  v0:= v2 ^>> 16;
  #L08039c.  v0:= v0 ^& 255;
  #L0803a0.  call temp:= `i`(v1, v0) @signature `Lb/d;.i:(I)Lb/d;` @kind interface;
  #L0803a6.  v0:= v2 ^>> 8;
  #L0803aa.  v0:= v0 ^& 255;
  #L0803ae.  call temp:= `i`(v1, v0) @signature `Lb/d;.i:(I)Lb/d;` @kind interface;
  #L0803b4.  v0:= v2 ^& 255;
  #L0803b8.  call temp:= `i`(v1, v0) @signature `Lb/d;.i:(I)Lb/d;` @kind interface;
  #L0803be.  return @kind void;
}
procedure `void` `b`(`a.a.e.j` v8 @kind this, `int` v9 , `long` v10 ) @signature `La/a/e/j;.b:(IJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0803d0.  v6:= 0L;
  #L0803d4.  v0:= lcmp(v10, v6);
  #L0803d8.  if v0 <= 0 then goto L08041a;
  #L0803dc.  v0:= v8.`a.a.e.j.f` @type ^`int`;
  #L0803e0.  v0:= (`long`) v0 @kind i2l;
  #L0803e2.  call temp:= `min`(v0, v10) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L0803e8.  v0:= temp @kind wide;
  #L0803ea.  v1:= (`int`) v0 @kind l2i;
  #L0803ec.  v2:= (`long`) v1 @kind i2l;
  #L0803ee.  v10:= v10 - v2 @kind long;
  #L0803f0.  v2:= 9I;
  #L0803f4.  v0:= lcmp(v10, v6);
  #L0803f8.  if v0 != 0 then goto L080416;
  #L0803fc.  v0:= 4I;
  #L0803fe.  call `a`(v8, v9, v1, v2, v0) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L080404.  v0:= v8.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080408.  v2:= v8.`a.a.e.j.e` @type ^`b.c` @kind object;
  #L08040c.  v4:= (`long`) v1 @kind i2l;
  #L08040e.  call `a_`(v0, v2, v4) @signature `Lb/d;.a_:(Lb/c;J)V` @kind interface;
  #L080414.  goto L0803d4;
  #L080416.  v0:= 0I;
  #L080418.  goto L0803fe;
  #L08041a.  return @kind void;
}
procedure `void` `a`(`a.a.e.j` v5 @kind this) @signature `La/a/e/j;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08042c.  @monitorenter v5
  #Try_start0.  
  #L08042e.  v0:= v5.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L080432.  if v0 == 0 then goto L08044c;
  #L080436.  v0:= new `java.io.IOException`;
  #L08043a.  v1:= "closed" @kind object;
  #L08043e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L080444.  throw v0;
  #Try_end0.  
  #L080446.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L080448.  @monitorexit v5
  #L08044a.  throw v0;
  #Try_start1.  
  #L08044c.  v0:= v5.`a.a.e.j.d` @type ^`boolean` @kind boolean;
  #Try_end1.  
  #L080450.  if v0 != 0 then goto L080458;
  #L080454.  @monitorexit v5
  #L080456.  return @kind void;
  #Try_start2.  
  #L080458.  v0:= `@@a.a.e.j.b` @type ^`java.util.logging.Logger` @kind object;
  #L08045c.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L080460.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L080466.  v0:= temp;
  #L080468.  if v0 == 0 then goto L08049a;
  #L08046c.  v0:= `@@a.a.e.j.b` @type ^`java.util.logging.Logger` @kind object;
  #L080470.  v1:= ">> CONNECTION %s" @kind object;
  #L080474.  v2:= 1I;
  #L080476.  v2:= new `java.lang.Object`[v2];
  #L08047a.  v3:= 0I;
  #L08047c.  v4:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L080480.  call temp:= `e`(v4) @signature `Lb/f;.e:()Ljava/lang/String;` @kind virtual;
  #L080486.  v4:= temp @kind object;
  #L080488.  v2[v3]:= v4 @kind object;
  #L08048c.  call temp:= `a`(v1, v2) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L080492.  v1:= temp @kind object;
  #L080494.  call `fine`(v0, v1) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L08049a.  v0:= v5.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L08049e.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L0804a2.  call temp:= `h`(v1) @signature `Lb/f;.h:()[B` @kind virtual;
  #L0804a8.  v1:= temp @kind object;
  #L0804aa.  call temp:= `c`(v0, v1) @signature `Lb/d;.c:([B)Lb/d;` @kind interface;
  #L0804b0.  v0:= v5.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L0804b4.  call `flush`(v0) @signature `Lb/d;.flush:()V` @kind interface;
  #Try_end2.  
  #L0804ba.  goto L080454;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L080446;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L080446;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L080446;
}
procedure `void` `a`(`a.a.e.j` v4 @kind this, `int` v5 , `byte` v6 , `b.c` v7 @kind object, `int` v8 ) @signature `La/a/e/j;.a:(IBLb/c;I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0804e8.  v0:= 0I;
  #L0804ea.  call `a`(v4, v5, v8, v0, v6) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L0804f0.  if v8 <= 0 then goto L080500;
  #L0804f4.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L0804f8.  v2:= (`long`) v8 @kind i2l;
  #L0804fa.  call `a_`(v0, v7, v2) @signature `Lb/d;.a_:(Lb/c;J)V` @kind interface;
  #L080500.  return @kind void;
}
procedure `void` `a`(`a.a.e.j` v5 @kind this, `int` v6 , `int` v7 , `byte` v8 , `byte` v9 ) @signature `La/a/e/j;.a:(IIBB)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L080514.  v4:= 1I;
  #L080516.  v3:= 0I;
  #L080518.  v0:= `@@a.a.e.j.b` @type ^`java.util.logging.Logger` @kind object;
  #L08051c.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L080520.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L080526.  v0:= temp;
  #L080528.  if v0 == 0 then goto L08053e;
  #L08052c.  v0:= `@@a.a.e.j.b` @type ^`java.util.logging.Logger` @kind object;
  #L080530.  call temp:= `a`(v3, v6, v7, v8, v9) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L080536.  v1:= temp @kind object;
  #L080538.  call `fine`(v0, v1) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L08053e.  v0:= v5.`a.a.e.j.f` @type ^`int`;
  #L080542.  if v7 <= v0 then goto L080576;
  #L080546.  v0:= "FRAME_SIZE_ERROR length > %d: %d" @kind object;
  #L08054a.  v1:= 2I;
  #L08054c.  v1:= new `java.lang.Object`[v1];
  #L080550.  v2:= v5.`a.a.e.j.f` @type ^`int`;
  #L080554.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08055a.  v2:= temp @kind object;
  #L08055c.  v1[v3]:= v2 @kind object;
  #L080560.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L080566.  v2:= temp @kind object;
  #L080568.  v1[v4]:= v2 @kind object;
  #L08056c.  call temp:= `a`(v0, v1) @signature `La/a/e/e;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L080572.  v0:= temp @kind object;
  #L080574.  throw v0;
  #L080576.  v0:= -2147483648I;
  #L08057a.  v0:= v0 ^& v6 @kind int;
  #L08057c.  if v0 == 0 then goto L08059e;
  #L080580.  v0:= "reserved bit set: %s" @kind object;
  #L080584.  v1:= new `java.lang.Object`[v4];
  #L080588.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08058e.  v2:= temp @kind object;
  #L080590.  v1[v3]:= v2 @kind object;
  #L080594.  call temp:= `a`(v0, v1) @signature `La/a/e/e;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L08059a.  v0:= temp @kind object;
  #L08059c.  throw v0;
  #L08059e.  v0:= v5.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L0805a2.  call `a`(v0, v7) @signature `La/a/e/j;.a:(Lb/d;I)V` @kind static;
  #L0805a8.  v0:= v5.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L0805ac.  v1:= v8 ^& 255;
  #L0805b0.  call temp:= `i`(v0, v1) @signature `Lb/d;.i:(I)Lb/d;` @kind interface;
  #L0805b6.  v0:= v5.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L0805ba.  v1:= v9 ^& 255;
  #L0805be.  call temp:= `i`(v0, v1) @signature `Lb/d;.i:(I)Lb/d;` @kind interface;
  #L0805c4.  v0:= v5.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L0805c8.  v1:= 2147483647I;
  #L0805ce.  v1:= v1 ^& v6 @kind int;
  #L0805d0.  call temp:= `g`(v0, v1) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L0805d6.  return @kind void;
}
procedure `void` `a`(`a.a.e.j` v8 @kind this, `int` v9 , `int` v10 , `java.util.List` v11 @kind object) @signature `La/a/e/j;.a:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0805e8.  @monitorenter v8
  #Try_start0.  
  #L0805ea.  v0:= v8.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L0805ee.  if v0 == 0 then goto L080608;
  #L0805f2.  v0:= new `java.io.IOException`;
  #L0805f6.  v1:= "closed" @kind object;
  #L0805fa.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L080600.  throw v0;
  #Try_end0.  
  #L080602.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L080604.  @monitorexit v8
  #L080606.  throw v0;
  #Try_start1.  
  #L080608.  v0:= v8.`a.a.e.j.a` @type ^`a.a.e.d$b` @kind object;
  #L08060c.  call `a`(v0, v11) @signature `La/a/e/d$b;.a:(Ljava/util/List;)V` @kind virtual;
  #L080612.  v0:= v8.`a.a.e.j.e` @type ^`b.c` @kind object;
  #L080616.  call temp:= `b`(v0) @signature `Lb/c;.b:()J` @kind virtual;
  #L08061c.  v2:= temp @kind wide;
  #L08061e.  v0:= v8.`a.a.e.j.f` @type ^`int`;
  #L080622.  v0:= v0 + -4;
  #L080626.  v0:= (`long`) v0 @kind i2l;
  #L080628.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L08062e.  v0:= temp @kind wide;
  #L080630.  v1:= (`int`) v0 @kind l2i;
  #L080632.  v4:= 5I;
  #L080634.  v6:= (`long`) v1 @kind i2l;
  #L080636.  v0:= lcmp(v2, v6);
  #L08063a.  if v0 != 0 then goto L080686;
  #L08063e.  v0:= 4I;
  #L080640.  v5:= v1 + 4;
  #L080644.  call `a`(v8, v9, v5, v4, v0) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L08064a.  v0:= v8.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L08064e.  v4:= 2147483647I;
  #L080654.  v4:= v4 ^& v10 @kind int;
  #L080656.  call temp:= `g`(v0, v4) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L08065c.  v0:= v8.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080660.  v4:= v8.`a.a.e.j.e` @type ^`b.c` @kind object;
  #L080664.  v6:= (`long`) v1 @kind i2l;
  #L080666.  call `a_`(v0, v4, v6) @signature `Lb/d;.a_:(Lb/c;J)V` @kind interface;
  #L08066c.  v4:= (`long`) v1 @kind i2l;
  #L08066e.  v0:= lcmp(v2, v4);
  #L080672.  if v0 <= 0 then goto L080682;
  #L080676.  v0:= (`long`) v1 @kind i2l;
  #L080678.  v0:= v2 - v0 @kind long;
  #L08067c.  call `b`(v8, v9, v0) @signature `La/a/e/j;.b:(IJ)V` @kind direct;
  #Try_end1.  
  #L080682.  @monitorexit v8
  #L080684.  return @kind void;
  #L080686.  v0:= 0I;
  #L080688.  goto L080640;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L080602;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L080602;
}
procedure `void` `a`(`a.a.e.j` v4 @kind this, `int` v5 , `long` v6 ) @signature `La/a/e/j;.a:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0806b0.  @monitorenter v4
  #Try_start0.  
  #L0806b2.  v0:= v4.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L0806b6.  if v0 == 0 then goto L0806d0;
  #L0806ba.  v0:= new `java.io.IOException`;
  #L0806be.  v1:= "closed" @kind object;
  #L0806c2.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0806c8.  throw v0;
  #Try_end0.  
  #L0806ca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0806cc.  @monitorexit v4
  #L0806ce.  throw v0;
  #L0806d0.  v0:= 0L;
  #L0806d4.  v0:= lcmp(v6, v0);
  #L0806d8.  if v0 == 0 then goto L0806ea;
  #L0806dc.  v0:= 2147483647L;
  #L0806e2.  v0:= lcmp(v6, v0);
  #L0806e6.  if v0 <= 0 then goto L08070c;
  #Try_start1.  
  #L0806ea.  v0:= "windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s" @kind object;
  #L0806ee.  v1:= 1I;
  #L0806f0.  v1:= new `java.lang.Object`[v1];
  #L0806f4.  v2:= 0I;
  #L0806f6.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L0806fc.  v3:= temp @kind object;
  #L0806fe.  v1[v2]:= v3 @kind object;
  #L080702.  call temp:= `a`(v0, v1) @signature `La/a/e/e;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L080708.  v0:= temp @kind object;
  #L08070a.  throw v0;
  #L08070c.  v0:= 4I;
  #L08070e.  v1:= 8I;
  #L080712.  v2:= 0I;
  #L080714.  call `a`(v4, v5, v0, v1, v2) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L08071a.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L08071e.  v1:= (`int`) v6 @kind l2i;
  #L080720.  call temp:= `g`(v0, v1) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L080726.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L08072a.  call `flush`(v0) @signature `Lb/d;.flush:()V` @kind interface;
  #Try_end1.  
  #L080730.  @monitorexit v4
  #L080732.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0806ca;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0806ca;
}
procedure `void` `a`(`a.a.e.j` v3 @kind this, `int` v4 , `a.a.e.b` v5 @kind object) @signature `La/a/e/j;.a:(ILa/a/e/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L080758.  @monitorenter v3
  #Try_start0.  
  #L08075a.  v0:= v3.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L08075e.  if v0 == 0 then goto L080778;
  #L080762.  v0:= new `java.io.IOException`;
  #L080766.  v1:= "closed" @kind object;
  #L08076a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L080770.  throw v0;
  #Try_end0.  
  #L080772.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L080774.  @monitorexit v3
  #L080776.  throw v0;
  #Try_start1.  
  #L080778.  v0:= v5.`a.a.e.b.g` @type ^`int`;
  #L08077c.  v1:= -1I;
  #L08077e.  if v0 != v1 then goto L08078e;
  #L080782.  v0:= new `java.lang.IllegalArgumentException`;
  #L080786.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L08078c.  throw v0;
  #L08078e.  v0:= 4I;
  #L080790.  v1:= 3I;
  #L080792.  v2:= 0I;
  #L080794.  call `a`(v3, v4, v0, v1, v2) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L08079a.  v0:= v3.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L08079e.  v1:= v5.`a.a.e.b.g` @type ^`int`;
  #L0807a2.  call temp:= `g`(v0, v1) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L0807a8.  v0:= v3.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L0807ac.  call `flush`(v0) @signature `Lb/d;.flush:()V` @kind interface;
  #Try_end1.  
  #L0807b2.  @monitorexit v3
  #L0807b4.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L080772;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L080772;
}
procedure `void` `a`(`a.a.e.j` v4 @kind this, `int` v5 , `a.a.e.b` v6 @kind object, `byte`[] v7 @kind object) @signature `La/a/e/j;.a:(ILa/a/e/b;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0807dc.  @monitorenter v4
  #Try_start0.  
  #L0807de.  v0:= v4.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L0807e2.  if v0 == 0 then goto L0807fc;
  #L0807e6.  v0:= new `java.io.IOException`;
  #L0807ea.  v1:= "closed" @kind object;
  #L0807ee.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0807f4.  throw v0;
  #Try_end0.  
  #L0807f6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0807f8.  @monitorexit v4
  #L0807fa.  throw v0;
  #Try_start1.  
  #L0807fc.  v0:= v6.`a.a.e.b.g` @type ^`int`;
  #L080800.  v1:= -1I;
  #L080802.  if v0 != v1 then goto L08081a;
  #L080806.  v0:= "errorCode.httpCode == -1" @kind object;
  #L08080a.  v1:= 0I;
  #L08080c.  v1:= new `java.lang.Object`[v1];
  #L080810.  call temp:= `a`(v0, v1) @signature `La/a/e/e;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L080816.  v0:= temp @kind object;
  #L080818.  throw v0;
  #L08081a.  v0:= length @variable v7;
  #L08081c.  v0:= v0 + 8;
  #L080820.  v1:= 7I;
  #L080822.  v2:= 0I;
  #L080824.  v3:= 0I;
  #L080826.  call `a`(v4, v3, v0, v1, v2) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L08082c.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080830.  call temp:= `g`(v0, v5) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L080836.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L08083a.  v1:= v6.`a.a.e.b.g` @type ^`int`;
  #L08083e.  call temp:= `g`(v0, v1) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L080844.  v0:= length @variable v7;
  #L080846.  if v0 <= 0 then goto L080854;
  #L08084a.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L08084e.  call temp:= `c`(v0, v7) @signature `Lb/d;.c:([B)Lb/d;` @kind interface;
  #L080854.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080858.  call `flush`(v0) @signature `Lb/d;.flush:()V` @kind interface;
  #Try_end1.  
  #L08085e.  @monitorexit v4
  #L080860.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0807f6;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0807f6;
}
procedure `void` `a`(`a.a.e.j` v4 @kind this, `a.a.e.n` v5 @kind object) @signature `La/a/e/j;.a:(La/a/e/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L080888.  @monitorenter v4
  #Try_start0.  
  #L08088a.  v0:= v4.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L08088e.  if v0 == 0 then goto L0808a8;
  #L080892.  v0:= new `java.io.IOException`;
  #L080896.  v1:= "closed" @kind object;
  #L08089a.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0808a0.  throw v0;
  #Try_end0.  
  #L0808a2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0808a4.  @monitorexit v4
  #L0808a6.  throw v0;
  #Try_start1.  
  #L0808a8.  v0:= v4.`a.a.e.j.f` @type ^`int`;
  #L0808ac.  call temp:= `d`(v5, v0) @signature `La/a/e/n;.d:(I)I` @kind virtual;
  #L0808b2.  v0:= temp;
  #L0808b4.  v4.`a.a.e.j.f` @type ^`int` := v0;
  #L0808b8.  call temp:= `c`(v5) @signature `La/a/e/n;.c:()I` @kind virtual;
  #L0808be.  v0:= temp;
  #L0808c0.  v1:= -1I;
  #L0808c2.  if v0 == v1 then goto L0808d8;
  #L0808c6.  v0:= v4.`a.a.e.j.a` @type ^`a.a.e.d$b` @kind object;
  #L0808ca.  call temp:= `c`(v5) @signature `La/a/e/n;.c:()I` @kind virtual;
  #L0808d0.  v1:= temp;
  #L0808d2.  call `a`(v0, v1) @signature `La/a/e/d$b;.a:(I)V` @kind virtual;
  #L0808d8.  v0:= 0I;
  #L0808da.  v1:= 4I;
  #L0808dc.  v2:= 1I;
  #L0808de.  v3:= 0I;
  #L0808e0.  call `a`(v4, v3, v0, v1, v2) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L0808e6.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L0808ea.  call `flush`(v0) @signature `Lb/d;.flush:()V` @kind interface;
  #Try_end1.  
  #L0808f0.  @monitorexit v4
  #L0808f2.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0808a2;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0808a2;
}
procedure `void` `a`(`a.a.e.j` v4 @kind this, `boolean` v5 , `int` v6 , `int` v7 ) @signature `La/a/e/j;.a:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L080918.  v0:= 0I;
  #L08091a.  @monitorenter v4
  #Try_start0.  
  #L08091c.  v1:= v4.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L080920.  if v1 == 0 then goto L08093a;
  #L080924.  v0:= new `java.io.IOException`;
  #L080928.  v1:= "closed" @kind object;
  #L08092c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L080932.  throw v0;
  #Try_end0.  
  #L080934.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L080936.  @monitorexit v4
  #L080938.  throw v0;
  #L08093a.  v1:= 8I;
  #L08093e.  v2:= 6I;
  #L080940.  if v5 == 0 then goto L080946;
  #L080944.  v0:= 1I;
  #L080946.  v3:= 0I;
  #Try_start1.  
  #L080948.  call `a`(v4, v3, v1, v2, v0) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L08094e.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080952.  call temp:= `g`(v0, v6) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L080958.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L08095c.  call temp:= `g`(v0, v7) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L080962.  v0:= v4.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080966.  call `flush`(v0) @signature `Lb/d;.flush:()V` @kind interface;
  #Try_end1.  
  #L08096c.  @monitorexit v4
  #L08096e.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L080934;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L080934;
}
procedure `void` `a`(`a.a.e.j` v2 @kind this, `boolean` v3 , `int` v4 , `int` v5 , `java.util.List` v6 @kind object) @signature `La/a/e/j;.a:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L080994.  @monitorenter v2
  #Try_start0.  
  #L080996.  v0:= v2.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L08099a.  if v0 == 0 then goto L0809b4;
  #L08099e.  v0:= new `java.io.IOException`;
  #L0809a2.  v1:= "closed" @kind object;
  #L0809a6.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0809ac.  throw v0;
  #Try_end0.  
  #L0809ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0809b0.  @monitorexit v2
  #L0809b2.  throw v0;
  #Try_start1.  
  #L0809b4.  call `a`(v2, v3, v4, v6) @signature `La/a/e/j;.a:(ZILjava/util/List;)V` @kind virtual;
  #Try_end1.  
  #L0809ba.  @monitorexit v2
  #L0809bc.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0809ae;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0809ae;
}
procedure `void` `a`(`a.a.e.j` v2 @kind this, `boolean` v3 , `int` v4 , `b.c` v5 @kind object, `int` v6 ) @signature `La/a/e/j;.a:(ZILb/c;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L0809e4.  @monitorenter v2
  #Try_start0.  
  #L0809e6.  v0:= v2.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L0809ea.  if v0 == 0 then goto L080a04;
  #L0809ee.  v0:= new `java.io.IOException`;
  #L0809f2.  v1:= "closed" @kind object;
  #L0809f6.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0809fc.  throw v0;
  #Try_end0.  
  #L0809fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L080a00.  @monitorexit v2
  #L080a02.  throw v0;
  #L080a04.  v0:= 0I;
  #L080a06.  if v3 == 0 then goto L080a0e;
  #L080a0a.  v0:= 1I;
  #L080a0c.  v0:= (`byte`) v0 @kind i2b;
  #Try_start1.  
  #L080a0e.  call `a`(v2, v4, v0, v5, v6) @signature `La/a/e/j;.a:(IBLb/c;I)V` @kind virtual;
  #Try_end1.  
  #L080a14.  @monitorexit v2
  #L080a16.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0809fe;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0809fe;
}
procedure `void` `a`(`a.a.e.j` v8 @kind this, `boolean` v9 , `int` v10 , `java.util.List` v11 @kind object) @signature `La/a/e/j;.a:(ZILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L080a3c.  v0:= v8.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L080a40.  if v0 == 0 then goto L080a54;
  #L080a44.  v0:= new `java.io.IOException`;
  #L080a48.  v1:= "closed" @kind object;
  #L080a4c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L080a52.  throw v0;
  #L080a54.  v0:= v8.`a.a.e.j.a` @type ^`a.a.e.d$b` @kind object;
  #L080a58.  call `a`(v0, v11) @signature `La/a/e/d$b;.a:(Ljava/util/List;)V` @kind virtual;
  #L080a5e.  v0:= v8.`a.a.e.j.e` @type ^`b.c` @kind object;
  #L080a62.  call temp:= `b`(v0) @signature `Lb/c;.b:()J` @kind virtual;
  #L080a68.  v2:= temp @kind wide;
  #L080a6a.  v0:= v8.`a.a.e.j.f` @type ^`int`;
  #L080a6e.  v0:= (`long`) v0 @kind i2l;
  #L080a70.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L080a76.  v0:= temp @kind wide;
  #L080a78.  v1:= (`int`) v0 @kind l2i;
  #L080a7a.  v4:= 1I;
  #L080a7c.  v6:= (`long`) v1 @kind i2l;
  #L080a7e.  v0:= lcmp(v2, v6);
  #L080a82.  if v0 != 0 then goto L080ac0;
  #L080a86.  v0:= 4I;
  #L080a88.  if v9 == 0 then goto L080a92;
  #L080a8c.  v0:= v0 ^| 1;
  #L080a90.  v0:= (`byte`) v0 @kind i2b;
  #L080a92.  call `a`(v8, v10, v1, v4, v0) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L080a98.  v0:= v8.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080a9c.  v4:= v8.`a.a.e.j.e` @type ^`b.c` @kind object;
  #L080aa0.  v6:= (`long`) v1 @kind i2l;
  #L080aa2.  call `a_`(v0, v4, v6) @signature `Lb/d;.a_:(Lb/c;J)V` @kind interface;
  #L080aa8.  v4:= (`long`) v1 @kind i2l;
  #L080aaa.  v0:= lcmp(v2, v4);
  #L080aae.  if v0 <= 0 then goto L080abe;
  #L080ab2.  v0:= (`long`) v1 @kind i2l;
  #L080ab4.  v0:= v2 - v0 @kind long;
  #L080ab8.  call `b`(v8, v10, v0) @signature `La/a/e/j;.b:(IJ)V` @kind direct;
  #L080abe.  return @kind void;
  #L080ac0.  v0:= 0I;
  #L080ac2.  goto L080a88;
}
procedure `void` `b`(`a.a.e.j` v2 @kind this) @signature `La/a/e/j;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L080ad4.  @monitorenter v2
  #Try_start0.  
  #L080ad6.  v0:= v2.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L080ada.  if v0 == 0 then goto L080af4;
  #L080ade.  v0:= new `java.io.IOException`;
  #L080ae2.  v1:= "closed" @kind object;
  #L080ae6.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L080aec.  throw v0;
  #Try_end0.  
  #L080aee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L080af0.  @monitorexit v2
  #L080af2.  throw v0;
  #Try_start1.  
  #L080af4.  v0:= v2.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080af8.  call `flush`(v0) @signature `Lb/d;.flush:()V` @kind interface;
  #Try_end1.  
  #L080afe.  @monitorexit v2
  #L080b00.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L080aee;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L080aee;
}
procedure `void` `b`(`a.a.e.j` v6 @kind this, `a.a.e.n` v7 @kind object) @signature `La/a/e/j;.b:(La/a/e/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L080b28.  v1:= 4I;
  #L080b2a.  v2:= 0I;
  #L080b2c.  @monitorenter v6
  #Try_start0.  
  #L080b2e.  v0:= v6.`a.a.e.j.g` @type ^`boolean` @kind boolean;
  #L080b32.  if v0 == 0 then goto L080b4c;
  #L080b36.  v0:= new `java.io.IOException`;
  #L080b3a.  v1:= "closed" @kind object;
  #L080b3e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L080b44.  throw v0;
  #Try_end0.  
  #L080b46.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L080b48.  @monitorexit v6
  #L080b4a.  throw v0;
  #Try_start1.  
  #L080b4c.  call temp:= `b`(v7) @signature `La/a/e/n;.b:()I` @kind virtual;
  #L080b52.  v0:= temp;
  #L080b54.  v0:= v0 * 6;
  #L080b58.  v3:= 4I;
  #L080b5a.  v4:= 0I;
  #L080b5c.  v5:= 0I;
  #L080b5e.  call `a`(v6, v5, v0, v3, v4) @signature `La/a/e/j;.a:(IIBB)V` @kind virtual;
  #L080b64.  v0:= 10I;
  #L080b68.  if v2 >= v0 then goto L080bac;
  #L080b6c.  call temp:= `a`(v7, v2) @signature `La/a/e/n;.a:(I)Z` @kind virtual;
  #L080b72.  v0:= temp;
  #L080b74.  if v0 != 0 then goto L080b7e;
  #L080b78.  v2:= v2 + 1;
  #L080b7c.  goto L080b64;
  #L080b7e.  if v2 != v1 then goto L080ba2;
  #L080b82.  v0:= 3I;
  #L080b84.  v3:= v6.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080b88.  call temp:= `h`(v3, v0) @signature `Lb/d;.h:(I)Lb/d;` @kind interface;
  #L080b8e.  v0:= v6.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080b92.  call temp:= `b`(v7, v2) @signature `La/a/e/n;.b:(I)I` @kind virtual;
  #L080b98.  v3:= temp;
  #L080b9a.  call temp:= `g`(v0, v3) @signature `Lb/d;.g:(I)Lb/d;` @kind interface;
  #L080ba0.  goto L080b78;
  #L080ba2.  v0:= 7I;
  #L080ba4.  if v2 != v0 then goto L080bba;
  #L080ba8.  v0:= v1;
  #L080baa.  goto L080b84;
  #L080bac.  v0:= v6.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080bb0.  call `flush`(v0) @signature `Lb/d;.flush:()V` @kind interface;
  #Try_end1.  
  #L080bb6.  @monitorexit v6
  #L080bb8.  return @kind void;
  #L080bba.  v0:= v2;
  #L080bbc.  goto L080b84;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L080b46;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L080b46;
}
procedure `int` `c`(`a.a.e.j` v1 @kind this) @signature `La/a/e/j;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L080be4.  v0:= v1.`a.a.e.j.f` @type ^`int`;
  #L080be8.  return v0;
}
procedure `void` `close`(`a.a.e.j` v1 @kind this) @signature `La/a/e/j;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L080bfc.  @monitorenter v1
  #L080bfe.  v0:= 1I;
  #Try_start0.  
  #L080c00.  v1.`a.a.e.j.g` @type ^`boolean` := v0 @kind boolean;
  #L080c04.  v0:= v1.`a.a.e.j.c` @type ^`b.d` @kind object;
  #L080c08.  call `close`(v0) @signature `Lb/d;.close:()V` @kind interface;
  #Try_end0.  
  #L080c0e.  @monitorexit v1
  #L080c10.  return @kind void;
  #L080c12.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L080c14.  @monitorexit v1
  #L080c16.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L080c12;
}

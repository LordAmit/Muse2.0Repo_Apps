record `a.a.e.c` @kind class @AccessFlag PUBLIC_FINAL {
  `b.f` `a.a.e.c.g` @AccessFlag PUBLIC_FINAL;
  `b.f` `a.a.e.c.h` @AccessFlag PUBLIC_FINAL;
  `int` `a.a.e.c.i` @AccessFlag FINAL;
}
global `b.f` `@@a.a.e.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L07a9bc.  v0:= ":" @kind object;
  #L07a9c0.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07a9c6.  v0:= temp @kind object;
  #L07a9c8.  `@@a.a.e.c.a` @type ^`b.f` := v0 @kind object;
  #L07a9cc.  v0:= ":status" @kind object;
  #L07a9d0.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07a9d6.  v0:= temp @kind object;
  #L07a9d8.  `@@a.a.e.c.b` @type ^`b.f` := v0 @kind object;
  #L07a9dc.  v0:= ":method" @kind object;
  #L07a9e0.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07a9e6.  v0:= temp @kind object;
  #L07a9e8.  `@@a.a.e.c.c` @type ^`b.f` := v0 @kind object;
  #L07a9ec.  v0:= ":path" @kind object;
  #L07a9f0.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07a9f6.  v0:= temp @kind object;
  #L07a9f8.  `@@a.a.e.c.d` @type ^`b.f` := v0 @kind object;
  #L07a9fc.  v0:= ":scheme" @kind object;
  #L07aa00.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07aa06.  v0:= temp @kind object;
  #L07aa08.  `@@a.a.e.c.e` @type ^`b.f` := v0 @kind object;
  #L07aa0c.  v0:= ":authority" @kind object;
  #L07aa10.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07aa16.  v0:= temp @kind object;
  #L07aa18.  `@@a.a.e.c.f` @type ^`b.f` := v0 @kind object;
  #L07aa1c.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v2 @kind this, `b.f` v3 @kind object, `b.f` v4 @kind object) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L07aa30.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07aa36.  v2.`a.a.e.c.g` @type ^`b.f` := v3 @kind object;
  #L07aa3a.  v2.`a.a.e.c.h` @type ^`b.f` := v4 @kind object;
  #L07aa3e.  call temp:= `g`(v3) @signature `Lb/f;.g:()I` @kind virtual;
  #L07aa44.  v0:= temp;
  #L07aa46.  v0:= v0 + 32;
  #L07aa4a.  call temp:= `g`(v4) @signature `Lb/f;.g:()I` @kind virtual;
  #L07aa50.  v1:= temp;
  #L07aa52.  v0:= v0 + v1 @kind int;
  #L07aa54.  v2.`a.a.e.c.i` @type ^`int` := v0;
  #L07aa58.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v1 @kind this, `b.f` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L07aa6c.  call temp:= `a`(v3) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07aa72.  v0:= temp @kind object;
  #L07aa74.  call `<init>`(v1, v2, v0) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @kind direct;
  #L07aa7a.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/a/e/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L07aa8c.  call temp:= `a`(v3) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07aa92.  v0:= temp @kind object;
  #L07aa94.  call temp:= `a`(v4) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L07aa9a.  v1:= temp @kind object;
  #L07aa9c.  call `<init>`(v2, v0, v1) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @kind direct;
  #L07aaa2.  return @kind void;
}
procedure `boolean` `equals`(`a.a.e.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/a/e/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07aab4.  v0:= 0I;
  #L07aab6.  v1:= instanceof @variable v4 @type ^`a.a.e.c` @kind boolean;
  #L07aaba.  if v1 == 0 then goto L07aaec;
  #L07aabe.  v4:= (`a.a.e.c`) v4 @kind object;
  #L07aac2.  v1:= v3.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07aac6.  v2:= v4.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07aaca.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07aad0.  v1:= temp;
  #L07aad2.  if v1 == 0 then goto L07aaec;
  #L07aad6.  v1:= v3.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07aada.  v2:= v4.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07aade.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07aae4.  v1:= temp;
  #L07aae6.  if v1 == 0 then goto L07aaec;
  #L07aaea.  v0:= 1I;
  #L07aaec.  return v0;
}
procedure `int` `hashCode`(`a.a.e.c` v2 @kind this) @signature `La/a/e/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07ab00.  v0:= v2.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07ab04.  call temp:= `hashCode`(v0) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L07ab0a.  v0:= temp;
  #L07ab0c.  v0:= v0 + 527;
  #L07ab10.  v0:= v0 * 31;
  #L07ab14.  v1:= v2.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07ab18.  call temp:= `hashCode`(v1) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L07ab1e.  v1:= temp;
  #L07ab20.  v0:= v0 + v1 @kind int;
  #L07ab22.  return v0;
}
procedure `java.lang.String` `toString`(`a.a.e.c` v4 @kind this) @signature `La/a/e/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07ab34.  v0:= "%s: %s" @kind object;
  #L07ab38.  v1:= 2I;
  #L07ab3a.  v1:= new `java.lang.Object`[v1];
  #L07ab3e.  v2:= 0I;
  #L07ab40.  v3:= v4.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L07ab44.  call temp:= `a`(v3) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07ab4a.  v3:= temp @kind object;
  #L07ab4c.  v1[v2]:= v3 @kind object;
  #L07ab50.  v2:= 1I;
  #L07ab52.  v3:= v4.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L07ab56.  call temp:= `a`(v3) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07ab5c.  v3:= temp @kind object;
  #L07ab5e.  v1[v2]:= v3 @kind object;
  #L07ab62.  call temp:= `a`(v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07ab68.  v0:= temp @kind object;
  #L07ab6a.  return v0 @kind object;
}

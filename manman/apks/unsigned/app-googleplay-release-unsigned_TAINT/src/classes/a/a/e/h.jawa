record `a.a.e.h` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `a.a.e.d$a` `a.a.e.h.b` @AccessFlag FINAL;
  `b.e` `a.a.e.h.c` @AccessFlag PRIVATE_FINAL;
  `a.a.e.h$a` `a.a.e.h.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.e.h.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@a.a.e.h.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L07e404.  v0:= constclass @type ^`a.a.e.e` @kind object;
  #L07e408.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L07e40e.  v0:= temp @kind object;
  #L07e410.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L07e416.  v0:= temp @kind object;
  #L07e418.  `@@a.a.e.h.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L07e41c.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.h` v3 @kind this, `b.e` v4 @kind object, `boolean` v5 ) @signature `La/a/e/h;.<init>:(Lb/e;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L07e430.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07e436.  v3.`a.a.e.h.c` @type ^`b.e` := v4 @kind object;
  #L07e43a.  v3.`a.a.e.h.e` @type ^`boolean` := v5 @kind boolean;
  #L07e43e.  v0:= new `a.a.e.h$a`;
  #L07e442.  v1:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e446.  call `<init>`(v0, v1) @signature `La/a/e/h$a;.<init>:(Lb/e;)V` @kind direct;
  #L07e44c.  v3.`a.a.e.h.d` @type ^`a.a.e.h$a` := v0 @kind object;
  #L07e450.  v0:= new `a.a.e.d$a`;
  #L07e454.  v1:= 4096I;
  #L07e458.  v2:= v3.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07e45c.  call `<init>`(v0, v1, v2) @signature `La/a/e/d$a;.<init>:(ILb/r;)V` @kind direct;
  #L07e462.  v3.`a.a.e.h.b` @type ^`a.a.e.d$a` := v0 @kind object;
  #L07e466.  return @kind void;
}
procedure `int` `a`(`int` v4 , `byte` v5 , `short` v6 ) @signature `La/a/e/h;.a:(IBS)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07e478.  v0:= v5 ^& 8;
  #L07e47c.  if v0 == 0 then goto L07e484;
  #L07e480.  v4:= v4 + -1;
  #L07e484.  if v6 <= v4 then goto L07e4b8;
  #L07e488.  v0:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L07e48c.  v1:= 2I;
  #L07e48e.  v1:= new `java.lang.Object`[v1];
  #L07e492.  v2:= 0I;
  #L07e494.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L07e49a.  v3:= temp @kind object;
  #L07e49c.  v1[v2]:= v3 @kind object;
  #L07e4a0.  v2:= 1I;
  #L07e4a2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e4a8.  v3:= temp @kind object;
  #L07e4aa.  v1[v2]:= v3 @kind object;
  #L07e4ae.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e4b4.  v0:= temp @kind object;
  #L07e4b6.  throw v0;
  #L07e4b8.  v0:= v4 - v6 @kind int;
  #L07e4bc.  v0:= (`short`) v0 @kind i2s;
  #L07e4be.  return v0;
}
procedure `int` `a`(`b.e` v2 @kind object) @signature `La/a/e/h;.a:(Lb/e;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L07e4d0.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07e4d6.  v0:= temp;
  #L07e4d8.  v0:= v0 ^& 255;
  #L07e4dc.  v0:= v0 ^< 16;
  #L07e4e0.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07e4e6.  v1:= temp;
  #L07e4e8.  v1:= v1 ^& 255;
  #L07e4ec.  v1:= v1 ^< 8;
  #L07e4f0.  v0:= v0 ^| v1 @kind int;
  #L07e4f2.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07e4f8.  v1:= temp;
  #L07e4fa.  v1:= v1 ^& 255;
  #L07e4fe.  v0:= v0 ^| v1 @kind int;
  #L07e500.  return v0;
}
procedure `java.util.List` `a`(`a.a.e.h` v2 @kind this, `int` v3 , `short` v4 , `byte` v5 , `int` v6 ) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L07e514.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07e518.  v1:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07e51c.  v1.`a.a.e.h$a.d` @type ^`int` := v3;
  #L07e520.  v0.`a.a.e.h$a.a` @type ^`int` := v3;
  #L07e524.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07e528.  v0.`a.a.e.h$a.e` @type ^`short` := v4 @kind char;
  #L07e52c.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07e530.  v0.`a.a.e.h$a.b` @type ^`byte` := v5 @kind byte;
  #L07e534.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07e538.  v0.`a.a.e.h$a.c` @type ^`int` := v6;
  #L07e53c.  v0:= v2.`a.a.e.h.b` @type ^`a.a.e.d$a` @kind object;
  #L07e540.  call `a`(v0) @signature `La/a/e/d$a;.a:()V` @kind virtual;
  #L07e546.  v0:= v2.`a.a.e.h.b` @type ^`a.a.e.d$a` @kind object;
  #L07e54a.  call temp:= `b`(v0) @signature `La/a/e/d$a;.b:()Ljava/util/List;` @kind virtual;
  #L07e550.  v0:= temp @kind object;
  #L07e552.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 ) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07e564.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e568.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07e56e.  v1:= temp;
  #L07e570.  v0:= -2147483648I;
  #L07e574.  v0:= v0 ^& v1 @kind int;
  #L07e576.  if v0 == 0 then goto L07e5a0;
  #L07e57a.  v0:= 1I;
  #L07e57c.  v2:= 2147483647I;
  #L07e582.  v1:= v1 ^& v2 @kind int;
  #L07e584.  v2:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e588.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07e58e.  v2:= temp;
  #L07e590.  v2:= v2 ^& 255;
  #L07e594.  v2:= v2 + 1;
  #L07e598.  call `a`(v4, v5, v1, v2, v0) @signature `La/a/e/h$b;.a:(IIIZ)V` @kind interface;
  #L07e59e.  return @kind void;
  #L07e5a0.  v0:= 0I;
  #L07e5a2.  goto L07e57c;
}
procedure `void` `a`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `La/a/e/h;.a:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07e5b4.  v0:= 0I;
  #L07e5b6.  if v7 != 0 then goto L07e5cc;
  #L07e5ba.  v1:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L07e5be.  v0:= new `java.lang.Object`[v0];
  #L07e5c2.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e5c8.  v0:= temp @kind object;
  #L07e5ca.  throw v0;
  #L07e5cc.  v1:= v6 ^& 1;
  #L07e5d0.  if v1 == 0 then goto L07e61c;
  #L07e5d4.  v1:= 1I;
  #L07e5d6.  v2:= v6 ^& 8;
  #L07e5da.  if v2 == 0 then goto L07e5f0;
  #L07e5de.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e5e2.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07e5e8.  v0:= temp;
  #L07e5ea.  v0:= v0 ^& 255;
  #L07e5ee.  v0:= (`short`) v0 @kind i2s;
  #L07e5f0.  v2:= v6 ^& 32;
  #L07e5f4.  if v2 == 0 then goto L07e602;
  #L07e5f8.  call `a`(v3, v4, v7) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @kind direct;
  #L07e5fe.  v5:= v5 + -5;
  #L07e602.  call temp:= `a`(v5, v6, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07e608.  v2:= temp;
  #L07e60a.  call temp:= `a`(v3, v2, v0, v6, v7) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L07e610.  v0:= temp @kind object;
  #L07e612.  v2:= -1I;
  #L07e614.  call `a`(v4, v1, v7, v2, v0) @signature `La/a/e/h$b;.a:(ZIILjava/util/List;)V` @kind interface;
  #L07e61a.  return @kind void;
  #L07e61c.  v1:= v0;
  #L07e61e.  goto L07e5d6;
}
procedure `void` `b`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.b:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07e630.  v1:= 1I;
  #L07e632.  v0:= 0I;
  #L07e634.  v2:= v7 ^& 1;
  #L07e638.  if v2 == 0 then goto L07e65c;
  #L07e63c.  v2:= v1;
  #L07e63e.  v3:= v7 ^& 32;
  #L07e642.  if v3 == 0 then goto L07e660;
  #L07e646.  if v1 == 0 then goto L07e664;
  #L07e64a.  v1:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L07e64e.  v0:= new `java.lang.Object`[v0];
  #L07e652.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e658.  v0:= temp @kind object;
  #L07e65a.  throw v0;
  #L07e65c.  v2:= v0;
  #L07e65e.  goto L07e63e;
  #L07e660.  v1:= v0;
  #L07e662.  goto L07e646;
  #L07e664.  v1:= v7 ^& 8;
  #L07e668.  if v1 == 0 then goto L07e67e;
  #L07e66c.  v0:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e670.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07e676.  v0:= temp;
  #L07e678.  v0:= v0 ^& 255;
  #L07e67c.  v0:= (`short`) v0 @kind i2s;
  #L07e67e.  call temp:= `a`(v6, v7, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07e684.  v1:= temp;
  #L07e686.  v3:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e68a.  call `a`(v5, v2, v8, v3, v1) @signature `La/a/e/h$b;.a:(ZILb/e;I)V` @kind interface;
  #L07e690.  v1:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e694.  v2:= (`long`) v0 @kind i2l;
  #L07e696.  call `g`(v1, v2) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07e69c.  return @kind void;
}
procedure `void` `c`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.c:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07e6b0.  v3:= 0I;
  #L07e6b2.  v0:= 5I;
  #L07e6b4.  if v6 == v0 then goto L07e6d8;
  #L07e6b8.  v0:= "TYPE_PRIORITY length: %d != 5" @kind object;
  #L07e6bc.  v1:= 1I;
  #L07e6be.  v1:= new `java.lang.Object`[v1];
  #L07e6c2.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e6c8.  v2:= temp @kind object;
  #L07e6ca.  v1[v3]:= v2 @kind object;
  #L07e6ce.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e6d4.  v0:= temp @kind object;
  #L07e6d6.  throw v0;
  #L07e6d8.  if v8 != 0 then goto L07e6ee;
  #L07e6dc.  v0:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L07e6e0.  v1:= new `java.lang.Object`[v3];
  #L07e6e4.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e6ea.  v0:= temp @kind object;
  #L07e6ec.  throw v0;
  #L07e6ee.  call `a`(v4, v5, v8) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @kind direct;
  #L07e6f4.  return @kind void;
}
procedure `void` `d`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.d:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07e708.  v2:= 1I;
  #L07e70a.  v3:= 0I;
  #L07e70c.  v0:= 4I;
  #L07e70e.  if v6 == v0 then goto L07e730;
  #L07e712.  v0:= "TYPE_RST_STREAM length: %d != 4" @kind object;
  #L07e716.  v1:= new `java.lang.Object`[v2];
  #L07e71a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e720.  v2:= temp @kind object;
  #L07e722.  v1[v3]:= v2 @kind object;
  #L07e726.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e72c.  v0:= temp @kind object;
  #L07e72e.  throw v0;
  #L07e730.  if v8 != 0 then goto L07e746;
  #L07e734.  v0:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L07e738.  v1:= new `java.lang.Object`[v3];
  #L07e73c.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e742.  v0:= temp @kind object;
  #L07e744.  throw v0;
  #L07e746.  v0:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e74a.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07e750.  v0:= temp;
  #L07e752.  call temp:= `a`(v0) @signature `La/a/e/b;.a:(I)La/a/e/b;` @kind static;
  #L07e758.  v1:= temp @kind object;
  #L07e75a.  if v1 != 0 then goto L07e77c;
  #L07e75e.  v1:= "TYPE_RST_STREAM unexpected error code: %d" @kind object;
  #L07e762.  v2:= new `java.lang.Object`[v2];
  #L07e766.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e76c.  v0:= temp @kind object;
  #L07e76e.  v2[v3]:= v0 @kind object;
  #L07e772.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e778.  v0:= temp @kind object;
  #L07e77a.  throw v0;
  #L07e77c.  call `a`(v5, v8, v1) @signature `La/a/e/h$b;.a:(ILa/a/e/b;)V` @kind interface;
  #L07e782.  return @kind void;
}
procedure `void` `e`(`a.a.e.h` v7 @kind this, `a.a.e.h$b` v8 @kind object, `int` v9 , `byte` v10 , `int` v11 ) @signature `La/a/e/h;.e:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07e794.  v6:= 1I;
  #L07e796.  v2:= 0I;
  #L07e798.  if v11 == 0 then goto L07e7ae;
  #L07e79c.  v0:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L07e7a0.  v1:= new `java.lang.Object`[v2];
  #L07e7a4.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e7aa.  v0:= temp @kind object;
  #L07e7ac.  throw v0;
  #L07e7ae.  v0:= v10 ^& 1;
  #L07e7b2.  if v0 == 0 then goto L07e7d4;
  #L07e7b6.  if v9 == 0 then goto L07e7cc;
  #L07e7ba.  v0:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L07e7be.  v1:= new `java.lang.Object`[v2];
  #L07e7c2.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e7c8.  v0:= temp @kind object;
  #L07e7ca.  throw v0;
  #L07e7cc.  call `a`(v8) @signature `La/a/e/h$b;.a:()V` @kind interface;
  #L07e7d2.  return @kind void;
  #L07e7d4.  v0:= v9 %% 6;
  #L07e7d8.  if v0 == 0 then goto L07e7fa;
  #L07e7dc.  v0:= "TYPE_SETTINGS length %% 6 != 0: %s" @kind object;
  #L07e7e0.  v1:= new `java.lang.Object`[v6];
  #L07e7e4.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e7ea.  v3:= temp @kind object;
  #L07e7ec.  v1[v2]:= v3 @kind object;
  #L07e7f0.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e7f6.  v0:= temp @kind object;
  #L07e7f8.  throw v0;
  #L07e7fa.  v3:= new `a.a.e.n`;
  #L07e7fe.  call `<init>`(v3) @signature `La/a/e/n;.<init>:()V` @kind direct;
  #L07e804.  v1:= v2;
  #L07e806.  if v1 >= v9 then goto L07e89c;
  #L07e80a.  v0:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e80e.  call temp:= `i`(v0) @signature `Lb/e;.i:()S` @kind interface;
  #L07e814.  v0:= temp;
  #L07e816.  v4:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e81a.  call temp:= `j`(v4) @signature `Lb/e;.j:()I` @kind interface;
  #L07e820.  v4:= temp;
  #L07e822.  goto L07e8a4;
  #L07e828.  call temp:= `a`(v3, v0, v4) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07e82e.  v0:= v1 + 6;
  #L07e832.  v1:= v0;
  #L07e834.  goto L07e806;
  #L07e836.  if v4 == 0 then goto L07e828;
  #L07e83a.  if v4 == v6 then goto L07e828;
  #L07e83e.  v0:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L07e842.  v1:= new `java.lang.Object`[v2];
  #L07e846.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e84c.  v0:= temp @kind object;
  #L07e84e.  throw v0;
  #L07e850.  v0:= 4I;
  #L07e852.  goto L07e828;
  #L07e854.  v0:= 7I;
  #L07e856.  if v4 >= 0 then goto L07e828;
  #L07e85a.  v0:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L07e85e.  v1:= new `java.lang.Object`[v2];
  #L07e862.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e868.  v0:= temp @kind object;
  #L07e86a.  throw v0;
  #L07e86c.  v5:= 16384I;
  #L07e870.  if v4 < v5 then goto L07e87e;
  #L07e874.  v5:= 16777215I;
  #L07e87a.  if v4 <= v5 then goto L07e828;
  #L07e87e.  v0:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s" @kind object;
  #L07e882.  v1:= new `java.lang.Object`[v6];
  #L07e886.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e88c.  v3:= temp @kind object;
  #L07e88e.  v1[v2]:= v3 @kind object;
  #L07e892.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e898.  v0:= temp @kind object;
  #L07e89a.  throw v0;
  #L07e89c.  call `a`(v8, v2, v3) @signature `La/a/e/h$b;.a:(ZLa/a/e/n;)V` @kind interface;
  #L07e8a2.  goto L07e7d2;
  #L07e8a4.  switch v0
                  | 1 => goto L07e828
                  | 2 => goto L07e836
                  | 3 => goto L07e850
                  | 4 => goto L07e854
                  | 5 => goto L07e86c
                  | 6 => goto L07e828
                  | else => goto L07e828;
}
procedure `void` `f`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `La/a/e/h;.f:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07e8d4.  v0:= 0I;
  #L07e8d6.  if v7 != 0 then goto L07e8ec;
  #L07e8da.  v1:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L07e8de.  v0:= new `java.lang.Object`[v0];
  #L07e8e2.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e8e8.  v0:= temp @kind object;
  #L07e8ea.  throw v0;
  #L07e8ec.  v1:= v6 ^& 8;
  #L07e8f0.  if v1 == 0 then goto L07e906;
  #L07e8f4.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e8f8.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07e8fe.  v0:= temp;
  #L07e900.  v0:= v0 ^& 255;
  #L07e904.  v0:= (`short`) v0 @kind i2s;
  #L07e906.  v1:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e90a.  call temp:= `j`(v1) @signature `Lb/e;.j:()I` @kind interface;
  #L07e910.  v1:= temp;
  #L07e912.  v2:= 2147483647I;
  #L07e918.  v1:= v1 ^& v2 @kind int;
  #L07e91a.  v2:= v5 + -4;
  #L07e91e.  call temp:= `a`(v2, v6, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07e924.  v2:= temp;
  #L07e926.  call temp:= `a`(v3, v2, v0, v6, v7) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L07e92c.  v0:= temp @kind object;
  #L07e92e.  call `a`(v4, v7, v1, v0) @signature `La/a/e/h$b;.a:(IILjava/util/List;)V` @kind interface;
  #L07e934.  return @kind void;
}
procedure `void` `g`(`a.a.e.h` v5 @kind this, `a.a.e.h$b` v6 @kind object, `int` v7 , `byte` v8 , `int` v9 ) @signature `La/a/e/h;.g:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07e948.  v0:= 1I;
  #L07e94a.  v1:= 0I;
  #L07e94c.  v2:= 8I;
  #L07e950.  if v7 == v2 then goto L07e972;
  #L07e954.  v2:= "TYPE_PING length != 8: %s" @kind object;
  #L07e958.  v0:= new `java.lang.Object`[v0];
  #L07e95c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e962.  v3:= temp @kind object;
  #L07e964.  v0[v1]:= v3 @kind object;
  #L07e968.  call temp:= `b`(v2, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e96e.  v0:= temp @kind object;
  #L07e970.  throw v0;
  #L07e972.  if v9 == 0 then goto L07e988;
  #L07e976.  v0:= "TYPE_PING streamId != 0" @kind object;
  #L07e97a.  v1:= new `java.lang.Object`[v1];
  #L07e97e.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e984.  v0:= temp @kind object;
  #L07e986.  throw v0;
  #L07e988.  v2:= v5.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e98c.  call temp:= `j`(v2) @signature `Lb/e;.j:()I` @kind interface;
  #L07e992.  v2:= temp;
  #L07e994.  v3:= v5.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07e998.  call temp:= `j`(v3) @signature `Lb/e;.j:()I` @kind interface;
  #L07e99e.  v3:= temp;
  #L07e9a0.  v4:= v8 ^& 1;
  #L07e9a4.  if v4 == 0 then goto L07e9b0;
  #L07e9a8.  call `a`(v6, v0, v2, v3) @signature `La/a/e/h$b;.a:(ZII)V` @kind interface;
  #L07e9ae.  return @kind void;
  #L07e9b0.  v0:= v1;
  #L07e9b2.  goto L07e9a8;
}
procedure `void` `h`(`a.a.e.h` v6 @kind this, `a.a.e.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `La/a/e/h;.h:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07e9c4.  v5:= 1I;
  #L07e9c6.  v4:= 0I;
  #L07e9c8.  v0:= 8I;
  #L07e9cc.  if v8 >= v0 then goto L07e9ee;
  #L07e9d0.  v0:= "TYPE_GOAWAY length < 8: %s" @kind object;
  #L07e9d4.  v1:= new `java.lang.Object`[v5];
  #L07e9d8.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07e9de.  v2:= temp @kind object;
  #L07e9e0.  v1[v4]:= v2 @kind object;
  #L07e9e4.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07e9ea.  v0:= temp @kind object;
  #L07e9ec.  throw v0;
  #L07e9ee.  if v10 == 0 then goto L07ea04;
  #L07e9f2.  v0:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L07e9f6.  v1:= new `java.lang.Object`[v4];
  #L07e9fa.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ea00.  v0:= temp @kind object;
  #L07ea02.  throw v0;
  #L07ea04.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ea08.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07ea0e.  v1:= temp;
  #L07ea10.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ea14.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07ea1a.  v0:= temp;
  #L07ea1c.  v2:= v8 + -8;
  #L07ea20.  call temp:= `a`(v0) @signature `La/a/e/b;.a:(I)La/a/e/b;` @kind static;
  #L07ea26.  v3:= temp @kind object;
  #L07ea28.  if v3 != 0 then goto L07ea4a;
  #L07ea2c.  v1:= "TYPE_GOAWAY unexpected error code: %d" @kind object;
  #L07ea30.  v2:= new `java.lang.Object`[v5];
  #L07ea34.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ea3a.  v0:= temp @kind object;
  #L07ea3c.  v2[v4]:= v0 @kind object;
  #L07ea40.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ea46.  v0:= temp @kind object;
  #L07ea48.  throw v0;
  #L07ea4a.  v0:= `@@b.f.b` @type ^`b.f` @kind object;
  #L07ea4e.  if v2 <= 0 then goto L07ea60;
  #L07ea52.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ea56.  v4:= (`long`) v2 @kind i2l;
  #L07ea58.  call temp:= `c`(v0, v4) @signature `Lb/e;.c:(J)Lb/f;` @kind interface;
  #L07ea5e.  v0:= temp @kind object;
  #L07ea60.  call `a`(v7, v1, v3, v0) @signature `La/a/e/h$b;.a:(ILa/a/e/b;Lb/f;)V` @kind interface;
  #L07ea66.  return @kind void;
}
procedure `void` `i`(`a.a.e.h` v6 @kind this, `a.a.e.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `La/a/e/h;.i:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07ea78.  v5:= 1I;
  #L07ea7a.  v4:= 0I;
  #L07ea7c.  v0:= 4I;
  #L07ea7e.  if v8 == v0 then goto L07eaa0;
  #L07ea82.  v0:= "TYPE_WINDOW_UPDATE length !=4: %s" @kind object;
  #L07ea86.  v1:= new `java.lang.Object`[v5];
  #L07ea8a.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ea90.  v2:= temp @kind object;
  #L07ea92.  v1[v4]:= v2 @kind object;
  #L07ea96.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ea9c.  v0:= temp @kind object;
  #L07ea9e.  throw v0;
  #L07eaa0.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07eaa4.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07eaaa.  v0:= temp;
  #L07eaac.  v0:= (`long`) v0 @kind i2l;
  #L07eaae.  v2:= 2147483647L;
  #L07eab4.  v0:= v0 ^& v2 @kind long;
  #L07eab6.  v2:= 0L;
  #L07eaba.  v2:= lcmp(v0, v2);
  #L07eabe.  if v2 != 0 then goto L07eae0;
  #L07eac2.  v2:= "windowSizeIncrement was 0" @kind object;
  #L07eac6.  v3:= new `java.lang.Object`[v5];
  #L07eaca.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L07ead0.  v0:= temp @kind object;
  #L07ead2.  v3[v4]:= v0 @kind object;
  #L07ead6.  call temp:= `b`(v2, v3) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07eadc.  v0:= temp @kind object;
  #L07eade.  throw v0;
  #L07eae0.  call `a`(v7, v10, v0) @signature `La/a/e/h$b;.a:(IJ)V` @kind interface;
  #L07eae6.  return @kind void;
}
procedure `void` `a`(`a.a.e.h` v7 @kind this, `a.a.e.h$b` v8 @kind object) @signature `La/a/e/h;.a:(La/a/e/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07eaf8.  v6:= 1I;
  #L07eafa.  v5:= 0I;
  #L07eafc.  v0:= v7.`a.a.e.h.e` @type ^`boolean` @kind boolean;
  #L07eb00.  if v0 == 0 then goto L07eb22;
  #L07eb04.  call temp:= `a`(v7, v6, v8) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @kind virtual;
  #L07eb0a.  v0:= temp;
  #L07eb0c.  if v0 != 0 then goto L07eba4;
  #L07eb10.  v0:= "Required SETTINGS preface not received" @kind object;
  #L07eb14.  v1:= new `java.lang.Object`[v5];
  #L07eb18.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07eb1e.  v0:= temp @kind object;
  #L07eb20.  throw v0;
  #L07eb22.  v0:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07eb26.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L07eb2a.  call temp:= `g`(v1) @signature `Lb/f;.g:()I` @kind virtual;
  #L07eb30.  v1:= temp;
  #L07eb32.  v2:= (`long`) v1 @kind i2l;
  #L07eb34.  call temp:= `c`(v0, v2) @signature `Lb/e;.c:(J)Lb/f;` @kind interface;
  #L07eb3a.  v0:= temp @kind object;
  #L07eb3c.  v1:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07eb40.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L07eb44.  call temp:= `isLoggable`(v1, v2) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L07eb4a.  v1:= temp;
  #L07eb4c.  if v1 == 0 then goto L07eb76;
  #L07eb50.  v1:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07eb54.  v2:= "<< CONNECTION %s" @kind object;
  #L07eb58.  v3:= new `java.lang.Object`[v6];
  #L07eb5c.  call temp:= `e`(v0) @signature `Lb/f;.e:()Ljava/lang/String;` @kind virtual;
  #L07eb62.  v4:= temp @kind object;
  #L07eb64.  v3[v5]:= v4 @kind object;
  #L07eb68.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07eb6e.  v2:= temp @kind object;
  #L07eb70.  call `fine`(v1, v2) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L07eb76.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L07eb7a.  call temp:= `equals`(v1, v0) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07eb80.  v1:= temp;
  #L07eb82.  if v1 != 0 then goto L07eba4;
  #L07eb86.  v1:= "Expected a connection header but was %s" @kind object;
  #L07eb8a.  v2:= new `java.lang.Object`[v6];
  #L07eb8e.  call temp:= `a`(v0) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07eb94.  v0:= temp @kind object;
  #L07eb96.  v2[v5]:= v0 @kind object;
  #L07eb9a.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07eba0.  v0:= temp @kind object;
  #L07eba2.  throw v0;
  #L07eba4.  return @kind void;
}
procedure `boolean` `a`(`a.a.e.h` v7 @kind this, `boolean` v8 , `a.a.e.h$b` v9 @kind object) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07ebb8.  v1:= 0I;
  #L07ebba.  v0:= 1I;
  #Try_start0.  
  #L07ebbc.  v2:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ebc0.  v4:= 9L;
  #L07ebc4.  call `a`(v2, v4) @signature `Lb/e;.a:(J)V` @kind interface;
  #Try_end0.  
  #L07ebca.  v2:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ebce.  call temp:= `a`(v2) @signature `La/a/e/h;.a:(Lb/e;)I` @kind static;
  #L07ebd4.  v2:= temp;
  #L07ebd6.  if v2 < 0 then goto L07ebe2;
  #L07ebda.  v3:= 16384I;
  #L07ebde.  if v2 <= v3 then goto L07ec06;
  #L07ebe2.  v3:= "FRAME_SIZE_ERROR: %s" @kind object;
  #L07ebe6.  v0:= new `java.lang.Object`[v0];
  #L07ebea.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ebf0.  v2:= temp @kind object;
  #L07ebf2.  v0[v1]:= v2 @kind object;
  #L07ebf6.  call temp:= `b`(v3, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ebfc.  v0:= temp @kind object;
  #L07ebfe.  throw v0;
  #L07ec00.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07ec02.  v0:= v1;
  #L07ec04.  return v0;
  #L07ec06.  v3:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ec0a.  call temp:= `h`(v3) @signature `Lb/e;.h:()B` @kind interface;
  #L07ec10.  v3:= temp;
  #L07ec12.  v3:= v3 ^& 255;
  #L07ec16.  v3:= (`byte`) v3 @kind i2b;
  #L07ec18.  if v8 == 0 then goto L07ec40;
  #L07ec1c.  v4:= 4I;
  #L07ec1e.  if v3 == v4 then goto L07ec40;
  #L07ec22.  v2:= "Expected a SETTINGS frame but was %s" @kind object;
  #L07ec26.  v0:= new `java.lang.Object`[v0];
  #L07ec2a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L07ec30.  v3:= temp @kind object;
  #L07ec32.  v0[v1]:= v3 @kind object;
  #L07ec36.  call temp:= `b`(v2, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ec3c.  v0:= temp @kind object;
  #L07ec3e.  throw v0;
  #L07ec40.  v1:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ec44.  call temp:= `h`(v1) @signature `Lb/e;.h:()B` @kind interface;
  #L07ec4a.  v1:= temp;
  #L07ec4c.  v1:= v1 ^& 255;
  #L07ec50.  v1:= (`byte`) v1 @kind i2b;
  #L07ec52.  v4:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ec56.  call temp:= `j`(v4) @signature `Lb/e;.j:()I` @kind interface;
  #L07ec5c.  v4:= temp;
  #L07ec5e.  v5:= 2147483647I;
  #L07ec64.  v4:= v4 ^& v5 @kind int;
  #L07ec66.  v5:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07ec6a.  v6:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L07ec6e.  call temp:= `isLoggable`(v5, v6) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L07ec74.  v5:= temp;
  #L07ec76.  if v5 == 0 then goto L07ec8c;
  #L07ec7a.  v5:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07ec7e.  call temp:= `a`(v0, v4, v2, v3, v1) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L07ec84.  v6:= temp @kind object;
  #L07ec86.  call `fine`(v5, v6) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L07ec8c.  goto L07ece8;
  #L07ec92.  v1:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ec96.  v2:= (`long`) v2 @kind i2l;
  #L07ec98.  call `g`(v1, v2) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07ec9e.  goto L07ec04;
  #L07eca0.  call `b`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.b:(La/a/e/h$b;IBI)V` @kind direct;
  #L07eca6.  goto L07ec04;
  #L07eca8.  call `a`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.a:(La/a/e/h$b;IBI)V` @kind direct;
  #L07ecae.  goto L07ec04;
  #L07ecb0.  call `c`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.c:(La/a/e/h$b;IBI)V` @kind direct;
  #L07ecb6.  goto L07ec04;
  #L07ecb8.  call `d`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.d:(La/a/e/h$b;IBI)V` @kind direct;
  #L07ecbe.  goto L07ec04;
  #L07ecc0.  call `e`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.e:(La/a/e/h$b;IBI)V` @kind direct;
  #L07ecc6.  goto L07ec04;
  #L07ecc8.  call `f`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.f:(La/a/e/h$b;IBI)V` @kind direct;
  #L07ecce.  goto L07ec04;
  #L07ecd0.  call `g`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.g:(La/a/e/h$b;IBI)V` @kind direct;
  #L07ecd6.  goto L07ec04;
  #L07ecd8.  call `h`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.h:(La/a/e/h$b;IBI)V` @kind direct;
  #L07ecde.  goto L07ec04;
  #L07ece0.  call `i`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.i:(La/a/e/h$b;IBI)V` @kind direct;
  #L07ece6.  goto L07ec04;
  #L07ece8.  switch v3
                  | 0 => goto L07eca0
                  | 1 => goto L07eca8
                  | 2 => goto L07ecb0
                  | 3 => goto L07ecb8
                  | 4 => goto L07ecc0
                  | 5 => goto L07ecc8
                  | 6 => goto L07ecd0
                  | 7 => goto L07ecd8
                  | 8 => goto L07ece0
                  | else => goto L07ec92;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07ec00;
}
procedure `void` `close`(`a.a.e.h` v1 @kind this) @signature `La/a/e/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07ed34.  v0:= v1.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ed38.  call `close`(v0) @signature `Lb/e;.close:()V` @kind interface;
  #L07ed3e.  return @kind void;
}

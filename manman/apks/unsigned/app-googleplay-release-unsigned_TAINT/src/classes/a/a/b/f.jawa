record `a.a.b.f` @kind class @AccessFlag PUBLIC_FINAL {
  `a.a` `a.a.b.f.a` @AccessFlag PRIVATE_FINAL;
  `a.a.b.d` `a.a.b.f.b` @AccessFlag PRIVATE_FINAL;
  `java.net.Proxy` `a.a.b.f.c` @AccessFlag PRIVATE;
  `java.net.InetSocketAddress` `a.a.b.f.d` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.e` @AccessFlag PRIVATE;
  `int` `a.a.b.f.f` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.g` @AccessFlag PRIVATE;
  `int` `a.a.b.f.h` @AccessFlag PRIVATE;
  `java.util.List` `a.a.b.f.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.b.f` v2 @kind this, `a.a` v3 @kind object, `a.a.b.d` v4 @kind object) @signature `La/a/b/f;.<init>:(La/a;La/a/b/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L07659c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0765a2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0765a8.  v0:= temp @kind object;
  #L0765aa.  v2.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L0765ae.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0765b4.  v0:= temp @kind object;
  #L0765b6.  v2.`a.a.b.f.g` @type ^`java.util.List` := v0 @kind object;
  #L0765ba.  v0:= new `java.util.ArrayList`;
  #L0765be.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0765c4.  v2.`a.a.b.f.i` @type ^`java.util.List` := v0 @kind object;
  #L0765c8.  v2.`a.a.b.f.a` @type ^`a.a` := v3 @kind object;
  #L0765cc.  v2.`a.a.b.f.b` @type ^`a.a.b.d` := v4 @kind object;
  #L0765d0.  call temp:= `a`(v3) @signature `La/a;.a:()La/r;` @kind virtual;
  #L0765d6.  v0:= temp @kind object;
  #L0765d8.  call temp:= `h`(v3) @signature `La/a;.h:()Ljava/net/Proxy;` @kind virtual;
  #L0765de.  v1:= temp @kind object;
  #L0765e0.  call `a`(v2, v0, v1) @signature `La/a/b/f;.a:(La/r;Ljava/net/Proxy;)V` @kind direct;
  #L0765e6.  return @kind void;
}
procedure `java.lang.String` `a`(`java.net.InetSocketAddress` v1 @kind object) @signature `La/a/b/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L0765f8.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L0765fe.  v0:= temp @kind object;
  #L076600.  if v0 != 0 then goto L07660e;
  #L076604.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L07660a.  v0:= temp @kind object;
  #L07660c.  return v0 @kind object;
  #L07660e.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L076614.  v0:= temp @kind object;
  #L076616.  goto L07660c;
}
procedure `void` `a`(`a.a.b.f` v3 @kind this, `a.r` v4 @kind object, `java.net.Proxy` v5 @kind object) @signature `La/a/b/f;.a:(La/r;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L076628.  v2:= 0I;
  #L07662a.  if v5 == 0 then goto L076640;
  #L07662e.  call temp:= `singletonList`(v5) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L076634.  v0:= temp @kind object;
  #L076636.  v3.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L07663a.  v3.`a.a.b.f.f` @type ^`int` := v2;
  #L07663e.  return @kind void;
  #L076640.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076644.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L07664a.  v0:= temp @kind object;
  #L07664c.  call temp:= `a`(v4) @signature `La/r;.a:()Ljava/net/URI;` @kind virtual;
  #L076652.  v1:= temp @kind object;
  #L076654.  call temp:= `select`(v0, v1) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L07665a.  v0:= temp @kind object;
  #L07665c.  if v0 == 0 then goto L07667a;
  #L076660.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L076666.  v1:= temp;
  #L076668.  if v1 != 0 then goto L07667a;
  #L07666c.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L076672.  v0:= temp @kind object;
  #L076674.  v3.`a.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L076678.  goto L07663a;
  #L07667a.  v0:= 1I;
  #L07667c.  v0:= new `java.net.Proxy`[v0];
  #L076680.  v1:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L076684.  v0[v2]:= v1 @kind object;
  #L076688.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L07668e.  v0:= temp @kind object;
  #L076690.  goto L076674;
}
procedure `void` `a`(`a.a.b.f` v8 @kind this, `java.net.Proxy` v9 @kind object) @signature `La/a/b/f;.a:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L0766a4.  v2:= 0I;
  #L0766a6.  v0:= new `java.util.ArrayList`;
  #L0766aa.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0766b0.  v8.`a.a.b.f.g` @type ^`java.util.List` := v0 @kind object;
  #L0766b4.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L0766ba.  v0:= temp @kind object;
  #L0766bc.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L0766c0.  if v0 == v1 then goto L0766d4;
  #L0766c4.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L0766ca.  v0:= temp @kind object;
  #L0766cc.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L0766d0.  if v0 != v1 then goto L076762;
  #L0766d4.  v0:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L0766d8.  call temp:= `a`(v0) @signature `La/a;.a:()La/r;` @kind virtual;
  #L0766de.  v0:= temp @kind object;
  #L0766e0.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0766e6.  v1:= temp @kind object;
  #L0766e8.  v0:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L0766ec.  call temp:= `a`(v0) @signature `La/a;.a:()La/r;` @kind virtual;
  #L0766f2.  v0:= temp @kind object;
  #L0766f4.  call temp:= `g`(v0) @signature `La/r;.g:()I` @kind virtual;
  #L0766fa.  v0:= temp;
  #L0766fc.  v3:= v0;
  #L0766fe.  v0:= v1 @kind object;
  #L076700.  v1:= 1I;
  #L076702.  if v3 < v1 then goto L076710;
  #L076706.  v1:= 65535I;
  #L07670c.  if v3 <= v1 then goto L0767c6;
  #L076710.  v1:= new `java.net.SocketException`;
  #L076714.  v2:= new `java.lang.StringBuilder`;
  #L076718.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07671e.  v4:= "No route to " @kind object;
  #L076722.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076728.  v2:= temp @kind object;
  #L07672a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076730.  v0:= temp @kind object;
  #L076732.  v2:= ":" @kind object;
  #L076736.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07673c.  v0:= temp @kind object;
  #L07673e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L076744.  v0:= temp @kind object;
  #L076746.  v2:= "; port is out of range" @kind object;
  #L07674a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076750.  v0:= temp @kind object;
  #L076752.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L076758.  v0:= temp @kind object;
  #L07675a.  call `<init>`(v1, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L076760.  throw v1;
  #L076762.  call temp:= `address`(v9) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L076768.  v0:= temp @kind object;
  #L07676a.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L07676e.  if v1 != 0 then goto L0767ac;
  #L076772.  v1:= new `java.lang.IllegalArgumentException`;
  #L076776.  v2:= new `java.lang.StringBuilder`;
  #L07677a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L076780.  v3:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L076784.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07678a.  v2:= temp @kind object;
  #L07678c.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L076792.  v0:= temp @kind object;
  #L076794.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07679a.  v0:= temp @kind object;
  #L07679c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0767a2.  v0:= temp @kind object;
  #L0767a4.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0767aa.  throw v1;
  #L0767ac.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L0767b0.  call temp:= `a`(v0) @signature `La/a/b/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L0767b6.  v1:= temp @kind object;
  #L0767b8.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L0767be.  v0:= temp;
  #L0767c0.  v3:= v0;
  #L0767c2.  v0:= v1 @kind object;
  #L0767c4.  goto L076700;
  #L0767c6.  call temp:= `type`(v9) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L0767cc.  v1:= temp @kind object;
  #L0767ce.  v4:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L0767d2.  if v1 != v4 then goto L0767ee;
  #L0767d6.  v1:= v8.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L0767da.  call temp:= `createUnresolved`(v0, v3) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L0767e0.  v0:= temp @kind object;
  #L0767e2.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0767e8.  v8.`a.a.b.f.h` @type ^`int` := v2;
  #L0767ec.  return @kind void;
  #L0767ee.  v1:= v8.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L0767f2.  call temp:= `b`(v1) @signature `La/a;.b:()La/o;` @kind virtual;
  #L0767f8.  v1:= temp @kind object;
  #L0767fa.  call temp:= `a`(v1, v0) @signature `La/o;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L076800.  v4:= temp @kind object;
  #L076802.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L076808.  v5:= temp;
  #L07680a.  v1:= v2;
  #L07680c.  if v1 >= v5 then goto L0767e8;
  #L076810.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L076816.  v0:= temp @kind object;
  #L076818.  v0:= (`java.net.InetAddress`) v0 @kind object;
  #L07681c.  v6:= v8.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L076820.  v7:= new `java.net.InetSocketAddress`;
  #L076824.  call `<init>`(v7, v0, v3) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L07682a.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L076830.  v0:= v1 + 1;
  #L076834.  v1:= v0;
  #L076836.  goto L07680c;
}
procedure `boolean` `c`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L076848.  v0:= v2.`a.a.b.f.f` @type ^`int`;
  #L07684c.  v1:= v2.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L076850.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L076856.  v1:= temp;
  #L076858.  if v0 >= v1 then goto L076860;
  #L07685c.  v0:= 1I;
  #L07685e.  return v0;
  #L076860.  v0:= 0I;
  #L076862.  goto L07685e;
}
procedure `java.net.Proxy` `d`(`a.a.b.f` v3 @kind this) @signature `La/a/b/f;.d:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L076874.  call temp:= `c`(v3) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L07687a.  v0:= temp;
  #L07687c.  if v0 != 0 then goto L0768de;
  #L076880.  v0:= new `java.net.SocketException`;
  #L076884.  v1:= new `java.lang.StringBuilder`;
  #L076888.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07688e.  v2:= "No route to " @kind object;
  #L076892.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076898.  v1:= temp @kind object;
  #L07689a.  v2:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L07689e.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L0768a4.  v2:= temp @kind object;
  #L0768a6.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L0768ac.  v2:= temp @kind object;
  #L0768ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0768b4.  v1:= temp @kind object;
  #L0768b6.  v2:= "; exhausted proxy configurations: " @kind object;
  #L0768ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0768c0.  v1:= temp @kind object;
  #L0768c2.  v2:= v3.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L0768c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0768cc.  v1:= temp @kind object;
  #L0768ce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0768d4.  v1:= temp @kind object;
  #L0768d6.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0768dc.  throw v0;
  #L0768de.  v0:= v3.`a.a.b.f.e` @type ^`java.util.List` @kind object;
  #L0768e2.  v1:= v3.`a.a.b.f.f` @type ^`int`;
  #L0768e6.  v2:= v1 + 1;
  #L0768ea.  v3.`a.a.b.f.f` @type ^`int` := v2;
  #L0768ee.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0768f4.  v0:= temp @kind object;
  #L0768f6.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L0768fa.  call `a`(v3, v0) @signature `La/a/b/f;.a:(Ljava/net/Proxy;)V` @kind direct;
  #L076900.  return v0 @kind object;
}
procedure `boolean` `e`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L076914.  v0:= v2.`a.a.b.f.h` @type ^`int`;
  #L076918.  v1:= v2.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L07691c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L076922.  v1:= temp;
  #L076924.  if v0 >= v1 then goto L07692c;
  #L076928.  v0:= 1I;
  #L07692a.  return v0;
  #L07692c.  v0:= 0I;
  #L07692e.  goto L07692a;
}
procedure `java.net.InetSocketAddress` `f`(`a.a.b.f` v3 @kind this) @signature `La/a/b/f;.f:()Ljava/net/InetSocketAddress;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L076940.  call temp:= `e`(v3) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L076946.  v0:= temp;
  #L076948.  if v0 != 0 then goto L0769aa;
  #L07694c.  v0:= new `java.net.SocketException`;
  #L076950.  v1:= new `java.lang.StringBuilder`;
  #L076954.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07695a.  v2:= "No route to " @kind object;
  #L07695e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076964.  v1:= temp @kind object;
  #L076966.  v2:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L07696a.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L076970.  v2:= temp @kind object;
  #L076972.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L076978.  v2:= temp @kind object;
  #L07697a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076980.  v1:= temp @kind object;
  #L076982.  v2:= "; exhausted inet socket addresses: " @kind object;
  #L076986.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07698c.  v1:= temp @kind object;
  #L07698e.  v2:= v3.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L076992.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L076998.  v1:= temp @kind object;
  #L07699a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0769a0.  v1:= temp @kind object;
  #L0769a2.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0769a8.  throw v0;
  #L0769aa.  v0:= v3.`a.a.b.f.g` @type ^`java.util.List` @kind object;
  #L0769ae.  v1:= v3.`a.a.b.f.h` @type ^`int`;
  #L0769b2.  v2:= v1 + 1;
  #L0769b6.  v3.`a.a.b.f.h` @type ^`int` := v2;
  #L0769ba.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L0769c0.  v0:= temp @kind object;
  #L0769c2.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L0769c6.  return v0 @kind object;
}
procedure `boolean` `g`(`a.a.b.f` v1 @kind this) @signature `La/a/b/f;.g:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L0769d8.  v0:= v1.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L0769dc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L0769e2.  v0:= temp;
  #L0769e4.  if v0 != 0 then goto L0769ec;
  #L0769e8.  v0:= 1I;
  #L0769ea.  return v0;
  #L0769ec.  v0:= 0I;
  #L0769ee.  goto L0769ea;
}
procedure `a.ab` `h`(`a.a.b.f` v2 @kind this) @signature `La/a/b/f;.h:()La/ab;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L076a00.  v0:= v2.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L076a04.  v1:= 0I;
  #L076a06.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L076a0c.  v0:= temp @kind object;
  #L076a0e.  v0:= (`a.ab`) v0 @kind object;
  #L076a12.  return v0 @kind object;
}
procedure `void` `a`(`a.a.b.f` v3 @kind this, `a.ab` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `La/a/b/f;.a:(La/ab;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L076a24.  call temp:= `b`(v4) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L076a2a.  v0:= temp @kind object;
  #L076a2c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L076a32.  v0:= temp @kind object;
  #L076a34.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L076a38.  if v0 == v1 then goto L076a82;
  #L076a3c.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076a40.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L076a46.  v0:= temp @kind object;
  #L076a48.  if v0 == 0 then goto L076a82;
  #L076a4c.  v0:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076a50.  call temp:= `g`(v0) @signature `La/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L076a56.  v0:= temp @kind object;
  #L076a58.  v1:= v3.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076a5c.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L076a62.  v1:= temp @kind object;
  #L076a64.  call temp:= `a`(v1) @signature `La/r;.a:()Ljava/net/URI;` @kind virtual;
  #L076a6a.  v1:= temp @kind object;
  #L076a6c.  call temp:= `b`(v4) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L076a72.  v2:= temp @kind object;
  #L076a74.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L076a7a.  v2:= temp @kind object;
  #L076a7c.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L076a82.  v0:= v3.`a.a.b.f.b` @type ^`a.a.b.d` @kind object;
  #L076a86.  call `a`(v0, v4) @signature `La/a/b/d;.a:(La/ab;)V` @kind virtual;
  #L076a8c.  return @kind void;
}
procedure `boolean` `a`(`a.a.b.f` v1 @kind this) @signature `La/a/b/f;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L076aa0.  call temp:= `e`(v1) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L076aa6.  v0:= temp;
  #L076aa8.  if v0 != 0 then goto L076ac4;
  #L076aac.  call temp:= `c`(v1) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L076ab2.  v0:= temp;
  #L076ab4.  if v0 != 0 then goto L076ac4;
  #L076ab8.  call temp:= `g`(v1) @signature `La/a/b/f;.g:()Z` @kind direct;
  #L076abe.  v0:= temp;
  #L076ac0.  if v0 == 0 then goto L076ac8;
  #L076ac4.  v0:= 1I;
  #L076ac6.  return v0;
  #L076ac8.  v0:= 0I;
  #L076aca.  goto L076ac6;
}
procedure `a.ab` `b`(`a.a.b.f` v4 @kind this) @signature `La/a/b/f;.b:()La/ab;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L076adc.  call temp:= `e`(v4) @signature `La/a/b/f;.e:()Z` @kind direct;
  #L076ae2.  v0:= temp;
  #L076ae4.  if v0 != 0 then goto L076b22;
  #L076ae8.  call temp:= `c`(v4) @signature `La/a/b/f;.c:()Z` @kind direct;
  #L076aee.  v0:= temp;
  #L076af0.  if v0 != 0 then goto L076b16;
  #L076af4.  call temp:= `g`(v4) @signature `La/a/b/f;.g:()Z` @kind direct;
  #L076afa.  v0:= temp;
  #L076afc.  if v0 != 0 then goto L076b0c;
  #L076b00.  v0:= new `java.util.NoSuchElementException`;
  #L076b04.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L076b0a.  throw v0;
  #L076b0c.  call temp:= `h`(v4) @signature `La/a/b/f;.h:()La/ab;` @kind direct;
  #L076b12.  v0:= temp @kind object;
  #L076b14.  return v0 @kind object;
  #L076b16.  call temp:= `d`(v4) @signature `La/a/b/f;.d:()Ljava/net/Proxy;` @kind direct;
  #L076b1c.  v0:= temp @kind object;
  #L076b1e.  v4.`a.a.b.f.c` @type ^`java.net.Proxy` := v0 @kind object;
  #L076b22.  call temp:= `f`(v4) @signature `La/a/b/f;.f:()Ljava/net/InetSocketAddress;` @kind direct;
  #L076b28.  v0:= temp @kind object;
  #L076b2a.  v4.`a.a.b.f.d` @type ^`java.net.InetSocketAddress` := v0 @kind object;
  #L076b2e.  v0:= new `a.ab`;
  #L076b32.  v1:= v4.`a.a.b.f.a` @type ^`a.a` @kind object;
  #L076b36.  v2:= v4.`a.a.b.f.c` @type ^`java.net.Proxy` @kind object;
  #L076b3a.  v3:= v4.`a.a.b.f.d` @type ^`java.net.InetSocketAddress` @kind object;
  #L076b3e.  call `<init>`(v0, v1, v2, v3) @signature `La/ab;.<init>:(La/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L076b44.  v1:= v4.`a.a.b.f.b` @type ^`a.a.b.d` @kind object;
  #L076b48.  call temp:= `c`(v1, v0) @signature `La/a/b/d;.c:(La/ab;)Z` @kind virtual;
  #L076b4e.  v1:= temp;
  #L076b50.  if v1 == 0 then goto L076b14;
  #L076b54.  v1:= v4.`a.a.b.f.i` @type ^`java.util.List` @kind object;
  #L076b58.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L076b5e.  call temp:= `b`(v4) @signature `La/a/b/f;.b:()La/ab;` @kind virtual;
  #L076b64.  v0:= temp @kind object;
  #L076b66.  goto L076b14;
}

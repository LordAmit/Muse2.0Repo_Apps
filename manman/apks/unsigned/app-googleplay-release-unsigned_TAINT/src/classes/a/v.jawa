record `a.v` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `a.v.e` @AccessFlag PRIVATE_FINAL;
}
global `a.v` `@@a.v.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v`[] `@@a.v.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L08ac94.  v6:= 3I;
  #L08ac96.  v5:= 2I;
  #L08ac98.  v4:= 1I;
  #L08ac9a.  v3:= 0I;
  #L08ac9c.  v0:= new `a.v`;
  #L08aca0.  v1:= "HTTP_1_0" @kind object;
  #L08aca4.  v2:= "http/1.0" @kind object;
  #L08aca8.  call `<init>`(v0, v1, v3, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08acae.  `@@a.v.a` @type ^`a.v` := v0 @kind object;
  #L08acb2.  v0:= new `a.v`;
  #L08acb6.  v1:= "HTTP_1_1" @kind object;
  #L08acba.  v2:= "http/1.1" @kind object;
  #L08acbe.  call `<init>`(v0, v1, v4, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08acc4.  `@@a.v.b` @type ^`a.v` := v0 @kind object;
  #L08acc8.  v0:= new `a.v`;
  #L08accc.  v1:= "SPDY_3" @kind object;
  #L08acd0.  v2:= "spdy/3.1" @kind object;
  #L08acd4.  call `<init>`(v0, v1, v5, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08acda.  `@@a.v.c` @type ^`a.v` := v0 @kind object;
  #L08acde.  v0:= new `a.v`;
  #L08ace2.  v1:= "HTTP_2" @kind object;
  #L08ace6.  v2:= "h2" @kind object;
  #L08acea.  call `<init>`(v0, v1, v6, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08acf0.  `@@a.v.d` @type ^`a.v` := v0 @kind object;
  #L08acf4.  v0:= 4I;
  #L08acf6.  v0:= new `a.v`[v0];
  #L08acfa.  v1:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08acfe.  v0[v3]:= v1 @kind object;
  #L08ad02.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08ad06.  v0[v4]:= v1 @kind object;
  #L08ad0a.  v1:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08ad0e.  v0[v5]:= v1 @kind object;
  #L08ad12.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08ad16.  v0[v6]:= v1 @kind object;
  #L08ad1a.  `@@a.v.f` @type ^`a.v`[] := v0 @kind object;
  #L08ad1e.  return @kind void;
}
procedure `void` `<init>`(`a.v` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L08ad30.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L08ad36.  v0.`a.v.e` @type ^`java.lang.String` := v3 @kind object;
  #L08ad3a.  return @kind void;
}
procedure `a.v` `a`(`java.lang.String` v3 @kind object) @signature `La/v;.a:(Ljava/lang/String;)La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08ad4c.  v0:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08ad50.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08ad54.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08ad5a.  v0:= temp;
  #L08ad5c.  if v0 == 0 then goto L08ad66;
  #L08ad60.  v0:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08ad64.  return v0 @kind object;
  #L08ad66.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08ad6a.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08ad6e.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08ad74.  v0:= temp;
  #L08ad76.  if v0 == 0 then goto L08ad80;
  #L08ad7a.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08ad7e.  goto L08ad64;
  #L08ad80.  v0:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08ad84.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08ad88.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08ad8e.  v0:= temp;
  #L08ad90.  if v0 == 0 then goto L08ad9a;
  #L08ad94.  v0:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08ad98.  goto L08ad64;
  #L08ad9a.  v0:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08ad9e.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08ada2.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08ada8.  v0:= temp;
  #L08adaa.  if v0 == 0 then goto L08adb4;
  #L08adae.  v0:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08adb2.  goto L08ad64;
  #L08adb4.  v0:= new `java.io.IOException`;
  #L08adb8.  v1:= new `java.lang.StringBuilder`;
  #L08adbc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08adc2.  v2:= "Unexpected protocol: " @kind object;
  #L08adc6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08adcc.  v1:= temp @kind object;
  #L08adce.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08add4.  v1:= temp @kind object;
  #L08add6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08addc.  v1:= temp @kind object;
  #L08adde.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08ade4.  throw v0;
}
procedure `a.v` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/v;.valueOf:(Ljava/lang/String;)La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08adf8.  v0:= constclass @type ^`a.v` @kind object;
  #L08adfc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L08ae02.  v0:= temp @kind object;
  #L08ae04.  v0:= (`a.v`) v0 @kind object;
  #L08ae08.  return v0 @kind object;
}
procedure `a.v`[] `values`() @signature `La/v;.values:()[La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08ae1c.  v0:= `@@a.v.f` @type ^`a.v`[] @kind object;
  #L08ae20.  call temp:= `clone`(v0) @signature `[La/v;.clone:()Ljava/lang/Object;` @kind virtual;
  #L08ae26.  v0:= temp @kind object;
  #L08ae28.  v0:= (`a.v`[]) v0 @kind object;
  #L08ae2c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`a.v` v1 @kind this) @signature `La/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08ae40.  v0:= v1.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08ae44.  return v0 @kind object;
}

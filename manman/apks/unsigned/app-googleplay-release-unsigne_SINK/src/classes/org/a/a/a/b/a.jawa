record `org.a.a.a.b.a` @kind class @AccessFlag PUBLIC extends `java.io.FilterInputStream` @kind class {
  `long` `org.a.a.a.b.a.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.a.a.a.b.a` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lorg/a/a/a/b/a;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17e544.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L17e54a.  return @kind void;
}
procedure `long` `a`(`org.a.a.a.b.a` v2 @kind this) @signature `Lorg/a/a/a/b/a;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17e55c.  v0:= v2.`org.a.a.a.b.a.a` @type ^`long` @kind wide;
  #L17e560.  return v0 @kind wide;
}
procedure `void` `a`(`org.a.a.a.b.a` v3 @kind this, `long` v4 ) @signature `Lorg/a/a/a/b/a;.a:(J)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L17e574.  v0:= -1L;
  #L17e578.  v0:= lcmp(v4, v0);
  #L17e57c.  if v0 == 0 then goto L17e58a;
  #L17e580.  v0:= v3.`org.a.a.a.b.a.a` @type ^`long` @kind wide;
  #L17e584.  v0:= v0 + v4 @kind long;
  #L17e586.  v3.`org.a.a.a.b.a.a` @type ^`long` := v0 @kind wide;
  #L17e58a.  return @kind void;
}
procedure `int` `read`(`org.a.a.a.b.a` v4 @kind this) @signature `Lorg/a/a/a/b/a;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17e59c.  v0:= v4.`org.a.a.a.b.a.in` @type ^`java.io.InputStream` @kind object;
  #L17e5a0.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L17e5a6.  v0:= temp;
  #L17e5a8.  if v0 < 0 then goto L17e5b6;
  #L17e5ac.  v2:= 1L;
  #L17e5b0.  call `a`(v4, v2) @signature `Lorg/a/a/a/b/a;.a:(J)V` @kind virtual;
  #L17e5b6.  return v0;
}
procedure `int` `read`(`org.a.a.a.b.a` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/a/a/a/b/a;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17e5c8.  v0:= 0I;
  #L17e5ca.  v1:= length @variable v3;
  #L17e5cc.  call temp:= `read`(v2, v3, v0, v1) @signature `Lorg/a/a/a/b/a;.read:([BII)I` @kind virtual;
  #L17e5d2.  v0:= temp;
  #L17e5d4.  return v0;
}
procedure `int` `read`(`org.a.a.a.b.a` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/a/a/a/b/a;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17e5e8.  v0:= v4.`org.a.a.a.b.a.in` @type ^`java.io.InputStream` @kind object;
  #L17e5ec.  call temp:= `read`(v0, v5, v6, v7) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L17e5f2.  v0:= temp;
  #L17e5f4.  if v0 < 0 then goto L17e600;
  #L17e5f8.  v2:= (`long`) v0 @kind i2l;
  #L17e5fa.  call `a`(v4, v2) @signature `Lorg/a/a/a/b/a;.a:(J)V` @kind virtual;
  #L17e600.  return v0;
}

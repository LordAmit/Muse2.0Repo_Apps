record `org.b.a.a.c` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.c.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.c.b` @AccessFlag PRIVATE;
  `org.b.a.a.a.a` `org.b.a.a.c.c` @AccessFlag PRIVATE;
  `org.b.a.a.b.c` `org.b.a.a.c.d` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.c.e` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L19bbdc.  v0:= new `org.b.a.a.d.c`;
  #L19bbe0.  call `<init>`(v0) @signature `Lorg/b/a/a/d/c;.<init>:()V` @kind direct;
  #L19bbe6.  `@@org.b.a.a.c.f` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L19bbea.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19bbfc.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L19bc02.  v0:= new `org.b.a.a.d.b`;
  #L19bc06.  v1:= `@@org.b.a.a.c.f` @type ^`org.b.a.a.d.m` @kind object;
  #L19bc0a.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L19bc10.  v2.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L19bc14.  v0:= new `org.b.a.a.a.a`;
  #L19bc18.  call `<init>`(v0) @signature `Lorg/b/a/a/a/a;.<init>:()V` @kind direct;
  #L19bc1e.  v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` := v0 @kind object;
  #L19bc22.  v0:= new `org.b.a.a.b.c`;
  #L19bc26.  call `<init>`(v0) @signature `Lorg/b/a/a/b/c;.<init>:()V` @kind direct;
  #L19bc2c.  v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` := v0 @kind object;
  #L19bc30.  v0:= 2I;
  #L19bc32.  v0:= new `byte`[v0];
  #L19bc36.  v2.`org.b.a.a.c.e` @type ^`byte`[] := v0 @kind object;
  #L19bc3a.  call `d`(v2) @signature `Lorg/b/a/a/c;.d:()V` @kind virtual;
  #L19bc40.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.c` v1 @kind this) @signature `Lorg/b/a/a/c;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bc54.  v0:= `@@org.b.a.b.i` @type ^`java.lang.String` @kind object;
  #L19bc58.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.c` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/c;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19bc6c.  v6:= 1I;
  #L19bc6e.  v5:= 0I;
  #L19bc70.  v1:= v9 + v10 @kind int;
  #L19bc74.  v0:= v9;
  #L19bc76.  if v0 >= v1 then goto L19bc96;
  #L19bc7a.  v2:= v7.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19bc7e.  v3:= v8[v0] @kind byte;
  #L19bc82.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L19bc88.  v2:= temp;
  #L19bc8a.  if v2 != v6 then goto L19bce6;
  #L19bc8e.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L19bc92.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19bc96.  v0:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L19bc9a.  v1:= v1 + -1;
  #L19bc9e.  v1:= v8[v1] @kind byte;
  #L19bca2.  v0[v5]:= v1 @kind byte;
  #L19bca6.  v0:= v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19bcaa.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19bcae.  if v0 != v1 then goto L19bce0;
  #L19bcb2.  v0:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L19bcb6.  call temp:= `c`(v0) @signature `Lorg/b/a/a/a/a;.c:()Z` @kind virtual;
  #L19bcbc.  v0:= temp;
  #L19bcbe.  if v0 == 0 then goto L19bce0;
  #L19bcc2.  call temp:= `b`(v7) @signature `Lorg/b/a/a/c;.b:()F` @kind virtual;
  #L19bcc8.  v0:= temp;
  #L19bcca.  v1:= 1064514355I;
  #L19bcd0.  v0:= fcmpl(v0, v1);
  #L19bcd4.  if v0 <= 0 then goto L19bce0;
  #L19bcd8.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19bcdc.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19bce0.  v0:= v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19bce4.  return v0 @kind object;
  #L19bce6.  v3:= 2I;
  #L19bce8.  if v2 != v3 then goto L19bcf6;
  #L19bcec.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19bcf0.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19bcf4.  goto L19bc96;
  #L19bcf6.  if v2 != 0 then goto L19bd32;
  #L19bcfa.  v2:= v7.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19bcfe.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L19bd04.  v2:= temp;
  #L19bd06.  if v0 != v9 then goto L19bd38;
  #L19bd0a.  v3:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L19bd0e.  v4:= v8[v9] @kind byte;
  #L19bd12.  v3[v6]:= v4 @kind byte;
  #L19bd16.  v3:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L19bd1a.  v4:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L19bd1e.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/a/a;.a:([BII)V` @kind virtual;
  #L19bd24.  v3:= v7.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L19bd28.  v4:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L19bd2c.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/c;.a:([BII)V` @kind virtual;
  #L19bd32.  v0:= v0 + 1;
  #L19bd36.  goto L19bc76;
  #L19bd38.  v3:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L19bd3c.  v4:= v0 + -1;
  #L19bd40.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/a/a;.a:([BII)V` @kind virtual;
  #L19bd46.  v3:= v7.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L19bd4a.  v4:= v0 + -1;
  #L19bd4e.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/c;.a:([BII)V` @kind virtual;
  #L19bd54.  goto L19bd32;
}
procedure `float` `b`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bd68.  v0:= v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L19bd6c.  call temp:= `a`(v0) @signature `Lorg/b/a/a/a/a;.a:()F` @kind virtual;
  #L19bd72.  v0:= temp;
  #L19bd74.  v1:= v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L19bd78.  call temp:= `a`(v1) @signature `Lorg/b/a/a/b/c;.a:()F` @kind virtual;
  #L19bd7e.  v1:= temp;
  #L19bd80.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L19bd86.  v0:= temp;
  #L19bd88.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.c` v1 @kind this) @signature `Lorg/b/a/a/c;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19bd9c.  v0:= v1.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19bda0.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19bdb4.  v0:= v2.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19bdb8.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L19bdbe.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19bdc2.  v2.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19bdc6.  v0:= v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L19bdca.  call `b`(v0) @signature `Lorg/b/a/a/a/a;.b:()V` @kind virtual;
  #L19bdd0.  v0:= v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L19bdd4.  call `b`(v0) @signature `Lorg/b/a/a/b/c;.b:()V` @kind virtual;
  #L19bdda.  v0:= v2.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L19bdde.  v1:= 0I;
  #L19bde0.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L19bde6.  return @kind void;
}

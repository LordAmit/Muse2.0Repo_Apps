record `org.b.a.c` @kind class @AccessFlag PUBLIC {
  `org.b.a.c$a` `org.b.a.c.a` @AccessFlag PRIVATE;
  `boolean` `org.b.a.c.b` @AccessFlag PRIVATE;
  `boolean` `org.b.a.c.c` @AccessFlag PRIVATE;
  `boolean` `org.b.a.c.d` @AccessFlag PRIVATE;
  `byte` `org.b.a.c.e` @AccessFlag PRIVATE;
  `java.lang.String` `org.b.a.c.f` @AccessFlag PRIVATE;
  `org.b.a.a.b`[] `org.b.a.c.g` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.c.h` @AccessFlag PRIVATE;
  `org.b.a.a` `org.b.a.c.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.c` v3 @kind this, `org.b.a.a` v4 @kind object) @signature `Lorg/b/a/c;.<init>:(Lorg/b/a/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1a1884.  v2:= 0I;
  #L1a1886.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a188c.  v3.`org.b.a.c.i` @type ^`org.b.a.a` := v4 @kind object;
  #L1a1890.  v3.`org.b.a.c.h` @type ^`org.b.a.a.b` := v2 @kind object;
  #L1a1894.  v0:= 3I;
  #L1a1896.  v0:= new `org.b.a.a.b`[v0];
  #L1a189a.  v3.`org.b.a.c.g` @type ^`org.b.a.a.b`[] := v0 @kind object;
  #L1a189e.  v0:= 0I;
  #L1a18a0.  v1:= v3.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a18a4.  v1:= length @variable v1;
  #L1a18a6.  if v0 >= v1 then goto L1a18b8;
  #L1a18aa.  v1:= v3.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a18ae.  v1[v0]:= v2 @kind object;
  #L1a18b2.  v0:= v0 + 1;
  #L1a18b6.  goto L1a18a0;
  #L1a18b8.  call `d`(v3) @signature `Lorg/b/a/c;.d:()V` @kind virtual;
  #L1a18be.  return @kind void;
}
procedure `void` `a`(`org.b.a.c` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/b/a/c;.a:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a18d0.  v8:= 2I;
  #L1a18d2.  v7:= 255I;
  #L1a18d6.  v5:= 254I;
  #L1a18da.  v0:= 0I;
  #L1a18dc.  v6:= 1I;
  #L1a18de.  v1:= v9.`org.b.a.c.b` @type ^`boolean` @kind boolean;
  #L1a18e2.  if v1 == 0 then goto L1a18e8;
  #L1a18e6.  return @kind void;
  #L1a18e8.  if v12 <= 0 then goto L1a18f0;
  #L1a18ec.  v9.`org.b.a.c.d` @type ^`boolean` := v6 @kind boolean;
  #L1a18f0.  v1:= v9.`org.b.a.c.c` @type ^`boolean` @kind boolean;
  #L1a18f4.  if v1 == 0 then goto L1a19d0;
  #L1a18f8.  v9.`org.b.a.c.c` @type ^`boolean` := v0 @kind boolean;
  #L1a18fc.  v1:= 3I;
  #L1a18fe.  if v12 <= v1 then goto L1a19d0;
  #L1a1902.  v1:= v10[v11] @kind byte;
  #L1a1906.  v1:= v1 ^& 255;
  #L1a190a.  v2:= v11 + 1;
  #L1a190e.  v2:= v10[v2] @kind byte;
  #L1a1912.  v2:= v2 ^& 255;
  #L1a1916.  v3:= v11 + 2;
  #L1a191a.  v3:= v10[v3] @kind byte;
  #L1a191e.  v3:= v3 ^& 255;
  #L1a1922.  v4:= v11 + 3;
  #L1a1926.  v4:= v10[v4] @kind byte;
  #L1a192a.  v4:= v4 ^& 255;
  #L1a192e.  goto L1a1b4c;
  #L1a1934.  v1:= v9.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L1a1938.  if v1 == 0 then goto L1a19d0;
  #L1a193c.  v9.`org.b.a.c.b` @type ^`boolean` := v6 @kind boolean;
  #L1a1940.  goto L1a18e6;
  #L1a1942.  v1:= 187I;
  #L1a1946.  if v2 != v1 then goto L1a1934;
  #L1a194a.  v1:= 191I;
  #L1a194e.  if v3 != v1 then goto L1a1934;
  #L1a1952.  v1:= `@@org.b.a.b.u` @type ^`java.lang.String` @kind object;
  #L1a1956.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1a195a.  goto L1a1934;
  #L1a195c.  if v2 != v7 then goto L1a1972;
  #L1a1960.  if v3 != 0 then goto L1a1972;
  #L1a1964.  if v4 != 0 then goto L1a1972;
  #L1a1968.  v1:= `@@org.b.a.b.A` @type ^`java.lang.String` @kind object;
  #L1a196c.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1a1970.  goto L1a1934;
  #L1a1972.  if v2 != v7 then goto L1a1934;
  #L1a1976.  v1:= `@@org.b.a.b.v` @type ^`java.lang.String` @kind object;
  #L1a197a.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1a197e.  goto L1a1934;
  #L1a1980.  if v2 != 0 then goto L1a1996;
  #L1a1984.  if v3 != v5 then goto L1a1996;
  #L1a1988.  if v4 != v7 then goto L1a1996;
  #L1a198c.  v1:= `@@org.b.a.b.x` @type ^`java.lang.String` @kind object;
  #L1a1990.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1a1994.  goto L1a1934;
  #L1a1996.  if v2 != 0 then goto L1a1934;
  #L1a199a.  if v3 != v7 then goto L1a1934;
  #L1a199e.  if v4 != v5 then goto L1a1934;
  #L1a19a2.  v1:= `@@org.b.a.b.B` @type ^`java.lang.String` @kind object;
  #L1a19a6.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1a19aa.  goto L1a1934;
  #L1a19ac.  if v2 != v5 then goto L1a19c2;
  #L1a19b0.  if v3 != 0 then goto L1a19c2;
  #L1a19b4.  if v4 != 0 then goto L1a19c2;
  #L1a19b8.  v1:= `@@org.b.a.b.y` @type ^`java.lang.String` @kind object;
  #L1a19bc.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1a19c0.  goto L1a1934;
  #L1a19c2.  if v2 != v5 then goto L1a1934;
  #L1a19c6.  v1:= `@@org.b.a.b.w` @type ^`java.lang.String` @kind object;
  #L1a19ca.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1a19ce.  goto L1a1934;
  #L1a19d0.  v2:= v11 + v12 @kind int;
  #L1a19d4.  v1:= v11;
  #L1a19d6.  if v1 >= v2 then goto L1a1aae;
  #L1a19da.  v3:= v10[v1] @kind byte;
  #L1a19de.  v3:= v3 ^& 255;
  #L1a19e2.  v4:= v3 ^& 128;
  #L1a19e6.  if v4 == 0 then goto L1a1a74;
  #L1a19ea.  v4:= 160I;
  #L1a19ee.  if v3 == v4 then goto L1a1a74;
  #L1a19f2.  v3:= v9.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L1a19f6.  v4:= `@@org.b.a.c$a.c` @type ^`org.b.a.c$a` @kind object;
  #L1a19fa.  if v3 == v4 then goto L1a1a6e;
  #L1a19fe.  v3:= `@@org.b.a.c$a.c` @type ^`org.b.a.c$a` @kind object;
  #L1a1a02.  v9.`org.b.a.c.a` @type ^`org.b.a.c$a` := v3 @kind object;
  #L1a1a06.  v3:= v9.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L1a1a0a.  if v3 == 0 then goto L1a1a14;
  #L1a1a0e.  v3:= 0I;
  #L1a1a10.  v9.`org.b.a.c.h` @type ^`org.b.a.a.b` := v3 @kind object;
  #L1a1a14.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1a18.  v3:= v3[v0] @kind object;
  #L1a1a1c.  if v3 != 0 then goto L1a1a32;
  #L1a1a20.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1a24.  v4:= new `org.b.a.a.j`;
  #L1a1a28.  call `<init>`(v4) @signature `Lorg/b/a/a/j;.<init>:()V` @kind direct;
  #L1a1a2e.  v3[v0]:= v4 @kind object;
  #L1a1a32.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1a36.  v3:= v3[v6] @kind object;
  #L1a1a3a.  if v3 != 0 then goto L1a1a50;
  #L1a1a3e.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1a42.  v4:= new `org.b.a.a.k`;
  #L1a1a46.  call `<init>`(v4) @signature `Lorg/b/a/a/k;.<init>:()V` @kind direct;
  #L1a1a4c.  v3[v6]:= v4 @kind object;
  #L1a1a50.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1a54.  v3:= v3[v8] @kind object;
  #L1a1a58.  if v3 != 0 then goto L1a1a6e;
  #L1a1a5c.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1a60.  v4:= new `org.b.a.a.i`;
  #L1a1a64.  call `<init>`(v4) @signature `Lorg/b/a/a/i;.<init>:()V` @kind direct;
  #L1a1a6a.  v3[v8]:= v4 @kind object;
  #L1a1a6e.  v1:= v1 + 1;
  #L1a1a72.  goto L1a19d6;
  #L1a1a74.  v4:= v9.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L1a1a78.  v5:= `@@org.b.a.c$a.a` @type ^`org.b.a.c$a` @kind object;
  #L1a1a7c.  if v4 != v5 then goto L1a1aa4;
  #L1a1a80.  v4:= 27I;
  #L1a1a84.  if v3 == v4 then goto L1a1a9c;
  #L1a1a88.  v4:= 123I;
  #L1a1a8c.  if v3 != v4 then goto L1a1aa4;
  #L1a1a90.  v3:= v9.`org.b.a.c.e` @type ^`byte` @kind byte;
  #L1a1a94.  v4:= 126I;
  #L1a1a98.  if v3 != v4 then goto L1a1aa4;
  #L1a1a9c.  v3:= `@@org.b.a.c$a.b` @type ^`org.b.a.c$a` @kind object;
  #L1a1aa0.  v9.`org.b.a.c.a` @type ^`org.b.a.c$a` := v3 @kind object;
  #L1a1aa4.  v3:= v10[v1] @kind byte;
  #L1a1aa8.  v9.`org.b.a.c.e` @type ^`byte` := v3 @kind byte;
  #L1a1aac.  goto L1a1a6e;
  #L1a1aae.  v1:= v9.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L1a1ab2.  v2:= `@@org.b.a.c$a.b` @type ^`org.b.a.c$a` @kind object;
  #L1a1ab6.  if v1 != v2 then goto L1a1afc;
  #L1a1aba.  v0:= v9.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L1a1abe.  if v0 != 0 then goto L1a1ad0;
  #L1a1ac2.  v0:= new `org.b.a.a.f`;
  #L1a1ac6.  call `<init>`(v0) @signature `Lorg/b/a/a/f;.<init>:()V` @kind direct;
  #L1a1acc.  v9.`org.b.a.c.h` @type ^`org.b.a.a.b` := v0 @kind object;
  #L1a1ad0.  v0:= v9.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L1a1ad4.  call temp:= `a`(v0, v10, v11, v12) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @kind virtual;
  #L1a1ada.  v0:= temp @kind object;
  #L1a1adc.  v1:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a1ae0.  if v0 != v1 then goto L1a18e6;
  #L1a1ae4.  v9.`org.b.a.c.b` @type ^`boolean` := v6 @kind boolean;
  #L1a1ae8.  v0:= v9.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L1a1aec.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L1a1af2.  v0:= temp @kind object;
  #L1a1af4.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v0 @kind object;
  #L1a1af8.  goto L1a18e6;
  #L1a1afc.  v1:= v9.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L1a1b00.  v2:= `@@org.b.a.c$a.c` @type ^`org.b.a.c$a` @kind object;
  #L1a1b04.  if v1 != v2 then goto L1a18e6;
  #L1a1b08.  v1:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1b0c.  v1:= length @variable v1;
  #L1a1b0e.  if v0 >= v1 then goto L1a18e6;
  #L1a1b12.  v1:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1b16.  v1:= v1[v0] @kind object;
  #L1a1b1a.  call temp:= `a`(v1, v10, v11, v12) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @kind virtual;
  #L1a1b20.  v1:= temp @kind object;
  #L1a1b22.  v2:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1a1b26.  if v1 != v2 then goto L1a1b46;
  #L1a1b2a.  v9.`org.b.a.c.b` @type ^`boolean` := v6 @kind boolean;
  #L1a1b2e.  v1:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1b32.  v0:= v1[v0] @kind object;
  #L1a1b36.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L1a1b3c.  v0:= temp @kind object;
  #L1a1b3e.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v0 @kind object;
  #L1a1b42.  goto L1a18e6;
  #L1a1b46.  v0:= v0 + 1;
  #L1a1b4a.  goto L1a1b08;
  #L1a1b4c.  switch v1
                  | 0 => goto L1a1980
                  | 239 => goto L1a1942
                  | 254 => goto L1a195c
                  | 255 => goto L1a19ac
                  | else => goto L1a1934;
}
procedure `boolean` `a`(`org.b.a.c` v1 @kind this) @signature `Lorg/b/a/c;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1b80.  v0:= v1.`org.b.a.c.b` @type ^`boolean` @kind boolean;
  #L1a1b84.  return v0;
}
procedure `java.lang.String` `b`(`org.b.a.c` v1 @kind this) @signature `Lorg/b/a/c;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a1b98.  v0:= v1.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L1a1b9c.  return v0 @kind object;
}
procedure `void` `c`(`org.b.a.c` v5 @kind this) @signature `Lorg/b/a/c;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a1bb0.  v0:= 0I;
  #L1a1bb2.  v1:= v5.`org.b.a.c.d` @type ^`boolean` @kind boolean;
  #L1a1bb6.  if v1 != 0 then goto L1a1bbc;
  #L1a1bba.  return @kind void;
  #L1a1bbc.  v1:= v5.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L1a1bc0.  if v1 == 0 then goto L1a1be2;
  #L1a1bc4.  v0:= 1I;
  #L1a1bc6.  v5.`org.b.a.c.b` @type ^`boolean` := v0 @kind boolean;
  #L1a1bca.  v0:= v5.`org.b.a.c.i` @type ^`org.b.a.a` @kind object;
  #L1a1bce.  if v0 == 0 then goto L1a1bba;
  #L1a1bd2.  v0:= v5.`org.b.a.c.i` @type ^`org.b.a.a` @kind object;
  #L1a1bd6.  v1:= v5.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L1a1bda.  call `a`(v0, v1) @signature `Lorg/b/a/a;.a:(Ljava/lang/String;)V` @kind interface;
  #L1a1be0.  goto L1a1bba;
  #L1a1be2.  v1:= v5.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L1a1be6.  v2:= `@@org.b.a.c$a.c` @type ^`org.b.a.c$a` @kind object;
  #L1a1bea.  if v1 != v2 then goto L1a1c5a;
  #L1a1bee.  v1:= 0I;
  #L1a1bf0.  v2:= v1;
  #L1a1bf2.  v1:= v0;
  #L1a1bf4.  v3:= v5.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1bf8.  v3:= length @variable v3;
  #L1a1bfa.  if v0 >= v3 then goto L1a1c20;
  #L1a1bfe.  v3:= v5.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1c02.  v3:= v3[v0] @kind object;
  #L1a1c06.  call temp:= `b`(v3) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L1a1c0c.  v3:= temp;
  #L1a1c0e.  v4:= fcmpl(v3, v2);
  #L1a1c12.  if v4 <= 0 then goto L1a1c1a;
  #L1a1c16.  v1:= v0;
  #L1a1c18.  v2:= v3;
  #L1a1c1a.  v0:= v0 + 1;
  #L1a1c1e.  goto L1a1bf4;
  #L1a1c20.  v0:= 1045220557I;
  #L1a1c26.  v0:= fcmpl(v2, v0);
  #L1a1c2a.  if v0 <= 0 then goto L1a1bba;
  #L1a1c2e.  v0:= v5.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1c32.  v0:= v0[v1] @kind object;
  #L1a1c36.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L1a1c3c.  v0:= temp @kind object;
  #L1a1c3e.  v5.`org.b.a.c.f` @type ^`java.lang.String` := v0 @kind object;
  #L1a1c42.  v0:= v5.`org.b.a.c.i` @type ^`org.b.a.a` @kind object;
  #L1a1c46.  if v0 == 0 then goto L1a1bba;
  #L1a1c4a.  v0:= v5.`org.b.a.c.i` @type ^`org.b.a.a` @kind object;
  #L1a1c4e.  v1:= v5.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L1a1c52.  call `a`(v0, v1) @signature `Lorg/b/a/a;.a:(Ljava/lang/String;)V` @kind interface;
  #L1a1c58.  goto L1a1bba;
  #L1a1c5a.  v0:= v5.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L1a1c5e.  v1:= `@@org.b.a.c$a.b` @type ^`org.b.a.c$a` @kind object;
  #L1a1c62.  if v0 != v1 then goto L1a1bba;
  #L1a1c66.  goto L1a1bba;
}
procedure `void` `d`(`org.b.a.c` v2 @kind this) @signature `Lorg/b/a/c;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a1c78.  v0:= 0I;
  #L1a1c7a.  v2.`org.b.a.c.b` @type ^`boolean` := v0 @kind boolean;
  #L1a1c7e.  v1:= 1I;
  #L1a1c80.  v2.`org.b.a.c.c` @type ^`boolean` := v1 @kind boolean;
  #L1a1c84.  v1:= 0I;
  #L1a1c86.  v2.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1a1c8a.  v2.`org.b.a.c.d` @type ^`boolean` := v0 @kind boolean;
  #L1a1c8e.  v1:= `@@org.b.a.c$a.a` @type ^`org.b.a.c$a` @kind object;
  #L1a1c92.  v2.`org.b.a.c.a` @type ^`org.b.a.c$a` := v1 @kind object;
  #L1a1c96.  v2.`org.b.a.c.e` @type ^`byte` := v0 @kind byte;
  #L1a1c9a.  v1:= v2.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L1a1c9e.  if v1 == 0 then goto L1a1cac;
  #L1a1ca2.  v1:= v2.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L1a1ca6.  call `d`(v1) @signature `Lorg/b/a/a/b;.d:()V` @kind virtual;
  #L1a1cac.  v1:= v2.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1cb0.  v1:= length @variable v1;
  #L1a1cb2.  if v0 >= v1 then goto L1a1cd6;
  #L1a1cb6.  v1:= v2.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1cba.  v1:= v1[v0] @kind object;
  #L1a1cbe.  if v1 == 0 then goto L1a1cd0;
  #L1a1cc2.  v1:= v2.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1a1cc6.  v1:= v1[v0] @kind object;
  #L1a1cca.  call `d`(v1) @signature `Lorg/b/a/a/b;.d:()V` @kind virtual;
  #L1a1cd0.  v0:= v0 + 1;
  #L1a1cd4.  goto L1a1cac;
  #L1a1cd6.  return @kind void;
}

record `org.b.a.a.h` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `int` `org.b.a.a.h.a` @AccessFlag PRIVATE;
  `int` `org.b.a.a.h.b` @AccessFlag PRIVATE;
  `byte` `org.b.a.a.h.c` @AccessFlag PRIVATE;
  `byte` `org.b.a.a.h.d` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.a.h.e` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.a.h.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.a.h` v1 @kind this) @signature `Lorg/b/a/a/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a0324.  v0:= 0I;
  #L1a0326.  call `<init>`(v1) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L1a032c.  v1.`org.b.a.a.h.e` @type ^`org.b.a.a.b` := v0 @kind object;
  #L1a0330.  v1.`org.b.a.a.h.f` @type ^`org.b.a.a.b` := v0 @kind object;
  #L1a0334.  call `d`(v1) @signature `Lorg/b/a/a/h;.d:()V` @kind virtual;
  #L1a033a.  return @kind void;
}
procedure `boolean` `a`(`byte` v2 ) @signature `Lorg/b/a/a/h;.a:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;

  #L1a034c.  v0:= v2 ^& 255;
  #L1a0350.  v1:= 234I;
  #L1a0354.  if v0 == v1 then goto L1a0378;
  #L1a0358.  v1:= 237I;
  #L1a035c.  if v0 == v1 then goto L1a0378;
  #L1a0360.  v1:= 239I;
  #L1a0364.  if v0 == v1 then goto L1a0378;
  #L1a0368.  v1:= 243I;
  #L1a036c.  if v0 == v1 then goto L1a0378;
  #L1a0370.  v1:= 245I;
  #L1a0374.  if v0 != v1 then goto L1a037c;
  #L1a0378.  v0:= 1I;
  #L1a037a.  return v0;
  #L1a037c.  v0:= 0I;
  #L1a037e.  goto L1a037a;
}
procedure `boolean` `b`(`byte` v2 ) @signature `Lorg/b/a/a/h;.b:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;

  #L1a0390.  v0:= v2 ^& 255;
  #L1a0394.  v1:= 235I;
  #L1a0398.  if v0 == v1 then goto L1a03b4;
  #L1a039c.  v1:= 238I;
  #L1a03a0.  if v0 == v1 then goto L1a03b4;
  #L1a03a4.  v1:= 240I;
  #L1a03a8.  if v0 == v1 then goto L1a03b4;
  #L1a03ac.  v1:= 244I;
  #L1a03b0.  if v0 != v1 then goto L1a03b8;
  #L1a03b4.  v0:= 1I;
  #L1a03b6.  return v0;
  #L1a03b8.  v0:= 0I;
  #L1a03ba.  goto L1a03b6;
}
procedure `java.lang.String` `a`(`org.b.a.a.h` v3 @kind this) @signature `Lorg/b/a/a/h;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a03cc.  v0:= v3.`org.b.a.a.h.a` @type ^`int`;
  #L1a03d0.  v1:= v3.`org.b.a.a.h.b` @type ^`int`;
  #L1a03d4.  v0:= v0 - v1 @kind int;
  #L1a03d6.  v1:= 5I;
  #L1a03d8.  if v0 < v1 then goto L1a03e2;
  #L1a03dc.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L1a03e0.  return v0 @kind object;
  #L1a03e2.  v1:= -5I;
  #L1a03e4.  if v0 > v1 then goto L1a03ee;
  #L1a03e8.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L1a03ec.  goto L1a03e0;
  #L1a03ee.  v1:= v3.`org.b.a.a.h.e` @type ^`org.b.a.a.b` @kind object;
  #L1a03f2.  call temp:= `b`(v1) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L1a03f8.  v1:= temp;
  #L1a03fa.  v2:= v3.`org.b.a.a.h.f` @type ^`org.b.a.a.b` @kind object;
  #L1a03fe.  call temp:= `b`(v2) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L1a0404.  v2:= temp;
  #L1a0406.  v1:= v1 - v2 @kind float;
  #L1a0408.  v2:= 1008981770I;
  #L1a040e.  v2:= fcmpl(v1, v2);
  #L1a0412.  if v2 <= 0 then goto L1a041c;
  #L1a0416.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L1a041a.  goto L1a03e0;
  #L1a041c.  v2:= -1138501878I;
  #L1a0422.  v1:= fcmpg(v1, v2);
  #L1a0426.  if v1 >= 0 then goto L1a0430;
  #L1a042a.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L1a042e.  goto L1a03e0;
  #L1a0430.  if v0 >= 0 then goto L1a043a;
  #L1a0434.  v0:= `@@org.b.a.b.f` @type ^`java.lang.String` @kind object;
  #L1a0438.  goto L1a03e0;
  #L1a043a.  v0:= `@@org.b.a.b.t` @type ^`java.lang.String` @kind object;
  #L1a043e.  goto L1a03e0;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.h` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/b/a/a/h;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a0450.  v3:= 32I;
  #L1a0454.  call temp:= `c`(v4) @signature `Lorg/b/a/a/h;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L1a045a.  v0:= temp @kind object;
  #L1a045c.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0460.  if v0 != v1 then goto L1a046a;
  #L1a0464.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0468.  return v0 @kind object;
  #L1a046a.  v0:= v6 + v7 @kind int;
  #L1a046e.  if v6 >= v0 then goto L1a04f8;
  #L1a0472.  v1:= v5[v6] @kind byte;
  #L1a0476.  if v1 != v3 then goto L1a04ce;
  #L1a047a.  v2:= v4.`org.b.a.a.h.d` @type ^`byte` @kind byte;
  #L1a047e.  if v2 == v3 then goto L1a049e;
  #L1a0482.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L1a0486.  call temp:= `a`(v2) @signature `Lorg/b/a/a/h;.a:(B)Z` @kind static;
  #L1a048c.  v2:= temp;
  #L1a048e.  if v2 == 0 then goto L1a04b0;
  #L1a0492.  v2:= v4.`org.b.a.a.h.a` @type ^`int`;
  #L1a0496.  v2:= v2 + 1;
  #L1a049a.  v4.`org.b.a.a.h.a` @type ^`int` := v2;
  #L1a049e.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L1a04a2.  v4.`org.b.a.a.h.d` @type ^`byte` := v2 @kind byte;
  #L1a04a6.  v4.`org.b.a.a.h.c` @type ^`byte` := v1 @kind byte;
  #L1a04aa.  v6:= v6 + 1;
  #L1a04ae.  goto L1a046e;
  #L1a04b0.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L1a04b4.  call temp:= `b`(v2) @signature `Lorg/b/a/a/h;.b:(B)Z` @kind static;
  #L1a04ba.  v2:= temp;
  #L1a04bc.  if v2 == 0 then goto L1a049e;
  #L1a04c0.  v2:= v4.`org.b.a.a.h.b` @type ^`int`;
  #L1a04c4.  v2:= v2 + 1;
  #L1a04c8.  v4.`org.b.a.a.h.b` @type ^`int` := v2;
  #L1a04cc.  goto L1a049e;
  #L1a04ce.  v2:= v4.`org.b.a.a.h.d` @type ^`byte` @kind byte;
  #L1a04d2.  if v2 != v3 then goto L1a049e;
  #L1a04d6.  v2:= v4.`org.b.a.a.h.c` @type ^`byte` @kind byte;
  #L1a04da.  call temp:= `a`(v2) @signature `Lorg/b/a/a/h;.a:(B)Z` @kind static;
  #L1a04e0.  v2:= temp;
  #L1a04e2.  if v2 == 0 then goto L1a049e;
  #L1a04e6.  if v1 == v3 then goto L1a049e;
  #L1a04ea.  v2:= v4.`org.b.a.a.h.b` @type ^`int`;
  #L1a04ee.  v2:= v2 + 1;
  #L1a04f2.  v4.`org.b.a.a.h.b` @type ^`int` := v2;
  #L1a04f6.  goto L1a049e;
  #L1a04f8.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a04fc.  goto L1a0468;
}
procedure `void` `a`(`org.b.a.a.h` v0 @kind this, `org.b.a.a.b` v1 @kind object, `org.b.a.a.b` v2 @kind object) @signature `Lorg/b/a/a/h;.a:(Lorg/b/a/a/b;Lorg/b/a/a/b;)V` @AccessFlag PUBLIC {
    temp;

  #L1a0510.  v0.`org.b.a.a.h.e` @type ^`org.b.a.a.b` := v1 @kind object;
  #L1a0514.  v0.`org.b.a.a.h.f` @type ^`org.b.a.a.b` := v2 @kind object;
  #L1a0518.  return @kind void;
}
procedure `float` `b`(`org.b.a.a.h` v1 @kind this) @signature `Lorg/b/a/a/h;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a052c.  v0:= 0I;
  #L1a052e.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.h` v2 @kind this) @signature `Lorg/b/a/a/h;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a0540.  v0:= v2.`org.b.a.a.h.e` @type ^`org.b.a.a.b` @kind object;
  #L1a0544.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L1a054a.  v0:= temp @kind object;
  #L1a054c.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0550.  if v0 != v1 then goto L1a056e;
  #L1a0554.  v0:= v2.`org.b.a.a.h.f` @type ^`org.b.a.a.b` @kind object;
  #L1a0558.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b;.c:()Lorg/b/a/a/b$a;` @kind virtual;
  #L1a055e.  v0:= temp @kind object;
  #L1a0560.  v1:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0564.  if v0 != v1 then goto L1a056e;
  #L1a0568.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L1a056c.  return v0 @kind object;
  #L1a056e.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1a0572.  goto L1a056c;
}
procedure `void` `d`(`org.b.a.a.h` v2 @kind this) @signature `Lorg/b/a/a/h;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a0584.  v1:= 32I;
  #L1a0588.  v0:= 0I;
  #L1a058a.  v2.`org.b.a.a.h.a` @type ^`int` := v0;
  #L1a058e.  v2.`org.b.a.a.h.b` @type ^`int` := v0;
  #L1a0592.  v2.`org.b.a.a.h.c` @type ^`byte` := v1 @kind byte;
  #L1a0596.  v2.`org.b.a.a.h.d` @type ^`byte` := v1 @kind byte;
  #L1a059a.  return @kind void;
}

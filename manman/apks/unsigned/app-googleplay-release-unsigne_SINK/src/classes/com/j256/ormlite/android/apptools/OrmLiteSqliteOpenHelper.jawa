record `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `boolean` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @AccessFlag PROTECTED;
  `com.j256.ormlite.android.AndroidConnectionSource` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @AccessFlag PROTECTED;
  `boolean` `com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @AccessFlag PRIVATE_VOLATILE;
}
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @AccessFlag PROTECTED_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L13d348.  v0:= constclass @type ^`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` @kind object;
  #L13d34c.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L13d352.  v0:= temp @kind object;
  #L13d354.  `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L13d358.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v3 @kind this, `android.content.Context` v4 @kind object, `java.lang.String` v5 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v6 @kind object, `int` v7 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L13d36c.  call `<init>`(v3, v4, v5, v6, v7) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L13d372.  v0:= new `com.j256.ormlite.android.AndroidConnectionSource`;
  #L13d376.  call `<init>`(v0, v3) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteOpenHelper;)V` @kind direct;
  #L13d37c.  v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` := v0 @kind object;
  #L13d380.  v0:= 1I;
  #L13d382.  v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L13d386.  v0:= `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L13d38a.  v1:= "{}: constructed connectionSource {}" @kind object;
  #L13d38e.  v2:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L13d392.  call `trace`(v0, v1, v3, v2) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L13d398.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v6 @kind this, `android.content.Context` v7 @kind object, `java.lang.String` v8 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L13d3ac.  call temp:= `openFileId`(v7, v11) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFileId:(Landroid/content/Context;I)Ljava/io/InputStream;` @kind static;
  #L13d3b2.  v5:= temp @kind object;
  #L13d3b4.  v0:= v6 @kind object;
  #L13d3b6.  v1:= v7 @kind object;
  #L13d3b8.  v2:= v8 @kind object;
  #L13d3ba.  v3:= v9 @kind object;
  #L13d3bc.  v4:= v10;
  #L13d3be.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @kind direct;
  #L13d3c4.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v6 @kind this, `android.content.Context` v7 @kind object, `java.lang.String` v8 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v9 @kind object, `int` v10 , `java.io.File` v11 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L13d3d8.  call temp:= `openFile`(v11) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFile:(Ljava/io/File;)Ljava/io/InputStream;` @kind static;
  #L13d3de.  v5:= temp @kind object;
  #L13d3e0.  v0:= v6 @kind object;
  #L13d3e2.  v1:= v7 @kind object;
  #L13d3e4.  v2:= v8 @kind object;
  #L13d3e6.  v3:= v9 @kind object;
  #L13d3e8.  v4:= v10;
  #L13d3ea.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @kind direct;
  #L13d3f0.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.content.Context` v5 @kind object, `java.lang.String` v6 @kind object, `android.database.sqlite.SQLiteDatabase$CursorFactory` v7 @kind object, `int` v8 , `java.io.InputStream` v9 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILjava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13d404.  v2:= 0I;
  #L13d406.  call `<init>`(v4, v5, v6, v7, v8) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L13d40c.  v0:= new `com.j256.ormlite.android.AndroidConnectionSource`;
  #L13d410.  call `<init>`(v0, v4) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.<init>:(Landroid/database/sqlite/SQLiteOpenHelper;)V` @kind direct;
  #L13d416.  v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` := v0 @kind object;
  #L13d41a.  v0:= 1I;
  #L13d41c.  v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L13d420.  if v9 != 0 then goto L13d426;
  #L13d424.  return @kind void;
  #Try_start0.  
  #L13d426.  v1:= new `java.io.BufferedReader`;
  #L13d42a.  v0:= new `java.io.InputStreamReader`;
  #L13d42e.  call `<init>`(v0, v9) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L13d434.  v3:= 4096I;
  #L13d438.  call `<init>`(v1, v0, v3) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;I)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L13d43e.  call temp:= `loadDatabaseConfigFromReader`(v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.loadDatabaseConfigFromReader:(Ljava/io/BufferedReader;)Ljava/util/List;` @kind static;
  #L13d444.  v0:= temp @kind object;
  #L13d446.  call `addCachedDatabaseConfigs`(v0) @signature `Lcom/j256/ormlite/dao/DaoManager;.addCachedDatabaseConfigs:(Ljava/util/Collection;)V` @kind static;
  #Try_end1.  
  #L13d44c.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L13d452.  call `closeQuietly`(v2) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L13d458.  goto L13d424;
  #L13d45a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L13d45c.  v1:= v2 @kind object;
  #Try_start2.  
  #L13d45e.  v2:= new `java.lang.IllegalStateException`;
  #L13d462.  v3:= "Could not load object config file" @kind object;
  #L13d466.  call `<init>`(v2, v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L13d46c.  throw v2;
  #Try_end2.  
  #L13d46e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13d470.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L13d476.  call `closeQuietly`(v9) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L13d47c.  throw v0;
  #L13d47e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13d480.  v1:= v2 @kind object;
  #L13d482.  goto L13d470;
  #L13d484.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13d486.  v9:= v2 @kind object;
  #L13d488.  goto L13d470;
  #L13d48a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L13d48c.  v9:= v2 @kind object;
  #L13d48e.  goto L13d45e;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L13d45a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L13d47e;
  catch `java.sql.SQLException` @[Try_start1..Try_end1] goto L13d48a;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L13d484;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L13d46e;
}
procedure `java.io.InputStream` `openFile`(`java.io.File` v4 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFile:(Ljava/io/File;)Ljava/io/InputStream;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13d4c8.  if v4 != 0 then goto L13d4d0;
  #L13d4cc.  v0:= 0I;
  #L13d4ce.  return v0 @kind object;
  #Try_start0.  
  #L13d4d0.  v0:= new `java.io.FileInputStream`;
  #L13d4d4.  call `<init>`(v0, v4) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #Try_end0.  
  #L13d4da.  goto L13d4ce;
  #L13d4dc.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L13d4de.  v1:= new `java.lang.IllegalArgumentException`;
  #L13d4e2.  v2:= new `java.lang.StringBuilder`;
  #L13d4e6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13d4ec.  v3:= "Could not open config file " @kind object;
  #L13d4f0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d4f6.  v2:= temp @kind object;
  #L13d4f8.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d4fe.  v2:= temp @kind object;
  #L13d500.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d506.  v2:= temp @kind object;
  #L13d508.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L13d50e.  throw v1;
  catch `java.io.FileNotFoundException` @[Try_start0..Try_end0] goto L13d4dc;
}
procedure `java.io.InputStream` `openFileId`(`android.content.Context` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.openFileId:(Landroid/content/Context;I)Ljava/io/InputStream;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L13d530.  call temp:= `getResources`(v3) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L13d536.  v0:= temp @kind object;
  #L13d538.  call temp:= `openRawResource`(v0, v4) @signature `Landroid/content/res/Resources;.openRawResource:(I)Ljava/io/InputStream;` @kind virtual;
  #L13d53e.  v0:= temp @kind object;
  #L13d540.  if v0 != 0 then goto L13d576;
  #L13d544.  v0:= new `java.lang.IllegalStateException`;
  #L13d548.  v1:= new `java.lang.StringBuilder`;
  #L13d54c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13d552.  v2:= "Could not find object config file with id " @kind object;
  #L13d556.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d55c.  v1:= temp @kind object;
  #L13d55e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d564.  v1:= temp @kind object;
  #L13d566.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d56c.  v1:= temp @kind object;
  #L13d56e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13d574.  throw v0;
  #L13d576.  return v0 @kind object;
}
procedure `void` `close`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13d588.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.close:()V` @kind super;
  #L13d58e.  v0:= v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L13d592.  call `close`(v0) @signature `Lcom/j256/ormlite/android/AndroidConnectionSource;.close:()V` @kind virtual;
  #L13d598.  v0:= 0I;
  #L13d59a.  v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` := v0 @kind boolean;
  #L13d59e.  return @kind void;
}
procedure `com.j256.ormlite.support.ConnectionSource` `getConnectionSource`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v3 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13d5b0.  v0:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` @kind boolean;
  #L13d5b4.  if v0 != 0 then goto L13d5d0;
  #L13d5b8.  v0:= `@@com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L13d5bc.  v1:= new `java.lang.IllegalStateException`;
  #L13d5c0.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L13d5c6.  v2:= "Getting connectionSource was called after closed" @kind object;
  #L13d5ca.  call `warn`(v0, v1, v2) @signature `Lcom/j256/ormlite/logger/Logger;.warn:(Ljava/lang/Throwable;Ljava/lang/String;)V` @kind virtual;
  #L13d5d0.  v0:= v3.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.connectionSource` @type ^`com.j256.ormlite.android.AndroidConnectionSource` @kind object;
  #L13d5d4.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.Dao` `getDao`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13d5e8.  call temp:= `getConnectionSource`(v1) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L13d5ee.  v0:= temp @kind object;
  #L13d5f0.  call temp:= `createDao`(v0, v2) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L13d5f6.  v0:= temp @kind object;
  #L13d5f8.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `getRuntimeExceptionDao`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getRuntimeExceptionDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L13d60c.  call temp:= `getDao`(v4, v5) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getDao:(Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind virtual;
  #L13d612.  v0:= temp @kind object;
  #L13d614.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L13d618.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #Try_end0.  
  #L13d61e.  return v1 @kind object;
  #L13d620.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L13d622.  v1:= new `java.lang.RuntimeException`;
  #L13d626.  v2:= new `java.lang.StringBuilder`;
  #L13d62a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13d630.  v3:= "Could not create RuntimeExcepitionDao for class " @kind object;
  #L13d634.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d63a.  v2:= temp @kind object;
  #L13d63c.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d642.  v2:= temp @kind object;
  #L13d644.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d64a.  v2:= temp @kind object;
  #L13d64c.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L13d652.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L13d620;
}
procedure `boolean` `isOpen`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v1 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13d674.  v0:= v1.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.isOpen` @type ^`boolean` @kind boolean;
  #L13d678.  return v0;
}
procedure `void` `onCreate`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.database.sqlite.SQLiteDatabase` v5 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13d68c.  v0:= 1I;
  #L13d68e.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L13d694.  v3:= temp @kind object;
  #L13d696.  v1:= 0I;
  #L13d698.  call temp:= `getSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getSpecialConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L13d69e.  v2:= temp @kind object;
  #L13d6a0.  v1:= 0I;
  #L13d6a2.  if v2 != 0 then goto L13d6ec;
  #L13d6a6.  v1:= new `com.j256.ormlite.android.AndroidDatabaseConnection`;
  #L13d6aa.  v2:= v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L13d6ae.  call `<init>`(v1, v5, v0, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseConnection;.<init>:(Landroid/database/sqlite/SQLiteDatabase;ZZ)V` @kind direct;
  #Try_start0.  
  #L13d6b4.  call temp:= `saveSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.saveSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #Try_start1.  
  #L13d6ba.  call `onCreate`(v4, v5, v3) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;)V` @kind virtual;
  #Try_end1.  
  #L13d6c0.  if v0 == 0 then goto L13d6ca;
  #L13d6c4.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L13d6ca.  return @kind void;
  #L13d6cc.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L13d6ce.  v1:= new `java.lang.IllegalStateException`;
  #L13d6d2.  v2:= "Could not save special connection" @kind object;
  #L13d6d6.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L13d6dc.  throw v1;
  #L13d6de.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13d6e0.  if v0 == 0 then goto L13d6ea;
  #L13d6e4.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L13d6ea.  throw v2;
  #L13d6ec.  v0:= v1;
  #L13d6ee.  v1:= v2 @kind object;
  #L13d6f0.  goto L13d6ba;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L13d6cc;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L13d6de;
}
procedure `void` `onCreate`(`android.database.sqlite.SQLiteDatabase` v0 @kind object, `com.j256.ormlite.support.ConnectionSource` v1 @kind object) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `onUpgrade`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v4 @kind this, `android.database.sqlite.SQLiteDatabase` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13d71c.  v0:= 1I;
  #L13d71e.  call temp:= `getConnectionSource`(v4) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind virtual;
  #L13d724.  v3:= temp @kind object;
  #L13d726.  v1:= 0I;
  #L13d728.  call temp:= `getSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getSpecialConnection:(Ljava/lang/String;)Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #L13d72e.  v2:= temp @kind object;
  #L13d730.  v1:= 0I;
  #L13d732.  if v2 != 0 then goto L13d77c;
  #L13d736.  v1:= new `com.j256.ormlite.android.AndroidDatabaseConnection`;
  #L13d73a.  v2:= v4.`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L13d73e.  call `<init>`(v1, v5, v0, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseConnection;.<init>:(Landroid/database/sqlite/SQLiteDatabase;ZZ)V` @kind direct;
  #Try_start0.  
  #L13d744.  call temp:= `saveSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.saveSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #Try_start1.  
  #L13d74a.  call `onUpgrade`(v4, v5, v3, v6, v7) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;II)V` @kind virtual;
  #Try_end1.  
  #L13d750.  if v0 == 0 then goto L13d75a;
  #L13d754.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L13d75a.  return @kind void;
  #L13d75c.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L13d75e.  v1:= new `java.lang.IllegalStateException`;
  #L13d762.  v2:= "Could not save special connection" @kind object;
  #L13d766.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L13d76c.  throw v1;
  #L13d76e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L13d770.  if v0 == 0 then goto L13d77a;
  #L13d774.  call `clearSpecialConnection`(v3, v1) @signature `Lcom/j256/ormlite/support/ConnectionSource;.clearSpecialConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #L13d77a.  throw v2;
  #L13d77c.  v0:= v1;
  #L13d77e.  v1:= v2 @kind object;
  #L13d780.  goto L13d74a;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L13d75c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L13d76e;
}
procedure `void` `onUpgrade`(`android.database.sqlite.SQLiteDatabase` v0 @kind object, `com.j256.ormlite.support.ConnectionSource` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/support/ConnectionSource;II)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper` v2 @kind this) @signature `Lcom/j256/ormlite/android/apptools/OrmLiteSqliteOpenHelper;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13d7ac.  v0:= new `java.lang.StringBuilder`;
  #L13d7b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13d7b6.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L13d7bc.  v1:= temp @kind object;
  #L13d7be.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L13d7c4.  v1:= temp @kind object;
  #L13d7c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d7cc.  v0:= temp @kind object;
  #L13d7ce.  v1:= "@" @kind object;
  #L13d7d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d7d8.  v0:= temp @kind object;
  #L13d7da.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L13d7e0.  v1:= temp;
  #L13d7e2.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L13d7e8.  v1:= temp @kind object;
  #L13d7ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13d7f0.  v0:= temp @kind object;
  #L13d7f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13d7f8.  v0:= temp @kind object;
  #L13d7fa.  return v0 @kind object;
}

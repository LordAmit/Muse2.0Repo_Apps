record `com.j256.ormlite.support.DatabaseConnection` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.io.Closeable` @kind interface {
}
global `int` `@@com.j256.ormlite.support.DatabaseConnection.DEFAULT_RESULT_FLAGS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Object` `@@com.j256.ormlite.support.DatabaseConnection.MORE_THAN_ONE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/support/DatabaseConnection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15badc.  v0:= new `java.lang.Object`;
  #L15bae0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15bae6.  `@@com.j256.ormlite.support.DatabaseConnection.MORE_THAN_ONE` @type ^`java.lang.Object` := v0 @kind object;
  #L15baea.  return @kind void;
}
procedure `void` `closeQuietly`() @signature `Lcom/j256/ormlite/support/DatabaseConnection;.closeQuietly:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `commit`(`java.sql.Savepoint` v0 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.commit:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.j256.ormlite.support.CompiledStatement` `compileStatement`(`java.lang.String` v0 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v1 @kind object, `com.j256.ormlite.field.FieldType`[] v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `delete`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object, `com.j256.ormlite.field.FieldType`[] v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `executeStatement`(`java.lang.String` v0 @kind object, `int` v1 ) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.executeStatement:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `insert`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object, `com.j256.ormlite.field.FieldType`[] v2 @kind object, `com.j256.ormlite.support.GeneratedKeyHolder` v3 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAutoCommit`() @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommit:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAutoCommitSupported`() @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommitSupported:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isClosed`() @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isClosed:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isTableExists`(`java.lang.String` v0 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isTableExists:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `queryForLong`(`java.lang.String` v0 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `queryForLong`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object, `com.j256.ormlite.field.FieldType`[] v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `queryForOne`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object, `com.j256.ormlite.field.FieldType`[] v2 @kind object, `com.j256.ormlite.stmt.GenericRowMapper` v3 @kind object, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `rollback`(`java.sql.Savepoint` v0 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.rollback:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setAutoCommit`(`boolean` v0 ) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setAutoCommit:(Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.sql.Savepoint` `setSavePoint`(`java.lang.String` v0 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `update`(`java.lang.String` v0 @kind object, `java.lang.Object`[] v1 @kind object, `com.j256.ormlite.field.FieldType`[] v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}

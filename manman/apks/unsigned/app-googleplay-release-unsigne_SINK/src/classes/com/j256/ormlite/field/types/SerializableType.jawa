record `com.j256.ormlite.field.types.SerializableType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
global `com.j256.ormlite.field.types.SerializableType` `@@com.j256.ormlite.field.types.SerializableType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/SerializableType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16ebc4.  v0:= new `com.j256.ormlite.field.types.SerializableType`;
  #L16ebc8.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:()V` @kind direct;
  #L16ebce.  `@@com.j256.ormlite.field.types.SerializableType.singleTon` @type ^`com.j256.ormlite.field.types.SerializableType` := v0 @kind object;
  #L16ebd2.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L16ebe4.  v0:= `@@com.j256.ormlite.field.SqlType.SERIALIZABLE` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L16ebe8.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L16ebee.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.SerializableType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L16ec00.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16ec06.  return @kind void;
}
procedure `com.j256.ormlite.field.types.SerializableType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/SerializableType;.getSingleton:()Lcom/j256/ormlite/field/types/SerializableType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16ec18.  v0:= `@@com.j256.ormlite.field.types.SerializableType.singleTon` @type ^`com.j256.ormlite.field.types.SerializableType` @kind object;
  #L16ec1c.  return v0 @kind object;
}
procedure `java.lang.Class` `getPrimaryClass`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.getPrimaryClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ec30.  v0:= constclass @type ^`java.io.Serializable` @kind object;
  #L16ec34.  return v0 @kind object;
}
procedure `boolean` `isAppropriateId`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isAppropriateId:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ec48.  v0:= 0I;
  #L16ec4a.  return v0;
}
procedure `boolean` `isArgumentHolderRequired`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isArgumentHolderRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ec5c.  v0:= 1I;
  #L16ec5e.  return v0;
}
procedure `boolean` `isComparable`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isComparable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ec70.  v0:= 0I;
  #L16ec72.  return v0;
}
procedure `boolean` `isStreamType`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isStreamType:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ec84.  v0:= 1I;
  #L16ec86.  return v0;
}
procedure `boolean` `isValidForField`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `java.lang.reflect.Field` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isValidForField:(Ljava/lang/reflect/Field;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16ec98.  v0:= constclass @type ^`java.io.Serializable` @kind object;
  #L16ec9c.  call temp:= `getType`(v3) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L16eca2.  v1:= temp @kind object;
  #L16eca4.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L16ecaa.  v0:= temp;
  #L16ecac.  return v0;
}
procedure `java.lang.Object` `javaToSqlArg`(`com.j256.ormlite.field.types.SerializableType` v4 @kind this, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.javaToSqlArg:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16ecc0.  v1:= 0I;
  #Try_start0.  
  #L16ecc2.  v0:= new `java.io.ByteArrayOutputStream`;
  #L16ecc6.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L16eccc.  v2:= new `java.io.ObjectOutputStream`;
  #L16ecd0.  call `<init>`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L16ecd6.  call `writeObject`(v2, v6) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L16ecdc.  call `close`(v2) @signature `Ljava/io/ObjectOutputStream;.close:()V` @kind virtual;
  #Try_end1.  
  #Try_start2.  
  #L16ece2.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #Try_end2.  
  #L16ece8.  v0:= temp @kind object;
  #L16ecea.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16ecf0.  return v0 @kind object;
  #L16ecf2.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #Try_start3.  
  #L16ecf4.  v2:= new `java.lang.StringBuilder`;
  #L16ecf8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16ecfe.  v3:= "Could not write serialized object to byte array: " @kind object;
  #L16ed02.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16ed08.  v2:= temp @kind object;
  #L16ed0a.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16ed10.  v2:= temp @kind object;
  #L16ed12.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16ed18.  v2:= temp @kind object;
  #L16ed1a.  call temp:= `create`(v2, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16ed20.  v0:= temp @kind object;
  #L16ed22.  throw v0;
  #Try_end3.  
  #L16ed24.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16ed26.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16ed2c.  throw v0;
  #L16ed2e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16ed30.  v1:= v2 @kind object;
  #L16ed32.  goto L16ed26;
  #L16ed34.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L16ed36.  v1:= v2 @kind object;
  #L16ed38.  goto L16ecf4;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L16ecf2;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16ed24;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L16ed34;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L16ed2e;
  catch `java.lang.Exception` @[Try_start2..Try_end2] goto L16ecf2;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L16ed24;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L16ed24;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16ed7c.  v0:= new `java.sql.SQLException`;
  #L16ed80.  v1:= "Default values for serializable types are not supported" @kind object;
  #L16ed84.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16ed8a.  throw v0;
}
procedure `java.lang.Object` `resultStringToJava`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.resultStringToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16ed9c.  v0:= new `java.sql.SQLException`;
  #L16eda0.  v1:= "Serializable type cannot be converted from string to Java" @kind object;
  #L16eda4.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16edaa.  throw v0;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16edbc.  call temp:= `getBytes`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getBytes:(I)[B` @kind interface;
  #L16edc2.  v0:= temp @kind object;
  #L16edc4.  return v0 @kind object;
}
procedure `java.lang.Object` `sqlArgToJava`(`com.j256.ormlite.field.types.SerializableType` v4 @kind this, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.Object` v6 @kind object, `int` v7 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.sqlArgToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16edd8.  v6:= (`byte`[]) v6 @kind object;
  #L16eddc.  v6:= (`byte`[]) v6 @kind object;
  #L16ede0.  v2:= 0I;
  #Try_start0.  
  #L16ede2.  v1:= new `java.io.ObjectInputStream`;
  #L16ede6.  v0:= new `java.io.ByteArrayInputStream`;
  #L16edea.  call `<init>`(v0, v6) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L16edf0.  call `<init>`(v1, v0) @signature `Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L16edf6.  call temp:= `readObject`(v1) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #Try_end1.  
  #L16edfc.  v0:= temp @kind object;
  #L16edfe.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16ee04.  return v0 @kind object;
  #L16ee06.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L16ee08.  v1:= v2 @kind object;
  #Try_start2.  
  #L16ee0a.  v2:= new `java.lang.StringBuilder`;
  #L16ee0e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16ee14.  v3:= "Could not read serialized object from byte array: " @kind object;
  #L16ee18.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16ee1e.  v2:= temp @kind object;
  #L16ee20.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([B)Ljava/lang/String;` @kind static;
  #L16ee26.  v3:= temp @kind object;
  #L16ee28.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16ee2e.  v2:= temp @kind object;
  #L16ee30.  v3:= "(len " @kind object;
  #L16ee34.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16ee3a.  v2:= temp @kind object;
  #L16ee3c.  v3:= length @variable v6;
  #L16ee3e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16ee44.  v2:= temp @kind object;
  #L16ee46.  v3:= ")" @kind object;
  #L16ee4a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16ee50.  v2:= temp @kind object;
  #L16ee52.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16ee58.  v2:= temp @kind object;
  #L16ee5a.  call temp:= `create`(v2, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16ee60.  v0:= temp @kind object;
  #L16ee62.  throw v0;
  #Try_end2.  
  #L16ee64.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16ee66.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L16ee6c.  throw v0;
  #L16ee6e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16ee70.  v1:= v2 @kind object;
  #L16ee72.  goto L16ee66;
  #L16ee74.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L16ee76.  goto L16ee0a;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L16ee06;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L16ee6e;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L16ee74;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L16ee64;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L16ee64;
}

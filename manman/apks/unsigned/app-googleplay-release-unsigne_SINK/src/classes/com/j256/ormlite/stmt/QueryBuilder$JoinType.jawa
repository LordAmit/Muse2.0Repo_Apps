record `com.j256.ormlite.stmt.QueryBuilder$JoinType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.j256.ormlite.stmt.QueryBuilder$JoinType.sql` @AccessFlag PRIVATE;
}
global `com.j256.ormlite.stmt.QueryBuilder$JoinType`[] `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.j256.ormlite.stmt.QueryBuilder$JoinType` `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.INNER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.j256.ormlite.stmt.QueryBuilder$JoinType` `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.LEFT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L172ab0.  v4:= 1I;
  #L172ab2.  v3:= 0I;
  #L172ab4.  v0:= new `com.j256.ormlite.stmt.QueryBuilder$JoinType`;
  #L172ab8.  v1:= "INNER" @kind object;
  #L172abc.  v2:= "INNER" @kind object;
  #L172ac0.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L172ac6.  `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.INNER` @type ^`com.j256.ormlite.stmt.QueryBuilder$JoinType` := v0 @kind object;
  #L172aca.  v0:= new `com.j256.ormlite.stmt.QueryBuilder$JoinType`;
  #L172ace.  v1:= "LEFT" @kind object;
  #L172ad2.  v2:= "LEFT" @kind object;
  #L172ad6.  call `<init>`(v0, v1, v4, v2) @signature `Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L172adc.  `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.LEFT` @type ^`com.j256.ormlite.stmt.QueryBuilder$JoinType` := v0 @kind object;
  #L172ae0.  v0:= 2I;
  #L172ae2.  v0:= new `com.j256.ormlite.stmt.QueryBuilder$JoinType`[v0];
  #L172ae6.  v1:= `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.INNER` @type ^`com.j256.ormlite.stmt.QueryBuilder$JoinType` @kind object;
  #L172aea.  v0[v3]:= v1 @kind object;
  #L172aee.  v1:= `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.LEFT` @type ^`com.j256.ormlite.stmt.QueryBuilder$JoinType` @kind object;
  #L172af2.  v0[v4]:= v1 @kind object;
  #L172af6.  `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.$VALUES` @type ^`com.j256.ormlite.stmt.QueryBuilder$JoinType`[] := v0 @kind object;
  #L172afa.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.QueryBuilder$JoinType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L172b0c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L172b12.  v0.`com.j256.ormlite.stmt.QueryBuilder$JoinType.sql` @type ^`java.lang.String` := v3 @kind object;
  #L172b16.  return @kind void;
}
procedure `java.lang.String` `access$100`(`com.j256.ormlite.stmt.QueryBuilder$JoinType` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;.access$100:(Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L172b28.  v0:= v1.`com.j256.ormlite.stmt.QueryBuilder$JoinType.sql` @type ^`java.lang.String` @kind object;
  #L172b2c.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.QueryBuilder$JoinType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;.valueOf:(Ljava/lang/String;)Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L172b40.  v0:= constclass @type ^`com.j256.ormlite.stmt.QueryBuilder$JoinType` @kind object;
  #L172b44.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L172b4a.  v0:= temp @kind object;
  #L172b4c.  v0:= (`com.j256.ormlite.stmt.QueryBuilder$JoinType`) v0 @kind object;
  #L172b50.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.QueryBuilder$JoinType`[] `values`() @signature `Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;.values:()[Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L172b64.  v0:= `@@com.j256.ormlite.stmt.QueryBuilder$JoinType.$VALUES` @type ^`com.j256.ormlite.stmt.QueryBuilder$JoinType`[] @kind object;
  #L172b68.  call temp:= `clone`(v0) @signature `[Lcom/j256/ormlite/stmt/QueryBuilder$JoinType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L172b6e.  v0:= temp @kind object;
  #L172b70.  v0:= (`com.j256.ormlite.stmt.QueryBuilder$JoinType`[]) v0 @kind object;
  #L172b74.  return v0 @kind object;
}

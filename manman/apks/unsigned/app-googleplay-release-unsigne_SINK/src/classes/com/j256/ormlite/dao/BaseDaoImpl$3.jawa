record `com.j256.ormlite.dao.BaseDaoImpl$3` @kind class @AccessFlag  extends `com.j256.ormlite.dao.CloseableIterable` @kind interface {
  `com.j256.ormlite.dao.BaseDaoImpl` `com.j256.ormlite.dao.BaseDaoImpl$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.j256.ormlite.dao.BaseDaoImpl$3` v0 @kind this, `com.j256.ormlite.dao.BaseDaoImpl` v1 @kind object) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl$3;.<init>:(Lcom/j256/ormlite/dao/BaseDaoImpl;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15fe7c.  v0.`com.j256.ormlite.dao.BaseDaoImpl$3.this$0` @type ^`com.j256.ormlite.dao.BaseDaoImpl` := v1 @kind object;
  #L15fe80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15fe86.  return @kind void;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.BaseDaoImpl$3` v4 @kind this) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl$3;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L15fe98.  v0:= v4.`com.j256.ormlite.dao.BaseDaoImpl$3.this$0` @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind object;
  #L15fe9c.  v1:= -1I;
  #L15fe9e.  call temp:= `access$100`(v0, v1) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl;.access$100:(Lcom/j256/ormlite/dao/BaseDaoImpl;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind static;
  #Try_end0.  
  #L15fea4.  v0:= temp @kind object;
  #L15fea6.  return v0 @kind object;
  #L15fea8.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15feaa.  v1:= new `java.lang.IllegalStateException`;
  #L15feae.  v2:= new `java.lang.StringBuilder`;
  #L15feb2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15feb8.  v3:= "Could not build iterator for " @kind object;
  #L15febc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fec2.  v2:= temp @kind object;
  #L15fec4.  v3:= v4.`com.j256.ormlite.dao.BaseDaoImpl$3.this$0` @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind object;
  #L15fec8.  v3:= v3.`com.j256.ormlite.dao.BaseDaoImpl.dataClass` @type ^`java.lang.Class` @kind object;
  #L15fecc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fed2.  v2:= temp @kind object;
  #L15fed4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15feda.  v2:= temp @kind object;
  #L15fedc.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15fee2.  throw v1;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15fea8;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.BaseDaoImpl$3` v1 @kind this) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl$3;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ff04.  call temp:= `closeableIterator`(v1) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl$3;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L15ff0a.  v0:= temp @kind object;
  #L15ff0c.  return v0 @kind object;
}

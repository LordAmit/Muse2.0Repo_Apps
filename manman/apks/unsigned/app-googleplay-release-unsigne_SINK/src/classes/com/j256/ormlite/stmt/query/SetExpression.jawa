record `com.j256.ormlite.stmt.query.SetExpression` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.BaseComparison` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.SetExpression` v1 @kind this, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetExpression;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L179cb8.  v0:= 1I;
  #L179cba.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Z)V` @kind direct;
  #L179cc0.  return @kind void;
}
procedure `void` `appendArgOrValue`(`com.j256.ormlite.stmt.query.SetExpression` v2 @kind this, `com.j256.ormlite.db.DatabaseType` v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetExpression;.appendArgOrValue:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L179cd4.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L179cda.  v0:= temp @kind object;
  #L179cdc.  v1:= 32I;
  #L179ce0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L179ce6.  return @kind void;
}
procedure `void` `appendOperation`(`com.j256.ormlite.stmt.query.SetExpression` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetExpression;.appendOperation:(Ljava/lang/StringBuilder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L179cf8.  v0:= "= " @kind object;
  #L179cfc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L179d02.  return @kind void;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.SetExpression` v0 @kind this, `com.j256.ormlite.db.DatabaseType` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetExpression;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L179d14.  call `appendSql`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind super;
  #L179d1a.  return @kind void;
}
procedure `void` `appendValue`(`com.j256.ormlite.stmt.query.SetExpression` v0 @kind this, `com.j256.ormlite.db.DatabaseType` v1 @kind object, `java.lang.StringBuilder` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SetExpression;.appendValue:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L179d2c.  call `appendValue`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendValue:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind super;
  #L179d32.  return @kind void;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.stmt.query.SetExpression` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/SetExpression;.getColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L179d44.  call temp:= `getColumnName`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.getColumnName:()Ljava/lang/String;` @kind super;
  #L179d4a.  v0:= temp @kind object;
  #L179d4c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.stmt.query.SetExpression` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/SetExpression;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L179d60.  call temp:= `toString`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.toString:()Ljava/lang/String;` @kind super;
  #L179d66.  v0:= temp @kind object;
  #L179d68.  return v0 @kind object;
}

record `com.j256.ormlite.table.DatabaseTableConfig` @kind class @AccessFlag PUBLIC {
  `java.lang.reflect.Constructor` `com.j256.ormlite.table.DatabaseTableConfig.constructor` @AccessFlag PRIVATE;
  `java.lang.Class` `com.j256.ormlite.table.DatabaseTableConfig.dataClass` @AccessFlag PRIVATE;
  `java.util.List` `com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @AccessFlag PRIVATE;
  `com.j256.ormlite.field.FieldType`[] `com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.table.DatabaseTableConfig.tableName` @AccessFlag PRIVATE;
}
global `com.j256.ormlite.misc.JavaxPersistenceConfigurer` `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L17a368.  v0:= "javax.persistence.Entity" @kind object;
  #L17a36c.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L17a372.  v0:= "com.j256.ormlite.misc.JavaxPersistenceImpl" @kind object;
  #L17a376.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L17a37c.  v0:= temp @kind object;
  #L17a37e.  v1:= 0I;
  #L17a380.  v1:= new `java.lang.Class`[v1];
  #L17a384.  call temp:= `getConstructor`(v0, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L17a38a.  v0:= temp @kind object;
  #L17a38c.  v1:= 0I;
  #L17a38e.  v1:= new `java.lang.Object`[v1];
  #L17a392.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17a398.  v0:= temp @kind object;
  #L17a39a.  v0:= (`com.j256.ormlite.misc.JavaxPersistenceConfigurer`) v0 @kind object;
  #L17a39e.  `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` := v0 @kind object;
  #Try_end0.  
  #L17a3a2.  return @kind void;
  #L17a3a4.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L17a3a6.  v0:= 0I;
  #L17a3a8.  `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` := v0 @kind object;
  #L17a3ac.  goto L17a3a2;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L17a3a4;
}
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17a3d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17a3d6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17a3e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17a3ee.  v0.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` := v1 @kind object;
  #L17a3f2.  v0.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` := v2 @kind object;
  #L17a3f6.  v0.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` := v3 @kind object;
  #L17a3fa.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L17a40c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17a412.  v0.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` := v1 @kind object;
  #L17a416.  v0.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` := v2 @kind object;
  #L17a41a.  v0.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] := v3 @kind object;
  #L17a41e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this, `java.lang.Class` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L17a430.  call temp:= `extractTableName`(v2) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L17a436.  v0:= temp @kind object;
  #L17a438.  call `<init>`(v1, v2, v0, v3) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L17a43e.  return @kind void;
}
procedure `com.j256.ormlite.field.FieldType`[] `convertFieldConfigs`(`com.j256.ormlite.table.DatabaseTableConfig` v8 @kind this, `com.j256.ormlite.support.ConnectionSource` v9 @kind object, `java.lang.String` v10 @kind object, `java.util.List` v11 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.convertFieldConfigs:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;Ljava/util/List;)[Lcom/j256/ormlite/field/FieldType;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L17a450.  v6:= new `java.util.ArrayList`;
  #L17a454.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L17a45a.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L17a460.  v7:= temp @kind object;
  #L17a462.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L17a468.  v0:= temp;
  #L17a46a.  if v0 == 0 then goto L17a514;
  #L17a46e.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L17a474.  v4:= temp @kind object;
  #L17a476.  v4:= (`com.j256.ormlite.field.DatabaseFieldConfig`) v4 @kind object;
  #L17a47a.  v0:= 0I;
  #L17a47c.  v1:= v8.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a480.  if v1 == 0 then goto L17a4aa;
  #Try_start0.  
  #L17a484.  call temp:= `getFieldName`(v4) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFieldName:()Ljava/lang/String;` @kind virtual;
  #L17a48a.  v2:= temp @kind object;
  #L17a48c.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #Try_end0.  
  #L17a492.  v3:= temp @kind object;
  #L17a494.  if v3 == 0 then goto L17a502;
  #L17a498.  v0:= new `com.j256.ormlite.field.FieldType`;
  #L17a49c.  v5:= v8.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a4a0.  v1:= v9 @kind object;
  #L17a4a2.  v2:= v10 @kind object;
  #L17a4a4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/field/FieldType;.<init>:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;Ljava/lang/reflect/Field;Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/Class;)V` @kind direct;
  #L17a4aa.  if v0 != 0 then goto L17a50c;
  #L17a4ae.  v0:= new `java.sql.SQLException`;
  #L17a4b2.  v1:= new `java.lang.StringBuilder`;
  #L17a4b6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17a4bc.  v2:= "Could not find declared field with name '" @kind object;
  #L17a4c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a4c6.  v1:= temp @kind object;
  #L17a4c8.  call temp:= `getFieldName`(v4) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFieldName:()Ljava/lang/String;` @kind virtual;
  #L17a4ce.  v2:= temp @kind object;
  #L17a4d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a4d6.  v1:= temp @kind object;
  #L17a4d8.  v2:= "' for " @kind object;
  #L17a4dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a4e2.  v1:= temp @kind object;
  #L17a4e4.  v2:= v8.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a4e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a4ee.  v1:= temp @kind object;
  #L17a4f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17a4f6.  v1:= temp @kind object;
  #L17a4f8.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a4fe.  throw v0;
  #L17a500.  v2:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L17a502.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L17a508.  v1:= temp @kind object;
  #L17a50a.  goto L17a480;
  #L17a50c.  call temp:= `add`(v6, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L17a512.  goto L17a462;
  #L17a514.  call temp:= `isEmpty`(v6) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L17a51a.  v0:= temp;
  #L17a51c.  if v0 == 0 then goto L17a556;
  #L17a520.  v0:= new `java.sql.SQLException`;
  #L17a524.  v1:= new `java.lang.StringBuilder`;
  #L17a528.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17a52e.  v2:= "No fields were configured for class " @kind object;
  #L17a532.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a538.  v1:= temp @kind object;
  #L17a53a.  v2:= v8.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a53e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a544.  v1:= temp @kind object;
  #L17a546.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17a54c.  v1:= temp @kind object;
  #L17a54e.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a554.  throw v0;
  #L17a556.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L17a55c.  v0:= temp;
  #L17a55e.  v0:= new `com.j256.ormlite.field.FieldType`[v0];
  #L17a562.  call temp:= `toArray`(v6, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L17a568.  v0:= temp @kind object;
  #L17a56a.  v0:= (`com.j256.ormlite.field.FieldType`[]) v0 @kind object;
  #L17a56e.  return v0 @kind object;
  catch `java.lang.NoSuchFieldException` @[Try_start0..Try_end0] goto L17a500;
}
procedure `com.j256.ormlite.field.FieldType`[] `extractFieldTypes`(`com.j256.ormlite.support.ConnectionSource` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;Ljava/lang/String;)[Lcom/j256/ormlite/field/FieldType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L17a590.  v2:= new `java.util.ArrayList`;
  #L17a594.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L17a59a.  v1:= v7 @kind object;
  #L17a59c.  if v1 == 0 then goto L17a5d8;
  #L17a5a0.  call temp:= `getDeclaredFields`(v1) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L17a5a6.  v3:= temp @kind object;
  #L17a5a8.  v4:= length @variable v3;
  #L17a5aa.  v0:= 0I;
  #L17a5ac.  if v0 >= v4 then goto L17a5cc;
  #L17a5b0.  v5:= v3[v0] @kind object;
  #L17a5b4.  call temp:= `createFieldType`(v6, v8, v5, v7) @signature `Lcom/j256/ormlite/field/FieldType;.createFieldType:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;Ljava/lang/reflect/Field;Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @kind static;
  #L17a5ba.  v5:= temp @kind object;
  #L17a5bc.  if v5 == 0 then goto L17a5c6;
  #L17a5c0.  call temp:= `add`(v2, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L17a5c6.  v0:= v0 + 1;
  #L17a5ca.  goto L17a5ac;
  #L17a5cc.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L17a5d2.  v0:= temp @kind object;
  #L17a5d4.  v1:= v0 @kind object;
  #L17a5d6.  goto L17a59c;
  #L17a5d8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L17a5de.  v0:= temp;
  #L17a5e0.  if v0 == 0 then goto L17a636;
  #L17a5e4.  v0:= new `java.lang.IllegalArgumentException`;
  #L17a5e8.  v1:= new `java.lang.StringBuilder`;
  #L17a5ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17a5f2.  v2:= "No fields have a " @kind object;
  #L17a5f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a5fc.  v1:= temp @kind object;
  #L17a5fe.  v2:= constclass @type ^`com.j256.ormlite.field.DatabaseField` @kind object;
  #L17a602.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L17a608.  v2:= temp @kind object;
  #L17a60a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a610.  v1:= temp @kind object;
  #L17a612.  v2:= " annotation in " @kind object;
  #L17a616.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a61c.  v1:= temp @kind object;
  #L17a61e.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a624.  v1:= temp @kind object;
  #L17a626.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17a62c.  v1:= temp @kind object;
  #L17a62e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a634.  throw v0;
  #L17a636.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L17a63c.  v0:= temp;
  #L17a63e.  v0:= new `com.j256.ormlite.field.FieldType`[v0];
  #L17a642.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L17a648.  v0:= temp @kind object;
  #L17a64a.  v0:= (`com.j256.ormlite.field.FieldType`[]) v0 @kind object;
  #L17a64e.  return v0 @kind object;
}
procedure `java.lang.String` `extractTableName`(`java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L17a660.  v0:= constclass @type ^`com.j256.ormlite.table.DatabaseTable` @kind object;
  #L17a664.  call temp:= `getAnnotation`(v3, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L17a66a.  v0:= temp @kind object;
  #L17a66c.  v0:= (`com.j256.ormlite.table.DatabaseTable`) v0 @kind object;
  #L17a670.  v1:= 0I;
  #L17a672.  if v0 == 0 then goto L17a6cc;
  #L17a676.  call temp:= `tableName`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTable;.tableName:()Ljava/lang/String;` @kind interface;
  #L17a67c.  v2:= temp @kind object;
  #L17a67e.  if v2 == 0 then goto L17a6cc;
  #L17a682.  call temp:= `tableName`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTable;.tableName:()Ljava/lang/String;` @kind interface;
  #L17a688.  v2:= temp @kind object;
  #L17a68a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L17a690.  v2:= temp;
  #L17a692.  if v2 <= 0 then goto L17a6cc;
  #L17a696.  call temp:= `tableName`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTable;.tableName:()Ljava/lang/String;` @kind interface;
  #L17a69c.  v0:= temp @kind object;
  #L17a69e.  if v0 != 0 then goto L17a6b6;
  #L17a6a2.  v1:= `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` @kind object;
  #L17a6a6.  if v1 == 0 then goto L17a6b6;
  #L17a6aa.  v0:= `@@com.j256.ormlite.table.DatabaseTableConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` @kind object;
  #L17a6ae.  call temp:= `getEntityName`(v0, v3) @signature `Lcom/j256/ormlite/misc/JavaxPersistenceConfigurer;.getEntityName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L17a6b4.  v0:= temp @kind object;
  #L17a6b6.  if v0 != 0 then goto L17a6ca;
  #L17a6ba.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L17a6c0.  v0:= temp @kind object;
  #L17a6c2.  call temp:= `toLowerCase`(v0) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L17a6c8.  v0:= temp @kind object;
  #L17a6ca.  return v0 @kind object;
  #L17a6cc.  v0:= v1 @kind object;
  #L17a6ce.  goto L17a69e;
}
procedure `java.lang.reflect.Constructor` `findNoArgConstructor`(`java.lang.Class` v5 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.findNoArgConstructor:(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L17a6e0.  call temp:= `getDeclaredConstructors`(v5) @signature `Ljava/lang/Class;.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L17a6e6.  v0:= temp @kind object;
  #L17a6e8.  v0:= (`java.lang.reflect.Constructor`[]) v0 @kind object;
  #Try_end0.  
  #L17a6ec.  v2:= length @variable v0;
  #L17a6ee.  v1:= 0I;
  #L17a6f0.  if v1 >= v2 then goto L17a78a;
  #L17a6f4.  v3:= v0[v1] @kind object;
  #L17a6f8.  call temp:= `getParameterTypes`(v3) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L17a6fe.  v4:= temp @kind object;
  #L17a700.  v4:= length @variable v4;
  #L17a702.  if v4 != 0 then goto L17a784;
  #L17a706.  call temp:= `isAccessible`(v3) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L17a70c.  v0:= temp;
  #L17a70e.  if v0 != 0 then goto L17a71a;
  #L17a712.  v0:= 1I;
  #Try_start1.  
  #L17a714.  call `setAccessible`(v3, v0) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #Try_end1.  
  #L17a71a.  return v3 @kind object;
  #L17a71c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L17a71e.  v1:= new `java.lang.IllegalArgumentException`;
  #L17a722.  v2:= new `java.lang.StringBuilder`;
  #L17a726.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17a72c.  v3:= "Can't lookup declared constructors for " @kind object;
  #L17a730.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a736.  v2:= temp @kind object;
  #L17a738.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a73e.  v2:= temp @kind object;
  #L17a740.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17a746.  v2:= temp @kind object;
  #L17a748.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L17a74e.  throw v1;
  #L17a750.  v0:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L17a752.  v0:= new `java.lang.IllegalArgumentException`;
  #L17a756.  v1:= new `java.lang.StringBuilder`;
  #L17a75a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17a760.  v2:= "Could not open access to constructor for " @kind object;
  #L17a764.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a76a.  v1:= temp @kind object;
  #L17a76c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a772.  v1:= temp @kind object;
  #L17a774.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17a77a.  v1:= temp @kind object;
  #L17a77c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a782.  throw v0;
  #L17a784.  v1:= v1 + 1;
  #L17a788.  goto L17a6f0;
  #L17a78a.  call temp:= `getEnclosingClass`(v5) @signature `Ljava/lang/Class;.getEnclosingClass:()Ljava/lang/Class;` @kind virtual;
  #L17a790.  v0:= temp @kind object;
  #L17a792.  if v0 != 0 then goto L17a7c8;
  #L17a796.  v0:= new `java.lang.IllegalArgumentException`;
  #L17a79a.  v1:= new `java.lang.StringBuilder`;
  #L17a79e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17a7a4.  v2:= "Can't find a no-arg constructor for " @kind object;
  #L17a7a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a7ae.  v1:= temp @kind object;
  #L17a7b0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a7b6.  v1:= temp @kind object;
  #L17a7b8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17a7be.  v1:= temp @kind object;
  #L17a7c0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a7c6.  throw v0;
  #L17a7c8.  v0:= new `java.lang.IllegalArgumentException`;
  #L17a7cc.  v1:= new `java.lang.StringBuilder`;
  #L17a7d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17a7d6.  v2:= "Can't find a no-arg constructor for " @kind object;
  #L17a7da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a7e0.  v1:= temp @kind object;
  #L17a7e2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a7e8.  v1:= temp @kind object;
  #L17a7ea.  v2:= ".  Missing static on inner class?" @kind object;
  #L17a7ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a7f4.  v1:= temp @kind object;
  #L17a7f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17a7fc.  v1:= temp @kind object;
  #L17a7fe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a804.  throw v0;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L17a71c;
  catch `java.lang.SecurityException` @[Try_start1..Try_end1] goto L17a750;
}
procedure `com.j256.ormlite.table.DatabaseTableConfig` `fromClass`(`com.j256.ormlite.support.ConnectionSource` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.fromClass:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L17a834.  call temp:= `extractTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L17a83a.  v0:= temp @kind object;
  #L17a83c.  call temp:= `getDatabaseType`(v3) @signature `Lcom/j256/ormlite/support/ConnectionSource;.getDatabaseType:()Lcom/j256/ormlite/db/DatabaseType;` @kind interface;
  #L17a842.  v1:= temp @kind object;
  #L17a844.  call temp:= `isEntityNamesMustBeUpCase`(v1) @signature `Lcom/j256/ormlite/db/DatabaseType;.isEntityNamesMustBeUpCase:()Z` @kind interface;
  #L17a84a.  v2:= temp;
  #L17a84c.  if v2 == 0 then goto L17a858;
  #L17a850.  call temp:= `upCaseEntityName`(v1, v0) @signature `Lcom/j256/ormlite/db/DatabaseType;.upCaseEntityName:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L17a856.  v0:= temp @kind object;
  #L17a858.  v1:= new `com.j256.ormlite.table.DatabaseTableConfig`;
  #L17a85c.  call temp:= `extractFieldTypes`(v3, v4, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;Ljava/lang/String;)[Lcom/j256/ormlite/field/FieldType;` @kind static;
  #L17a862.  v2:= temp @kind object;
  #L17a864.  call `<init>`(v1, v4, v0, v2) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L17a86a.  return v1 @kind object;
}
procedure `void` `extractFieldTypes`(`com.j256.ormlite.table.DatabaseTableConfig` v2 @kind this, `com.j256.ormlite.support.ConnectionSource` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17a87c.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L17a880.  if v0 != 0 then goto L17a8a0;
  #L17a884.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` @kind object;
  #L17a888.  if v0 != 0 then goto L17a8a2;
  #L17a88c.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a890.  v1:= v2.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` @kind object;
  #L17a894.  call temp:= `extractFieldTypes`(v3, v0, v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractFieldTypes:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;Ljava/lang/String;)[Lcom/j256/ormlite/field/FieldType;` @kind static;
  #L17a89a.  v0:= temp @kind object;
  #L17a89c.  v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] := v0 @kind object;
  #L17a8a0.  return @kind void;
  #L17a8a2.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` @kind object;
  #L17a8a6.  v1:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` @kind object;
  #L17a8aa.  call temp:= `convertFieldConfigs`(v2, v3, v0, v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.convertFieldConfigs:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/String;Ljava/util/List;)[Lcom/j256/ormlite/field/FieldType;` @kind direct;
  #L17a8b0.  v0:= temp @kind object;
  #L17a8b2.  v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] := v0 @kind object;
  #L17a8b6.  goto L17a8a0;
}
procedure `java.lang.reflect.Constructor` `getConstructor`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getConstructor:()Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a8c8.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.constructor` @type ^`java.lang.reflect.Constructor` @kind object;
  #L17a8cc.  if v0 != 0 then goto L17a8e0;
  #L17a8d0.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a8d4.  call temp:= `findNoArgConstructor`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.findNoArgConstructor:(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind static;
  #L17a8da.  v0:= temp @kind object;
  #L17a8dc.  v1.`com.j256.ormlite.table.DatabaseTableConfig.constructor` @type ^`java.lang.reflect.Constructor` := v0 @kind object;
  #L17a8e0.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.constructor` @type ^`java.lang.reflect.Constructor` @kind object;
  #L17a8e4.  return v0 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a8f8.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a8fc.  return v0 @kind object;
}
procedure `java.util.List` `getFieldConfigs`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldConfigs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a910.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` @kind object;
  #L17a914.  return v0 @kind object;
}
procedure `com.j256.ormlite.field.FieldType`[] `getFieldTypes`(`com.j256.ormlite.table.DatabaseTableConfig` v2 @kind this, `com.j256.ormlite.db.DatabaseType` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldTypes:(Lcom/j256/ormlite/db/DatabaseType;)[Lcom/j256/ormlite/field/FieldType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17a928.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L17a92c.  if v0 != 0 then goto L17a940;
  #L17a930.  v0:= new `java.sql.SQLException`;
  #L17a934.  v1:= "Field types have not been extracted in table config" @kind object;
  #L17a938.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a93e.  throw v0;
  #L17a940.  v0:= v2.`com.j256.ormlite.table.DatabaseTableConfig.fieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L17a944.  return v0 @kind object;
}
procedure `java.lang.String` `getTableName`(`com.j256.ormlite.table.DatabaseTableConfig` v1 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a958.  v0:= v1.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` @kind object;
  #L17a95c.  return v0 @kind object;
}
procedure `void` `initialize`(`com.j256.ormlite.table.DatabaseTableConfig` v3 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.initialize:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L17a970.  v0:= v3.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a974.  if v0 != 0 then goto L17a9ba;
  #L17a978.  v0:= new `java.lang.IllegalStateException`;
  #L17a97c.  v1:= new `java.lang.StringBuilder`;
  #L17a980.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17a986.  v2:= "dataClass was never set on " @kind object;
  #L17a98a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a990.  v1:= temp @kind object;
  #L17a992.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L17a998.  v2:= temp @kind object;
  #L17a99a.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L17a9a0.  v2:= temp @kind object;
  #L17a9a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17a9a8.  v1:= temp @kind object;
  #L17a9aa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17a9b0.  v1:= temp @kind object;
  #L17a9b2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a9b8.  throw v0;
  #L17a9ba.  v0:= v3.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` @kind object;
  #L17a9be.  if v0 != 0 then goto L17a9d2;
  #L17a9c2.  v0:= v3.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` @kind object;
  #L17a9c6.  call temp:= `extractTableName`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.extractTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L17a9cc.  v0:= temp @kind object;
  #L17a9ce.  v3.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` := v0 @kind object;
  #L17a9d2.  return @kind void;
}
procedure `void` `setConstructor`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.reflect.Constructor` v1 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setConstructor:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC {
    temp;

  #L17a9e4.  v0.`com.j256.ormlite.table.DatabaseTableConfig.constructor` @type ^`java.lang.reflect.Constructor` := v1 @kind object;
  #L17a9e8.  return @kind void;
}
procedure `void` `setDataClass`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setDataClass:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L17a9fc.  v0.`com.j256.ormlite.table.DatabaseTableConfig.dataClass` @type ^`java.lang.Class` := v1 @kind object;
  #L17aa00.  return @kind void;
}
procedure `void` `setFieldConfigs`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setFieldConfigs:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L17aa14.  v0.`com.j256.ormlite.table.DatabaseTableConfig.fieldConfigs` @type ^`java.util.List` := v1 @kind object;
  #L17aa18.  return @kind void;
}
procedure `void` `setTableName`(`com.j256.ormlite.table.DatabaseTableConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setTableName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L17aa2c.  v0.`com.j256.ormlite.table.DatabaseTableConfig.tableName` @type ^`java.lang.String` := v1 @kind object;
  #L17aa30.  return @kind void;
}

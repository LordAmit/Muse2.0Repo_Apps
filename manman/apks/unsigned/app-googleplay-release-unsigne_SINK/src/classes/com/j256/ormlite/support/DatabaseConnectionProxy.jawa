record `com.j256.ormlite.support.DatabaseConnectionProxy` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.DatabaseConnection` @kind interface {
  `com.j256.ormlite.support.DatabaseConnection` `com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.support.DatabaseConnectionProxy` v0 @kind this, `com.j256.ormlite.support.DatabaseConnection` v1 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.<init>:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L179f5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L179f62.  v0.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L179f66.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L179f78.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L179f7c.  if v0 == 0 then goto L179f8a;
  #L179f80.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L179f84.  call `close`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.close:()V` @kind interface;
  #L179f8a.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L179f9c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L179fa0.  if v0 == 0 then goto L179fae;
  #L179fa4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L179fa8.  call `closeQuietly`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.closeQuietly:()V` @kind interface;
  #L179fae.  return @kind void;
}
procedure `void` `commit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.sql.Savepoint` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.commit:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L179fc0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L179fc4.  if v0 == 0 then goto L179fd2;
  #L179fc8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L179fcc.  call `commit`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.commit:(Ljava/sql/Savepoint;)V` @kind interface;
  #L179fd2.  return @kind void;
}
procedure `com.j256.ormlite.support.CompiledStatement` `compileStatement`(`com.j256.ormlite.support.DatabaseConnectionProxy` v6 @kind this, `java.lang.String` v7 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v8 @kind object, `com.j256.ormlite.field.FieldType`[] v9 @kind object, `int` v10 , `boolean` v11 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L179fe4.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L179fe8.  if v0 != 0 then goto L179ff0;
  #L179fec.  v0:= 0I;
  #L179fee.  return v0 @kind object;
  #L179ff0.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L179ff4.  v1:= v7 @kind object;
  #L179ff6.  v2:= v8 @kind object;
  #L179ff8.  v3:= v9 @kind object;
  #L179ffa.  v4:= v10;
  #L179ffc.  v5:= v11;
  #L179ffe.  call temp:= `compileStatement`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @kind interface;
  #L17a004.  v0:= temp @kind object;
  #L17a006.  goto L179fee;
}
procedure `int` `delete`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a018.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a01c.  if v0 != 0 then goto L17a024;
  #L17a020.  v0:= 0I;
  #L17a022.  return v0;
  #L17a024.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a028.  call temp:= `delete`(v0, v2, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L17a02e.  v0:= temp;
  #L17a030.  goto L17a022;
}
procedure `int` `executeStatement`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.executeStatement:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a044.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a048.  if v0 != 0 then goto L17a050;
  #L17a04c.  v0:= 0I;
  #L17a04e.  return v0;
  #L17a050.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a054.  call temp:= `executeStatement`(v0, v2, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.executeStatement:(Ljava/lang/String;I)I` @kind interface;
  #L17a05a.  v0:= temp;
  #L17a05c.  goto L17a04e;
}
procedure `int` `insert`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object, `com.j256.ormlite.support.GeneratedKeyHolder` v5 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a070.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a074.  if v0 != 0 then goto L17a07c;
  #L17a078.  v0:= 0I;
  #L17a07a.  return v0;
  #L17a07c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a080.  call temp:= `insert`(v0, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @kind interface;
  #L17a086.  v0:= temp;
  #L17a088.  goto L17a07a;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isAutoCommit:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a09c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a0a0.  if v0 != 0 then goto L17a0a8;
  #L17a0a4.  v0:= 0I;
  #L17a0a6.  return v0;
  #L17a0a8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a0ac.  call temp:= `isAutoCommit`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommit:()Z` @kind interface;
  #L17a0b2.  v0:= temp;
  #L17a0b4.  goto L17a0a6;
}
procedure `boolean` `isAutoCommitSupported`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isAutoCommitSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a0c8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a0cc.  if v0 != 0 then goto L17a0d4;
  #L17a0d0.  v0:= 0I;
  #L17a0d2.  return v0;
  #L17a0d4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a0d8.  call temp:= `isAutoCommitSupported`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommitSupported:()Z` @kind interface;
  #L17a0de.  v0:= temp;
  #L17a0e0.  goto L17a0d2;
}
procedure `boolean` `isClosed`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a0f4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a0f8.  if v0 != 0 then goto L17a100;
  #L17a0fc.  v0:= 1I;
  #L17a0fe.  return v0;
  #L17a100.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a104.  call temp:= `isClosed`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isClosed:()Z` @kind interface;
  #L17a10a.  v0:= temp;
  #L17a10c.  goto L17a0fe;
}
procedure `boolean` `isTableExists`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isTableExists:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a120.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a124.  if v0 != 0 then goto L17a12c;
  #L17a128.  v0:= 0I;
  #L17a12a.  return v0;
  #L17a12c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a130.  call temp:= `isTableExists`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isTableExists:(Ljava/lang/String;)Z` @kind interface;
  #L17a136.  v0:= temp;
  #L17a138.  goto L17a12a;
}
procedure `long` `queryForLong`(`com.j256.ormlite.support.DatabaseConnectionProxy` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForLong:(Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17a14c.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a150.  if v0 != 0 then goto L17a15a;
  #L17a154.  v0:= 0L;
  #L17a158.  return v0 @kind wide;
  #L17a15a.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a15e.  call temp:= `queryForLong`(v0, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;)J` @kind interface;
  #L17a164.  v0:= temp @kind wide;
  #L17a166.  goto L17a158;
}
procedure `long` `queryForLong`(`com.j256.ormlite.support.DatabaseConnectionProxy` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object`[] v4 @kind object, `com.j256.ormlite.field.FieldType`[] v5 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17a178.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a17c.  if v0 != 0 then goto L17a186;
  #L17a180.  v0:= 0L;
  #L17a184.  return v0 @kind wide;
  #L17a186.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a18a.  call temp:= `queryForLong`(v0, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @kind interface;
  #L17a190.  v0:= temp @kind wide;
  #L17a192.  goto L17a184;
}
procedure `java.lang.Object` `queryForOne`(`com.j256.ormlite.support.DatabaseConnectionProxy` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object, `com.j256.ormlite.field.FieldType`[] v9 @kind object, `com.j256.ormlite.stmt.GenericRowMapper` v10 @kind object, `com.j256.ormlite.dao.ObjectCache` v11 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L17a1a4.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a1a8.  if v0 != 0 then goto L17a1b0;
  #L17a1ac.  v0:= 0I;
  #L17a1ae.  return v0 @kind object;
  #L17a1b0.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a1b4.  v1:= v7 @kind object;
  #L17a1b6.  v2:= v8 @kind object;
  #L17a1b8.  v3:= v9 @kind object;
  #L17a1ba.  v4:= v10 @kind object;
  #L17a1bc.  v5:= v11 @kind object;
  #L17a1be.  call temp:= `queryForOne`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @kind interface;
  #L17a1c4.  v0:= temp @kind object;
  #L17a1c6.  goto L17a1ae;
}
procedure `void` `rollback`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.sql.Savepoint` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.rollback:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a1d8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a1dc.  if v0 == 0 then goto L17a1ea;
  #L17a1e0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a1e4.  call `rollback`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.rollback:(Ljava/sql/Savepoint;)V` @kind interface;
  #L17a1ea.  return @kind void;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `boolean` v2 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.setAutoCommit:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a1fc.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a200.  if v0 == 0 then goto L17a20e;
  #L17a204.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a208.  call `setAutoCommit`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setAutoCommit:(Z)V` @kind interface;
  #L17a20e.  return @kind void;
}
procedure `java.sql.Savepoint` `setSavePoint`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a220.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a224.  if v0 != 0 then goto L17a22c;
  #L17a228.  v0:= 0I;
  #L17a22a.  return v0 @kind object;
  #L17a22c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a230.  call temp:= `setSavePoint`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @kind interface;
  #L17a236.  v0:= temp @kind object;
  #L17a238.  goto L17a22a;
}
procedure `int` `update`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17a24c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a250.  if v0 != 0 then goto L17a258;
  #L17a254.  v0:= 0I;
  #L17a256.  return v0;
  #L17a258.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L17a25c.  call temp:= `update`(v0, v2, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L17a262.  v0:= temp;
  #L17a264.  goto L17a256;
}

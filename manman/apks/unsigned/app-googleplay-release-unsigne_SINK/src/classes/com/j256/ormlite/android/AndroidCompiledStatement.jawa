record `com.j256.ormlite.android.AndroidCompiledStatement` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.CompiledStatement` @kind interface {
  `java.util.List` `com.j256.ormlite.android.AndroidCompiledStatement.args` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` `com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @AccessFlag PRIVATE;
  `android.database.Cursor` `com.j256.ormlite.android.AndroidCompiledStatement.cursor` @AccessFlag PRIVATE;
  `android.database.sqlite.SQLiteDatabase` `com.j256.ormlite.android.AndroidCompiledStatement.db` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `com.j256.ormlite.android.AndroidCompiledStatement.max` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.android.AndroidCompiledStatement.sql` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.StatementBuilder$StatementType` `com.j256.ormlite.android.AndroidCompiledStatement.type` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.android.compat.ApiCompatibility` `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15ab3c.  v0:= constclass @type ^`com.j256.ormlite.android.AndroidCompiledStatement` @kind object;
  #L15ab40.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L15ab46.  v0:= temp @kind object;
  #L15ab48.  `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L15ab4c.  v0:= 0I;
  #L15ab4e.  v0:= new `java.lang.String`[v0];
  #L15ab52.  `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] := v0 @kind object;
  #L15ab56.  call temp:= `getCompatibility`() @signature `Lcom/j256/ormlite/android/compat/ApiCompatibilityUtils;.getCompatibility:()Lcom/j256/ormlite/android/compat/ApiCompatibility;` @kind static;
  #L15ab5c.  v0:= temp @kind object;
  #L15ab5e.  `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` := v0 @kind object;
  #L15ab62.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidCompiledStatement` v0 @kind this, `java.lang.String` v1 @kind object, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.<init>:(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15ab74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15ab7a.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` := v1 @kind object;
  #L15ab7e.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` := v2 @kind object;
  #L15ab82.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` := v3 @kind object;
  #L15ab86.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @type ^`boolean` := v4 @kind boolean;
  #L15ab8a.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @type ^`boolean` := v5 @kind boolean;
  #L15ab8e.  return @kind void;
}
procedure `int` `execSql`(`android.database.sqlite.SQLiteDatabase` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L15aba0.  call `execSQL`(v5, v7, v8) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L15aba6.  v0:= 0I;
  #Try_start1.  
  #L15aba8.  v1:= "SELECT CHANGES()" @kind object;
  #L15abac.  call temp:= `compileStatement`(v5, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #Try_end1.  
  #L15abb2.  v1:= temp @kind object;
  #Try_start2.  
  #L15abb4.  call temp:= `simpleQueryForLong`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.simpleQueryForLong:()J` @kind virtual;
  #Try_end2.  
  #L15abba.  v2:= temp @kind wide;
  #L15abbc.  v0:= (`int`) v2 @kind l2i;
  #L15abbe.  if v1 == 0 then goto L15abc8;
  #L15abc2.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L15abc8.  v1:= `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15abcc.  v2:= "executing statement {} changed {} rows: {}" @kind object;
  #L15abd0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15abd6.  v3:= temp @kind object;
  #L15abd8.  call `trace`(v1, v2, v6, v3, v7) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L15abde.  return v0;
  #L15abe0.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L15abe2.  v1:= new `java.lang.StringBuilder`;
  #L15abe6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15abec.  v2:= "Problems executing " @kind object;
  #L15abf0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15abf6.  v1:= temp @kind object;
  #L15abf8.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15abfe.  v1:= temp @kind object;
  #L15ac00.  v2:= " Android statement: " @kind object;
  #L15ac04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ac0a.  v1:= temp @kind object;
  #L15ac0c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15ac12.  v1:= temp @kind object;
  #L15ac14.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15ac1a.  v1:= temp @kind object;
  #L15ac1c.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15ac22.  v0:= temp @kind object;
  #L15ac24.  throw v0;
  #L15ac26.  v1:= Exception @type ^`android.database.SQLException` @kind object;
  #L15ac28.  v1:= v0 @kind object;
  #L15ac2a.  v0:= 1I;
  #L15ac2c.  if v1 == 0 then goto L15abc8;
  #L15ac30.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L15ac36.  goto L15abc8;
  #L15ac38.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15ac3a.  v4:= v1 @kind object;
  #L15ac3c.  v1:= v0 @kind object;
  #L15ac3e.  v0:= v4 @kind object;
  #L15ac40.  if v1 == 0 then goto L15ac4a;
  #L15ac44.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L15ac4a.  throw v0;
  #L15ac4c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15ac4e.  goto L15ac40;
  #L15ac50.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L15ac52.  goto L15ac2a;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L15abe0;
  catch `android.database.SQLException` @[Try_start1..Try_end1] goto L15ac26;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L15ac38;
  catch `android.database.SQLException` @[Try_start2..Try_end2] goto L15ac50;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L15ac4c;
}
procedure `java.lang.Object`[] `getArgArray`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L15ac8c.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15ac90.  if v0 != 0 then goto L15ac9a;
  #L15ac94.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] @kind object;
  #L15ac98.  return v0 @kind object;
  #L15ac9a.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15ac9e.  v1:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15aca2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15aca8.  v1:= temp;
  #L15acaa.  v1:= new `java.lang.Object`[v1];
  #L15acae.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L15acb4.  v0:= temp @kind object;
  #L15acb6.  goto L15ac98;
}
procedure `java.lang.String`[] `getStringArray`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getStringArray:()[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L15acc8.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15accc.  if v0 != 0 then goto L15acd6;
  #L15acd0.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] @kind object;
  #L15acd4.  return v0 @kind object;
  #L15acd6.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15acda.  v1:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15acde.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15ace4.  v1:= temp;
  #L15ace6.  v1:= new `java.lang.String`[v1];
  #L15acea.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L15acf0.  v0:= temp @kind object;
  #L15acf2.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L15acf6.  goto L15acd4;
}
procedure `void` `isInPrep`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L15ad08.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ad0c.  if v0 == 0 then goto L15ad20;
  #L15ad10.  v0:= new `java.sql.SQLException`;
  #L15ad14.  v1:= "Query already run. Cannot add argument values." @kind object;
  #L15ad18.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15ad1e.  throw v0;
  #L15ad20.  return @kind void;
}
procedure `void` `cancel`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ad34.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L15ad38.  if v0 == 0 then goto L15ad46;
  #L15ad3c.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L15ad40.  call `cancel`(v0) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;.cancel:()V` @kind interface;
  #L15ad46.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15ad58.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ad5c.  if v0 == 0 then goto L15ad7a;
  #L15ad60.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ad64.  call temp:= `isClosed`(v0) @signature `Landroid/database/Cursor;.isClosed:()Z` @kind interface;
  #L15ad6a.  v0:= temp;
  #L15ad6c.  if v0 != 0 then goto L15ad7a;
  #Try_start0.  
  #L15ad70.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ad74.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #Try_end0.  
  #L15ad7a.  v0:= 0I;
  #L15ad7c.  v3.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` := v0 @kind object;
  #L15ad80.  return @kind void;
  #L15ad82.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L15ad84.  v1:= new `java.io.IOException`;
  #L15ad88.  v2:= "Problems closing Android cursor" @kind object;
  #L15ad8c.  call `<init>`(v1, v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15ad92.  throw v1;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L15ad82;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15adb4.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15adb8.  if v0 == 0 then goto L15adc6;
  #L15adbc.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15adc0.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L15adc6.  return @kind void;
}
procedure `int` `getColumnCount`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getColumnCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15add8.  call temp:= `getCursor`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L15adde.  v0:= temp @kind object;
  #L15ade0.  call temp:= `getColumnCount`(v0) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L15ade6.  v0:= temp;
  #L15ade8.  return v0;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getColumnName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15adfc.  call temp:= `getCursor`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L15ae02.  v0:= temp @kind object;
  #L15ae04.  call temp:= `getColumnName`(v0, v2) @signature `Landroid/database/Cursor;.getColumnName:(I)Ljava/lang/String;` @kind interface;
  #L15ae0a.  v0:= temp @kind object;
  #L15ae0c.  return v0 @kind object;
}
procedure `android.database.Cursor` `getCursor`(`com.j256.ormlite.android.AndroidCompiledStatement` v5 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15ae20.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ae24.  if v0 != 0 then goto L15ae86;
  #L15ae28.  v1:= 0I;
  #Try_start0.  
  #L15ae2a.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L15ae2e.  if v0 != 0 then goto L15ae8c;
  #L15ae32.  v1:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L15ae36.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L15ae3a.  if v0 == 0 then goto L15ae4e;
  #L15ae3e.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` @kind object;
  #L15ae42.  call temp:= `createCancellationHook`(v0) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility;.createCancellationHook:()Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;` @kind interface;
  #L15ae48.  v0:= temp @kind object;
  #L15ae4a.  v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` := v0 @kind object;
  #L15ae4e.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` @kind object;
  #L15ae52.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L15ae56.  call temp:= `getStringArray`(v5) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getStringArray:()[Ljava/lang/String;` @kind direct;
  #L15ae5c.  v3:= temp @kind object;
  #L15ae5e.  v4:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L15ae62.  call temp:= `rawQuery`(v0, v2, v1, v3, v4) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility;.rawQuery:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;)Landroid/database/Cursor;` @kind interface;
  #L15ae68.  v0:= temp @kind object;
  #L15ae6a.  v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` := v0 @kind object;
  #L15ae6e.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ae72.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L15ae78.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L15ae7c.  v2:= "{}: started rawQuery cursor for: {}" @kind object;
  #L15ae80.  call `trace`(v0, v2, v5, v1) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L15ae86.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L15ae8a.  return v0 @kind object;
  #Try_start1.  
  #L15ae8c.  v0:= new `java.lang.StringBuilder`;
  #L15ae90.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15ae96.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L15ae9a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15aea0.  v0:= temp @kind object;
  #L15aea2.  v2:= " LIMIT " @kind object;
  #L15aea6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15aeac.  v0:= temp @kind object;
  #L15aeae.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L15aeb2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15aeb8.  v0:= temp @kind object;
  #L15aeba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #Try_end1.  
  #L15aec0.  v1:= temp @kind object;
  #L15aec2.  goto L15ae36;
  #L15aec4.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L15aec6.  v2:= new `java.lang.StringBuilder`;
  #L15aeca.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15aed0.  v3:= "Problems executing Android query: " @kind object;
  #L15aed4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15aeda.  v2:= temp @kind object;
  #L15aedc.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15aee2.  v1:= temp @kind object;
  #L15aee4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15aeea.  v1:= temp @kind object;
  #L15aeec.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15aef2.  v0:= temp @kind object;
  #L15aef4.  throw v0;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L15aec4;
  catch `android.database.SQLException` @[Try_start1..Try_end1] goto L15aec4;
}
procedure `int` `runExecute`(`com.j256.ormlite.android.AndroidCompiledStatement` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runExecute:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15af20.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L15af24.  call temp:= `isOkForExecute`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForExecute:()Z` @kind virtual;
  #L15af2a.  v0:= temp;
  #L15af2c.  if v0 != 0 then goto L15af72;
  #L15af30.  v0:= new `java.lang.IllegalArgumentException`;
  #L15af34.  v1:= new `java.lang.StringBuilder`;
  #L15af38.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15af3e.  v2:= "Cannot call execute on a " @kind object;
  #L15af42.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15af48.  v1:= temp @kind object;
  #L15af4a.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L15af4e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15af54.  v1:= temp @kind object;
  #L15af56.  v2:= " statement" @kind object;
  #L15af5a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15af60.  v1:= temp @kind object;
  #L15af62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15af68.  v1:= temp @kind object;
  #L15af6a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15af70.  throw v0;
  #L15af72.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L15af76.  v1:= "runExecute" @kind object;
  #L15af7a.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L15af7e.  call temp:= `getArgArray`(v4) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @kind direct;
  #L15af84.  v3:= temp @kind object;
  #L15af86.  call temp:= `execSql`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @kind static;
  #L15af8c.  v0:= temp;
  #L15af8e.  return v0;
}
procedure `com.j256.ormlite.support.DatabaseResults` `runQuery`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runQuery:(Lcom/j256/ormlite/dao/ObjectCache;)Lcom/j256/ormlite/support/DatabaseResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15afa0.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L15afa4.  call temp:= `isOkForQuery`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForQuery:()Z` @kind virtual;
  #L15afaa.  v0:= temp;
  #L15afac.  if v0 != 0 then goto L15aff2;
  #L15afb0.  v0:= new `java.lang.IllegalArgumentException`;
  #L15afb4.  v1:= new `java.lang.StringBuilder`;
  #L15afb8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15afbe.  v2:= "Cannot call query on a " @kind object;
  #L15afc2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15afc8.  v1:= temp @kind object;
  #L15afca.  v2:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L15afce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15afd4.  v1:= temp @kind object;
  #L15afd6.  v2:= " statement" @kind object;
  #L15afda.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15afe0.  v1:= temp @kind object;
  #L15afe2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15afe8.  v1:= temp @kind object;
  #L15afea.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15aff0.  throw v0;
  #L15aff2.  v0:= new `com.j256.ormlite.android.AndroidDatabaseResults`;
  #L15aff6.  call temp:= `getCursor`(v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L15affc.  v1:= temp @kind object;
  #L15affe.  v2:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @type ^`boolean` @kind boolean;
  #L15b002.  call `<init>`(v0, v1, v4, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.<init>:(Landroid/database/Cursor;Lcom/j256/ormlite/dao/ObjectCache;Z)V` @kind direct;
  #L15b008.  return v0 @kind object;
}
procedure `int` `runUpdate`(`com.j256.ormlite.android.AndroidCompiledStatement` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runUpdate:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15b01c.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L15b020.  call temp:= `isOkForUpdate`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForUpdate:()Z` @kind virtual;
  #L15b026.  v0:= temp;
  #L15b028.  if v0 != 0 then goto L15b06e;
  #L15b02c.  v0:= new `java.lang.IllegalArgumentException`;
  #L15b030.  v1:= new `java.lang.StringBuilder`;
  #L15b034.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b03a.  v2:= "Cannot call update on a " @kind object;
  #L15b03e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b044.  v1:= temp @kind object;
  #L15b046.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L15b04a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b050.  v1:= temp @kind object;
  #L15b052.  v2:= " statement" @kind object;
  #L15b056.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b05c.  v1:= temp @kind object;
  #L15b05e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b064.  v1:= temp @kind object;
  #L15b066.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b06c.  throw v0;
  #L15b06e.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L15b072.  if v0 != 0 then goto L15b094;
  #L15b076.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L15b07a.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L15b07e.  v2:= "runUpdate" @kind object;
  #L15b082.  call temp:= `getArgArray`(v4) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @kind direct;
  #L15b088.  v3:= temp @kind object;
  #L15b08a.  call temp:= `execSql`(v1, v2, v0, v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @kind static;
  #L15b090.  v0:= temp;
  #L15b092.  return v0;
  #L15b094.  v0:= new `java.lang.StringBuilder`;
  #L15b098.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b09e.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L15b0a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b0a8.  v0:= temp @kind object;
  #L15b0aa.  v1:= " " @kind object;
  #L15b0ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b0b4.  v0:= temp @kind object;
  #L15b0b6.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L15b0ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b0c0.  v0:= temp @kind object;
  #L15b0c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b0c8.  v0:= temp @kind object;
  #L15b0ca.  goto L15b07a;
}
procedure `void` `setMaxRows`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setMaxRows:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b0dc.  call `isInPrep`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @kind direct;
  #L15b0e2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15b0e8.  v0:= temp @kind object;
  #L15b0ea.  v1.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` := v0 @kind object;
  #L15b0ee.  return @kind void;
}
procedure `void` `setObject`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object, `com.j256.ormlite.field.SqlType` v6 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setObject:(ILjava/lang/Object;Lcom/j256/ormlite/field/SqlType;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15b100.  call `isInPrep`(v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @kind direct;
  #L15b106.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15b10a.  if v0 != 0 then goto L15b11c;
  #L15b10e.  v0:= new `java.util.ArrayList`;
  #L15b112.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L15b118.  v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` := v0 @kind object;
  #L15b11c.  if v5 != 0 then goto L15b12e;
  #L15b120.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15b124.  v1:= 0I;
  #L15b126.  call `add`(v0, v4, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L15b12c.  return @kind void;
  #L15b12e.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement$1.$SwitchMap$com$j256$ormlite$field$SqlType` @type ^`int`[] @kind object;
  #L15b132.  call temp:= `ordinal`(v6) @signature `Lcom/j256/ormlite/field/SqlType;.ordinal:()I` @kind virtual;
  #L15b138.  v1:= temp;
  #L15b13a.  v0:= v0[v1];
  #L15b13e.  goto L15b1c8;
  #L15b144.  v0:= new `java.sql.SQLException`;
  #L15b148.  v1:= new `java.lang.StringBuilder`;
  #L15b14c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b152.  v2:= "Unknown sql argument type: " @kind object;
  #L15b156.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b15c.  v1:= temp @kind object;
  #L15b15e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b164.  v1:= temp @kind object;
  #L15b166.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b16c.  v1:= temp @kind object;
  #L15b16e.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b174.  throw v0;
  #L15b176.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15b17a.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b180.  v1:= temp @kind object;
  #L15b182.  call `add`(v0, v4, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L15b188.  goto L15b12c;
  #L15b18a.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L15b18e.  call `add`(v0, v4, v5) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L15b194.  goto L15b12c;
  #L15b196.  v0:= new `java.sql.SQLException`;
  #L15b19a.  v1:= new `java.lang.StringBuilder`;
  #L15b19e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b1a4.  v2:= "Invalid Android type: " @kind object;
  #L15b1a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b1ae.  v1:= temp @kind object;
  #L15b1b0.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b1b6.  v1:= temp @kind object;
  #L15b1b8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b1be.  v1:= temp @kind object;
  #L15b1c0.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b1c6.  throw v0;
  #L15b1c8.  switch v0
                  | 1 => goto L15b176
                  | 2 => goto L15b176
                  | 3 => goto L15b176
                  | 4 => goto L15b176
                  | 5 => goto L15b176
                  | 6 => goto L15b176
                  | 7 => goto L15b176
                  | 8 => goto L15b176
                  | 9 => goto L15b176
                  | 10 => goto L15b176
                  | 11 => goto L15b176
                  | 12 => goto L15b18a
                  | 13 => goto L15b18a
                  | 14 => goto L15b196
                  | 15 => goto L15b196
                  | else => goto L15b144;
}
procedure `void` `setQueryTimeout`(`com.j256.ormlite.android.AndroidCompiledStatement` v0 @kind this, `long` v1 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setQueryTimeout:(J)V` @AccessFlag PUBLIC {
    temp;

  #L15b21c.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b230.  v0:= new `java.lang.StringBuilder`;
  #L15b234.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b23a.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L15b240.  v1:= temp @kind object;
  #L15b242.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L15b248.  v1:= temp @kind object;
  #L15b24a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b250.  v0:= temp @kind object;
  #L15b252.  v1:= "@" @kind object;
  #L15b256.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b25c.  v0:= temp @kind object;
  #L15b25e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L15b264.  v1:= temp;
  #L15b266.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L15b26c.  v1:= temp @kind object;
  #L15b26e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b274.  v0:= temp @kind object;
  #L15b276.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b27c.  v0:= temp @kind object;
  #L15b27e.  return v0 @kind object;
}

record `com.j256.ormlite.field.types.DateLongType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDateType` @kind class {
}
global `com.j256.ormlite.field.types.DateLongType` `@@com.j256.ormlite.field.types.DateLongType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/DateLongType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L16d340.  v0:= new `com.j256.ormlite.field.types.DateLongType`;
  #L16d344.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/DateLongType;.<init>:()V` @kind direct;
  #L16d34a.  `@@com.j256.ormlite.field.types.DateLongType.singleTon` @type ^`com.j256.ormlite.field.types.DateLongType` := v0 @kind object;
  #L16d34e.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.DateLongType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/DateLongType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L16d360.  v0:= `@@com.j256.ormlite.field.SqlType.LONG` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L16d364.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/field/types/BaseDateType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L16d36a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.DateLongType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/DateLongType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L16d37c.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDateType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16d382.  return @kind void;
}
procedure `com.j256.ormlite.field.types.DateLongType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/DateLongType;.getSingleton:()Lcom/j256/ormlite/field/types/DateLongType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16d394.  v0:= `@@com.j256.ormlite.field.types.DateLongType.singleTon` @type ^`com.j256.ormlite.field.types.DateLongType` @kind object;
  #L16d398.  return v0 @kind object;
}
procedure `java.lang.Class` `getPrimaryClass`(`com.j256.ormlite.field.types.DateLongType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/DateLongType;.getPrimaryClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16d3ac.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L16d3b0.  return v0 @kind object;
}
procedure `boolean` `isEscapedValue`(`com.j256.ormlite.field.types.DateLongType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/DateLongType;.isEscapedValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16d3c4.  v0:= 0I;
  #L16d3c6.  return v0;
}
procedure `java.lang.Object` `javaToSqlArg`(`com.j256.ormlite.field.types.DateLongType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/field/types/DateLongType;.javaToSqlArg:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16d3d8.  v4:= (`java.util.Date`) v4 @kind object;
  #L16d3dc.  call temp:= `getTime`(v4) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L16d3e2.  v0:= temp @kind wide;
  #L16d3e4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L16d3ea.  v0:= temp @kind object;
  #L16d3ec.  return v0 @kind object;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.DateLongType` v3 @kind this, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/field/types/DateLongType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16d400.  call temp:= `parseLong`(v5) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L16d406.  v0:= temp @kind wide;
  #L16d408.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #Try_end0.  
  #L16d40e.  v0:= temp @kind object;
  #L16d410.  return v0 @kind object;
  #L16d412.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L16d414.  v1:= new `java.lang.StringBuilder`;
  #L16d418.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16d41e.  v2:= "Problems with field " @kind object;
  #L16d422.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d428.  v1:= temp @kind object;
  #L16d42a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d430.  v1:= temp @kind object;
  #L16d432.  v2:= " parsing default date-long value: " @kind object;
  #L16d436.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d43c.  v1:= temp @kind object;
  #L16d43e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d444.  v1:= temp @kind object;
  #L16d446.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16d44c.  v1:= temp @kind object;
  #L16d44e.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16d454.  v0:= temp @kind object;
  #L16d456.  throw v0;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L16d412;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.DateLongType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `com.j256.ormlite.support.DatabaseResults` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/field/types/DateLongType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16d478.  call temp:= `getLong`(v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getLong:(I)J` @kind interface;
  #L16d47e.  v0:= temp @kind wide;
  #L16d480.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L16d486.  v0:= temp @kind object;
  #L16d488.  return v0 @kind object;
}
procedure `java.lang.Object` `sqlArgToJava`(`com.j256.ormlite.field.types.DateLongType` v4 @kind this, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.Object` v6 @kind object, `int` v7 ) @signature `Lcom/j256/ormlite/field/types/DateLongType;.sqlArgToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16d49c.  v0:= new `java.util.Date`;
  #L16d4a0.  v6:= (`java.lang.Long`) v6 @kind object;
  #L16d4a4.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L16d4aa.  v2:= temp @kind wide;
  #L16d4ac.  call `<init>`(v0, v2) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L16d4b2.  return v0 @kind object;
}

record `com.j256.ormlite.dao.RuntimeExceptionDao` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.Dao` @kind interface {
  `com.j256.ormlite.dao.Dao` `com.j256.ormlite.dao.RuntimeExceptionDao.dao` @AccessFlag PRIVATE;
}
global `com.j256.ormlite.logger.Log$Level` `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1640ac.  v0:= `@@com.j256.ormlite.logger.Log$Level.DEBUG` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L1640b0.  `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @type ^`com.j256.ormlite.logger.Log$Level` := v0 @kind object;
  #L1640b4.  v0:= constclass @type ^`com.j256.ormlite.dao.RuntimeExceptionDao` @kind object;
  #L1640b8.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L1640be.  v0:= temp @kind object;
  #L1640c0.  `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L1640c4.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.dao.RuntimeExceptionDao` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1640d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1640de.  v0.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` := v1 @kind object;
  #L1640e2.  return @kind void;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `createDao`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1640f4.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L1640fa.  v0:= temp @kind object;
  #L1640fc.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L164100.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #L164106.  return v1 @kind object;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `createDao`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L164118.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L16411e.  v0:= temp @kind object;
  #L164120.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L164124.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #L16412a.  return v1 @kind object;
}
procedure `void` `logMessage`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.lang.Exception` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L16413c.  v0:= `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L164140.  v1:= `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L164144.  call `log`(v0, v1, v3, v4) @signature `Lcom/j256/ormlite/logger/Logger;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/Throwable;Ljava/lang/String;)V` @kind virtual;
  #L16414a.  return @kind void;
}
procedure `void` `assignEmptyForeignCollection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16415c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164160.  call `assignEmptyForeignCollection`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @kind interface;
  #Try_end0.  
  #L164166.  return @kind void;
  #L164168.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16416a.  v1:= new `java.lang.StringBuilder`;
  #L16416e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164174.  v2:= "assignEmptyForeignCollection threw exception on " @kind object;
  #L164178.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16417e.  v1:= temp @kind object;
  #L164180.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164186.  v1:= temp @kind object;
  #L164188.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16418e.  v1:= temp @kind object;
  #L164190.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164196.  v1:= new `java.lang.RuntimeException`;
  #L16419a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1641a0.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164168;
}
procedure `java.lang.Object` `callBatchTasks`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.concurrent.Callable` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1641c4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1641c8.  call temp:= `callBatchTasks`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L1641ce.  v0:= temp @kind object;
  #L1641d0.  return v0 @kind object;
  #L1641d2.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1641d4.  v1:= new `java.lang.StringBuilder`;
  #L1641d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1641de.  v2:= "callBatchTasks threw exception on: " @kind object;
  #L1641e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1641e8.  v1:= temp @kind object;
  #L1641ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1641f0.  v1:= temp @kind object;
  #L1641f2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1641f8.  v1:= temp @kind object;
  #L1641fa.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164200.  v1:= new `java.lang.RuntimeException`;
  #L164204.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16420a.  throw v1;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L1641d2;
}
procedure `void` `clearObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.clearObjectCache:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16422c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164230.  call `clearObjectCache`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.clearObjectCache:()V` @kind interface;
  #L164236.  return @kind void;
}
procedure `void` `closeLastIterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.closeLastIterator:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L164248.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L16424c.  call `closeLastIterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.closeLastIterator:()V` @kind interface;
  #Try_end0.  
  #L164252.  return @kind void;
  #L164254.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L164256.  v1:= "closeLastIterator threw exception" @kind object;
  #L16425a.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164260.  v1:= new `java.lang.RuntimeException`;
  #L164264.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16426a.  throw v1;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L164254;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16428c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164290.  call temp:= `closeableIterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L164296.  v0:= temp @kind object;
  #L164298.  return v0 @kind object;
}
procedure `void` `commit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1642ac.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1642b0.  call `commit`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L1642b6.  return @kind void;
  #L1642b8.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1642ba.  v1:= new `java.lang.StringBuilder`;
  #L1642be.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1642c4.  v2:= "commit(" @kind object;
  #L1642c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1642ce.  v1:= temp @kind object;
  #L1642d0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1642d6.  v1:= temp @kind object;
  #L1642d8.  v2:= ") threw exception" @kind object;
  #L1642dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1642e2.  v1:= temp @kind object;
  #L1642e4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1642ea.  v1:= temp @kind object;
  #L1642ec.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1642f2.  v1:= new `java.lang.RuntimeException`;
  #L1642f6.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1642fc.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1642b8;
}
procedure `long` `countOf`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.countOf:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L164320.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164324.  call temp:= `countOf`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:()J` @kind interface;
  #Try_end0.  
  #L16432a.  v0:= temp @kind wide;
  #L16432c.  return v0 @kind wide;
  #L16432e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164330.  v1:= "countOf threw exception" @kind object;
  #L164334.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L16433a.  v1:= new `java.lang.RuntimeException`;
  #L16433e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164344.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16432e;
}
procedure `long` `countOf`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164368.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L16436c.  call temp:= `countOf`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @kind interface;
  #Try_end0.  
  #L164372.  v0:= temp @kind wide;
  #L164374.  return v0 @kind wide;
  #L164376.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164378.  v1:= new `java.lang.StringBuilder`;
  #L16437c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164382.  v2:= "countOf threw exception on " @kind object;
  #L164386.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16438c.  v1:= temp @kind object;
  #L16438e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164394.  v1:= temp @kind object;
  #L164396.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16439c.  v1:= temp @kind object;
  #L16439e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1643a4.  v1:= new `java.lang.RuntimeException`;
  #L1643a8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1643ae.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164376;
}
procedure `int` `create`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.create:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1643d0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1643d4.  call temp:= `create`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1643da.  v0:= temp;
  #L1643dc.  return v0;
  #L1643de.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1643e0.  v1:= new `java.lang.StringBuilder`;
  #L1643e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1643ea.  v2:= "create threw exception on: " @kind object;
  #L1643ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1643f4.  v1:= temp @kind object;
  #L1643f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1643fc.  v1:= temp @kind object;
  #L1643fe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164404.  v1:= temp @kind object;
  #L164406.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L16440c.  v1:= new `java.lang.RuntimeException`;
  #L164410.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164416.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1643de;
}
procedure `int` `create`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.create:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164438.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L16443c.  call temp:= `create`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L164442.  v0:= temp;
  #L164444.  return v0;
  #L164446.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164448.  v1:= new `java.lang.StringBuilder`;
  #L16444c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164452.  v2:= "create threw exception on: " @kind object;
  #L164456.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16445c.  v1:= temp @kind object;
  #L16445e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164464.  v1:= temp @kind object;
  #L164466.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16446c.  v1:= temp @kind object;
  #L16446e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164474.  v1:= new `java.lang.RuntimeException`;
  #L164478.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16447e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164446;
}
procedure `java.lang.Object` `createIfNotExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1644a0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1644a4.  call temp:= `createIfNotExists`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L1644aa.  v0:= temp @kind object;
  #L1644ac.  return v0 @kind object;
  #L1644ae.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1644b0.  v1:= new `java.lang.StringBuilder`;
  #L1644b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1644ba.  v2:= "createIfNotExists threw exception on: " @kind object;
  #L1644be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1644c4.  v1:= temp @kind object;
  #L1644c6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1644cc.  v1:= temp @kind object;
  #L1644ce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1644d4.  v1:= temp @kind object;
  #L1644d6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1644dc.  v1:= new `java.lang.RuntimeException`;
  #L1644e0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1644e6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1644ae;
}
procedure `com.j256.ormlite.dao.Dao$CreateOrUpdateStatus` `createOrUpdate`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164508.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L16450c.  call temp:= `createOrUpdate`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @kind interface;
  #Try_end0.  
  #L164512.  v0:= temp @kind object;
  #L164514.  return v0 @kind object;
  #L164516.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164518.  v1:= new `java.lang.StringBuilder`;
  #L16451c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164522.  v2:= "createOrUpdate threw exception on: " @kind object;
  #L164526.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16452c.  v1:= temp @kind object;
  #L16452e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164534.  v1:= temp @kind object;
  #L164536.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16453c.  v1:= temp @kind object;
  #L16453e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164544.  v1:= new `java.lang.RuntimeException`;
  #L164548.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16454e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164516;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedDelete` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164570.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164574.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @kind interface;
  #Try_end0.  
  #L16457a.  v0:= temp;
  #L16457c.  return v0;
  #L16457e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164580.  v1:= new `java.lang.StringBuilder`;
  #L164584.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16458a.  v2:= "delete threw exception on: " @kind object;
  #L16458e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164594.  v1:= temp @kind object;
  #L164596.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16459c.  v1:= temp @kind object;
  #L16459e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1645a4.  v1:= temp @kind object;
  #L1645a6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1645ac.  v1:= new `java.lang.RuntimeException`;
  #L1645b0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1645b6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16457e;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1645d8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1645dc.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1645e2.  v0:= temp;
  #L1645e4.  return v0;
  #L1645e6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1645e8.  v1:= new `java.lang.StringBuilder`;
  #L1645ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1645f2.  v2:= "delete threw exception on: " @kind object;
  #L1645f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1645fc.  v1:= temp @kind object;
  #L1645fe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164604.  v1:= temp @kind object;
  #L164606.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16460c.  v1:= temp @kind object;
  #L16460e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164614.  v1:= new `java.lang.RuntimeException`;
  #L164618.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16461e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1645e6;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164640.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164644.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L16464a.  v0:= temp;
  #L16464c.  return v0;
  #L16464e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164650.  v1:= new `java.lang.StringBuilder`;
  #L164654.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16465a.  v2:= "delete threw exception on: " @kind object;
  #L16465e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164664.  v1:= temp @kind object;
  #L164666.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16466c.  v1:= temp @kind object;
  #L16466e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164674.  v1:= temp @kind object;
  #L164676.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L16467c.  v1:= new `java.lang.RuntimeException`;
  #L164680.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164686.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16464e;
}
procedure `com.j256.ormlite.stmt.DeleteBuilder` `deleteBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1646a8.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1646ac.  call temp:= `deleteBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @kind interface;
  #L1646b2.  v0:= temp @kind object;
  #L1646b4.  return v0 @kind object;
}
procedure `int` `deleteById`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteById:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1646c8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1646cc.  call temp:= `deleteById`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.deleteById:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1646d2.  v0:= temp;
  #L1646d4.  return v0;
  #L1646d6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1646d8.  v1:= new `java.lang.StringBuilder`;
  #L1646dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1646e2.  v2:= "deleteById threw exception on: " @kind object;
  #L1646e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1646ec.  v1:= temp @kind object;
  #L1646ee.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1646f4.  v1:= temp @kind object;
  #L1646f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1646fc.  v1:= temp @kind object;
  #L1646fe.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164704.  v1:= new `java.lang.RuntimeException`;
  #L164708.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16470e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1646d6;
}
procedure `int` `deleteIds`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteIds:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164730.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164734.  call temp:= `deleteIds`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.deleteIds:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L16473a.  v0:= temp;
  #L16473c.  return v0;
  #L16473e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164740.  v1:= new `java.lang.StringBuilder`;
  #L164744.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16474a.  v2:= "deleteIds threw exception on: " @kind object;
  #L16474e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164754.  v1:= temp @kind object;
  #L164756.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16475c.  v1:= temp @kind object;
  #L16475e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164764.  v1:= temp @kind object;
  #L164766.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L16476c.  v1:= new `java.lang.RuntimeException`;
  #L164770.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164776.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16473e;
}
procedure `void` `endThreadConnection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164798.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L16479c.  call `endThreadConnection`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L1647a2.  return @kind void;
  #L1647a4.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1647a6.  v1:= new `java.lang.StringBuilder`;
  #L1647aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1647b0.  v2:= "endThreadConnection(" @kind object;
  #L1647b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1647ba.  v1:= temp @kind object;
  #L1647bc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1647c2.  v1:= temp @kind object;
  #L1647c4.  v2:= ") threw exception" @kind object;
  #L1647c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1647ce.  v1:= temp @kind object;
  #L1647d0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1647d6.  v1:= temp @kind object;
  #L1647d8.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1647de.  v1:= new `java.lang.RuntimeException`;
  #L1647e2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1647e8.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1647a4;
}
procedure `int` `executeRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16480c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164810.  call temp:= `executeRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L164816.  v0:= temp;
  #L164818.  return v0;
  #L16481a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16481c.  v1:= new `java.lang.StringBuilder`;
  #L164820.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164826.  v2:= "executeRaw threw exception on: " @kind object;
  #L16482a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164830.  v1:= temp @kind object;
  #L164832.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164838.  v1:= temp @kind object;
  #L16483a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164840.  v1:= temp @kind object;
  #L164842.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164848.  v1:= new `java.lang.RuntimeException`;
  #L16484c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164852.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16481a;
}
procedure `int` `executeRawNoArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.executeRawNoArgs:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164874.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164878.  call temp:= `executeRawNoArgs`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.executeRawNoArgs:(Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L16487e.  v0:= temp;
  #L164880.  return v0;
  #L164882.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164884.  v1:= new `java.lang.StringBuilder`;
  #L164888.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16488e.  v2:= "executeRawNoArgs threw exception on: " @kind object;
  #L164892.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164898.  v1:= temp @kind object;
  #L16489a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1648a0.  v1:= temp @kind object;
  #L1648a2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1648a8.  v1:= temp @kind object;
  #L1648aa.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1648b0.  v1:= new `java.lang.RuntimeException`;
  #L1648b4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1648ba.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164882;
}
procedure `java.lang.Object` `extractId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1648dc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1648e0.  call temp:= `extractId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L1648e6.  v0:= temp @kind object;
  #L1648e8.  return v0 @kind object;
  #L1648ea.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1648ec.  v1:= new `java.lang.StringBuilder`;
  #L1648f0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1648f6.  v2:= "extractId threw exception on: " @kind object;
  #L1648fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164900.  v1:= temp @kind object;
  #L164902.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164908.  v1:= temp @kind object;
  #L16490a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164910.  v1:= temp @kind object;
  #L164912.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164918.  v1:= new `java.lang.RuntimeException`;
  #L16491c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164922.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1648ea;
}
procedure `com.j256.ormlite.field.FieldType` `findForeignFieldType`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164944.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164948.  call temp:= `findForeignFieldType`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @kind interface;
  #L16494e.  v0:= temp @kind object;
  #L164950.  return v0 @kind object;
}
procedure `com.j256.ormlite.support.ConnectionSource` `getConnectionSource`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164964.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164968.  call temp:= `getConnectionSource`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind interface;
  #L16496e.  v0:= temp @kind object;
  #L164970.  return v0 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164984.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164988.  call temp:= `getDataClass`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L16498e.  v0:= temp @kind object;
  #L164990.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.ForeignCollection` `getEmptyForeignCollection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1649a4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1649a8.  call temp:= `getEmptyForeignCollection`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @kind interface;
  #Try_end0.  
  #L1649ae.  v0:= temp @kind object;
  #L1649b0.  return v0 @kind object;
  #L1649b2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1649b4.  v1:= new `java.lang.StringBuilder`;
  #L1649b8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1649be.  v2:= "getEmptyForeignCollection threw exception on " @kind object;
  #L1649c2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1649c8.  v1:= temp @kind object;
  #L1649ca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1649d0.  v1:= temp @kind object;
  #L1649d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1649d8.  v1:= temp @kind object;
  #L1649da.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1649e0.  v1:= new `java.lang.RuntimeException`;
  #L1649e4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1649ea.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1649b2;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164a0c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164a10.  call temp:= `getObjectCache`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @kind interface;
  #L164a16.  v0:= temp @kind object;
  #L164a18.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.RawRowMapper` `getRawRowMapper`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164a2c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164a30.  call temp:= `getRawRowMapper`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @kind interface;
  #L164a36.  v0:= temp @kind object;
  #L164a38.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.GenericRowMapper` `getSelectStarRowMapper`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L164a4c.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164a50.  call temp:= `getSelectStarRowMapper`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @kind interface;
  #Try_end0.  
  #L164a56.  v0:= temp @kind object;
  #L164a58.  return v0 @kind object;
  #L164a5a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164a5c.  v1:= "getSelectStarRowMapper threw exception" @kind object;
  #L164a60.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164a66.  v1:= new `java.lang.RuntimeException`;
  #L164a6a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164a70.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164a5a;
}
procedure `java.lang.String` `getTableName`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164a94.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164a98.  call temp:= `getTableName`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getTableName:()Ljava/lang/String;` @kind interface;
  #L164a9e.  v0:= temp @kind object;
  #L164aa0.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164ab4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164ab8.  call temp:= `getWrappedIterable`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind interface;
  #L164abe.  v0:= temp @kind object;
  #L164ac0.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164ad4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164ad8.  call temp:= `getWrappedIterable`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind interface;
  #L164ade.  v0:= temp @kind object;
  #L164ae0.  return v0 @kind object;
}
procedure `boolean` `idExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.idExists:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164af4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164af8.  call temp:= `idExists`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.idExists:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L164afe.  v0:= temp;
  #L164b00.  return v0;
  #L164b02.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164b04.  v1:= new `java.lang.StringBuilder`;
  #L164b08.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164b0e.  v2:= "idExists threw exception on " @kind object;
  #L164b12.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164b18.  v1:= temp @kind object;
  #L164b1a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164b20.  v1:= temp @kind object;
  #L164b22.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164b28.  v1:= temp @kind object;
  #L164b2a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164b30.  v1:= new `java.lang.RuntimeException`;
  #L164b34.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164b3a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164b02;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164b5c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164b60.  call temp:= `isAutoCommit`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #L164b66.  v0:= temp;
  #L164b68.  return v0;
  #L164b6a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164b6c.  v1:= new `java.lang.StringBuilder`;
  #L164b70.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164b76.  v2:= "isAutoCommit(" @kind object;
  #L164b7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164b80.  v1:= temp @kind object;
  #L164b82.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164b88.  v1:= temp @kind object;
  #L164b8a.  v2:= ") threw exception" @kind object;
  #L164b8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164b94.  v1:= temp @kind object;
  #L164b96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164b9c.  v1:= temp @kind object;
  #L164b9e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164ba4.  v1:= new `java.lang.RuntimeException`;
  #L164ba8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164bae.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164b6a;
}
procedure `boolean` `isTableExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isTableExists:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L164bd0.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164bd4.  call temp:= `isTableExists`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.isTableExists:()Z` @kind interface;
  #Try_end0.  
  #L164bda.  v0:= temp;
  #L164bdc.  return v0;
  #L164bde.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164be0.  v1:= "isTableExists threw exception" @kind object;
  #L164be4.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164bea.  v1:= new `java.lang.RuntimeException`;
  #L164bee.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164bf4.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164bde;
}
procedure `boolean` `isUpdatable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isUpdatable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164c18.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164c1c.  call temp:= `isUpdatable`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.isUpdatable:()Z` @kind interface;
  #L164c22.  v0:= temp;
  #L164c24.  return v0;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164c38.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164c3c.  call temp:= `iterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L164c42.  v0:= temp @kind object;
  #L164c44.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164c58.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164c5c.  call temp:= `iterator`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L164c62.  v0:= temp @kind object;
  #L164c64.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164c78.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164c7c.  call temp:= `iterator`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #Try_end0.  
  #L164c82.  v0:= temp @kind object;
  #L164c84.  return v0 @kind object;
  #L164c86.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164c88.  v1:= new `java.lang.StringBuilder`;
  #L164c8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164c92.  v2:= "iterator threw exception on: " @kind object;
  #L164c96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164c9c.  v1:= temp @kind object;
  #L164c9e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164ca4.  v1:= temp @kind object;
  #L164ca6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164cac.  v1:= temp @kind object;
  #L164cae.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164cb4.  v1:= new `java.lang.RuntimeException`;
  #L164cb8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164cbe.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164c86;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164ce0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164ce4.  call temp:= `iterator`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #Try_end0.  
  #L164cea.  v0:= temp @kind object;
  #L164cec.  return v0 @kind object;
  #L164cee.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164cf0.  v1:= new `java.lang.StringBuilder`;
  #L164cf4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164cfa.  v2:= "iterator threw exception on: " @kind object;
  #L164cfe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164d04.  v1:= temp @kind object;
  #L164d06.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164d0c.  v1:= temp @kind object;
  #L164d0e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164d14.  v1:= temp @kind object;
  #L164d16.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164d1c.  v1:= new `java.lang.RuntimeException`;
  #L164d20.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164d26.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164cee;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L164d48.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L164d4e.  v0:= temp @kind object;
  #L164d50.  return v0 @kind object;
}
procedure `java.lang.Object` `mapSelectStarRow`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `com.j256.ormlite.support.DatabaseResults` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L164d64.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164d68.  call temp:= `mapSelectStarRow`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L164d6e.  v0:= temp @kind object;
  #L164d70.  return v0 @kind object;
  #L164d72.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164d74.  v1:= "mapSelectStarRow threw exception on results" @kind object;
  #L164d78.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164d7e.  v1:= new `java.lang.RuntimeException`;
  #L164d82.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164d88.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164d72;
}
procedure `void` `notifyChanges`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.notifyChanges:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164dac.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164db0.  call `notifyChanges`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.notifyChanges:()V` @kind interface;
  #L164db6.  return @kind void;
}
procedure `java.lang.String` `objectToString`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164dc8.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164dcc.  call temp:= `objectToString`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L164dd2.  v0:= temp @kind object;
  #L164dd4.  return v0 @kind object;
}
procedure `boolean` `objectsEqual`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164de8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164dec.  call temp:= `objectsEqual`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L164df2.  v0:= temp;
  #L164df4.  return v0;
  #L164df6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164df8.  v1:= new `java.lang.StringBuilder`;
  #L164dfc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164e02.  v2:= "objectsEqual threw exception on: " @kind object;
  #L164e06.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164e0c.  v1:= temp @kind object;
  #L164e0e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164e14.  v1:= temp @kind object;
  #L164e16.  v2:= " and " @kind object;
  #L164e1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164e20.  v1:= temp @kind object;
  #L164e22.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164e28.  v1:= temp @kind object;
  #L164e2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164e30.  v1:= temp @kind object;
  #L164e32.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164e38.  v1:= new `java.lang.RuntimeException`;
  #L164e3c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164e42.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164df6;
}
procedure `java.util.List` `query`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164e64.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164e68.  call temp:= `query`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L164e6e.  v0:= temp @kind object;
  #L164e70.  return v0 @kind object;
  #L164e72.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164e74.  v1:= new `java.lang.StringBuilder`;
  #L164e78.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164e7e.  v2:= "query threw exception on: " @kind object;
  #L164e82.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164e88.  v1:= temp @kind object;
  #L164e8a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164e90.  v1:= temp @kind object;
  #L164e92.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164e98.  v1:= temp @kind object;
  #L164e9a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164ea0.  v1:= new `java.lang.RuntimeException`;
  #L164ea4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164eaa.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164e72;
}
procedure `com.j256.ormlite.stmt.QueryBuilder` `queryBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164ecc.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164ed0.  call temp:= `queryBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @kind interface;
  #L164ed6.  v0:= temp @kind object;
  #L164ed8.  return v0 @kind object;
}
procedure `java.util.List` `queryForAll`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L164eec.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164ef0.  call temp:= `queryForAll`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.queryForAll:()Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L164ef6.  v0:= temp @kind object;
  #L164ef8.  return v0 @kind object;
  #L164efa.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164efc.  v1:= "queryForAll threw exception" @kind object;
  #L164f00.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164f06.  v1:= new `java.lang.RuntimeException`;
  #L164f0a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164f10.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164efa;
}
procedure `java.util.List` `queryForEq`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L164f34.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164f38.  call temp:= `queryForEq`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L164f3e.  v0:= temp @kind object;
  #L164f40.  return v0 @kind object;
  #L164f42.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164f44.  v1:= new `java.lang.StringBuilder`;
  #L164f48.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L164f4e.  v2:= "queryForEq threw exception on: " @kind object;
  #L164f52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164f58.  v1:= temp @kind object;
  #L164f5a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L164f60.  v1:= temp @kind object;
  #L164f62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L164f68.  v1:= temp @kind object;
  #L164f6a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164f70.  v1:= new `java.lang.RuntimeException`;
  #L164f74.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164f7a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164f42;
}
procedure `java.util.List` `queryForFieldValues`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L164f9c.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164fa0.  call temp:= `queryForFieldValues`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L164fa6.  v0:= temp @kind object;
  #L164fa8.  return v0 @kind object;
  #L164faa.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164fac.  v1:= "queryForFieldValues threw exception" @kind object;
  #L164fb0.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164fb6.  v1:= new `java.lang.RuntimeException`;
  #L164fba.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L164fc0.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164faa;
}
procedure `java.util.List` `queryForFieldValuesArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L164fe4.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L164fe8.  call temp:= `queryForFieldValuesArgs`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L164fee.  v0:= temp @kind object;
  #L164ff0.  return v0 @kind object;
  #L164ff2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L164ff4.  v1:= "queryForFieldValuesArgs threw exception" @kind object;
  #L164ff8.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L164ffe.  v1:= new `java.lang.RuntimeException`;
  #L165002.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165008.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L164ff2;
}
procedure `java.lang.Object` `queryForFirst`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16502c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165030.  call temp:= `queryForFirst`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L165036.  v0:= temp @kind object;
  #L165038.  return v0 @kind object;
  #L16503a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16503c.  v1:= new `java.lang.StringBuilder`;
  #L165040.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165046.  v2:= "queryForFirst threw exception on: " @kind object;
  #L16504a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165050.  v1:= temp @kind object;
  #L165052.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165058.  v1:= temp @kind object;
  #L16505a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165060.  v1:= temp @kind object;
  #L165062.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165068.  v1:= new `java.lang.RuntimeException`;
  #L16506c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165072.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16503a;
}
procedure `java.lang.Object` `queryForId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L165094.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165098.  call temp:= `queryForId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L16509e.  v0:= temp @kind object;
  #L1650a0.  return v0 @kind object;
  #L1650a2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1650a4.  v1:= new `java.lang.StringBuilder`;
  #L1650a8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1650ae.  v2:= "queryForId threw exception on: " @kind object;
  #L1650b2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1650b8.  v1:= temp @kind object;
  #L1650ba.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1650c0.  v1:= temp @kind object;
  #L1650c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1650c8.  v1:= temp @kind object;
  #L1650ca.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1650d0.  v1:= new `java.lang.RuntimeException`;
  #L1650d4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1650da.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1650a2;
}
procedure `java.util.List` `queryForMatching`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1650fc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165100.  call temp:= `queryForMatching`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L165106.  v0:= temp @kind object;
  #L165108.  return v0 @kind object;
  #L16510a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16510c.  v1:= new `java.lang.StringBuilder`;
  #L165110.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165116.  v2:= "queryForMatching threw exception on: " @kind object;
  #L16511a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165120.  v1:= temp @kind object;
  #L165122.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165128.  v1:= temp @kind object;
  #L16512a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165130.  v1:= temp @kind object;
  #L165132.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165138.  v1:= new `java.lang.RuntimeException`;
  #L16513c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165142.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16510a;
}
procedure `java.util.List` `queryForMatchingArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L165164.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165168.  call temp:= `queryForMatchingArgs`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L16516e.  v0:= temp @kind object;
  #L165170.  return v0 @kind object;
  #L165172.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L165174.  v1:= new `java.lang.StringBuilder`;
  #L165178.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16517e.  v2:= "queryForMatchingArgs threw exception on: " @kind object;
  #L165182.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165188.  v1:= temp @kind object;
  #L16518a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165190.  v1:= temp @kind object;
  #L165192.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165198.  v1:= temp @kind object;
  #L16519a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1651a0.  v1:= new `java.lang.RuntimeException`;
  #L1651a4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1651aa.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L165172;
}
procedure `java.lang.Object` `queryForSameId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1651cc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1651d0.  call temp:= `queryForSameId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L1651d6.  v0:= temp @kind object;
  #L1651d8.  return v0 @kind object;
  #L1651da.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1651dc.  v1:= new `java.lang.StringBuilder`;
  #L1651e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1651e6.  v2:= "queryForSameId threw exception on: " @kind object;
  #L1651ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1651f0.  v1:= temp @kind object;
  #L1651f2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1651f8.  v1:= temp @kind object;
  #L1651fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165200.  v1:= temp @kind object;
  #L165202.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165208.  v1:= new `java.lang.RuntimeException`;
  #L16520c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165212.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1651da;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.dao.DatabaseResultsMapper` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L165234.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165238.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L16523e.  v0:= temp @kind object;
  #L165240.  return v0 @kind object;
  #L165242.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L165244.  v1:= new `java.lang.StringBuilder`;
  #L165248.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16524e.  v2:= "queryRaw threw exception on: " @kind object;
  #L165252.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165258.  v1:= temp @kind object;
  #L16525a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165260.  v1:= temp @kind object;
  #L165262.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165268.  v1:= temp @kind object;
  #L16526a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165270.  v1:= new `java.lang.RuntimeException`;
  #L165274.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16527a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L165242;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.dao.RawRowMapper` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16529c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1652a0.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L1652a6.  v0:= temp @kind object;
  #L1652a8.  return v0 @kind object;
  #L1652aa.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1652ac.  v1:= new `java.lang.StringBuilder`;
  #L1652b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1652b6.  v2:= "queryRaw threw exception on: " @kind object;
  #L1652ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1652c0.  v1:= temp @kind object;
  #L1652c2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1652c8.  v1:= temp @kind object;
  #L1652ca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1652d0.  v1:= temp @kind object;
  #L1652d2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1652d8.  v1:= new `java.lang.RuntimeException`;
  #L1652dc.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1652e2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1652aa;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType`[] v5 @kind object, `com.j256.ormlite.dao.RawRowObjectMapper` v6 @kind object, `java.lang.String`[] v7 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L165304.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165308.  call temp:= `queryRaw`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L16530e.  v0:= temp @kind object;
  #L165310.  return v0 @kind object;
  #L165312.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L165314.  v1:= new `java.lang.StringBuilder`;
  #L165318.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16531e.  v2:= "queryRaw threw exception on: " @kind object;
  #L165322.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165328.  v1:= temp @kind object;
  #L16532a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165330.  v1:= temp @kind object;
  #L165332.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165338.  v1:= temp @kind object;
  #L16533a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165340.  v1:= new `java.lang.RuntimeException`;
  #L165344.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16534a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L165312;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType`[] v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16536c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165370.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L165376.  v0:= temp @kind object;
  #L165378.  return v0 @kind object;
  #L16537a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16537c.  v1:= new `java.lang.StringBuilder`;
  #L165380.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165386.  v2:= "queryRaw threw exception on: " @kind object;
  #L16538a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165390.  v1:= temp @kind object;
  #L165392.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165398.  v1:= temp @kind object;
  #L16539a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1653a0.  v1:= temp @kind object;
  #L1653a2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1653a8.  v1:= new `java.lang.RuntimeException`;
  #L1653ac.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1653b2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16537a;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1653d4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1653d8.  call temp:= `queryRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L1653de.  v0:= temp @kind object;
  #L1653e0.  return v0 @kind object;
  #L1653e2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1653e4.  v1:= new `java.lang.StringBuilder`;
  #L1653e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1653ee.  v2:= "queryRaw threw exception on: " @kind object;
  #L1653f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1653f8.  v1:= temp @kind object;
  #L1653fa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165400.  v1:= temp @kind object;
  #L165402.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165408.  v1:= temp @kind object;
  #L16540a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165410.  v1:= new `java.lang.RuntimeException`;
  #L165414.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16541a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1653e2;
}
procedure `long` `queryRawValue`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16543c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165440.  call temp:= `queryRawValue`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @kind interface;
  #Try_end0.  
  #L165446.  v0:= temp @kind wide;
  #L165448.  return v0 @kind wide;
  #L16544a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16544c.  v1:= new `java.lang.StringBuilder`;
  #L165450.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165456.  v2:= "queryRawValue threw exception on: " @kind object;
  #L16545a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165460.  v1:= temp @kind object;
  #L165462.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165468.  v1:= temp @kind object;
  #L16546a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165470.  v1:= temp @kind object;
  #L165472.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165478.  v1:= new `java.lang.RuntimeException`;
  #L16547c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165482.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16544a;
}
procedure `int` `refresh`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1654a4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1654a8.  call temp:= `refresh`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1654ae.  v0:= temp;
  #L1654b0.  return v0;
  #L1654b2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1654b4.  v1:= new `java.lang.StringBuilder`;
  #L1654b8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1654be.  v2:= "refresh threw exception on: " @kind object;
  #L1654c2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1654c8.  v1:= temp @kind object;
  #L1654ca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1654d0.  v1:= temp @kind object;
  #L1654d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1654d8.  v1:= temp @kind object;
  #L1654da.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1654e0.  v1:= new `java.lang.RuntimeException`;
  #L1654e4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1654ea.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1654b2;
}
procedure `void` `registerObserver`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.dao.Dao$DaoObserver` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16550c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165510.  call `registerObserver`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @kind interface;
  #L165516.  return @kind void;
}
procedure `void` `rollBack`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L165528.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L16552c.  call `rollBack`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L165532.  return @kind void;
  #L165534.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L165536.  v1:= new `java.lang.StringBuilder`;
  #L16553a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165540.  v2:= "rollBack(" @kind object;
  #L165544.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16554a.  v1:= temp @kind object;
  #L16554c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165552.  v1:= temp @kind object;
  #L165554.  v2:= ") threw exception" @kind object;
  #L165558.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16555e.  v1:= temp @kind object;
  #L165560.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165566.  v1:= temp @kind object;
  #L165568.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L16556e.  v1:= new `java.lang.RuntimeException`;
  #L165572.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165578.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L165534;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object, `boolean` v5 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16559c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1655a0.  call `setAutoCommit`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @kind interface;
  #Try_end0.  
  #L1655a6.  return @kind void;
  #L1655a8.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1655aa.  v1:= new `java.lang.StringBuilder`;
  #L1655ae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1655b4.  v2:= "setAutoCommit(" @kind object;
  #L1655b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1655be.  v1:= temp @kind object;
  #L1655c0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1655c6.  v1:= temp @kind object;
  #L1655c8.  v2:= "," @kind object;
  #L1655cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1655d2.  v1:= temp @kind object;
  #L1655d4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1655da.  v1:= temp @kind object;
  #L1655dc.  v2:= ") threw exception" @kind object;
  #L1655e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1655e6.  v1:= temp @kind object;
  #L1655e8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1655ee.  v1:= temp @kind object;
  #L1655f0.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1655f6.  v1:= new `java.lang.RuntimeException`;
  #L1655fa.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165600.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1655a8;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L165624.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165628.  call `setObjectCache`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @kind interface;
  #Try_end0.  
  #L16562e.  return @kind void;
  #L165630.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L165632.  v1:= new `java.lang.StringBuilder`;
  #L165636.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16563c.  v2:= "setObjectCache threw exception on " @kind object;
  #L165640.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165646.  v1:= temp @kind object;
  #L165648.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16564e.  v1:= temp @kind object;
  #L165650.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L165656.  v1:= temp @kind object;
  #L165658.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L16565e.  v1:= new `java.lang.RuntimeException`;
  #L165662.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165668.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L165630;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `boolean` v4 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectCache:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L16568c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165690.  call `setObjectCache`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Z)V` @kind interface;
  #Try_end0.  
  #L165696.  return @kind void;
  #L165698.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16569a.  v1:= new `java.lang.StringBuilder`;
  #L16569e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1656a4.  v2:= "setObjectCache(" @kind object;
  #L1656a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1656ae.  v1:= temp @kind object;
  #L1656b0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1656b6.  v1:= temp @kind object;
  #L1656b8.  v2:= ") threw exception" @kind object;
  #L1656bc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1656c2.  v1:= temp @kind object;
  #L1656c4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1656ca.  v1:= temp @kind object;
  #L1656cc.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1656d2.  v1:= new `java.lang.RuntimeException`;
  #L1656d6.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1656dc.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L165698;
}
procedure `void` `setObjectFactory`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.table.ObjectFactory` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165700.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165704.  call `setObjectFactory`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @kind interface;
  #L16570a.  return @kind void;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `startThreadConnection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L16571c.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165720.  call temp:= `startThreadConnection`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #Try_end0.  
  #L165726.  v0:= temp @kind object;
  #L165728.  return v0 @kind object;
  #L16572a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16572c.  v1:= "startThreadConnection() threw exception" @kind object;
  #L165730.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165736.  v1:= new `java.lang.RuntimeException`;
  #L16573a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L165740.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16572a;
}
procedure `void` `unregisterObserver`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.dao.Dao$DaoObserver` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165764.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165768.  call `unregisterObserver`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @kind interface;
  #L16576e.  return @kind void;
}
procedure `int` `update`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedUpdate` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L165780.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165784.  call temp:= `update`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @kind interface;
  #Try_end0.  
  #L16578a.  v0:= temp;
  #L16578c.  return v0;
  #L16578e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L165790.  v1:= new `java.lang.StringBuilder`;
  #L165794.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16579a.  v2:= "update threw exception on: " @kind object;
  #L16579e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1657a4.  v1:= temp @kind object;
  #L1657a6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1657ac.  v1:= temp @kind object;
  #L1657ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1657b4.  v1:= temp @kind object;
  #L1657b6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1657bc.  v1:= new `java.lang.RuntimeException`;
  #L1657c0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1657c6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16578e;
}
procedure `int` `update`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1657e8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1657ec.  call temp:= `update`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L1657f2.  v0:= temp;
  #L1657f4.  return v0;
  #L1657f6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1657f8.  v1:= new `java.lang.StringBuilder`;
  #L1657fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L165802.  v2:= "update threw exception on: " @kind object;
  #L165806.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16580c.  v1:= temp @kind object;
  #L16580e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165814.  v1:= temp @kind object;
  #L165816.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16581c.  v1:= temp @kind object;
  #L16581e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165824.  v1:= new `java.lang.RuntimeException`;
  #L165828.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16582e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1657f6;
}
procedure `com.j256.ormlite.stmt.UpdateBuilder` `updateBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L165850.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165854.  call temp:= `updateBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @kind interface;
  #L16585a.  v0:= temp @kind object;
  #L16585c.  return v0 @kind object;
}
procedure `int` `updateId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L165870.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L165874.  call temp:= `updateId`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L16587a.  v0:= temp;
  #L16587c.  return v0;
  #L16587e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L165880.  v1:= new `java.lang.StringBuilder`;
  #L165884.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16588a.  v2:= "updateId threw exception on: " @kind object;
  #L16588e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165894.  v1:= temp @kind object;
  #L165896.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16589c.  v1:= temp @kind object;
  #L16589e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1658a4.  v1:= temp @kind object;
  #L1658a6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1658ac.  v1:= new `java.lang.RuntimeException`;
  #L1658b0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1658b6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16587e;
}
procedure `int` `updateRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1658d8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1658dc.  call temp:= `updateRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L1658e2.  v0:= temp;
  #L1658e4.  return v0;
  #L1658e6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1658e8.  v1:= new `java.lang.StringBuilder`;
  #L1658ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1658f2.  v2:= "updateRaw threw exception on: " @kind object;
  #L1658f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1658fc.  v1:= temp @kind object;
  #L1658fe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L165904.  v1:= temp @kind object;
  #L165906.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16590c.  v1:= temp @kind object;
  #L16590e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L165914.  v1:= new `java.lang.RuntimeException`;
  #L165918.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16591e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1658e6;
}

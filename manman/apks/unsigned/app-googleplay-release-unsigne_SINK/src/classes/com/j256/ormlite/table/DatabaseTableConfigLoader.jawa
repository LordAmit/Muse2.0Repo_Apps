record `com.j256.ormlite.table.DatabaseTableConfigLoader` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_END_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_FIELDS_END` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_FIELDS_START` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.CONFIG_FILE_START_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.FIELD_NAME_DATA_CLASS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.table.DatabaseTableConfigLoader.FIELD_NAME_TABLE_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.table.DatabaseTableConfigLoader` v0 @kind this) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17aa44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17aa4a.  return @kind void;
}
procedure `com.j256.ormlite.table.DatabaseTableConfig` `fromReader`(`java.io.BufferedReader` v7 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L17aa5c.  v3:= 1I;
  #L17aa5e.  v2:= 0I;
  #L17aa60.  v0:= new `com.j256.ormlite.table.DatabaseTableConfig`;
  #L17aa64.  call `<init>`(v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.<init>:()V` @kind direct;
  #L17aa6a.  v1:= v2;
  #Try_start0.  
  #L17aa6c.  call temp:= `readLine`(v7) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #Try_end0.  
  #L17aa72.  v4:= temp @kind object;
  #L17aa74.  if v4 != 0 then goto L17aa8e;
  #L17aa78.  if v1 == 0 then goto L17ab3c;
  #L17aa7c.  return v0 @kind object;
  #L17aa7e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L17aa80.  v1:= "Could not read DatabaseTableConfig from stream" @kind object;
  #L17aa84.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L17aa8a.  v0:= temp @kind object;
  #L17aa8c.  throw v0;
  #L17aa8e.  v5:= "# --table-end--" @kind object;
  #L17aa92.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L17aa98.  v5:= temp;
  #L17aa9a.  if v5 != 0 then goto L17aa78;
  #L17aa9e.  v5:= "# --table-fields-start--" @kind object;
  #L17aaa2.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L17aaa8.  v5:= temp;
  #L17aaaa.  if v5 == 0 then goto L17aab6;
  #L17aaae.  call `readFields`(v7, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readFields:(Ljava/io/BufferedReader;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @kind static;
  #L17aab4.  goto L17aa6c;
  #L17aab6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L17aabc.  v5:= temp;
  #L17aabe.  if v5 == 0 then goto L17aa6c;
  #L17aac2.  v5:= "#" @kind object;
  #L17aac6.  call temp:= `startsWith`(v4, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L17aacc.  v5:= temp;
  #L17aace.  if v5 != 0 then goto L17aa6c;
  #L17aad2.  v5:= "# --table-start--" @kind object;
  #L17aad6.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L17aadc.  v5:= temp;
  #L17aade.  if v5 != 0 then goto L17aa6c;
  #L17aae2.  v1:= "=" @kind object;
  #L17aae6.  v5:= -2I;
  #L17aae8.  call temp:= `split`(v4, v1, v5) @signature `Ljava/lang/String;.split:(Ljava/lang/String;I)[Ljava/lang/String;` @kind virtual;
  #L17aaee.  v1:= temp @kind object;
  #L17aaf0.  v5:= length @variable v1;
  #L17aaf2.  v6:= 2I;
  #L17aaf4.  if v5 == v6 then goto L17ab2a;
  #L17aaf8.  v0:= new `java.sql.SQLException`;
  #L17aafc.  v1:= new `java.lang.StringBuilder`;
  #L17ab00.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17ab06.  v2:= "DatabaseTableConfig reading from stream cannot parse line: " @kind object;
  #L17ab0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17ab10.  v1:= temp @kind object;
  #L17ab12.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17ab18.  v1:= temp @kind object;
  #L17ab1a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17ab20.  v1:= temp @kind object;
  #L17ab22.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17ab28.  throw v0;
  #L17ab2a.  v4:= v1[v2] @kind object;
  #L17ab2e.  v1:= v1[v3] @kind object;
  #L17ab32.  call `readTableField`(v0, v4, v1) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readTableField:(Lcom/j256/ormlite/table/DatabaseTableConfig;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L17ab38.  v1:= v3;
  #L17ab3a.  goto L17aa6c;
  #L17ab3c.  v0:= 0I;
  #L17ab3e.  goto L17aa7c;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L17aa7e;
}
procedure `java.util.List` `loadDatabaseConfigFromReader`(`java.io.BufferedReader` v2 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.loadDatabaseConfigFromReader:(Ljava/io/BufferedReader;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L17ab60.  v0:= new `java.util.ArrayList`;
  #L17ab64.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L17ab6a.  call temp:= `fromReader`(v2) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/table/DatabaseTableConfig;` @kind static;
  #L17ab70.  v1:= temp @kind object;
  #L17ab72.  if v1 != 0 then goto L17ab78;
  #L17ab76.  return v0 @kind object;
  #L17ab78.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L17ab7e.  goto L17ab6a;
}
procedure `void` `readFields`(`java.io.BufferedReader` v3 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v4 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readFields:(Ljava/io/BufferedReader;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L17ab90.  v0:= new `java.util.ArrayList`;
  #L17ab94.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L17ab9a.  call temp:= `readLine`(v3) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #Try_end0.  
  #L17aba0.  v1:= temp @kind object;
  #L17aba2.  if v1 == 0 then goto L17abb6;
  #L17aba6.  v2:= "# --table-fields-end--" @kind object;
  #L17abaa.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L17abb0.  v1:= temp;
  #L17abb2.  if v1 == 0 then goto L17abce;
  #L17abb6.  call `setFieldConfigs`(v4, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setFieldConfigs:(Ljava/util/List;)V` @kind virtual;
  #L17abbc.  return @kind void;
  #L17abbe.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L17abc0.  v1:= "Could not read next field from config file" @kind object;
  #L17abc4.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L17abca.  v0:= temp @kind object;
  #L17abcc.  throw v0;
  #L17abce.  call temp:= `fromReader`(v3) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @kind static;
  #L17abd4.  v1:= temp @kind object;
  #L17abd6.  if v1 == 0 then goto L17abb6;
  #L17abda.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L17abe0.  goto L17ab9a;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L17abbe;
}
procedure `void` `readTableField`(`com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.readTableField:(Lcom/j256/ormlite/table/DatabaseTableConfig;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L17ac04.  v0:= "dataClass" @kind object;
  #L17ac08.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L17ac0e.  v0:= temp;
  #L17ac10.  if v0 == 0 then goto L17ac58;
  #Try_start0.  
  #L17ac14.  call temp:= `forName`(v5) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L17ac1a.  v0:= temp @kind object;
  #L17ac1c.  call `setDataClass`(v3, v0) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setDataClass:(Ljava/lang/Class;)V` @kind virtual;
  #Try_end0.  
  #L17ac22.  return @kind void;
  #L17ac24.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L17ac26.  v0:= new `java.lang.IllegalArgumentException`;
  #L17ac2a.  v1:= new `java.lang.StringBuilder`;
  #L17ac2e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L17ac34.  v2:= "Unknown class specified for dataClass: " @kind object;
  #L17ac38.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17ac3e.  v1:= temp @kind object;
  #L17ac40.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L17ac46.  v1:= temp @kind object;
  #L17ac48.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L17ac4e.  v1:= temp @kind object;
  #L17ac50.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17ac56.  throw v0;
  #L17ac58.  v0:= "tableName" @kind object;
  #L17ac5c.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L17ac62.  v0:= temp;
  #L17ac64.  if v0 == 0 then goto L17ac22;
  #L17ac68.  call `setTableName`(v3, v5) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.setTableName:(Ljava/lang/String;)V` @kind virtual;
  #L17ac6e.  goto L17ac22;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L17ac24;
}
procedure `void` `write`(`java.io.BufferedWriter` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.write:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L17ac90.  call `writeConfig`(v2, v3) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.writeConfig:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @kind static;
  #Try_end0.  
  #L17ac96.  return @kind void;
  #L17ac98.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L17ac9a.  v1:= "Could not write config to writer" @kind object;
  #L17ac9e.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L17aca4.  v0:= temp @kind object;
  #L17aca6.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L17ac98;
}
procedure `void` `writeConfig`(`java.io.BufferedWriter` v3 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v4 @kind object) @signature `Lcom/j256/ormlite/table/DatabaseTableConfigLoader;.writeConfig:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L17acc8.  v2:= 61I;
  #L17accc.  v0:= "# --table-start--" @kind object;
  #L17acd0.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L17acd6.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L17acdc.  call temp:= `getDataClass`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L17ace2.  v0:= temp @kind object;
  #L17ace4.  if v0 == 0 then goto L17ad18;
  #L17ace8.  v0:= "dataClass" @kind object;
  #L17acec.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L17acf2.  v0:= temp @kind object;
  #L17acf4.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L17acfa.  v0:= temp @kind object;
  #L17acfc.  call temp:= `getDataClass`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L17ad02.  v1:= temp @kind object;
  #L17ad04.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L17ad0a.  v1:= temp @kind object;
  #L17ad0c.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L17ad12.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L17ad18.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L17ad1e.  v0:= temp @kind object;
  #L17ad20.  if v0 == 0 then goto L17ad4c;
  #L17ad24.  v0:= "tableName" @kind object;
  #L17ad28.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L17ad2e.  v0:= temp @kind object;
  #L17ad30.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L17ad36.  v0:= temp @kind object;
  #L17ad38.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L17ad3e.  v1:= temp @kind object;
  #L17ad40.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L17ad46.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L17ad4c.  v0:= "# --table-fields-start--" @kind object;
  #L17ad50.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L17ad56.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L17ad5c.  call temp:= `getFieldConfigs`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldConfigs:()Ljava/util/List;` @kind virtual;
  #L17ad62.  v0:= temp @kind object;
  #L17ad64.  if v0 == 0 then goto L17ada0;
  #L17ad68.  call temp:= `getFieldConfigs`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getFieldConfigs:()Ljava/util/List;` @kind virtual;
  #L17ad6e.  v0:= temp @kind object;
  #L17ad70.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L17ad76.  v1:= temp @kind object;
  #L17ad78.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L17ad7e.  v0:= temp;
  #L17ad80.  if v0 == 0 then goto L17ada0;
  #L17ad84.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L17ad8a.  v0:= temp @kind object;
  #L17ad8c.  v0:= (`com.j256.ormlite.field.DatabaseFieldConfig`) v0 @kind object;
  #L17ad90.  call temp:= `getTableName`(v4) @signature `Lcom/j256/ormlite/table/DatabaseTableConfig;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L17ad96.  v2:= temp @kind object;
  #L17ad98.  call `write`(v3, v0, v2) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.write:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/String;)V` @kind static;
  #L17ad9e.  goto L17ad78;
  #L17ada0.  v0:= "# --table-fields-end--" @kind object;
  #L17ada4.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L17adaa.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L17adb0.  v0:= "# --table-end--" @kind object;
  #L17adb4.  call temp:= `append`(v3, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L17adba.  call `newLine`(v3) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L17adc0.  return @kind void;
}

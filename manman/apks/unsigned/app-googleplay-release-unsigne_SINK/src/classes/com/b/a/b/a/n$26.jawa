record `com.b.a.b.a.n$26` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `java.lang.Class` `com.b.a.b.a.n$26.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Class` `com.b.a.b.a.n$26.b` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.n$26.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.n$26` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.b.a.v` v3 @kind object) @signature `Lcom/b/a/b/a/n$26;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L153d70.  v0.`com.b.a.b.a.n$26.a` @type ^`java.lang.Class` := v1 @kind object;
  #L153d74.  v0.`com.b.a.b.a.n$26.b` @type ^`java.lang.Class` := v2 @kind object;
  #L153d78.  v0.`com.b.a.b.a.n$26.c` @type ^`com.b.a.v` := v3 @kind object;
  #L153d7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L153d82.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.n$26` v2 @kind this, `com.b.a.f` v3 @kind object, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/a/n$26;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L153d94.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L153d9a.  v0:= temp @kind object;
  #L153d9c.  v1:= v2.`com.b.a.b.a.n$26.a` @type ^`java.lang.Class` @kind object;
  #L153da0.  if v0 == v1 then goto L153dac;
  #L153da4.  v1:= v2.`com.b.a.b.a.n$26.b` @type ^`java.lang.Class` @kind object;
  #L153da8.  if v0 != v1 then goto L153db2;
  #L153dac.  v0:= v2.`com.b.a.b.a.n$26.c` @type ^`com.b.a.v` @kind object;
  #L153db0.  return v0 @kind object;
  #L153db2.  v0:= 0I;
  #L153db4.  goto L153db0;
}
procedure `java.lang.String` `toString`(`com.b.a.b.a.n$26` v2 @kind this) @signature `Lcom/b/a/b/a/n$26;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L153dc8.  v0:= new `java.lang.StringBuilder`;
  #L153dcc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L153dd2.  v1:= "Factory[type=" @kind object;
  #L153dd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153ddc.  v0:= temp @kind object;
  #L153dde.  v1:= v2.`com.b.a.b.a.n$26.b` @type ^`java.lang.Class` @kind object;
  #L153de2.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L153de8.  v1:= temp @kind object;
  #L153dea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153df0.  v0:= temp @kind object;
  #L153df2.  v1:= "+" @kind object;
  #L153df6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153dfc.  v0:= temp @kind object;
  #L153dfe.  v1:= v2.`com.b.a.b.a.n$26.a` @type ^`java.lang.Class` @kind object;
  #L153e02.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L153e08.  v1:= temp @kind object;
  #L153e0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153e10.  v0:= temp @kind object;
  #L153e12.  v1:= ",adapter=" @kind object;
  #L153e16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153e1c.  v0:= temp @kind object;
  #L153e1e.  v1:= v2.`com.b.a.b.a.n$26.c` @type ^`com.b.a.v` @kind object;
  #L153e22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153e28.  v0:= temp @kind object;
  #L153e2a.  v1:= "]" @kind object;
  #L153e2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L153e34.  v0:= temp @kind object;
  #L153e36.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L153e3c.  v0:= temp @kind object;
  #L153e3e.  return v0 @kind object;
}

record `com.b.a.b.c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `com.b.a.b.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.c` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/b/a/b/c;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L156698.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15669e.  v0.`com.b.a.b.c.a` @type ^`java.util.Map` := v1 @kind object;
  #L1566a2.  return @kind void;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1566b4.  v0:= 0I;
  #Try_start0.  
  #L1566b6.  v0:= new `java.lang.Class`[v0];
  #L1566ba.  call temp:= `getDeclaredConstructor`(v3, v0) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L1566c0.  v1:= temp @kind object;
  #L1566c2.  call temp:= `isAccessible`(v1) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L1566c8.  v0:= temp;
  #L1566ca.  if v0 != 0 then goto L1566d6;
  #L1566ce.  v0:= 1I;
  #L1566d0.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L1566d6.  v0:= new `com.b.a.b.c$8`;
  #L1566da.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/c$8;.<init>:(Lcom/b/a/b/c;Ljava/lang/reflect/Constructor;)V` @kind direct;
  #Try_end0.  
  #L1566e0.  return v0 @kind object;
  #L1566e2.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L1566e4.  v0:= 0I;
  #L1566e6.  goto L1566e0;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L1566e2;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v3 @kind this, `java.lang.reflect.Type` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L156708.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L15670c.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L156712.  v0:= temp;
  #L156714.  if v0 == 0 then goto L156794;
  #L156718.  v0:= constclass @type ^`java.util.SortedSet` @kind object;
  #L15671c.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L156722.  v0:= temp;
  #L156724.  if v0 == 0 then goto L156734;
  #L156728.  v0:= new `com.b.a.b.c$9`;
  #L15672c.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$9;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L156732.  return v0 @kind object;
  #L156734.  v0:= constclass @type ^`java.util.EnumSet` @kind object;
  #L156738.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L15673e.  v0:= temp;
  #L156740.  if v0 == 0 then goto L156750;
  #L156744.  v0:= new `com.b.a.b.c$10`;
  #L156748.  call `<init>`(v0, v3, v4) @signature `Lcom/b/a/b/c$10;.<init>:(Lcom/b/a/b/c;Ljava/lang/reflect/Type;)V` @kind direct;
  #L15674e.  goto L156732;
  #L156750.  v0:= constclass @type ^`java.util.Set` @kind object;
  #L156754.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L15675a.  v0:= temp;
  #L15675c.  if v0 == 0 then goto L15676c;
  #L156760.  v0:= new `com.b.a.b.c$11`;
  #L156764.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$11;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L15676a.  goto L156732;
  #L15676c.  v0:= constclass @type ^`java.util.Queue` @kind object;
  #L156770.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L156776.  v0:= temp;
  #L156778.  if v0 == 0 then goto L156788;
  #L15677c.  v0:= new `com.b.a.b.c$12`;
  #L156780.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$12;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L156786.  goto L156732;
  #L156788.  v0:= new `com.b.a.b.c$13`;
  #L15678c.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$13;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L156792.  goto L156732;
  #L156794.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L156798.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L15679e.  v0:= temp;
  #L1567a0.  if v0 == 0 then goto L15684e;
  #L1567a4.  v0:= constclass @type ^`java.util.concurrent.ConcurrentNavigableMap` @kind object;
  #L1567a8.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1567ae.  v0:= temp;
  #L1567b0.  if v0 == 0 then goto L1567c0;
  #L1567b4.  v0:= new `com.b.a.b.c$14`;
  #L1567b8.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$14;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L1567be.  goto L156732;
  #L1567c0.  v0:= constclass @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L1567c4.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1567ca.  v0:= temp;
  #L1567cc.  if v0 == 0 then goto L1567dc;
  #L1567d0.  v0:= new `com.b.a.b.c$2`;
  #L1567d4.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$2;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L1567da.  goto L156732;
  #L1567dc.  v0:= constclass @type ^`java.util.SortedMap` @kind object;
  #L1567e0.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1567e6.  v0:= temp;
  #L1567e8.  if v0 == 0 then goto L1567f8;
  #L1567ec.  v0:= new `com.b.a.b.c$3`;
  #L1567f0.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$3;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L1567f6.  goto L156732;
  #L1567f8.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L1567fc.  if v0 == 0 then goto L156840;
  #L156800.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L156804.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L156808.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L15680e.  v1:= temp @kind object;
  #L156810.  v2:= 0I;
  #L156812.  v1:= v1[v2] @kind object;
  #L156816.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L15681c.  v1:= temp @kind object;
  #L15681e.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L156824.  v1:= temp @kind object;
  #L156826.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L15682c.  v0:= temp;
  #L15682e.  if v0 != 0 then goto L156840;
  #L156832.  v0:= new `com.b.a.b.c$4`;
  #L156836.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$4;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L15683c.  goto L156732;
  #L156840.  v0:= new `com.b.a.b.c$5`;
  #L156844.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$5;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L15684a.  goto L156732;
  #L15684e.  v0:= 0I;
  #L156850.  goto L156732;
}
procedure `com.b.a.b.h` `b`(`com.b.a.b.c` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/c;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L156864.  v0:= new `com.b.a.b.c$6`;
  #L156868.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/b/a/b/c$6;.<init>:(Lcom/b/a/b/c;Ljava/lang/Class;Ljava/lang/reflect/Type;)V` @kind direct;
  #L15686e.  return v0 @kind object;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v3 @kind this, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L156880.  call temp:= `b`(v4) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L156886.  v2:= temp @kind object;
  #L156888.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L15688e.  v1:= temp @kind object;
  #L156890.  v0:= v3.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L156894.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15689a.  v0:= temp @kind object;
  #L15689c.  v0:= (`com.b.a.h`) v0 @kind object;
  #L1568a0.  if v0 == 0 then goto L1568b2;
  #L1568a4.  v1:= new `com.b.a.b.c$1`;
  #L1568a8.  call `<init>`(v1, v3, v0, v2) @signature `Lcom/b/a/b/c$1;.<init>:(Lcom/b/a/b/c;Lcom/b/a/h;Ljava/lang/reflect/Type;)V` @kind direct;
  #L1568ae.  v0:= v1 @kind object;
  #L1568b0.  return v0 @kind object;
  #L1568b2.  v0:= v3.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L1568b6.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1568bc.  v0:= temp @kind object;
  #L1568be.  v0:= (`com.b.a.h`) v0 @kind object;
  #L1568c2.  if v0 == 0 then goto L1568d4;
  #L1568c6.  v1:= new `com.b.a.b.c$7`;
  #L1568ca.  call `<init>`(v1, v3, v0, v2) @signature `Lcom/b/a/b/c$7;.<init>:(Lcom/b/a/b/c;Lcom/b/a/h;Ljava/lang/reflect/Type;)V` @kind direct;
  #L1568d0.  v0:= v1 @kind object;
  #L1568d2.  goto L1568b0;
  #L1568d4.  call temp:= `a`(v3, v1) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L1568da.  v0:= temp @kind object;
  #L1568dc.  if v0 != 0 then goto L1568b0;
  #L1568e0.  call temp:= `a`(v3, v2, v1) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L1568e6.  v0:= temp @kind object;
  #L1568e8.  if v0 != 0 then goto L1568b0;
  #L1568ec.  call temp:= `b`(v3, v2, v1) @signature `Lcom/b/a/b/c;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L1568f2.  v0:= temp @kind object;
  #L1568f4.  goto L1568b0;
}
procedure `java.lang.String` `toString`(`com.b.a.b.c` v1 @kind this) @signature `Lcom/b/a/b/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L156908.  v0:= v1.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L15690c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L156912.  v0:= temp @kind object;
  #L156914.  return v0 @kind object;
}

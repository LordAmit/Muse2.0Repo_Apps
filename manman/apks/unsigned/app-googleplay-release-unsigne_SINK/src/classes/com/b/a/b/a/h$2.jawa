record `com.b.a.b.a.h$2` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@com.b.a.b.a.h$2.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/h$2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L151c78.  call temp:= `values`() @signature `Lcom/b/a/d/b;.values:()[Lcom/b/a/d/b;` @kind static;
  #L151c7e.  v0:= temp @kind object;
  #L151c80.  v0:= length @variable v0;
  #L151c82.  v0:= new `int`[v0];
  #L151c86.  `@@com.b.a.b.a.h$2.a` @type ^`int`[] := v0 @kind object;
  #Try_start0.  
  #L151c8a.  v0:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L151c8e.  v1:= `@@com.b.a.d.b.a` @type ^`com.b.a.d.b` @kind object;
  #L151c92.  call temp:= `ordinal`(v1) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L151c98.  v1:= temp;
  #L151c9a.  v2:= 1I;
  #L151c9c.  v0[v1]:= v2;
  #Try_end0.  
  #Try_start1.  
  #L151ca0.  v0:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L151ca4.  v1:= `@@com.b.a.d.b.c` @type ^`com.b.a.d.b` @kind object;
  #L151ca8.  call temp:= `ordinal`(v1) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L151cae.  v1:= temp;
  #L151cb0.  v2:= 2I;
  #L151cb2.  v0[v1]:= v2;
  #Try_end1.  
  #Try_start2.  
  #L151cb6.  v0:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L151cba.  v1:= `@@com.b.a.d.b.f` @type ^`com.b.a.d.b` @kind object;
  #L151cbe.  call temp:= `ordinal`(v1) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L151cc4.  v1:= temp;
  #L151cc6.  v2:= 3I;
  #L151cc8.  v0[v1]:= v2;
  #Try_end2.  
  #Try_start3.  
  #L151ccc.  v0:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L151cd0.  v1:= `@@com.b.a.d.b.g` @type ^`com.b.a.d.b` @kind object;
  #L151cd4.  call temp:= `ordinal`(v1) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L151cda.  v1:= temp;
  #L151cdc.  v2:= 4I;
  #L151cde.  v0[v1]:= v2;
  #Try_end3.  
  #Try_start4.  
  #L151ce2.  v0:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L151ce6.  v1:= `@@com.b.a.d.b.h` @type ^`com.b.a.d.b` @kind object;
  #L151cea.  call temp:= `ordinal`(v1) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L151cf0.  v1:= temp;
  #L151cf2.  v2:= 5I;
  #L151cf4.  v0[v1]:= v2;
  #Try_end4.  
  #Try_start5.  
  #L151cf8.  v0:= `@@com.b.a.b.a.h$2.a` @type ^`int`[] @kind object;
  #L151cfc.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L151d00.  call temp:= `ordinal`(v1) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L151d06.  v1:= temp;
  #L151d08.  v2:= 6I;
  #L151d0a.  v0[v1]:= v2;
  #Try_end5.  
  #L151d0e.  return @kind void;
  #L151d10.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L151d12.  goto L151d0e;
  #L151d14.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L151d16.  goto L151cf8;
  #L151d18.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L151d1a.  goto L151ce2;
  #L151d1c.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L151d1e.  goto L151ccc;
  #L151d20.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L151d22.  goto L151cb6;
  #L151d24.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L151d26.  goto L151ca0;
  catch `java.lang.NoSuchFieldError` @[Try_start0..Try_end0] goto L151d24;
  catch `java.lang.NoSuchFieldError` @[Try_start1..Try_end1] goto L151d20;
  catch `java.lang.NoSuchFieldError` @[Try_start2..Try_end2] goto L151d1c;
  catch `java.lang.NoSuchFieldError` @[Try_start3..Try_end3] goto L151d18;
  catch `java.lang.NoSuchFieldError` @[Try_start4..Try_end4] goto L151d14;
  catch `java.lang.NoSuchFieldError` @[Try_start5..Try_end5] goto L151d10;
}

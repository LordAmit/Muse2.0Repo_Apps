record `com.b.a.b.a.g` @kind class @AccessFlag PUBLIC_FINAL extends `com.b.a.w` @kind interface {
  `boolean` `com.b.a.b.a.g.a` @AccessFlag FINAL;
  `com.b.a.b.c` `com.b.a.b.a.g.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.g` v0 @kind this, `com.b.a.b.c` v1 @kind object, `boolean` v2 ) @signature `Lcom/b/a/b/a/g;.<init>:(Lcom/b/a/b/c;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L151b4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L151b52.  v0.`com.b.a.b.a.g.b` @type ^`com.b.a.b.c` := v1 @kind object;
  #L151b56.  v0.`com.b.a.b.a.g.a` @type ^`boolean` := v2 @kind boolean;
  #L151b5a.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.g` v1 @kind this, `com.b.a.f` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/b/a/g;.a:(Lcom/b/a/f;Ljava/lang/reflect/Type;)Lcom/b/a/v;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L151b6c.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L151b70.  if v3 == v0 then goto L151b7c;
  #L151b74.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L151b78.  if v3 != v0 then goto L151b82;
  #L151b7c.  v0:= `@@com.b.a.b.a.n.f` @type ^`com.b.a.v` @kind object;
  #L151b80.  return v0 @kind object;
  #L151b82.  call temp:= `a`(v3) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L151b88.  v0:= temp @kind object;
  #L151b8a.  call temp:= `a`(v2, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L151b90.  v0:= temp @kind object;
  #L151b92.  goto L151b80;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.g` v8 @kind this, `com.b.a.f` v9 @kind object, `com.b.a.c.a` v10 @kind object) @signature `Lcom/b/a/b/a/g;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L151ba4.  v5:= 1I;
  #L151ba6.  v3:= 0I;
  #L151ba8.  call temp:= `b`(v10) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L151bae.  v0:= temp @kind object;
  #L151bb0.  call temp:= `a`(v10) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L151bb6.  v1:= temp @kind object;
  #L151bb8.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L151bbc.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L151bc2.  v1:= temp;
  #L151bc4.  if v1 != 0 then goto L151bcc;
  #L151bc8.  v0:= 0I;
  #L151bca.  return v0 @kind object;
  #L151bcc.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L151bd2.  v1:= temp @kind object;
  #L151bd4.  call temp:= `b`(v0, v1) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)[Ljava/lang/reflect/Type;` @kind static;
  #L151bda.  v1:= temp @kind object;
  #L151bdc.  v0:= v1[v3] @kind object;
  #L151be0.  call temp:= `a`(v8, v9, v0) @signature `Lcom/b/a/b/a/g;.a:(Lcom/b/a/f;Ljava/lang/reflect/Type;)Lcom/b/a/v;` @kind direct;
  #L151be6.  v4:= temp @kind object;
  #L151be8.  v0:= v1[v5] @kind object;
  #L151bec.  call temp:= `a`(v0) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L151bf2.  v0:= temp @kind object;
  #L151bf4.  call temp:= `a`(v9, v0) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L151bfa.  v6:= temp @kind object;
  #L151bfc.  v0:= v8.`com.b.a.b.a.g.b` @type ^`com.b.a.b.c` @kind object;
  #L151c00.  call temp:= `a`(v0, v10) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @kind virtual;
  #L151c06.  v7:= temp @kind object;
  #L151c08.  v0:= new `com.b.a.b.a.g$a`;
  #L151c0c.  v3:= v1[v3] @kind object;
  #L151c10.  v5:= v1[v5] @kind object;
  #L151c14.  v1:= v8 @kind object;
  #L151c16.  v2:= v9 @kind object;
  #L151c18.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/b/a/b/a/g$a;.<init>:(Lcom/b/a/b/a/g;Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @kind direct;
  #L151c1e.  goto L151bca;
}

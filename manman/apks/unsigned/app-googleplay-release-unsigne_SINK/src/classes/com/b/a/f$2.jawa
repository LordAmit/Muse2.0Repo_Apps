record `com.b.a.f$2` @kind class @AccessFlag  extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.f$2.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.f$2` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/f$2;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L158aec.  v0.`com.b.a.f$2.a` @type ^`com.b.a.f` := v1 @kind object;
  #L158af0.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L158af6.  return @kind void;
}
procedure `java.lang.Double` `a`(`com.b.a.f$2` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/a;)Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158b08.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L158b0e.  v0:= temp @kind object;
  #L158b10.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L158b14.  if v0 != v1 then goto L158b22;
  #L158b18.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L158b1e.  v0:= 0I;
  #L158b20.  return v0 @kind object;
  #L158b22.  call temp:= `k`(v3) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L158b28.  v0:= temp @kind wide;
  #L158b2a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L158b30.  v0:= temp @kind object;
  #L158b32.  goto L158b20;
}
procedure `void` `a`(`com.b.a.f$2` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Number` v4 @kind object) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158b44.  if v4 != 0 then goto L158b50;
  #L158b48.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L158b4e.  return @kind void;
  #L158b50.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L158b56.  v0:= temp @kind wide;
  #L158b58.  call `a`(v0) @signature `Lcom/b/a/f;.a:(D)V` @kind static;
  #L158b5e.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/Number;)Lcom/b/a/d/c;` @kind virtual;
  #L158b64.  goto L158b4e;
}
procedure `void` `a`(`com.b.a.f$2` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L158b78.  v2:= (`java.lang.Number`) v2 @kind object;
  #L158b7c.  call `a`(v0, v1, v2) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @kind virtual;
  #L158b82.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$2` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$2;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L158b94.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/a;)Ljava/lang/Double;` @kind virtual;
  #L158b9a.  v0:= temp @kind object;
  #L158b9c.  return v0 @kind object;
}

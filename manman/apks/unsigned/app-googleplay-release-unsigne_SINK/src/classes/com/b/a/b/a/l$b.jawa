record `com.b.a.b.a.l$b` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `com.b.a.c.a` `com.b.a.b.a.l$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.b.a.l$b.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.b.a.b.a.l$b.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.s` `com.b.a.b.a.l$b.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.k` `com.b.a.b.a.l$b.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.l$b` v2 @kind this, `java.lang.Object` v3 @kind object, `com.b.a.c.a` v4 @kind object, `boolean` v5 , `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/a/l$b;.<init>:(Ljava/lang/Object;Lcom/b/a/c/a;ZLjava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L152864.  v1:= 0I;
  #L152866.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15286c.  v0:= instanceof @variable v3 @type ^`com.b.a.s` @kind boolean;
  #L152870.  if v0 == 0 then goto L1528b4;
  #L152874.  v0:= v3 @kind object;
  #L152876.  v0:= (`com.b.a.s`) v0 @kind object;
  #L15287a.  v2.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` := v0 @kind object;
  #L15287e.  v0:= instanceof @variable v3 @type ^`com.b.a.k` @kind boolean;
  #L152882.  if v0 == 0 then goto L1528b8;
  #L152886.  v3:= (`com.b.a.k`) v3 @kind object;
  #L15288a.  v2.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` := v3 @kind object;
  #L15288e.  v0:= v2.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` @kind object;
  #L152892.  if v0 != 0 then goto L15289e;
  #L152896.  v0:= v2.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` @kind object;
  #L15289a.  if v0 == 0 then goto L1528bc;
  #L15289e.  v0:= 1I;
  #L1528a0.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L1528a6.  v2.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` := v4 @kind object;
  #L1528aa.  v2.`com.b.a.b.a.l$b.b` @type ^`boolean` := v5 @kind boolean;
  #L1528ae.  v2.`com.b.a.b.a.l$b.c` @type ^`java.lang.Class` := v6 @kind object;
  #L1528b2.  return @kind void;
  #L1528b4.  v0:= v1 @kind object;
  #L1528b6.  goto L15287a;
  #L1528b8.  v3:= v1 @kind object;
  #L1528ba.  goto L15288a;
  #L1528bc.  v0:= 0I;
  #L1528be.  goto L1528a0;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.l$b` v6 @kind this, `com.b.a.f` v7 @kind object, `com.b.a.c.a` v8 @kind object) @signature `Lcom/b/a/b/a/l$b;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1528d0.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L1528d4.  if v0 == 0 then goto L15292c;
  #L1528d8.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L1528dc.  call temp:= `equals`(v0, v8) @signature `Lcom/b/a/c/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1528e2.  v0:= temp;
  #L1528e4.  if v0 != 0 then goto L152908;
  #L1528e8.  v0:= v6.`com.b.a.b.a.l$b.b` @type ^`boolean` @kind boolean;
  #L1528ec.  if v0 == 0 then goto L152928;
  #L1528f0.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L1528f4.  call temp:= `b`(v0) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1528fa.  v0:= temp @kind object;
  #L1528fc.  call temp:= `a`(v8) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L152902.  v1:= temp @kind object;
  #L152904.  if v0 != v1 then goto L152928;
  #L152908.  v0:= 1I;
  #L15290a.  if v0 == 0 then goto L152942;
  #L15290e.  v0:= new `com.b.a.b.a.l`;
  #L152912.  v1:= v6.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` @kind object;
  #L152916.  v2:= v6.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` @kind object;
  #L15291a.  v3:= v7 @kind object;
  #L15291c.  v4:= v8 @kind object;
  #L15291e.  v5:= v6 @kind object;
  #L152920.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/b/a/b/a/l;.<init>:(Lcom/b/a/s;Lcom/b/a/k;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/w;)V` @kind direct;
  #L152926.  return v0 @kind object;
  #L152928.  v0:= 0I;
  #L15292a.  goto L15290a;
  #L15292c.  v0:= v6.`com.b.a.b.a.l$b.c` @type ^`java.lang.Class` @kind object;
  #L152930.  call temp:= `a`(v8) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L152936.  v1:= temp @kind object;
  #L152938.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L15293e.  v0:= temp;
  #L152940.  goto L15290a;
  #L152942.  v0:= 0I;
  #L152944.  goto L152926;
}

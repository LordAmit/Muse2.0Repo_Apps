record `com.b.a.a` @kind class @AccessFlag FINAL extends `com.b.a.k` @kind interface, `com.b.a.s` @kind interface {
  `java.text.DateFormat` `com.b.a.a.a` @AccessFlag PRIVATE_FINAL;
  `java.text.DateFormat` `com.b.a.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this) @signature `Lcom/b/a/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L14cbcc.  v1:= 2I;
  #L14cbce.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L14cbd2.  call temp:= `getDateTimeInstance`(v1, v1, v0) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L14cbd8.  v0:= temp @kind object;
  #L14cbda.  call temp:= `getDateTimeInstance`(v1, v1) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L14cbe0.  v1:= temp @kind object;
  #L14cbe2.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L14cbe8.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/b/a/a;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L14cbfc.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L14cc00.  call temp:= `getDateTimeInstance`(v3, v4, v0) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L14cc06.  v0:= temp @kind object;
  #L14cc08.  call temp:= `getDateTimeInstance`(v3, v4) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L14cc0e.  v1:= temp @kind object;
  #L14cc10.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L14cc16.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/b/a/a;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L14cc28.  v0:= new `java.text.SimpleDateFormat`;
  #L14cc2c.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L14cc30.  call `<init>`(v0, v3, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L14cc36.  v1:= new `java.text.SimpleDateFormat`;
  #L14cc3a.  call `<init>`(v1, v3) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14cc40.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L14cc46.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v0 @kind this, `java.text.DateFormat` v1 @kind object, `java.text.DateFormat` v2 @kind object) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14cc58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14cc5e.  v0.`com.b.a.a.a` @type ^`java.text.DateFormat` := v1 @kind object;
  #L14cc62.  v0.`com.b.a.a.b` @type ^`java.text.DateFormat` := v2 @kind object;
  #L14cc66.  return @kind void;
}
procedure `java.util.Date` `a`(`com.b.a.a` v4 @kind this, `com.b.a.l` v5 @kind object) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;)Ljava/util/Date;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14cc78.  v1:= v4.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L14cc7c.  @monitorenter v1
  #Try_start0.  
  #L14cc7e.  v0:= v4.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L14cc82.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L14cc88.  v2:= temp @kind object;
  #L14cc8a.  call temp:= `parse`(v0, v2) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #Try_end0.  
  #L14cc90.  v0:= temp @kind object;
  #Try_start1.  
  #L14cc92.  @monitorexit v1
  #Try_end1.  
  #L14cc94.  return v0 @kind object;
  #L14cc96.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #Try_start2.  
  #L14cc98.  v0:= v4.`com.b.a.a.a` @type ^`java.text.DateFormat` @kind object;
  #L14cc9c.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L14cca2.  v2:= temp @kind object;
  #L14cca4.  call temp:= `parse`(v0, v2) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #Try_end2.  
  #L14ccaa.  v0:= temp @kind object;
  #Try_start3.  
  #L14ccac.  @monitorexit v1
  #L14ccae.  goto L14cc94;
  #L14ccb0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14ccb2.  @monitorexit v1
  #Try_end3.  
  #L14ccb4.  throw v0;
  #L14ccb6.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #Try_start4.  
  #L14ccb8.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L14ccbe.  v0:= temp @kind object;
  #L14ccc0.  v2:= new `java.text.ParsePosition`;
  #L14ccc4.  v3:= 0I;
  #L14ccc6.  call `<init>`(v2, v3) @signature `Ljava/text/ParsePosition;.<init>:(I)V` @kind direct;
  #L14cccc.  call temp:= `a`(v0, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @kind static;
  #Try_end4.  
  #L14ccd2.  v0:= temp @kind object;
  #Try_start5.  
  #L14ccd4.  @monitorexit v1
  #L14ccd6.  goto L14cc94;
  #L14ccd8.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #L14ccda.  v2:= new `com.b.a.t`;
  #L14ccde.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L14cce4.  v3:= temp @kind object;
  #L14cce6.  call `<init>`(v2, v3, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L14ccec.  throw v2;
  #Try_end5.  
  catch `java.text.ParseException` @[Try_start0..Try_end0] goto L14cc96;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L14ccb0;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L14ccb0;
  catch `java.text.ParseException` @[Try_start2..Try_end2] goto L14ccb6;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L14ccb0;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L14ccb0;
  catch `java.text.ParseException` @[Try_start4..Try_end4] goto L14ccd8;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L14ccb0;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L14ccb0;
}
procedure `com.b.a.l` `a`(`com.b.a.a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.r` v4 @kind object) @signature `Lcom/b/a/a;.a:(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L14cd44.  v2:= (`java.util.Date`) v2 @kind object;
  #L14cd48.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/b/a/a;.a:(Ljava/util/Date;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @kind virtual;
  #L14cd4e.  v0:= temp @kind object;
  #L14cd50.  return v0 @kind object;
}
procedure `com.b.a.l` `a`(`com.b.a.a` v3 @kind this, `java.util.Date` v4 @kind object, `java.lang.reflect.Type` v5 @kind object, `com.b.a.r` v6 @kind object) @signature `Lcom/b/a/a;.a:(Ljava/util/Date;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14cd64.  v1:= v3.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L14cd68.  @monitorenter v1
  #Try_start0.  
  #L14cd6a.  v0:= v3.`com.b.a.a.a` @type ^`java.text.DateFormat` @kind object;
  #L14cd6e.  call temp:= `format`(v0, v4) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L14cd74.  v0:= temp @kind object;
  #L14cd76.  v2:= new `com.b.a.q`;
  #L14cd7a.  call `<init>`(v2, v0) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14cd80.  @monitorexit v1
  #L14cd82.  return v2 @kind object;
  #L14cd84.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14cd86.  @monitorexit v1
  #Try_end0.  
  #L14cd88.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L14cd84;
}
procedure `java.util.Date` `a`(`com.b.a.a` v4 @kind this, `com.b.a.l` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `com.b.a.j` v7 @kind object) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14cda8.  v0:= instanceof @variable v5 @type ^`com.b.a.q` @kind boolean;
  #L14cdac.  if v0 != 0 then goto L14cdc0;
  #L14cdb0.  v0:= new `com.b.a.p`;
  #L14cdb4.  v1:= "The date should be a string value" @kind object;
  #L14cdb8.  call `<init>`(v0, v1) @signature `Lcom/b/a/p;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14cdbe.  throw v0;
  #L14cdc0.  call temp:= `a`(v4, v5) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;)Ljava/util/Date;` @kind direct;
  #L14cdc6.  v0:= temp @kind object;
  #L14cdc8.  v1:= constclass @type ^`java.util.Date` @kind object;
  #L14cdcc.  if v6 != v1 then goto L14cdd2;
  #L14cdd0.  return v0 @kind object;
  #L14cdd2.  v1:= constclass @type ^`java.sql.Timestamp` @kind object;
  #L14cdd6.  if v6 != v1 then goto L14cdf0;
  #L14cdda.  v1:= new `java.sql.Timestamp`;
  #L14cdde.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L14cde4.  v2:= temp @kind wide;
  #L14cde6.  call `<init>`(v1, v2) @signature `Ljava/sql/Timestamp;.<init>:(J)V` @kind direct;
  #L14cdec.  v0:= v1 @kind object;
  #L14cdee.  goto L14cdd0;
  #L14cdf0.  v1:= constclass @type ^`java.sql.Date` @kind object;
  #L14cdf4.  if v6 != v1 then goto L14ce0e;
  #L14cdf8.  v1:= new `java.sql.Date`;
  #L14cdfc.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L14ce02.  v2:= temp @kind wide;
  #L14ce04.  call `<init>`(v1, v2) @signature `Ljava/sql/Date;.<init>:(J)V` @kind direct;
  #L14ce0a.  v0:= v1 @kind object;
  #L14ce0c.  goto L14cdd0;
  #L14ce0e.  v0:= new `java.lang.IllegalArgumentException`;
  #L14ce12.  v1:= new `java.lang.StringBuilder`;
  #L14ce16.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14ce1c.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14ce22.  v2:= temp @kind object;
  #L14ce24.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ce2a.  v1:= temp @kind object;
  #L14ce2c.  v2:= " cannot deserialize to " @kind object;
  #L14ce30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ce36.  v1:= temp @kind object;
  #L14ce38.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ce3e.  v1:= temp @kind object;
  #L14ce40.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14ce46.  v1:= temp @kind object;
  #L14ce48.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14ce4e.  throw v0;
}
procedure `java.lang.Object` `b`(`com.b.a.a` v1 @kind this, `com.b.a.l` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.j` v4 @kind object) @signature `Lcom/b/a/a;.b:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L14ce60.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/util/Date;` @kind virtual;
  #L14ce66.  v0:= temp @kind object;
  #L14ce68.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.b.a.a` v3 @kind this) @signature `Lcom/b/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14ce7c.  v0:= new `java.lang.StringBuilder`;
  #L14ce80.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14ce86.  v1:= constclass @type ^`com.b.a.a` @kind object;
  #L14ce8a.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L14ce90.  v1:= temp @kind object;
  #L14ce92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ce98.  v1:= 40I;
  #L14ce9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14cea2.  v1:= temp @kind object;
  #L14cea4.  v2:= v3.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L14cea8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14ceae.  v2:= temp @kind object;
  #L14ceb0.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L14ceb6.  v2:= temp @kind object;
  #L14ceb8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14cebe.  v1:= temp @kind object;
  #L14cec0.  v2:= 41I;
  #L14cec4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14ceca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14ced0.  v0:= temp @kind object;
  #L14ced2.  return v0 @kind object;
}

record `com.b.a.c.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.b.a.c.a.a` @AccessFlag FINAL;
  `java.lang.reflect.Type` `com.b.a.c.a.b` @AccessFlag FINAL;
  `int` `com.b.a.c.a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L15828c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L158292.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L158298.  v0:= temp @kind object;
  #L15829a.  call temp:= `a`(v0) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L1582a0.  v0:= temp @kind object;
  #L1582a2.  v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L1582a6.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1582aa.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L1582b0.  v0:= temp @kind object;
  #L1582b2.  v1.`com.b.a.c.a.a` @type ^`java.lang.Class` := v0 @kind object;
  #L1582b6.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1582ba.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1582c0.  v0:= temp;
  #L1582c2.  v1.`com.b.a.c.a.c` @type ^`int` := v0;
  #L1582c6.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.c.a` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1582d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1582de.  call temp:= `a`(v2) @signature `Lcom/b/a/b/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1582e4.  v0:= temp @kind object;
  #L1582e6.  v0:= (`java.lang.reflect.Type`) v0 @kind object;
  #L1582ea.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L1582f0.  v0:= temp @kind object;
  #L1582f2.  v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L1582f6.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1582fa.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L158300.  v0:= temp @kind object;
  #L158302.  v1.`com.b.a.c.a.a` @type ^`java.lang.Class` := v0 @kind object;
  #L158306.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L15830a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L158310.  v0:= temp;
  #L158312.  v1.`com.b.a.c.a.c` @type ^`int` := v0;
  #L158316.  return @kind void;
}
procedure `com.b.a.c.a` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L158328.  v0:= new `com.b.a.c.a`;
  #L15832c.  call `<init>`(v0, v1) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L158332.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.Class` v2 @kind object) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L158344.  call temp:= `getGenericSuperclass`(v2) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L15834a.  v0:= temp @kind object;
  #L15834c.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L158350.  if v1 == 0 then goto L158364;
  #L158354.  v0:= new `java.lang.RuntimeException`;
  #L158358.  v1:= "Missing type parameter." @kind object;
  #L15835c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L158362.  throw v0;
  #L158364.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L158368.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L15836e.  v0:= temp @kind object;
  #L158370.  v1:= 0I;
  #L158372.  v0:= v0[v1] @kind object;
  #L158376.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L15837c.  v0:= temp @kind object;
  #L15837e.  return v0 @kind object;
}
procedure `com.b.a.c.a` `b`(`java.lang.Class` v1 @kind object) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L158390.  v0:= new `com.b.a.c.a`;
  #L158394.  call `<init>`(v0, v1) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L15839a.  return v0 @kind object;
}
procedure `java.lang.Class` `a`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1583ac.  v0:= v1.`com.b.a.c.a.a` @type ^`java.lang.Class` @kind object;
  #L1583b0.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `b`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1583c4.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1583c8.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.b.a.c.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/c/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1583dc.  v0:= instanceof @variable v3 @type ^`com.b.a.c.a` @kind boolean;
  #L1583e0.  if v0 == 0 then goto L158400;
  #L1583e4.  v0:= v2.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1583e8.  v3:= (`com.b.a.c.a`) v3 @kind object;
  #L1583ec.  v1:= v3.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L1583f0.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L1583f6.  v0:= temp;
  #L1583f8.  if v0 == 0 then goto L158400;
  #L1583fc.  v0:= 1I;
  #L1583fe.  return v0;
  #L158400.  v0:= 0I;
  #L158402.  goto L1583fe;
}
procedure `int` `hashCode`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L158414.  v0:= v1.`com.b.a.c.a.c` @type ^`int`;
  #L158418.  return v0;
}
procedure `java.lang.String` `toString`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15842c.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L158430.  call temp:= `f`(v0) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L158436.  v0:= temp @kind object;
  #L158438.  return v0 @kind object;
}

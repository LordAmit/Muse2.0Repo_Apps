record `com.b.a.f$6` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.v` `com.b.a.f$6.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.f$6` v0 @kind this, `com.b.a.v` v1 @kind object) @signature `Lcom/b/a/f$6;.<init>:(Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L158de4.  v0.`com.b.a.f$6.a` @type ^`com.b.a.v` := v1 @kind object;
  #L158de8.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L158dee.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicLongArray` `a`(`com.b.a.f$6` v8 @kind this, `com.b.a.d.a` v9 @kind object) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicLongArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L158e00.  v2:= new `java.util.ArrayList`;
  #L158e04.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L158e0a.  call `a`(v9) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L158e10.  call temp:= `e`(v9) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L158e16.  v0:= temp;
  #L158e18.  if v0 == 0 then goto L158e44;
  #L158e1c.  v0:= v8.`com.b.a.f$6.a` @type ^`com.b.a.v` @kind object;
  #L158e20.  call temp:= `b`(v0, v9) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L158e26.  v0:= temp @kind object;
  #L158e28.  v0:= (`java.lang.Number`) v0 @kind object;
  #L158e2c.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L158e32.  v0:= temp @kind wide;
  #L158e34.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L158e3a.  v0:= temp @kind object;
  #L158e3c.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L158e42.  goto L158e10;
  #L158e44.  call `b`(v9) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L158e4a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L158e50.  v3:= temp;
  #L158e52.  v4:= new `java.util.concurrent.atomic.AtomicLongArray`;
  #L158e56.  call `<init>`(v4, v3) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.<init>:(I)V` @kind direct;
  #L158e5c.  v0:= 0I;
  #L158e5e.  v1:= v0;
  #L158e60.  if v1 >= v3 then goto L158e86;
  #L158e64.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L158e6a.  v0:= temp @kind object;
  #L158e6c.  v0:= (`java.lang.Long`) v0 @kind object;
  #L158e70.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L158e76.  v6:= temp @kind wide;
  #L158e78.  call `set`(v4, v1, v6) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.set:(IJ)V` @kind virtual;
  #L158e7e.  v0:= v1 + 1;
  #L158e82.  v1:= v0;
  #L158e84.  goto L158e60;
  #L158e86.  return v4 @kind object;
}
procedure `void` `a`(`com.b.a.f$6` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L158e98.  v2:= (`java.util.concurrent.atomic.AtomicLongArray`) v2 @kind object;
  #L158e9c.  call `a`(v0, v1, v2) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicLongArray;)V` @kind virtual;
  #L158ea2.  return @kind void;
}
procedure `void` `a`(`com.b.a.f$6` v6 @kind this, `com.b.a.d.c` v7 @kind object, `java.util.concurrent.atomic.AtomicLongArray` v8 @kind object) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/c;Ljava/util/concurrent/atomic/AtomicLongArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L158eb4.  call temp:= `b`(v7) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L158eba.  v0:= 0I;
  #L158ebc.  call temp:= `length`(v8) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.length:()I` @kind virtual;
  #L158ec2.  v1:= temp;
  #L158ec4.  if v0 >= v1 then goto L158ee8;
  #L158ec8.  v2:= v6.`com.b.a.f$6.a` @type ^`com.b.a.v` @kind object;
  #L158ecc.  call temp:= `get`(v8, v0) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.get:(I)J` @kind virtual;
  #L158ed2.  v4:= temp @kind wide;
  #L158ed4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L158eda.  v3:= temp @kind object;
  #L158edc.  call `a`(v2, v7, v3) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L158ee2.  v0:= v0 + 1;
  #L158ee6.  goto L158ec4;
  #L158ee8.  call temp:= `c`(v7) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L158eee.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$6` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$6;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L158f00.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/f$6;.a:(Lcom/b/a/d/a;)Ljava/util/concurrent/atomic/AtomicLongArray;` @kind virtual;
  #L158f06.  v0:= temp @kind object;
  #L158f08.  return v0 @kind object;
}

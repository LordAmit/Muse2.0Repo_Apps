record `com.b.a.f$3` @kind class @AccessFlag  extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.f$3.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.f$3` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/f$3;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L158bb0.  v0.`com.b.a.f$3.a` @type ^`com.b.a.f` := v1 @kind object;
  #L158bb4.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L158bba.  return @kind void;
}
procedure `java.lang.Float` `a`(`com.b.a.f$3` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/a;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158bcc.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L158bd2.  v0:= temp @kind object;
  #L158bd4.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L158bd8.  if v0 != v1 then goto L158be6;
  #L158bdc.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L158be2.  v0:= 0I;
  #L158be4.  return v0 @kind object;
  #L158be6.  call temp:= `k`(v3) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L158bec.  v0:= temp @kind wide;
  #L158bee.  v0:= (`float`) v0 @kind d2f;
  #L158bf0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L158bf6.  v0:= temp @kind object;
  #L158bf8.  goto L158be4;
}
procedure `void` `a`(`com.b.a.f$3` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Number` v4 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158c0c.  if v4 != 0 then goto L158c18;
  #L158c10.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L158c16.  return @kind void;
  #L158c18.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L158c1e.  v0:= temp;
  #L158c20.  v0:= (`double`) v0 @kind f2d;
  #L158c22.  call `a`(v0) @signature `Lcom/b/a/f;.a:(D)V` @kind static;
  #L158c28.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/Number;)Lcom/b/a/d/c;` @kind virtual;
  #L158c2e.  goto L158c16;
}
procedure `void` `a`(`com.b.a.f$3` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L158c40.  v2:= (`java.lang.Number`) v2 @kind object;
  #L158c44.  call `a`(v0, v1, v2) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @kind virtual;
  #L158c4a.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$3` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$3;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L158c5c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/f$3;.a:(Lcom/b/a/d/a;)Ljava/lang/Float;` @kind virtual;
  #L158c62.  v0:= temp @kind object;
  #L158c64.  return v0 @kind object;
}

record `com.b.a.b.a.g$a` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.b.a.g` `com.b.a.b.a.g$a.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.g$a.b` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.g$a.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.h` `com.b.a.b.a.g$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.g$a` v1 @kind this, `com.b.a.b.a.g` v2 @kind object, `com.b.a.f` v3 @kind object, `java.lang.reflect.Type` v4 @kind object, `com.b.a.v` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `com.b.a.v` v7 @kind object, `com.b.a.b.h` v8 @kind object) @signature `Lcom/b/a/b/a/g$a;.<init>:(Lcom/b/a/b/a/g;Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L151734.  v1.`com.b.a.b.a.g$a.a` @type ^`com.b.a.b.a.g` := v2 @kind object;
  #L151738.  call `<init>`(v1) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L15173e.  v0:= new `com.b.a.b.a.m`;
  #L151742.  call `<init>`(v0, v3, v5, v4) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L151748.  v1.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` := v0 @kind object;
  #L15174c.  v0:= new `com.b.a.b.a.m`;
  #L151750.  call `<init>`(v0, v3, v7, v6) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L151756.  v1.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` := v0 @kind object;
  #L15175a.  v1.`com.b.a.b.a.g$a.d` @type ^`com.b.a.b.h` := v8 @kind object;
  #L15175e.  return @kind void;
}
procedure `java.lang.String` `a`(`com.b.a.b.a.g$a` v2 @kind this, `com.b.a.l` v3 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/l;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L151770.  call temp:= `i`(v3) @signature `Lcom/b/a/l;.i:()Z` @kind virtual;
  #L151776.  v0:= temp;
  #L151778.  if v0 == 0 then goto L1517e2;
  #L15177c.  call temp:= `m`(v3) @signature `Lcom/b/a/l;.m:()Lcom/b/a/q;` @kind virtual;
  #L151782.  v0:= temp @kind object;
  #L151784.  call temp:= `p`(v0) @signature `Lcom/b/a/q;.p:()Z` @kind virtual;
  #L15178a.  v1:= temp;
  #L15178c.  if v1 == 0 then goto L1517a2;
  #L151790.  call temp:= `a`(v0) @signature `Lcom/b/a/q;.a:()Ljava/lang/Number;` @kind virtual;
  #L151796.  v0:= temp @kind object;
  #L151798.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15179e.  v0:= temp @kind object;
  #L1517a0.  return v0 @kind object;
  #L1517a2.  call temp:= `o`(v0) @signature `Lcom/b/a/q;.o:()Z` @kind virtual;
  #L1517a8.  v1:= temp;
  #L1517aa.  if v1 == 0 then goto L1517c0;
  #L1517ae.  call temp:= `f`(v0) @signature `Lcom/b/a/q;.f:()Z` @kind virtual;
  #L1517b4.  v0:= temp;
  #L1517b6.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L1517bc.  v0:= temp @kind object;
  #L1517be.  goto L1517a0;
  #L1517c0.  call temp:= `q`(v0) @signature `Lcom/b/a/q;.q:()Z` @kind virtual;
  #L1517c6.  v1:= temp;
  #L1517c8.  if v1 == 0 then goto L1517d6;
  #L1517cc.  call temp:= `b`(v0) @signature `Lcom/b/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L1517d2.  v0:= temp @kind object;
  #L1517d4.  goto L1517a0;
  #L1517d6.  v0:= new `java.lang.AssertionError`;
  #L1517da.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1517e0.  throw v0;
  #L1517e2.  call temp:= `j`(v3) @signature `Lcom/b/a/l;.j:()Z` @kind virtual;
  #L1517e8.  v0:= temp;
  #L1517ea.  if v0 == 0 then goto L1517f4;
  #L1517ee.  v0:= "null" @kind object;
  #L1517f2.  goto L1517a0;
  #L1517f4.  v0:= new `java.lang.AssertionError`;
  #L1517f8.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1517fe.  throw v0;
}
procedure `java.util.Map` `a`(`com.b.a.b.a.g$a` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/a;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L151810.  call temp:= `f`(v5) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L151816.  v1:= temp @kind object;
  #L151818.  v0:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L15181c.  if v1 != v0 then goto L15182a;
  #L151820.  call `j`(v5) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L151826.  v0:= 0I;
  #L151828.  return v0 @kind object;
  #L15182a.  v0:= v4.`com.b.a.b.a.g$a.d` @type ^`com.b.a.b.h` @kind object;
  #L15182e.  call temp:= `a`(v0) @signature `Lcom/b/a/b/h;.a:()Ljava/lang/Object;` @kind interface;
  #L151834.  v0:= temp @kind object;
  #L151836.  v0:= (`java.util.Map`) v0 @kind object;
  #L15183a.  v2:= `@@com.b.a.d.b.a` @type ^`com.b.a.d.b` @kind object;
  #L15183e.  if v1 != v2 then goto L1518c0;
  #L151842.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L151848.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L15184e.  v1:= temp;
  #L151850.  if v1 == 0 then goto L1518b8;
  #L151854.  call `a`(v5) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L15185a.  v1:= v4.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L15185e.  call temp:= `b`(v1, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L151864.  v1:= temp @kind object;
  #L151866.  v2:= v4.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L15186a.  call temp:= `b`(v2, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L151870.  v2:= temp @kind object;
  #L151872.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L151878.  v2:= temp @kind object;
  #L15187a.  if v2 == 0 then goto L1518b0;
  #L15187e.  v0:= new `com.b.a.t`;
  #L151882.  v2:= new `java.lang.StringBuilder`;
  #L151886.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15188c.  v3:= "duplicate key: " @kind object;
  #L151890.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151896.  v2:= temp @kind object;
  #L151898.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15189e.  v1:= temp @kind object;
  #L1518a0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1518a6.  v1:= temp @kind object;
  #L1518a8.  call `<init>`(v0, v1) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1518ae.  throw v0;
  #L1518b0.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L1518b6.  goto L151848;
  #L1518b8.  call `b`(v5) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L1518be.  goto L151828;
  #L1518c0.  call `c`(v5) @signature `Lcom/b/a/d/a;.c:()V` @kind virtual;
  #L1518c6.  call temp:= `e`(v5) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L1518cc.  v1:= temp;
  #L1518ce.  if v1 == 0 then goto L151932;
  #L1518d2.  v1:= `@@com.b.a.b.e.a` @type ^`com.b.a.b.e` @kind object;
  #L1518d6.  call `a`(v1, v5) @signature `Lcom/b/a/b/e;.a:(Lcom/b/a/d/a;)V` @kind virtual;
  #L1518dc.  v1:= v4.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L1518e0.  call temp:= `b`(v1, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L1518e6.  v1:= temp @kind object;
  #L1518e8.  v2:= v4.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L1518ec.  call temp:= `b`(v2, v5) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L1518f2.  v2:= temp @kind object;
  #L1518f4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1518fa.  v2:= temp @kind object;
  #L1518fc.  if v2 == 0 then goto L1518c6;
  #L151900.  v0:= new `com.b.a.t`;
  #L151904.  v2:= new `java.lang.StringBuilder`;
  #L151908.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15190e.  v3:= "duplicate key: " @kind object;
  #L151912.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151918.  v2:= temp @kind object;
  #L15191a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151920.  v1:= temp @kind object;
  #L151922.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151928.  v1:= temp @kind object;
  #L15192a.  call `<init>`(v0, v1) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L151930.  throw v0;
  #L151932.  call `d`(v5) @signature `Lcom/b/a/d/a;.d:()V` @kind virtual;
  #L151938.  goto L151828;
}
procedure `void` `a`(`com.b.a.b.a.g$a` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L15194c.  v2:= (`java.util.Map`) v2 @kind object;
  #L151950.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/util/Map;)V` @kind virtual;
  #L151956.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.g$a` v8 @kind this, `com.b.a.d.c` v9 @kind object, `java.util.Map` v10 @kind object) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/c;Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L151968.  v2:= 0I;
  #L15196a.  if v10 != 0 then goto L151976;
  #L15196e.  call temp:= `f`(v9) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L151974.  return @kind void;
  #L151976.  v0:= v8.`com.b.a.b.a.g$a.a` @type ^`com.b.a.b.a.g` @kind object;
  #L15197a.  v0:= v0.`com.b.a.b.a.g.a` @type ^`boolean` @kind boolean;
  #L15197e.  if v0 != 0 then goto L1519e2;
  #L151982.  call temp:= `d`(v9) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L151988.  call temp:= `entrySet`(v10) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L15198e.  v0:= temp @kind object;
  #L151990.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L151996.  v1:= temp @kind object;
  #L151998.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15199e.  v0:= temp;
  #L1519a0.  if v0 == 0 then goto L1519da;
  #L1519a4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1519aa.  v0:= temp @kind object;
  #L1519ac.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L1519b0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1519b6.  v2:= temp @kind object;
  #L1519b8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1519be.  v2:= temp @kind object;
  #L1519c0.  call temp:= `a`(v9, v2) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L1519c6.  v2:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L1519ca.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1519d0.  v0:= temp @kind object;
  #L1519d2.  call `a`(v2, v9, v0) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1519d8.  goto L151998;
  #L1519da.  call temp:= `e`(v9) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L1519e0.  goto L151974;
  #L1519e2.  v3:= new `java.util.ArrayList`;
  #L1519e6.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1519ec.  v0:= temp;
  #L1519ee.  call `<init>`(v3, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1519f4.  v4:= new `java.util.ArrayList`;
  #L1519f8.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1519fe.  v0:= temp;
  #L151a00.  call `<init>`(v4, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L151a06.  call temp:= `entrySet`(v10) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L151a0c.  v0:= temp @kind object;
  #L151a0e.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L151a14.  v5:= temp @kind object;
  #L151a16.  v1:= v2;
  #L151a18.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L151a1e.  v0:= temp;
  #L151a20.  if v0 == 0 then goto L151a7c;
  #L151a24.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L151a2a.  v0:= temp @kind object;
  #L151a2c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L151a30.  v6:= v8.`com.b.a.b.a.g$a.b` @type ^`com.b.a.v` @kind object;
  #L151a34.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L151a3a.  v7:= temp @kind object;
  #L151a3c.  call temp:= `a`(v6, v7) @signature `Lcom/b/a/v;.a:(Ljava/lang/Object;)Lcom/b/a/l;` @kind virtual;
  #L151a42.  v6:= temp @kind object;
  #L151a44.  call temp:= `add`(v3, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L151a4a.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L151a50.  v0:= temp @kind object;
  #L151a52.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L151a58.  call temp:= `g`(v6) @signature `Lcom/b/a/l;.g:()Z` @kind virtual;
  #L151a5e.  v0:= temp;
  #L151a60.  if v0 != 0 then goto L151a70;
  #L151a64.  call temp:= `h`(v6) @signature `Lcom/b/a/l;.h:()Z` @kind virtual;
  #L151a6a.  v0:= temp;
  #L151a6c.  if v0 == 0 then goto L151a78;
  #L151a70.  v0:= 1I;
  #L151a72.  v0:= v0 ^| v1 @kind int;
  #L151a74.  v1:= v0;
  #L151a76.  goto L151a18;
  #L151a78.  v0:= v2;
  #L151a7a.  goto L151a72;
  #L151a7c.  if v1 == 0 then goto L151ad2;
  #L151a80.  call temp:= `b`(v9) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L151a86.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L151a8c.  v0:= temp;
  #L151a8e.  if v2 >= v0 then goto L151ac8;
  #L151a92.  call temp:= `b`(v9) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L151a98.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L151a9e.  v0:= temp @kind object;
  #L151aa0.  v0:= (`com.b.a.l`) v0 @kind object;
  #L151aa4.  call `a`(v0, v9) @signature `Lcom/b/a/b/j;.a:(Lcom/b/a/l;Lcom/b/a/d/c;)V` @kind static;
  #L151aaa.  v0:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L151aae.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L151ab4.  v1:= temp @kind object;
  #L151ab6.  call `a`(v0, v9, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L151abc.  call temp:= `c`(v9) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L151ac2.  v2:= v2 + 1;
  #L151ac6.  goto L151a86;
  #L151ac8.  call temp:= `c`(v9) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L151ace.  goto L151974;
  #L151ad2.  call temp:= `d`(v9) @signature `Lcom/b/a/d/c;.d:()Lcom/b/a/d/c;` @kind virtual;
  #L151ad8.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L151ade.  v0:= temp;
  #L151ae0.  if v2 >= v0 then goto L151b16;
  #L151ae4.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L151aea.  v0:= temp @kind object;
  #L151aec.  v0:= (`com.b.a.l`) v0 @kind object;
  #L151af0.  call temp:= `a`(v8, v0) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/l;)Ljava/lang/String;` @kind direct;
  #L151af6.  v0:= temp @kind object;
  #L151af8.  call temp:= `a`(v9, v0) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L151afe.  v0:= v8.`com.b.a.b.a.g$a.c` @type ^`com.b.a.v` @kind object;
  #L151b02.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L151b08.  v1:= temp @kind object;
  #L151b0a.  call `a`(v0, v9, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L151b10.  v2:= v2 + 1;
  #L151b14.  goto L151ad8;
  #L151b16.  call temp:= `e`(v9) @signature `Lcom/b/a/d/c;.e:()Lcom/b/a/d/c;` @kind virtual;
  #L151b1c.  goto L151974;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.g$a` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/g$a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L151b30.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/g$a;.a:(Lcom/b/a/d/a;)Ljava/util/Map;` @kind virtual;
  #L151b36.  v0:= temp @kind object;
  #L151b38.  return v0 @kind object;
}

record `com.b.a.b.a.a.a` @kind class @AccessFlag PUBLIC {
}
global `java.util.TimeZone` `@@com.b.a.b.a.a.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L14cf68.  v0:= "UTC" @kind object;
  #L14cf6c.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L14cf72.  v0:= temp @kind object;
  #L14cf74.  `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` := v0 @kind object;
  #L14cf78.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L14cf8c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14cf92.  v0:= temp;
  #L14cf94.  if v3 >= v0 then goto L14cfb8;
  #L14cf98.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14cf9e.  v0:= temp;
  #L14cfa0.  v1:= 48I;
  #L14cfa4.  if v0 < v1 then goto L14cfb0;
  #L14cfa8.  v1:= 57I;
  #L14cfac.  if v0 <= v1 then goto L14cfb2;
  #L14cfb0.  return v3;
  #L14cfb2.  v3:= v3 + 1;
  #L14cfb6.  goto L14cf8c;
  #L14cfb8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14cfbe.  v3:= temp;
  #L14cfc0.  goto L14cfb0;
}
procedure `int` `a`(`java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14cfd4.  v3:= 10I;
  #L14cfd8.  if v5 < 0 then goto L14cfec;
  #L14cfdc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14cfe2.  v0:= temp;
  #L14cfe4.  if v6 > v0 then goto L14cfec;
  #L14cfe8.  if v5 <= v6 then goto L14cff8;
  #L14cfec.  v0:= new `java.lang.NumberFormatException`;
  #L14cff0.  call `<init>`(v0, v4) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14cff6.  throw v0;
  #L14cff8.  v0:= 0I;
  #L14cffa.  if v5 >= v6 then goto L14d0b6;
  #L14cffe.  v1:= v5 + 1;
  #L14d002.  call temp:= `charAt`(v4, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14d008.  v0:= temp;
  #L14d00a.  call temp:= `digit`(v0, v3) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L14d010.  v0:= temp;
  #L14d012.  if v0 >= 0 then goto L14d050;
  #L14d016.  v0:= new `java.lang.NumberFormatException`;
  #L14d01a.  v1:= new `java.lang.StringBuilder`;
  #L14d01e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d024.  v2:= "Invalid number: " @kind object;
  #L14d028.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d02e.  v1:= temp @kind object;
  #L14d030.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L14d036.  v2:= temp @kind object;
  #L14d038.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d03e.  v1:= temp @kind object;
  #L14d040.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d046.  v1:= temp @kind object;
  #L14d048.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d04e.  throw v0;
  #L14d050.  v0:= -v0 @kind int;
  #L14d052.  if v1 >= v6 then goto L14d0b2;
  #L14d056.  v2:= v1 + 1;
  #L14d05a.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14d060.  v1:= temp;
  #L14d062.  call temp:= `digit`(v1, v3) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L14d068.  v1:= temp;
  #L14d06a.  if v1 >= 0 then goto L14d0a8;
  #L14d06e.  v0:= new `java.lang.NumberFormatException`;
  #L14d072.  v1:= new `java.lang.StringBuilder`;
  #L14d076.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d07c.  v2:= "Invalid number: " @kind object;
  #L14d080.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d086.  v1:= temp @kind object;
  #L14d088.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L14d08e.  v2:= temp @kind object;
  #L14d090.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d096.  v1:= temp @kind object;
  #L14d098.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d09e.  v1:= temp @kind object;
  #L14d0a0.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d0a6.  throw v0;
  #L14d0a8.  v0:= v0 * 10;
  #L14d0ac.  v0:= v0 - v1 @kind int;
  #L14d0ae.  v1:= v2;
  #L14d0b0.  goto L14d052;
  #L14d0b2.  v0:= -v0 @kind int;
  #L14d0b4.  return v0;
  #L14d0b6.  v1:= v5;
  #L14d0b8.  goto L14d052;
}
procedure `java.util.Date` `a`(`java.lang.String` v13 @kind object, `java.text.ParsePosition` v14 @kind object) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L14d0cc.  v12:= 43I;
  #L14d0d0.  v11:= 5I;
  #L14d0d2.  v10:= 45I;
  #L14d0d6.  v0:= 0I;
  #Try_start0.  
  #L14d0d8.  call temp:= `getIndex`(v14) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L14d0de.  v2:= temp;
  #L14d0e0.  v1:= v2 + 4;
  #L14d0e4.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L14d0ea.  v6:= temp;
  #L14d0ec.  v2:= 45I;
  #L14d0f0.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14d0f6.  v2:= temp;
  #L14d0f8.  if v2 == 0 then goto L14d576;
  #L14d0fc.  v1:= v1 + 1;
  #L14d100.  v2:= v1;
  #L14d102.  v1:= v2 + 2;
  #L14d106.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L14d10c.  v7:= temp;
  #L14d10e.  v2:= 45I;
  #L14d112.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14d118.  v2:= temp;
  #L14d11a.  if v2 == 0 then goto L14d570;
  #L14d11e.  v1:= v1 + 1;
  #L14d122.  v2:= v1;
  #L14d124.  v1:= v2 + 2;
  #L14d128.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L14d12e.  v8:= temp;
  #L14d130.  v2:= 84I;
  #L14d134.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14d13a.  v2:= temp;
  #L14d13c.  if v2 != 0 then goto L14d16a;
  #L14d140.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14d146.  v3:= temp;
  #L14d148.  if v3 > v1 then goto L14d16a;
  #L14d14c.  v0:= new `java.util.GregorianCalendar`;
  #L14d150.  v2:= v7 + -1;
  #L14d154.  call `<init>`(v0, v6, v2, v8) @signature `Ljava/util/GregorianCalendar;.<init>:(III)V` @kind direct;
  #L14d15a.  call `setIndex`(v14, v1) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L14d160.  call temp:= `getTime`(v0) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L14d166.  v0:= temp @kind object;
  #L14d168.  return v0 @kind object;
  #L14d16a.  if v2 == 0 then goto L14d564;
  #L14d16e.  v2:= v1 + 1;
  #L14d172.  v1:= v2 + 2;
  #L14d176.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L14d17c.  v3:= temp;
  #L14d17e.  v2:= 58I;
  #L14d182.  call temp:= `a`(v13, v1, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14d188.  v2:= temp;
  #L14d18a.  if v2 == 0 then goto L14d55e;
  #L14d18e.  v1:= v1 + 1;
  #L14d192.  v2:= v1;
  #L14d194.  v1:= v2 + 2;
  #L14d198.  call temp:= `a`(v13, v2, v1) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L14d19e.  v2:= temp;
  #L14d1a0.  v4:= 58I;
  #L14d1a4.  call temp:= `a`(v13, v1, v4) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14d1aa.  v4:= temp;
  #L14d1ac.  if v4 == 0 then goto L14d1b4;
  #L14d1b0.  v1:= v1 + 1;
  #L14d1b4.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14d1ba.  v4:= temp;
  #L14d1bc.  if v4 <= v1 then goto L14d552;
  #L14d1c0.  call temp:= `charAt`(v13, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14d1c6.  v4:= temp;
  #L14d1c8.  v5:= 90I;
  #L14d1cc.  if v4 == v5 then goto L14d552;
  #L14d1d0.  if v4 == v12 then goto L14d552;
  #L14d1d4.  if v4 == v10 then goto L14d552;
  #L14d1d8.  v4:= v1 + 2;
  #L14d1dc.  call temp:= `a`(v13, v1, v4) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L14d1e2.  v1:= temp;
  #L14d1e4.  v5:= 59I;
  #L14d1e8.  if v1 <= v5 then goto L14d1f8;
  #L14d1ec.  v5:= 63I;
  #L14d1f0.  if v1 >= v5 then goto L14d1f8;
  #L14d1f4.  v1:= 59I;
  #L14d1f8.  v5:= 46I;
  #L14d1fc.  call temp:= `a`(v13, v4, v5) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L14d202.  v5:= temp;
  #L14d204.  if v5 == 0 then goto L14d544;
  #L14d208.  v5:= v4 + 1;
  #L14d20c.  v0:= v5 + 1;
  #L14d210.  call temp:= `a`(v13, v0) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;I)I` @kind static;
  #L14d216.  v4:= temp;
  #L14d218.  v0:= v5 + 3;
  #L14d21c.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L14d222.  v9:= temp;
  #L14d224.  call temp:= `a`(v13, v5, v9) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L14d22a.  v0:= temp;
  #L14d22c.  v5:= v9 - v5 @kind int;
  #L14d230.  goto L14d57c;
  #L14d236.  v5:= v3;
  #L14d238.  v3:= v1;
  #L14d23a.  v1:= v4;
  #L14d23c.  v4:= v2;
  #L14d23e.  v2:= v0;
  #L14d240.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14d246.  v0:= temp;
  #L14d248.  if v0 > v1 then goto L14d320;
  #L14d24c.  v0:= new `java.lang.IllegalArgumentException`;
  #L14d250.  v1:= "No time zone indicator" @kind object;
  #L14d254.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d25a.  throw v0;
  #Try_end0.  
  #L14d25c.  v0:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L14d25e.  v2:= v0 @kind object;
  #L14d260.  if v13 != 0 then goto L14d50e;
  #L14d264.  v0:= 0I;
  #L14d266.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L14d26c.  v1:= temp @kind object;
  #L14d26e.  if v1 == 0 then goto L14d27e;
  #L14d272.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L14d278.  v3:= temp;
  #L14d27a.  if v3 == 0 then goto L14d2c0;
  #L14d27e.  v1:= new `java.lang.StringBuilder`;
  #L14d282.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d288.  v3:= "(" @kind object;
  #L14d28c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d292.  v1:= temp @kind object;
  #L14d294.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14d29a.  v3:= temp @kind object;
  #L14d29c.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L14d2a2.  v3:= temp @kind object;
  #L14d2a4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d2aa.  v1:= temp @kind object;
  #L14d2ac.  v3:= ")" @kind object;
  #L14d2b0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d2b6.  v1:= temp @kind object;
  #L14d2b8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d2be.  v1:= temp @kind object;
  #L14d2c0.  v3:= new `java.text.ParseException`;
  #L14d2c4.  v4:= new `java.lang.StringBuilder`;
  #L14d2c8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d2ce.  v5:= "Failed to parse date [" @kind object;
  #L14d2d2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d2d8.  v4:= temp @kind object;
  #L14d2da.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d2e0.  v0:= temp @kind object;
  #L14d2e2.  v4:= "]: " @kind object;
  #L14d2e6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d2ec.  v0:= temp @kind object;
  #L14d2ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d2f4.  v0:= temp @kind object;
  #L14d2f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d2fc.  v0:= temp @kind object;
  #L14d2fe.  call temp:= `getIndex`(v14) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L14d304.  v1:= temp;
  #L14d306.  call `<init>`(v3, v0, v1) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L14d30c.  call temp:= `initCause`(v3, v2) @signature `Ljava/text/ParseException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L14d312.  throw v3;
  #L14d314.  v0:= v0 * 10;
  #L14d318.  goto L14d236;
  #L14d31a.  v0:= v0 * 100;
  #L14d31e.  goto L14d236;
  #Try_start1.  
  #L14d320.  call temp:= `charAt`(v13, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14d326.  v0:= temp;
  #L14d328.  v9:= 90I;
  #L14d32c.  if v0 != v9 then goto L14d3a0;
  #L14d330.  v0:= `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` @kind object;
  #L14d334.  v1:= v1 + 1;
  #L14d338.  v9:= new `java.util.GregorianCalendar`;
  #L14d33c.  call `<init>`(v9, v0) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L14d342.  v0:= 0I;
  #L14d344.  call `setLenient`(v9, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L14d34a.  v0:= 1I;
  #L14d34c.  call `set`(v9, v0, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L14d352.  v0:= 2I;
  #L14d354.  v6:= v7 + -1;
  #L14d358.  call `set`(v9, v0, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L14d35e.  v0:= 5I;
  #L14d360.  call `set`(v9, v0, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L14d366.  v0:= 11I;
  #L14d36a.  call `set`(v9, v0, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L14d370.  v0:= 12I;
  #L14d374.  call `set`(v9, v0, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L14d37a.  v0:= 13I;
  #L14d37e.  call `set`(v9, v0, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L14d384.  v0:= 14I;
  #L14d388.  call `set`(v9, v0, v2) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L14d38e.  call `setIndex`(v14, v1) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L14d394.  call temp:= `getTime`(v9) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L14d39a.  v0:= temp @kind object;
  #L14d39c.  goto L14d168;
  #L14d3a0.  if v0 == v12 then goto L14d3a8;
  #L14d3a4.  if v0 != v10 then goto L14d4c8;
  #L14d3a8.  call temp:= `substring`(v13, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L14d3ae.  v0:= temp @kind object;
  #L14d3b0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14d3b6.  v9:= temp;
  #L14d3b8.  if v9 < v11 then goto L14d3ec;
  #L14d3bc.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14d3c2.  v9:= temp;
  #L14d3c4.  v1:= v1 + v9 @kind int;
  #L14d3c6.  v9:= "+0000" @kind object;
  #L14d3ca.  call temp:= `equals`(v9, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14d3d0.  v9:= temp;
  #L14d3d2.  if v9 != 0 then goto L14d3e6;
  #L14d3d6.  v9:= "+00:00" @kind object;
  #L14d3da.  call temp:= `equals`(v9, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14d3e0.  v9:= temp;
  #L14d3e2.  if v9 == 0 then goto L14d414;
  #L14d3e6.  v0:= `@@com.b.a.b.a.a.a.a` @type ^`java.util.TimeZone` @kind object;
  #L14d3ea.  goto L14d338;
  #L14d3ec.  v9:= new `java.lang.StringBuilder`;
  #L14d3f0.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d3f6.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d3fc.  v0:= temp @kind object;
  #L14d3fe.  v9:= "00" @kind object;
  #L14d402.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d408.  v0:= temp @kind object;
  #L14d40a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d410.  v0:= temp @kind object;
  #L14d412.  goto L14d3bc;
  #L14d414.  v9:= new `java.lang.StringBuilder`;
  #L14d418.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d41e.  v10:= "GMT" @kind object;
  #L14d422.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d428.  v9:= temp @kind object;
  #L14d42a.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d430.  v0:= temp @kind object;
  #L14d432.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d438.  v9:= temp @kind object;
  #L14d43a.  call temp:= `getTimeZone`(v9) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L14d440.  v0:= temp @kind object;
  #L14d442.  call temp:= `getID`(v0) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L14d448.  v10:= temp @kind object;
  #L14d44a.  call temp:= `equals`(v10, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14d450.  v11:= temp;
  #L14d452.  if v11 != 0 then goto L14d338;
  #L14d456.  v11:= ":" @kind object;
  #L14d45a.  v12:= "" @kind object;
  #L14d45e.  call temp:= `replace`(v10, v11, v12) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L14d464.  v10:= temp @kind object;
  #L14d466.  call temp:= `equals`(v10, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14d46c.  v10:= temp;
  #L14d46e.  if v10 != 0 then goto L14d338;
  #L14d472.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L14d476.  v2:= new `java.lang.StringBuilder`;
  #L14d47a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d480.  v3:= "Mismatching time zone indicator: " @kind object;
  #L14d484.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d48a.  v2:= temp @kind object;
  #L14d48c.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d492.  v2:= temp @kind object;
  #L14d494.  v3:= " given, resolves to " @kind object;
  #L14d498.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d49e.  v2:= temp @kind object;
  #L14d4a0.  call temp:= `getID`(v0) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L14d4a6.  v0:= temp @kind object;
  #L14d4a8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d4ae.  v0:= temp @kind object;
  #L14d4b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d4b6.  v0:= temp @kind object;
  #L14d4b8.  call `<init>`(v1, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d4be.  throw v1;
  #L14d4c0.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L14d4c2.  v2:= v0 @kind object;
  #L14d4c4.  goto L14d260;
  #L14d4c8.  v1:= new `java.lang.IndexOutOfBoundsException`;
  #L14d4cc.  v2:= new `java.lang.StringBuilder`;
  #L14d4d0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d4d6.  v3:= "Invalid time zone indicator '" @kind object;
  #L14d4da.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d4e0.  v2:= temp @kind object;
  #L14d4e2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d4e8.  v0:= temp @kind object;
  #L14d4ea.  v2:= "'" @kind object;
  #L14d4ee.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d4f4.  v0:= temp @kind object;
  #L14d4f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d4fc.  v0:= temp @kind object;
  #L14d4fe.  call `<init>`(v1, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d504.  throw v1;
  #Try_end1.  
  #L14d506.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L14d508.  v2:= v0 @kind object;
  #L14d50a.  goto L14d260;
  #L14d50e.  v0:= new `java.lang.StringBuilder`;
  #L14d512.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d518.  v1:= 34I;
  #L14d51c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d522.  v0:= temp @kind object;
  #L14d524.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d52a.  v0:= temp @kind object;
  #L14d52c.  v1:= "'" @kind object;
  #L14d530.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d536.  v0:= temp @kind object;
  #L14d538.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d53e.  v0:= temp @kind object;
  #L14d540.  goto L14d266;
  #L14d544.  v5:= v3;
  #L14d546.  v3:= v1;
  #L14d548.  v1:= v4;
  #L14d54a.  v4:= v2;
  #L14d54c.  v2:= v0;
  #L14d54e.  goto L14d240;
  #L14d552.  v4:= v2;
  #L14d554.  v5:= v3;
  #L14d556.  v2:= v0;
  #L14d558.  v3:= v0;
  #L14d55a.  goto L14d240;
  #L14d55e.  v2:= v1;
  #L14d560.  goto L14d194;
  #L14d564.  v2:= v0;
  #L14d566.  v3:= v0;
  #L14d568.  v4:= v0;
  #L14d56a.  v5:= v0;
  #L14d56c.  goto L14d240;
  #L14d570.  v2:= v1;
  #L14d572.  goto L14d124;
  #L14d576.  v2:= v1;
  #L14d578.  goto L14d102;
  #L14d57c.  switch v5
                  | 1 => goto L14d31a
                  | 2 => goto L14d314
                  | else => goto L14d236;
  catch `java.lang.IndexOutOfBoundsException` @[Try_start0..Try_end0] goto L14d25c;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L14d4c0;
  catch `java.lang.IllegalArgumentException` @[Try_start0..Try_end0] goto L14d506;
  catch `java.lang.IndexOutOfBoundsException` @[Try_start1..Try_end1] goto L14d25c;
  catch `java.lang.NumberFormatException` @[Try_start1..Try_end1] goto L14d4c0;
  catch `java.lang.IllegalArgumentException` @[Try_start1..Try_end1] goto L14d506;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object, `int` v2 , `char` v3 ) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;IC)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L14d5bc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14d5c2.  v0:= temp;
  #L14d5c4.  if v2 >= v0 then goto L14d5d8;
  #L14d5c8.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14d5ce.  v0:= temp;
  #L14d5d0.  if v0 != v3 then goto L14d5d8;
  #L14d5d4.  v0:= 1I;
  #L14d5d6.  return v0;
  #L14d5d8.  v0:= 0I;
  #L14d5da.  goto L14d5d6;
}

record `com.a.a.b.h` @kind class @AccessFlag PUBLIC {
}
procedure `java.security.PublicKey` `a`(`java.lang.String` v3 @kind object) @signature `Lcom/a/a/b/h;.a:(Ljava/lang/String;)Ljava/security/PublicKey;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L12a5f8.  call temp:= `a`(v3) @signature `Lcom/a/a/b/a;.a:(Ljava/lang/String;)[B` @kind static;
  #L12a5fe.  v0:= temp @kind object;
  #L12a600.  v1:= "RSA" @kind object;
  #L12a604.  call temp:= `getInstance`(v1) @signature `Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;` @kind static;
  #L12a60a.  v1:= temp @kind object;
  #L12a60c.  v2:= new `java.security.spec.X509EncodedKeySpec`;
  #L12a610.  call `<init>`(v2, v0) @signature `Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L12a616.  call temp:= `generatePublic`(v1, v2) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #Try_end0.  
  #L12a61c.  v0:= temp @kind object;
  #L12a61e.  return v0 @kind object;
  #L12a620.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L12a622.  v1:= new `java.lang.RuntimeException`;
  #L12a626.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L12a62c.  throw v1;
  #L12a62e.  v0:= Exception @type ^`java.security.spec.InvalidKeySpecException` @kind object;
  #L12a630.  v1:= "IABUtil/Security" @kind object;
  #L12a634.  v2:= "Invalid key specification." @kind object;
  #L12a638.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12a63e.  v1:= new `java.lang.IllegalArgumentException`;
  #L12a642.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L12a648.  throw v1;
  #L12a64a.  v0:= Exception @type ^`com.a.a.b.b` @kind object;
  #L12a64c.  v1:= "IABUtil/Security" @kind object;
  #L12a650.  v2:= "Base64 decoding failed." @kind object;
  #L12a654.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12a65a.  v1:= new `java.lang.IllegalArgumentException`;
  #L12a65e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L12a664.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[Try_start0..Try_end0] goto L12a620;
  catch `java.security.spec.InvalidKeySpecException` @[Try_start0..Try_end0] goto L12a62e;
  catch `com.a.a.b.b` @[Try_start0..Try_end0] goto L12a64a;
}
procedure `boolean` `a`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/a/a/b/h;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L12a68c.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L12a692.  v0:= temp;
  #L12a694.  if v0 != 0 then goto L12a6b0;
  #L12a698.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L12a69e.  v0:= temp;
  #L12a6a0.  if v0 != 0 then goto L12a6b0;
  #L12a6a4.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L12a6aa.  v0:= temp;
  #L12a6ac.  if v0 == 0 then goto L12a6c2;
  #L12a6b0.  v0:= "IABUtil/Security" @kind object;
  #L12a6b4.  v1:= "Purchase verification failed: missing data." @kind object;
  #L12a6b8.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12a6be.  v0:= 0I;
  #L12a6c0.  return v0;
  #L12a6c2.  call temp:= `a`(v2) @signature `Lcom/a/a/b/h;.a:(Ljava/lang/String;)Ljava/security/PublicKey;` @kind static;
  #L12a6c8.  v0:= temp @kind object;
  #L12a6ca.  call temp:= `a`(v0, v3, v4) @signature `Lcom/a/a/b/h;.a:(Ljava/security/PublicKey;Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L12a6d0.  v0:= temp;
  #L12a6d2.  goto L12a6c0;
}
procedure `boolean` `a`(`java.security.PublicKey` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/a/a/b/h;.a:(Ljava/security/PublicKey;Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L12a6e4.  v0:= 0I;
  #Try_start0.  
  #L12a6e6.  v1:= "SHA1withRSA" @kind object;
  #L12a6ea.  call temp:= `getInstance`(v1) @signature `Ljava/security/Signature;.getInstance:(Ljava/lang/String;)Ljava/security/Signature;` @kind static;
  #L12a6f0.  v1:= temp @kind object;
  #L12a6f2.  call `initVerify`(v1, v3) @signature `Ljava/security/Signature;.initVerify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L12a6f8.  call temp:= `getBytes`(v4) @signature `Ljava/lang/String;.getBytes:()[B` @kind virtual;
  #L12a6fe.  v2:= temp @kind object;
  #L12a700.  call `update`(v1, v2) @signature `Ljava/security/Signature;.update:([B)V` @kind virtual;
  #L12a706.  call temp:= `a`(v5) @signature `Lcom/a/a/b/a;.a:(Ljava/lang/String;)[B` @kind static;
  #L12a70c.  v2:= temp @kind object;
  #L12a70e.  call temp:= `verify`(v1, v2) @signature `Ljava/security/Signature;.verify:([B)Z` @kind virtual;
  #L12a714.  v1:= temp;
  #L12a716.  if v1 != 0 then goto L12a72a;
  #L12a71a.  v1:= "IABUtil/Security" @kind object;
  #L12a71e.  v2:= "Signature verification failed." @kind object;
  #L12a722.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L12a728.  return v0;
  #L12a72a.  v0:= 1I;
  #L12a72c.  goto L12a728;
  #L12a72e.  v1:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L12a730.  v1:= "IABUtil/Security" @kind object;
  #L12a734.  v2:= "NoSuchAlgorithmException." @kind object;
  #L12a738.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12a73e.  goto L12a728;
  #L12a740.  v1:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L12a742.  v1:= "IABUtil/Security" @kind object;
  #L12a746.  v2:= "Invalid key specification." @kind object;
  #L12a74a.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12a750.  goto L12a728;
  #L12a752.  v1:= Exception @type ^`java.security.SignatureException` @kind object;
  #L12a754.  v1:= "IABUtil/Security" @kind object;
  #L12a758.  v2:= "Signature exception." @kind object;
  #L12a75c.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12a762.  goto L12a728;
  #L12a764.  v1:= Exception @type ^`com.a.a.b.b` @kind object;
  #L12a766.  v1:= "IABUtil/Security" @kind object;
  #L12a76a.  v2:= "Base64 decoding failed." @kind object;
  #L12a76e.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12a774.  goto L12a728;
  catch `java.security.NoSuchAlgorithmException` @[Try_start0..Try_end0] goto L12a72e;
  catch `java.security.InvalidKeyException` @[Try_start0..Try_end0] goto L12a740;
  catch `java.security.SignatureException` @[Try_start0..Try_end0] goto L12a752;
  catch `com.a.a.b.b` @[Try_start0..Try_end0] goto L12a764;
}

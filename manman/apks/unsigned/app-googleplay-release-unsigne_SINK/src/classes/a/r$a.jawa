record `a.r$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `a.r$a.a` @AccessFlag ;
  `java.lang.String` `a.r$a.b` @AccessFlag ;
  `java.lang.String` `a.r$a.c` @AccessFlag ;
  `java.lang.String` `a.r$a.d` @AccessFlag ;
  `int` `a.r$a.e` @AccessFlag ;
  `java.util.List` `a.r$a.f` @AccessFlag FINAL;
  `java.util.List` `a.r$a.g` @AccessFlag ;
  `java.lang.String` `a.r$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`a.r$a` v2 @kind this) @signature `La/r$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L08e69c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08e6a2.  v0:= "" @kind object;
  #L08e6a6.  v2.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08e6aa.  v0:= "" @kind object;
  #L08e6ae.  v2.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08e6b2.  v0:= -1I;
  #L08e6b4.  v2.`a.r$a.e` @type ^`int` := v0;
  #L08e6b8.  v0:= new `java.util.ArrayList`;
  #L08e6bc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L08e6c2.  v2.`a.r$a.f` @type ^`java.util.List` := v0 @kind object;
  #L08e6c6.  v0:= v2.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e6ca.  v1:= "" @kind object;
  #L08e6ce.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08e6d4.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v8 @kind object) @signature `La/r$a;.a:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08e6e8.  v7:= 16I;
  #L08e6ec.  v6:= 58I;
  #L08e6f0.  v1:= 0I;
  #L08e6f2.  v0:= -1I;
  #L08e6f4.  v2:= v1;
  #L08e6f6.  v3:= v0;
  #L08e6f8.  v0:= v1;
  #L08e6fa.  v4:= length @variable v8;
  #L08e6fc.  if v0 >= v4 then goto L08e734;
  #L08e700.  v5:= v0;
  #L08e702.  if v5 >= v7 then goto L08e722;
  #L08e706.  v4:= v8[v5] @kind byte;
  #L08e70a.  if v4 != 0 then goto L08e722;
  #L08e70e.  v4:= v5 + 1;
  #L08e712.  v4:= v8[v4] @kind byte;
  #L08e716.  if v4 != 0 then goto L08e722;
  #L08e71a.  v4:= v5 + 2;
  #L08e71e.  v5:= v4;
  #L08e720.  goto L08e702;
  #L08e722.  v4:= v5 - v0 @kind int;
  #L08e726.  if v4 <= v2 then goto L08e72e;
  #L08e72a.  v2:= v4;
  #L08e72c.  v3:= v0;
  #L08e72e.  v0:= v5 + 2;
  #L08e732.  goto L08e6fa;
  #L08e734.  v0:= new `b.c`;
  #L08e738.  call `<init>`(v0) @signature `Lb/c;.<init>:()V` @kind direct;
  #L08e73e.  v4:= length @variable v8;
  #L08e740.  if v1 >= v4 then goto L08e78e;
  #L08e744.  if v1 != v3 then goto L08e75c;
  #L08e748.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08e74e.  v1:= v1 + v2 @kind int;
  #L08e750.  if v1 != v7 then goto L08e73e;
  #L08e754.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08e75a.  goto L08e73e;
  #L08e75c.  if v1 <= 0 then goto L08e766;
  #L08e760.  call temp:= `b`(v0, v6) @signature `Lb/c;.b:(I)Lb/c;` @kind virtual;
  #L08e766.  v4:= v8[v1] @kind byte;
  #L08e76a.  v4:= v4 ^& 255;
  #L08e76e.  v4:= v4 ^< 8;
  #L08e772.  v5:= v1 + 1;
  #L08e776.  v5:= v8[v5] @kind byte;
  #L08e77a.  v5:= v5 ^& 255;
  #L08e77e.  v4:= v4 ^| v5 @kind int;
  #L08e780.  v4:= (`long`) v4 @kind i2l;
  #L08e782.  call temp:= `i`(v0, v4) @signature `Lb/c;.i:(J)Lb/c;` @kind virtual;
  #L08e788.  v1:= v1 + 2;
  #L08e78c.  goto L08e73e;
  #L08e78e.  call temp:= `o`(v0) @signature `Lb/c;.o:()Ljava/lang/String;` @kind virtual;
  #L08e794.  v0:= temp @kind object;
  #L08e796.  return v0 @kind object;
}
procedure `void` `a`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `La/r$a;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08e7a8.  v5:= 1I;
  #L08e7aa.  if v8 != v9 then goto L08e7b0;
  #L08e7ae.  return @kind void;
  #L08e7b0.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08e7b6.  v0:= temp;
  #L08e7b8.  v1:= 47I;
  #L08e7bc.  if v0 == v1 then goto L08e7c8;
  #L08e7c0.  v1:= 92I;
  #L08e7c4.  if v0 != v1 then goto L08e812;
  #L08e7c8.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e7cc.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L08e7d2.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e7d6.  v1:= "" @kind object;
  #L08e7da.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08e7e0.  v8:= v8 + 1;
  #L08e7e4.  v2:= v8;
  #L08e7e6.  if v2 >= v9 then goto L08e7ae;
  #L08e7ea.  v0:= "/\\" @kind object;
  #L08e7ee.  call temp:= `a`(v7, v2, v9, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08e7f4.  v3:= temp;
  #L08e7f6.  if v3 >= v9 then goto L08e832;
  #L08e7fa.  v4:= v5;
  #L08e7fc.  v0:= v6 @kind object;
  #L08e7fe.  v1:= v7 @kind object;
  #L08e800.  call `a`(v0, v1, v2, v3, v4, v5) @signature `La/r$a;.a:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L08e806.  if v4 == 0 then goto L08e80e;
  #L08e80a.  v3:= v3 + 1;
  #L08e80e.  v2:= v3;
  #L08e810.  goto L08e7e6;
  #L08e812.  v0:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e816.  v1:= v6.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e81a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08e820.  v1:= temp;
  #L08e822.  v1:= v1 + -1;
  #L08e826.  v2:= "" @kind object;
  #L08e82a.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L08e830.  goto L08e7e4;
  #L08e832.  v4:= 0I;
  #L08e834.  goto L08e7fc;
}
procedure `void` `a`(`a.r$a` v8 @kind this, `java.lang.String` v9 @kind object, `int` v10 , `int` v11 , `boolean` v12 , `boolean` v13 ) @signature `La/r$a;.a:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08e848.  v5:= 0I;
  #L08e84a.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L08e84e.  v7:= 1I;
  #L08e850.  v0:= v9 @kind object;
  #L08e852.  v1:= v10;
  #L08e854.  v2:= v11;
  #L08e856.  v4:= v13;
  #L08e858.  v6:= v5;
  #L08e85a.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08e860.  v1:= temp @kind object;
  #L08e862.  call temp:= `f`(v8, v1) @signature `La/r$a;.f:(Ljava/lang/String;)Z` @kind direct;
  #L08e868.  v0:= temp;
  #L08e86a.  if v0 == 0 then goto L08e870;
  #L08e86e.  return @kind void;
  #L08e870.  call temp:= `g`(v8, v1) @signature `La/r$a;.g:(Ljava/lang/String;)Z` @kind direct;
  #L08e876.  v0:= temp;
  #L08e878.  if v0 == 0 then goto L08e884;
  #L08e87c.  call `d`(v8) @signature `La/r$a;.d:()V` @kind direct;
  #L08e882.  goto L08e86e;
  #L08e884.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e888.  v2:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e88c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08e892.  v2:= temp;
  #L08e894.  v2:= v2 + -1;
  #L08e898.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08e89e.  v0:= temp @kind object;
  #L08e8a0.  v0:= (`java.lang.String`) v0 @kind object;
  #L08e8a4.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08e8aa.  v0:= temp;
  #L08e8ac.  if v0 == 0 then goto L08e8de;
  #L08e8b0.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e8b4.  v2:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e8b8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08e8be.  v2:= temp;
  #L08e8c0.  v2:= v2 + -1;
  #L08e8c4.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L08e8ca.  if v12 == 0 then goto L08e86e;
  #L08e8ce.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e8d2.  v1:= "" @kind object;
  #L08e8d6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08e8dc.  goto L08e86e;
  #L08e8de.  v0:= v8.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08e8e2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08e8e8.  goto L08e8ca;
}
procedure `boolean` `a`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `La/r$a;.a:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L08e8fc.  v1:= 0I;
  #L08e8fe.  v0:= v8;
  #L08e900.  v4:= v11;
  #L08e902.  if v0 >= v9 then goto L08e990;
  #L08e906.  v2:= length @variable v10;
  #L08e908.  if v4 != v2 then goto L08e910;
  #L08e90c.  v0:= v1;
  #L08e90e.  return v0;
  #L08e910.  if v4 == v11 then goto L08e92c;
  #L08e914.  call temp:= `charAt`(v7, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08e91a.  v2:= temp;
  #L08e91c.  v3:= 46I;
  #L08e920.  if v2 == v3 then goto L08e928;
  #L08e924.  v0:= v1;
  #L08e926.  goto L08e90e;
  #L08e928.  v0:= v0 + 1;
  #L08e92c.  v2:= v1;
  #L08e92e.  v3:= v0;
  #L08e930.  if v3 >= v9 then goto L08e94c;
  #L08e934.  call temp:= `charAt`(v7, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08e93a.  v5:= temp;
  #L08e93c.  v6:= 48I;
  #L08e940.  if v5 < v6 then goto L08e94c;
  #L08e944.  v6:= 57I;
  #L08e948.  if v5 <= v6 then goto L08e958;
  #L08e94c.  v0:= v3 - v0 @kind int;
  #L08e950.  if v0 != 0 then goto L08e980;
  #L08e954.  v0:= v1;
  #L08e956.  goto L08e90e;
  #L08e958.  if v2 != 0 then goto L08e964;
  #L08e95c.  if v0 == v3 then goto L08e964;
  #L08e960.  v0:= v1;
  #L08e962.  goto L08e90e;
  #L08e964.  v2:= v2 * 10;
  #L08e968.  v2:= v2 + v5 @kind int;
  #L08e96a.  v2:= v2 + -48;
  #L08e96e.  v5:= 255I;
  #L08e972.  if v2 <= v5 then goto L08e97a;
  #L08e976.  v0:= v1;
  #L08e978.  goto L08e90e;
  #L08e97a.  v3:= v3 + 1;
  #L08e97e.  goto L08e930;
  #L08e980.  v0:= v4 + 1;
  #L08e984.  v2:= (`byte`) v2 @kind i2b;
  #L08e986.  v10[v4]:= v2 @kind byte;
  #L08e98a.  v4:= v0;
  #L08e98c.  v0:= v3;
  #L08e98e.  goto L08e902;
  #L08e990.  v0:= v11 + 4;
  #L08e994.  if v4 == v0 then goto L08e99c;
  #L08e998.  v0:= v1;
  #L08e99a.  goto L08e90e;
  #L08e99c.  v0:= 1I;
  #L08e99e.  goto L08e90e;
}
procedure `int` `b`(`java.lang.String` v8 @kind object, `int` v9 , `int` v10 ) @signature `La/r$a;.b:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L08e9b0.  v7:= 122I;
  #L08e9b4.  v6:= 97I;
  #L08e9b8.  v5:= 90I;
  #L08e9bc.  v4:= 65I;
  #L08e9c0.  v0:= -1I;
  #L08e9c2.  v1:= v10 - v9 @kind int;
  #L08e9c6.  v2:= 2I;
  #L08e9c8.  if v1 >= v2 then goto L08e9ce;
  #L08e9cc.  return v0;
  #L08e9ce.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08e9d4.  v1:= temp;
  #L08e9d6.  if v1 < v6 then goto L08e9de;
  #L08e9da.  if v1 <= v7 then goto L08e9e6;
  #L08e9de.  if v1 < v4 then goto L08e9cc;
  #L08e9e2.  if v1 > v5 then goto L08e9cc;
  #L08e9e6.  v1:= v9 + 1;
  #L08e9ea.  if v1 >= v10 then goto L08e9cc;
  #L08e9ee.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08e9f4.  v2:= temp;
  #L08e9f6.  if v2 < v6 then goto L08e9fe;
  #L08e9fa.  if v2 <= v7 then goto L08ea2e;
  #L08e9fe.  if v2 < v4 then goto L08ea06;
  #L08ea02.  if v2 <= v5 then goto L08ea2e;
  #L08ea06.  v3:= 48I;
  #L08ea0a.  if v2 < v3 then goto L08ea16;
  #L08ea0e.  v3:= 57I;
  #L08ea12.  if v2 <= v3 then goto L08ea2e;
  #L08ea16.  v3:= 43I;
  #L08ea1a.  if v2 == v3 then goto L08ea2e;
  #L08ea1e.  v3:= 45I;
  #L08ea22.  if v2 == v3 then goto L08ea2e;
  #L08ea26.  v3:= 46I;
  #L08ea2a.  if v2 != v3 then goto L08ea34;
  #L08ea2e.  v1:= v1 + 1;
  #L08ea32.  goto L08e9ea;
  #L08ea34.  v3:= 58I;
  #L08ea38.  if v2 != v3 then goto L08e9cc;
  #L08ea3c.  v0:= v1;
  #L08ea3e.  goto L08e9cc;
}
procedure `int` `c`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.c:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08ea50.  v0:= 0I;
  #L08ea52.  if v4 >= v5 then goto L08ea78;
  #L08ea56.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08ea5c.  v1:= temp;
  #L08ea5e.  v2:= 92I;
  #L08ea62.  if v1 == v2 then goto L08ea6e;
  #L08ea66.  v2:= 47I;
  #L08ea6a.  if v1 != v2 then goto L08ea78;
  #L08ea6e.  v0:= v0 + 1;
  #L08ea72.  v4:= v4 + 1;
  #L08ea76.  goto L08ea52;
  #L08ea78.  return v0;
}
procedure `int` `d`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.d:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08ea8c.  v0:= v4;
  #L08ea8e.  if v0 >= v5 then goto L08eac0;
  #L08ea92.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08ea98.  v1:= temp;
  #L08ea9a.  goto L08eac4;
  #L08eaa0.  v0:= v0 + 1;
  #L08eaa4.  goto L08ea8e;
  #L08eaa6.  v0:= v0 + 1;
  #L08eaaa.  if v0 >= v5 then goto L08eaa0;
  #L08eaae.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08eab4.  v1:= temp;
  #L08eab6.  v2:= 93I;
  #L08eaba.  if v1 != v2 then goto L08eaa6;
  #L08eabe.  goto L08eaa0;
  #L08eac0.  v0:= v5;
  #L08eac2.  return v0;
  #L08eac4.  switch v1
                  | 58 => goto L08eac2
                  | 91 => goto L08eaa6
                  | else => goto L08eaa0;
}
procedure `void` `d`(`a.r$a` v3 @kind this) @signature `La/r$a;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L08eae8.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08eaec.  v1:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08eaf0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08eaf6.  v1:= temp;
  #L08eaf8.  v1:= v1 + -1;
  #L08eafc.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L08eb02.  v0:= temp @kind object;
  #L08eb04.  v0:= (`java.lang.String`) v0 @kind object;
  #L08eb08.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08eb0e.  v0:= temp;
  #L08eb10.  if v0 == 0 then goto L08eb44;
  #L08eb14.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08eb18.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L08eb1e.  v0:= temp;
  #L08eb20.  if v0 != 0 then goto L08eb44;
  #L08eb24.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08eb28.  v1:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08eb2c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08eb32.  v1:= temp;
  #L08eb34.  v1:= v1 + -1;
  #L08eb38.  v2:= "" @kind object;
  #L08eb3c.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L08eb42.  return @kind void;
  #L08eb44.  v0:= v3.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08eb48.  v1:= "" @kind object;
  #L08eb4c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08eb52.  goto L08eb42;
}
procedure `java.lang.String` `e`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08eb64.  v2:= 0I;
  #L08eb66.  call temp:= `a`(v3, v4, v5, v2) @signature `La/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L08eb6c.  v0:= temp @kind object;
  #L08eb6e.  v1:= ":" @kind object;
  #L08eb72.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L08eb78.  v1:= temp;
  #L08eb7a.  if v1 == 0 then goto L08ebf6;
  #L08eb7e.  v1:= "[" @kind object;
  #L08eb82.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08eb88.  v1:= temp;
  #L08eb8a.  if v1 == 0 then goto L08ebbc;
  #L08eb8e.  v1:= "]" @kind object;
  #L08eb92.  call temp:= `endsWith`(v0, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08eb98.  v1:= temp;
  #L08eb9a.  if v1 == 0 then goto L08ebbc;
  #L08eb9e.  v1:= 1I;
  #L08eba0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08eba6.  v2:= temp;
  #L08eba8.  v2:= v2 + -1;
  #L08ebac.  call temp:= `f`(v0, v1, v2) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L08ebb2.  v0:= temp @kind object;
  #L08ebb4.  if v0 != 0 then goto L08ebce;
  #L08ebb8.  v0:= 0I;
  #L08ebba.  return v0 @kind object;
  #L08ebbc.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08ebc2.  v1:= temp;
  #L08ebc4.  call temp:= `f`(v0, v2, v1) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L08ebca.  v0:= temp @kind object;
  #L08ebcc.  goto L08ebb4;
  #L08ebce.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L08ebd4.  v0:= temp @kind object;
  #L08ebd6.  v1:= length @variable v0;
  #L08ebd8.  v2:= 16I;
  #L08ebdc.  if v1 != v2 then goto L08ebea;
  #L08ebe0.  call temp:= `a`(v0) @signature `La/r$a;.a:([B)Ljava/lang/String;` @kind static;
  #L08ebe6.  v0:= temp @kind object;
  #L08ebe8.  goto L08ebba;
  #L08ebea.  v0:= new `java.lang.AssertionError`;
  #L08ebee.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08ebf4.  throw v0;
  #L08ebf6.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L08ebfc.  v0:= temp @kind object;
  #L08ebfe.  goto L08ebba;
}
procedure `java.net.InetAddress` `f`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `La/r$a;.f:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L08ec10.  v11:= 1I;
  #L08ec12.  v7:= -1I;
  #L08ec14.  v3:= 0I;
  #L08ec16.  v5:= 0I;
  #L08ec18.  v0:= 16I;
  #L08ec1c.  v8:= new `byte`[v0];
  #L08ec20.  v0:= v13;
  #L08ec22.  v4:= v7;
  #L08ec24.  v1:= v7;
  #L08ec26.  v2:= v5;
  #L08ec28.  if v0 >= v14 then goto L08ec66;
  #L08ec2c.  v6:= length @variable v8;
  #L08ec2e.  if v2 != v6 then goto L08ec36;
  #L08ec32.  v0:= v3 @kind object;
  #L08ec34.  return v0 @kind object;
  #L08ec36.  v6:= v0 + 2;
  #L08ec3a.  if v6 > v14 then goto L08ec74;
  #L08ec3e.  v6:= "::" @kind object;
  #L08ec42.  v9:= 2I;
  #L08ec44.  call temp:= `regionMatches`(v12, v0, v6, v5, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L08ec4a.  v6:= temp;
  #L08ec4c.  if v6 == 0 then goto L08ec74;
  #L08ec50.  if v1 == v7 then goto L08ec58;
  #L08ec54.  v0:= v3 @kind object;
  #L08ec56.  goto L08ec34;
  #L08ec58.  v0:= v0 + 2;
  #L08ec5c.  v1:= v2 + 2;
  #L08ec60.  if v0 != v14 then goto L08ed52;
  #L08ec64.  v2:= v1;
  #L08ec66.  v0:= length @variable v8;
  #L08ec68.  if v2 == v0 then goto L08ed38;
  #L08ec6c.  if v1 != v7 then goto L08ed1a;
  #L08ec70.  v0:= v3 @kind object;
  #L08ec72.  goto L08ec34;
  #L08ec74.  if v2 == 0 then goto L08ec8c;
  #L08ec78.  v6:= ":" @kind object;
  #L08ec7c.  call temp:= `regionMatches`(v12, v0, v6, v5, v11) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L08ec82.  v6:= temp;
  #L08ec84.  if v6 == 0 then goto L08ecba;
  #L08ec88.  v0:= v0 + 1;
  #L08ec8c.  v4:= v5;
  #L08ec8e.  v6:= v0;
  #L08ec90.  if v6 >= v14 then goto L08eca8;
  #L08ec94.  call temp:= `charAt`(v12, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08ec9a.  v9:= temp;
  #L08ec9c.  call temp:= `a`(v9) @signature `La/r;.a:(C)I` @kind static;
  #L08eca2.  v9:= temp;
  #L08eca4.  if v9 != v7 then goto L08ece8;
  #L08eca8.  v9:= v6 - v0 @kind int;
  #L08ecac.  if v9 == 0 then goto L08ecb6;
  #L08ecb0.  v10:= 4I;
  #L08ecb2.  if v9 <= v10 then goto L08ecf4;
  #L08ecb6.  v0:= v3 @kind object;
  #L08ecb8.  goto L08ec34;
  #L08ecba.  v6:= "." @kind object;
  #L08ecbe.  call temp:= `regionMatches`(v12, v0, v6, v5, v11) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L08ecc4.  v0:= temp;
  #L08ecc6.  if v0 == 0 then goto L08ece4;
  #L08ecca.  v0:= v2 + -2;
  #L08ecce.  call temp:= `a`(v12, v4, v14, v8, v0) @signature `La/r$a;.a:(Ljava/lang/String;II[BI)Z` @kind static;
  #L08ecd4.  v0:= temp;
  #L08ecd6.  if v0 != 0 then goto L08ecde;
  #L08ecda.  v0:= v3 @kind object;
  #L08ecdc.  goto L08ec34;
  #L08ecde.  v2:= v2 + 2;
  #L08ece2.  goto L08ec66;
  #L08ece4.  v0:= v3 @kind object;
  #L08ece6.  goto L08ec34;
  #L08ece8.  v4:= v4 ^< 4;
  #L08ecec.  v4:= v4 + v9 @kind int;
  #L08ecee.  v6:= v6 + 1;
  #L08ecf2.  goto L08ec90;
  #L08ecf4.  v9:= v2 + 1;
  #L08ecf8.  v10:= v4 ^>> 8;
  #L08ecfc.  v10:= v10 ^& 255;
  #L08ed00.  v10:= (`byte`) v10 @kind i2b;
  #L08ed02.  v8[v2]:= v10 @kind byte;
  #L08ed06.  v2:= v9 + 1;
  #L08ed0a.  v4:= v4 ^& 255;
  #L08ed0e.  v4:= (`byte`) v4 @kind i2b;
  #L08ed10.  v8[v9]:= v4 @kind byte;
  #L08ed14.  v4:= v0;
  #L08ed16.  v0:= v6;
  #L08ed18.  goto L08ec28;
  #L08ed1a.  v0:= length @variable v8;
  #L08ed1c.  v3:= v2 - v1 @kind int;
  #L08ed20.  v0:= v0 - v3 @kind int;
  #L08ed22.  v3:= v2 - v1 @kind int;
  #L08ed26.  call `arraycopy`(v8, v1, v8, v0, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L08ed2c.  v0:= length @variable v8;
  #L08ed2e.  v0:= v0 - v2 @kind int;
  #L08ed30.  v0:= v0 + v1 @kind int;
  #L08ed32.  call `fill`(v8, v1, v0, v5) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #Try_start0.  
  #L08ed38.  call temp:= `getByAddress`(v8) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #Try_end0.  
  #L08ed3e.  v0:= temp @kind object;
  #L08ed40.  goto L08ec34;
  #L08ed44.  v0:= Exception @type ^`java.net.UnknownHostException` @kind object;
  #L08ed46.  v0:= new `java.lang.AssertionError`;
  #L08ed4a.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08ed50.  throw v0;
  #L08ed52.  v2:= v1;
  #L08ed54.  goto L08ec8c;
  catch `java.net.UnknownHostException` @[Try_start0..Try_end0] goto L08ed44;
}
procedure `boolean` `f`(`a.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r$a;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L08ed78.  v0:= "." @kind object;
  #L08ed7c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08ed82.  v0:= temp;
  #L08ed84.  if v0 != 0 then goto L08ed98;
  #L08ed88.  v0:= "%2e" @kind object;
  #L08ed8c.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08ed92.  v0:= temp;
  #L08ed94.  if v0 == 0 then goto L08ed9c;
  #L08ed98.  v0:= 1I;
  #L08ed9a.  return v0;
  #L08ed9c.  v0:= 0I;
  #L08ed9e.  goto L08ed9a;
}
procedure `int` `g`(`java.lang.String` v9 @kind object, `int` v10 , `int` v11 ) @signature `La/r$a;.g:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L08edb0.  v8:= -1I;
  #Try_start0.  
  #L08edb2.  v3:= "" @kind object;
  #L08edb6.  v4:= 0I;
  #L08edb8.  v5:= 0I;
  #L08edba.  v6:= 0I;
  #L08edbc.  v7:= 1I;
  #L08edbe.  v0:= v9 @kind object;
  #L08edc0.  v1:= v10;
  #L08edc2.  v2:= v11;
  #L08edc4.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08edca.  v0:= temp @kind object;
  #L08edcc.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L08edd2.  v0:= temp;
  #L08edd4.  if v0 <= 0 then goto L08ede4;
  #L08edd8.  v1:= 65535I;
  #L08edde.  if v0 > v1 then goto L08ede4;
  #L08ede2.  return v0;
  #L08ede4.  v0:= v8;
  #L08ede6.  goto L08ede2;
  #L08ede8.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L08edea.  v0:= v8;
  #L08edec.  goto L08ede2;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L08ede8;
}
procedure `boolean` `g`(`a.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/r$a;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L08ee10.  v0:= ".." @kind object;
  #L08ee14.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08ee1a.  v0:= temp;
  #L08ee1c.  if v0 != 0 then goto L08ee50;
  #L08ee20.  v0:= "%2e." @kind object;
  #L08ee24.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08ee2a.  v0:= temp;
  #L08ee2c.  if v0 != 0 then goto L08ee50;
  #L08ee30.  v0:= ".%2e" @kind object;
  #L08ee34.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08ee3a.  v0:= temp;
  #L08ee3c.  if v0 != 0 then goto L08ee50;
  #L08ee40.  v0:= "%2e%2e" @kind object;
  #L08ee44.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08ee4a.  v0:= temp;
  #L08ee4c.  if v0 == 0 then goto L08ee54;
  #L08ee50.  v0:= 1I;
  #L08ee52.  return v0;
  #L08ee54.  v0:= 0I;
  #L08ee56.  goto L08ee52;
}
procedure `int` `a`(`a.r$a` v2 @kind this) @signature `La/r$a;.a:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L08ee68.  v0:= v2.`a.r$a.e` @type ^`int`;
  #L08ee6c.  v1:= -1I;
  #L08ee6e.  if v0 == v1 then goto L08ee78;
  #L08ee72.  v0:= v2.`a.r$a.e` @type ^`int`;
  #L08ee76.  return v0;
  #L08ee78.  v0:= v2.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08ee7c.  call temp:= `a`(v0) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L08ee82.  v0:= temp;
  #L08ee84.  goto L08ee76;
}
procedure `a.r$a$a` `a`(`a.r$a` v13 @kind this, `a.r` v14 @kind object, `java.lang.String` v15 @kind object) @signature `La/r$a;.a:(La/r;Ljava/lang/String;)La/r$a$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L08ee98.  v0:= 0I;
  #L08ee9a.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08eea0.  v1:= temp;
  #L08eea2.  call temp:= `a`(v15, v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;II)I` @kind static;
  #L08eea8.  v2:= temp;
  #L08eeaa.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08eeb0.  v0:= temp;
  #L08eeb2.  call temp:= `b`(v15, v2, v0) @signature `La/a/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L08eeb8.  v11:= temp;
  #L08eeba.  call temp:= `b`(v15, v2, v11) @signature `La/r$a;.b:(Ljava/lang/String;II)I` @kind static;
  #L08eec0.  v0:= temp;
  #L08eec2.  v1:= -1I;
  #L08eec4.  if v0 == v1 then goto L08ef8a;
  #L08eec8.  v1:= 1I;
  #L08eeca.  v3:= "https:" @kind object;
  #L08eece.  v4:= 0I;
  #L08eed0.  v5:= 6I;
  #L08eed2.  v0:= v15 @kind object;
  #L08eed4.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08eeda.  v0:= temp;
  #L08eedc.  if v0 == 0 then goto L08ef54;
  #L08eee0.  v0:= "https" @kind object;
  #L08eee4.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08eee8.  v0:= "https:" @kind object;
  #L08eeec.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08eef2.  v0:= temp;
  #L08eef4.  v2:= v2 + v0 @kind int;
  #L08eef6.  v1:= 0I;
  #L08eef8.  v0:= 0I;
  #L08eefa.  call temp:= `c`(v15, v2, v11) @signature `La/r$a;.c:(Ljava/lang/String;II)I` @kind static;
  #L08ef00.  v3:= temp;
  #L08ef02.  v4:= 2I;
  #L08ef04.  if v3 >= v4 then goto L08ef20;
  #L08ef08.  if v14 == 0 then goto L08ef20;
  #L08ef0c.  v4:= v14.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08ef10.  v5:= v13.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08ef14.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08ef1a.  v4:= temp;
  #L08ef1c.  if v4 != 0 then goto L08f184;
  #L08ef20.  v2:= v2 + v3 @kind int;
  #L08ef22.  v8:= v0;
  #L08ef24.  v9:= v1;
  #L08ef26.  v1:= v2;
  #L08ef28.  v0:= "@/\\?#" @kind object;
  #L08ef2c.  call temp:= `a`(v15, v1, v11, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08ef32.  v10:= temp;
  #L08ef34.  if v10 == v11 then goto L08ef9e;
  #L08ef38.  call temp:= `charAt`(v15, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08ef3e.  v0:= temp;
  #L08ef40.  goto L08f1f0;
  #L08ef46.  v0:= v8;
  #L08ef48.  v2:= v1;
  #L08ef4a.  v1:= v9;
  #L08ef4c.  v8:= v0;
  #L08ef4e.  v9:= v1;
  #L08ef50.  v1:= v2;
  #L08ef52.  goto L08ef28;
  #L08ef54.  v1:= 1I;
  #L08ef56.  v3:= "http:" @kind object;
  #L08ef5a.  v4:= 0I;
  #L08ef5c.  v5:= 5I;
  #L08ef5e.  v0:= v15 @kind object;
  #L08ef60.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L08ef66.  v0:= temp;
  #L08ef68.  if v0 == 0 then goto L08ef84;
  #L08ef6c.  v0:= "http" @kind object;
  #L08ef70.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08ef74.  v0:= "http:" @kind object;
  #L08ef78.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08ef7e.  v0:= temp;
  #L08ef80.  v2:= v2 + v0 @kind int;
  #L08ef82.  goto L08eef6;
  #L08ef84.  v0:= `@@a.r$a$a.c` @type ^`a.r$a$a` @kind object;
  #L08ef88.  return v0 @kind object;
  #L08ef8a.  if v14 == 0 then goto L08ef98;
  #L08ef8e.  v0:= v14.`a.r.a` @type ^`java.lang.String` @kind object;
  #L08ef92.  v13.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08ef96.  goto L08eef6;
  #L08ef98.  v0:= `@@a.r$a$a.b` @type ^`a.r$a$a` @kind object;
  #L08ef9c.  goto L08ef88;
  #L08ef9e.  v0:= -1I;
  #L08efa0.  goto L08ef40;
  #L08efa2.  if v8 != 0 then goto L08f034;
  #L08efa6.  v0:= 58I;
  #L08efaa.  call temp:= `a`(v15, v1, v10, v0) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08efb0.  v2:= temp;
  #L08efb2.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08efb6.  v4:= 1I;
  #L08efb8.  v5:= 0I;
  #L08efba.  v6:= 0I;
  #L08efbc.  v7:= 1I;
  #L08efbe.  v0:= v15 @kind object;
  #L08efc0.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08efc6.  v0:= temp @kind object;
  #L08efc8.  if v9 == 0 then goto L08effe;
  #L08efcc.  v1:= new `java.lang.StringBuilder`;
  #L08efd0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08efd6.  v3:= v13.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L08efda.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08efe0.  v1:= temp @kind object;
  #L08efe2.  v3:= "%40" @kind object;
  #L08efe6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08efec.  v1:= temp @kind object;
  #L08efee.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08eff4.  v0:= temp @kind object;
  #L08eff6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08effc.  v0:= temp @kind object;
  #L08effe.  v13.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08f002.  if v2 == v10 then goto L08f028;
  #L08f006.  v8:= 1I;
  #L08f008.  v1:= v2 + 1;
  #L08f00c.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08f010.  v4:= 1I;
  #L08f012.  v5:= 0I;
  #L08f014.  v6:= 0I;
  #L08f016.  v7:= 1I;
  #L08f018.  v0:= v15 @kind object;
  #L08f01a.  v2:= v10;
  #L08f01c.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f022.  v0:= temp @kind object;
  #L08f024.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08f028.  v9:= 1I;
  #L08f02a.  v2:= v10 + 1;
  #L08f02e.  v0:= v8;
  #L08f030.  v1:= v9;
  #L08f032.  goto L08ef4c;
  #L08f034.  v0:= new `java.lang.StringBuilder`;
  #L08f038.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08f03e.  v2:= v13.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08f042.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f048.  v0:= temp @kind object;
  #L08f04a.  v2:= "%40" @kind object;
  #L08f04e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f054.  v12:= temp @kind object;
  #L08f056.  v3:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08f05a.  v4:= 1I;
  #L08f05c.  v5:= 0I;
  #L08f05e.  v6:= 0I;
  #L08f060.  v7:= 1I;
  #L08f062.  v0:= v15 @kind object;
  #L08f064.  v2:= v10;
  #L08f066.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f06c.  v0:= temp @kind object;
  #L08f06e.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f074.  v0:= temp @kind object;
  #L08f076.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08f07c.  v0:= temp @kind object;
  #L08f07e.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08f082.  goto L08f02a;
  #L08f084.  call temp:= `d`(v15, v1, v10) @signature `La/r$a;.d:(Ljava/lang/String;II)I` @kind static;
  #L08f08a.  v0:= temp;
  #L08f08c.  v2:= v0 + 1;
  #L08f090.  if v2 >= v10 then goto L08f0c2;
  #L08f094.  call temp:= `e`(v15, v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L08f09a.  v1:= temp @kind object;
  #L08f09c.  v13.`a.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L08f0a0.  v0:= v0 + 1;
  #L08f0a4.  call temp:= `g`(v15, v0, v10) @signature `La/r$a;.g:(Ljava/lang/String;II)I` @kind static;
  #L08f0aa.  v0:= temp;
  #L08f0ac.  v13.`a.r$a.e` @type ^`int` := v0;
  #L08f0b0.  v0:= v13.`a.r$a.e` @type ^`int`;
  #L08f0b4.  v1:= -1I;
  #L08f0b6.  if v0 != v1 then goto L08f0de;
  #L08f0ba.  v0:= `@@a.r$a$a.d` @type ^`a.r$a$a` @kind object;
  #L08f0be.  goto L08ef88;
  #L08f0c2.  call temp:= `e`(v15, v1, v0) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L08f0c8.  v0:= temp @kind object;
  #L08f0ca.  v13.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08f0ce.  v0:= v13.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08f0d2.  call temp:= `a`(v0) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L08f0d8.  v0:= temp;
  #L08f0da.  v13.`a.r$a.e` @type ^`int` := v0;
  #L08f0de.  v0:= v13.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08f0e2.  if v0 != 0 then goto L08f0ee;
  #L08f0e6.  v0:= `@@a.r$a$a.e` @type ^`a.r$a$a` @kind object;
  #L08f0ea.  goto L08ef88;
  #L08f0ee.  v2:= v10;
  #L08f0f0.  v0:= "?#" @kind object;
  #L08f0f4.  call temp:= `a`(v15, v2, v11, v0) @signature `La/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L08f0fa.  v0:= temp;
  #L08f0fc.  call `a`(v13, v15, v2, v0) @signature `La/r$a;.a:(Ljava/lang/String;II)V` @kind direct;
  #L08f102.  if v0 >= v11 then goto L08f1ec;
  #L08f106.  call temp:= `charAt`(v15, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08f10c.  v1:= temp;
  #L08f10e.  v2:= 63I;
  #L08f112.  if v1 != v2 then goto L08f1ec;
  #L08f116.  v1:= 35I;
  #L08f11a.  call temp:= `a`(v15, v0, v11, v1) @signature `La/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L08f120.  v2:= temp;
  #L08f122.  v1:= v0 + 1;
  #L08f126.  v3:= " \"'<>#" @kind object;
  #L08f12a.  v4:= 1I;
  #L08f12c.  v5:= 0I;
  #L08f12e.  v6:= 1I;
  #L08f130.  v7:= 1I;
  #L08f132.  v0:= v15 @kind object;
  #L08f134.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f13a.  v0:= temp @kind object;
  #L08f13c.  call temp:= `b`(v0) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L08f142.  v0:= temp @kind object;
  #L08f144.  v13.`a.r$a.g` @type ^`java.util.List` := v0 @kind object;
  #L08f148.  if v2 >= v11 then goto L08f17c;
  #L08f14c.  call temp:= `charAt`(v15, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08f152.  v0:= temp;
  #L08f154.  v1:= 35I;
  #L08f158.  if v0 != v1 then goto L08f17c;
  #L08f15c.  v1:= v2 + 1;
  #L08f160.  v3:= "" @kind object;
  #L08f164.  v4:= 1I;
  #L08f166.  v5:= 0I;
  #L08f168.  v6:= 0I;
  #L08f16a.  v7:= 0I;
  #L08f16c.  v0:= v15 @kind object;
  #L08f16e.  v2:= v11;
  #L08f170.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `La/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f176.  v0:= temp @kind object;
  #L08f178.  v13.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L08f17c.  v0:= `@@a.r$a$a.a` @type ^`a.r$a$a` @kind object;
  #L08f180.  goto L08ef88;
  #L08f184.  call temp:= `d`(v14) @signature `La/r;.d:()Ljava/lang/String;` @kind virtual;
  #L08f18a.  v0:= temp @kind object;
  #L08f18c.  v13.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08f190.  call temp:= `e`(v14) @signature `La/r;.e:()Ljava/lang/String;` @kind virtual;
  #L08f196.  v0:= temp @kind object;
  #L08f198.  v13.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08f19c.  v0:= v14.`a.r.b` @type ^`java.lang.String` @kind object;
  #L08f1a0.  v13.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08f1a4.  v0:= v14.`a.r.c` @type ^`int`;
  #L08f1a8.  v13.`a.r$a.e` @type ^`int` := v0;
  #L08f1ac.  v0:= v13.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08f1b0.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L08f1b6.  v0:= v13.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08f1ba.  call temp:= `i`(v14) @signature `La/r;.i:()Ljava/util/List;` @kind virtual;
  #L08f1c0.  v1:= temp @kind object;
  #L08f1c2.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L08f1c8.  if v2 == v11 then goto L08f1dc;
  #L08f1cc.  call temp:= `charAt`(v15, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08f1d2.  v0:= temp;
  #L08f1d4.  v1:= 35I;
  #L08f1d8.  if v0 != v1 then goto L08f0f0;
  #L08f1dc.  call temp:= `j`(v14) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L08f1e2.  v0:= temp @kind object;
  #L08f1e4.  call temp:= `e`(v13, v0) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @kind virtual;
  #L08f1ea.  goto L08f0f0;
  #L08f1ec.  v2:= v0;
  #L08f1ee.  goto L08f148;
  #L08f1f0.  switch v0
                  | -1 => goto L08f084
                  | 35 => goto L08f084
                  | 47 => goto L08f084
                  | 63 => goto L08f084
                  | 64 => goto L08efa2
                  | 92 => goto L08f084
                  | else => goto L08ef46;
}
procedure `a.r$a` `a`(`a.r$a` v3 @kind this, `int` v4 ) @signature `La/r$a;.a:(I)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08f234.  if v4 <= 0 then goto L08f242;
  #L08f238.  v0:= 65535I;
  #L08f23e.  if v4 <= v0 then goto L08f274;
  #L08f242.  v0:= new `java.lang.IllegalArgumentException`;
  #L08f246.  v1:= new `java.lang.StringBuilder`;
  #L08f24a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08f250.  v2:= "unexpected port: " @kind object;
  #L08f254.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f25a.  v1:= temp @kind object;
  #L08f25c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f262.  v1:= temp @kind object;
  #L08f264.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08f26a.  v1:= temp @kind object;
  #L08f26c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f272.  throw v0;
  #L08f274.  v3.`a.r$a.e` @type ^`int` := v4;
  #L08f278.  return v3 @kind object;
}
procedure `a.r$a` `a`(`a.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r$a;.a:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08f28c.  if v4 != 0 then goto L08f2a0;
  #L08f290.  v0:= new `java.lang.NullPointerException`;
  #L08f294.  v1:= "scheme == null" @kind object;
  #L08f298.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f29e.  throw v0;
  #L08f2a0.  v0:= "http" @kind object;
  #L08f2a4.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08f2aa.  v0:= temp;
  #L08f2ac.  if v0 == 0 then goto L08f2ba;
  #L08f2b0.  v0:= "http" @kind object;
  #L08f2b4.  v3.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08f2b8.  return v3 @kind object;
  #L08f2ba.  v0:= "https" @kind object;
  #L08f2be.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08f2c4.  v0:= temp;
  #L08f2c6.  if v0 == 0 then goto L08f2d4;
  #L08f2ca.  v0:= "https" @kind object;
  #L08f2ce.  v3.`a.r$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L08f2d2.  goto L08f2b8;
  #L08f2d4.  v0:= new `java.lang.IllegalArgumentException`;
  #L08f2d8.  v1:= new `java.lang.StringBuilder`;
  #L08f2dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08f2e2.  v2:= "unexpected scheme: " @kind object;
  #L08f2e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f2ec.  v1:= temp @kind object;
  #L08f2ee.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f2f4.  v1:= temp @kind object;
  #L08f2f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08f2fc.  v1:= temp @kind object;
  #L08f2fe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f304.  throw v0;
}
procedure `a.r$a` `b`(`a.r$a` v11 @kind this) @signature `La/r$a;.b:()La/r$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L08f318.  v4:= 0I;
  #L08f31a.  v2:= 1I;
  #L08f31c.  v0:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08f320.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08f326.  v7:= temp;
  #L08f328.  v6:= v4;
  #L08f32a.  if v6 >= v7 then goto L08f360;
  #L08f32e.  v0:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08f332.  call temp:= `get`(v0, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08f338.  v0:= temp @kind object;
  #L08f33a.  v0:= (`java.lang.String`) v0 @kind object;
  #L08f33e.  v8:= v11.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08f342.  v1:= "[]" @kind object;
  #L08f346.  v3:= v2;
  #L08f348.  v5:= v2;
  #L08f34a.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f350.  v0:= temp @kind object;
  #L08f352.  call temp:= `set`(v8, v6, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L08f358.  v0:= v6 + 1;
  #L08f35c.  v6:= v0;
  #L08f35e.  goto L08f32a;
  #L08f360.  v0:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08f364.  if v0 == 0 then goto L08f3b2;
  #L08f368.  v0:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08f36c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08f372.  v1:= temp;
  #L08f374.  v0:= v4;
  #L08f376.  if v0 >= v1 then goto L08f3b2;
  #L08f37a.  v3:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08f37e.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08f384.  v5:= temp @kind object;
  #L08f386.  v5:= (`java.lang.String`) v5 @kind object;
  #L08f38a.  if v5 == 0 then goto L08f3ac;
  #L08f38e.  v3:= v11.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08f392.  v6:= "\\^`{|}" @kind object;
  #L08f396.  v7:= v2;
  #L08f398.  v8:= v2;
  #L08f39a.  v9:= v2;
  #L08f39c.  v10:= v2;
  #L08f39e.  call temp:= `a`(v5, v6, v7, v8, v9, v10) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f3a4.  v5:= temp @kind object;
  #L08f3a6.  call temp:= `set`(v3, v0, v5) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L08f3ac.  v0:= v0 + 1;
  #L08f3b0.  goto L08f376;
  #L08f3b2.  v0:= v11.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08f3b6.  if v0 == 0 then goto L08f3d2;
  #L08f3ba.  v0:= v11.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08f3be.  v1:= " \"#<>\\^`{|}" @kind object;
  #L08f3c2.  v3:= v2;
  #L08f3c4.  v5:= v4;
  #L08f3c6.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f3cc.  v0:= temp @kind object;
  #L08f3ce.  v11.`a.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L08f3d2.  return v11 @kind object;
}
procedure `a.r$a` `b`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.b:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08f3e4.  v2:= 0I;
  #L08f3e6.  if v7 != 0 then goto L08f3fa;
  #L08f3ea.  v0:= new `java.lang.NullPointerException`;
  #L08f3ee.  v1:= "username == null" @kind object;
  #L08f3f2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f3f8.  throw v0;
  #L08f3fa.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08f3fe.  v5:= 1I;
  #L08f400.  v0:= v7 @kind object;
  #L08f402.  v3:= v2;
  #L08f404.  v4:= v2;
  #L08f406.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f40c.  v0:= temp @kind object;
  #L08f40e.  v6.`a.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L08f412.  return v6 @kind object;
}
procedure `a.r$a` `c`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.c:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08f424.  v2:= 0I;
  #L08f426.  if v7 != 0 then goto L08f43a;
  #L08f42a.  v0:= new `java.lang.NullPointerException`;
  #L08f42e.  v1:= "password == null" @kind object;
  #L08f432.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f438.  throw v0;
  #L08f43a.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L08f43e.  v5:= 1I;
  #L08f440.  v0:= v7 @kind object;
  #L08f442.  v3:= v2;
  #L08f444.  v4:= v2;
  #L08f446.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f44c.  v0:= temp @kind object;
  #L08f44e.  v6.`a.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L08f452.  return v6 @kind object;
}
procedure `a.r` `c`(`a.r$a` v2 @kind this) @signature `La/r$a;.c:()La/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08f464.  v0:= v2.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08f468.  if v0 != 0 then goto L08f47c;
  #L08f46c.  v0:= new `java.lang.IllegalStateException`;
  #L08f470.  v1:= "scheme == null" @kind object;
  #L08f474.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f47a.  throw v0;
  #L08f47c.  v0:= v2.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08f480.  if v0 != 0 then goto L08f494;
  #L08f484.  v0:= new `java.lang.IllegalStateException`;
  #L08f488.  v1:= "host == null" @kind object;
  #L08f48c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f492.  throw v0;
  #L08f494.  v0:= new `a.r`;
  #L08f498.  call `<init>`(v0, v2) @signature `La/r;.<init>:(La/r$a;)V` @kind direct;
  #L08f49e.  return v0 @kind object;
}
procedure `a.r$a` `d`(`a.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/r$a;.d:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08f4b0.  if v4 != 0 then goto L08f4c4;
  #L08f4b4.  v0:= new `java.lang.NullPointerException`;
  #L08f4b8.  v1:= "host == null" @kind object;
  #L08f4bc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f4c2.  throw v0;
  #L08f4c4.  v0:= 0I;
  #L08f4c6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08f4cc.  v1:= temp;
  #L08f4ce.  call temp:= `e`(v4, v0, v1) @signature `La/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L08f4d4.  v0:= temp @kind object;
  #L08f4d6.  if v0 != 0 then goto L08f50c;
  #L08f4da.  v0:= new `java.lang.IllegalArgumentException`;
  #L08f4de.  v1:= new `java.lang.StringBuilder`;
  #L08f4e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08f4e8.  v2:= "unexpected host: " @kind object;
  #L08f4ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f4f2.  v1:= temp @kind object;
  #L08f4f4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f4fa.  v1:= temp @kind object;
  #L08f4fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08f502.  v1:= temp @kind object;
  #L08f504.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08f50a.  throw v0;
  #L08f50c.  v3.`a.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L08f510.  return v3 @kind object;
}
procedure `a.r$a` `e`(`a.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `La/r$a;.e:(Ljava/lang/String;)La/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L08f524.  v2:= 1I;
  #L08f526.  if v7 == 0 then goto L08f54c;
  #L08f52a.  v1:= " \"'<>#" @kind object;
  #L08f52e.  v3:= 0I;
  #L08f530.  v0:= v7 @kind object;
  #L08f532.  v4:= v2;
  #L08f534.  v5:= v2;
  #L08f536.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `La/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L08f53c.  v0:= temp @kind object;
  #L08f53e.  call temp:= `b`(v0) @signature `La/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L08f544.  v0:= temp @kind object;
  #L08f546.  v6.`a.r$a.g` @type ^`java.util.List` := v0 @kind object;
  #L08f54a.  return v6 @kind object;
  #L08f54c.  v0:= 0I;
  #L08f54e.  goto L08f546;
}
procedure `java.lang.String` `toString`(`a.r$a` v4 @kind this) @signature `La/r$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08f560.  v3:= 58I;
  #L08f564.  v0:= new `java.lang.StringBuilder`;
  #L08f568.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08f56e.  v1:= v4.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08f572.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f578.  v1:= "://" @kind object;
  #L08f57c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f582.  v1:= v4.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L08f586.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08f58c.  v1:= temp;
  #L08f58e.  if v1 == 0 then goto L08f5a2;
  #L08f592.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08f596.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08f59c.  v1:= temp;
  #L08f59e.  if v1 != 0 then goto L08f5d6;
  #L08f5a2.  v1:= v4.`a.r$a.b` @type ^`java.lang.String` @kind object;
  #L08f5a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f5ac.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08f5b0.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08f5b6.  v1:= temp;
  #L08f5b8.  if v1 != 0 then goto L08f5cc;
  #L08f5bc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f5c2.  v1:= v4.`a.r$a.c` @type ^`java.lang.String` @kind object;
  #L08f5c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f5cc.  v1:= 64I;
  #L08f5d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f5d6.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08f5da.  call temp:= `indexOf`(v1, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L08f5e0.  v1:= temp;
  #L08f5e2.  v2:= -1I;
  #L08f5e4.  if v1 == v2 then goto L08f676;
  #L08f5e8.  v1:= 91I;
  #L08f5ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f5f2.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08f5f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f5fc.  v1:= 93I;
  #L08f600.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f606.  call temp:= `a`(v4) @signature `La/r$a;.a:()I` @kind virtual;
  #L08f60c.  v1:= temp;
  #L08f60e.  v2:= v4.`a.r$a.a` @type ^`java.lang.String` @kind object;
  #L08f612.  call temp:= `a`(v2) @signature `La/r;.a:(Ljava/lang/String;)I` @kind static;
  #L08f618.  v2:= temp;
  #L08f61a.  if v1 == v2 then goto L08f62a;
  #L08f61e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f624.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f62a.  v1:= v4.`a.r$a.f` @type ^`java.util.List` @kind object;
  #L08f62e.  call `a`(v0, v1) @signature `La/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L08f634.  v1:= v4.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08f638.  if v1 == 0 then goto L08f650;
  #L08f63c.  v1:= 63I;
  #L08f640.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f646.  v1:= v4.`a.r$a.g` @type ^`java.util.List` @kind object;
  #L08f64a.  call `b`(v0, v1) @signature `La/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L08f650.  v1:= v4.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08f654.  if v1 == 0 then goto L08f66c;
  #L08f658.  v1:= 35I;
  #L08f65c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f662.  v1:= v4.`a.r$a.h` @type ^`java.lang.String` @kind object;
  #L08f666.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f66c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08f672.  v0:= temp @kind object;
  #L08f674.  return v0 @kind object;
  #L08f676.  v1:= v4.`a.r$a.d` @type ^`java.lang.String` @kind object;
  #L08f67a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08f680.  goto L08f606;
}

record `a.a.h.d` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `a.a.h.d` `@@a.a.h.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/h/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L089a60.  v0:= new `a.a.h.d`;
  #L089a64.  call `<init>`(v0) @signature `La/a/h/d;.<init>:()V` @kind direct;
  #L089a6a.  `@@a.a.h.d.a` @type ^`a.a.h.d` := v0 @kind object;
  #L089a6e.  return @kind void;
}
procedure `void` `<init>`(`a.a.h.d` v0 @kind this) @signature `La/a/h/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L089a80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L089a86.  return @kind void;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v5 @kind object) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089a98.  v0:= 7I;
  #L089a9a.  call temp:= `a`(v5, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L089aa0.  v0:= temp @kind object;
  #L089aa2.  v1:= 2I;
  #L089aa4.  call temp:= `a`(v5, v1) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L089aaa.  v1:= temp @kind object;
  #L089aac.  v2:= new `java.util.ArrayList`;
  #L089ab0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089ab6.  v3:= temp;
  #L089ab8.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089abe.  v4:= temp;
  #L089ac0.  v3:= v3 + v4 @kind int;
  #L089ac2.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L089ac8.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L089ace.  call temp:= `addAll`(v2, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L089ad4.  return v2 @kind object;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v5 @kind object, `int` v6 ) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089ae8.  v2:= new `java.util.ArrayList`;
  #L089aec.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L089af2.  call temp:= `getSubjectAlternativeNames`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L089af8.  v0:= temp @kind object;
  #L089afa.  if v0 != 0 then goto L089b08;
  #L089afe.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L089b04.  v0:= temp @kind object;
  #L089b06.  return v0 @kind object;
  #L089b08.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L089b0e.  v3:= temp @kind object;
  #L089b10.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L089b16.  v0:= temp;
  #L089b18.  if v0 == 0 then goto L089b7e;
  #L089b1c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L089b22.  v0:= temp @kind object;
  #L089b24.  v0:= (`java.util.List`) v0 @kind object;
  #L089b28.  if v0 == 0 then goto L089b10;
  #L089b2c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089b32.  v1:= temp;
  #L089b34.  v4:= 2I;
  #L089b36.  if v1 < v4 then goto L089b10;
  #L089b3a.  v1:= 0I;
  #L089b3c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089b42.  v1:= temp @kind object;
  #L089b44.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L089b48.  if v1 == 0 then goto L089b10;
  #L089b4c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L089b52.  v1:= temp;
  #L089b54.  if v1 != v6 then goto L089b10;
  #L089b58.  v1:= 1I;
  #L089b5a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089b60.  v0:= temp @kind object;
  #L089b62.  v0:= (`java.lang.String`) v0 @kind object;
  #L089b66.  if v0 == 0 then goto L089b10;
  #L089b6a.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L089b70.  goto L089b10;
  #L089b72.  v0:= Exception @type ^`java.security.cert.CertificateParsingException` @kind object;
  #L089b74.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L089b7a.  v0:= temp @kind object;
  #L089b7c.  goto L089b06;
  #L089b7e.  v0:= v2 @kind object;
  #L089b80.  goto L089b06;
  catch `java.security.cert.CertificateParsingException` @[Try_start0..Try_end0] goto L089b72;
}
procedure `boolean` `a`(`a.a.h.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L089ba4.  v6:= -1I;
  #L089ba6.  v5:= 46I;
  #L089baa.  v1:= 1I;
  #L089bac.  v0:= 0I;
  #L089bae.  if v8 == 0 then goto L089bde;
  #L089bb2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089bb8.  v2:= temp;
  #L089bba.  if v2 == 0 then goto L089bde;
  #L089bbe.  v2:= "." @kind object;
  #L089bc2.  call temp:= `startsWith`(v8, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L089bc8.  v2:= temp;
  #L089bca.  if v2 != 0 then goto L089bde;
  #L089bce.  v2:= ".." @kind object;
  #L089bd2.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L089bd8.  v2:= temp;
  #L089bda.  if v2 == 0 then goto L089be0;
  #L089bde.  return v0;
  #L089be0.  if v9 == 0 then goto L089bde;
  #L089be4.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089bea.  v2:= temp;
  #L089bec.  if v2 == 0 then goto L089bde;
  #L089bf0.  v2:= "." @kind object;
  #L089bf4.  call temp:= `startsWith`(v9, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L089bfa.  v2:= temp;
  #L089bfc.  if v2 != 0 then goto L089bde;
  #L089c00.  v2:= ".." @kind object;
  #L089c04.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L089c0a.  v2:= temp;
  #L089c0c.  if v2 != 0 then goto L089bde;
  #L089c10.  v2:= "." @kind object;
  #L089c14.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L089c1a.  v2:= temp;
  #L089c1c.  if v2 != 0 then goto L089c42;
  #L089c20.  v2:= new `java.lang.StringBuilder`;
  #L089c24.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089c2a.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089c30.  v2:= temp @kind object;
  #L089c32.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089c38.  v2:= temp @kind object;
  #L089c3a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089c40.  v8:= temp @kind object;
  #L089c42.  v2:= "." @kind object;
  #L089c46.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L089c4c.  v2:= temp;
  #L089c4e.  if v2 != 0 then goto L089c74;
  #L089c52.  v2:= new `java.lang.StringBuilder`;
  #L089c56.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L089c5c.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L089c62.  v2:= temp @kind object;
  #L089c64.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L089c6a.  v2:= temp @kind object;
  #L089c6c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L089c72.  v9:= temp @kind object;
  #L089c74.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L089c78.  call temp:= `toLowerCase`(v9, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L089c7e.  v2:= temp @kind object;
  #L089c80.  v3:= "*" @kind object;
  #L089c84.  call temp:= `contains`(v2, v3) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L089c8a.  v3:= temp;
  #L089c8c.  if v3 != 0 then goto L089c9a;
  #L089c90.  call temp:= `equals`(v8, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L089c96.  v0:= temp;
  #L089c98.  goto L089bde;
  #L089c9a.  v3:= "*." @kind object;
  #L089c9e.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L089ca4.  v3:= temp;
  #L089ca6.  if v3 == 0 then goto L089bde;
  #L089caa.  v3:= 42I;
  #L089cae.  call temp:= `indexOf`(v2, v3, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L089cb4.  v3:= temp;
  #L089cb6.  if v3 != v6 then goto L089bde;
  #L089cba.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089cc0.  v3:= temp;
  #L089cc2.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089cc8.  v4:= temp;
  #L089cca.  if v3 < v4 then goto L089bde;
  #L089cce.  v3:= "*." @kind object;
  #L089cd2.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L089cd8.  v3:= temp;
  #L089cda.  if v3 != 0 then goto L089bde;
  #L089cde.  call temp:= `substring`(v2, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L089ce4.  v2:= temp @kind object;
  #L089ce6.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L089cec.  v3:= temp;
  #L089cee.  if v3 == 0 then goto L089bde;
  #L089cf2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089cf8.  v3:= temp;
  #L089cfa.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L089d00.  v2:= temp;
  #L089d02.  v2:= v3 - v2 @kind int;
  #L089d06.  if v2 <= 0 then goto L089d1a;
  #L089d0a.  v2:= v2 + -1;
  #L089d0e.  call temp:= `lastIndexOf`(v8, v5, v2) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L089d14.  v2:= temp;
  #L089d16.  if v2 != v6 then goto L089bde;
  #L089d1a.  v0:= v1;
  #L089d1c.  goto L089bde;
}
procedure `boolean` `b`(`a.a.h.d` v5 @kind this, `java.lang.String` v6 @kind object, `java.security.cert.X509Certificate` v7 @kind object) @signature `La/a/h/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L089d30.  v1:= 0I;
  #L089d32.  v0:= 7I;
  #L089d34.  call temp:= `a`(v7, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L089d3a.  v3:= temp @kind object;
  #L089d3c.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089d42.  v4:= temp;
  #L089d44.  v2:= v1;
  #L089d46.  if v2 >= v4 then goto L089d6e;
  #L089d4a.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089d50.  v0:= temp @kind object;
  #L089d52.  v0:= (`java.lang.String`) v0 @kind object;
  #L089d56.  call temp:= `equalsIgnoreCase`(v6, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L089d5c.  v0:= temp;
  #L089d5e.  if v0 == 0 then goto L089d66;
  #L089d62.  v0:= 1I;
  #L089d64.  return v0;
  #L089d66.  v0:= v2 + 1;
  #L089d6a.  v2:= v0;
  #L089d6c.  goto L089d46;
  #L089d6e.  v0:= v1;
  #L089d70.  goto L089d64;
}
procedure `boolean` `c`(`a.a.h.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.security.cert.X509Certificate` v9 @kind object) @signature `La/a/h/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L089d84.  v1:= 1I;
  #L089d86.  v2:= 0I;
  #L089d88.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L089d8c.  call temp:= `toLowerCase`(v8, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L089d92.  v4:= temp @kind object;
  #L089d94.  v0:= 2I;
  #L089d96.  call temp:= `a`(v9, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L089d9c.  v5:= temp @kind object;
  #L089d9e.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L089da4.  v6:= temp;
  #L089da6.  v3:= v2;
  #L089da8.  v0:= v2;
  #L089daa.  if v3 >= v6 then goto L089dd4;
  #L089dae.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L089db4.  v0:= temp @kind object;
  #L089db6.  v0:= (`java.lang.String`) v0 @kind object;
  #L089dba.  call temp:= `a`(v7, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L089dc0.  v0:= temp;
  #L089dc2.  if v0 == 0 then goto L089dca;
  #L089dc6.  v0:= v1;
  #L089dc8.  return v0;
  #L089dca.  v0:= v3 + 1;
  #L089dce.  v3:= v0;
  #L089dd0.  v0:= v1;
  #L089dd2.  goto L089daa;
  #L089dd4.  if v0 != 0 then goto L089e04;
  #L089dd8.  call temp:= `getSubjectX500Principal`(v9) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L089dde.  v0:= temp @kind object;
  #L089de0.  v1:= new `a.a.h.c`;
  #L089de4.  call `<init>`(v1, v0) @signature `La/a/h/c;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @kind direct;
  #L089dea.  v0:= "cn" @kind object;
  #L089dee.  call temp:= `a`(v1, v0) @signature `La/a/h/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L089df4.  v0:= temp @kind object;
  #L089df6.  if v0 == 0 then goto L089e04;
  #L089dfa.  call temp:= `a`(v7, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L089e00.  v0:= temp;
  #L089e02.  goto L089dc8;
  #L089e04.  v0:= v2;
  #L089e06.  goto L089dc8;
}
procedure `boolean` `a`(`a.a.h.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L089e18.  call temp:= `c`(v2) @signature `La/a/c;.c:(Ljava/lang/String;)Z` @kind static;
  #L089e1e.  v0:= temp;
  #L089e20.  if v0 == 0 then goto L089e2e;
  #L089e24.  call temp:= `b`(v1, v2, v3) @signature `La/a/h/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L089e2a.  v0:= temp;
  #L089e2c.  return v0;
  #L089e2e.  call temp:= `c`(v1, v2, v3) @signature `La/a/h/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L089e34.  v0:= temp;
  #L089e36.  goto L089e2c;
}
procedure `boolean` `verify`(`a.a.h.d` v3 @kind this, `java.lang.String` v4 @kind object, `javax.net.ssl.SSLSession` v5 @kind object) @signature `La/a/h/d;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L089e48.  v1:= 0I;
  #Try_start0.  
  #L089e4a.  call temp:= `getPeerCertificates`(v5) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L089e50.  v0:= temp @kind object;
  #L089e52.  v2:= 0I;
  #L089e54.  v0:= v0[v2] @kind object;
  #L089e58.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L089e5c.  call temp:= `a`(v3, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #Try_end0.  
  #L089e62.  v0:= temp;
  #L089e64.  return v0;
  #L089e66.  v0:= Exception @type ^`javax.net.ssl.SSLException` @kind object;
  #L089e68.  v0:= v1;
  #L089e6a.  goto L089e64;
  catch `javax.net.ssl.SSLException` @[Try_start0..Try_end0] goto L089e66;
}

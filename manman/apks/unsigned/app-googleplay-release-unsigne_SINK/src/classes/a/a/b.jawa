record `a.a.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `a.a.b.b` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`a.a.b` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `La/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L07d368.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07d36e.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07d374.  v0:= temp @kind object;
  #L07d376.  v1.`a.a.b.b` @type ^`java.lang.String` := v0 @kind object;
  #L07d37a.  return @kind void;
}
procedure `void` `b`() @signature `La/a/b;.b:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`a.a.b` v3 @kind this) @signature `La/a/b;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L07d38c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L07d392.  v0:= temp @kind object;
  #L07d394.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L07d39a.  v0:= temp @kind object;
  #L07d39c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L07d3a2.  v1:= temp @kind object;
  #L07d3a4.  v2:= v3.`a.a.b.b` @type ^`java.lang.String` @kind object;
  #L07d3a8.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #Try_start0.  
  #L07d3ae.  call `b`(v3) @signature `La/a/b;.b:()V` @kind virtual;
  #Try_end0.  
  #L07d3b4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L07d3ba.  v1:= temp @kind object;
  #L07d3bc.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L07d3c2.  return @kind void;
  #L07d3c4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07d3c6.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L07d3cc.  v2:= temp @kind object;
  #L07d3ce.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L07d3d4.  throw v1;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07d3c4;
}

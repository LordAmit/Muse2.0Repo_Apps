record `a.a.c.b` @kind class @AccessFlag PUBLIC_FINAL extends `a.s` @kind interface {
  `boolean` `a.a.c.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.c.b` v0 @kind this, `boolean` v1 ) @signature `La/a/c/b;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L07d718.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07d71e.  v0.`a.a.c.b.a` @type ^`boolean` := v1 @kind boolean;
  #L07d722.  return @kind void;
}
procedure `a.z` `a`(`a.a.c.b` v8 @kind this, `a.s$a` v9 @kind object) @signature `La/a/c/b;.a:(La/s$a;)La/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07d734.  v0:= v9 @kind object;
  #L07d736.  v0:= (`a.a.c.g`) v0 @kind object;
  #L07d73a.  call temp:= `c`(v0) @signature `La/a/c/g;.c:()La/a/c/c;` @kind virtual;
  #L07d740.  v1:= temp @kind object;
  #L07d742.  v0:= v9 @kind object;
  #L07d744.  v0:= (`a.a.c.g`) v0 @kind object;
  #L07d748.  call temp:= `b`(v0) @signature `La/a/c/g;.b:()La/a/b/g;` @kind virtual;
  #L07d74e.  v2:= temp @kind object;
  #L07d750.  call temp:= `a`(v9) @signature `La/s$a;.a:()La/x;` @kind interface;
  #L07d756.  v3:= temp @kind object;
  #L07d758.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L07d75e.  v4:= temp @kind wide;
  #L07d760.  call `a`(v1, v3) @signature `La/a/c/c;.a:(La/x;)V` @kind interface;
  #L07d766.  v0:= 0I;
  #L07d768.  call temp:= `b`(v3) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L07d76e.  v6:= temp @kind object;
  #L07d770.  call temp:= `c`(v6) @signature `La/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L07d776.  v6:= temp;
  #L07d778.  if v6 == 0 then goto L07d7ec;
  #L07d77c.  call temp:= `d`(v3) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07d782.  v6:= temp @kind object;
  #L07d784.  if v6 == 0 then goto L07d7ec;
  #L07d788.  v6:= "100-continue" @kind object;
  #L07d78c.  v7:= "Expect" @kind object;
  #L07d790.  call temp:= `a`(v3, v7) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07d796.  v7:= temp @kind object;
  #L07d798.  call temp:= `equalsIgnoreCase`(v6, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07d79e.  v6:= temp;
  #L07d7a0.  if v6 == 0 then goto L07d7b4;
  #L07d7a4.  call `a`(v1) @signature `La/a/c/c;.a:()V` @kind interface;
  #L07d7aa.  v0:= 1I;
  #L07d7ac.  call temp:= `a`(v1, v0) @signature `La/a/c/c;.a:(Z)La/z$a;` @kind interface;
  #L07d7b2.  v0:= temp @kind object;
  #L07d7b4.  if v0 != 0 then goto L07d7ec;
  #L07d7b8.  call temp:= `d`(v3) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07d7be.  v6:= temp @kind object;
  #L07d7c0.  call temp:= `b`(v6) @signature `La/y;.b:()J` @kind virtual;
  #L07d7c6.  v6:= temp @kind wide;
  #L07d7c8.  call temp:= `a`(v1, v3, v6) @signature `La/a/c/c;.a:(La/x;J)Lb/q;` @kind interface;
  #L07d7ce.  v6:= temp @kind object;
  #L07d7d0.  call temp:= `a`(v6) @signature `Lb/k;.a:(Lb/q;)Lb/d;` @kind static;
  #L07d7d6.  v6:= temp @kind object;
  #L07d7d8.  call temp:= `d`(v3) @signature `La/x;.d:()La/y;` @kind virtual;
  #L07d7de.  v7:= temp @kind object;
  #L07d7e0.  call `a`(v7, v6) @signature `La/y;.a:(Lb/d;)V` @kind virtual;
  #L07d7e6.  call `close`(v6) @signature `Lb/d;.close:()V` @kind interface;
  #L07d7ec.  call `b`(v1) @signature `La/a/c/c;.b:()V` @kind interface;
  #L07d7f2.  if v0 != 0 then goto L07d800;
  #L07d7f6.  v0:= 0I;
  #L07d7f8.  call temp:= `a`(v1, v0) @signature `La/a/c/c;.a:(Z)La/z$a;` @kind interface;
  #L07d7fe.  v0:= temp @kind object;
  #L07d800.  call temp:= `a`(v0, v3) @signature `La/z$a;.a:(La/x;)La/z$a;` @kind virtual;
  #L07d806.  v0:= temp @kind object;
  #L07d808.  call temp:= `b`(v2) @signature `La/a/b/g;.b:()La/a/b/c;` @kind virtual;
  #L07d80e.  v3:= temp @kind object;
  #L07d810.  call temp:= `c`(v3) @signature `La/a/b/c;.c:()La/p;` @kind virtual;
  #L07d816.  v3:= temp @kind object;
  #L07d818.  call temp:= `a`(v0, v3) @signature `La/z$a;.a:(La/p;)La/z$a;` @kind virtual;
  #L07d81e.  v0:= temp @kind object;
  #L07d820.  call temp:= `a`(v0, v4) @signature `La/z$a;.a:(J)La/z$a;` @kind virtual;
  #L07d826.  v0:= temp @kind object;
  #L07d828.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L07d82e.  v4:= temp @kind wide;
  #L07d830.  call temp:= `b`(v0, v4) @signature `La/z$a;.b:(J)La/z$a;` @kind virtual;
  #L07d836.  v0:= temp @kind object;
  #L07d838.  call temp:= `a`(v0) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07d83e.  v0:= temp @kind object;
  #L07d840.  call temp:= `b`(v0) @signature `La/z;.b:()I` @kind virtual;
  #L07d846.  v3:= temp;
  #L07d848.  v4:= v8.`a.a.c.b.a` @type ^`boolean` @kind boolean;
  #L07d84c.  if v4 == 0 then goto L07d93c;
  #L07d850.  v4:= 101I;
  #L07d854.  if v3 != v4 then goto L07d93c;
  #L07d858.  call temp:= `g`(v0) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L07d85e.  v0:= temp @kind object;
  #L07d860.  v1:= `@@a.a.c.c` @type ^`a.aa` @kind object;
  #L07d864.  call temp:= `a`(v0, v1) @signature `La/z$a;.a:(La/aa;)La/z$a;` @kind virtual;
  #L07d86a.  v0:= temp @kind object;
  #L07d86c.  call temp:= `a`(v0) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07d872.  v0:= temp @kind object;
  #L07d874.  v1:= "close" @kind object;
  #L07d878.  call temp:= `a`(v0) @signature `La/z;.a:()La/x;` @kind virtual;
  #L07d87e.  v4:= temp @kind object;
  #L07d880.  v5:= "Connection" @kind object;
  #L07d884.  call temp:= `a`(v4, v5) @signature `La/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07d88a.  v4:= temp @kind object;
  #L07d88c.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07d892.  v1:= temp;
  #L07d894.  if v1 != 0 then goto L07d8b4;
  #L07d898.  v1:= "close" @kind object;
  #L07d89c.  v4:= "Connection" @kind object;
  #L07d8a0.  call temp:= `a`(v0, v4) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07d8a6.  v4:= temp @kind object;
  #L07d8a8.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07d8ae.  v1:= temp;
  #L07d8b0.  if v1 == 0 then goto L07d8ba;
  #L07d8b4.  call `d`(v2) @signature `La/a/b/g;.d:()V` @kind virtual;
  #L07d8ba.  v1:= 204I;
  #L07d8be.  if v3 == v1 then goto L07d8ca;
  #L07d8c2.  v1:= 205I;
  #L07d8c6.  if v3 != v1 then goto L07d95e;
  #L07d8ca.  call temp:= `f`(v0) @signature `La/z;.f:()La/aa;` @kind virtual;
  #L07d8d0.  v1:= temp @kind object;
  #L07d8d2.  call temp:= `b`(v1) @signature `La/aa;.b:()J` @kind virtual;
  #L07d8d8.  v4:= temp @kind wide;
  #L07d8da.  v6:= 0L;
  #L07d8de.  v1:= lcmp(v4, v6);
  #L07d8e2.  if v1 <= 0 then goto L07d95e;
  #L07d8e6.  v1:= new `java.net.ProtocolException`;
  #L07d8ea.  v2:= new `java.lang.StringBuilder`;
  #L07d8ee.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07d8f4.  v4:= "HTTP " @kind object;
  #L07d8f8.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d8fe.  v2:= temp @kind object;
  #L07d900.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d906.  v2:= temp @kind object;
  #L07d908.  v3:= " had non-zero Content-Length: " @kind object;
  #L07d90c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d912.  v2:= temp @kind object;
  #L07d914.  call temp:= `f`(v0) @signature `La/z;.f:()La/aa;` @kind virtual;
  #L07d91a.  v0:= temp @kind object;
  #L07d91c.  call temp:= `b`(v0) @signature `La/aa;.b:()J` @kind virtual;
  #L07d922.  v4:= temp @kind wide;
  #L07d924.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L07d92a.  v0:= temp @kind object;
  #L07d92c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07d932.  v0:= temp @kind object;
  #L07d934.  call `<init>`(v1, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07d93a.  throw v1;
  #L07d93c.  call temp:= `g`(v0) @signature `La/z;.g:()La/z$a;` @kind virtual;
  #L07d942.  v4:= temp @kind object;
  #L07d944.  call temp:= `a`(v1, v0) @signature `La/a/c/c;.a:(La/z;)La/aa;` @kind interface;
  #L07d94a.  v0:= temp @kind object;
  #L07d94c.  call temp:= `a`(v4, v0) @signature `La/z$a;.a:(La/aa;)La/z$a;` @kind virtual;
  #L07d952.  v0:= temp @kind object;
  #L07d954.  call temp:= `a`(v0) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07d95a.  v0:= temp @kind object;
  #L07d95c.  goto L07d874;
  #L07d95e.  return v0 @kind object;
}

record `a.a.e.h$a` @kind class @AccessFlag FINAL extends `b.r` @kind interface {
  `int` `a.a.e.h$a.a` @AccessFlag ;
  `byte` `a.a.e.h$a.b` @AccessFlag ;
  `int` `a.a.e.h$a.c` @AccessFlag ;
  `int` `a.a.e.h$a.d` @AccessFlag ;
  `short` `a.a.e.h$a.e` @AccessFlag ;
  `b.e` `a.a.e.h$a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.e.h$a` v0 @kind this, `b.e` v1 @kind object) @signature `La/a/e/h$a;.<init>:(Lb/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L084218.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08421e.  v0.`a.a.e.h$a.f` @type ^`b.e` := v1 @kind object;
  #L084222.  return @kind void;
}
procedure `void` `b`(`a.a.e.h$a` v8 @kind this) @signature `La/a/e/h$a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L084234.  v7:= 1I;
  #L084236.  v6:= 0I;
  #L084238.  v0:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L08423c.  v1:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L084240.  call temp:= `a`(v1) @signature `La/a/e/h;.a:(Lb/e;)I` @kind static;
  #L084246.  v1:= temp;
  #L084248.  v8.`a.a.e.h$a.d` @type ^`int` := v1;
  #L08424c.  v8.`a.a.e.h$a.a` @type ^`int` := v1;
  #L084250.  v1:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L084254.  call temp:= `h`(v1) @signature `Lb/e;.h:()B` @kind interface;
  #L08425a.  v1:= temp;
  #L08425c.  v1:= v1 ^& 255;
  #L084260.  v1:= (`byte`) v1 @kind i2b;
  #L084262.  v2:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L084266.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L08426c.  v2:= temp;
  #L08426e.  v2:= v2 ^& 255;
  #L084272.  v2:= (`byte`) v2 @kind i2b;
  #L084274.  v8.`a.a.e.h$a.b` @type ^`byte` := v2 @kind byte;
  #L084278.  v2:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L08427c.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L084280.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L084286.  v2:= temp;
  #L084288.  if v2 == 0 then goto L0842aa;
  #L08428c.  v2:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L084290.  v3:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L084294.  v4:= v8.`a.a.e.h$a.a` @type ^`int`;
  #L084298.  v5:= v8.`a.a.e.h$a.b` @type ^`byte` @kind byte;
  #L08429c.  call temp:= `a`(v7, v3, v4, v1, v5) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L0842a2.  v3:= temp @kind object;
  #L0842a4.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L0842aa.  v2:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L0842ae.  call temp:= `j`(v2) @signature `Lb/e;.j:()I` @kind interface;
  #L0842b4.  v2:= temp;
  #L0842b6.  v3:= 2147483647I;
  #L0842bc.  v2:= v2 ^& v3 @kind int;
  #L0842be.  v8.`a.a.e.h$a.c` @type ^`int` := v2;
  #L0842c2.  v2:= 9I;
  #L0842c6.  if v1 == v2 then goto L0842e8;
  #L0842ca.  v0:= "%s != TYPE_CONTINUATION" @kind object;
  #L0842ce.  v2:= new `java.lang.Object`[v7];
  #L0842d2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L0842d8.  v1:= temp @kind object;
  #L0842da.  v2[v6]:= v1 @kind object;
  #L0842de.  call temp:= `b`(v0, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0842e4.  v0:= temp @kind object;
  #L0842e6.  throw v0;
  #L0842e8.  v1:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L0842ec.  if v1 == v0 then goto L084302;
  #L0842f0.  v0:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L0842f4.  v1:= new `java.lang.Object`[v6];
  #L0842f8.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L0842fe.  v0:= temp @kind object;
  #L084300.  throw v0;
  #L084302.  return @kind void;
}
procedure `long` `a`(`a.a.e.h$a` v6 @kind this, `b.c` v7 @kind object, `long` v8 ) @signature `La/a/e/h$a;.a:(Lb/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L084314.  v0:= -1L;
  #L084318.  v2:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L08431c.  if v2 != 0 then goto L08434c;
  #L084320.  v2:= v6.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L084324.  v3:= v6.`a.a.e.h$a.e` @type ^`short` @kind short;
  #L084328.  v4:= (`long`) v3 @kind i2l;
  #L08432a.  call `g`(v2, v4) @signature `Lb/e;.g:(J)V` @kind interface;
  #L084330.  v2:= 0I;
  #L084332.  v6.`a.a.e.h$a.e` @type ^`short` := v2 @kind char;
  #L084336.  v2:= v6.`a.a.e.h$a.b` @type ^`byte` @kind byte;
  #L08433a.  v2:= v2 ^& 4;
  #L08433e.  if v2 == 0 then goto L084344;
  #L084342.  return v0 @kind wide;
  #L084344.  call `b`(v6) @signature `La/a/e/h$a;.b:()V` @kind direct;
  #L08434a.  goto L084318;
  #L08434c.  v2:= v6.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L084350.  v3:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L084354.  v4:= (`long`) v3 @kind i2l;
  #L084356.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L08435c.  v4:= temp @kind wide;
  #L08435e.  call temp:= `a`(v2, v7, v4) @signature `Lb/e;.a:(Lb/c;J)J` @kind interface;
  #L084364.  v2:= temp @kind wide;
  #L084366.  v4:= lcmp(v2, v0);
  #L08436a.  if v4 == 0 then goto L084342;
  #L08436e.  v0:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L084372.  v0:= (`long`) v0 @kind i2l;
  #L084374.  v0:= v0 - v2 @kind long;
  #L084376.  v0:= (`int`) v0 @kind l2i;
  #L084378.  v6.`a.a.e.h$a.d` @type ^`int` := v0;
  #L08437c.  v0:= v2 @kind wide;
  #L08437e.  goto L084342;
}
procedure `b.s` `a`(`a.a.e.h$a` v1 @kind this) @signature `La/a/e/h$a;.a:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L084390.  v0:= v1.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L084394.  call temp:= `a`(v0) @signature `Lb/e;.a:()Lb/s;` @kind interface;
  #L08439a.  v0:= temp @kind object;
  #L08439c.  return v0 @kind object;
}
procedure `void` `close`(`a.a.e.h$a` v0 @kind this) @signature `La/a/e/h$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L0843b0.  return @kind void;
}

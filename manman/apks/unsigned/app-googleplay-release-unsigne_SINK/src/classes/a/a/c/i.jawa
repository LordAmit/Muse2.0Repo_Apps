record `a.a.c.i` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`a.r` v3 @kind object) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L07e47c.  call temp:= `h`(v3) @signature `La/r;.h:()Ljava/lang/String;` @kind virtual;
  #L07e482.  v0:= temp @kind object;
  #L07e484.  call temp:= `j`(v3) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L07e48a.  v1:= temp @kind object;
  #L07e48c.  if v1 == 0 then goto L07e4be;
  #L07e490.  v2:= new `java.lang.StringBuilder`;
  #L07e494.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07e49a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e4a0.  v0:= temp @kind object;
  #L07e4a2.  v2:= 63I;
  #L07e4a6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e4ac.  v0:= temp @kind object;
  #L07e4ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e4b4.  v0:= temp @kind object;
  #L07e4b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07e4bc.  v0:= temp @kind object;
  #L07e4be.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.x` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `La/a/c/i;.a:(La/x;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L07e4d0.  v0:= new `java.lang.StringBuilder`;
  #L07e4d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07e4da.  call temp:= `b`(v2) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L07e4e0.  v1:= temp @kind object;
  #L07e4e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e4e8.  v1:= 32I;
  #L07e4ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e4f2.  call temp:= `b`(v2, v3) @signature `La/a/c/i;.b:(La/x;Ljava/net/Proxy$Type;)Z` @kind static;
  #L07e4f8.  v1:= temp;
  #L07e4fa.  if v1 == 0 then goto L07e520;
  #L07e4fe.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07e504.  v1:= temp @kind object;
  #L07e506.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e50c.  v1:= " HTTP/1.1" @kind object;
  #L07e510.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e516.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07e51c.  v0:= temp @kind object;
  #L07e51e.  return v0 @kind object;
  #L07e520.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07e526.  v1:= temp @kind object;
  #L07e528.  call temp:= `a`(v1) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @kind static;
  #L07e52e.  v1:= temp @kind object;
  #L07e530.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07e536.  goto L07e50c;
}
procedure `boolean` `b`(`a.x` v1 @kind object, `java.net.Proxy$Type` v2 @kind object) @signature `La/a/c/i;.b:(La/x;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L07e548.  call temp:= `g`(v1) @signature `La/x;.g:()Z` @kind virtual;
  #L07e54e.  v0:= temp;
  #L07e550.  if v0 != 0 then goto L07e560;
  #L07e554.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L07e558.  if v2 != v0 then goto L07e560;
  #L07e55c.  v0:= 1I;
  #L07e55e.  return v0;
  #L07e560.  v0:= 0I;
  #L07e562.  goto L07e55e;
}

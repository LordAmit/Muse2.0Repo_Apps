record `a.a.f.a$1` @kind class @AccessFlag FINAL extends `a.a.f.a` @kind interface {
}
procedure `void` `<init>`(`a.a.f.a$1` v0 @kind this) @signature `La/a/f/a$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L087850.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L087856.  return @kind void;
}
procedure `void` `a`(`a.a.f.a$1` v3 @kind this, `java.io.File` v4 @kind object) @signature `La/a/f/a$1;.a:(Ljava/io/File;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L087868.  call temp:= `delete`(v4) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L08786e.  v0:= temp;
  #L087870.  if v0 != 0 then goto L0878b2;
  #L087874.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L08787a.  v0:= temp;
  #L08787c.  if v0 == 0 then goto L0878b2;
  #L087880.  v0:= new `java.io.IOException`;
  #L087884.  v1:= new `java.lang.StringBuilder`;
  #L087888.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08788e.  v2:= "failed to delete " @kind object;
  #L087892.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L087898.  v1:= temp @kind object;
  #L08789a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878a0.  v1:= temp @kind object;
  #L0878a2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L0878a8.  v1:= temp @kind object;
  #L0878aa.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0878b0.  throw v0;
  #L0878b2.  return @kind void;
}
procedure `void` `a`(`a.a.f.a$1` v3 @kind this, `java.io.File` v4 @kind object, `java.io.File` v5 @kind object) @signature `La/a/f/a$1;.a:(Ljava/io/File;Ljava/io/File;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0878c4.  call `a`(v3, v5) @signature `La/a/f/a$1;.a:(Ljava/io/File;)V` @kind virtual;
  #L0878ca.  call temp:= `renameTo`(v4, v5) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L0878d0.  v0:= temp;
  #L0878d2.  if v0 != 0 then goto L08791c;
  #L0878d6.  v0:= new `java.io.IOException`;
  #L0878da.  v1:= new `java.lang.StringBuilder`;
  #L0878de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L0878e4.  v2:= "failed to rename " @kind object;
  #L0878e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878ee.  v1:= temp @kind object;
  #L0878f0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L0878f6.  v1:= temp @kind object;
  #L0878f8.  v2:= " to " @kind object;
  #L0878fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L087902.  v1:= temp @kind object;
  #L087904.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08790a.  v1:= temp @kind object;
  #L08790c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L087912.  v1:= temp @kind object;
  #L087914.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08791a.  throw v0;
  #L08791c.  return @kind void;
}
procedure `boolean` `b`(`a.a.f.a$1` v1 @kind this, `java.io.File` v2 @kind object) @signature `La/a/f/a$1;.b:(Ljava/io/File;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L087930.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L087936.  v0:= temp;
  #L087938.  return v0;
}
procedure `long` `c`(`a.a.f.a$1` v2 @kind this, `java.io.File` v3 @kind object) @signature `La/a/f/a$1;.c:(Ljava/io/File;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08794c.  call temp:= `length`(v3) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L087952.  v0:= temp @kind wide;
  #L087954.  return v0 @kind wide;
}

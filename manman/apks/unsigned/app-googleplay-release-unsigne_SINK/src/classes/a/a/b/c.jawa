record `a.a.b.c` @kind class @AccessFlag PUBLIC_FINAL extends `a.a.e.g$b` @kind class, `a.i` @kind interface {
  `boolean` `a.a.b.c.a` @AccessFlag PUBLIC;
  `int` `a.a.b.c.b` @AccessFlag PUBLIC;
  `int` `a.a.b.c.c` @AccessFlag PUBLIC;
  `java.util.List` `a.a.b.c.d` @AccessFlag PUBLIC_FINAL;
  `long` `a.a.b.c.e` @AccessFlag PUBLIC;
  `a.j` `a.a.b.c.g` @AccessFlag PRIVATE_FINAL;
  `a.ab` `a.a.b.c.h` @AccessFlag PRIVATE_FINAL;
  `java.net.Socket` `a.a.b.c.i` @AccessFlag PRIVATE;
  `java.net.Socket` `a.a.b.c.j` @AccessFlag PRIVATE;
  `a.p` `a.a.b.c.k` @AccessFlag PRIVATE;
  `a.v` `a.a.b.c.l` @AccessFlag PRIVATE;
  `a.a.e.g` `a.a.b.c.m` @AccessFlag PRIVATE;
  `b.e` `a.a.b.c.n` @AccessFlag PRIVATE;
  `b.d` `a.a.b.c.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`a.a.b.c` v2 @kind this, `a.j` v3 @kind object, `a.ab` v4 @kind object) @signature `La/a/b/c;.<init>:(La/j;La/ab;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L07b668.  call `<init>`(v2) @signature `La/a/e/g$b;.<init>:()V` @kind direct;
  #L07b66e.  v0:= 1I;
  #L07b670.  v2.`a.a.b.c.c` @type ^`int` := v0;
  #L07b674.  v0:= new `java.util.ArrayList`;
  #L07b678.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L07b67e.  v2.`a.a.b.c.d` @type ^`java.util.List` := v0 @kind object;
  #L07b682.  v0:= 9223372036854775807L;
  #L07b68c.  v2.`a.a.b.c.e` @type ^`long` := v0 @kind wide;
  #L07b690.  v2.`a.a.b.c.g` @type ^`a.j` := v3 @kind object;
  #L07b694.  v2.`a.a.b.c.h` @type ^`a.ab` := v4 @kind object;
  #L07b698.  return @kind void;
}
procedure `a.x` `a`(`a.a.b.c` v8 @kind this, `int` v9 , `int` v10 , `a.x` v11 @kind object, `a.r` v12 @kind object) @signature `La/a/b/c;.a:(IILa/x;La/r;)La/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07b6ac.  v2:= 0I;
  #L07b6ae.  v0:= new `java.lang.StringBuilder`;
  #L07b6b2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07b6b8.  v1:= "CONNECT " @kind object;
  #L07b6bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b6c2.  v0:= temp @kind object;
  #L07b6c4.  v1:= 1I;
  #L07b6c6.  call temp:= `a`(v12, v1) @signature `La/a/c;.a:(La/r;Z)Ljava/lang/String;` @kind static;
  #L07b6cc.  v1:= temp @kind object;
  #L07b6ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b6d4.  v0:= temp @kind object;
  #L07b6d6.  v1:= " HTTP/1.1" @kind object;
  #L07b6da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b6e0.  v0:= temp @kind object;
  #L07b6e2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07b6e8.  v3:= temp @kind object;
  #L07b6ea.  v4:= new `a.a.d.a`;
  #L07b6ee.  v0:= v8.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07b6f2.  v1:= v8.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L07b6f6.  call `<init>`(v4, v2, v2, v0, v1) @signature `La/a/d/a;.<init>:(La/u;La/a/b/g;Lb/e;Lb/d;)V` @kind direct;
  #L07b6fc.  v0:= v8.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07b700.  call temp:= `a`(v0) @signature `Lb/e;.a:()Lb/s;` @kind interface;
  #L07b706.  v0:= temp @kind object;
  #L07b708.  v6:= (`long`) v9 @kind i2l;
  #L07b70a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07b70e.  call temp:= `a`(v0, v6, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07b714.  v0:= v8.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L07b718.  call temp:= `a`(v0) @signature `Lb/d;.a:()Lb/s;` @kind interface;
  #L07b71e.  v0:= temp @kind object;
  #L07b720.  v6:= (`long`) v10 @kind i2l;
  #L07b722.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07b726.  call temp:= `a`(v0, v6, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07b72c.  call temp:= `c`(v11) @signature `La/x;.c:()La/q;` @kind virtual;
  #L07b732.  v0:= temp @kind object;
  #L07b734.  call `a`(v4, v0, v3) @signature `La/a/d/a;.a:(La/q;Ljava/lang/String;)V` @kind virtual;
  #L07b73a.  call `b`(v4) @signature `La/a/d/a;.b:()V` @kind virtual;
  #L07b740.  v0:= 0I;
  #L07b742.  call temp:= `a`(v4, v0) @signature `La/a/d/a;.a:(Z)La/z$a;` @kind virtual;
  #L07b748.  v0:= temp @kind object;
  #L07b74a.  call temp:= `a`(v0, v11) @signature `La/z$a;.a:(La/x;)La/z$a;` @kind virtual;
  #L07b750.  v0:= temp @kind object;
  #L07b752.  call temp:= `a`(v0) @signature `La/z$a;.a:()La/z;` @kind virtual;
  #L07b758.  v5:= temp @kind object;
  #L07b75a.  call temp:= `a`(v5) @signature `La/a/c/e;.a:(La/z;)J` @kind static;
  #L07b760.  v0:= temp @kind wide;
  #L07b762.  v6:= -1L;
  #L07b766.  v6:= lcmp(v0, v6);
  #L07b76a.  if v6 != 0 then goto L07b772;
  #L07b76e.  v0:= 0L;
  #L07b772.  call temp:= `b`(v4, v0) @signature `La/a/d/a;.b:(J)Lb/r;` @kind virtual;
  #L07b778.  v0:= temp @kind object;
  #L07b77a.  v1:= 2147483647I;
  #L07b780.  v4:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07b784.  call temp:= `b`(v0, v1, v4) @signature `La/a/c;.b:(Lb/r;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L07b78a.  call `close`(v0) @signature `Lb/r;.close:()V` @kind interface;
  #L07b790.  call temp:= `b`(v5) @signature `La/z;.b:()I` @kind virtual;
  #L07b796.  v0:= temp;
  #L07b798.  goto L07b870;
  #L07b79e.  v0:= new `java.io.IOException`;
  #L07b7a2.  v1:= new `java.lang.StringBuilder`;
  #L07b7a6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07b7ac.  v2:= "Unexpected response code for CONNECT: " @kind object;
  #L07b7b0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b7b6.  v1:= temp @kind object;
  #L07b7b8.  call temp:= `b`(v5) @signature `La/z;.b:()I` @kind virtual;
  #L07b7be.  v2:= temp;
  #L07b7c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b7c6.  v1:= temp @kind object;
  #L07b7c8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07b7ce.  v1:= temp @kind object;
  #L07b7d0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07b7d6.  throw v0;
  #L07b7d8.  v0:= v8.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07b7dc.  call temp:= `c`(v0) @signature `Lb/e;.c:()Lb/c;` @kind interface;
  #L07b7e2.  v0:= temp @kind object;
  #L07b7e4.  call temp:= `e`(v0) @signature `Lb/c;.e:()Z` @kind virtual;
  #L07b7ea.  v0:= temp;
  #L07b7ec.  if v0 == 0 then goto L07b808;
  #L07b7f0.  v0:= v8.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L07b7f4.  call temp:= `c`(v0) @signature `Lb/d;.c:()Lb/c;` @kind interface;
  #L07b7fa.  v0:= temp @kind object;
  #L07b7fc.  call temp:= `e`(v0) @signature `Lb/c;.e:()Z` @kind virtual;
  #L07b802.  v0:= temp;
  #L07b804.  if v0 != 0 then goto L07b818;
  #L07b808.  v0:= new `java.io.IOException`;
  #L07b80c.  v1:= "TLS tunnel buffered too many bytes!" @kind object;
  #L07b810.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07b816.  throw v0;
  #L07b818.  v11:= v2 @kind object;
  #L07b81a.  return v11 @kind object;
  #L07b81c.  v0:= v8.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07b820.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07b826.  v0:= temp @kind object;
  #L07b828.  call temp:= `d`(v0) @signature `La/a;.d:()La/b;` @kind virtual;
  #L07b82e.  v0:= temp @kind object;
  #L07b830.  v1:= v8.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07b834.  call temp:= `a`(v0, v1, v5) @signature `La/b;.a:(La/ab;La/z;)La/x;` @kind interface;
  #L07b83a.  v11:= temp @kind object;
  #L07b83c.  if v11 != 0 then goto L07b850;
  #L07b840.  v0:= new `java.io.IOException`;
  #L07b844.  v1:= "Failed to authenticate with proxy" @kind object;
  #L07b848.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07b84e.  throw v0;
  #L07b850.  v0:= "close" @kind object;
  #L07b854.  v1:= "Connection" @kind object;
  #L07b858.  call temp:= `a`(v5, v1) @signature `La/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L07b85e.  v1:= temp @kind object;
  #L07b860.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L07b866.  v0:= temp;
  #L07b868.  if v0 == 0 then goto L07b6ea;
  #L07b86c.  goto L07b81a;
  #L07b86e.  
  #L07b870.  switch v0
                  | 200 => goto L07b7d8
                  | 407 => goto L07b81c
                  | else => goto L07b79e;
}
procedure `void` `a`(`a.a.b.c` v4 @kind this, `int` v5 , `int` v6 ) @signature `La/a/b/c;.a:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07b894.  v0:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07b898.  call temp:= `b`(v0) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L07b89e.  v1:= temp @kind object;
  #L07b8a0.  v0:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07b8a4.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07b8aa.  v0:= temp @kind object;
  #L07b8ac.  call temp:= `type`(v1) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L07b8b2.  v2:= temp @kind object;
  #L07b8b4.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L07b8b8.  if v2 == v3 then goto L07b8cc;
  #L07b8bc.  call temp:= `type`(v1) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L07b8c2.  v2:= temp @kind object;
  #L07b8c4.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L07b8c8.  if v2 != v3 then goto L07b93a;
  #L07b8cc.  call temp:= `c`(v0) @signature `La/a;.c:()Ljavax/net/SocketFactory;` @kind virtual;
  #L07b8d2.  v0:= temp @kind object;
  #L07b8d4.  call temp:= `createSocket`(v0) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L07b8da.  v0:= temp @kind object;
  #L07b8dc.  v4.`a.a.b.c.i` @type ^`java.net.Socket` := v0 @kind object;
  #L07b8e0.  v0:= v4.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L07b8e4.  call `setSoTimeout`(v0, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #Try_start0.  
  #L07b8ea.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L07b8f0.  v0:= temp @kind object;
  #L07b8f2.  v1:= v4.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L07b8f6.  v2:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07b8fa.  call temp:= `c`(v2) @signature `La/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L07b900.  v2:= temp @kind object;
  #L07b902.  call `a`(v0, v1, v2, v5) @signature `La/a/g/e;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #Try_end0.  
  #L07b908.  v0:= v4.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L07b90c.  call temp:= `b`(v0) @signature `Lb/k;.b:(Ljava/net/Socket;)Lb/r;` @kind static;
  #L07b912.  v0:= temp @kind object;
  #L07b914.  call temp:= `a`(v0) @signature `Lb/k;.a:(Lb/r;)Lb/e;` @kind static;
  #L07b91a.  v0:= temp @kind object;
  #L07b91c.  v4.`a.a.b.c.n` @type ^`b.e` := v0 @kind object;
  #L07b920.  v0:= v4.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L07b924.  call temp:= `a`(v0) @signature `Lb/k;.a:(Ljava/net/Socket;)Lb/q;` @kind static;
  #L07b92a.  v0:= temp @kind object;
  #L07b92c.  call temp:= `a`(v0) @signature `Lb/k;.a:(Lb/q;)Lb/d;` @kind static;
  #L07b932.  v0:= temp @kind object;
  #L07b934.  v4.`a.a.b.c.o` @type ^`b.d` := v0 @kind object;
  #L07b938.  return @kind void;
  #L07b93a.  v0:= new `java.net.Socket`;
  #L07b93e.  call `<init>`(v0, v1) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L07b944.  goto L07b8dc;
  #L07b946.  v0:= Exception @type ^`java.net.ConnectException` @kind object;
  #L07b948.  v1:= new `java.net.ConnectException`;
  #L07b94c.  v2:= new `java.lang.StringBuilder`;
  #L07b950.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07b956.  v3:= "Failed to connect to " @kind object;
  #L07b95a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b960.  v2:= temp @kind object;
  #L07b962.  v3:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07b966.  call temp:= `c`(v3) @signature `La/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L07b96c.  v3:= temp @kind object;
  #L07b96e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b974.  v2:= temp @kind object;
  #L07b976.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07b97c.  v2:= temp @kind object;
  #L07b97e.  call `<init>`(v1, v2) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07b984.  call temp:= `initCause`(v1, v0) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L07b98a.  throw v1;
  catch `java.net.ConnectException` @[Try_start0..Try_end0] goto L07b946;
}
procedure `void` `a`(`a.a.b.c` v6 @kind this, `int` v7 , `int` v8 , `int` v9 ) @signature `La/a/b/c;.a:(III)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07b9ac.  v5:= 0I;
  #L07b9ae.  call temp:= `e`(v6) @signature `La/a/b/c;.e:()La/x;` @kind direct;
  #L07b9b4.  v1:= temp @kind object;
  #L07b9b6.  call temp:= `a`(v1) @signature `La/x;.a:()La/r;` @kind virtual;
  #L07b9bc.  v2:= temp @kind object;
  #L07b9be.  v0:= 0I;
  #L07b9c0.  v3:= 21I;
  #L07b9c4.  v0:= v0 + 1;
  #L07b9c8.  if v0 <= v3 then goto L07b9fe;
  #L07b9cc.  v0:= new `java.net.ProtocolException`;
  #L07b9d0.  v1:= new `java.lang.StringBuilder`;
  #L07b9d4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07b9da.  v2:= "Too many tunnel connections attempted: " @kind object;
  #L07b9de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b9e4.  v1:= temp @kind object;
  #L07b9e6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L07b9ec.  v1:= temp @kind object;
  #L07b9ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07b9f4.  v1:= temp @kind object;
  #L07b9f6.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07b9fc.  throw v0;
  #L07b9fe.  call `a`(v6, v7, v8) @signature `La/a/b/c;.a:(II)V` @kind direct;
  #L07ba04.  call temp:= `a`(v6, v8, v9, v1, v2) @signature `La/a/b/c;.a:(IILa/x;La/r;)La/x;` @kind direct;
  #L07ba0a.  v1:= temp @kind object;
  #L07ba0c.  if v1 != 0 then goto L07ba12;
  #L07ba10.  return @kind void;
  #L07ba12.  v4:= v6.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L07ba16.  call `a`(v4) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L07ba1c.  v6.`a.a.b.c.i` @type ^`java.net.Socket` := v5 @kind object;
  #L07ba20.  v6.`a.a.b.c.o` @type ^`b.d` := v5 @kind object;
  #L07ba24.  v6.`a.a.b.c.n` @type ^`b.e` := v5 @kind object;
  #L07ba28.  goto L07b9c4;
}
procedure `void` `a`(`a.a.b.c` v5 @kind this, `a.a.b.b` v6 @kind object) @signature `La/a/b/c;.a:(La/a/b/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07ba3c.  v0:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07ba40.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07ba46.  v0:= temp @kind object;
  #L07ba48.  call temp:= `i`(v0) @signature `La/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L07ba4e.  v0:= temp @kind object;
  #L07ba50.  if v0 != 0 then goto L07ba66;
  #L07ba54.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L07ba58.  v5.`a.a.b.c.l` @type ^`a.v` := v0 @kind object;
  #L07ba5c.  v0:= v5.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L07ba60.  v5.`a.a.b.c.j` @type ^`java.net.Socket` := v0 @kind object;
  #L07ba64.  return @kind void;
  #L07ba66.  call `b`(v5, v6) @signature `La/a/b/c;.b:(La/a/b/b;)V` @kind direct;
  #L07ba6c.  v0:= v5.`a.a.b.c.l` @type ^`a.v` @kind object;
  #L07ba70.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L07ba74.  if v0 != v1 then goto L07ba64;
  #L07ba78.  v0:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07ba7c.  v1:= 0I;
  #L07ba7e.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L07ba84.  v0:= new `a.a.e.g$a`;
  #L07ba88.  v1:= 1I;
  #L07ba8a.  call `<init>`(v0, v1) @signature `La/a/e/g$a;.<init>:(Z)V` @kind direct;
  #L07ba90.  v1:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07ba94.  v2:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07ba98.  call temp:= `a`(v2) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07ba9e.  v2:= temp @kind object;
  #L07baa0.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07baa6.  v2:= temp @kind object;
  #L07baa8.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07baae.  v2:= temp @kind object;
  #L07bab0.  v3:= v5.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07bab4.  v4:= v5.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L07bab8.  call temp:= `a`(v0, v1, v2, v3, v4) @signature `La/a/e/g$a;.a:(Ljava/net/Socket;Ljava/lang/String;Lb/e;Lb/d;)La/a/e/g$a;` @kind virtual;
  #L07babe.  v0:= temp @kind object;
  #L07bac0.  call temp:= `a`(v0, v5) @signature `La/a/e/g$a;.a:(La/a/e/g$b;)La/a/e/g$a;` @kind virtual;
  #L07bac6.  v0:= temp @kind object;
  #L07bac8.  call temp:= `a`(v0) @signature `La/a/e/g$a;.a:()La/a/e/g;` @kind virtual;
  #L07bace.  v0:= temp @kind object;
  #L07bad0.  v5.`a.a.b.c.m` @type ^`a.a.e.g` := v0 @kind object;
  #L07bad4.  v0:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07bad8.  call `c`(v0) @signature `La/a/e/g;.c:()V` @kind virtual;
  #L07bade.  goto L07ba64;
}
procedure `void` `b`(`a.a.b.c` v9 @kind this, `a.a.b.b` v10 @kind object) @signature `La/a/b/c;.b:(La/a/b/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L07baf0.  v1:= 0I;
  #L07baf2.  v0:= v9.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07baf6.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07bafc.  v2:= temp @kind object;
  #L07bafe.  call temp:= `i`(v2) @signature `La/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L07bb04.  v0:= temp @kind object;
  #Try_start0.  
  #L07bb06.  v3:= v9.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L07bb0a.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bb10.  v4:= temp @kind object;
  #L07bb12.  call temp:= `f`(v4) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07bb18.  v4:= temp @kind object;
  #L07bb1a.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bb20.  v5:= temp @kind object;
  #L07bb22.  call temp:= `g`(v5) @signature `La/r;.g:()I` @kind virtual;
  #L07bb28.  v5:= temp;
  #L07bb2a.  v6:= 1I;
  #L07bb2c.  call temp:= `createSocket`(v0, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L07bb32.  v0:= temp @kind object;
  #L07bb34.  v0:= (`javax.net.ssl.SSLSocket`) v0 @kind object;
  #Try_end0.  
  #Try_start1.  
  #L07bb38.  call temp:= `a`(v10, v0) @signature `La/a/b/b;.a:(Ljavax/net/ssl/SSLSocket;)La/k;` @kind virtual;
  #L07bb3e.  v3:= temp @kind object;
  #L07bb40.  call temp:= `d`(v3) @signature `La/k;.d:()Z` @kind virtual;
  #L07bb46.  v4:= temp;
  #L07bb48.  if v4 == 0 then goto L07bb72;
  #L07bb4c.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L07bb52.  v4:= temp @kind object;
  #L07bb54.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bb5a.  v5:= temp @kind object;
  #L07bb5c.  call temp:= `f`(v5) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07bb62.  v5:= temp @kind object;
  #L07bb64.  call temp:= `e`(v2) @signature `La/a;.e:()Ljava/util/List;` @kind virtual;
  #L07bb6a.  v6:= temp @kind object;
  #L07bb6c.  call `a`(v4, v0, v5, v6) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L07bb72.  call `startHandshake`(v0) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L07bb78.  call temp:= `getSession`(v0) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L07bb7e.  v4:= temp @kind object;
  #L07bb80.  call temp:= `a`(v4) @signature `La/p;.a:(Ljavax/net/ssl/SSLSession;)La/p;` @kind static;
  #L07bb86.  v4:= temp @kind object;
  #L07bb88.  call temp:= `j`(v2) @signature `La/a;.j:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L07bb8e.  v5:= temp @kind object;
  #L07bb90.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bb96.  v6:= temp @kind object;
  #L07bb98.  call temp:= `f`(v6) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07bb9e.  v6:= temp @kind object;
  #L07bba0.  call temp:= `getSession`(v0) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L07bba6.  v7:= temp @kind object;
  #L07bba8.  call temp:= `verify`(v5, v6, v7) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L07bbae.  v5:= temp;
  #L07bbb0.  if v5 != 0 then goto L07bca4;
  #L07bbb4.  call temp:= `b`(v4) @signature `La/p;.b:()Ljava/util/List;` @kind virtual;
  #L07bbba.  v1:= temp @kind object;
  #L07bbbc.  v3:= 0I;
  #L07bbbe.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L07bbc4.  v1:= temp @kind object;
  #L07bbc6.  v1:= (`java.security.cert.X509Certificate`) v1 @kind object;
  #L07bbca.  v3:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L07bbce.  v4:= new `java.lang.StringBuilder`;
  #L07bbd2.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07bbd8.  v5:= "Hostname " @kind object;
  #L07bbdc.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bbe2.  v4:= temp @kind object;
  #L07bbe4.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bbea.  v2:= temp @kind object;
  #L07bbec.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07bbf2.  v2:= temp @kind object;
  #L07bbf4.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bbfa.  v2:= temp @kind object;
  #L07bbfc.  v4:= " not verified:\n    certificate: " @kind object;
  #L07bc00.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bc06.  v2:= temp @kind object;
  #L07bc08.  call temp:= `a`(v1) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L07bc0e.  v4:= temp @kind object;
  #L07bc10.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bc16.  v2:= temp @kind object;
  #L07bc18.  v4:= "\n    DN: " @kind object;
  #L07bc1c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bc22.  v2:= temp @kind object;
  #L07bc24.  call temp:= `getSubjectDN`(v1) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L07bc2a.  v4:= temp @kind object;
  #L07bc2c.  call temp:= `getName`(v4) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L07bc32.  v4:= temp @kind object;
  #L07bc34.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bc3a.  v2:= temp @kind object;
  #L07bc3c.  v4:= "\n    subjectAltNames: " @kind object;
  #L07bc40.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bc46.  v2:= temp @kind object;
  #L07bc48.  call temp:= `a`(v1) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L07bc4e.  v1:= temp @kind object;
  #L07bc50.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bc56.  v1:= temp @kind object;
  #L07bc58.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07bc5e.  v1:= temp @kind object;
  #L07bc60.  call `<init>`(v3, v1) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07bc66.  throw v3;
  #Try_end1.  
  #L07bc68.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L07bc6a.  v8:= v1 @kind object;
  #L07bc6c.  v1:= v0 @kind object;
  #L07bc6e.  v0:= v8 @kind object;
  #Try_start2.  
  #L07bc70.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L07bc76.  v2:= temp;
  #L07bc78.  if v2 == 0 then goto L07bd48;
  #L07bc7c.  v2:= new `java.io.IOException`;
  #L07bc80.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L07bc86.  throw v2;
  #Try_end2.  
  #L07bc88.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07bc8a.  if v1 == 0 then goto L07bc9c;
  #L07bc8e.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L07bc94.  v2:= temp @kind object;
  #L07bc96.  call `b`(v2, v1) @signature `La/a/g/e;.b:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L07bc9c.  call `a`(v1) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L07bca2.  throw v0;
  #Try_start3.  
  #L07bca4.  call temp:= `k`(v2) @signature `La/a;.k:()La/g;` @kind virtual;
  #L07bcaa.  v5:= temp @kind object;
  #L07bcac.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bcb2.  v2:= temp @kind object;
  #L07bcb4.  call temp:= `f`(v2) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07bcba.  v2:= temp @kind object;
  #L07bcbc.  call temp:= `b`(v4) @signature `La/p;.b:()Ljava/util/List;` @kind virtual;
  #L07bcc2.  v6:= temp @kind object;
  #L07bcc4.  call `a`(v5, v2, v6) @signature `La/g;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L07bcca.  call temp:= `d`(v3) @signature `La/k;.d:()Z` @kind virtual;
  #L07bcd0.  v2:= temp;
  #L07bcd2.  if v2 == 0 then goto L07bce6;
  #L07bcd6.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L07bcdc.  v1:= temp @kind object;
  #L07bcde.  call temp:= `a`(v1, v0) @signature `La/a/g/e;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L07bce4.  v1:= temp @kind object;
  #L07bce6.  v9.`a.a.b.c.j` @type ^`java.net.Socket` := v0 @kind object;
  #L07bcea.  v2:= v9.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07bcee.  call temp:= `b`(v2) @signature `Lb/k;.b:(Ljava/net/Socket;)Lb/r;` @kind static;
  #L07bcf4.  v2:= temp @kind object;
  #L07bcf6.  call temp:= `a`(v2) @signature `Lb/k;.a:(Lb/r;)Lb/e;` @kind static;
  #L07bcfc.  v2:= temp @kind object;
  #L07bcfe.  v9.`a.a.b.c.n` @type ^`b.e` := v2 @kind object;
  #L07bd02.  v2:= v9.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07bd06.  call temp:= `a`(v2) @signature `Lb/k;.a:(Ljava/net/Socket;)Lb/q;` @kind static;
  #L07bd0c.  v2:= temp @kind object;
  #L07bd0e.  call temp:= `a`(v2) @signature `Lb/k;.a:(Lb/q;)Lb/d;` @kind static;
  #L07bd14.  v2:= temp @kind object;
  #L07bd16.  v9.`a.a.b.c.o` @type ^`b.d` := v2 @kind object;
  #L07bd1a.  v9.`a.a.b.c.k` @type ^`a.p` := v4 @kind object;
  #L07bd1e.  if v1 == 0 then goto L07bd42;
  #L07bd22.  call temp:= `a`(v1) @signature `La/v;.a:(Ljava/lang/String;)La/v;` @kind static;
  #L07bd28.  v1:= temp @kind object;
  #L07bd2a.  v9.`a.a.b.c.l` @type ^`a.v` := v1 @kind object;
  #Try_end3.  
  #L07bd2e.  if v0 == 0 then goto L07bd40;
  #L07bd32.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L07bd38.  v1:= temp @kind object;
  #L07bd3a.  call `b`(v1, v0) @signature `La/a/g/e;.b:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L07bd40.  return @kind void;
  #Try_start4.  
  #L07bd42.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #Try_end4.  
  #L07bd46.  goto L07bd2a;
  #Try_start5.  
  #L07bd48.  throw v0;
  #Try_end5.  
  #L07bd4a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07bd4c.  v8:= v1 @kind object;
  #L07bd4e.  v1:= v0 @kind object;
  #L07bd50.  v0:= v8 @kind object;
  #L07bd52.  goto L07bc8a;
  #L07bd54.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L07bd56.  goto L07bc70;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L07bd54;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07bc88;
  catch `java.lang.AssertionError` @[Try_start1..Try_end1] goto L07bc68;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07bd4a;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L07bc88;
  catch `java.lang.AssertionError` @[Try_start3..Try_end3] goto L07bc68;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07bd4a;
  catch `java.lang.AssertionError` @[Try_start4..Try_end4] goto L07bc68;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L07bd4a;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L07bc88;
}
procedure `a.x` `e`(`a.a.b.c` v4 @kind this) @signature `La/a/b/c;.e:()La/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07bdac.  v0:= new `a.x$a`;
  #L07bdb0.  call `<init>`(v0) @signature `La/x$a;.<init>:()V` @kind direct;
  #L07bdb6.  v1:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07bdba.  call temp:= `a`(v1) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07bdc0.  v1:= temp @kind object;
  #L07bdc2.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bdc8.  v1:= temp @kind object;
  #L07bdca.  call temp:= `a`(v0, v1) @signature `La/x$a;.a:(La/r;)La/x$a;` @kind virtual;
  #L07bdd0.  v0:= temp @kind object;
  #L07bdd2.  v1:= "Host" @kind object;
  #L07bdd6.  v2:= v4.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07bdda.  call temp:= `a`(v2) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07bde0.  v2:= temp @kind object;
  #L07bde2.  call temp:= `a`(v2) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bde8.  v2:= temp @kind object;
  #L07bdea.  v3:= 1I;
  #L07bdec.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(La/r;Z)Ljava/lang/String;` @kind static;
  #L07bdf2.  v2:= temp @kind object;
  #L07bdf4.  call temp:= `a`(v0, v1, v2) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07bdfa.  v0:= temp @kind object;
  #L07bdfc.  v1:= "Proxy-Connection" @kind object;
  #L07be00.  v2:= "Keep-Alive" @kind object;
  #L07be04.  call temp:= `a`(v0, v1, v2) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07be0a.  v0:= temp @kind object;
  #L07be0c.  v1:= "User-Agent" @kind object;
  #L07be10.  call temp:= `a`() @signature `La/a/d;.a:()Ljava/lang/String;` @kind static;
  #L07be16.  v2:= temp @kind object;
  #L07be18.  call temp:= `a`(v0, v1, v2) @signature `La/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/x$a;` @kind virtual;
  #L07be1e.  v0:= temp @kind object;
  #L07be20.  call temp:= `a`(v0) @signature `La/x$a;.a:()La/x;` @kind virtual;
  #L07be26.  v0:= temp @kind object;
  #L07be28.  return v0 @kind object;
}
procedure `a.a.c.c` `a`(`a.a.b.c` v4 @kind this, `a.u` v5 @kind object, `a.a.b.g` v6 @kind object) @signature `La/a/b/c;.a:(La/u;La/a/b/g;)La/a/c/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07be3c.  v0:= v4.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07be40.  if v0 == 0 then goto L07be54;
  #L07be44.  v0:= new `a.a.e.f`;
  #L07be48.  v1:= v4.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07be4c.  call `<init>`(v0, v5, v6, v1) @signature `La/a/e/f;.<init>:(La/u;La/a/b/g;La/a/e/g;)V` @kind direct;
  #L07be52.  return v0 @kind object;
  #L07be54.  v0:= v4.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07be58.  call temp:= `b`(v5) @signature `La/u;.b:()I` @kind virtual;
  #L07be5e.  v1:= temp;
  #L07be60.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L07be66.  v0:= v4.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07be6a.  call temp:= `a`(v0) @signature `Lb/e;.a:()Lb/s;` @kind interface;
  #L07be70.  v0:= temp @kind object;
  #L07be72.  call temp:= `b`(v5) @signature `La/u;.b:()I` @kind virtual;
  #L07be78.  v1:= temp;
  #L07be7a.  v2:= (`long`) v1 @kind i2l;
  #L07be7c.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07be80.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07be86.  v0:= v4.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L07be8a.  call temp:= `a`(v0) @signature `Lb/d;.a:()Lb/s;` @kind interface;
  #L07be90.  v0:= temp @kind object;
  #L07be92.  call temp:= `c`(v5) @signature `La/u;.c:()I` @kind virtual;
  #L07be98.  v1:= temp;
  #L07be9a.  v2:= (`long`) v1 @kind i2l;
  #L07be9c.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L07bea0.  call temp:= `a`(v0, v2, v1) @signature `Lb/s;.a:(JLjava/util/concurrent/TimeUnit;)Lb/s;` @kind virtual;
  #L07bea6.  v0:= new `a.a.d.a`;
  #L07beaa.  v1:= v4.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07beae.  v2:= v4.`a.a.b.c.o` @type ^`b.d` @kind object;
  #L07beb2.  call `<init>`(v0, v5, v6, v1, v2) @signature `La/a/d/a;.<init>:(La/u;La/a/b/g;Lb/e;Lb/d;)V` @kind direct;
  #L07beb8.  goto L07be52;
}
procedure `a.ab` `a`(`a.a.b.c` v1 @kind this) @signature `La/a/b/c;.a:()La/ab;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07becc.  v0:= v1.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07bed0.  return v0 @kind object;
}
procedure `void` `a`(`a.a.b.c` v5 @kind this, `int` v6 , `int` v7 , `int` v8 , `boolean` v9 ) @signature `La/a/b/c;.a:(IIIZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07bee4.  v2:= 0I;
  #L07bee6.  v0:= v5.`a.a.b.c.l` @type ^`a.v` @kind object;
  #L07beea.  if v0 == 0 then goto L07befe;
  #L07beee.  v0:= new `java.lang.IllegalStateException`;
  #L07bef2.  v1:= "already connected" @kind object;
  #L07bef6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07befc.  throw v0;
  #L07befe.  v0:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07bf02.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07bf08.  v0:= temp @kind object;
  #L07bf0a.  call temp:= `f`(v0) @signature `La/a;.f:()Ljava/util/List;` @kind virtual;
  #L07bf10.  v0:= temp @kind object;
  #L07bf12.  v3:= new `a.a.b.b`;
  #L07bf16.  call `<init>`(v3, v0) @signature `La/a/b/b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L07bf1c.  v1:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07bf20.  call temp:= `a`(v1) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07bf26.  v1:= temp @kind object;
  #L07bf28.  call temp:= `i`(v1) @signature `La/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L07bf2e.  v1:= temp @kind object;
  #L07bf30.  if v1 != 0 then goto L07bfd6;
  #L07bf34.  v1:= `@@a.k.c` @type ^`a.k` @kind object;
  #L07bf38.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L07bf3e.  v0:= temp;
  #L07bf40.  if v0 != 0 then goto L07bf5e;
  #L07bf44.  v0:= new `a.a.b.e`;
  #L07bf48.  v1:= new `java.net.UnknownServiceException`;
  #L07bf4c.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L07bf50.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07bf56.  call `<init>`(v0, v1) @signature `La/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L07bf5c.  throw v0;
  #L07bf5e.  v0:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07bf62.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07bf68.  v0:= temp @kind object;
  #L07bf6a.  call temp:= `a`(v0) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07bf70.  v0:= temp @kind object;
  #L07bf72.  call temp:= `f`(v0) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07bf78.  v0:= temp @kind object;
  #L07bf7a.  call temp:= `b`() @signature `La/a/g/e;.b:()La/a/g/e;` @kind static;
  #L07bf80.  v1:= temp @kind object;
  #L07bf82.  call temp:= `b`(v1, v0) @signature `La/a/g/e;.b:(Ljava/lang/String;)Z` @kind virtual;
  #L07bf88.  v1:= temp;
  #L07bf8a.  if v1 != 0 then goto L07bfd6;
  #L07bf8e.  v1:= new `a.a.b.e`;
  #L07bf92.  v2:= new `java.net.UnknownServiceException`;
  #L07bf96.  v3:= new `java.lang.StringBuilder`;
  #L07bf9a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07bfa0.  v4:= "CLEARTEXT communication to " @kind object;
  #L07bfa4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bfaa.  v3:= temp @kind object;
  #L07bfac.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bfb2.  v0:= temp @kind object;
  #L07bfb4.  v3:= " not permitted by network security policy" @kind object;
  #L07bfb8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07bfbe.  v0:= temp @kind object;
  #L07bfc0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07bfc6.  v0:= temp @kind object;
  #L07bfc8.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L07bfce.  call `<init>`(v1, v2) @signature `La/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L07bfd4.  throw v1;
  #L07bfd6.  v1:= v2 @kind object;
  #Try_start0.  
  #L07bfd8.  v0:= v5.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07bfdc.  call temp:= `d`(v0) @signature `La/ab;.d:()Z` @kind virtual;
  #L07bfe2.  v0:= temp;
  #L07bfe4.  if v0 == 0 then goto L07c016;
  #L07bfe8.  call `a`(v5, v6, v7, v8) @signature `La/a/b/c;.a:(III)V` @kind direct;
  #L07bfee.  call `a`(v5, v3) @signature `La/a/b/c;.a:(La/a/b/b;)V` @kind direct;
  #Try_end0.  
  #L07bff4.  v0:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07bff8.  if v0 == 0 then goto L07c014;
  #L07bffc.  v1:= v5.`a.a.b.c.g` @type ^`a.j` @kind object;
  #L07c000.  @monitorenter v1
  #Try_start1.  
  #L07c002.  v0:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07c006.  call temp:= `a`(v0) @signature `La/a/e/g;.a:()I` @kind virtual;
  #L07c00c.  v0:= temp;
  #L07c00e.  v5.`a.a.b.c.c` @type ^`int` := v0;
  #L07c012.  @monitorexit v1
  #Try_end1.  
  #L07c014.  return @kind void;
  #Try_start2.  
  #L07c016.  call `a`(v5, v6, v7) @signature `La/a/b/c;.a:(II)V` @kind direct;
  #Try_end2.  
  #L07c01c.  goto L07bfee;
  #L07c01e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07c020.  v4:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c024.  call `a`(v4) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L07c02a.  v4:= v5.`a.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L07c02e.  call `a`(v4) @signature `La/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L07c034.  v5.`a.a.b.c.j` @type ^`java.net.Socket` := v2 @kind object;
  #L07c038.  v5.`a.a.b.c.i` @type ^`java.net.Socket` := v2 @kind object;
  #L07c03c.  v5.`a.a.b.c.n` @type ^`b.e` := v2 @kind object;
  #L07c040.  v5.`a.a.b.c.o` @type ^`b.d` := v2 @kind object;
  #L07c044.  v5.`a.a.b.c.k` @type ^`a.p` := v2 @kind object;
  #L07c048.  v5.`a.a.b.c.l` @type ^`a.v` := v2 @kind object;
  #L07c04c.  v5.`a.a.b.c.m` @type ^`a.a.e.g` := v2 @kind object;
  #L07c050.  if v1 != 0 then goto L07c070;
  #L07c054.  v1:= new `a.a.b.e`;
  #L07c058.  call `<init>`(v1, v0) @signature `La/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L07c05e.  if v9 == 0 then goto L07c06e;
  #L07c062.  call temp:= `a`(v3, v0) @signature `La/a/b/b;.a:(Ljava/io/IOException;)Z` @kind virtual;
  #L07c068.  v0:= temp;
  #L07c06a.  if v0 != 0 then goto L07bfd8;
  #L07c06e.  throw v1;
  #L07c070.  call `a`(v1, v0) @signature `La/a/b/e;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L07c076.  goto L07c05e;
  #L07c078.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #Try_start3.  
  #L07c07a.  @monitorexit v1
  #Try_end3.  
  #L07c07c.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07c01e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07c078;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L07c01e;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L07c078;
}
procedure `void` `a`(`a.a.b.c` v2 @kind this, `a.a.e.g` v3 @kind object) @signature `La/a/b/c;.a:(La/a/e/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07c0bc.  v1:= v2.`a.a.b.c.g` @type ^`a.j` @kind object;
  #L07c0c0.  @monitorenter v1
  #Try_start0.  
  #L07c0c2.  call temp:= `a`(v3) @signature `La/a/e/g;.a:()I` @kind virtual;
  #L07c0c8.  v0:= temp;
  #L07c0ca.  v2.`a.a.b.c.c` @type ^`int` := v0;
  #L07c0ce.  @monitorexit v1
  #L07c0d0.  return @kind void;
  #L07c0d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07c0d4.  @monitorexit v1
  #Try_end0.  
  #L07c0d6.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L07c0d2;
}
procedure `void` `a`(`a.a.b.c` v1 @kind this, `a.a.e.i` v2 @kind object) @signature `La/a/b/c;.a:(La/a/e/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07c0f4.  v0:= `@@a.a.e.b.e` @type ^`a.a.e.b` @kind object;
  #L07c0f8.  call `a`(v2, v0) @signature `La/a/e/i;.a:(La/a/e/b;)V` @kind virtual;
  #L07c0fe.  return @kind void;
}
procedure `boolean` `a`(`a.a.b.c` v2 @kind this, `a.a` v3 @kind object) @signature `La/a/b/c;.a:(La/a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07c110.  v0:= v2.`a.a.b.c.d` @type ^`java.util.List` @kind object;
  #L07c114.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L07c11a.  v0:= temp;
  #L07c11c.  v1:= v2.`a.a.b.c.c` @type ^`int`;
  #L07c120.  if v0 >= v1 then goto L07c14c;
  #L07c124.  call temp:= `a`(v2) @signature `La/a/b/c;.a:()La/ab;` @kind virtual;
  #L07c12a.  v0:= temp @kind object;
  #L07c12c.  call temp:= `a`(v0) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07c132.  v0:= temp @kind object;
  #L07c134.  call temp:= `equals`(v3, v0) @signature `La/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07c13a.  v0:= temp;
  #L07c13c.  if v0 == 0 then goto L07c14c;
  #L07c140.  v0:= v2.`a.a.b.c.a` @type ^`boolean` @kind boolean;
  #L07c144.  if v0 != 0 then goto L07c14c;
  #L07c148.  v0:= 1I;
  #L07c14a.  return v0;
  #L07c14c.  v0:= 0I;
  #L07c14e.  goto L07c14a;
}
procedure `boolean` `a`(`a.a.b.c` v5 @kind this, `boolean` v6 ) @signature `La/a/b/c;.a:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07c160.  v0:= 1I;
  #L07c162.  v1:= 0I;
  #L07c164.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c168.  call temp:= `isClosed`(v2) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L07c16e.  v2:= temp;
  #L07c170.  if v2 != 0 then goto L07c194;
  #L07c174.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c178.  call temp:= `isInputShutdown`(v2) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L07c17e.  v2:= temp;
  #L07c180.  if v2 != 0 then goto L07c194;
  #L07c184.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c188.  call temp:= `isOutputShutdown`(v2) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L07c18e.  v2:= temp;
  #L07c190.  if v2 == 0 then goto L07c198;
  #L07c194.  v0:= v1;
  #L07c196.  return v0;
  #L07c198.  v2:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07c19c.  if v2 == 0 then goto L07c1b4;
  #L07c1a0.  v2:= v5.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07c1a4.  call temp:= `d`(v2) @signature `La/a/e/g;.d:()Z` @kind virtual;
  #L07c1aa.  v2:= temp;
  #L07c1ac.  if v2 == 0 then goto L07c196;
  #L07c1b0.  v0:= v1;
  #L07c1b2.  goto L07c196;
  #L07c1b4.  if v6 == 0 then goto L07c196;
  #Try_start0.  
  #L07c1b8.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c1bc.  call temp:= `getSoTimeout`(v2) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #Try_end0.  
  #L07c1c2.  v3:= temp;
  #Try_start1.  
  #L07c1c4.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c1c8.  v4:= 1I;
  #L07c1ca.  call `setSoTimeout`(v2, v4) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L07c1d0.  v2:= v5.`a.a.b.c.n` @type ^`b.e` @kind object;
  #L07c1d4.  call temp:= `e`(v2) @signature `Lb/e;.e:()Z` @kind interface;
  #Try_end1.  
  #L07c1da.  v2:= temp;
  #L07c1dc.  if v2 == 0 then goto L07c1ee;
  #Try_start2.  
  #L07c1e0.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c1e4.  call `setSoTimeout`(v2, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L07c1ea.  v0:= v1;
  #L07c1ec.  goto L07c196;
  #L07c1ee.  v2:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c1f2.  call `setSoTimeout`(v2, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L07c1f8.  goto L07c196;
  #L07c1fa.  v1:= Exception @type ^`java.net.SocketTimeoutException` @kind object;
  #L07c1fc.  goto L07c196;
  #L07c1fe.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L07c200.  v4:= v5.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c204.  call `setSoTimeout`(v4, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L07c20a.  throw v2;
  #Try_end2.  
  #L07c20c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07c20e.  v0:= v1;
  #L07c210.  goto L07c196;
  catch `java.net.SocketTimeoutException` @[Try_start0..Try_end0] goto L07c1fa;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07c20c;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L07c1fe;
  catch `java.net.SocketTimeoutException` @[Try_start2..Try_end2] goto L07c1fa;
  catch `java.io.IOException` @[Try_start2..Try_end2] goto L07c20c;
}
procedure `java.net.Socket` `b`(`a.a.b.c` v1 @kind this) @signature `La/a/b/c;.b:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07c248.  v0:= v1.`a.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L07c24c.  return v0 @kind object;
}
procedure `a.p` `c`(`a.a.b.c` v1 @kind this) @signature `La/a/b/c;.c:()La/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07c260.  v0:= v1.`a.a.b.c.k` @type ^`a.p` @kind object;
  #L07c264.  return v0 @kind object;
}
procedure `boolean` `d`(`a.a.b.c` v1 @kind this) @signature `La/a/b/c;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07c278.  v0:= v1.`a.a.b.c.m` @type ^`a.a.e.g` @kind object;
  #L07c27c.  if v0 == 0 then goto L07c284;
  #L07c280.  v0:= 1I;
  #L07c282.  return v0;
  #L07c284.  v0:= 0I;
  #L07c286.  goto L07c282;
}
procedure `java.lang.String` `toString`(`a.a.b.c` v2 @kind this) @signature `La/a/b/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L07c298.  v0:= new `java.lang.StringBuilder`;
  #L07c29c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L07c2a2.  v1:= "Connection{" @kind object;
  #L07c2a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c2ac.  v0:= temp @kind object;
  #L07c2ae.  v1:= v2.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07c2b2.  call temp:= `a`(v1) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07c2b8.  v1:= temp @kind object;
  #L07c2ba.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07c2c0.  v1:= temp @kind object;
  #L07c2c2.  call temp:= `f`(v1) @signature `La/r;.f:()Ljava/lang/String;` @kind virtual;
  #L07c2c8.  v1:= temp @kind object;
  #L07c2ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c2d0.  v0:= temp @kind object;
  #L07c2d2.  v1:= ":" @kind object;
  #L07c2d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c2dc.  v0:= temp @kind object;
  #L07c2de.  v1:= v2.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07c2e2.  call temp:= `a`(v1) @signature `La/ab;.a:()La/a;` @kind virtual;
  #L07c2e8.  v1:= temp @kind object;
  #L07c2ea.  call temp:= `a`(v1) @signature `La/a;.a:()La/r;` @kind virtual;
  #L07c2f0.  v1:= temp @kind object;
  #L07c2f2.  call temp:= `g`(v1) @signature `La/r;.g:()I` @kind virtual;
  #L07c2f8.  v1:= temp;
  #L07c2fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c300.  v0:= temp @kind object;
  #L07c302.  v1:= ", proxy=" @kind object;
  #L07c306.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c30c.  v0:= temp @kind object;
  #L07c30e.  v1:= v2.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07c312.  call temp:= `b`(v1) @signature `La/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L07c318.  v1:= temp @kind object;
  #L07c31a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c320.  v0:= temp @kind object;
  #L07c322.  v1:= " hostAddress=" @kind object;
  #L07c326.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c32c.  v0:= temp @kind object;
  #L07c32e.  v1:= v2.`a.a.b.c.h` @type ^`a.ab` @kind object;
  #L07c332.  call temp:= `c`(v1) @signature `La/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L07c338.  v1:= temp @kind object;
  #L07c33a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c340.  v0:= temp @kind object;
  #L07c342.  v1:= " cipherSuite=" @kind object;
  #L07c346.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c34c.  v1:= temp @kind object;
  #L07c34e.  v0:= v2.`a.a.b.c.k` @type ^`a.p` @kind object;
  #L07c352.  if v0 == 0 then goto L07c398;
  #L07c356.  v0:= v2.`a.a.b.c.k` @type ^`a.p` @kind object;
  #L07c35a.  call temp:= `a`(v0) @signature `La/p;.a:()La/h;` @kind virtual;
  #L07c360.  v0:= temp @kind object;
  #L07c362.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c368.  v0:= temp @kind object;
  #L07c36a.  v1:= " protocol=" @kind object;
  #L07c36e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c374.  v0:= temp @kind object;
  #L07c376.  v1:= v2.`a.a.b.c.l` @type ^`a.v` @kind object;
  #L07c37a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c380.  v0:= temp @kind object;
  #L07c382.  v1:= 125I;
  #L07c386.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L07c38c.  v0:= temp @kind object;
  #L07c38e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L07c394.  v0:= temp @kind object;
  #L07c396.  return v0 @kind object;
  #L07c398.  v0:= "none" @kind object;
  #L07c39c.  goto L07c362;
}

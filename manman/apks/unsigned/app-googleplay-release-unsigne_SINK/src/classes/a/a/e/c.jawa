record `a.a.e.c` @kind class @AccessFlag PUBLIC_FINAL {
  `b.f` `a.a.e.c.g` @AccessFlag PUBLIC_FINAL;
  `b.f` `a.a.e.c.h` @AccessFlag PUBLIC_FINAL;
  `int` `a.a.e.c.i` @AccessFlag FINAL;
}
global `b.f` `@@a.a.e.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `b.f` `@@a.a.e.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L08097c.  v0:= ":" @kind object;
  #L080980.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L080986.  v0:= temp @kind object;
  #L080988.  `@@a.a.e.c.a` @type ^`b.f` := v0 @kind object;
  #L08098c.  v0:= ":status" @kind object;
  #L080990.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L080996.  v0:= temp @kind object;
  #L080998.  `@@a.a.e.c.b` @type ^`b.f` := v0 @kind object;
  #L08099c.  v0:= ":method" @kind object;
  #L0809a0.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L0809a6.  v0:= temp @kind object;
  #L0809a8.  `@@a.a.e.c.c` @type ^`b.f` := v0 @kind object;
  #L0809ac.  v0:= ":path" @kind object;
  #L0809b0.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L0809b6.  v0:= temp @kind object;
  #L0809b8.  `@@a.a.e.c.d` @type ^`b.f` := v0 @kind object;
  #L0809bc.  v0:= ":scheme" @kind object;
  #L0809c0.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L0809c6.  v0:= temp @kind object;
  #L0809c8.  `@@a.a.e.c.e` @type ^`b.f` := v0 @kind object;
  #L0809cc.  v0:= ":authority" @kind object;
  #L0809d0.  call temp:= `a`(v0) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L0809d6.  v0:= temp @kind object;
  #L0809d8.  `@@a.a.e.c.f` @type ^`b.f` := v0 @kind object;
  #L0809dc.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v2 @kind this, `b.f` v3 @kind object, `b.f` v4 @kind object) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L0809f0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0809f6.  v2.`a.a.e.c.g` @type ^`b.f` := v3 @kind object;
  #L0809fa.  v2.`a.a.e.c.h` @type ^`b.f` := v4 @kind object;
  #L0809fe.  call temp:= `g`(v3) @signature `Lb/f;.g:()I` @kind virtual;
  #L080a04.  v0:= temp;
  #L080a06.  v0:= v0 + 32;
  #L080a0a.  call temp:= `g`(v4) @signature `Lb/f;.g:()I` @kind virtual;
  #L080a10.  v1:= temp;
  #L080a12.  v0:= v0 + v1 @kind int;
  #L080a14.  v2.`a.a.e.c.i` @type ^`int` := v0;
  #L080a18.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v1 @kind this, `b.f` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/a/e/c;.<init>:(Lb/f;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L080a2c.  call temp:= `a`(v3) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L080a32.  v0:= temp @kind object;
  #L080a34.  call `<init>`(v1, v2, v0) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @kind direct;
  #L080a3a.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.c` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/a/e/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L080a4c.  call temp:= `a`(v3) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L080a52.  v0:= temp @kind object;
  #L080a54.  call temp:= `a`(v4) @signature `Lb/f;.a:(Ljava/lang/String;)Lb/f;` @kind static;
  #L080a5a.  v1:= temp @kind object;
  #L080a5c.  call `<init>`(v2, v0, v1) @signature `La/a/e/c;.<init>:(Lb/f;Lb/f;)V` @kind direct;
  #L080a62.  return @kind void;
}
procedure `boolean` `equals`(`a.a.e.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/a/e/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L080a74.  v0:= 0I;
  #L080a76.  v1:= instanceof @variable v4 @type ^`a.a.e.c` @kind boolean;
  #L080a7a.  if v1 == 0 then goto L080aac;
  #L080a7e.  v4:= (`a.a.e.c`) v4 @kind object;
  #L080a82.  v1:= v3.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L080a86.  v2:= v4.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L080a8a.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L080a90.  v1:= temp;
  #L080a92.  if v1 == 0 then goto L080aac;
  #L080a96.  v1:= v3.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L080a9a.  v2:= v4.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L080a9e.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L080aa4.  v1:= temp;
  #L080aa6.  if v1 == 0 then goto L080aac;
  #L080aaa.  v0:= 1I;
  #L080aac.  return v0;
}
procedure `int` `hashCode`(`a.a.e.c` v2 @kind this) @signature `La/a/e/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L080ac0.  v0:= v2.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L080ac4.  call temp:= `hashCode`(v0) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L080aca.  v0:= temp;
  #L080acc.  v0:= v0 + 527;
  #L080ad0.  v0:= v0 * 31;
  #L080ad4.  v1:= v2.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L080ad8.  call temp:= `hashCode`(v1) @signature `Lb/f;.hashCode:()I` @kind virtual;
  #L080ade.  v1:= temp;
  #L080ae0.  v0:= v0 + v1 @kind int;
  #L080ae2.  return v0;
}
procedure `java.lang.String` `toString`(`a.a.e.c` v4 @kind this) @signature `La/a/e/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L080af4.  v0:= "%s: %s" @kind object;
  #L080af8.  v1:= 2I;
  #L080afa.  v1:= new `java.lang.Object`[v1];
  #L080afe.  v2:= 0I;
  #L080b00.  v3:= v4.`a.a.e.c.g` @type ^`b.f` @kind object;
  #L080b04.  call temp:= `a`(v3) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L080b0a.  v3:= temp @kind object;
  #L080b0c.  v1[v2]:= v3 @kind object;
  #L080b10.  v2:= 1I;
  #L080b12.  v3:= v4.`a.a.e.c.h` @type ^`b.f` @kind object;
  #L080b16.  call temp:= `a`(v3) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L080b1c.  v3:= temp @kind object;
  #L080b1e.  v1[v2]:= v3 @kind object;
  #L080b22.  call temp:= `a`(v0, v1) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L080b28.  v0:= temp @kind object;
  #L080b2a.  return v0 @kind object;
}

record `a.v` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `a.v.e` @AccessFlag PRIVATE_FINAL;
}
global `a.v` `@@a.v.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v`[] `@@a.v.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L090c54.  v6:= 3I;
  #L090c56.  v5:= 2I;
  #L090c58.  v4:= 1I;
  #L090c5a.  v3:= 0I;
  #L090c5c.  v0:= new `a.v`;
  #L090c60.  v1:= "HTTP_1_0" @kind object;
  #L090c64.  v2:= "http/1.0" @kind object;
  #L090c68.  call `<init>`(v0, v1, v3, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L090c6e.  `@@a.v.a` @type ^`a.v` := v0 @kind object;
  #L090c72.  v0:= new `a.v`;
  #L090c76.  v1:= "HTTP_1_1" @kind object;
  #L090c7a.  v2:= "http/1.1" @kind object;
  #L090c7e.  call `<init>`(v0, v1, v4, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L090c84.  `@@a.v.b` @type ^`a.v` := v0 @kind object;
  #L090c88.  v0:= new `a.v`;
  #L090c8c.  v1:= "SPDY_3" @kind object;
  #L090c90.  v2:= "spdy/3.1" @kind object;
  #L090c94.  call `<init>`(v0, v1, v5, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L090c9a.  `@@a.v.c` @type ^`a.v` := v0 @kind object;
  #L090c9e.  v0:= new `a.v`;
  #L090ca2.  v1:= "HTTP_2" @kind object;
  #L090ca6.  v2:= "h2" @kind object;
  #L090caa.  call `<init>`(v0, v1, v6, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L090cb0.  `@@a.v.d` @type ^`a.v` := v0 @kind object;
  #L090cb4.  v0:= 4I;
  #L090cb6.  v0:= new `a.v`[v0];
  #L090cba.  v1:= `@@a.v.a` @type ^`a.v` @kind object;
  #L090cbe.  v0[v3]:= v1 @kind object;
  #L090cc2.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #L090cc6.  v0[v4]:= v1 @kind object;
  #L090cca.  v1:= `@@a.v.c` @type ^`a.v` @kind object;
  #L090cce.  v0[v5]:= v1 @kind object;
  #L090cd2.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L090cd6.  v0[v6]:= v1 @kind object;
  #L090cda.  `@@a.v.f` @type ^`a.v`[] := v0 @kind object;
  #L090cde.  return @kind void;
}
procedure `void` `<init>`(`a.v` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L090cf0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L090cf6.  v0.`a.v.e` @type ^`java.lang.String` := v3 @kind object;
  #L090cfa.  return @kind void;
}
procedure `a.v` `a`(`java.lang.String` v3 @kind object) @signature `La/v;.a:(Ljava/lang/String;)La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L090d0c.  v0:= `@@a.v.a` @type ^`a.v` @kind object;
  #L090d10.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L090d14.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L090d1a.  v0:= temp;
  #L090d1c.  if v0 == 0 then goto L090d26;
  #L090d20.  v0:= `@@a.v.a` @type ^`a.v` @kind object;
  #L090d24.  return v0 @kind object;
  #L090d26.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L090d2a.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L090d2e.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L090d34.  v0:= temp;
  #L090d36.  if v0 == 0 then goto L090d40;
  #L090d3a.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L090d3e.  goto L090d24;
  #L090d40.  v0:= `@@a.v.d` @type ^`a.v` @kind object;
  #L090d44.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L090d48.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L090d4e.  v0:= temp;
  #L090d50.  if v0 == 0 then goto L090d5a;
  #L090d54.  v0:= `@@a.v.d` @type ^`a.v` @kind object;
  #L090d58.  goto L090d24;
  #L090d5a.  v0:= `@@a.v.c` @type ^`a.v` @kind object;
  #L090d5e.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L090d62.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L090d68.  v0:= temp;
  #L090d6a.  if v0 == 0 then goto L090d74;
  #L090d6e.  v0:= `@@a.v.c` @type ^`a.v` @kind object;
  #L090d72.  goto L090d24;
  #L090d74.  v0:= new `java.io.IOException`;
  #L090d78.  v1:= new `java.lang.StringBuilder`;
  #L090d7c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L090d82.  v2:= "Unexpected protocol: " @kind object;
  #L090d86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L090d8c.  v1:= temp @kind object;
  #L090d8e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L090d94.  v1:= temp @kind object;
  #L090d96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L090d9c.  v1:= temp @kind object;
  #L090d9e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L090da4.  throw v0;
}
procedure `a.v` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/v;.valueOf:(Ljava/lang/String;)La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L090db8.  v0:= constclass @type ^`a.v` @kind object;
  #L090dbc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L090dc2.  v0:= temp @kind object;
  #L090dc4.  v0:= (`a.v`) v0 @kind object;
  #L090dc8.  return v0 @kind object;
}
procedure `a.v`[] `values`() @signature `La/v;.values:()[La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L090ddc.  v0:= `@@a.v.f` @type ^`a.v`[] @kind object;
  #L090de0.  call temp:= `clone`(v0) @signature `[La/v;.clone:()Ljava/lang/Object;` @kind virtual;
  #L090de6.  v0:= temp @kind object;
  #L090de8.  v0:= (`a.v`[]) v0 @kind object;
  #L090dec.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`a.v` v1 @kind this) @signature `La/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L090e00.  v0:= v1.`a.v.e` @type ^`java.lang.String` @kind object;
  #L090e04.  return v0 @kind object;
}

record `a.q` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `a.q.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.q` v2 @kind this, `a.q$a` v3 @kind object) @signature `La/q;.<init>:(La/q$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L08e32c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08e332.  v0:= v3.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e336.  v1:= v3.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e33a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08e340.  v1:= temp;
  #L08e342.  v1:= new `java.lang.String`[v1];
  #L08e346.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L08e34c.  v0:= temp @kind object;
  #L08e34e.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L08e352.  v2.`a.q.a` @type ^`java.lang.String`[] := v0 @kind object;
  #L08e356.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L08e368.  v0:= length @variable v2;
  #L08e36a.  v0:= v0 + -2;
  #L08e36e.  if v0 < 0 then goto L08e392;
  #L08e372.  v1:= v2[v0] @kind object;
  #L08e376.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08e37c.  v1:= temp;
  #L08e37e.  if v1 == 0 then goto L08e38c;
  #L08e382.  v0:= v0 + 1;
  #L08e386.  v0:= v2[v0] @kind object;
  #L08e38a.  return v0 @kind object;
  #L08e38c.  v0:= v0 + -2;
  #L08e390.  goto L08e36e;
  #L08e392.  v0:= 0I;
  #L08e394.  goto L08e38a;
}
procedure `int` `a`(`a.q` v1 @kind this) @signature `La/q;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08e3a8.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08e3ac.  v0:= length @variable v0;
  #L08e3ae.  v0:= v0 / 2;
  #L08e3b2.  return v0;
}
procedure `java.lang.String` `a`(`a.q` v2 @kind this, `int` v3 ) @signature `La/q;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08e3c4.  v0:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08e3c8.  v1:= v3 * 2;
  #L08e3cc.  v0:= v0[v1] @kind object;
  #L08e3d0.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08e3e4.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08e3e8.  call temp:= `a`(v0, v2) @signature `La/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L08e3ee.  v0:= temp @kind object;
  #L08e3f0.  return v0 @kind object;
}
procedure `a.q$a` `b`(`a.q` v3 @kind this) @signature `La/q;.b:()La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08e404.  v0:= new `a.q$a`;
  #L08e408.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L08e40e.  v1:= v0.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e412.  v2:= v3.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08e416.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L08e41c.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`a.q` v2 @kind this, `int` v3 ) @signature `La/q;.b:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08e430.  v0:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08e434.  v1:= v3 * 2;
  #L08e438.  v1:= v1 + 1;
  #L08e43c.  v0:= v0[v1] @kind object;
  #L08e440.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.q` v5 @kind this, `java.lang.String` v6 @kind object) @signature `La/q;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08e454.  v1:= 0I;
  #L08e456.  v0:= 0I;
  #L08e458.  call temp:= `a`(v5) @signature `La/q;.a:()I` @kind virtual;
  #L08e45e.  v2:= temp;
  #L08e460.  v4:= v0;
  #L08e462.  v0:= v1 @kind object;
  #L08e464.  v1:= v4;
  #L08e466.  if v1 >= v2 then goto L08e4a2;
  #L08e46a.  call temp:= `a`(v5, v1) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L08e470.  v3:= temp @kind object;
  #L08e472.  call temp:= `equalsIgnoreCase`(v6, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08e478.  v3:= temp;
  #L08e47a.  if v3 == 0 then goto L08e49c;
  #L08e47e.  if v0 != 0 then goto L08e48e;
  #L08e482.  v0:= new `java.util.ArrayList`;
  #L08e486.  v3:= 2I;
  #L08e488.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L08e48e.  call temp:= `b`(v5, v1) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L08e494.  v3:= temp @kind object;
  #L08e496.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08e49c.  v1:= v1 + 1;
  #L08e4a0.  goto L08e466;
  #L08e4a2.  if v0 == 0 then goto L08e4b0;
  #L08e4a6.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08e4ac.  v0:= temp @kind object;
  #L08e4ae.  return v0 @kind object;
  #L08e4b0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L08e4b6.  v0:= temp @kind object;
  #L08e4b8.  goto L08e4ae;
}
procedure `boolean` `equals`(`a.q` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08e4cc.  v0:= instanceof @variable v3 @type ^`a.q` @kind boolean;
  #L08e4d0.  if v0 == 0 then goto L08e4f0;
  #L08e4d4.  v3:= (`a.q`) v3 @kind object;
  #L08e4d8.  v0:= v3.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08e4dc.  v1:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08e4e0.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L08e4e6.  v0:= temp;
  #L08e4e8.  if v0 == 0 then goto L08e4f0;
  #L08e4ec.  v0:= 1I;
  #L08e4ee.  return v0;
  #L08e4f0.  v0:= 0I;
  #L08e4f2.  goto L08e4ee;
}
procedure `int` `hashCode`(`a.q` v1 @kind this) @signature `La/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08e504.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L08e508.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L08e50e.  v0:= temp;
  #L08e510.  return v0;
}
procedure `java.lang.String` `toString`(`a.q` v5 @kind this) @signature `La/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08e524.  v1:= new `java.lang.StringBuilder`;
  #L08e528.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08e52e.  v0:= 0I;
  #L08e530.  call temp:= `a`(v5) @signature `La/q;.a:()I` @kind virtual;
  #L08e536.  v2:= temp;
  #L08e538.  if v0 >= v2 then goto L08e578;
  #L08e53c.  call temp:= `a`(v5, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L08e542.  v3:= temp @kind object;
  #L08e544.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08e54a.  v3:= temp @kind object;
  #L08e54c.  v4:= ": " @kind object;
  #L08e550.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08e556.  v3:= temp @kind object;
  #L08e558.  call temp:= `b`(v5, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L08e55e.  v4:= temp @kind object;
  #L08e560.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08e566.  v3:= temp @kind object;
  #L08e568.  v4:= "\n" @kind object;
  #L08e56c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08e572.  v0:= v0 + 1;
  #L08e576.  goto L08e538;
  #L08e578.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08e57e.  v0:= temp @kind object;
  #L08e580.  return v0 @kind object;
}

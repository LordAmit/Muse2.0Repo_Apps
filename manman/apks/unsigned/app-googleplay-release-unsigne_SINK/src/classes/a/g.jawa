record `a.g` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `a.g.b` @AccessFlag PRIVATE_FINAL;
  `a.a.h.b` `a.g.c` @AccessFlag PRIVATE_FINAL;
}
global `a.g` `@@a.g.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L08b4a4.  v0:= new `a.g$a`;
  #L08b4a8.  call `<init>`(v0) @signature `La/g$a;.<init>:()V` @kind direct;
  #L08b4ae.  call temp:= `a`(v0) @signature `La/g$a;.a:()La/g;` @kind virtual;
  #L08b4b4.  v0:= temp @kind object;
  #L08b4b6.  `@@a.g.a` @type ^`a.g` := v0 @kind object;
  #L08b4ba.  return @kind void;
}
procedure `void` `<init>`(`a.g` v0 @kind this, `java.util.Set` v1 @kind object, `a.a.h.b` v2 @kind object) @signature `La/g;.<init>:(Ljava/util/Set;La/a/h/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L08b4cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08b4d2.  v0.`a.g.b` @type ^`java.util.Set` := v1 @kind object;
  #L08b4d6.  v0.`a.g.c` @type ^`a.a.h.b` := v2 @kind object;
  #L08b4da.  return @kind void;
}
procedure `b.f` `a`(`java.security.cert.X509Certificate` v1 @kind object) @signature `La/g;.a:(Ljava/security/cert/X509Certificate;)Lb/f;` @AccessFlag STATIC {
    temp;
    v0;

  #L08b4ec.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L08b4f2.  v0:= temp @kind object;
  #L08b4f4.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L08b4fa.  v0:= temp @kind object;
  #L08b4fc.  call temp:= `a`(v0) @signature `Lb/f;.a:([B)Lb/f;` @kind static;
  #L08b502.  v0:= temp @kind object;
  #L08b504.  call temp:= `c`(v0) @signature `Lb/f;.c:()Lb/f;` @kind virtual;
  #L08b50a.  v0:= temp @kind object;
  #L08b50c.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.security.cert.Certificate` v2 @kind object) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L08b520.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L08b524.  if v0 != 0 then goto L08b538;
  #L08b528.  v0:= new `java.lang.IllegalArgumentException`;
  #L08b52c.  v1:= "Certificate pinning requires X509 certificates" @kind object;
  #L08b530.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b536.  throw v0;
  #L08b538.  v0:= new `java.lang.StringBuilder`;
  #L08b53c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b542.  v1:= "sha256/" @kind object;
  #L08b546.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b54c.  v0:= temp @kind object;
  #L08b54e.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L08b552.  call temp:= `b`(v2) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L08b558.  v1:= temp @kind object;
  #L08b55a.  call temp:= `b`(v1) @signature `Lb/f;.b:()Ljava/lang/String;` @kind virtual;
  #L08b560.  v1:= temp @kind object;
  #L08b562.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b568.  v0:= temp @kind object;
  #L08b56a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b570.  v0:= temp @kind object;
  #L08b572.  return v0 @kind object;
}
procedure `b.f` `b`(`java.security.cert.X509Certificate` v1 @kind object) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @AccessFlag STATIC {
    temp;
    v0;

  #L08b584.  call temp:= `getPublicKey`(v1) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L08b58a.  v0:= temp @kind object;
  #L08b58c.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L08b592.  v0:= temp @kind object;
  #L08b594.  call temp:= `a`(v0) @signature `Lb/f;.a:([B)Lb/f;` @kind static;
  #L08b59a.  v0:= temp @kind object;
  #L08b59c.  call temp:= `d`(v0) @signature `Lb/f;.d:()Lb/f;` @kind virtual;
  #L08b5a2.  v0:= temp @kind object;
  #L08b5a4.  return v0 @kind object;
}
procedure `a.g` `a`(`a.g` v2 @kind this, `a.a.h.b` v3 @kind object) @signature `La/g;.a:(La/a/h/b;)La/g;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L08b5b8.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08b5bc.  call temp:= `a`(v0, v3) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L08b5c2.  v0:= temp;
  #L08b5c4.  if v0 == 0 then goto L08b5ca;
  #L08b5c8.  return v2 @kind object;
  #L08b5ca.  v0:= new `a.g`;
  #L08b5ce.  v1:= v2.`a.g.b` @type ^`java.util.Set` @kind object;
  #L08b5d2.  call `<init>`(v0, v1, v3) @signature `La/g;.<init>:(Ljava/util/Set;La/a/h/b;)V` @kind direct;
  #L08b5d8.  v2:= v0 @kind object;
  #L08b5da.  goto L08b5c8;
}
procedure `java.util.List` `a`(`a.g` v4 @kind this, `java.lang.String` v5 @kind object) @signature `La/g;.a:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08b5ec.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L08b5f2.  v1:= temp @kind object;
  #L08b5f4.  v0:= v4.`a.g.b` @type ^`java.util.Set` @kind object;
  #L08b5f8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L08b5fe.  v2:= temp @kind object;
  #L08b600.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L08b606.  v0:= temp;
  #L08b608.  if v0 == 0 then goto L08b642;
  #L08b60c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L08b612.  v0:= temp @kind object;
  #L08b614.  v0:= (`a.g$b`) v0 @kind object;
  #L08b618.  call temp:= `a`(v0, v5) @signature `La/g$b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L08b61e.  v3:= temp;
  #L08b620.  if v3 == 0 then goto L08b600;
  #L08b624.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L08b62a.  v3:= temp;
  #L08b62c.  if v3 == 0 then goto L08b63a;
  #L08b630.  v1:= new `java.util.ArrayList`;
  #L08b634.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L08b63a.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08b640.  goto L08b600;
  #L08b642.  return v1 @kind object;
}
procedure `void` `a`(`a.g` v13 @kind this, `java.lang.String` v14 @kind object, `java.util.List` v15 @kind object) @signature `La/g;.a:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L08b654.  v6:= 0I;
  #L08b656.  v4:= 0I;
  #L08b658.  call temp:= `a`(v13, v14) @signature `La/g;.a:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L08b65e.  v8:= temp @kind object;
  #L08b660.  call temp:= `isEmpty`(v8) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L08b666.  v0:= temp;
  #L08b668.  if v0 == 0 then goto L08b66e;
  #L08b66c.  return @kind void;
  #L08b66e.  v0:= v13.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08b672.  if v0 == 0 then goto L08b682;
  #L08b676.  v0:= v13.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08b67a.  call temp:= `a`(v0, v15, v14) @signature `La/a/h/b;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L08b680.  v15:= temp @kind object;
  #L08b682.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08b688.  v9:= temp;
  #L08b68a.  v7:= v4;
  #L08b68c.  if v7 >= v9 then goto L08b740;
  #L08b690.  call temp:= `get`(v15, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08b696.  v0:= temp @kind object;
  #L08b698.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L08b69c.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08b6a2.  v10:= temp;
  #L08b6a4.  v5:= v4;
  #L08b6a6.  v2:= v6 @kind object;
  #L08b6a8.  v3:= v6 @kind object;
  #L08b6aa.  if v5 >= v10 then goto L08b738;
  #L08b6ae.  call temp:= `get`(v8, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08b6b4.  v1:= temp @kind object;
  #L08b6b6.  v1:= (`a.g$b`) v1 @kind object;
  #L08b6ba.  v11:= v1.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L08b6be.  v12:= "sha256/" @kind object;
  #L08b6c2.  call temp:= `equals`(v11, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08b6c8.  v11:= temp;
  #L08b6ca.  if v11 == 0 then goto L08b6fa;
  #L08b6ce.  if v2 != 0 then goto L08b6da;
  #L08b6d2.  call temp:= `b`(v0) @signature `La/g;.b:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L08b6d8.  v2:= temp @kind object;
  #L08b6da.  v1:= v1.`a.g$b.d` @type ^`b.f` @kind object;
  #L08b6de.  call temp:= `equals`(v1, v2) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08b6e4.  v1:= temp;
  #L08b6e6.  if v1 != 0 then goto L08b66c;
  #L08b6ea.  v1:= v2 @kind object;
  #L08b6ec.  v2:= v3 @kind object;
  #L08b6ee.  v3:= v5 + 1;
  #L08b6f2.  v5:= v3;
  #L08b6f4.  v3:= v2 @kind object;
  #L08b6f6.  v2:= v1 @kind object;
  #L08b6f8.  goto L08b6aa;
  #L08b6fa.  v11:= v1.`a.g$b.c` @type ^`java.lang.String` @kind object;
  #L08b6fe.  v12:= "sha1/" @kind object;
  #L08b702.  call temp:= `equals`(v11, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08b708.  v11:= temp;
  #L08b70a.  if v11 == 0 then goto L08b72c;
  #L08b70e.  if v3 != 0 then goto L08b71a;
  #L08b712.  call temp:= `a`(v0) @signature `La/g;.a:(Ljava/security/cert/X509Certificate;)Lb/f;` @kind static;
  #L08b718.  v3:= temp @kind object;
  #L08b71a.  v1:= v1.`a.g$b.d` @type ^`b.f` @kind object;
  #L08b71e.  call temp:= `equals`(v1, v3) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08b724.  v1:= temp;
  #L08b726.  if v1 == 0 then goto L08b6ea;
  #L08b72a.  goto L08b66c;
  #L08b72c.  v0:= new `java.lang.AssertionError`;
  #L08b730.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08b736.  throw v0;
  #L08b738.  v0:= v7 + 1;
  #L08b73c.  v7:= v0;
  #L08b73e.  goto L08b68c;
  #L08b740.  v0:= new `java.lang.StringBuilder`;
  #L08b744.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b74a.  v1:= "Certificate pinning failure!" @kind object;
  #L08b74e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b754.  v0:= temp @kind object;
  #L08b756.  v1:= "\n  Peer certificate chain:" @kind object;
  #L08b75a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b760.  v2:= temp @kind object;
  #L08b762.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08b768.  v3:= temp;
  #L08b76a.  v1:= v4;
  #L08b76c.  if v1 >= v3 then goto L08b7c2;
  #L08b770.  call temp:= `get`(v15, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08b776.  v0:= temp @kind object;
  #L08b778.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L08b77c.  v5:= "\n    " @kind object;
  #L08b780.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b786.  v5:= temp @kind object;
  #L08b788.  call temp:= `a`(v0) @signature `La/g;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L08b78e.  v6:= temp @kind object;
  #L08b790.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b796.  v5:= temp @kind object;
  #L08b798.  v6:= ": " @kind object;
  #L08b79c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b7a2.  v5:= temp @kind object;
  #L08b7a4.  call temp:= `getSubjectDN`(v0) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L08b7aa.  v0:= temp @kind object;
  #L08b7ac.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L08b7b2.  v0:= temp @kind object;
  #L08b7b4.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b7ba.  v0:= v1 + 1;
  #L08b7be.  v1:= v0;
  #L08b7c0.  goto L08b76c;
  #L08b7c2.  v0:= "\n  Pinned certificates for " @kind object;
  #L08b7c6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b7cc.  v0:= temp @kind object;
  #L08b7ce.  call temp:= `append`(v0, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b7d4.  v0:= temp @kind object;
  #L08b7d6.  v1:= ":" @kind object;
  #L08b7da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b7e0.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08b7e6.  v3:= temp;
  #L08b7e8.  v1:= v4;
  #L08b7ea.  if v1 >= v3 then goto L08b814;
  #L08b7ee.  call temp:= `get`(v8, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08b7f4.  v0:= temp @kind object;
  #L08b7f6.  v0:= (`a.g$b`) v0 @kind object;
  #L08b7fa.  v4:= "\n    " @kind object;
  #L08b7fe.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b804.  v4:= temp @kind object;
  #L08b806.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b80c.  v0:= v1 + 1;
  #L08b810.  v1:= v0;
  #L08b812.  goto L08b7ea;
  #L08b814.  v0:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L08b818.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b81e.  v1:= temp @kind object;
  #L08b820.  call `<init>`(v0, v1) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b826.  throw v0;
}
procedure `boolean` `equals`(`a.g` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `La/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08b838.  v1:= 1I;
  #L08b83a.  if v4 != v3 then goto L08b840;
  #L08b83e.  return v1;
  #L08b840.  v0:= instanceof @variable v4 @type ^`a.g` @kind boolean;
  #L08b844.  if v0 == 0 then goto L08b880;
  #L08b848.  v2:= v3.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08b84c.  v0:= v4 @kind object;
  #L08b84e.  v0:= (`a.g`) v0 @kind object;
  #L08b852.  v0:= v0.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08b856.  call temp:= `a`(v2, v0) @signature `La/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L08b85c.  v0:= temp;
  #L08b85e.  if v0 == 0 then goto L08b880;
  #L08b862.  v0:= v3.`a.g.b` @type ^`java.util.Set` @kind object;
  #L08b866.  v4:= (`a.g`) v4 @kind object;
  #L08b86a.  v2:= v4.`a.g.b` @type ^`java.util.Set` @kind object;
  #L08b86e.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L08b874.  v0:= temp;
  #L08b876.  if v0 == 0 then goto L08b880;
  #L08b87a.  v0:= v1;
  #L08b87c.  v1:= v0;
  #L08b87e.  goto L08b83e;
  #L08b880.  v0:= 0I;
  #L08b882.  goto L08b87c;
}
procedure `int` `hashCode`(`a.g` v2 @kind this) @signature `La/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08b894.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08b898.  if v0 == 0 then goto L08b8bc;
  #L08b89c.  v0:= v2.`a.g.c` @type ^`a.a.h.b` @kind object;
  #L08b8a0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L08b8a6.  v0:= temp;
  #L08b8a8.  v0:= v0 * 31;
  #L08b8ac.  v1:= v2.`a.g.b` @type ^`java.util.Set` @kind object;
  #L08b8b0.  call temp:= `hashCode`(v1) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L08b8b6.  v1:= temp;
  #L08b8b8.  v0:= v0 + v1 @kind int;
  #L08b8ba.  return v0;
  #L08b8bc.  v0:= 0I;
  #L08b8be.  goto L08b8a8;
}

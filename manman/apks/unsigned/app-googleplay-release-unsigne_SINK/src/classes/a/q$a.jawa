record `a.q$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `a.q$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`a.q$a` v2 @kind this) @signature `La/q$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L08e064.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08e06a.  v0:= new `java.util.ArrayList`;
  #L08e06e.  v1:= 20I;
  #L08e072.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L08e078.  v2.`a.q$a.a` @type ^`java.util.List` := v0 @kind object;
  #L08e07c.  return @kind void;
}
procedure `void` `d`(`a.q$a` v9 @kind this, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L08e090.  v5:= 127I;
  #L08e094.  v8:= 3I;
  #L08e096.  v7:= 2I;
  #L08e098.  v6:= 1I;
  #L08e09a.  v1:= 0I;
  #L08e09c.  if v10 != 0 then goto L08e0b0;
  #L08e0a0.  v0:= new `java.lang.NullPointerException`;
  #L08e0a4.  v1:= "name == null" @kind object;
  #L08e0a8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08e0ae.  throw v0;
  #L08e0b0.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08e0b6.  v0:= temp;
  #L08e0b8.  if v0 == 0 then goto L08e0cc;
  #L08e0bc.  v0:= new `java.lang.IllegalArgumentException`;
  #L08e0c0.  v1:= "name is empty" @kind object;
  #L08e0c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08e0ca.  throw v0;
  #L08e0cc.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08e0d2.  v2:= temp;
  #L08e0d4.  v0:= v1;
  #L08e0d6.  if v0 >= v2 then goto L08e12c;
  #L08e0da.  call temp:= `charAt`(v10, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08e0e0.  v3:= temp;
  #L08e0e2.  v4:= 32I;
  #L08e0e6.  if v3 <= v4 then goto L08e0ee;
  #L08e0ea.  if v3 < v5 then goto L08e126;
  #L08e0ee.  v2:= new `java.lang.IllegalArgumentException`;
  #L08e0f2.  v4:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L08e0f6.  v5:= new `java.lang.Object`[v8];
  #L08e0fa.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08e100.  v3:= temp @kind object;
  #L08e102.  v5[v1]:= v3 @kind object;
  #L08e106.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08e10c.  v0:= temp @kind object;
  #L08e10e.  v5[v6]:= v0 @kind object;
  #L08e112.  v5[v7]:= v10 @kind object;
  #L08e116.  call temp:= `a`(v4, v5) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L08e11c.  v0:= temp @kind object;
  #L08e11e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08e124.  throw v2;
  #L08e126.  v0:= v0 + 1;
  #L08e12a.  goto L08e0d6;
  #L08e12c.  if v11 != 0 then goto L08e140;
  #L08e130.  v0:= new `java.lang.NullPointerException`;
  #L08e134.  v1:= "value == null" @kind object;
  #L08e138.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08e13e.  throw v0;
  #L08e140.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08e146.  v2:= temp;
  #L08e148.  v0:= v1;
  #L08e14a.  if v0 >= v2 then goto L08e1ae;
  #L08e14e.  call temp:= `charAt`(v11, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L08e154.  v3:= temp;
  #L08e156.  v4:= 31I;
  #L08e15a.  if v3 > v4 then goto L08e166;
  #L08e15e.  v4:= 9I;
  #L08e162.  if v3 != v4 then goto L08e16a;
  #L08e166.  if v3 < v5 then goto L08e1a8;
  #L08e16a.  v2:= new `java.lang.IllegalArgumentException`;
  #L08e16e.  v4:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L08e172.  v5:= 4I;
  #L08e174.  v5:= new `java.lang.Object`[v5];
  #L08e178.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08e17e.  v3:= temp @kind object;
  #L08e180.  v5[v1]:= v3 @kind object;
  #L08e184.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08e18a.  v0:= temp @kind object;
  #L08e18c.  v5[v6]:= v0 @kind object;
  #L08e190.  v5[v7]:= v10 @kind object;
  #L08e194.  v5[v8]:= v11 @kind object;
  #L08e198.  call temp:= `a`(v4, v5) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L08e19e.  v0:= temp @kind object;
  #L08e1a0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08e1a6.  throw v2;
  #L08e1a8.  v0:= v0 + 1;
  #L08e1ac.  goto L08e14a;
  #L08e1ae.  return @kind void;
}
procedure `a.q$a` `a`(`a.q$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/q$a;.a:(Ljava/lang/String;)La/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L08e1c0.  v2:= 1I;
  #L08e1c2.  v0:= ":" @kind object;
  #L08e1c6.  call temp:= `indexOf`(v4, v0, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L08e1cc.  v0:= temp;
  #L08e1ce.  v1:= -1I;
  #L08e1d0.  if v0 == v1 then goto L08e1f4;
  #L08e1d4.  v1:= 0I;
  #L08e1d6.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L08e1dc.  v1:= temp @kind object;
  #L08e1de.  v0:= v0 + 1;
  #L08e1e2.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08e1e8.  v0:= temp @kind object;
  #L08e1ea.  call temp:= `b`(v3, v1, v0) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08e1f0.  v0:= temp @kind object;
  #L08e1f2.  return v0 @kind object;
  #L08e1f4.  v0:= ":" @kind object;
  #L08e1f8.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L08e1fe.  v0:= temp;
  #L08e200.  if v0 == 0 then goto L08e21a;
  #L08e204.  v0:= "" @kind object;
  #L08e208.  call temp:= `substring`(v4, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L08e20e.  v1:= temp @kind object;
  #L08e210.  call temp:= `b`(v3, v0, v1) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08e216.  v0:= temp @kind object;
  #L08e218.  goto L08e1f2;
  #L08e21a.  v0:= "" @kind object;
  #L08e21e.  call temp:= `b`(v3, v0, v4) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08e224.  v0:= temp @kind object;
  #L08e226.  goto L08e1f2;
}
procedure `a.q$a` `a`(`a.q$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/q$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08e238.  call `d`(v1, v2, v3) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L08e23e.  call temp:= `b`(v1, v2, v3) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08e244.  v0:= temp @kind object;
  #L08e246.  return v0 @kind object;
}
procedure `a.q` `a`(`a.q$a` v1 @kind this) @signature `La/q$a;.a:()La/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08e258.  v0:= new `a.q`;
  #L08e25c.  call `<init>`(v0, v1) @signature `La/q;.<init>:(La/q$a;)V` @kind direct;
  #L08e262.  return v0 @kind object;
}
procedure `a.q$a` `b`(`a.q$a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08e274.  v0:= 0I;
  #L08e276.  v1:= v0;
  #L08e278.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e27c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08e282.  v0:= temp;
  #L08e284.  if v1 >= v0 then goto L08e2c4;
  #L08e288.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e28c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L08e292.  v0:= temp @kind object;
  #L08e294.  v0:= (`java.lang.String`) v0 @kind object;
  #L08e298.  call temp:= `equalsIgnoreCase`(v3, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L08e29e.  v0:= temp;
  #L08e2a0.  if v0 == 0 then goto L08e2bc;
  #L08e2a4.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e2a8.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L08e2ae.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e2b2.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L08e2b8.  v1:= v1 + -2;
  #L08e2bc.  v0:= v1 + 2;
  #L08e2c0.  v1:= v0;
  #L08e2c2.  goto L08e278;
  #L08e2c4.  return v2 @kind object;
}
procedure `a.q$a` `b`(`a.q$a` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L08e2d8.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e2dc.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08e2e2.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L08e2e6.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L08e2ec.  v1:= temp @kind object;
  #L08e2ee.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L08e2f4.  return v2 @kind object;
}
procedure `a.q$a` `c`(`a.q$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `La/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;

  #L08e308.  call `d`(v0, v1, v2) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L08e30e.  call temp:= `b`(v0, v1) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08e314.  call temp:= `b`(v0, v1, v2) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L08e31a.  return v0 @kind object;
}

record `b.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `b.r` @kind interface {
}
procedure `long` `a`(`byte` v0 ) @signature `Lb/e;.a:(B)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `a`(`java.nio.charset.Charset` v0 @kind object) @signature `Lb/e;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`long` v0 ) @signature `Lb/e;.a:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `a`(`long` v0 , `b.f` v2 @kind object) @signature `Lb/e;.a:(JLb/f;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.c` `c`() @signature `Lb/e;.c:()Lb/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `b.f` `c`(`long` v0 ) @signature `Lb/e;.c:(J)Lb/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `e`() @signature `Lb/e;.e:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.io.InputStream` `f`() @signature `Lb/e;.f:()Ljava/io/InputStream;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `f`(`long` v0 ) @signature `Lb/e;.f:(J)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `g`(`long` v0 ) @signature `Lb/e;.g:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `h`() @signature `Lb/e;.h:()B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `i`() @signature `Lb/e;.i:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `j`() @signature `Lb/e;.j:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `k`() @signature `Lb/e;.k:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `l`() @signature `Lb/e;.l:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `m`() @signature `Lb/e;.m:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `p`() @signature `Lb/e;.p:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}

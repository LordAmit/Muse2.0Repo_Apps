record `b.k$3` @kind class @AccessFlag FINAL extends `b.a` @kind class {
  `java.net.Socket` `b.k$3.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`b.k$3` v0 @kind this, `java.net.Socket` v1 @kind object) @signature `Lb/k$3;.<init>:(Ljava/net/Socket;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L11c8a0.  v0.`b.k$3.a` @type ^`java.net.Socket` := v1 @kind object;
  #L11c8a4.  call `<init>`(v0) @signature `Lb/a;.<init>:()V` @kind direct;
  #L11c8aa.  return @kind void;
}
procedure `java.io.IOException` `a`(`b.k$3` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lb/k$3;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L11c8bc.  v0:= new `java.net.SocketTimeoutException`;
  #L11c8c0.  v1:= "timeout" @kind object;
  #L11c8c4.  call `<init>`(v0, v1) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11c8ca.  if v3 == 0 then goto L11c8d4;
  #L11c8ce.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L11c8d4.  return v0 @kind object;
}
procedure `void` `a`(`b.k$3` v5 @kind this) @signature `Lb/k$3;.a:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L11c8e8.  v0:= v5.`b.k$3.a` @type ^`java.net.Socket` @kind object;
  #L11c8ec.  call `close`(v0) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #Try_end0.  
  #L11c8f2.  return @kind void;
  #L11c8f4.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L11c8f6.  v1:= `@@b.k.a` @type ^`java.util.logging.Logger` @kind object;
  #L11c8fa.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L11c8fe.  v3:= new `java.lang.StringBuilder`;
  #L11c902.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L11c908.  v4:= "Failed to close timed out socket " @kind object;
  #L11c90c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11c912.  v3:= temp @kind object;
  #L11c914.  v4:= v5.`b.k$3.a` @type ^`java.net.Socket` @kind object;
  #L11c918.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11c91e.  v3:= temp @kind object;
  #L11c920.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L11c926.  v3:= temp @kind object;
  #L11c928.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L11c92e.  goto L11c8f2;
  #L11c930.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L11c932.  call temp:= `a`(v0) @signature `Lb/k;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L11c938.  v1:= temp;
  #L11c93a.  if v1 == 0 then goto L11c978;
  #L11c93e.  v1:= `@@b.k.a` @type ^`java.util.logging.Logger` @kind object;
  #L11c942.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L11c946.  v3:= new `java.lang.StringBuilder`;
  #L11c94a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L11c950.  v4:= "Failed to close timed out socket " @kind object;
  #L11c954.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11c95a.  v3:= temp @kind object;
  #L11c95c.  v4:= v5.`b.k$3.a` @type ^`java.net.Socket` @kind object;
  #L11c960.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11c966.  v3:= temp @kind object;
  #L11c968.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L11c96e.  v3:= temp @kind object;
  #L11c970.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L11c976.  goto L11c8f2;
  #L11c978.  throw v0;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L11c8f4;
  catch `java.lang.AssertionError` @[Try_start0..Try_end0] goto L11c930;
}

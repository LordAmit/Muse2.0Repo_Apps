record `b.a$1` @kind class @AccessFlag  extends `b.q` @kind interface {
  `b.q` `b.a$1.a` @AccessFlag FINAL_SYNTHETIC;
  `b.a` `b.a$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`b.a$1` v0 @kind this, `b.a` v1 @kind object, `b.q` v2 @kind object) @signature `Lb/a$1;.<init>:(Lb/a;Lb/q;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L118ea0.  v0.`b.a$1.b` @type ^`b.a` := v1 @kind object;
  #L118ea4.  v0.`b.a$1.a` @type ^`b.q` := v2 @kind object;
  #L118ea8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L118eae.  return @kind void;
}
procedure `b.s` `a`(`b.a$1` v1 @kind this) @signature `Lb/a$1;.a:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L118ec0.  v0:= v1.`b.a$1.b` @type ^`b.a` @kind object;
  #L118ec4.  return v0 @kind object;
}
procedure `void` `a_`(`b.a$1` v10 @kind this, `b.c` v11 @kind object, `long` v12 ) @signature `Lb/a$1;.a_:(Lb/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L118ed8.  v2:= 0L;
  #L118edc.  v0:= v11.`b.c.b` @type ^`long` @kind wide;
  #L118ee0.  v4:= v12 @kind wide;
  #L118ee2.  call `a`(v0, v2, v4) @signature `Lb/t;.a:(JJJ)V` @kind static;
  #L118ee8.  v4:= v12 @kind wide;
  #L118eea.  v0:= lcmp(v4, v2);
  #L118eee.  if v0 <= 0 then goto L118f76;
  #L118ef2.  v0:= v11.`b.c.a` @type ^`b.n` @kind object;
  #L118ef6.  v6:= v0 @kind object;
  #L118ef8.  v0:= v2 @kind wide;
  #L118efa.  v8:= 65536L;
  #L118f00.  v7:= lcmp(v0, v8);
  #L118f04.  if v7 >= 0 then goto L118f28;
  #L118f08.  v7:= v11.`b.c.a` @type ^`b.n` @kind object;
  #L118f0c.  v7:= v7.`b.n.c` @type ^`int`;
  #L118f10.  v8:= v11.`b.c.a` @type ^`b.n` @kind object;
  #L118f14.  v8:= v8.`b.n.b` @type ^`int`;
  #L118f18.  v7:= v7 - v8 @kind int;
  #L118f1a.  v8:= (`long`) v7 @kind i2l;
  #L118f1c.  v8:= v8 + v0 @kind long;
  #L118f1e.  v0:= lcmp(v8, v4);
  #L118f22.  if v0 < 0 then goto L118f4e;
  #L118f26.  v0:= v4 @kind wide;
  #L118f28.  v6:= 0I;
  #L118f2a.  v7:= v10.`b.a$1.b` @type ^`b.a` @kind object;
  #L118f2e.  call `c`(v7) @signature `Lb/a;.c:()V` @kind virtual;
  #Try_start0.  
  #L118f34.  v7:= v10.`b.a$1.a` @type ^`b.q` @kind object;
  #L118f38.  call `a_`(v7, v11, v0) @signature `Lb/q;.a_:(Lb/c;J)V` @kind interface;
  #Try_end0.  
  #L118f3e.  v4:= v4 - v0 @kind long;
  #L118f40.  v0:= 1I;
  #L118f42.  v1:= v10.`b.a$1.b` @type ^`b.a` @kind object;
  #L118f46.  call `a`(v1, v0) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L118f4c.  goto L118eea;
  #L118f4e.  v0:= v6.`b.n.f` @type ^`b.n` @kind object;
  #L118f52.  v6:= v0 @kind object;
  #L118f54.  v0:= v8 @kind wide;
  #L118f56.  goto L118efa;
  #L118f58.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L118f5a.  v1:= v10.`b.a$1.b` @type ^`b.a` @kind object;
  #L118f5e.  call temp:= `b`(v1, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L118f64.  v0:= temp @kind object;
  #L118f66.  throw v0;
  #Try_end1.  
  #L118f68.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L118f6a.  v1:= v10.`b.a$1.b` @type ^`b.a` @kind object;
  #L118f6e.  call `a`(v1, v6) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L118f74.  throw v0;
  #L118f76.  return @kind void;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L118f58;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L118f68;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L118f68;
}
procedure `void` `close`(`b.a$1` v3 @kind this) @signature `Lb/a$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L118fa0.  v1:= 0I;
  #L118fa2.  v0:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118fa6.  call `c`(v0) @signature `Lb/a;.c:()V` @kind virtual;
  #Try_start0.  
  #L118fac.  v0:= v3.`b.a$1.a` @type ^`b.q` @kind object;
  #L118fb0.  call `close`(v0) @signature `Lb/q;.close:()V` @kind interface;
  #Try_end0.  
  #L118fb6.  v0:= 1I;
  #L118fb8.  v1:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118fbc.  call `a`(v1, v0) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L118fc2.  return @kind void;
  #L118fc4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L118fc6.  v2:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118fca.  call temp:= `b`(v2, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L118fd0.  v0:= temp @kind object;
  #L118fd2.  throw v0;
  #Try_end1.  
  #L118fd4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L118fd6.  v2:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L118fda.  call `a`(v2, v1) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L118fe0.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L118fc4;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L118fd4;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L118fd4;
}
procedure `void` `flush`(`b.a$1` v3 @kind this) @signature `Lb/a$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L11900c.  v1:= 0I;
  #L11900e.  v0:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L119012.  call `c`(v0) @signature `Lb/a;.c:()V` @kind virtual;
  #Try_start0.  
  #L119018.  v0:= v3.`b.a$1.a` @type ^`b.q` @kind object;
  #L11901c.  call `flush`(v0) @signature `Lb/q;.flush:()V` @kind interface;
  #Try_end0.  
  #L119022.  v0:= 1I;
  #L119024.  v1:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L119028.  call `a`(v1, v0) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L11902e.  return @kind void;
  #L119030.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L119032.  v2:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L119036.  call temp:= `b`(v2, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L11903c.  v0:= temp @kind object;
  #L11903e.  throw v0;
  #Try_end1.  
  #L119040.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L119042.  v2:= v3.`b.a$1.b` @type ^`b.a` @kind object;
  #L119046.  call `a`(v2, v1) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L11904c.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L119030;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L119040;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L119040;
}
procedure `java.lang.String` `toString`(`b.a$1` v2 @kind this) @signature `Lb/a$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L119078.  v0:= new `java.lang.StringBuilder`;
  #L11907c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L119082.  v1:= "AsyncTimeout.sink(" @kind object;
  #L119086.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11908c.  v0:= temp @kind object;
  #L11908e.  v1:= v2.`b.a$1.a` @type ^`b.q` @kind object;
  #L119092.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L119098.  v0:= temp @kind object;
  #L11909a.  v1:= ")" @kind object;
  #L11909e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1190a4.  v0:= temp @kind object;
  #L1190a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1190ac.  v0:= temp @kind object;
  #L1190ae.  return v0 @kind object;
}

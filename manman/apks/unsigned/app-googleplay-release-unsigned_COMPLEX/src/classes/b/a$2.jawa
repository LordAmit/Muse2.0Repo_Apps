record `b.a$2` @kind class @AccessFlag  extends `b.r` @kind interface {
  `b.r` `b.a$2.a` @AccessFlag FINAL_SYNTHETIC;
  `b.a` `b.a$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`b.a$2` v0 @kind this, `b.a` v1 @kind object, `b.r` v2 @kind object) @signature `Lb/a$2;.<init>:(Lb/a;Lb/r;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1190c0.  v0.`b.a$2.b` @type ^`b.a` := v1 @kind object;
  #L1190c4.  v0.`b.a$2.a` @type ^`b.r` := v2 @kind object;
  #L1190c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1190ce.  return @kind void;
}
procedure `long` `a`(`b.a$2` v4 @kind this, `b.c` v5 @kind object, `long` v6 ) @signature `Lb/a$2;.a:(Lb/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1190e0.  v1:= 0I;
  #L1190e2.  v0:= v4.`b.a$2.b` @type ^`b.a` @kind object;
  #L1190e6.  call `c`(v0) @signature `Lb/a;.c:()V` @kind virtual;
  #Try_start0.  
  #L1190ec.  v0:= v4.`b.a$2.a` @type ^`b.r` @kind object;
  #L1190f0.  call temp:= `a`(v0, v5, v6) @signature `Lb/r;.a:(Lb/c;J)J` @kind interface;
  #Try_end0.  
  #L1190f6.  v0:= temp @kind wide;
  #L1190f8.  v2:= 1I;
  #L1190fa.  v3:= v4.`b.a$2.b` @type ^`b.a` @kind object;
  #L1190fe.  call `a`(v3, v2) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L119104.  return v0 @kind wide;
  #L119106.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L119108.  v2:= v4.`b.a$2.b` @type ^`b.a` @kind object;
  #L11910c.  call temp:= `b`(v2, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L119112.  v0:= temp @kind object;
  #L119114.  throw v0;
  #Try_end1.  
  #L119116.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L119118.  v2:= v4.`b.a$2.b` @type ^`b.a` @kind object;
  #L11911c.  call `a`(v2, v1) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L119122.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L119106;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L119116;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L119116;
}
procedure `b.s` `a`(`b.a$2` v1 @kind this) @signature `Lb/a$2;.a:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L11914c.  v0:= v1.`b.a$2.b` @type ^`b.a` @kind object;
  #L119150.  return v0 @kind object;
}
procedure `void` `close`(`b.a$2` v3 @kind this) @signature `Lb/a$2;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L119164.  v1:= 0I;
  #Try_start0.  
  #L119166.  v0:= v3.`b.a$2.a` @type ^`b.r` @kind object;
  #L11916a.  call `close`(v0) @signature `Lb/r;.close:()V` @kind interface;
  #Try_end0.  
  #L119170.  v0:= 1I;
  #L119172.  v1:= v3.`b.a$2.b` @type ^`b.a` @kind object;
  #L119176.  call `a`(v1, v0) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L11917c.  return @kind void;
  #L11917e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #Try_start1.  
  #L119180.  v2:= v3.`b.a$2.b` @type ^`b.a` @kind object;
  #L119184.  call temp:= `b`(v2, v0) @signature `Lb/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L11918a.  v0:= temp @kind object;
  #L11918c.  throw v0;
  #Try_end1.  
  #L11918e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L119190.  v2:= v3.`b.a$2.b` @type ^`b.a` @kind object;
  #L119194.  call `a`(v2, v1) @signature `Lb/a;.a:(Z)V` @kind virtual;
  #L11919a.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L11917e;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L11918e;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L11918e;
}
procedure `java.lang.String` `toString`(`b.a$2` v2 @kind this) @signature `Lb/a$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1191c4.  v0:= new `java.lang.StringBuilder`;
  #L1191c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1191ce.  v1:= "AsyncTimeout.source(" @kind object;
  #L1191d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1191d8.  v0:= temp @kind object;
  #L1191da.  v1:= v2.`b.a$2.a` @type ^`b.r` @kind object;
  #L1191de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1191e4.  v0:= temp @kind object;
  #L1191e6.  v1:= ")" @kind object;
  #L1191ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1191f0.  v0:= temp @kind object;
  #L1191f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1191f8.  v0:= temp @kind object;
  #L1191fa.  return v0 @kind object;
}

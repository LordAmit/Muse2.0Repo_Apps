record `com.b.a.f$a` @kind class @AccessFlag  extends `com.b.a.v` @kind class {
  `com.b.a.v` `com.b.a.f$a.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.b.a.f$a` v0 @kind this) @signature `Lcom/b/a/f$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14d6b0.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L14d6b6.  return @kind void;
}
procedure `void` `a`(`com.b.a.f$a` v1 @kind this, `com.b.a.d.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/f$a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14d6c8.  v0:= v1.`com.b.a.f$a.a` @type ^`com.b.a.v` @kind object;
  #L14d6cc.  if v0 != 0 then goto L14d6dc;
  #L14d6d0.  v0:= new `java.lang.IllegalStateException`;
  #L14d6d4.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L14d6da.  throw v0;
  #L14d6dc.  v0:= v1.`com.b.a.f$a.a` @type ^`com.b.a.v` @kind object;
  #L14d6e0.  call `a`(v0, v2, v3) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L14d6e6.  return @kind void;
}
procedure `void` `a`(`com.b.a.f$a` v1 @kind this, `com.b.a.v` v2 @kind object) @signature `Lcom/b/a/f$a;.a:(Lcom/b/a/v;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14d6f8.  v0:= v1.`com.b.a.f$a.a` @type ^`com.b.a.v` @kind object;
  #L14d6fc.  if v0 == 0 then goto L14d70c;
  #L14d700.  v0:= new `java.lang.AssertionError`;
  #L14d704.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L14d70a.  throw v0;
  #L14d70c.  v1.`com.b.a.f$a.a` @type ^`com.b.a.v` := v2 @kind object;
  #L14d710.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$a` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14d724.  v0:= v1.`com.b.a.f$a.a` @type ^`com.b.a.v` @kind object;
  #L14d728.  if v0 != 0 then goto L14d738;
  #L14d72c.  v0:= new `java.lang.IllegalStateException`;
  #L14d730.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L14d736.  throw v0;
  #L14d738.  v0:= v1.`com.b.a.f$a.a` @type ^`com.b.a.v` @kind object;
  #L14d73c.  call temp:= `b`(v0, v2) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L14d742.  v0:= temp @kind object;
  #L14d744.  return v0 @kind object;
}

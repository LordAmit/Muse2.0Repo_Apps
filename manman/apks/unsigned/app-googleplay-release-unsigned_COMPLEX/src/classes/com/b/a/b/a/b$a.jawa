record `com.b.a.b.a.b$a` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.v` `com.b.a.b.a.b$a.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.b.h` `com.b.a.b.a.b$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.b$a` v1 @kind this, `com.b.a.f` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.v` v4 @kind object, `com.b.a.b.h` v5 @kind object) @signature `Lcom/b/a/b/a/b$a;.<init>:(Lcom/b/a/f;Ljava/lang/reflect/Type;Lcom/b/a/v;Lcom/b/a/b/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L141f34.  call `<init>`(v1) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L141f3a.  v0:= new `com.b.a.b.a.m`;
  #L141f3e.  call `<init>`(v0, v2, v4, v3) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L141f44.  v1.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` := v0 @kind object;
  #L141f48.  v1.`com.b.a.b.a.b$a.b` @type ^`com.b.a.b.h` := v5 @kind object;
  #L141f4c.  return @kind void;
}
procedure `java.util.Collection` `a`(`com.b.a.b.a.b$a` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/a;)Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L141f60.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L141f66.  v0:= temp @kind object;
  #L141f68.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L141f6c.  if v0 != v1 then goto L141f7a;
  #L141f70.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L141f76.  v0:= 0I;
  #L141f78.  return v0 @kind object;
  #L141f7a.  v0:= v2.`com.b.a.b.a.b$a.b` @type ^`com.b.a.b.h` @kind object;
  #L141f7e.  call temp:= `a`(v0) @signature `Lcom/b/a/b/h;.a:()Ljava/lang/Object;` @kind interface;
  #L141f84.  v0:= temp @kind object;
  #L141f86.  v0:= (`java.util.Collection`) v0 @kind object;
  #L141f8a.  call `a`(v3) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L141f90.  call temp:= `e`(v3) @signature `Lcom/b/a/d/a;.e:()Z` @kind virtual;
  #L141f96.  v1:= temp;
  #L141f98.  if v1 == 0 then goto L141fb0;
  #L141f9c.  v1:= v2.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` @kind object;
  #L141fa0.  call temp:= `b`(v1, v3) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L141fa6.  v1:= temp @kind object;
  #L141fa8.  call temp:= `add`(v0, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L141fae.  goto L141f90;
  #L141fb0.  call `b`(v3) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L141fb6.  goto L141f78;
}
procedure `void` `a`(`com.b.a.b.a.b$a` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L141fc8.  v2:= (`java.util.Collection`) v2 @kind object;
  #L141fcc.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/util/Collection;)V` @kind virtual;
  #L141fd2.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.b$a` v3 @kind this, `com.b.a.d.c` v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/c;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L141fe4.  if v5 != 0 then goto L141ff0;
  #L141fe8.  call temp:= `f`(v4) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L141fee.  return @kind void;
  #L141ff0.  call temp:= `b`(v4) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L141ff6.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L141ffc.  v0:= temp @kind object;
  #L141ffe.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L142004.  v1:= temp;
  #L142006.  if v1 == 0 then goto L14201e;
  #L14200a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L142010.  v1:= temp @kind object;
  #L142012.  v2:= v3.`com.b.a.b.a.b$a.a` @type ^`com.b.a.v` @kind object;
  #L142016.  call `a`(v2, v4, v1) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L14201c.  goto L141ffe;
  #L14201e.  call temp:= `c`(v4) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L142024.  goto L141fee;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.b$a` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/b$a;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L142038.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/b$a;.a:(Lcom/b/a/d/a;)Ljava/util/Collection;` @kind virtual;
  #L14203e.  v0:= temp @kind object;
  #L142040.  return v0 @kind object;
}

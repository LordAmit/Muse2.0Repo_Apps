record `com.b.a.f$2` @kind class @AccessFlag  extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.f$2.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.f$2` v0 @kind this, `com.b.a.f` v1 @kind object) @signature `Lcom/b/a/f$2;.<init>:(Lcom/b/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14d280.  v0.`com.b.a.f$2.a` @type ^`com.b.a.f` := v1 @kind object;
  #L14d284.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L14d28a.  return @kind void;
}
procedure `java.lang.Double` `a`(`com.b.a.f$2` v2 @kind this, `com.b.a.d.a` v3 @kind object) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/a;)Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14d29c.  call temp:= `f`(v3) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L14d2a2.  v0:= temp @kind object;
  #L14d2a4.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L14d2a8.  if v0 != v1 then goto L14d2b6;
  #L14d2ac.  call `j`(v3) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L14d2b2.  v0:= 0I;
  #L14d2b4.  return v0 @kind object;
  #L14d2b6.  call temp:= `k`(v3) @signature `Lcom/b/a/d/a;.k:()D` @kind virtual;
  #L14d2bc.  v0:= temp @kind wide;
  #L14d2be.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L14d2c4.  v0:= temp @kind object;
  #L14d2c6.  goto L14d2b4;
}
procedure `void` `a`(`com.b.a.f$2` v2 @kind this, `com.b.a.d.c` v3 @kind object, `java.lang.Number` v4 @kind object) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14d2d8.  if v4 != 0 then goto L14d2e4;
  #L14d2dc.  call temp:= `f`(v3) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L14d2e2.  return @kind void;
  #L14d2e4.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L14d2ea.  v0:= temp @kind wide;
  #L14d2ec.  call `a`(v0) @signature `Lcom/b/a/f;.a:(D)V` @kind static;
  #L14d2f2.  call temp:= `a`(v3, v4) @signature `Lcom/b/a/d/c;.a:(Ljava/lang/Number;)Lcom/b/a/d/c;` @kind virtual;
  #L14d2f8.  goto L14d2e2;
}
procedure `void` `a`(`com.b.a.f$2` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L14d30c.  v2:= (`java.lang.Number`) v2 @kind object;
  #L14d310.  call `a`(v0, v1, v2) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/c;Ljava/lang/Number;)V` @kind virtual;
  #L14d316.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.f$2` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/f$2;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L14d328.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/f$2;.a:(Lcom/b/a/d/a;)Ljava/lang/Double;` @kind virtual;
  #L14d32e.  v0:= temp @kind object;
  #L14d330.  return v0 @kind object;
}

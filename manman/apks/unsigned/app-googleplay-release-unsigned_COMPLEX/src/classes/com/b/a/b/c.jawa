record `com.b.a.b.c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `com.b.a.b.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.c` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/b/a/b/c;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L14ae2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14ae32.  v0.`com.b.a.b.c.a` @type ^`java.util.Map` := v1 @kind object;
  #L14ae36.  return @kind void;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L14ae48.  v0:= 0I;
  #Try_start0.  
  #L14ae4a.  v0:= new `java.lang.Class`[v0];
  #L14ae4e.  call temp:= `getDeclaredConstructor`(v3, v0) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L14ae54.  v1:= temp @kind object;
  #L14ae56.  call temp:= `isAccessible`(v1) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L14ae5c.  v0:= temp;
  #L14ae5e.  if v0 != 0 then goto L14ae6a;
  #L14ae62.  v0:= 1I;
  #L14ae64.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L14ae6a.  v0:= new `com.b.a.b.c$8`;
  #L14ae6e.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/c$8;.<init>:(Lcom/b/a/b/c;Ljava/lang/reflect/Constructor;)V` @kind direct;
  #Try_end0.  
  #L14ae74.  return v0 @kind object;
  #L14ae76.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L14ae78.  v0:= 0I;
  #L14ae7a.  goto L14ae74;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L14ae76;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v3 @kind this, `java.lang.reflect.Type` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L14ae9c.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L14aea0.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14aea6.  v0:= temp;
  #L14aea8.  if v0 == 0 then goto L14af28;
  #L14aeac.  v0:= constclass @type ^`java.util.SortedSet` @kind object;
  #L14aeb0.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14aeb6.  v0:= temp;
  #L14aeb8.  if v0 == 0 then goto L14aec8;
  #L14aebc.  v0:= new `com.b.a.b.c$9`;
  #L14aec0.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$9;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14aec6.  return v0 @kind object;
  #L14aec8.  v0:= constclass @type ^`java.util.EnumSet` @kind object;
  #L14aecc.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14aed2.  v0:= temp;
  #L14aed4.  if v0 == 0 then goto L14aee4;
  #L14aed8.  v0:= new `com.b.a.b.c$10`;
  #L14aedc.  call `<init>`(v0, v3, v4) @signature `Lcom/b/a/b/c$10;.<init>:(Lcom/b/a/b/c;Ljava/lang/reflect/Type;)V` @kind direct;
  #L14aee2.  goto L14aec6;
  #L14aee4.  v0:= constclass @type ^`java.util.Set` @kind object;
  #L14aee8.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14aeee.  v0:= temp;
  #L14aef0.  if v0 == 0 then goto L14af00;
  #L14aef4.  v0:= new `com.b.a.b.c$11`;
  #L14aef8.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$11;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14aefe.  goto L14aec6;
  #L14af00.  v0:= constclass @type ^`java.util.Queue` @kind object;
  #L14af04.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14af0a.  v0:= temp;
  #L14af0c.  if v0 == 0 then goto L14af1c;
  #L14af10.  v0:= new `com.b.a.b.c$12`;
  #L14af14.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$12;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14af1a.  goto L14aec6;
  #L14af1c.  v0:= new `com.b.a.b.c$13`;
  #L14af20.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$13;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14af26.  goto L14aec6;
  #L14af28.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L14af2c.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14af32.  v0:= temp;
  #L14af34.  if v0 == 0 then goto L14afe2;
  #L14af38.  v0:= constclass @type ^`java.util.concurrent.ConcurrentNavigableMap` @kind object;
  #L14af3c.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14af42.  v0:= temp;
  #L14af44.  if v0 == 0 then goto L14af54;
  #L14af48.  v0:= new `com.b.a.b.c$14`;
  #L14af4c.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$14;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14af52.  goto L14aec6;
  #L14af54.  v0:= constclass @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L14af58.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14af5e.  v0:= temp;
  #L14af60.  if v0 == 0 then goto L14af70;
  #L14af64.  v0:= new `com.b.a.b.c$2`;
  #L14af68.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$2;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14af6e.  goto L14aec6;
  #L14af70.  v0:= constclass @type ^`java.util.SortedMap` @kind object;
  #L14af74.  call temp:= `isAssignableFrom`(v0, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14af7a.  v0:= temp;
  #L14af7c.  if v0 == 0 then goto L14af8c;
  #L14af80.  v0:= new `com.b.a.b.c$3`;
  #L14af84.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$3;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14af8a.  goto L14aec6;
  #L14af8c.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14af90.  if v0 == 0 then goto L14afd4;
  #L14af94.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L14af98.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L14af9c.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14afa2.  v1:= temp @kind object;
  #L14afa4.  v2:= 0I;
  #L14afa6.  v1:= v1[v2] @kind object;
  #L14afaa.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L14afb0.  v1:= temp @kind object;
  #L14afb2.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L14afb8.  v1:= temp @kind object;
  #L14afba.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14afc0.  v0:= temp;
  #L14afc2.  if v0 != 0 then goto L14afd4;
  #L14afc6.  v0:= new `com.b.a.b.c$4`;
  #L14afca.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$4;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14afd0.  goto L14aec6;
  #L14afd4.  v0:= new `com.b.a.b.c$5`;
  #L14afd8.  call `<init>`(v0, v3) @signature `Lcom/b/a/b/c$5;.<init>:(Lcom/b/a/b/c;)V` @kind direct;
  #L14afde.  goto L14aec6;
  #L14afe2.  v0:= 0I;
  #L14afe4.  goto L14aec6;
}
procedure `com.b.a.b.h` `b`(`com.b.a.b.c` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/c;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L14aff8.  v0:= new `com.b.a.b.c$6`;
  #L14affc.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/b/a/b/c$6;.<init>:(Lcom/b/a/b/c;Ljava/lang/Class;Ljava/lang/reflect/Type;)V` @kind direct;
  #L14b002.  return v0 @kind object;
}
procedure `com.b.a.b.h` `a`(`com.b.a.b.c` v3 @kind this, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/c;.a:(Lcom/b/a/c/a;)Lcom/b/a/b/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14b014.  call temp:= `b`(v4) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L14b01a.  v2:= temp @kind object;
  #L14b01c.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L14b022.  v1:= temp @kind object;
  #L14b024.  v0:= v3.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L14b028.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14b02e.  v0:= temp @kind object;
  #L14b030.  v0:= (`com.b.a.h`) v0 @kind object;
  #L14b034.  if v0 == 0 then goto L14b046;
  #L14b038.  v1:= new `com.b.a.b.c$1`;
  #L14b03c.  call `<init>`(v1, v3, v0, v2) @signature `Lcom/b/a/b/c$1;.<init>:(Lcom/b/a/b/c;Lcom/b/a/h;Ljava/lang/reflect/Type;)V` @kind direct;
  #L14b042.  v0:= v1 @kind object;
  #L14b044.  return v0 @kind object;
  #L14b046.  v0:= v3.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L14b04a.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14b050.  v0:= temp @kind object;
  #L14b052.  v0:= (`com.b.a.h`) v0 @kind object;
  #L14b056.  if v0 == 0 then goto L14b068;
  #L14b05a.  v1:= new `com.b.a.b.c$7`;
  #L14b05e.  call `<init>`(v1, v3, v0, v2) @signature `Lcom/b/a/b/c$7;.<init>:(Lcom/b/a/b/c;Lcom/b/a/h;Ljava/lang/reflect/Type;)V` @kind direct;
  #L14b064.  v0:= v1 @kind object;
  #L14b066.  goto L14b044;
  #L14b068.  call temp:= `a`(v3, v1) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L14b06e.  v0:= temp @kind object;
  #L14b070.  if v0 != 0 then goto L14b044;
  #L14b074.  call temp:= `a`(v3, v2, v1) @signature `Lcom/b/a/b/c;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L14b07a.  v0:= temp @kind object;
  #L14b07c.  if v0 != 0 then goto L14b044;
  #L14b080.  call temp:= `b`(v3, v2, v1) @signature `Lcom/b/a/b/c;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/b/a/b/h;` @kind direct;
  #L14b086.  v0:= temp @kind object;
  #L14b088.  goto L14b044;
}
procedure `java.lang.String` `toString`(`com.b.a.b.c` v1 @kind this) @signature `Lcom/b/a/b/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14b09c.  v0:= v1.`com.b.a.b.c.a` @type ^`java.util.Map` @kind object;
  #L14b0a0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L14b0a6.  v0:= temp @kind object;
  #L14b0a8.  return v0 @kind object;
}

record `com.b.a.b.a.n$12` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$12` v0 @kind this) @signature `Lcom/b/a/b/a/n$12;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14748c.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L147492.  return @kind void;
}
procedure `java.util.BitSet` `a`(`com.b.a.b.a.n$12` v7 @kind this, `com.b.a.d.a` v8 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/a;)Ljava/util/BitSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1474a4.  v3:= 1I;
  #L1474a6.  v2:= 0I;
  #L1474a8.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1474ae.  v0:= temp @kind object;
  #L1474b0.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L1474b4.  if v0 != v1 then goto L1474c2;
  #L1474b8.  call `j`(v8) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L1474be.  v0:= 0I;
  #L1474c0.  return v0 @kind object;
  #L1474c2.  v4:= new `java.util.BitSet`;
  #L1474c6.  call `<init>`(v4) @signature `Ljava/util/BitSet;.<init>:()V` @kind direct;
  #L1474cc.  call `a`(v8) @signature `Lcom/b/a/d/a;.a:()V` @kind virtual;
  #L1474d2.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1474d8.  v0:= temp @kind object;
  #L1474da.  v1:= v2;
  #L1474dc.  v5:= `@@com.b.a.d.b.b` @type ^`com.b.a.d.b` @kind object;
  #L1474e0.  if v0 == v5 then goto L1475b0;
  #L1474e4.  v5:= `@@com.b.a.b.a.n$29.a` @type ^`int`[] @kind object;
  #L1474e8.  call temp:= `ordinal`(v0) @signature `Lcom/b/a/d/b;.ordinal:()I` @kind virtual;
  #L1474ee.  v6:= temp;
  #L1474f0.  v5:= v5[v6];
  #L1474f4.  goto L1475bc;
  #L1474fa.  v1:= new `com.b.a.t`;
  #L1474fe.  v2:= new `java.lang.StringBuilder`;
  #L147502.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L147508.  v3:= "Invalid bitset value type: " @kind object;
  #L14750c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L147512.  v2:= temp @kind object;
  #L147514.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14751a.  v0:= temp @kind object;
  #L14751c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L147522.  v0:= temp @kind object;
  #L147524.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14752a.  throw v1;
  #L14752c.  call temp:= `m`(v8) @signature `Lcom/b/a/d/a;.m:()I` @kind virtual;
  #L147532.  v0:= temp;
  #L147534.  if v0 == 0 then goto L147552;
  #L147538.  v0:= v3;
  #L14753a.  if v0 == 0 then goto L147544;
  #L14753e.  call `set`(v4, v1) @signature `Ljava/util/BitSet;.set:(I)V` @kind virtual;
  #L147544.  v1:= v1 + 1;
  #L147548.  call temp:= `f`(v8) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L14754e.  v0:= temp @kind object;
  #L147550.  goto L1474dc;
  #L147552.  v0:= v2;
  #L147554.  goto L14753a;
  #L147556.  call temp:= `i`(v8) @signature `Lcom/b/a/d/a;.i:()Z` @kind virtual;
  #L14755c.  v0:= temp;
  #L14755e.  goto L14753a;
  #L147560.  call temp:= `h`(v8) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L147566.  v0:= temp @kind object;
  #Try_start0.  
  #L147568.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #Try_end0.  
  #L14756e.  v0:= temp;
  #L147570.  if v0 == 0 then goto L147578;
  #L147574.  v0:= v3;
  #L147576.  goto L14753a;
  #L147578.  v0:= v2;
  #L14757a.  goto L14753a;
  #L14757c.  v1:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L14757e.  v1:= new `com.b.a.t`;
  #L147582.  v2:= new `java.lang.StringBuilder`;
  #L147586.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14758c.  v3:= "Error: Expecting: bitset number value (1, 0), Found: " @kind object;
  #L147590.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L147596.  v2:= temp @kind object;
  #L147598.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14759e.  v0:= temp @kind object;
  #L1475a0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1475a6.  v0:= temp @kind object;
  #L1475a8.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1475ae.  throw v1;
  #L1475b0.  call `b`(v8) @signature `Lcom/b/a/d/a;.b:()V` @kind virtual;
  #L1475b6.  v0:= v4 @kind object;
  #L1475b8.  goto L1474c0;
  #L1475ba.  
  #L1475bc.  switch v5
                  | 1 => goto L14752c
                  | 2 => goto L147556
                  | 3 => goto L147560
                  | else => goto L1474fa;
  catch `java.lang.NumberFormatException` @[Try_start0..Try_end0] goto L14757c;
}
procedure `void` `a`(`com.b.a.b.a.n$12` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1475f0.  v2:= (`java.util.BitSet`) v2 @kind object;
  #L1475f4.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/util/BitSet;)V` @kind virtual;
  #L1475fa.  return @kind void;
}
procedure `void` `a`(`com.b.a.b.a.n$12` v4 @kind this, `com.b.a.d.c` v5 @kind object, `java.util.BitSet` v6 @kind object) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/c;Ljava/util/BitSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14760c.  v1:= 0I;
  #L14760e.  if v6 != 0 then goto L14761a;
  #L147612.  call temp:= `f`(v5) @signature `Lcom/b/a/d/c;.f:()Lcom/b/a/d/c;` @kind virtual;
  #L147618.  return @kind void;
  #L14761a.  call temp:= `b`(v5) @signature `Lcom/b/a/d/c;.b:()Lcom/b/a/d/c;` @kind virtual;
  #L147620.  v0:= v1;
  #L147622.  call temp:= `length`(v6) @signature `Ljava/util/BitSet;.length:()I` @kind virtual;
  #L147628.  v2:= temp;
  #L14762a.  if v0 >= v2 then goto L14764e;
  #L14762e.  call temp:= `get`(v6, v0) @signature `Ljava/util/BitSet;.get:(I)Z` @kind virtual;
  #L147634.  v2:= temp;
  #L147636.  if v2 == 0 then goto L14764a;
  #L14763a.  v2:= 1I;
  #L14763c.  v2:= (`long`) v2 @kind i2l;
  #L14763e.  call temp:= `a`(v5, v2) @signature `Lcom/b/a/d/c;.a:(J)Lcom/b/a/d/c;` @kind virtual;
  #L147644.  v0:= v0 + 1;
  #L147648.  goto L147622;
  #L14764a.  v2:= v1;
  #L14764c.  goto L14763c;
  #L14764e.  call temp:= `c`(v5) @signature `Lcom/b/a/d/c;.c:()Lcom/b/a/d/c;` @kind virtual;
  #L147654.  goto L147618;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$12` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$12;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L147668.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$12;.a:(Lcom/b/a/d/a;)Ljava/util/BitSet;` @kind virtual;
  #L14766e.  v0:= temp @kind object;
  #L147670.  return v0 @kind object;
}

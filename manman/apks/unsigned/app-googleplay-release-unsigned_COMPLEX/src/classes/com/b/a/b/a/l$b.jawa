record `com.b.a.b.a.l$b` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `com.b.a.c.a` `com.b.a.b.a.l$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.b.a.b.a.l$b.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.b.a.b.a.l$b.c` @AccessFlag PRIVATE_FINAL;
  `com.b.a.s` `com.b.a.b.a.l$b.d` @AccessFlag PRIVATE_FINAL;
  `com.b.a.k` `com.b.a.b.a.l$b.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.l$b` v2 @kind this, `java.lang.Object` v3 @kind object, `com.b.a.c.a` v4 @kind object, `boolean` v5 , `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/a/l$b;.<init>:(Ljava/lang/Object;Lcom/b/a/c/a;ZLjava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L146ff8.  v1:= 0I;
  #L146ffa.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L147000.  v0:= instanceof @variable v3 @type ^`com.b.a.s` @kind boolean;
  #L147004.  if v0 == 0 then goto L147048;
  #L147008.  v0:= v3 @kind object;
  #L14700a.  v0:= (`com.b.a.s`) v0 @kind object;
  #L14700e.  v2.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` := v0 @kind object;
  #L147012.  v0:= instanceof @variable v3 @type ^`com.b.a.k` @kind boolean;
  #L147016.  if v0 == 0 then goto L14704c;
  #L14701a.  v3:= (`com.b.a.k`) v3 @kind object;
  #L14701e.  v2.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` := v3 @kind object;
  #L147022.  v0:= v2.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` @kind object;
  #L147026.  if v0 != 0 then goto L147032;
  #L14702a.  v0:= v2.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` @kind object;
  #L14702e.  if v0 == 0 then goto L147050;
  #L147032.  v0:= 1I;
  #L147034.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L14703a.  v2.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` := v4 @kind object;
  #L14703e.  v2.`com.b.a.b.a.l$b.b` @type ^`boolean` := v5 @kind boolean;
  #L147042.  v2.`com.b.a.b.a.l$b.c` @type ^`java.lang.Class` := v6 @kind object;
  #L147046.  return @kind void;
  #L147048.  v0:= v1 @kind object;
  #L14704a.  goto L14700e;
  #L14704c.  v3:= v1 @kind object;
  #L14704e.  goto L14701e;
  #L147050.  v0:= 0I;
  #L147052.  goto L147034;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.l$b` v6 @kind this, `com.b.a.f` v7 @kind object, `com.b.a.c.a` v8 @kind object) @signature `Lcom/b/a/b/a/l$b;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L147064.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L147068.  if v0 == 0 then goto L1470c0;
  #L14706c.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L147070.  call temp:= `equals`(v0, v8) @signature `Lcom/b/a/c/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L147076.  v0:= temp;
  #L147078.  if v0 != 0 then goto L14709c;
  #L14707c.  v0:= v6.`com.b.a.b.a.l$b.b` @type ^`boolean` @kind boolean;
  #L147080.  if v0 == 0 then goto L1470bc;
  #L147084.  v0:= v6.`com.b.a.b.a.l$b.a` @type ^`com.b.a.c.a` @kind object;
  #L147088.  call temp:= `b`(v0) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L14708e.  v0:= temp @kind object;
  #L147090.  call temp:= `a`(v8) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L147096.  v1:= temp @kind object;
  #L147098.  if v0 != v1 then goto L1470bc;
  #L14709c.  v0:= 1I;
  #L14709e.  if v0 == 0 then goto L1470d6;
  #L1470a2.  v0:= new `com.b.a.b.a.l`;
  #L1470a6.  v1:= v6.`com.b.a.b.a.l$b.d` @type ^`com.b.a.s` @kind object;
  #L1470aa.  v2:= v6.`com.b.a.b.a.l$b.e` @type ^`com.b.a.k` @kind object;
  #L1470ae.  v3:= v7 @kind object;
  #L1470b0.  v4:= v8 @kind object;
  #L1470b2.  v5:= v6 @kind object;
  #L1470b4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/b/a/b/a/l;.<init>:(Lcom/b/a/s;Lcom/b/a/k;Lcom/b/a/f;Lcom/b/a/c/a;Lcom/b/a/w;)V` @kind direct;
  #L1470ba.  return v0 @kind object;
  #L1470bc.  v0:= 0I;
  #L1470be.  goto L14709e;
  #L1470c0.  v0:= v6.`com.b.a.b.a.l$b.c` @type ^`java.lang.Class` @kind object;
  #L1470c4.  call temp:= `a`(v8) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L1470ca.  v1:= temp @kind object;
  #L1470cc.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1470d2.  v0:= temp;
  #L1470d4.  goto L14709e;
  #L1470d6.  v0:= 0I;
  #L1470d8.  goto L1470ba;
}

record `com.b.a.a` @kind class @AccessFlag FINAL extends `com.b.a.k` @kind interface, `com.b.a.s` @kind interface {
  `java.text.DateFormat` `com.b.a.a.a` @AccessFlag PRIVATE_FINAL;
  `java.text.DateFormat` `com.b.a.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this) @signature `Lcom/b/a/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L141360.  v1:= 2I;
  #L141362.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L141366.  call temp:= `getDateTimeInstance`(v1, v1, v0) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L14136c.  v0:= temp @kind object;
  #L14136e.  call temp:= `getDateTimeInstance`(v1, v1) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L141374.  v1:= temp @kind object;
  #L141376.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L14137c.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/b/a/a;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L141390.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L141394.  call temp:= `getDateTimeInstance`(v3, v4, v0) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;` @kind static;
  #L14139a.  v0:= temp @kind object;
  #L14139c.  call temp:= `getDateTimeInstance`(v3, v4) @signature `Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;` @kind static;
  #L1413a2.  v1:= temp @kind object;
  #L1413a4.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L1413aa.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/b/a/a;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1413bc.  v0:= new `java.text.SimpleDateFormat`;
  #L1413c0.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1413c4.  call `<init>`(v0, v3, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L1413ca.  v1:= new `java.text.SimpleDateFormat`;
  #L1413ce.  call `<init>`(v1, v3) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1413d4.  call `<init>`(v2, v0, v1) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @kind direct;
  #L1413da.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.a` v0 @kind this, `java.text.DateFormat` v1 @kind object, `java.text.DateFormat` v2 @kind object) @signature `Lcom/b/a/a;.<init>:(Ljava/text/DateFormat;Ljava/text/DateFormat;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1413ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1413f2.  v0.`com.b.a.a.a` @type ^`java.text.DateFormat` := v1 @kind object;
  #L1413f6.  v0.`com.b.a.a.b` @type ^`java.text.DateFormat` := v2 @kind object;
  #L1413fa.  return @kind void;
}
procedure `java.util.Date` `a`(`com.b.a.a` v4 @kind this, `com.b.a.l` v5 @kind object) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;)Ljava/util/Date;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14140c.  v1:= v4.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L141410.  @monitorenter v1
  #Try_start0.  
  #L141412.  v0:= v4.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L141416.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L14141c.  v2:= temp @kind object;
  #L14141e.  call temp:= `parse`(v0, v2) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #Try_end0.  
  #L141424.  v0:= temp @kind object;
  #Try_start1.  
  #L141426.  @monitorexit v1
  #Try_end1.  
  #L141428.  return v0 @kind object;
  #L14142a.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #Try_start2.  
  #L14142c.  v0:= v4.`com.b.a.a.a` @type ^`java.text.DateFormat` @kind object;
  #L141430.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L141436.  v2:= temp @kind object;
  #L141438.  call temp:= `parse`(v0, v2) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #Try_end2.  
  #L14143e.  v0:= temp @kind object;
  #Try_start3.  
  #L141440.  @monitorexit v1
  #L141442.  goto L141428;
  #L141444.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L141446.  @monitorexit v1
  #Try_end3.  
  #L141448.  throw v0;
  #L14144a.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #Try_start4.  
  #L14144c.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L141452.  v0:= temp @kind object;
  #L141454.  v2:= new `java.text.ParsePosition`;
  #L141458.  v3:= 0I;
  #L14145a.  call `<init>`(v2, v3) @signature `Ljava/text/ParsePosition;.<init>:(I)V` @kind direct;
  #L141460.  call temp:= `a`(v0, v2) @signature `Lcom/b/a/b/a/a/a;.a:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @kind static;
  #Try_end4.  
  #L141466.  v0:= temp @kind object;
  #Try_start5.  
  #L141468.  @monitorexit v1
  #L14146a.  goto L141428;
  #L14146c.  v0:= Exception @type ^`java.text.ParseException` @kind object;
  #L14146e.  v2:= new `com.b.a.t`;
  #L141472.  call temp:= `b`(v5) @signature `Lcom/b/a/l;.b:()Ljava/lang/String;` @kind virtual;
  #L141478.  v3:= temp @kind object;
  #L14147a.  call `<init>`(v2, v3, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L141480.  throw v2;
  #Try_end5.  
  catch `java.text.ParseException` @[Try_start0..Try_end0] goto L14142a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L141444;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L141444;
  catch `java.text.ParseException` @[Try_start2..Try_end2] goto L14144a;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L141444;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L141444;
  catch `java.text.ParseException` @[Try_start4..Try_end4] goto L14146c;
  catch `java.lang.Throwable` @[Try_start4..Try_end4] goto L141444;
  catch `java.lang.Throwable` @[Try_start5..Try_end5] goto L141444;
}
procedure `com.b.a.l` `a`(`com.b.a.a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.r` v4 @kind object) @signature `Lcom/b/a/a;.a:(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1414d8.  v2:= (`java.util.Date`) v2 @kind object;
  #L1414dc.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/b/a/a;.a:(Ljava/util/Date;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @kind virtual;
  #L1414e2.  v0:= temp @kind object;
  #L1414e4.  return v0 @kind object;
}
procedure `com.b.a.l` `a`(`com.b.a.a` v3 @kind this, `java.util.Date` v4 @kind object, `java.lang.reflect.Type` v5 @kind object, `com.b.a.r` v6 @kind object) @signature `Lcom/b/a/a;.a:(Ljava/util/Date;Ljava/lang/reflect/Type;Lcom/b/a/r;)Lcom/b/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1414f8.  v1:= v3.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L1414fc.  @monitorenter v1
  #Try_start0.  
  #L1414fe.  v0:= v3.`com.b.a.a.a` @type ^`java.text.DateFormat` @kind object;
  #L141502.  call temp:= `format`(v0, v4) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L141508.  v0:= temp @kind object;
  #L14150a.  v2:= new `com.b.a.q`;
  #L14150e.  call `<init>`(v2, v0) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141514.  @monitorexit v1
  #L141516.  return v2 @kind object;
  #L141518.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14151a.  @monitorexit v1
  #Try_end0.  
  #L14151c.  throw v0;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L141518;
}
procedure `java.util.Date` `a`(`com.b.a.a` v4 @kind this, `com.b.a.l` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `com.b.a.j` v7 @kind object) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14153c.  v0:= instanceof @variable v5 @type ^`com.b.a.q` @kind boolean;
  #L141540.  if v0 != 0 then goto L141554;
  #L141544.  v0:= new `com.b.a.p`;
  #L141548.  v1:= "The date should be a string value" @kind object;
  #L14154c.  call `<init>`(v0, v1) @signature `Lcom/b/a/p;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L141552.  throw v0;
  #L141554.  call temp:= `a`(v4, v5) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;)Ljava/util/Date;` @kind direct;
  #L14155a.  v0:= temp @kind object;
  #L14155c.  v1:= constclass @type ^`java.util.Date` @kind object;
  #L141560.  if v6 != v1 then goto L141566;
  #L141564.  return v0 @kind object;
  #L141566.  v1:= constclass @type ^`java.sql.Timestamp` @kind object;
  #L14156a.  if v6 != v1 then goto L141584;
  #L14156e.  v1:= new `java.sql.Timestamp`;
  #L141572.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L141578.  v2:= temp @kind wide;
  #L14157a.  call `<init>`(v1, v2) @signature `Ljava/sql/Timestamp;.<init>:(J)V` @kind direct;
  #L141580.  v0:= v1 @kind object;
  #L141582.  goto L141564;
  #L141584.  v1:= constclass @type ^`java.sql.Date` @kind object;
  #L141588.  if v6 != v1 then goto L1415a2;
  #L14158c.  v1:= new `java.sql.Date`;
  #L141590.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L141596.  v2:= temp @kind wide;
  #L141598.  call `<init>`(v1, v2) @signature `Ljava/sql/Date;.<init>:(J)V` @kind direct;
  #L14159e.  v0:= v1 @kind object;
  #L1415a0.  goto L141564;
  #L1415a2.  v0:= new `java.lang.IllegalArgumentException`;
  #L1415a6.  v1:= new `java.lang.StringBuilder`;
  #L1415aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1415b0.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1415b6.  v2:= temp @kind object;
  #L1415b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1415be.  v1:= temp @kind object;
  #L1415c0.  v2:= " cannot deserialize to " @kind object;
  #L1415c4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1415ca.  v1:= temp @kind object;
  #L1415cc.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1415d2.  v1:= temp @kind object;
  #L1415d4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1415da.  v1:= temp @kind object;
  #L1415dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1415e2.  throw v0;
}
procedure `java.lang.Object` `b`(`com.b.a.a` v1 @kind this, `com.b.a.l` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `com.b.a.j` v4 @kind object) @signature `Lcom/b/a/a;.b:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1415f4.  call temp:= `a`(v1, v2, v3, v4) @signature `Lcom/b/a/a;.a:(Lcom/b/a/l;Ljava/lang/reflect/Type;Lcom/b/a/j;)Ljava/util/Date;` @kind virtual;
  #L1415fa.  v0:= temp @kind object;
  #L1415fc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.b.a.a` v3 @kind this) @signature `Lcom/b/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L141610.  v0:= new `java.lang.StringBuilder`;
  #L141614.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14161a.  v1:= constclass @type ^`com.b.a.a` @kind object;
  #L14161e.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L141624.  v1:= temp @kind object;
  #L141626.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14162c.  v1:= 40I;
  #L141630.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L141636.  v1:= temp @kind object;
  #L141638.  v2:= v3.`com.b.a.a.b` @type ^`java.text.DateFormat` @kind object;
  #L14163c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L141642.  v2:= temp @kind object;
  #L141644.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L14164a.  v2:= temp @kind object;
  #L14164c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L141652.  v1:= temp @kind object;
  #L141654.  v2:= 41I;
  #L141658.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14165e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L141664.  v0:= temp @kind object;
  #L141666.  return v0 @kind object;
}

record `com.b.a.b.a.n$28` @kind class @AccessFlag FINAL extends `com.b.a.w` @kind interface {
  `java.lang.Class` `com.b.a.b.a.n$28.a` @AccessFlag FINAL_SYNTHETIC;
  `com.b.a.v` `com.b.a.b.a.n$28.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.b.a.b.a.n$28` v0 @kind this, `java.lang.Class` v1 @kind object, `com.b.a.v` v2 @kind object) @signature `Lcom/b/a/b/a/n$28;.<init>:(Ljava/lang/Class;Lcom/b/a/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14879c.  v0.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` := v1 @kind object;
  #L1487a0.  v0.`com.b.a.b.a.n$28.b` @type ^`com.b.a.v` := v2 @kind object;
  #L1487a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1487aa.  return @kind void;
}
procedure `com.b.a.v` `a`(`com.b.a.b.a.n$28` v2 @kind this, `com.b.a.f` v3 @kind object, `com.b.a.c.a` v4 @kind object) @signature `Lcom/b/a/b/a/n$28;.a:(Lcom/b/a/f;Lcom/b/a/c/a;)Lcom/b/a/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1487bc.  call temp:= `a`(v4) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L1487c2.  v1:= temp @kind object;
  #L1487c4.  v0:= v2.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` @kind object;
  #L1487c8.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L1487ce.  v0:= temp;
  #L1487d0.  if v0 != 0 then goto L1487d8;
  #L1487d4.  v0:= 0I;
  #L1487d6.  return v0 @kind object;
  #L1487d8.  v0:= new `com.b.a.b.a.n$28$1`;
  #L1487dc.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/a/n$28$1;.<init>:(Lcom/b/a/b/a/n$28;Ljava/lang/Class;)V` @kind direct;
  #L1487e2.  goto L1487d6;
}
procedure `java.lang.String` `toString`(`com.b.a.b.a.n$28` v2 @kind this) @signature `Lcom/b/a/b/a/n$28;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1487f4.  v0:= new `java.lang.StringBuilder`;
  #L1487f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1487fe.  v1:= "Factory[typeHierarchy=" @kind object;
  #L148802.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148808.  v0:= temp @kind object;
  #L14880a.  v1:= v2.`com.b.a.b.a.n$28.a` @type ^`java.lang.Class` @kind object;
  #L14880e.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L148814.  v1:= temp @kind object;
  #L148816.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14881c.  v0:= temp @kind object;
  #L14881e.  v1:= ",adapter=" @kind object;
  #L148822.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148828.  v0:= temp @kind object;
  #L14882a.  v1:= v2.`com.b.a.b.a.n$28.b` @type ^`com.b.a.v` @kind object;
  #L14882e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148834.  v0:= temp @kind object;
  #L148836.  v1:= "]" @kind object;
  #L14883a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L148840.  v0:= temp @kind object;
  #L148842.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L148848.  v0:= temp @kind object;
  #L14884a.  return v0 @kind object;
}

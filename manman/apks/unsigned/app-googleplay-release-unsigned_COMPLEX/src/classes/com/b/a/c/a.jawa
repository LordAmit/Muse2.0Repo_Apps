record `com.b.a.c.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.b.a.c.a.a` @AccessFlag FINAL;
  `java.lang.reflect.Type` `com.b.a.c.a.b` @AccessFlag FINAL;
  `int` `com.b.a.c.a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L14ca20.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14ca26.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14ca2c.  v0:= temp @kind object;
  #L14ca2e.  call temp:= `a`(v0) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14ca34.  v0:= temp @kind object;
  #L14ca36.  v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L14ca3a.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L14ca3e.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L14ca44.  v0:= temp @kind object;
  #L14ca46.  v1.`com.b.a.c.a.a` @type ^`java.lang.Class` := v0 @kind object;
  #L14ca4a.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L14ca4e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L14ca54.  v0:= temp;
  #L14ca56.  v1.`com.b.a.c.a.c` @type ^`int` := v0;
  #L14ca5a.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.c.a` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L14ca6c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14ca72.  call temp:= `a`(v2) @signature `Lcom/b/a/b/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L14ca78.  v0:= temp @kind object;
  #L14ca7a.  v0:= (`java.lang.reflect.Type`) v0 @kind object;
  #L14ca7e.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14ca84.  v0:= temp @kind object;
  #L14ca86.  v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L14ca8a.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L14ca8e.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L14ca94.  v0:= temp @kind object;
  #L14ca96.  v1.`com.b.a.c.a.a` @type ^`java.lang.Class` := v0 @kind object;
  #L14ca9a.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L14ca9e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L14caa4.  v0:= temp;
  #L14caa6.  v1.`com.b.a.c.a.c` @type ^`int` := v0;
  #L14caaa.  return @kind void;
}
procedure `com.b.a.c.a` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14cabc.  v0:= new `com.b.a.c.a`;
  #L14cac0.  call `<init>`(v0, v1) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L14cac6.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.Class` v2 @kind object) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L14cad8.  call temp:= `getGenericSuperclass`(v2) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L14cade.  v0:= temp @kind object;
  #L14cae0.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L14cae4.  if v1 == 0 then goto L14caf8;
  #L14cae8.  v0:= new `java.lang.RuntimeException`;
  #L14caec.  v1:= "Missing type parameter." @kind object;
  #L14caf0.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14caf6.  throw v0;
  #L14caf8.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L14cafc.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14cb02.  v0:= temp @kind object;
  #L14cb04.  v1:= 0I;
  #L14cb06.  v0:= v0[v1] @kind object;
  #L14cb0a.  call temp:= `d`(v0) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14cb10.  v0:= temp @kind object;
  #L14cb12.  return v0 @kind object;
}
procedure `com.b.a.c.a` `b`(`java.lang.Class` v1 @kind object) @signature `Lcom/b/a/c/a;.b:(Ljava/lang/Class;)Lcom/b/a/c/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14cb24.  v0:= new `com.b.a.c.a`;
  #L14cb28.  call `<init>`(v0, v1) @signature `Lcom/b/a/c/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L14cb2e.  return v0 @kind object;
}
procedure `java.lang.Class` `a`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14cb40.  v0:= v1.`com.b.a.c.a.a` @type ^`java.lang.Class` @kind object;
  #L14cb44.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `b`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.b:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14cb58.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L14cb5c.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.b.a.c.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/c/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L14cb70.  v0:= instanceof @variable v3 @type ^`com.b.a.c.a` @kind boolean;
  #L14cb74.  if v0 == 0 then goto L14cb94;
  #L14cb78.  v0:= v2.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L14cb7c.  v3:= (`com.b.a.c.a`) v3 @kind object;
  #L14cb80.  v1:= v3.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L14cb84.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L14cb8a.  v0:= temp;
  #L14cb8c.  if v0 == 0 then goto L14cb94;
  #L14cb90.  v0:= 1I;
  #L14cb92.  return v0;
  #L14cb94.  v0:= 0I;
  #L14cb96.  goto L14cb92;
}
procedure `int` `hashCode`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14cba8.  v0:= v1.`com.b.a.c.a.c` @type ^`int`;
  #L14cbac.  return v0;
}
procedure `java.lang.String` `toString`(`com.b.a.c.a` v1 @kind this) @signature `Lcom/b/a/c/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14cbc0.  v0:= v1.`com.b.a.c.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L14cbc4.  call temp:= `f`(v0) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L14cbca.  v0:= temp @kind object;
  #L14cbcc.  return v0 @kind object;
}

record `com.b.a.b.g$d` @kind class @AccessFlag FINAL extends `java.util.Map$Entry` @kind interface {
  `com.b.a.b.g$d` `com.b.a.b.g$d.a` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$d.b` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$d.c` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$d.d` @AccessFlag ;
  `com.b.a.b.g$d` `com.b.a.b.g$d.e` @AccessFlag ;
  `java.lang.Object` `com.b.a.b.g$d.f` @AccessFlag FINAL;
  `java.lang.Object` `com.b.a.b.g$d.g` @AccessFlag ;
  `int` `com.b.a.b.g$d.h` @AccessFlag ;
}
procedure `void` `<init>`(`com.b.a.b.g$d` v1 @kind this) @signature `Lcom/b/a/b/g$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L14baf4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14bafa.  v0:= 0I;
  #L14bafc.  v1.`com.b.a.b.g$d.f` @type ^`java.lang.Object` := v0 @kind object;
  #L14bb00.  v1.`com.b.a.b.g$d.e` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L14bb04.  v1.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L14bb08.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.b.g$d` v1 @kind this, `com.b.a.b.g$d` v2 @kind object, `java.lang.Object` v3 @kind object, `com.b.a.b.g$d` v4 @kind object, `com.b.a.b.g$d` v5 @kind object) @signature `Lcom/b/a/b/g$d;.<init>:(Lcom/b/a/b/g$d;Ljava/lang/Object;Lcom/b/a/b/g$d;Lcom/b/a/b/g$d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L14bb1c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14bb22.  v1.`com.b.a.b.g$d.a` @type ^`com.b.a.b.g$d` := v2 @kind object;
  #L14bb26.  v1.`com.b.a.b.g$d.f` @type ^`java.lang.Object` := v3 @kind object;
  #L14bb2a.  v0:= 1I;
  #L14bb2c.  v1.`com.b.a.b.g$d.h` @type ^`int` := v0;
  #L14bb30.  v1.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` := v4 @kind object;
  #L14bb34.  v1.`com.b.a.b.g$d.e` @type ^`com.b.a.b.g$d` := v5 @kind object;
  #L14bb38.  v5.`com.b.a.b.g$d.d` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L14bb3c.  v4.`com.b.a.b.g$d.e` @type ^`com.b.a.b.g$d` := v1 @kind object;
  #L14bb40.  return @kind void;
}
procedure `com.b.a.b.g$d` `a`(`com.b.a.b.g$d` v2 @kind this) @signature `Lcom/b/a/b/g$d;.a:()Lcom/b/a/b/g$d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14bb54.  v0:= v2.`com.b.a.b.g$d.b` @type ^`com.b.a.b.g$d` @kind object;
  #L14bb58.  if v0 == 0 then goto L14bb66;
  #L14bb5c.  v1:= v0.`com.b.a.b.g$d.b` @type ^`com.b.a.b.g$d` @kind object;
  #L14bb60.  v2:= v0 @kind object;
  #L14bb62.  v0:= v1 @kind object;
  #L14bb64.  goto L14bb58;
  #L14bb66.  return v2 @kind object;
}
procedure `com.b.a.b.g$d` `b`(`com.b.a.b.g$d` v2 @kind this) @signature `Lcom/b/a/b/g$d;.b:()Lcom/b/a/b/g$d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14bb78.  v0:= v2.`com.b.a.b.g$d.c` @type ^`com.b.a.b.g$d` @kind object;
  #L14bb7c.  if v0 == 0 then goto L14bb8a;
  #L14bb80.  v1:= v0.`com.b.a.b.g$d.c` @type ^`com.b.a.b.g$d` @kind object;
  #L14bb84.  v2:= v0 @kind object;
  #L14bb86.  v0:= v1 @kind object;
  #L14bb88.  goto L14bb7c;
  #L14bb8a.  return v2 @kind object;
}
procedure `boolean` `equals`(`com.b.a.b.g$d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/b/a/b/g$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14bb9c.  v0:= 0I;
  #L14bb9e.  v1:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L14bba2.  if v1 == 0 then goto L14bbd4;
  #L14bba6.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L14bbaa.  v1:= v3.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L14bbae.  if v1 != 0 then goto L14bbd6;
  #L14bbb2.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L14bbb8.  v1:= temp @kind object;
  #L14bbba.  if v1 != 0 then goto L14bbd4;
  #L14bbbe.  v1:= v3.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L14bbc2.  if v1 != 0 then goto L14bbf0;
  #L14bbc6.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L14bbcc.  v1:= temp @kind object;
  #L14bbce.  if v1 != 0 then goto L14bbd4;
  #L14bbd2.  v0:= 1I;
  #L14bbd4.  return v0;
  #L14bbd6.  v1:= v3.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L14bbda.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L14bbe0.  v2:= temp @kind object;
  #L14bbe2.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14bbe8.  v1:= temp;
  #L14bbea.  if v1 == 0 then goto L14bbd4;
  #L14bbee.  goto L14bbbe;
  #L14bbf0.  v1:= v3.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L14bbf4.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L14bbfa.  v2:= temp @kind object;
  #L14bbfc.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14bc02.  v1:= temp;
  #L14bc04.  if v1 == 0 then goto L14bbd4;
  #L14bc08.  goto L14bbd2;
}
procedure `java.lang.Object` `getKey`(`com.b.a.b.g$d` v1 @kind this) @signature `Lcom/b/a/b/g$d;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14bc1c.  v0:= v1.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L14bc20.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`com.b.a.b.g$d` v1 @kind this) @signature `Lcom/b/a/b/g$d;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14bc34.  v0:= v1.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L14bc38.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.b.a.b.g$d` v3 @kind this) @signature `Lcom/b/a/b/g$d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14bc4c.  v1:= 0I;
  #L14bc4e.  v0:= v3.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L14bc52.  if v0 != 0 then goto L14bc64;
  #L14bc56.  v0:= v1;
  #L14bc58.  v2:= v3.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L14bc5c.  if v2 != 0 then goto L14bc72;
  #L14bc60.  v0:= v0 ^~ v1 @kind int;
  #L14bc62.  return v0;
  #L14bc64.  v0:= v3.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L14bc68.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L14bc6e.  v0:= temp;
  #L14bc70.  goto L14bc58;
  #L14bc72.  v1:= v3.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L14bc76.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L14bc7c.  v1:= temp;
  #L14bc7e.  goto L14bc60;
}
procedure `java.lang.Object` `setValue`(`com.b.a.b.g$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/g$d;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14bc90.  v0:= v1.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L14bc94.  v1.`com.b.a.b.g$d.g` @type ^`java.lang.Object` := v2 @kind object;
  #L14bc98.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.b.a.b.g$d` v2 @kind this) @signature `Lcom/b/a/b/g$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14bcac.  v0:= new `java.lang.StringBuilder`;
  #L14bcb0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14bcb6.  v1:= v2.`com.b.a.b.g$d.f` @type ^`java.lang.Object` @kind object;
  #L14bcba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14bcc0.  v0:= temp @kind object;
  #L14bcc2.  v1:= "=" @kind object;
  #L14bcc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14bccc.  v0:= temp @kind object;
  #L14bcce.  v1:= v2.`com.b.a.b.g$d.g` @type ^`java.lang.Object` @kind object;
  #L14bcd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14bcd8.  v0:= temp @kind object;
  #L14bcda.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14bce0.  v0:= temp @kind object;
  #L14bce2.  return v0 @kind object;
}

record `com.b.a.d.a$1` @kind class @AccessFlag FINAL extends `com.b.a.b.e` @kind class {
}
procedure `void` `<init>`(`com.b.a.d.a$1` v0 @kind this) @signature `Lcom/b/a/d/a$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14cfdc.  call `<init>`(v0) @signature `Lcom/b/a/b/e;.<init>:()V` @kind direct;
  #L14cfe2.  return @kind void;
}
procedure `void` `a`(`com.b.a.d.a$1` v3 @kind this, `com.b.a.d.a` v4 @kind object) @signature `Lcom/b/a/d/a$1;.a:(Lcom/b/a/d/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14cff4.  v0:= instanceof @variable v4 @type ^`com.b.a.b.a.e` @kind boolean;
  #L14cff8.  if v0 == 0 then goto L14d008;
  #L14cffc.  v4:= (`com.b.a.b.a.e`) v4 @kind object;
  #L14d000.  call `o`(v4) @signature `Lcom/b/a/b/a/e;.o:()V` @kind virtual;
  #L14d006.  return @kind void;
  #L14d008.  v0:= v4.`com.b.a.d.a.a` @type ^`int`;
  #L14d00c.  if v0 != 0 then goto L14d018;
  #L14d010.  call temp:= `r`(v4) @signature `Lcom/b/a/d/a;.r:()I` @kind virtual;
  #L14d016.  v0:= temp;
  #L14d018.  v1:= 13I;
  #L14d01c.  if v0 != v1 then goto L14d02a;
  #L14d020.  v0:= 9I;
  #L14d024.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L14d028.  goto L14d006;
  #L14d02a.  v1:= 12I;
  #L14d02e.  if v0 != v1 then goto L14d03c;
  #L14d032.  v0:= 8I;
  #L14d036.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L14d03a.  goto L14d006;
  #L14d03c.  v1:= 14I;
  #L14d040.  if v0 != v1 then goto L14d04e;
  #L14d044.  v0:= 10I;
  #L14d048.  v4.`com.b.a.d.a.a` @type ^`int` := v0;
  #L14d04c.  goto L14d006;
  #L14d04e.  v0:= new `java.lang.IllegalStateException`;
  #L14d052.  v1:= new `java.lang.StringBuilder`;
  #L14d056.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14d05c.  v2:= "Expected a name but was " @kind object;
  #L14d060.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d066.  v1:= temp @kind object;
  #L14d068.  call temp:= `f`(v4) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L14d06e.  v2:= temp @kind object;
  #L14d070.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d076.  v1:= temp @kind object;
  #L14d078.  call temp:= `a`(v4) @signature `Lcom/b/a/d/a;.a:(Lcom/b/a/d/a;)Ljava/lang/String;` @kind static;
  #L14d07e.  v2:= temp @kind object;
  #L14d080.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14d086.  v1:= temp @kind object;
  #L14d088.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14d08e.  v1:= temp @kind object;
  #L14d090.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14d096.  throw v0;
}

record `com.b.a.b.a.m` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
  `com.b.a.f` `com.b.a.b.a.m.a` @AccessFlag PRIVATE_FINAL;
  `com.b.a.v` `com.b.a.b.a.m.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type` `com.b.a.b.a.m.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.b.a.m` v0 @kind this, `com.b.a.f` v1 @kind object, `com.b.a.v` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/b/a/m;.<init>:(Lcom/b/a/f;Lcom/b/a/v;Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L147234.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L14723a.  v0.`com.b.a.b.a.m.a` @type ^`com.b.a.f` := v1 @kind object;
  #L14723e.  v0.`com.b.a.b.a.m.b` @type ^`com.b.a.v` := v2 @kind object;
  #L147242.  v0.`com.b.a.b.a.m.c` @type ^`java.lang.reflect.Type` := v3 @kind object;
  #L147246.  return @kind void;
}
procedure `java.lang.reflect.Type` `a`(`com.b.a.b.a.m` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/b/a/m;.a:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/reflect/Type;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L147258.  if v3 == 0 then goto L14727c;
  #L14725c.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L147260.  if v2 == v0 then goto L147274;
  #L147264.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L147268.  if v0 != 0 then goto L147274;
  #L14726c.  v0:= instanceof @variable v2 @type ^`java.lang.Class` @kind boolean;
  #L147270.  if v0 == 0 then goto L14727c;
  #L147274.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14727a.  v2:= temp @kind object;
  #L14727c.  return v2 @kind object;
}
procedure `void` `a`(`com.b.a.b.a.m` v3 @kind this, `com.b.a.d.c` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/b/a/b/a/m;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L147290.  v0:= v3.`com.b.a.b.a.m.b` @type ^`com.b.a.v` @kind object;
  #L147294.  v1:= v3.`com.b.a.b.a.m.c` @type ^`java.lang.reflect.Type` @kind object;
  #L147298.  call temp:= `a`(v3, v1, v5) @signature `Lcom/b/a/b/a/m;.a:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/reflect/Type;` @kind direct;
  #L14729e.  v1:= temp @kind object;
  #L1472a0.  v2:= v3.`com.b.a.b.a.m.c` @type ^`java.lang.reflect.Type` @kind object;
  #L1472a4.  if v1 == v2 then goto L1472c4;
  #L1472a8.  v0:= v3.`com.b.a.b.a.m.a` @type ^`com.b.a.f` @kind object;
  #L1472ac.  call temp:= `a`(v1) @signature `Lcom/b/a/c/a;.a:(Ljava/lang/reflect/Type;)Lcom/b/a/c/a;` @kind static;
  #L1472b2.  v1:= temp @kind object;
  #L1472b4.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/f;.a:(Lcom/b/a/c/a;)Lcom/b/a/v;` @kind virtual;
  #L1472ba.  v0:= temp @kind object;
  #L1472bc.  v1:= instanceof @variable v0 @type ^`com.b.a.b.a.i$a` @kind boolean;
  #L1472c0.  if v1 != 0 then goto L1472cc;
  #L1472c4.  call `a`(v0, v4, v5) @signature `Lcom/b/a/v;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @kind virtual;
  #L1472ca.  return @kind void;
  #L1472cc.  v1:= v3.`com.b.a.b.a.m.b` @type ^`com.b.a.v` @kind object;
  #L1472d0.  v1:= instanceof @variable v1 @type ^`com.b.a.b.a.i$a` @kind boolean;
  #L1472d4.  if v1 != 0 then goto L1472c4;
  #L1472d8.  v0:= v3.`com.b.a.b.a.m.b` @type ^`com.b.a.v` @kind object;
  #L1472dc.  goto L1472c4;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.m` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/m;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1472f0.  v0:= v1.`com.b.a.b.a.m.b` @type ^`com.b.a.v` @kind object;
  #L1472f4.  call temp:= `b`(v0, v2) @signature `Lcom/b/a/v;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @kind virtual;
  #L1472fa.  v0:= temp @kind object;
  #L1472fc.  return v0 @kind object;
}

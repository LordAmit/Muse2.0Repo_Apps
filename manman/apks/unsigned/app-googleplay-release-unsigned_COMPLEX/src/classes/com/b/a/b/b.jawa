record `com.b.a.b.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.reflect.Type`[] `@@com.b.a.b.b.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/b/a/b/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L14a03c.  v0:= 0I;
  #L14a03e.  v0:= new `java.lang.reflect.Type`[v0];
  #L14a042.  `@@com.b.a.b.b.a` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L14a046.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v1 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L14a058.  if v1 == 0 then goto L14a066;
  #L14a05c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L14a062.  v0:= temp;
  #L14a064.  return v0;
  #L14a066.  v0:= 0I;
  #L14a068.  goto L14a064;
}
procedure `int` `a`(`java.lang.Object`[] v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/b/a/b/b;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L14a07c.  v0:= 0I;
  #L14a07e.  v1:= length @variable v2;
  #L14a080.  if v0 >= v1 then goto L14a09c;
  #L14a084.  v1:= v2[v0] @kind object;
  #L14a088.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14a08e.  v1:= temp;
  #L14a090.  if v1 == 0 then goto L14a096;
  #L14a094.  return v0;
  #L14a096.  v0:= v0 + 1;
  #L14a09a.  goto L14a07e;
  #L14a09c.  v0:= new `java.util.NoSuchElementException`;
  #L14a0a0.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L14a0a6.  throw v0;
}
procedure `java.lang.Class` `a`(`java.lang.reflect.TypeVariable` v2 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L14a0b8.  call temp:= `getGenericDeclaration`(v2) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L14a0be.  v0:= temp @kind object;
  #L14a0c0.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L14a0c4.  if v1 == 0 then goto L14a0ce;
  #L14a0c8.  v0:= (`java.lang.Class`) v0 @kind object;
  #L14a0cc.  return v0 @kind object;
  #L14a0ce.  v0:= 0I;
  #L14a0d0.  goto L14a0cc;
}
procedure `java.lang.reflect.GenericArrayType` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14a0e4.  v0:= new `com.b.a.b.b$a`;
  #L14a0e8.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L14a0ee.  return v0 @kind object;
}
procedure `java.lang.reflect.ParameterizedType` `a`(`java.lang.reflect.Type` v1 @kind object, `java.lang.reflect.Type` v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14a100.  v0:= new `com.b.a.b.b$b`;
  #L14a104.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/b/a/b/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L14a10a.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L14a11c.  v2:= 0I;
  #L14a11e.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L14a122.  call temp:= `b`(v3, v4, v0) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14a128.  v0:= temp @kind object;
  #L14a12a.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L14a12e.  if v1 == 0 then goto L14a142;
  #L14a132.  v0:= (`java.lang.reflect.WildcardType`) v0 @kind object;
  #L14a136.  call temp:= `getUpperBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a13c.  v0:= temp @kind object;
  #L14a13e.  v0:= v0[v2] @kind object;
  #L14a142.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14a146.  if v1 == 0 then goto L14a15c;
  #L14a14a.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L14a14e.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a154.  v0:= temp @kind object;
  #L14a156.  v0:= v0[v2] @kind object;
  #L14a15a.  return v0 @kind object;
  #L14a15c.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L14a160.  goto L14a15a;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14a174.  if v6 != v5 then goto L14a17a;
  #L14a178.  return v4 @kind object;
  #L14a17a.  call temp:= `isInterface`(v6) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L14a180.  v0:= temp;
  #L14a182.  if v0 == 0 then goto L14a1dc;
  #L14a186.  call temp:= `getInterfaces`(v5) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L14a18c.  v1:= temp @kind object;
  #L14a18e.  v0:= 0I;
  #L14a190.  v2:= length @variable v1;
  #L14a192.  if v0 >= v2 then goto L14a1dc;
  #L14a196.  v3:= v1[v0] @kind object;
  #L14a19a.  if v3 != v6 then goto L14a1ac;
  #L14a19e.  call temp:= `getGenericInterfaces`(v5) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L14a1a4.  v1:= temp @kind object;
  #L14a1a6.  v4:= v1[v0] @kind object;
  #L14a1aa.  goto L14a178;
  #L14a1ac.  v3:= v1[v0] @kind object;
  #L14a1b0.  call temp:= `isAssignableFrom`(v6, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14a1b6.  v3:= temp;
  #L14a1b8.  if v3 == 0 then goto L14a1d6;
  #L14a1bc.  call temp:= `getGenericInterfaces`(v5) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L14a1c2.  v2:= temp @kind object;
  #L14a1c4.  v2:= v2[v0] @kind object;
  #L14a1c8.  v0:= v1[v0] @kind object;
  #L14a1cc.  call temp:= `a`(v2, v0, v6) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14a1d2.  v4:= temp @kind object;
  #L14a1d4.  goto L14a178;
  #L14a1d6.  v0:= v0 + 1;
  #L14a1da.  goto L14a192;
  #L14a1dc.  call temp:= `isInterface`(v5) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L14a1e2.  v0:= temp;
  #L14a1e4.  if v0 != 0 then goto L14a228;
  #L14a1e8.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L14a1ec.  if v5 == v0 then goto L14a228;
  #L14a1f0.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L14a1f6.  v0:= temp @kind object;
  #L14a1f8.  if v0 != v6 then goto L14a206;
  #L14a1fc.  call temp:= `getGenericSuperclass`(v5) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L14a202.  v4:= temp @kind object;
  #L14a204.  goto L14a178;
  #L14a206.  call temp:= `isAssignableFrom`(v6, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14a20c.  v1:= temp;
  #L14a20e.  if v1 == 0 then goto L14a224;
  #L14a212.  call temp:= `getGenericSuperclass`(v5) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L14a218.  v1:= temp @kind object;
  #L14a21a.  call temp:= `a`(v1, v0, v6) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14a220.  v4:= temp @kind object;
  #L14a222.  goto L14a178;
  #L14a224.  v5:= v0 @kind object;
  #L14a226.  goto L14a1e8;
  #L14a228.  v4:= v6 @kind object;
  #L14a22a.  goto L14a178;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v10 @kind object, `java.lang.Class` v11 @kind object, `java.lang.reflect.Type` v12 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L14a23c.  v2:= 1I;
  #L14a23e.  v3:= 0I;
  #L14a240.  v0:= v12 @kind object;
  #L14a242.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L14a246.  if v1 == 0 then goto L14a262;
  #L14a24a.  v0:= (`java.lang.reflect.TypeVariable`) v0 @kind object;
  #L14a24e.  call temp:= `a`(v10, v11, v0) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @kind static;
  #L14a254.  v12:= temp @kind object;
  #L14a256.  if v12 != v0 then goto L14a25e;
  #L14a25a.  v0:= v12 @kind object;
  #L14a25c.  return v0 @kind object;
  #L14a25e.  v0:= v12 @kind object;
  #L14a260.  goto L14a242;
  #L14a262.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L14a266.  if v1 == 0 then goto L14a29e;
  #L14a26a.  v1:= v0 @kind object;
  #L14a26c.  v1:= (`java.lang.Class`) v1 @kind object;
  #L14a270.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L14a276.  v1:= temp;
  #L14a278.  if v1 == 0 then goto L14a29e;
  #L14a27c.  v0:= (`java.lang.Class`) v0 @kind object;
  #L14a280.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L14a286.  v1:= temp @kind object;
  #L14a288.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14a28e.  v2:= temp @kind object;
  #L14a290.  if v1 == v2 then goto L14a25c;
  #L14a294.  call temp:= `a`(v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @kind static;
  #L14a29a.  v0:= temp @kind object;
  #L14a29c.  goto L14a25c;
  #L14a29e.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L14a2a2.  if v1 == 0 then goto L14a2c8;
  #L14a2a6.  v0:= (`java.lang.reflect.GenericArrayType`) v0 @kind object;
  #L14a2aa.  call temp:= `getGenericComponentType`(v0) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a2b0.  v1:= temp @kind object;
  #L14a2b2.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14a2b8.  v2:= temp @kind object;
  #L14a2ba.  if v1 == v2 then goto L14a25c;
  #L14a2be.  call temp:= `a`(v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @kind static;
  #L14a2c4.  v0:= temp @kind object;
  #L14a2c6.  goto L14a25c;
  #L14a2c8.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14a2cc.  if v1 == 0 then goto L14a34a;
  #L14a2d0.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L14a2d4.  call temp:= `getOwnerType`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a2da.  v1:= temp @kind object;
  #L14a2dc.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14a2e2.  v5:= temp @kind object;
  #L14a2e4.  if v5 == v1 then goto L14a330;
  #L14a2e8.  v1:= v2;
  #L14a2ea.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a2f0.  v4:= temp @kind object;
  #L14a2f2.  v6:= length @variable v4;
  #L14a2f4.  v9:= v3;
  #L14a2f6.  v3:= v1;
  #L14a2f8.  v1:= v4 @kind object;
  #L14a2fa.  v4:= v9;
  #L14a2fc.  if v4 >= v6 then goto L14a334;
  #L14a300.  v7:= v1[v4] @kind object;
  #L14a304.  call temp:= `a`(v10, v11, v7) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14a30a.  v7:= temp @kind object;
  #L14a30c.  v8:= v1[v4] @kind object;
  #L14a310.  if v7 == v8 then goto L14a32a;
  #L14a314.  if v3 != 0 then goto L14a326;
  #L14a318.  call temp:= `clone`(v1) @signature `[Ljava/lang/reflect/Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L14a31e.  v1:= temp @kind object;
  #L14a320.  v1:= (`java.lang.reflect.Type`[]) v1 @kind object;
  #L14a324.  v3:= v2;
  #L14a326.  v1[v4]:= v7 @kind object;
  #L14a32a.  v4:= v4 + 1;
  #L14a32e.  goto L14a2fc;
  #L14a330.  v1:= v3;
  #L14a332.  goto L14a2ea;
  #L14a334.  if v3 == 0 then goto L14a25c;
  #L14a338.  call temp:= `getRawType`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a33e.  v0:= temp @kind object;
  #L14a340.  call temp:= `a`(v5, v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L14a346.  v0:= temp @kind object;
  #L14a348.  goto L14a25c;
  #L14a34a.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L14a34e.  if v1 == 0 then goto L14a25c;
  #L14a352.  v0:= (`java.lang.reflect.WildcardType`) v0 @kind object;
  #L14a356.  call temp:= `getLowerBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a35c.  v1:= temp @kind object;
  #L14a35e.  call temp:= `getUpperBounds`(v0) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a364.  v4:= temp @kind object;
  #L14a366.  v5:= length @variable v1;
  #L14a368.  if v5 != v2 then goto L14a38c;
  #L14a36c.  v2:= v1[v3] @kind object;
  #L14a370.  call temp:= `a`(v10, v11, v2) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14a376.  v2:= temp @kind object;
  #L14a378.  v1:= v1[v3] @kind object;
  #L14a37c.  if v2 == v1 then goto L14a25c;
  #L14a380.  call temp:= `c`(v2) @signature `Lcom/b/a/b/b;.c:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @kind static;
  #L14a386.  v0:= temp @kind object;
  #L14a388.  goto L14a25c;
  #L14a38c.  v1:= length @variable v4;
  #L14a38e.  if v1 != v2 then goto L14a25c;
  #L14a392.  v1:= v4[v3] @kind object;
  #L14a396.  call temp:= `a`(v10, v11, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14a39c.  v1:= temp @kind object;
  #L14a39e.  v2:= v4[v3] @kind object;
  #L14a3a2.  if v1 == v2 then goto L14a25c;
  #L14a3a6.  call temp:= `b`(v1) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @kind static;
  #L14a3ac.  v0:= temp @kind object;
  #L14a3ae.  goto L14a25c;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.reflect.TypeVariable` v5 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L14a3c4.  call temp:= `a`(v5) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @kind static;
  #L14a3ca.  v1:= temp @kind object;
  #L14a3cc.  if v1 != 0 then goto L14a3d2;
  #L14a3d0.  return v5 @kind object;
  #L14a3d2.  call temp:= `a`(v3, v4, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14a3d8.  v0:= temp @kind object;
  #L14a3da.  v2:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14a3de.  if v2 == 0 then goto L14a3d0;
  #L14a3e2.  call temp:= `getTypeParameters`(v1) @signature `Ljava/lang/Class;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;` @kind virtual;
  #L14a3e8.  v1:= temp @kind object;
  #L14a3ea.  call temp:= `a`(v1, v5) @signature `Lcom/b/a/b/b;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L14a3f0.  v1:= temp;
  #L14a3f2.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L14a3f6.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a3fc.  v0:= temp @kind object;
  #L14a3fe.  v5:= v0[v1] @kind object;
  #L14a402.  goto L14a3d0;
}
procedure `boolean` `a`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L14a414.  if v1 == v2 then goto L14a428;
  #L14a418.  if v1 == 0 then goto L14a42c;
  #L14a41c.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14a422.  v0:= temp;
  #L14a424.  if v0 == 0 then goto L14a42c;
  #L14a428.  v0:= 1I;
  #L14a42a.  return v0;
  #L14a42c.  v0:= 0I;
  #L14a42e.  goto L14a42a;
}
procedure `boolean` `a`(`java.lang.reflect.Type` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14a440.  v0:= 1I;
  #L14a442.  v1:= 0I;
  #L14a444.  if v4 != v5 then goto L14a44c;
  #L14a448.  v1:= v0;
  #L14a44a.  return v1;
  #L14a44c.  v2:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L14a450.  if v2 == 0 then goto L14a45e;
  #L14a454.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14a45a.  v1:= temp;
  #L14a45c.  goto L14a44a;
  #L14a45e.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14a462.  if v2 == 0 then goto L14a4d2;
  #L14a466.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14a46a.  if v2 == 0 then goto L14a44a;
  #L14a46e.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L14a472.  v5:= (`java.lang.reflect.ParameterizedType`) v5 @kind object;
  #L14a476.  call temp:= `getOwnerType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a47c.  v2:= temp @kind object;
  #L14a47e.  call temp:= `getOwnerType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a484.  v3:= temp @kind object;
  #L14a486.  call temp:= `a`(v2, v3) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L14a48c.  v2:= temp;
  #L14a48e.  if v2 == 0 then goto L14a4ce;
  #L14a492.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a498.  v2:= temp @kind object;
  #L14a49a.  call temp:= `getRawType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a4a0.  v3:= temp @kind object;
  #L14a4a2.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14a4a8.  v2:= temp;
  #L14a4aa.  if v2 == 0 then goto L14a4ce;
  #L14a4ae.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a4b4.  v2:= temp @kind object;
  #L14a4b6.  call temp:= `getActualTypeArguments`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a4bc.  v3:= temp @kind object;
  #L14a4be.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L14a4c4.  v2:= temp;
  #L14a4c6.  if v2 == 0 then goto L14a4ce;
  #L14a4ca.  v1:= v0;
  #L14a4cc.  goto L14a44a;
  #L14a4ce.  v0:= v1;
  #L14a4d0.  goto L14a4ca;
  #L14a4d2.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L14a4d6.  if v2 == 0 then goto L14a504;
  #L14a4da.  v0:= instanceof @variable v5 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L14a4de.  if v0 == 0 then goto L14a44a;
  #L14a4e2.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L14a4e6.  v5:= (`java.lang.reflect.GenericArrayType`) v5 @kind object;
  #L14a4ea.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a4f0.  v0:= temp @kind object;
  #L14a4f2.  call temp:= `getGenericComponentType`(v5) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a4f8.  v1:= temp @kind object;
  #L14a4fa.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L14a500.  v1:= temp;
  #L14a502.  goto L14a44a;
  #L14a504.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L14a508.  if v2 == 0 then goto L14a55e;
  #L14a50c.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L14a510.  if v2 == 0 then goto L14a44a;
  #L14a514.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L14a518.  v5:= (`java.lang.reflect.WildcardType`) v5 @kind object;
  #L14a51c.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a522.  v2:= temp @kind object;
  #L14a524.  call temp:= `getUpperBounds`(v5) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a52a.  v3:= temp @kind object;
  #L14a52c.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L14a532.  v2:= temp;
  #L14a534.  if v2 == 0 then goto L14a55a;
  #L14a538.  call temp:= `getLowerBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a53e.  v2:= temp @kind object;
  #L14a540.  call temp:= `getLowerBounds`(v5) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a546.  v3:= temp @kind object;
  #L14a548.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L14a54e.  v2:= temp;
  #L14a550.  if v2 == 0 then goto L14a55a;
  #L14a554.  v1:= v0;
  #L14a556.  goto L14a44a;
  #L14a55a.  v0:= v1;
  #L14a55c.  goto L14a554;
  #L14a55e.  v2:= instanceof @variable v4 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L14a562.  if v2 == 0 then goto L14a44a;
  #L14a566.  v2:= instanceof @variable v5 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L14a56a.  if v2 == 0 then goto L14a44a;
  #L14a56e.  v4:= (`java.lang.reflect.TypeVariable`) v4 @kind object;
  #L14a572.  v5:= (`java.lang.reflect.TypeVariable`) v5 @kind object;
  #L14a576.  call temp:= `getGenericDeclaration`(v4) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L14a57c.  v2:= temp @kind object;
  #L14a57e.  call temp:= `getGenericDeclaration`(v5) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L14a584.  v3:= temp @kind object;
  #L14a586.  if v2 != v3 then goto L14a5ac;
  #L14a58a.  call temp:= `getName`(v4) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L14a590.  v2:= temp @kind object;
  #L14a592.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L14a598.  v3:= temp @kind object;
  #L14a59a.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L14a5a0.  v2:= temp;
  #L14a5a2.  if v2 == 0 then goto L14a5ac;
  #L14a5a6.  v1:= v0;
  #L14a5a8.  goto L14a44a;
  #L14a5ac.  v0:= v1;
  #L14a5ae.  goto L14a5a6;
}
procedure `java.lang.reflect.Type` `b`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;

  #L14a5c0.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L14a5c6.  v0:= temp;
  #L14a5c8.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L14a5ce.  call temp:= `a`(v1, v2, v3) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14a5d4.  v0:= temp @kind object;
  #L14a5d6.  call temp:= `a`(v1, v2, v0) @signature `Lcom/b/a/b/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14a5dc.  v0:= temp @kind object;
  #L14a5de.  return v0 @kind object;
}
procedure `java.lang.reflect.WildcardType` `b`(`java.lang.reflect.Type` v3 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L14a5f0.  v0:= new `com.b.a.b.b$c`;
  #L14a5f4.  v1:= 1I;
  #L14a5f6.  v1:= new `java.lang.reflect.Type`[v1];
  #L14a5fa.  v2:= 0I;
  #L14a5fc.  v1[v2]:= v3 @kind object;
  #L14a600.  v2:= `@@com.b.a.b.b.a` @type ^`java.lang.reflect.Type`[] @kind object;
  #L14a604.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L14a60a.  return v0 @kind object;
}
procedure `java.lang.reflect.Type`[] `b`(`java.lang.reflect.Type` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L14a61c.  v4:= 2I;
  #L14a61e.  v3:= 1I;
  #L14a620.  v2:= 0I;
  #L14a622.  v0:= constclass @type ^`java.util.Properties` @kind object;
  #L14a626.  if v5 != v0 then goto L14a640;
  #L14a62a.  v0:= new `java.lang.reflect.Type`[v4];
  #L14a62e.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L14a632.  v0[v2]:= v1 @kind object;
  #L14a636.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L14a63a.  v0[v3]:= v1 @kind object;
  #L14a63e.  return v0 @kind object;
  #L14a640.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L14a644.  call temp:= `b`(v5, v6, v0) @signature `Lcom/b/a/b/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L14a64a.  v0:= temp @kind object;
  #L14a64c.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14a650.  if v1 == 0 then goto L14a662;
  #L14a654.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L14a658.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a65e.  v0:= temp @kind object;
  #L14a660.  goto L14a63e;
  #L14a662.  v0:= new `java.lang.reflect.Type`[v4];
  #L14a666.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L14a66a.  v0[v2]:= v1 @kind object;
  #L14a66e.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L14a672.  v0[v3]:= v1 @kind object;
  #L14a676.  goto L14a63e;
}
procedure `java.lang.reflect.WildcardType` `c`(`java.lang.reflect.Type` v5 @kind object) @signature `Lcom/b/a/b/b;.c:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L14a688.  v4:= 1I;
  #L14a68a.  v3:= 0I;
  #L14a68c.  v0:= new `com.b.a.b.b$c`;
  #L14a690.  v1:= new `java.lang.reflect.Type`[v4];
  #L14a694.  v2:= constclass @type ^`java.lang.Object` @kind object;
  #L14a698.  v1[v3]:= v2 @kind object;
  #L14a69c.  v2:= new `java.lang.reflect.Type`[v4];
  #L14a6a0.  v2[v3]:= v5 @kind object;
  #L14a6a4.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L14a6aa.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `d`(`java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14a6bc.  v0:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L14a6c0.  if v0 == 0 then goto L14a6f8;
  #L14a6c4.  v4:= (`java.lang.Class`) v4 @kind object;
  #L14a6c8.  call temp:= `isArray`(v4) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L14a6ce.  v0:= temp;
  #L14a6d0.  if v0 == 0 then goto L14a6f4;
  #L14a6d4.  v0:= new `com.b.a.b.b$a`;
  #L14a6d8.  call temp:= `getComponentType`(v4) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L14a6de.  v1:= temp @kind object;
  #L14a6e0.  call temp:= `d`(v1) @signature `Lcom/b/a/b/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L14a6e6.  v1:= temp @kind object;
  #L14a6e8.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L14a6ee.  v0:= (`java.lang.reflect.Type`) v0 @kind object;
  #L14a6f2.  return v0 @kind object;
  #L14a6f4.  v0:= v4 @kind object;
  #L14a6f6.  goto L14a6ee;
  #L14a6f8.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14a6fc.  if v0 == 0 then goto L14a728;
  #L14a700.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L14a704.  v0:= new `com.b.a.b.b$b`;
  #L14a708.  call temp:= `getOwnerType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a70e.  v1:= temp @kind object;
  #L14a710.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a716.  v2:= temp @kind object;
  #L14a718.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a71e.  v3:= temp @kind object;
  #L14a720.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/b/a/b/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L14a726.  goto L14a6f2;
  #L14a728.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L14a72c.  if v0 == 0 then goto L14a748;
  #L14a730.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L14a734.  v0:= new `com.b.a.b.b$a`;
  #L14a738.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a73e.  v1:= temp @kind object;
  #L14a740.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L14a746.  goto L14a6f2;
  #L14a748.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L14a74c.  if v0 == 0 then goto L14a770;
  #L14a750.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L14a754.  v0:= new `com.b.a.b.b$c`;
  #L14a758.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a75e.  v1:= temp @kind object;
  #L14a760.  call temp:= `getLowerBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a766.  v2:= temp @kind object;
  #L14a768.  call `<init>`(v0, v1, v2) @signature `Lcom/b/a/b/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L14a76e.  goto L14a6f2;
  #L14a770.  v0:= v4 @kind object;
  #L14a772.  goto L14a6f2;
}
procedure `java.lang.Class` `e`(`java.lang.reflect.Type` v4 @kind object) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14a784.  v1:= 0I;
  #L14a786.  v0:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L14a78a.  if v0 == 0 then goto L14a794;
  #L14a78e.  v4:= (`java.lang.Class`) v4 @kind object;
  #L14a792.  return v4 @kind object;
  #L14a794.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L14a798.  if v0 == 0 then goto L14a7ba;
  #L14a79c.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L14a7a0.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a7a6.  v0:= temp @kind object;
  #L14a7a8.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L14a7ac.  call `a`(v1) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L14a7b2.  v0:= (`java.lang.Class`) v0 @kind object;
  #L14a7b6.  v4:= v0 @kind object;
  #L14a7b8.  goto L14a792;
  #L14a7ba.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L14a7be.  if v0 == 0 then goto L14a7e8;
  #L14a7c2.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L14a7c6.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a7cc.  v0:= temp @kind object;
  #L14a7ce.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L14a7d4.  v0:= temp @kind object;
  #L14a7d6.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L14a7dc.  v0:= temp @kind object;
  #L14a7de.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14a7e4.  v4:= temp @kind object;
  #L14a7e6.  goto L14a792;
  #L14a7e8.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L14a7ec.  if v0 == 0 then goto L14a7f6;
  #L14a7f0.  v4:= constclass @type ^`java.lang.Object` @kind object;
  #L14a7f4.  goto L14a792;
  #L14a7f6.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L14a7fa.  if v0 == 0 then goto L14a818;
  #L14a7fe.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L14a802.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L14a808.  v0:= temp @kind object;
  #L14a80a.  v0:= v0[v1] @kind object;
  #L14a80e.  call temp:= `e`(v0) @signature `Lcom/b/a/b/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L14a814.  v4:= temp @kind object;
  #L14a816.  goto L14a792;
  #L14a818.  if v4 != 0 then goto L14a866;
  #L14a81c.  v0:= "null" @kind object;
  #L14a820.  v1:= new `java.lang.IllegalArgumentException`;
  #L14a824.  v2:= new `java.lang.StringBuilder`;
  #L14a828.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14a82e.  v3:= "Expected a Class, ParameterizedType, or GenericArrayType, but <" @kind object;
  #L14a832.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a838.  v2:= temp @kind object;
  #L14a83a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a840.  v2:= temp @kind object;
  #L14a842.  v3:= "> is of type " @kind object;
  #L14a846.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a84c.  v2:= temp @kind object;
  #L14a84e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14a854.  v0:= temp @kind object;
  #L14a856.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a85c.  v0:= temp @kind object;
  #L14a85e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14a864.  throw v1;
  #L14a866.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14a86c.  v0:= temp @kind object;
  #L14a86e.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L14a874.  v0:= temp @kind object;
  #L14a876.  goto L14a820;
}
procedure `java.lang.String` `f`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14a888.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L14a88c.  if v0 == 0 then goto L14a89e;
  #L14a890.  v1:= (`java.lang.Class`) v1 @kind object;
  #L14a894.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L14a89a.  v0:= temp @kind object;
  #L14a89c.  return v0 @kind object;
  #L14a89e.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L14a8a4.  v0:= temp @kind object;
  #L14a8a6.  goto L14a89c;
}
procedure `java.lang.reflect.Type` `g`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.g:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14a8b8.  v0:= instanceof @variable v1 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L14a8bc.  if v0 == 0 then goto L14a8ce;
  #L14a8c0.  v1:= (`java.lang.reflect.GenericArrayType`) v1 @kind object;
  #L14a8c4.  call temp:= `getGenericComponentType`(v1) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L14a8ca.  v0:= temp @kind object;
  #L14a8cc.  return v0 @kind object;
  #L14a8ce.  v1:= (`java.lang.Class`) v1 @kind object;
  #L14a8d2.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L14a8d8.  v0:= temp @kind object;
  #L14a8da.  goto L14a8cc;
}
procedure `void` `h`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/b/a/b/b;.h:(Ljava/lang/reflect/Type;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L14a8ec.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L14a8f0.  if v0 == 0 then goto L14a904;
  #L14a8f4.  v1:= (`java.lang.Class`) v1 @kind object;
  #L14a8f8.  call temp:= `isPrimitive`(v1) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L14a8fe.  v0:= temp;
  #L14a900.  if v0 != 0 then goto L14a90e;
  #L14a904.  v0:= 1I;
  #L14a906.  call `a`(v0) @signature `Lcom/b/a/b/a;.a:(Z)V` @kind static;
  #L14a90c.  return @kind void;
  #L14a90e.  v0:= 0I;
  #L14a910.  goto L14a906;
}

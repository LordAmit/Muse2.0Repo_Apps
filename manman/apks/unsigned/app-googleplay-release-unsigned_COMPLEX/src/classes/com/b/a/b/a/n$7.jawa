record `com.b.a.b.a.n$7` @kind class @AccessFlag FINAL extends `com.b.a.v` @kind class {
}
procedure `void` `<init>`(`com.b.a.b.a.n$7` v0 @kind this) @signature `Lcom/b/a/b/a/n$7;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1492a8.  call `<init>`(v0) @signature `Lcom/b/a/v;.<init>:()V` @kind direct;
  #L1492ae.  return @kind void;
}
procedure `java.lang.Character` `a`(`com.b.a.b.a.n$7` v4 @kind this, `com.b.a.d.a` v5 @kind object) @signature `Lcom/b/a/b/a/n$7;.a:(Lcom/b/a/d/a;)Ljava/lang/Character;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1492c0.  call temp:= `f`(v5) @signature `Lcom/b/a/d/a;.f:()Lcom/b/a/d/b;` @kind virtual;
  #L1492c6.  v0:= temp @kind object;
  #L1492c8.  v1:= `@@com.b.a.d.b.i` @type ^`com.b.a.d.b` @kind object;
  #L1492cc.  if v0 != v1 then goto L1492da;
  #L1492d0.  call `j`(v5) @signature `Lcom/b/a/d/a;.j:()V` @kind virtual;
  #L1492d6.  v0:= 0I;
  #L1492d8.  return v0 @kind object;
  #L1492da.  call temp:= `h`(v5) @signature `Lcom/b/a/d/a;.h:()Ljava/lang/String;` @kind virtual;
  #L1492e0.  v0:= temp @kind object;
  #L1492e2.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1492e8.  v1:= temp;
  #L1492ea.  v2:= 1I;
  #L1492ec.  if v1 == v2 then goto L149322;
  #L1492f0.  v1:= new `com.b.a.t`;
  #L1492f4.  v2:= new `java.lang.StringBuilder`;
  #L1492f8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1492fe.  v3:= "Expecting character, got: " @kind object;
  #L149302.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149308.  v2:= temp @kind object;
  #L14930a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L149310.  v0:= temp @kind object;
  #L149312.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L149318.  v0:= temp @kind object;
  #L14931a.  call `<init>`(v1, v0) @signature `Lcom/b/a/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L149320.  throw v1;
  #L149322.  v1:= 0I;
  #L149324.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14932a.  v0:= temp;
  #L14932c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L149332.  v0:= temp @kind object;
  #L149334.  goto L1492d8;
}
procedure `void` `a`(`com.b.a.b.a.n$7` v1 @kind this, `com.b.a.d.c` v2 @kind object, `java.lang.Character` v3 @kind object) @signature `Lcom/b/a/b/a/n$7;.a:(Lcom/b/a/d/c;Ljava/lang/Character;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L149348.  if v3 != 0 then goto L149356;
  #L14934c.  v0:= 0I;
  #L14934e.  call temp:= `b`(v2, v0) @signature `Lcom/b/a/d/c;.b:(Ljava/lang/String;)Lcom/b/a/d/c;` @kind virtual;
  #L149354.  return @kind void;
  #L149356.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L14935c.  v0:= temp @kind object;
  #L14935e.  goto L14934e;
}
procedure `void` `a`(`com.b.a.b.a.n$7` v0 @kind this, `com.b.a.d.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/b/a/b/a/n$7;.a:(Lcom/b/a/d/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L149370.  v2:= (`java.lang.Character`) v2 @kind object;
  #L149374.  call `a`(v0, v1, v2) @signature `Lcom/b/a/b/a/n$7;.a:(Lcom/b/a/d/c;Ljava/lang/Character;)V` @kind virtual;
  #L14937a.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.b.a.b.a.n$7` v1 @kind this, `com.b.a.d.a` v2 @kind object) @signature `Lcom/b/a/b/a/n$7;.b:(Lcom/b/a/d/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L14938c.  call temp:= `a`(v1, v2) @signature `Lcom/b/a/b/a/n$7;.a:(Lcom/b/a/d/a;)Ljava/lang/Character;` @kind virtual;
  #L149392.  v0:= temp @kind object;
  #L149394.  return v0 @kind object;
}

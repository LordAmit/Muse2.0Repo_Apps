record `com.b.a.b.k` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.b.a.b.k` v0 @kind this) @signature `Lcom/b/a/b/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L14c674.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14c67a.  return @kind void;
}
procedure `com.b.a.b.k` `a`() @signature `Lcom/b/a/b/k;.a:()Lcom/b/a/b/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #Try_start0.  
  #L14c68c.  v0:= "sun.misc.Unsafe" @kind object;
  #L14c690.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L14c696.  v0:= temp @kind object;
  #L14c698.  v1:= "theUnsafe" @kind object;
  #L14c69c.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L14c6a2.  v1:= temp @kind object;
  #L14c6a4.  v2:= 1I;
  #L14c6a6.  call `setAccessible`(v1, v2) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L14c6ac.  v2:= 0I;
  #L14c6ae.  call temp:= `get`(v1, v2) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L14c6b4.  v1:= temp @kind object;
  #L14c6b6.  v2:= "allocateInstance" @kind object;
  #L14c6ba.  v3:= 1I;
  #L14c6bc.  v3:= new `java.lang.Class`[v3];
  #L14c6c0.  v4:= 0I;
  #L14c6c2.  v5:= constclass @type ^`java.lang.Class` @kind object;
  #L14c6c6.  v3[v4]:= v5 @kind object;
  #L14c6ca.  call temp:= `getMethod`(v0, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L14c6d0.  v2:= temp @kind object;
  #L14c6d2.  v0:= new `com.b.a.b.k$1`;
  #L14c6d6.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/k$1;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/Object;)V` @kind direct;
  #Try_end0.  
  #L14c6dc.  return v0 @kind object;
  #L14c6de.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #Try_start1.  
  #L14c6e0.  v0:= constclass @type ^`java.io.ObjectStreamClass` @kind object;
  #L14c6e4.  v1:= "getConstructorId" @kind object;
  #L14c6e8.  v2:= 1I;
  #L14c6ea.  v2:= new `java.lang.Class`[v2];
  #L14c6ee.  v3:= 0I;
  #L14c6f0.  v4:= constclass @type ^`java.lang.Class` @kind object;
  #L14c6f4.  v2[v3]:= v4 @kind object;
  #L14c6f8.  call temp:= `getDeclaredMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L14c6fe.  v0:= temp @kind object;
  #L14c700.  v1:= 1I;
  #L14c702.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L14c708.  v1:= 0I;
  #L14c70a.  v2:= 1I;
  #L14c70c.  v2:= new `java.lang.Object`[v2];
  #L14c710.  v3:= 0I;
  #L14c712.  v4:= constclass @type ^`java.lang.Object` @kind object;
  #L14c716.  v2[v3]:= v4 @kind object;
  #L14c71a.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L14c720.  v0:= temp @kind object;
  #L14c722.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L14c726.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L14c72c.  v1:= temp;
  #L14c72e.  v0:= constclass @type ^`java.io.ObjectStreamClass` @kind object;
  #L14c732.  v2:= "newInstance" @kind object;
  #L14c736.  v3:= 2I;
  #L14c738.  v3:= new `java.lang.Class`[v3];
  #L14c73c.  v4:= 0I;
  #L14c73e.  v5:= constclass @type ^`java.lang.Class` @kind object;
  #L14c742.  v3[v4]:= v5 @kind object;
  #L14c746.  v4:= 1I;
  #L14c748.  v5:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L14c74c.  v3[v4]:= v5 @kind object;
  #L14c750.  call temp:= `getDeclaredMethod`(v0, v2, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L14c756.  v2:= temp @kind object;
  #L14c758.  v0:= 1I;
  #L14c75a.  call `setAccessible`(v2, v0) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L14c760.  v0:= new `com.b.a.b.k$2`;
  #L14c764.  call `<init>`(v0, v2, v1) @signature `Lcom/b/a/b/k$2;.<init>:(Ljava/lang/reflect/Method;I)V` @kind direct;
  #Try_end1.  
  #L14c76a.  goto L14c6dc;
  #L14c76c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #Try_start2.  
  #L14c76e.  v0:= constclass @type ^`java.io.ObjectInputStream` @kind object;
  #L14c772.  v1:= "newInstance" @kind object;
  #L14c776.  v2:= 2I;
  #L14c778.  v2:= new `java.lang.Class`[v2];
  #L14c77c.  v3:= 0I;
  #L14c77e.  v4:= constclass @type ^`java.lang.Class` @kind object;
  #L14c782.  v2[v3]:= v4 @kind object;
  #L14c786.  v3:= 1I;
  #L14c788.  v4:= constclass @type ^`java.lang.Class` @kind object;
  #L14c78c.  v2[v3]:= v4 @kind object;
  #L14c790.  call temp:= `getDeclaredMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L14c796.  v1:= temp @kind object;
  #L14c798.  v0:= 1I;
  #L14c79a.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L14c7a0.  v0:= new `com.b.a.b.k$3`;
  #L14c7a4.  call `<init>`(v0, v1) @signature `Lcom/b/a/b/k$3;.<init>:(Ljava/lang/reflect/Method;)V` @kind direct;
  #Try_end2.  
  #L14c7aa.  goto L14c6dc;
  #L14c7ac.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L14c7ae.  v0:= new `com.b.a.b.k$4`;
  #L14c7b2.  call `<init>`(v0) @signature `Lcom/b/a/b/k$4;.<init>:()V` @kind direct;
  #L14c7b8.  goto L14c6dc;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L14c6de;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L14c76c;
  catch `java.lang.Exception` @[Try_start2..Try_end2] goto L14c7ac;
}
procedure `void` `b`(`java.lang.Class` v0 @kind object) @signature `Lcom/b/a/b/k;.b:(Ljava/lang/Class;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L14c7f4.  call `c`(v0) @signature `Lcom/b/a/b/k;.c:(Ljava/lang/Class;)V` @kind static;
  #L14c7fa.  return @kind void;
}
procedure `void` `c`(`java.lang.Class` v3 @kind object) @signature `Lcom/b/a/b/k;.c:(Ljava/lang/Class;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L14c80c.  call temp:= `getModifiers`(v3) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L14c812.  v0:= temp;
  #L14c814.  call temp:= `isInterface`(v0) @signature `Ljava/lang/reflect/Modifier;.isInterface:(I)Z` @kind static;
  #L14c81a.  v1:= temp;
  #L14c81c.  if v1 == 0 then goto L14c85a;
  #L14c820.  v0:= new `java.lang.UnsupportedOperationException`;
  #L14c824.  v1:= new `java.lang.StringBuilder`;
  #L14c828.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14c82e.  v2:= "Interface can't be instantiated! Interface name: " @kind object;
  #L14c832.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c838.  v1:= temp @kind object;
  #L14c83a.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L14c840.  v2:= temp @kind object;
  #L14c842.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c848.  v1:= temp @kind object;
  #L14c84a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14c850.  v1:= temp @kind object;
  #L14c852.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14c858.  throw v0;
  #L14c85a.  call temp:= `isAbstract`(v0) @signature `Ljava/lang/reflect/Modifier;.isAbstract:(I)Z` @kind static;
  #L14c860.  v0:= temp;
  #L14c862.  if v0 == 0 then goto L14c8a0;
  #L14c866.  v0:= new `java.lang.UnsupportedOperationException`;
  #L14c86a.  v1:= new `java.lang.StringBuilder`;
  #L14c86e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14c874.  v2:= "Abstract class can't be instantiated! Class name: " @kind object;
  #L14c878.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c87e.  v1:= temp @kind object;
  #L14c880.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L14c886.  v2:= temp @kind object;
  #L14c888.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14c88e.  v1:= temp @kind object;
  #L14c890.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14c896.  v1:= temp @kind object;
  #L14c898.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14c89e.  throw v0;
  #L14c8a0.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.lang.Class` v0 @kind object) @signature `Lcom/b/a/b/k;.a:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}

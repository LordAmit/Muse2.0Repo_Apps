record `com.j256.ormlite.stmt.mapped.MappedUpdate` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
  `com.j256.ormlite.field.FieldType` `com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @AccessFlag PRIVATE_FINAL;
  `int` `com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedUpdate` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object, `com.j256.ormlite.field.FieldType` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16d03c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L16d042.  v0.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` := v4 @kind object;
  #L16d046.  v0.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @type ^`int` := v5;
  #L16d04a.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedUpdate` `build`(`com.j256.ormlite.db.DatabaseType` v13 @kind object, `com.j256.ormlite.table.TableInfo` v14 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedUpdate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L16d05c.  call temp:= `getIdField`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16d062.  v7:= temp @kind object;
  #L16d064.  if v7 != 0 then goto L16d0ae;
  #L16d068.  v0:= new `java.sql.SQLException`;
  #L16d06c.  v1:= new `java.lang.StringBuilder`;
  #L16d070.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16d076.  v2:= "Cannot update " @kind object;
  #L16d07a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d080.  v1:= temp @kind object;
  #L16d082.  call temp:= `getDataClass`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L16d088.  v2:= temp @kind object;
  #L16d08a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d090.  v1:= temp @kind object;
  #L16d092.  v2:= " because it doesn't have an id field" @kind object;
  #L16d096.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d09c.  v1:= temp @kind object;
  #L16d09e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16d0a4.  v1:= temp @kind object;
  #L16d0a6.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16d0ac.  throw v0;
  #L16d0ae.  v8:= new `java.lang.StringBuilder`;
  #L16d0b2.  v0:= 64I;
  #L16d0b6.  call `<init>`(v8, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L16d0bc.  v0:= "UPDATE " @kind object;
  #L16d0c0.  call temp:= `getTableName`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16d0c6.  v1:= temp @kind object;
  #L16d0c8.  call `appendTableName`(v13, v8, v0, v1) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L16d0ce.  v2:= 1I;
  #L16d0d0.  v1:= 0I;
  #L16d0d2.  v4:= 0I;
  #L16d0d4.  v5:= -1I;
  #L16d0d6.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16d0dc.  v6:= temp @kind object;
  #L16d0de.  v9:= length @variable v6;
  #L16d0e0.  v0:= 0I;
  #L16d0e2.  v3:= v0;
  #L16d0e4.  v0:= v1;
  #L16d0e6.  if v3 >= v9 then goto L16d116;
  #L16d0ea.  v1:= v6[v3] @kind object;
  #L16d0ee.  call temp:= `isFieldUpdatable`(v1, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L16d0f4.  v10:= temp;
  #L16d0f6.  if v10 == 0 then goto L16d10e;
  #L16d0fa.  call temp:= `isVersion`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isVersion:()Z` @kind virtual;
  #L16d100.  v10:= temp;
  #L16d102.  if v10 == 0 then goto L16d10a;
  #L16d106.  v5:= v0;
  #L16d108.  v4:= v1 @kind object;
  #L16d10a.  v0:= v0 + 1;
  #L16d10e.  v1:= v3 + 1;
  #L16d112.  v3:= v1;
  #L16d114.  goto L16d0e6;
  #L16d116.  v0:= v0 + 1;
  #L16d11a.  if v4 == 0 then goto L16d122;
  #L16d11e.  v0:= v0 + 1;
  #L16d122.  v3:= new `com.j256.ormlite.field.FieldType`[v0];
  #L16d126.  v1:= 0I;
  #L16d128.  call temp:= `getFieldTypes`(v14) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16d12e.  v9:= temp @kind object;
  #L16d130.  v10:= length @variable v9;
  #L16d132.  v0:= 0I;
  #L16d134.  v6:= v0;
  #L16d136.  v0:= v2;
  #L16d138.  if v6 >= v10 then goto L16d19c;
  #L16d13c.  v11:= v9[v6] @kind object;
  #L16d140.  call temp:= `isFieldUpdatable`(v11, v7) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @kind static;
  #L16d146.  v2:= temp;
  #L16d148.  if v2 != 0 then goto L16d160;
  #L16d14c.  v12:= v1;
  #L16d14e.  v1:= v0;
  #L16d150.  v0:= v12;
  #L16d152.  v2:= v6 + 1;
  #L16d156.  v6:= v2;
  #L16d158.  v12:= v0;
  #L16d15a.  v0:= v1;
  #L16d15c.  v1:= v12;
  #L16d15e.  goto L16d138;
  #L16d160.  if v0 == 0 then goto L16d190;
  #L16d164.  v0:= "SET " @kind object;
  #L16d168.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d16e.  v0:= 0I;
  #L16d170.  v2:= 0I;
  #L16d172.  call `appendFieldColumnName`(v13, v8, v11, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L16d178.  v2:= v1 + 1;
  #L16d17c.  v3[v1]:= v11 @kind object;
  #L16d180.  v1:= "= ?" @kind object;
  #L16d184.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d18a.  v1:= v0;
  #L16d18c.  v0:= v2;
  #L16d18e.  goto L16d152;
  #L16d190.  v2:= ", " @kind object;
  #L16d194.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d19a.  goto L16d170;
  #L16d19c.  v0:= 32I;
  #L16d1a0.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d1a6.  v0:= 0I;
  #L16d1a8.  call `appendWhereFieldEq`(v13, v7, v8, v0) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L16d1ae.  v0:= v1 + 1;
  #L16d1b2.  v3[v1]:= v7 @kind object;
  #L16d1b6.  if v4 == 0 then goto L16d1de;
  #L16d1ba.  v1:= " AND " @kind object;
  #L16d1be.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d1c4.  v1:= 0I;
  #L16d1c6.  call `appendFieldColumnName`(v13, v8, v4, v1) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.appendFieldColumnName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Lcom/j256/ormlite/field/FieldType;Ljava/util/List;)V` @kind static;
  #L16d1cc.  v1:= "= ?" @kind object;
  #L16d1d0.  call temp:= `append`(v8, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d1d6.  v1:= v0 + 1;
  #L16d1da.  v3[v0]:= v4 @kind object;
  #L16d1de.  v0:= new `com.j256.ormlite.stmt.mapped.MappedUpdate`;
  #L16d1e2.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16d1e8.  v2:= temp @kind object;
  #L16d1ea.  v1:= v14 @kind object;
  #L16d1ec.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;I)V` @kind direct;
  #L16d1f2.  return v0 @kind object;
}
procedure `boolean` `isFieldUpdatable`(`com.j256.ormlite.field.FieldType` v1 @kind object, `com.j256.ormlite.field.FieldType` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.isFieldUpdatable:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/field/FieldType;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L16d204.  if v1 == v2 then goto L16d220;
  #L16d208.  call temp:= `isForeignCollection`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isForeignCollection:()Z` @kind virtual;
  #L16d20e.  v0:= temp;
  #L16d210.  if v0 != 0 then goto L16d220;
  #L16d214.  call temp:= `isReadOnly`(v1) @signature `Lcom/j256/ormlite/field/FieldType;.isReadOnly:()Z` @kind virtual;
  #L16d21a.  v0:= temp;
  #L16d21c.  if v0 == 0 then goto L16d224;
  #L16d220.  v0:= 0I;
  #L16d222.  return v0;
  #L16d224.  v0:= 1I;
  #L16d226.  goto L16d222;
}
procedure `int` `update`(`com.j256.ormlite.stmt.mapped.MappedUpdate` v9 @kind this, `com.j256.ormlite.support.DatabaseConnection` v10 @kind object, `java.lang.Object` v11 @kind object, `com.j256.ormlite.dao.ObjectCache` v12 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.update:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L16d238.  v1:= 0I;
  #L16d23a.  v0:= 0I;
  #Try_start0.  
  #L16d23c.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16d240.  v2:= length @variable v2;
  #L16d242.  v3:= 1I;
  #L16d244.  if v2 > v3 then goto L16d24a;
  #L16d248.  return v0;
  #L16d24a.  call temp:= `getFieldObjects`(v9, v11) @signature `Lcom/j256/ormlite/stmt/mapped/MappedUpdate;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L16d250.  v3:= temp @kind object;
  #L16d252.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16d256.  if v2 == 0 then goto L16d38c;
  #L16d25a.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16d25e.  call temp:= `extractJavaFieldValue`(v1, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16d264.  v1:= temp @kind object;
  #L16d266.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16d26a.  call temp:= `moveToNextValue`(v2, v1) @signature `Lcom/j256/ormlite/field/FieldType;.moveToNextValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16d270.  v1:= temp @kind object;
  #L16d272.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldTypeIndex` @type ^`int`;
  #L16d276.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16d27a.  call temp:= `convertJavaFieldToSqlArgValue`(v4, v1) @signature `Lcom/j256/ormlite/field/FieldType;.convertJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16d280.  v4:= temp @kind object;
  #L16d282.  v3[v2]:= v4 @kind object;
  #L16d286.  v2:= v1 @kind object;
  #L16d288.  v1:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L16d28c.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16d290.  call temp:= `update`(v10, v1, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L16d296.  v1:= temp;
  #L16d298.  if v1 <= 0 then goto L16d306;
  #L16d29c.  if v2 == 0 then goto L16d2ae;
  #L16d2a0.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.versionFieldType` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16d2a4.  v5:= 0I;
  #L16d2a6.  v6:= 0I;
  #L16d2a8.  call `assignField`(v4, v11, v2, v5, v6) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L16d2ae.  if v12 == 0 then goto L16d306;
  #L16d2b2.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16d2b6.  call temp:= `extractJavaFieldValue`(v2, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16d2bc.  v2:= temp @kind object;
  #L16d2be.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.clazz` @type ^`java.lang.Class` @kind object;
  #L16d2c2.  call temp:= `get`(v12, v4, v2) @signature `Lcom/j256/ormlite/dao/ObjectCache;.get:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16d2c8.  v2:= temp @kind object;
  #L16d2ca.  if v2 == 0 then goto L16d306;
  #L16d2ce.  if v2 == v11 then goto L16d306;
  #L16d2d2.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.tableInfo` @type ^`com.j256.ormlite.table.TableInfo` @kind object;
  #L16d2d6.  call temp:= `getFieldTypes`(v4) @signature `Lcom/j256/ormlite/table/TableInfo;.getFieldTypes:()[Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16d2dc.  v4:= temp @kind object;
  #L16d2de.  v5:= length @variable v4;
  #L16d2e0.  if v0 >= v5 then goto L16d306;
  #L16d2e4.  v6:= v4[v0] @kind object;
  #L16d2e8.  v7:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16d2ec.  if v6 == v7 then goto L16d300;
  #L16d2f0.  call temp:= `extractJavaFieldValue`(v6, v11) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16d2f6.  v7:= temp @kind object;
  #L16d2f8.  v8:= 0I;
  #L16d2fa.  call `assignField`(v6, v2, v7, v8, v12) @signature `Lcom/j256/ormlite/field/FieldType;.assignField:(Ljava/lang/Object;Ljava/lang/Object;ZLcom/j256/ormlite/dao/ObjectCache;)V` @kind virtual;
  #L16d300.  v0:= v0 + 1;
  #L16d304.  goto L16d2e0;
  #L16d306.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedUpdate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16d30a.  v2:= "update data with statement '{}' and {} args, changed {} rows" @kind object;
  #L16d30e.  v4:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L16d312.  v5:= length @variable v3;
  #L16d314.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16d31a.  v5:= temp @kind object;
  #L16d31c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16d322.  v6:= temp @kind object;
  #L16d324.  call `debug`(v0, v2, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L16d32a.  v0:= length @variable v3;
  #L16d32c.  if v0 <= 0 then goto L16d33e;
  #L16d330.  v0:= `@@com.j256.ormlite.stmt.mapped.MappedUpdate.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16d334.  v2:= "update arguments: {}" @kind object;
  #L16d338.  call `trace`(v0, v2, v3) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L16d33e.  v0:= v1;
  #L16d340.  goto L16d248;
  #L16d342.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16d344.  v1:= new `java.lang.StringBuilder`;
  #L16d348.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16d34e.  v2:= "Unable to run update stmt on object " @kind object;
  #L16d352.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d358.  v1:= temp @kind object;
  #L16d35a.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d360.  v1:= temp @kind object;
  #L16d362.  v2:= ": " @kind object;
  #L16d366.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d36c.  v1:= temp @kind object;
  #L16d36e.  v2:= v9.`com.j256.ormlite.stmt.mapped.MappedUpdate.statement` @type ^`java.lang.String` @kind object;
  #L16d372.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16d378.  v1:= temp @kind object;
  #L16d37a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16d380.  v1:= temp @kind object;
  #L16d382.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16d388.  v0:= temp @kind object;
  #L16d38a.  throw v0;
  #L16d38c.  v2:= v1 @kind object;
  #L16d38e.  goto L16d288;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16d342;
}

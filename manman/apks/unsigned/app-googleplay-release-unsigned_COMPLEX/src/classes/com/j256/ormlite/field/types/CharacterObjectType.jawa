record `com.j256.ormlite.field.types.CharacterObjectType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
global `com.j256.ormlite.field.types.CharacterObjectType` `@@com.j256.ormlite.field.types.CharacterObjectType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1618f8.  v0:= new `com.j256.ormlite.field.types.CharacterObjectType`;
  #L1618fc.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.<init>:()V` @kind direct;
  #L161902.  `@@com.j256.ormlite.field.types.CharacterObjectType.singleTon` @type ^`com.j256.ormlite.field.types.CharacterObjectType` := v0 @kind object;
  #L161906.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.CharacterObjectType` v4 @kind this) @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L161918.  v0:= `@@com.j256.ormlite.field.SqlType.CHAR` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L16191c.  v1:= 1I;
  #L16191e.  v1:= new `java.lang.Class`[v1];
  #L161922.  v2:= 0I;
  #L161924.  v3:= constclass @type ^`java.lang.Character` @kind object;
  #L161928.  v1[v2]:= v3 @kind object;
  #L16192c.  call `<init>`(v4, v0, v1) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L161932.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.CharacterObjectType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L161944.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16194a.  return @kind void;
}
procedure `com.j256.ormlite.field.types.CharacterObjectType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.getSingleton:()Lcom/j256/ormlite/field/types/CharacterObjectType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16195c.  v0:= `@@com.j256.ormlite.field.types.CharacterObjectType.singleTon` @type ^`com.j256.ormlite.field.types.CharacterObjectType` @kind object;
  #L161960.  return v0 @kind object;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.CharacterObjectType` v3 @kind this, `com.j256.ormlite.field.FieldType` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L161974.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L16197a.  v0:= temp;
  #L16197c.  v1:= 1I;
  #L16197e.  if v0 == v1 then goto L1619d4;
  #L161982.  v0:= new `java.sql.SQLException`;
  #L161986.  v1:= new `java.lang.StringBuilder`;
  #L16198a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L161990.  v2:= "Problems with field " @kind object;
  #L161994.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16199a.  v1:= temp @kind object;
  #L16199c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1619a2.  v1:= temp @kind object;
  #L1619a4.  v2:= ", default string to long for Character: '" @kind object;
  #L1619a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1619ae.  v1:= temp @kind object;
  #L1619b0.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1619b6.  v1:= temp @kind object;
  #L1619b8.  v2:= "'" @kind object;
  #L1619bc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1619c2.  v1:= temp @kind object;
  #L1619c4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1619ca.  v1:= temp @kind object;
  #L1619cc.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1619d2.  throw v0;
  #L1619d4.  v0:= 0I;
  #L1619d6.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1619dc.  v0:= temp;
  #L1619de.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1619e4.  v0:= temp @kind object;
  #L1619e6.  return v0 @kind object;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.CharacterObjectType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/CharacterObjectType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1619f8.  call temp:= `getChar`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getChar:(I)C` @kind interface;
  #L1619fe.  v0:= temp;
  #L161a00.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L161a06.  v0:= temp @kind object;
  #L161a08.  return v0 @kind object;
}

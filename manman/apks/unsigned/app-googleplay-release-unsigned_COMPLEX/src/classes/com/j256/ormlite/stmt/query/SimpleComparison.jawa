record `com.j256.ormlite.stmt.query.SimpleComparison` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.query.BaseComparison` @kind class {
  `java.lang.String` `com.j256.ormlite.stmt.query.SimpleComparison.operation` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.j256.ormlite.stmt.query.SimpleComparison.EQUAL_TO_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.SimpleComparison.GREATER_THAN_EQUAL_TO_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.SimpleComparison.GREATER_THAN_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.SimpleComparison.LESS_THAN_EQUAL_TO_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.SimpleComparison.LESS_THAN_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.SimpleComparison.LIKE_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.stmt.query.SimpleComparison.NOT_EQUAL_TO_OPERATION` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.stmt.query.SimpleComparison` v1 @kind this, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SimpleComparison;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16e5d8.  v0:= 1I;
  #L16e5da.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.<init>:(Ljava/lang/String;Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;Z)V` @kind direct;
  #L16e5e0.  v1.`com.j256.ormlite.stmt.query.SimpleComparison.operation` @type ^`java.lang.String` := v5 @kind object;
  #L16e5e4.  return @kind void;
}
procedure `void` `appendOperation`(`com.j256.ormlite.stmt.query.SimpleComparison` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SimpleComparison;.appendOperation:(Ljava/lang/StringBuilder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e5f8.  v0:= v1.`com.j256.ormlite.stmt.query.SimpleComparison.operation` @type ^`java.lang.String` @kind object;
  #L16e5fc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e602.  v0:= 32I;
  #L16e606.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16e60c.  return @kind void;
}
procedure `void` `appendSql`(`com.j256.ormlite.stmt.query.SimpleComparison` v0 @kind this, `com.j256.ormlite.db.DatabaseType` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SimpleComparison;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L16e620.  call `appendSql`(v0, v1, v2, v3, v4) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendSql:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind super;
  #L16e626.  return @kind void;
}
procedure `void` `appendValue`(`com.j256.ormlite.stmt.query.SimpleComparison` v0 @kind this, `com.j256.ormlite.db.DatabaseType` v1 @kind object, `java.lang.StringBuilder` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/j256/ormlite/stmt/query/SimpleComparison;.appendValue:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L16e638.  call `appendValue`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.appendValue:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind super;
  #L16e63e.  return @kind void;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.stmt.query.SimpleComparison` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/SimpleComparison;.getColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L16e650.  call temp:= `getColumnName`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.getColumnName:()Ljava/lang/String;` @kind super;
  #L16e656.  v0:= temp @kind object;
  #L16e658.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.stmt.query.SimpleComparison` v1 @kind this) @signature `Lcom/j256/ormlite/stmt/query/SimpleComparison;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L16e66c.  call temp:= `toString`(v1) @signature `Lcom/j256/ormlite/stmt/query/BaseComparison;.toString:()Ljava/lang/String;` @kind super;
  #L16e672.  v0:= temp @kind object;
  #L16e674.  return v0 @kind object;
}

record `com.j256.ormlite.dao.BaseDaoImpl$2` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `com.j256.ormlite.dao.BaseDaoImpl` `com.j256.ormlite.dao.BaseDaoImpl$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.j256.ormlite.support.DatabaseConnection` `com.j256.ormlite.dao.BaseDaoImpl$2.val$connection` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Collection` `com.j256.ormlite.dao.BaseDaoImpl$2.val$datas` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.j256.ormlite.dao.BaseDaoImpl$2` v0 @kind this, `com.j256.ormlite.dao.BaseDaoImpl` v1 @kind object, `java.util.Collection` v2 @kind object, `com.j256.ormlite.support.DatabaseConnection` v3 @kind object) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl$2;.<init>:(Lcom/j256/ormlite/dao/BaseDaoImpl;Ljava/util/Collection;Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L154570.  v0.`com.j256.ormlite.dao.BaseDaoImpl$2.this$0` @type ^`com.j256.ormlite.dao.BaseDaoImpl` := v1 @kind object;
  #L154574.  v0.`com.j256.ormlite.dao.BaseDaoImpl$2.val$datas` @type ^`java.util.Collection` := v2 @kind object;
  #L154578.  v0.`com.j256.ormlite.dao.BaseDaoImpl$2.val$connection` @type ^`com.j256.ormlite.support.DatabaseConnection` := v3 @kind object;
  #L15457c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L154582.  return @kind void;
}
procedure `java.lang.Integer` `call`(`com.j256.ormlite.dao.BaseDaoImpl$2` v6 @kind this) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl$2;.call:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L154594.  v0:= 0I;
  #L154596.  v1:= v6.`com.j256.ormlite.dao.BaseDaoImpl$2.val$datas` @type ^`java.util.Collection` @kind object;
  #L15459a.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1545a0.  v1:= temp @kind object;
  #L1545a2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1545a8.  v2:= temp;
  #L1545aa.  if v2 == 0 then goto L1545da;
  #L1545ae.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1545b4.  v2:= temp @kind object;
  #L1545b6.  v3:= v6.`com.j256.ormlite.dao.BaseDaoImpl$2.this$0` @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind object;
  #L1545ba.  v3:= v3.`com.j256.ormlite.dao.BaseDaoImpl.statementExecutor` @type ^`com.j256.ormlite.stmt.StatementExecutor` @kind object;
  #L1545be.  v4:= v6.`com.j256.ormlite.dao.BaseDaoImpl$2.val$connection` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L1545c2.  v5:= v6.`com.j256.ormlite.dao.BaseDaoImpl$2.this$0` @type ^`com.j256.ormlite.dao.BaseDaoImpl` @kind object;
  #L1545c6.  call temp:= `access$000`(v5) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl;.access$000:(Lcom/j256/ormlite/dao/BaseDaoImpl;)Lcom/j256/ormlite/dao/ObjectCache;` @kind static;
  #L1545cc.  v5:= temp @kind object;
  #L1545ce.  call temp:= `create`(v3, v4, v2, v5) @signature `Lcom/j256/ormlite/stmt/StatementExecutor;.create:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @kind virtual;
  #L1545d4.  v2:= temp;
  #L1545d6.  v0:= v0 + v2 @kind int;
  #L1545d8.  goto L1545a2;
  #L1545da.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1545e0.  v0:= temp @kind object;
  #L1545e2.  return v0 @kind object;
}
procedure `java.lang.Object` `call`(`com.j256.ormlite.dao.BaseDaoImpl$2` v1 @kind this) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl$2;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1545f4.  call temp:= `call`(v1) @signature `Lcom/j256/ormlite/dao/BaseDaoImpl$2;.call:()Ljava/lang/Integer;` @kind virtual;
  #L1545fa.  v0:= temp @kind object;
  #L1545fc.  return v0 @kind object;
}

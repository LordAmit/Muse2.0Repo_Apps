record `com.j256.ormlite.field.types.SerializableType` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.field.types.BaseDataType` @kind class {
}
global `com.j256.ormlite.field.types.SerializableType` `@@com.j256.ormlite.field.types.SerializableType.singleTon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/types/SerializableType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L163358.  v0:= new `com.j256.ormlite.field.types.SerializableType`;
  #L16335c.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:()V` @kind direct;
  #L163362.  `@@com.j256.ormlite.field.types.SerializableType.singleTon` @type ^`com.j256.ormlite.field.types.SerializableType` := v0 @kind object;
  #L163366.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L163378.  v0:= `@@com.j256.ormlite.field.SqlType.SERIALIZABLE` @type ^`com.j256.ormlite.field.SqlType` @kind object;
  #L16337c.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;)V` @kind direct;
  #L163382.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.types.SerializableType` v0 @kind this, `com.j256.ormlite.field.SqlType` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L163394.  call `<init>`(v0, v1, v2) @signature `Lcom/j256/ormlite/field/types/BaseDataType;.<init>:(Lcom/j256/ormlite/field/SqlType;[Ljava/lang/Class;)V` @kind direct;
  #L16339a.  return @kind void;
}
procedure `com.j256.ormlite.field.types.SerializableType` `getSingleton`() @signature `Lcom/j256/ormlite/field/types/SerializableType;.getSingleton:()Lcom/j256/ormlite/field/types/SerializableType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1633ac.  v0:= `@@com.j256.ormlite.field.types.SerializableType.singleTon` @type ^`com.j256.ormlite.field.types.SerializableType` @kind object;
  #L1633b0.  return v0 @kind object;
}
procedure `java.lang.Class` `getPrimaryClass`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.getPrimaryClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1633c4.  v0:= constclass @type ^`java.io.Serializable` @kind object;
  #L1633c8.  return v0 @kind object;
}
procedure `boolean` `isAppropriateId`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isAppropriateId:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1633dc.  v0:= 0I;
  #L1633de.  return v0;
}
procedure `boolean` `isArgumentHolderRequired`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isArgumentHolderRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1633f0.  v0:= 1I;
  #L1633f2.  return v0;
}
procedure `boolean` `isComparable`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isComparable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163404.  v0:= 0I;
  #L163406.  return v0;
}
procedure `boolean` `isStreamType`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isStreamType:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163418.  v0:= 1I;
  #L16341a.  return v0;
}
procedure `boolean` `isValidForField`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `java.lang.reflect.Field` v3 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.isValidForField:(Ljava/lang/reflect/Field;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16342c.  v0:= constclass @type ^`java.io.Serializable` @kind object;
  #L163430.  call temp:= `getType`(v3) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L163436.  v1:= temp @kind object;
  #L163438.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L16343e.  v0:= temp;
  #L163440.  return v0;
}
procedure `java.lang.Object` `javaToSqlArg`(`com.j256.ormlite.field.types.SerializableType` v4 @kind this, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.javaToSqlArg:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L163454.  v1:= 0I;
  #Try_start0.  
  #L163456.  v0:= new `java.io.ByteArrayOutputStream`;
  #L16345a.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L163460.  v2:= new `java.io.ObjectOutputStream`;
  #L163464.  call `<init>`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L16346a.  call `writeObject`(v2, v6) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L163470.  call `close`(v2) @signature `Ljava/io/ObjectOutputStream;.close:()V` @kind virtual;
  #Try_end1.  
  #Try_start2.  
  #L163476.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #Try_end2.  
  #L16347c.  v0:= temp @kind object;
  #L16347e.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163484.  return v0 @kind object;
  #L163486.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #Try_start3.  
  #L163488.  v2:= new `java.lang.StringBuilder`;
  #L16348c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L163492.  v3:= "Could not write serialized object to byte array: " @kind object;
  #L163496.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16349c.  v2:= temp @kind object;
  #L16349e.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1634a4.  v2:= temp @kind object;
  #L1634a6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1634ac.  v2:= temp @kind object;
  #L1634ae.  call temp:= `create`(v2, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L1634b4.  v0:= temp @kind object;
  #L1634b6.  throw v0;
  #Try_end3.  
  #L1634b8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1634ba.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1634c0.  throw v0;
  #L1634c2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1634c4.  v1:= v2 @kind object;
  #L1634c6.  goto L1634ba;
  #L1634c8.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1634ca.  v1:= v2 @kind object;
  #L1634cc.  goto L163488;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L163486;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L1634b8;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L1634c8;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1634c2;
  catch `java.lang.Exception` @[Try_start2..Try_end2] goto L163486;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1634b8;
  catch `java.lang.Throwable` @[Try_start3..Try_end3] goto L1634b8;
}
procedure `java.lang.Object` `parseDefaultString`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/field/types/SerializableType;.parseDefaultString:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L163510.  v0:= new `java.sql.SQLException`;
  #L163514.  v1:= "Default values for serializable types are not supported" @kind object;
  #L163518.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16351e.  throw v0;
}
procedure `java.lang.Object` `resultStringToJava`(`com.j256.ormlite.field.types.SerializableType` v2 @kind this, `com.j256.ormlite.field.FieldType` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.resultStringToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/String;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L163530.  v0:= new `java.sql.SQLException`;
  #L163534.  v1:= "Serializable type cannot be converted from string to Java" @kind object;
  #L163538.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16353e.  throw v0;
}
procedure `java.lang.Object` `resultToSqlArg`(`com.j256.ormlite.field.types.SerializableType` v1 @kind this, `com.j256.ormlite.field.FieldType` v2 @kind object, `com.j256.ormlite.support.DatabaseResults` v3 @kind object, `int` v4 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.resultToSqlArg:(Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/DatabaseResults;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L163550.  call temp:= `getBytes`(v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseResults;.getBytes:(I)[B` @kind interface;
  #L163556.  v0:= temp @kind object;
  #L163558.  return v0 @kind object;
}
procedure `java.lang.Object` `sqlArgToJava`(`com.j256.ormlite.field.types.SerializableType` v4 @kind this, `com.j256.ormlite.field.FieldType` v5 @kind object, `java.lang.Object` v6 @kind object, `int` v7 ) @signature `Lcom/j256/ormlite/field/types/SerializableType;.sqlArgToJava:(Lcom/j256/ormlite/field/FieldType;Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16356c.  v6:= (`byte`[]) v6 @kind object;
  #L163570.  v6:= (`byte`[]) v6 @kind object;
  #L163574.  v2:= 0I;
  #Try_start0.  
  #L163576.  v1:= new `java.io.ObjectInputStream`;
  #L16357a.  v0:= new `java.io.ByteArrayInputStream`;
  #L16357e.  call `<init>`(v0, v6) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L163584.  call `<init>`(v1, v0) @signature `Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #Try_end0.  
  #Try_start1.  
  #L16358a.  call temp:= `readObject`(v1) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #Try_end1.  
  #L163590.  v0:= temp @kind object;
  #L163592.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163598.  return v0 @kind object;
  #L16359a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L16359c.  v1:= v2 @kind object;
  #Try_start2.  
  #L16359e.  v2:= new `java.lang.StringBuilder`;
  #L1635a2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1635a8.  v3:= "Could not read serialized object from byte array: " @kind object;
  #L1635ac.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1635b2.  v2:= temp @kind object;
  #L1635b4.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([B)Ljava/lang/String;` @kind static;
  #L1635ba.  v3:= temp @kind object;
  #L1635bc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1635c2.  v2:= temp @kind object;
  #L1635c4.  v3:= "(len " @kind object;
  #L1635c8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1635ce.  v2:= temp @kind object;
  #L1635d0.  v3:= length @variable v6;
  #L1635d2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1635d8.  v2:= temp @kind object;
  #L1635da.  v3:= ")" @kind object;
  #L1635de.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1635e4.  v2:= temp @kind object;
  #L1635e6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1635ec.  v2:= temp @kind object;
  #L1635ee.  call temp:= `create`(v2, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L1635f4.  v0:= temp @kind object;
  #L1635f6.  throw v0;
  #Try_end2.  
  #L1635f8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1635fa.  call `closeQuietly`(v1) @signature `Lcom/j256/ormlite/misc/IOUtils;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L163600.  throw v0;
  #L163602.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L163604.  v1:= v2 @kind object;
  #L163606.  goto L1635fa;
  #L163608.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L16360a.  goto L16359e;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L16359a;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L163602;
  catch `java.lang.Exception` @[Try_start1..Try_end1] goto L163608;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L1635f8;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L1635f8;
}

record `com.j256.ormlite.support.DatabaseConnectionProxy` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.DatabaseConnection` @kind interface {
  `com.j256.ormlite.support.DatabaseConnection` `com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.j256.ormlite.support.DatabaseConnectionProxy` v0 @kind this, `com.j256.ormlite.support.DatabaseConnection` v1 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.<init>:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16e6f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16e6f6.  v0.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` := v1 @kind object;
  #L16e6fa.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e70c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e710.  if v0 == 0 then goto L16e71e;
  #L16e714.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e718.  call `close`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.close:()V` @kind interface;
  #L16e71e.  return @kind void;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e730.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e734.  if v0 == 0 then goto L16e742;
  #L16e738.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e73c.  call `closeQuietly`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.closeQuietly:()V` @kind interface;
  #L16e742.  return @kind void;
}
procedure `void` `commit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.sql.Savepoint` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.commit:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e754.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e758.  if v0 == 0 then goto L16e766;
  #L16e75c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e760.  call `commit`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.commit:(Ljava/sql/Savepoint;)V` @kind interface;
  #L16e766.  return @kind void;
}
procedure `com.j256.ormlite.support.CompiledStatement` `compileStatement`(`com.j256.ormlite.support.DatabaseConnectionProxy` v6 @kind this, `java.lang.String` v7 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v8 @kind object, `com.j256.ormlite.field.FieldType`[] v9 @kind object, `int` v10 , `boolean` v11 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16e778.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e77c.  if v0 != 0 then goto L16e784;
  #L16e780.  v0:= 0I;
  #L16e782.  return v0 @kind object;
  #L16e784.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e788.  v1:= v7 @kind object;
  #L16e78a.  v2:= v8 @kind object;
  #L16e78c.  v3:= v9 @kind object;
  #L16e78e.  v4:= v10;
  #L16e790.  v5:= v11;
  #L16e792.  call temp:= `compileStatement`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.compileStatement:(Ljava/lang/String;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;[Lcom/j256/ormlite/field/FieldType;IZ)Lcom/j256/ormlite/support/CompiledStatement;` @kind interface;
  #L16e798.  v0:= temp @kind object;
  #L16e79a.  goto L16e782;
}
procedure `int` `delete`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e7ac.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e7b0.  if v0 != 0 then goto L16e7b8;
  #L16e7b4.  v0:= 0I;
  #L16e7b6.  return v0;
  #L16e7b8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e7bc.  call temp:= `delete`(v0, v2, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L16e7c2.  v0:= temp;
  #L16e7c4.  goto L16e7b6;
}
procedure `int` `executeStatement`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.executeStatement:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e7d8.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e7dc.  if v0 != 0 then goto L16e7e4;
  #L16e7e0.  v0:= 0I;
  #L16e7e2.  return v0;
  #L16e7e4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e7e8.  call temp:= `executeStatement`(v0, v2, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.executeStatement:(Ljava/lang/String;I)I` @kind interface;
  #L16e7ee.  v0:= temp;
  #L16e7f0.  goto L16e7e2;
}
procedure `int` `insert`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object, `com.j256.ormlite.support.GeneratedKeyHolder` v5 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e804.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e808.  if v0 != 0 then goto L16e810;
  #L16e80c.  v0:= 0I;
  #L16e80e.  return v0;
  #L16e810.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e814.  call temp:= `insert`(v0, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.insert:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/support/GeneratedKeyHolder;)I` @kind interface;
  #L16e81a.  v0:= temp;
  #L16e81c.  goto L16e80e;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isAutoCommit:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e830.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e834.  if v0 != 0 then goto L16e83c;
  #L16e838.  v0:= 0I;
  #L16e83a.  return v0;
  #L16e83c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e840.  call temp:= `isAutoCommit`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommit:()Z` @kind interface;
  #L16e846.  v0:= temp;
  #L16e848.  goto L16e83a;
}
procedure `boolean` `isAutoCommitSupported`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isAutoCommitSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e85c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e860.  if v0 != 0 then goto L16e868;
  #L16e864.  v0:= 0I;
  #L16e866.  return v0;
  #L16e868.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e86c.  call temp:= `isAutoCommitSupported`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isAutoCommitSupported:()Z` @kind interface;
  #L16e872.  v0:= temp;
  #L16e874.  goto L16e866;
}
procedure `boolean` `isClosed`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e888.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e88c.  if v0 != 0 then goto L16e894;
  #L16e890.  v0:= 1I;
  #L16e892.  return v0;
  #L16e894.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e898.  call temp:= `isClosed`(v0) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isClosed:()Z` @kind interface;
  #L16e89e.  v0:= temp;
  #L16e8a0.  goto L16e892;
}
procedure `boolean` `isTableExists`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.isTableExists:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e8b4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e8b8.  if v0 != 0 then goto L16e8c0;
  #L16e8bc.  v0:= 0I;
  #L16e8be.  return v0;
  #L16e8c0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e8c4.  call temp:= `isTableExists`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.isTableExists:(Ljava/lang/String;)Z` @kind interface;
  #L16e8ca.  v0:= temp;
  #L16e8cc.  goto L16e8be;
}
procedure `long` `queryForLong`(`com.j256.ormlite.support.DatabaseConnectionProxy` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForLong:(Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16e8e0.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e8e4.  if v0 != 0 then goto L16e8ee;
  #L16e8e8.  v0:= 0L;
  #L16e8ec.  return v0 @kind wide;
  #L16e8ee.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e8f2.  call temp:= `queryForLong`(v0, v3) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;)J` @kind interface;
  #L16e8f8.  v0:= temp @kind wide;
  #L16e8fa.  goto L16e8ec;
}
procedure `long` `queryForLong`(`com.j256.ormlite.support.DatabaseConnectionProxy` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.Object`[] v4 @kind object, `com.j256.ormlite.field.FieldType`[] v5 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16e90c.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e910.  if v0 != 0 then goto L16e91a;
  #L16e914.  v0:= 0L;
  #L16e918.  return v0 @kind wide;
  #L16e91a.  v0:= v2.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e91e.  call temp:= `queryForLong`(v0, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)J` @kind interface;
  #L16e924.  v0:= temp @kind wide;
  #L16e926.  goto L16e918;
}
procedure `java.lang.Object` `queryForOne`(`com.j256.ormlite.support.DatabaseConnectionProxy` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object, `com.j256.ormlite.field.FieldType`[] v9 @kind object, `com.j256.ormlite.stmt.GenericRowMapper` v10 @kind object, `com.j256.ormlite.dao.ObjectCache` v11 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16e938.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e93c.  if v0 != 0 then goto L16e944;
  #L16e940.  v0:= 0I;
  #L16e942.  return v0 @kind object;
  #L16e944.  v0:= v6.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e948.  v1:= v7 @kind object;
  #L16e94a.  v2:= v8 @kind object;
  #L16e94c.  v3:= v9 @kind object;
  #L16e94e.  v4:= v10 @kind object;
  #L16e950.  v5:= v11 @kind object;
  #L16e952.  call temp:= `queryForOne`(v0, v1, v2, v3, v4, v5) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.queryForOne:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;Lcom/j256/ormlite/stmt/GenericRowMapper;Lcom/j256/ormlite/dao/ObjectCache;)Ljava/lang/Object;` @kind interface;
  #L16e958.  v0:= temp @kind object;
  #L16e95a.  goto L16e942;
}
procedure `void` `rollback`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.sql.Savepoint` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.rollback:(Ljava/sql/Savepoint;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e96c.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e970.  if v0 == 0 then goto L16e97e;
  #L16e974.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e978.  call `rollback`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.rollback:(Ljava/sql/Savepoint;)V` @kind interface;
  #L16e97e.  return @kind void;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `boolean` v2 ) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.setAutoCommit:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e990.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e994.  if v0 == 0 then goto L16e9a2;
  #L16e998.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e99c.  call `setAutoCommit`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setAutoCommit:(Z)V` @kind interface;
  #L16e9a2.  return @kind void;
}
procedure `java.sql.Savepoint` `setSavePoint`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e9b4.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e9b8.  if v0 != 0 then goto L16e9c0;
  #L16e9bc.  v0:= 0I;
  #L16e9be.  return v0 @kind object;
  #L16e9c0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e9c4.  call temp:= `setSavePoint`(v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.setSavePoint:(Ljava/lang/String;)Ljava/sql/Savepoint;` @kind interface;
  #L16e9ca.  v0:= temp @kind object;
  #L16e9cc.  goto L16e9be;
}
procedure `int` `update`(`com.j256.ormlite.support.DatabaseConnectionProxy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `com.j256.ormlite.field.FieldType`[] v4 @kind object) @signature `Lcom/j256/ormlite/support/DatabaseConnectionProxy;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e9e0.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e9e4.  if v0 != 0 then goto L16e9ec;
  #L16e9e8.  v0:= 0I;
  #L16e9ea.  return v0;
  #L16e9ec.  v0:= v1.`com.j256.ormlite.support.DatabaseConnectionProxy.proxy` @type ^`com.j256.ormlite.support.DatabaseConnection` @kind object;
  #L16e9f0.  call temp:= `update`(v0, v2, v3, v4) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.update:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L16e9f6.  v0:= temp;
  #L16e9f8.  goto L16e9ea;
}

record `com.j256.ormlite.dao.RuntimeExceptionDao` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.dao.Dao` @kind interface {
  `com.j256.ormlite.dao.Dao` `com.j256.ormlite.dao.RuntimeExceptionDao.dao` @AccessFlag PRIVATE;
}
global `com.j256.ormlite.logger.Log$Level` `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L158840.  v0:= `@@com.j256.ormlite.logger.Log$Level.DEBUG` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L158844.  `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @type ^`com.j256.ormlite.logger.Log$Level` := v0 @kind object;
  #L158848.  v0:= constclass @type ^`com.j256.ormlite.dao.RuntimeExceptionDao` @kind object;
  #L15884c.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L158852.  v0:= temp @kind object;
  #L158854.  `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L158858.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.dao.RuntimeExceptionDao` v0 @kind this, `com.j256.ormlite.dao.Dao` v1 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15886c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L158872.  v0.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` := v1 @kind object;
  #L158876.  return @kind void;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `createDao`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `com.j256.ormlite.table.DatabaseTableConfig` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L158888.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Lcom/j256/ormlite/table/DatabaseTableConfig;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L15888e.  v0:= temp @kind object;
  #L158890.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L158894.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #L15889a.  return v1 @kind object;
}
procedure `com.j256.ormlite.dao.RuntimeExceptionDao` `createDao`(`com.j256.ormlite.support.ConnectionSource` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/RuntimeExceptionDao;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1588ac.  call temp:= `createDao`(v2, v3) @signature `Lcom/j256/ormlite/dao/DaoManager;.createDao:(Lcom/j256/ormlite/support/ConnectionSource;Ljava/lang/Class;)Lcom/j256/ormlite/dao/Dao;` @kind static;
  #L1588b2.  v0:= temp @kind object;
  #L1588b4.  v1:= new `com.j256.ormlite.dao.RuntimeExceptionDao`;
  #L1588b8.  call `<init>`(v1, v0) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.<init>:(Lcom/j256/ormlite/dao/Dao;)V` @kind direct;
  #L1588be.  return v1 @kind object;
}
procedure `void` `logMessage`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.lang.Exception` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1588d0.  v0:= `@@com.j256.ormlite.dao.RuntimeExceptionDao.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L1588d4.  v1:= `@@com.j256.ormlite.dao.RuntimeExceptionDao.LOG_LEVEL` @type ^`com.j256.ormlite.logger.Log$Level` @kind object;
  #L1588d8.  call `log`(v0, v1, v3, v4) @signature `Lcom/j256/ormlite/logger/Logger;.log:(Lcom/j256/ormlite/logger/Log$Level;Ljava/lang/Throwable;Ljava/lang/String;)V` @kind virtual;
  #L1588de.  return @kind void;
}
procedure `void` `assignEmptyForeignCollection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1588f0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1588f4.  call `assignEmptyForeignCollection`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.assignEmptyForeignCollection:(Ljava/lang/Object;Ljava/lang/String;)V` @kind interface;
  #Try_end0.  
  #L1588fa.  return @kind void;
  #L1588fc.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1588fe.  v1:= new `java.lang.StringBuilder`;
  #L158902.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158908.  v2:= "assignEmptyForeignCollection threw exception on " @kind object;
  #L15890c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158912.  v1:= temp @kind object;
  #L158914.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15891a.  v1:= temp @kind object;
  #L15891c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158922.  v1:= temp @kind object;
  #L158924.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15892a.  v1:= new `java.lang.RuntimeException`;
  #L15892e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158934.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1588fc;
}
procedure `java.lang.Object` `callBatchTasks`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.concurrent.Callable` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158958.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15895c.  call temp:= `callBatchTasks`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.callBatchTasks:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L158962.  v0:= temp @kind object;
  #L158964.  return v0 @kind object;
  #L158966.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L158968.  v1:= new `java.lang.StringBuilder`;
  #L15896c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158972.  v2:= "callBatchTasks threw exception on: " @kind object;
  #L158976.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15897c.  v1:= temp @kind object;
  #L15897e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158984.  v1:= temp @kind object;
  #L158986.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15898c.  v1:= temp @kind object;
  #L15898e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158994.  v1:= new `java.lang.RuntimeException`;
  #L158998.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15899e.  throw v1;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L158966;
}
procedure `void` `clearObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.clearObjectCache:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1589c0.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1589c4.  call `clearObjectCache`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.clearObjectCache:()V` @kind interface;
  #L1589ca.  return @kind void;
}
procedure `void` `closeLastIterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.closeLastIterator:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L1589dc.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1589e0.  call `closeLastIterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.closeLastIterator:()V` @kind interface;
  #Try_end0.  
  #L1589e6.  return @kind void;
  #L1589e8.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1589ea.  v1:= "closeLastIterator threw exception" @kind object;
  #L1589ee.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1589f4.  v1:= new `java.lang.RuntimeException`;
  #L1589f8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1589fe.  throw v1;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L1589e8;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `closeableIterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158a20.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158a24.  call temp:= `closeableIterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.closeableIterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L158a2a.  v0:= temp @kind object;
  #L158a2c.  return v0 @kind object;
}
procedure `void` `commit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158a40.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158a44.  call `commit`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.commit:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L158a4a.  return @kind void;
  #L158a4c.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158a4e.  v1:= new `java.lang.StringBuilder`;
  #L158a52.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158a58.  v2:= "commit(" @kind object;
  #L158a5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158a62.  v1:= temp @kind object;
  #L158a64.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158a6a.  v1:= temp @kind object;
  #L158a6c.  v2:= ") threw exception" @kind object;
  #L158a70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158a76.  v1:= temp @kind object;
  #L158a78.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158a7e.  v1:= temp @kind object;
  #L158a80.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158a86.  v1:= new `java.lang.RuntimeException`;
  #L158a8a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158a90.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158a4c;
}
procedure `long` `countOf`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.countOf:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L158ab4.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158ab8.  call temp:= `countOf`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:()J` @kind interface;
  #Try_end0.  
  #L158abe.  v0:= temp @kind wide;
  #L158ac0.  return v0 @kind wide;
  #L158ac2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158ac4.  v1:= "countOf threw exception" @kind object;
  #L158ac8.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158ace.  v1:= new `java.lang.RuntimeException`;
  #L158ad2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158ad8.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158ac2;
}
procedure `long` `countOf`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158afc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158b00.  call temp:= `countOf`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.countOf:(Lcom/j256/ormlite/stmt/PreparedQuery;)J` @kind interface;
  #Try_end0.  
  #L158b06.  v0:= temp @kind wide;
  #L158b08.  return v0 @kind wide;
  #L158b0a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158b0c.  v1:= new `java.lang.StringBuilder`;
  #L158b10.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158b16.  v2:= "countOf threw exception on " @kind object;
  #L158b1a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158b20.  v1:= temp @kind object;
  #L158b22.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158b28.  v1:= temp @kind object;
  #L158b2a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158b30.  v1:= temp @kind object;
  #L158b32.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158b38.  v1:= new `java.lang.RuntimeException`;
  #L158b3c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158b42.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158b0a;
}
procedure `int` `create`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.create:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158b64.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158b68.  call temp:= `create`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L158b6e.  v0:= temp;
  #L158b70.  return v0;
  #L158b72.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158b74.  v1:= new `java.lang.StringBuilder`;
  #L158b78.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158b7e.  v2:= "create threw exception on: " @kind object;
  #L158b82.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158b88.  v1:= temp @kind object;
  #L158b8a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158b90.  v1:= temp @kind object;
  #L158b92.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158b98.  v1:= temp @kind object;
  #L158b9a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158ba0.  v1:= new `java.lang.RuntimeException`;
  #L158ba4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158baa.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158b72;
}
procedure `int` `create`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.create:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158bcc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158bd0.  call temp:= `create`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.create:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L158bd6.  v0:= temp;
  #L158bd8.  return v0;
  #L158bda.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158bdc.  v1:= new `java.lang.StringBuilder`;
  #L158be0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158be6.  v2:= "create threw exception on: " @kind object;
  #L158bea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158bf0.  v1:= temp @kind object;
  #L158bf2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158bf8.  v1:= temp @kind object;
  #L158bfa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158c00.  v1:= temp @kind object;
  #L158c02.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158c08.  v1:= new `java.lang.RuntimeException`;
  #L158c0c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158c12.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158bda;
}
procedure `java.lang.Object` `createIfNotExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158c34.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158c38.  call temp:= `createIfNotExists`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.createIfNotExists:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L158c3e.  v0:= temp @kind object;
  #L158c40.  return v0 @kind object;
  #L158c42.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158c44.  v1:= new `java.lang.StringBuilder`;
  #L158c48.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158c4e.  v2:= "createIfNotExists threw exception on: " @kind object;
  #L158c52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158c58.  v1:= temp @kind object;
  #L158c5a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158c60.  v1:= temp @kind object;
  #L158c62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158c68.  v1:= temp @kind object;
  #L158c6a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158c70.  v1:= new `java.lang.RuntimeException`;
  #L158c74.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158c7a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158c42;
}
procedure `com.j256.ormlite.dao.Dao$CreateOrUpdateStatus` `createOrUpdate`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158c9c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158ca0.  call temp:= `createOrUpdate`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.createOrUpdate:(Ljava/lang/Object;)Lcom/j256/ormlite/dao/Dao$CreateOrUpdateStatus;` @kind interface;
  #Try_end0.  
  #L158ca6.  v0:= temp @kind object;
  #L158ca8.  return v0 @kind object;
  #L158caa.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158cac.  v1:= new `java.lang.StringBuilder`;
  #L158cb0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158cb6.  v2:= "createOrUpdate threw exception on: " @kind object;
  #L158cba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158cc0.  v1:= temp @kind object;
  #L158cc2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158cc8.  v1:= temp @kind object;
  #L158cca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158cd0.  v1:= temp @kind object;
  #L158cd2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158cd8.  v1:= new `java.lang.RuntimeException`;
  #L158cdc.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158ce2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158caa;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedDelete` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158d04.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158d08.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Lcom/j256/ormlite/stmt/PreparedDelete;)I` @kind interface;
  #Try_end0.  
  #L158d0e.  v0:= temp;
  #L158d10.  return v0;
  #L158d12.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158d14.  v1:= new `java.lang.StringBuilder`;
  #L158d18.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158d1e.  v2:= "delete threw exception on: " @kind object;
  #L158d22.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158d28.  v1:= temp @kind object;
  #L158d2a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158d30.  v1:= temp @kind object;
  #L158d32.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158d38.  v1:= temp @kind object;
  #L158d3a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158d40.  v1:= new `java.lang.RuntimeException`;
  #L158d44.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158d4a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158d12;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158d6c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158d70.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L158d76.  v0:= temp;
  #L158d78.  return v0;
  #L158d7a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158d7c.  v1:= new `java.lang.StringBuilder`;
  #L158d80.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158d86.  v2:= "delete threw exception on: " @kind object;
  #L158d8a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158d90.  v1:= temp @kind object;
  #L158d92.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158d98.  v1:= temp @kind object;
  #L158d9a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158da0.  v1:= temp @kind object;
  #L158da2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158da8.  v1:= new `java.lang.RuntimeException`;
  #L158dac.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158db2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158d7a;
}
procedure `int` `delete`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.delete:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158dd4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158dd8.  call temp:= `delete`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.delete:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L158dde.  v0:= temp;
  #L158de0.  return v0;
  #L158de2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158de4.  v1:= new `java.lang.StringBuilder`;
  #L158de8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158dee.  v2:= "delete threw exception on: " @kind object;
  #L158df2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158df8.  v1:= temp @kind object;
  #L158dfa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158e00.  v1:= temp @kind object;
  #L158e02.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158e08.  v1:= temp @kind object;
  #L158e0a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158e10.  v1:= new `java.lang.RuntimeException`;
  #L158e14.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158e1a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158de2;
}
procedure `com.j256.ormlite.stmt.DeleteBuilder` `deleteBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158e3c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158e40.  call temp:= `deleteBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.deleteBuilder:()Lcom/j256/ormlite/stmt/DeleteBuilder;` @kind interface;
  #L158e46.  v0:= temp @kind object;
  #L158e48.  return v0 @kind object;
}
procedure `int` `deleteById`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteById:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158e5c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158e60.  call temp:= `deleteById`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.deleteById:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L158e66.  v0:= temp;
  #L158e68.  return v0;
  #L158e6a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158e6c.  v1:= new `java.lang.StringBuilder`;
  #L158e70.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158e76.  v2:= "deleteById threw exception on: " @kind object;
  #L158e7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158e80.  v1:= temp @kind object;
  #L158e82.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158e88.  v1:= temp @kind object;
  #L158e8a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158e90.  v1:= temp @kind object;
  #L158e92.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158e98.  v1:= new `java.lang.RuntimeException`;
  #L158e9c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158ea2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158e6a;
}
procedure `int` `deleteIds`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.deleteIds:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158ec4.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158ec8.  call temp:= `deleteIds`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.deleteIds:(Ljava/util/Collection;)I` @kind interface;
  #Try_end0.  
  #L158ece.  v0:= temp;
  #L158ed0.  return v0;
  #L158ed2.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158ed4.  v1:= new `java.lang.StringBuilder`;
  #L158ed8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158ede.  v2:= "deleteIds threw exception on: " @kind object;
  #L158ee2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158ee8.  v1:= temp @kind object;
  #L158eea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158ef0.  v1:= temp @kind object;
  #L158ef2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158ef8.  v1:= temp @kind object;
  #L158efa.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158f00.  v1:= new `java.lang.RuntimeException`;
  #L158f04.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158f0a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158ed2;
}
procedure `void` `endThreadConnection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158f2c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158f30.  call `endThreadConnection`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.endThreadConnection:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L158f36.  return @kind void;
  #L158f38.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158f3a.  v1:= new `java.lang.StringBuilder`;
  #L158f3e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158f44.  v2:= "endThreadConnection(" @kind object;
  #L158f48.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158f4e.  v1:= temp @kind object;
  #L158f50.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158f56.  v1:= temp @kind object;
  #L158f58.  v2:= ") threw exception" @kind object;
  #L158f5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158f62.  v1:= temp @kind object;
  #L158f64.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158f6a.  v1:= temp @kind object;
  #L158f6c.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158f72.  v1:= new `java.lang.RuntimeException`;
  #L158f76.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158f7c.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158f38;
}
procedure `int` `executeRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L158fa0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L158fa4.  call temp:= `executeRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.executeRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L158faa.  v0:= temp;
  #L158fac.  return v0;
  #L158fae.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L158fb0.  v1:= new `java.lang.StringBuilder`;
  #L158fb4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158fba.  v2:= "executeRaw threw exception on: " @kind object;
  #L158fbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158fc4.  v1:= temp @kind object;
  #L158fc6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158fcc.  v1:= temp @kind object;
  #L158fce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158fd4.  v1:= temp @kind object;
  #L158fd6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L158fdc.  v1:= new `java.lang.RuntimeException`;
  #L158fe0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L158fe6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L158fae;
}
procedure `int` `executeRawNoArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.executeRawNoArgs:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159008.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15900c.  call temp:= `executeRawNoArgs`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.executeRawNoArgs:(Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L159012.  v0:= temp;
  #L159014.  return v0;
  #L159016.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159018.  v1:= new `java.lang.StringBuilder`;
  #L15901c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159022.  v2:= "executeRawNoArgs threw exception on: " @kind object;
  #L159026.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15902c.  v1:= temp @kind object;
  #L15902e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159034.  v1:= temp @kind object;
  #L159036.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15903c.  v1:= temp @kind object;
  #L15903e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159044.  v1:= new `java.lang.RuntimeException`;
  #L159048.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15904e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159016;
}
procedure `java.lang.Object` `extractId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159070.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159074.  call temp:= `extractId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.extractId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L15907a.  v0:= temp @kind object;
  #L15907c.  return v0 @kind object;
  #L15907e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159080.  v1:= new `java.lang.StringBuilder`;
  #L159084.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15908a.  v2:= "extractId threw exception on: " @kind object;
  #L15908e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159094.  v1:= temp @kind object;
  #L159096.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15909c.  v1:= temp @kind object;
  #L15909e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1590a4.  v1:= temp @kind object;
  #L1590a6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1590ac.  v1:= new `java.lang.RuntimeException`;
  #L1590b0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1590b6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15907e;
}
procedure `com.j256.ormlite.field.FieldType` `findForeignFieldType`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1590d8.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1590dc.  call temp:= `findForeignFieldType`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.findForeignFieldType:(Ljava/lang/Class;)Lcom/j256/ormlite/field/FieldType;` @kind interface;
  #L1590e2.  v0:= temp @kind object;
  #L1590e4.  return v0 @kind object;
}
procedure `com.j256.ormlite.support.ConnectionSource` `getConnectionSource`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1590f8.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1590fc.  call temp:= `getConnectionSource`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getConnectionSource:()Lcom/j256/ormlite/support/ConnectionSource;` @kind interface;
  #L159102.  v0:= temp @kind object;
  #L159104.  return v0 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159118.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15911c.  call temp:= `getDataClass`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L159122.  v0:= temp @kind object;
  #L159124.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.ForeignCollection` `getEmptyForeignCollection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159138.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15913c.  call temp:= `getEmptyForeignCollection`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.getEmptyForeignCollection:(Ljava/lang/String;)Lcom/j256/ormlite/dao/ForeignCollection;` @kind interface;
  #Try_end0.  
  #L159142.  v0:= temp @kind object;
  #L159144.  return v0 @kind object;
  #L159146.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159148.  v1:= new `java.lang.StringBuilder`;
  #L15914c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159152.  v2:= "getEmptyForeignCollection threw exception on " @kind object;
  #L159156.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15915c.  v1:= temp @kind object;
  #L15915e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159164.  v1:= temp @kind object;
  #L159166.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15916c.  v1:= temp @kind object;
  #L15916e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159174.  v1:= new `java.lang.RuntimeException`;
  #L159178.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15917e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159146;
}
procedure `com.j256.ormlite.dao.ObjectCache` `getObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1591a0.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1591a4.  call temp:= `getObjectCache`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getObjectCache:()Lcom/j256/ormlite/dao/ObjectCache;` @kind interface;
  #L1591aa.  v0:= temp @kind object;
  #L1591ac.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.RawRowMapper` `getRawRowMapper`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1591c0.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1591c4.  call temp:= `getRawRowMapper`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getRawRowMapper:()Lcom/j256/ormlite/dao/RawRowMapper;` @kind interface;
  #L1591ca.  v0:= temp @kind object;
  #L1591cc.  return v0 @kind object;
}
procedure `com.j256.ormlite.stmt.GenericRowMapper` `getSelectStarRowMapper`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L1591e0.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1591e4.  call temp:= `getSelectStarRowMapper`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getSelectStarRowMapper:()Lcom/j256/ormlite/stmt/GenericRowMapper;` @kind interface;
  #Try_end0.  
  #L1591ea.  v0:= temp @kind object;
  #L1591ec.  return v0 @kind object;
  #L1591ee.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1591f0.  v1:= "getSelectStarRowMapper threw exception" @kind object;
  #L1591f4.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1591fa.  v1:= new `java.lang.RuntimeException`;
  #L1591fe.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159204.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1591ee;
}
procedure `java.lang.String` `getTableName`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159228.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15922c.  call temp:= `getTableName`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getTableName:()Ljava/lang/String;` @kind interface;
  #L159232.  v0:= temp @kind object;
  #L159234.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159248.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15924c.  call temp:= `getWrappedIterable`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:()Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind interface;
  #L159252.  v0:= temp @kind object;
  #L159254.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableWrappedIterable` `getWrappedIterable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159268.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15926c.  call temp:= `getWrappedIterable`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.getWrappedIterable:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableWrappedIterable;` @kind interface;
  #L159272.  v0:= temp @kind object;
  #L159274.  return v0 @kind object;
}
procedure `boolean` `idExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.idExists:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159288.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15928c.  call temp:= `idExists`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.idExists:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L159292.  v0:= temp;
  #L159294.  return v0;
  #L159296.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159298.  v1:= new `java.lang.StringBuilder`;
  #L15929c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1592a2.  v2:= "idExists threw exception on " @kind object;
  #L1592a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1592ac.  v1:= temp @kind object;
  #L1592ae.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1592b4.  v1:= temp @kind object;
  #L1592b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1592bc.  v1:= temp @kind object;
  #L1592be.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1592c4.  v1:= new `java.lang.RuntimeException`;
  #L1592c8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1592ce.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159296;
}
procedure `boolean` `isAutoCommit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1592f0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1592f4.  call temp:= `isAutoCommit`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.isAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;)Z` @kind interface;
  #Try_end0.  
  #L1592fa.  v0:= temp;
  #L1592fc.  return v0;
  #L1592fe.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159300.  v1:= new `java.lang.StringBuilder`;
  #L159304.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15930a.  v2:= "isAutoCommit(" @kind object;
  #L15930e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159314.  v1:= temp @kind object;
  #L159316.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15931c.  v1:= temp @kind object;
  #L15931e.  v2:= ") threw exception" @kind object;
  #L159322.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159328.  v1:= temp @kind object;
  #L15932a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159330.  v1:= temp @kind object;
  #L159332.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159338.  v1:= new `java.lang.RuntimeException`;
  #L15933c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159342.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1592fe;
}
procedure `boolean` `isTableExists`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isTableExists:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L159364.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159368.  call temp:= `isTableExists`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.isTableExists:()Z` @kind interface;
  #Try_end0.  
  #L15936e.  v0:= temp;
  #L159370.  return v0;
  #L159372.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159374.  v1:= "isTableExists threw exception" @kind object;
  #L159378.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15937e.  v1:= new `java.lang.RuntimeException`;
  #L159382.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159388.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159372;
}
procedure `boolean` `isUpdatable`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.isUpdatable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1593ac.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1593b0.  call temp:= `isUpdatable`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.isUpdatable:()Z` @kind interface;
  #L1593b6.  v0:= temp;
  #L1593b8.  return v0;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1593cc.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1593d0.  call temp:= `iterator`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L1593d6.  v0:= temp @kind object;
  #L1593d8.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1593ec.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1593f0.  call temp:= `iterator`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #L1593f6.  v0:= temp @kind object;
  #L1593f8.  return v0 @kind object;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15940c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159410.  call temp:= `iterator`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #Try_end0.  
  #L159416.  v0:= temp @kind object;
  #L159418.  return v0 @kind object;
  #L15941a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15941c.  v1:= new `java.lang.StringBuilder`;
  #L159420.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159426.  v2:= "iterator threw exception on: " @kind object;
  #L15942a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159430.  v1:= temp @kind object;
  #L159432.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159438.  v1:= temp @kind object;
  #L15943a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159440.  v1:= temp @kind object;
  #L159442.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159448.  v1:= new `java.lang.RuntimeException`;
  #L15944c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159452.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15941a;
}
procedure `com.j256.ormlite.dao.CloseableIterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object, `int` v5 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159474.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159478.  call temp:= `iterator`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.iterator:(Lcom/j256/ormlite/stmt/PreparedQuery;I)Lcom/j256/ormlite/dao/CloseableIterator;` @kind interface;
  #Try_end0.  
  #L15947e.  v0:= temp @kind object;
  #L159480.  return v0 @kind object;
  #L159482.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159484.  v1:= new `java.lang.StringBuilder`;
  #L159488.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15948e.  v2:= "iterator threw exception on: " @kind object;
  #L159492.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159498.  v1:= temp @kind object;
  #L15949a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1594a0.  v1:= temp @kind object;
  #L1594a2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1594a8.  v1:= temp @kind object;
  #L1594aa.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1594b0.  v1:= new `java.lang.RuntimeException`;
  #L1594b4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1594ba.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159482;
}
procedure `java.util.Iterator` `iterator`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1594dc.  call temp:= `iterator`(v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.iterator:()Lcom/j256/ormlite/dao/CloseableIterator;` @kind virtual;
  #L1594e2.  v0:= temp @kind object;
  #L1594e4.  return v0 @kind object;
}
procedure `java.lang.Object` `mapSelectStarRow`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `com.j256.ormlite.support.DatabaseResults` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L1594f8.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1594fc.  call temp:= `mapSelectStarRow`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.mapSelectStarRow:(Lcom/j256/ormlite/support/DatabaseResults;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L159502.  v0:= temp @kind object;
  #L159504.  return v0 @kind object;
  #L159506.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159508.  v1:= "mapSelectStarRow threw exception on results" @kind object;
  #L15950c.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159512.  v1:= new `java.lang.RuntimeException`;
  #L159516.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15951c.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159506;
}
procedure `void` `notifyChanges`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.notifyChanges:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159540.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159544.  call `notifyChanges`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.notifyChanges:()V` @kind interface;
  #L15954a.  return @kind void;
}
procedure `java.lang.String` `objectToString`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15955c.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159560.  call temp:= `objectToString`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.objectToString:(Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L159566.  v0:= temp @kind object;
  #L159568.  return v0 @kind object;
}
procedure `boolean` `objectsEqual`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15957c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159580.  call temp:= `objectsEqual`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.objectsEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L159586.  v0:= temp;
  #L159588.  return v0;
  #L15958a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15958c.  v1:= new `java.lang.StringBuilder`;
  #L159590.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159596.  v2:= "objectsEqual threw exception on: " @kind object;
  #L15959a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1595a0.  v1:= temp @kind object;
  #L1595a2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1595a8.  v1:= temp @kind object;
  #L1595aa.  v2:= " and " @kind object;
  #L1595ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1595b4.  v1:= temp @kind object;
  #L1595b6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1595bc.  v1:= temp @kind object;
  #L1595be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1595c4.  v1:= temp @kind object;
  #L1595c6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1595cc.  v1:= new `java.lang.RuntimeException`;
  #L1595d0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1595d6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15958a;
}
procedure `java.util.List` `query`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1595f8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1595fc.  call temp:= `query`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.query:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L159602.  v0:= temp @kind object;
  #L159604.  return v0 @kind object;
  #L159606.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159608.  v1:= new `java.lang.StringBuilder`;
  #L15960c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159612.  v2:= "query threw exception on: " @kind object;
  #L159616.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15961c.  v1:= temp @kind object;
  #L15961e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159624.  v1:= temp @kind object;
  #L159626.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15962c.  v1:= temp @kind object;
  #L15962e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159634.  v1:= new `java.lang.RuntimeException`;
  #L159638.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15963e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159606;
}
procedure `com.j256.ormlite.stmt.QueryBuilder` `queryBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159660.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159664.  call temp:= `queryBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.queryBuilder:()Lcom/j256/ormlite/stmt/QueryBuilder;` @kind interface;
  #L15966a.  v0:= temp @kind object;
  #L15966c.  return v0 @kind object;
}
procedure `java.util.List` `queryForAll`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L159680.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159684.  call temp:= `queryForAll`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.queryForAll:()Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L15968a.  v0:= temp @kind object;
  #L15968c.  return v0 @kind object;
  #L15968e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159690.  v1:= "queryForAll threw exception" @kind object;
  #L159694.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15969a.  v1:= new `java.lang.RuntimeException`;
  #L15969e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1596a4.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15968e;
}
procedure `java.util.List` `queryForEq`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1596c8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1596cc.  call temp:= `queryForEq`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryForEq:(Ljava/lang/String;Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L1596d2.  v0:= temp @kind object;
  #L1596d4.  return v0 @kind object;
  #L1596d6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1596d8.  v1:= new `java.lang.StringBuilder`;
  #L1596dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1596e2.  v2:= "queryForEq threw exception on: " @kind object;
  #L1596e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1596ec.  v1:= temp @kind object;
  #L1596ee.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1596f4.  v1:= temp @kind object;
  #L1596f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1596fc.  v1:= temp @kind object;
  #L1596fe.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159704.  v1:= new `java.lang.RuntimeException`;
  #L159708.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15970e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1596d6;
}
procedure `java.util.List` `queryForFieldValues`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L159730.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159734.  call temp:= `queryForFieldValues`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValues:(Ljava/util/Map;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L15973a.  v0:= temp @kind object;
  #L15973c.  return v0 @kind object;
  #L15973e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159740.  v1:= "queryForFieldValues threw exception" @kind object;
  #L159744.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15974a.  v1:= new `java.lang.RuntimeException`;
  #L15974e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159754.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15973e;
}
procedure `java.util.List` `queryForFieldValuesArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L159778.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15977c.  call temp:= `queryForFieldValuesArgs`(v0, v3) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFieldValuesArgs:(Ljava/util/Map;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L159782.  v0:= temp @kind object;
  #L159784.  return v0 @kind object;
  #L159786.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159788.  v1:= "queryForFieldValuesArgs threw exception" @kind object;
  #L15978c.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159792.  v1:= new `java.lang.RuntimeException`;
  #L159796.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15979c.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159786;
}
procedure `java.lang.Object` `queryForFirst`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedQuery` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1597c0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1597c4.  call temp:= `queryForFirst`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForFirst:(Lcom/j256/ormlite/stmt/PreparedQuery;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L1597ca.  v0:= temp @kind object;
  #L1597cc.  return v0 @kind object;
  #L1597ce.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1597d0.  v1:= new `java.lang.StringBuilder`;
  #L1597d4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1597da.  v2:= "queryForFirst threw exception on: " @kind object;
  #L1597de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1597e4.  v1:= temp @kind object;
  #L1597e6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1597ec.  v1:= temp @kind object;
  #L1597ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1597f4.  v1:= temp @kind object;
  #L1597f6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1597fc.  v1:= new `java.lang.RuntimeException`;
  #L159800.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159806.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1597ce;
}
procedure `java.lang.Object` `queryForId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159828.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15982c.  call temp:= `queryForId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L159832.  v0:= temp @kind object;
  #L159834.  return v0 @kind object;
  #L159836.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159838.  v1:= new `java.lang.StringBuilder`;
  #L15983c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159842.  v2:= "queryForId threw exception on: " @kind object;
  #L159846.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15984c.  v1:= temp @kind object;
  #L15984e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159854.  v1:= temp @kind object;
  #L159856.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15985c.  v1:= temp @kind object;
  #L15985e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159864.  v1:= new `java.lang.RuntimeException`;
  #L159868.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15986e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159836;
}
procedure `java.util.List` `queryForMatching`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159890.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159894.  call temp:= `queryForMatching`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatching:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L15989a.  v0:= temp @kind object;
  #L15989c.  return v0 @kind object;
  #L15989e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1598a0.  v1:= new `java.lang.StringBuilder`;
  #L1598a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1598aa.  v2:= "queryForMatching threw exception on: " @kind object;
  #L1598ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1598b4.  v1:= temp @kind object;
  #L1598b6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1598bc.  v1:= temp @kind object;
  #L1598be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1598c4.  v1:= temp @kind object;
  #L1598c6.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L1598cc.  v1:= new `java.lang.RuntimeException`;
  #L1598d0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1598d6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15989e;
}
procedure `java.util.List` `queryForMatchingArgs`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1598f8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1598fc.  call temp:= `queryForMatchingArgs`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForMatchingArgs:(Ljava/lang/Object;)Ljava/util/List;` @kind interface;
  #Try_end0.  
  #L159902.  v0:= temp @kind object;
  #L159904.  return v0 @kind object;
  #L159906.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159908.  v1:= new `java.lang.StringBuilder`;
  #L15990c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159912.  v2:= "queryForMatchingArgs threw exception on: " @kind object;
  #L159916.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15991c.  v1:= temp @kind object;
  #L15991e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159924.  v1:= temp @kind object;
  #L159926.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15992c.  v1:= temp @kind object;
  #L15992e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159934.  v1:= new `java.lang.RuntimeException`;
  #L159938.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15993e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159906;
}
procedure `java.lang.Object` `queryForSameId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159960.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159964.  call temp:= `queryForSameId`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.queryForSameId:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #Try_end0.  
  #L15996a.  v0:= temp @kind object;
  #L15996c.  return v0 @kind object;
  #L15996e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159970.  v1:= new `java.lang.StringBuilder`;
  #L159974.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15997a.  v2:= "queryForSameId threw exception on: " @kind object;
  #L15997e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159984.  v1:= temp @kind object;
  #L159986.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15998c.  v1:= temp @kind object;
  #L15998e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159994.  v1:= temp @kind object;
  #L159996.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15999c.  v1:= new `java.lang.RuntimeException`;
  #L1599a0.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1599a6.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15996e;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.dao.DatabaseResultsMapper` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L1599c8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L1599cc.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/DatabaseResultsMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L1599d2.  v0:= temp @kind object;
  #L1599d4.  return v0 @kind object;
  #L1599d6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L1599d8.  v1:= new `java.lang.StringBuilder`;
  #L1599dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1599e2.  v2:= "queryRaw threw exception on: " @kind object;
  #L1599e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1599ec.  v1:= temp @kind object;
  #L1599ee.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1599f4.  v1:= temp @kind object;
  #L1599f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1599fc.  v1:= temp @kind object;
  #L1599fe.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159a04.  v1:= new `java.lang.RuntimeException`;
  #L159a08.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159a0e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L1599d6;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.dao.RawRowMapper` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159a30.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159a34.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;Lcom/j256/ormlite/dao/RawRowMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L159a3a.  v0:= temp @kind object;
  #L159a3c.  return v0 @kind object;
  #L159a3e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159a40.  v1:= new `java.lang.StringBuilder`;
  #L159a44.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159a4a.  v2:= "queryRaw threw exception on: " @kind object;
  #L159a4e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159a54.  v1:= temp @kind object;
  #L159a56.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159a5c.  v1:= temp @kind object;
  #L159a5e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159a64.  v1:= temp @kind object;
  #L159a66.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159a6c.  v1:= new `java.lang.RuntimeException`;
  #L159a70.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159a76.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159a3e;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType`[] v5 @kind object, `com.j256.ormlite.dao.RawRowObjectMapper` v6 @kind object, `java.lang.String`[] v7 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159a98.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159a9c.  call temp:= `queryRaw`(v0, v4, v5, v6, v7) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;Lcom/j256/ormlite/dao/RawRowObjectMapper;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L159aa2.  v0:= temp @kind object;
  #L159aa4.  return v0 @kind object;
  #L159aa6.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159aa8.  v1:= new `java.lang.StringBuilder`;
  #L159aac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159ab2.  v2:= "queryRaw threw exception on: " @kind object;
  #L159ab6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159abc.  v1:= temp @kind object;
  #L159abe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159ac4.  v1:= temp @kind object;
  #L159ac6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159acc.  v1:= temp @kind object;
  #L159ace.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159ad4.  v1:= new `java.lang.RuntimeException`;
  #L159ad8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159ade.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159aa6;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType`[] v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159b00.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159b04.  call temp:= `queryRaw`(v0, v4, v5, v6) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Lcom/j256/ormlite/field/DataType;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L159b0a.  v0:= temp @kind object;
  #L159b0c.  return v0 @kind object;
  #L159b0e.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159b10.  v1:= new `java.lang.StringBuilder`;
  #L159b14.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159b1a.  v2:= "queryRaw threw exception on: " @kind object;
  #L159b1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159b24.  v1:= temp @kind object;
  #L159b26.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159b2c.  v1:= temp @kind object;
  #L159b2e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159b34.  v1:= temp @kind object;
  #L159b36.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159b3c.  v1:= new `java.lang.RuntimeException`;
  #L159b40.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159b46.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159b0e;
}
procedure `com.j256.ormlite.dao.GenericRawResults` `queryRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159b68.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159b6c.  call temp:= `queryRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Lcom/j256/ormlite/dao/GenericRawResults;` @kind interface;
  #Try_end0.  
  #L159b72.  v0:= temp @kind object;
  #L159b74.  return v0 @kind object;
  #L159b76.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159b78.  v1:= new `java.lang.StringBuilder`;
  #L159b7c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159b82.  v2:= "queryRaw threw exception on: " @kind object;
  #L159b86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159b8c.  v1:= temp @kind object;
  #L159b8e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159b94.  v1:= temp @kind object;
  #L159b96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159b9c.  v1:= temp @kind object;
  #L159b9e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159ba4.  v1:= new `java.lang.RuntimeException`;
  #L159ba8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159bae.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159b76;
}
procedure `long` `queryRawValue`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159bd0.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159bd4.  call temp:= `queryRawValue`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.queryRawValue:(Ljava/lang/String;[Ljava/lang/String;)J` @kind interface;
  #Try_end0.  
  #L159bda.  v0:= temp @kind wide;
  #L159bdc.  return v0 @kind wide;
  #L159bde.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159be0.  v1:= new `java.lang.StringBuilder`;
  #L159be4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159bea.  v2:= "queryRawValue threw exception on: " @kind object;
  #L159bee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159bf4.  v1:= temp @kind object;
  #L159bf6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159bfc.  v1:= temp @kind object;
  #L159bfe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159c04.  v1:= temp @kind object;
  #L159c06.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159c0c.  v1:= new `java.lang.RuntimeException`;
  #L159c10.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159c16.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159bde;
}
procedure `int` `refresh`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.refresh:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159c38.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159c3c.  call temp:= `refresh`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.refresh:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L159c42.  v0:= temp;
  #L159c44.  return v0;
  #L159c46.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159c48.  v1:= new `java.lang.StringBuilder`;
  #L159c4c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159c52.  v2:= "refresh threw exception on: " @kind object;
  #L159c56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159c5c.  v1:= temp @kind object;
  #L159c5e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159c64.  v1:= temp @kind object;
  #L159c66.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159c6c.  v1:= temp @kind object;
  #L159c6e.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159c74.  v1:= new `java.lang.RuntimeException`;
  #L159c78.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159c7e.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159c46;
}
procedure `void` `registerObserver`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.dao.Dao$DaoObserver` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159ca0.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159ca4.  call `registerObserver`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.registerObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @kind interface;
  #L159caa.  return @kind void;
}
procedure `void` `rollBack`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159cbc.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159cc0.  call `rollBack`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.rollBack:(Lcom/j256/ormlite/support/DatabaseConnection;)V` @kind interface;
  #Try_end0.  
  #L159cc6.  return @kind void;
  #L159cc8.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159cca.  v1:= new `java.lang.StringBuilder`;
  #L159cce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159cd4.  v2:= "rollBack(" @kind object;
  #L159cd8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159cde.  v1:= temp @kind object;
  #L159ce0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159ce6.  v1:= temp @kind object;
  #L159ce8.  v2:= ") threw exception" @kind object;
  #L159cec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159cf2.  v1:= temp @kind object;
  #L159cf4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159cfa.  v1:= temp @kind object;
  #L159cfc.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159d02.  v1:= new `java.lang.RuntimeException`;
  #L159d06.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159d0c.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159cc8;
}
procedure `void` `setAutoCommit`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.support.DatabaseConnection` v4 @kind object, `boolean` v5 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159d30.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159d34.  call `setAutoCommit`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.setAutoCommit:(Lcom/j256/ormlite/support/DatabaseConnection;Z)V` @kind interface;
  #Try_end0.  
  #L159d3a.  return @kind void;
  #L159d3c.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159d3e.  v1:= new `java.lang.StringBuilder`;
  #L159d42.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159d48.  v2:= "setAutoCommit(" @kind object;
  #L159d4c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159d52.  v1:= temp @kind object;
  #L159d54.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159d5a.  v1:= temp @kind object;
  #L159d5c.  v2:= "," @kind object;
  #L159d60.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159d66.  v1:= temp @kind object;
  #L159d68.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L159d6e.  v1:= temp @kind object;
  #L159d70.  v2:= ") threw exception" @kind object;
  #L159d74.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159d7a.  v1:= temp @kind object;
  #L159d7c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159d82.  v1:= temp @kind object;
  #L159d84.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159d8a.  v1:= new `java.lang.RuntimeException`;
  #L159d8e.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159d94.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159d3c;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159db8.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159dbc.  call `setObjectCache`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Lcom/j256/ormlite/dao/ObjectCache;)V` @kind interface;
  #Try_end0.  
  #L159dc2.  return @kind void;
  #L159dc4.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159dc6.  v1:= new `java.lang.StringBuilder`;
  #L159dca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159dd0.  v2:= "setObjectCache threw exception on " @kind object;
  #L159dd4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159dda.  v1:= temp @kind object;
  #L159ddc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159de2.  v1:= temp @kind object;
  #L159de4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159dea.  v1:= temp @kind object;
  #L159dec.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159df2.  v1:= new `java.lang.RuntimeException`;
  #L159df6.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159dfc.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159dc4;
}
procedure `void` `setObjectCache`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `boolean` v4 ) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectCache:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159e20.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159e24.  call `setObjectCache`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectCache:(Z)V` @kind interface;
  #Try_end0.  
  #L159e2a.  return @kind void;
  #L159e2c.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159e2e.  v1:= new `java.lang.StringBuilder`;
  #L159e32.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159e38.  v2:= "setObjectCache(" @kind object;
  #L159e3c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159e42.  v1:= temp @kind object;
  #L159e44.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L159e4a.  v1:= temp @kind object;
  #L159e4c.  v2:= ") threw exception" @kind object;
  #L159e50.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159e56.  v1:= temp @kind object;
  #L159e58.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159e5e.  v1:= temp @kind object;
  #L159e60.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159e66.  v1:= new `java.lang.RuntimeException`;
  #L159e6a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159e70.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159e2c;
}
procedure `void` `setObjectFactory`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.table.ObjectFactory` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159e94.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159e98.  call `setObjectFactory`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.setObjectFactory:(Lcom/j256/ormlite/table/ObjectFactory;)V` @kind interface;
  #L159e9e.  return @kind void;
}
procedure `com.j256.ormlite.support.DatabaseConnection` `startThreadConnection`(`com.j256.ormlite.dao.RuntimeExceptionDao` v2 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L159eb0.  v0:= v2.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159eb4.  call temp:= `startThreadConnection`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.startThreadConnection:()Lcom/j256/ormlite/support/DatabaseConnection;` @kind interface;
  #Try_end0.  
  #L159eba.  v0:= temp @kind object;
  #L159ebc.  return v0 @kind object;
  #L159ebe.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159ec0.  v1:= "startThreadConnection() threw exception" @kind object;
  #L159ec4.  call `logMessage`(v2, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159eca.  v1:= new `java.lang.RuntimeException`;
  #L159ece.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159ed4.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159ebe;
}
procedure `void` `unregisterObserver`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this, `com.j256.ormlite.dao.Dao$DaoObserver` v2 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159ef8.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159efc.  call `unregisterObserver`(v0, v2) @signature `Lcom/j256/ormlite/dao/Dao;.unregisterObserver:(Lcom/j256/ormlite/dao/Dao$DaoObserver;)V` @kind interface;
  #L159f02.  return @kind void;
}
procedure `int` `update`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `com.j256.ormlite.stmt.PreparedUpdate` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159f14.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159f18.  call temp:= `update`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Lcom/j256/ormlite/stmt/PreparedUpdate;)I` @kind interface;
  #Try_end0.  
  #L159f1e.  v0:= temp;
  #L159f20.  return v0;
  #L159f22.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159f24.  v1:= new `java.lang.StringBuilder`;
  #L159f28.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159f2e.  v2:= "update threw exception on: " @kind object;
  #L159f32.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159f38.  v1:= temp @kind object;
  #L159f3a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159f40.  v1:= temp @kind object;
  #L159f42.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159f48.  v1:= temp @kind object;
  #L159f4a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159f50.  v1:= new `java.lang.RuntimeException`;
  #L159f54.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159f5a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159f22;
}
procedure `int` `update`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.update:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L159f7c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159f80.  call temp:= `update`(v0, v4) @signature `Lcom/j256/ormlite/dao/Dao;.update:(Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L159f86.  v0:= temp;
  #L159f88.  return v0;
  #L159f8a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L159f8c.  v1:= new `java.lang.StringBuilder`;
  #L159f90.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L159f96.  v2:= "update threw exception on: " @kind object;
  #L159f9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159fa0.  v1:= temp @kind object;
  #L159fa2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L159fa8.  v1:= temp @kind object;
  #L159faa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L159fb0.  v1:= temp @kind object;
  #L159fb2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L159fb8.  v1:= new `java.lang.RuntimeException`;
  #L159fbc.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L159fc2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L159f8a;
}
procedure `com.j256.ormlite.stmt.UpdateBuilder` `updateBuilder`(`com.j256.ormlite.dao.RuntimeExceptionDao` v1 @kind this) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159fe4.  v0:= v1.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L159fe8.  call temp:= `updateBuilder`(v0) @signature `Lcom/j256/ormlite/dao/Dao;.updateBuilder:()Lcom/j256/ormlite/stmt/UpdateBuilder;` @kind interface;
  #L159fee.  v0:= temp @kind object;
  #L159ff0.  return v0 @kind object;
}
procedure `int` `updateId`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15a004.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15a008.  call temp:= `updateId`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.updateId:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #Try_end0.  
  #L15a00e.  v0:= temp;
  #L15a010.  return v0;
  #L15a012.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15a014.  v1:= new `java.lang.StringBuilder`;
  #L15a018.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15a01e.  v2:= "updateId threw exception on: " @kind object;
  #L15a022.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15a028.  v1:= temp @kind object;
  #L15a02a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15a030.  v1:= temp @kind object;
  #L15a032.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15a038.  v1:= temp @kind object;
  #L15a03a.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15a040.  v1:= new `java.lang.RuntimeException`;
  #L15a044.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15a04a.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15a012;
}
procedure `int` `updateRaw`(`com.j256.ormlite.dao.RuntimeExceptionDao` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #Try_start0.  
  #L15a06c.  v0:= v3.`com.j256.ormlite.dao.RuntimeExceptionDao.dao` @type ^`com.j256.ormlite.dao.Dao` @kind object;
  #L15a070.  call temp:= `updateRaw`(v0, v4, v5) @signature `Lcom/j256/ormlite/dao/Dao;.updateRaw:(Ljava/lang/String;[Ljava/lang/String;)I` @kind interface;
  #Try_end0.  
  #L15a076.  v0:= temp;
  #L15a078.  return v0;
  #L15a07a.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L15a07c.  v1:= new `java.lang.StringBuilder`;
  #L15a080.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15a086.  v2:= "updateRaw threw exception on: " @kind object;
  #L15a08a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15a090.  v1:= temp @kind object;
  #L15a092.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15a098.  v1:= temp @kind object;
  #L15a09a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15a0a0.  v1:= temp @kind object;
  #L15a0a2.  call `logMessage`(v3, v0, v1) @signature `Lcom/j256/ormlite/dao/RuntimeExceptionDao;.logMessage:(Ljava/lang/Exception;Ljava/lang/String;)V` @kind direct;
  #L15a0a8.  v1:= new `java.lang.RuntimeException`;
  #L15a0ac.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L15a0b2.  throw v1;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L15a07a;
}

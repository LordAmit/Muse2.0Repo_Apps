record `com.j256.ormlite.android.AndroidCompiledStatement` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.support.CompiledStatement` @kind interface {
  `java.util.List` `com.j256.ormlite.android.AndroidCompiledStatement.args` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` `com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @AccessFlag PRIVATE;
  `android.database.Cursor` `com.j256.ormlite.android.AndroidCompiledStatement.cursor` @AccessFlag PRIVATE;
  `android.database.sqlite.SQLiteDatabase` `com.j256.ormlite.android.AndroidCompiledStatement.db` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `com.j256.ormlite.android.AndroidCompiledStatement.max` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.android.AndroidCompiledStatement.sql` @AccessFlag PRIVATE_FINAL;
  `com.j256.ormlite.stmt.StatementBuilder$StatementType` `com.j256.ormlite.android.AndroidCompiledStatement.type` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.android.compat.ApiCompatibility` `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.logger.Logger` `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L14f2d0.  v0:= constclass @type ^`com.j256.ormlite.android.AndroidCompiledStatement` @kind object;
  #L14f2d4.  call temp:= `getLogger`(v0) @signature `Lcom/j256/ormlite/logger/LoggerFactory;.getLogger:(Ljava/lang/Class;)Lcom/j256/ormlite/logger/Logger;` @kind static;
  #L14f2da.  v0:= temp @kind object;
  #L14f2dc.  `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` := v0 @kind object;
  #L14f2e0.  v0:= 0I;
  #L14f2e2.  v0:= new `java.lang.String`[v0];
  #L14f2e6.  `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] := v0 @kind object;
  #L14f2ea.  call temp:= `getCompatibility`() @signature `Lcom/j256/ormlite/android/compat/ApiCompatibilityUtils;.getCompatibility:()Lcom/j256/ormlite/android/compat/ApiCompatibility;` @kind static;
  #L14f2f0.  v0:= temp @kind object;
  #L14f2f2.  `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` := v0 @kind object;
  #L14f2f6.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.android.AndroidCompiledStatement` v0 @kind this, `java.lang.String` v1 @kind object, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `com.j256.ormlite.stmt.StatementBuilder$StatementType` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.<init>:(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase;Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L14f308.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14f30e.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` := v1 @kind object;
  #L14f312.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` := v2 @kind object;
  #L14f316.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` := v3 @kind object;
  #L14f31a.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @type ^`boolean` := v4 @kind boolean;
  #L14f31e.  v0.`com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @type ^`boolean` := v5 @kind boolean;
  #L14f322.  return @kind void;
}
procedure `int` `execSql`(`android.database.sqlite.SQLiteDatabase` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.Object`[] v8 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #Try_start0.  
  #L14f334.  call `execSQL`(v5, v7, v8) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L14f33a.  v0:= 0I;
  #Try_start1.  
  #L14f33c.  v1:= "SELECT CHANGES()" @kind object;
  #L14f340.  call temp:= `compileStatement`(v5, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroid/database/sqlite/SQLiteStatement;` @kind virtual;
  #Try_end1.  
  #L14f346.  v1:= temp @kind object;
  #Try_start2.  
  #L14f348.  call temp:= `simpleQueryForLong`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.simpleQueryForLong:()J` @kind virtual;
  #Try_end2.  
  #L14f34e.  v2:= temp @kind wide;
  #L14f350.  v0:= (`int`) v2 @kind l2i;
  #L14f352.  if v1 == 0 then goto L14f35c;
  #L14f356.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L14f35c.  v1:= `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L14f360.  v2:= "executing statement {} changed {} rows: {}" @kind object;
  #L14f364.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L14f36a.  v3:= temp @kind object;
  #L14f36c.  call `trace`(v1, v2, v6, v3, v7) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L14f372.  return v0;
  #L14f374.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L14f376.  v1:= new `java.lang.StringBuilder`;
  #L14f37a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f380.  v2:= "Problems executing " @kind object;
  #L14f384.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f38a.  v1:= temp @kind object;
  #L14f38c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f392.  v1:= temp @kind object;
  #L14f394.  v2:= " Android statement: " @kind object;
  #L14f398.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f39e.  v1:= temp @kind object;
  #L14f3a0.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f3a6.  v1:= temp @kind object;
  #L14f3a8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f3ae.  v1:= temp @kind object;
  #L14f3b0.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L14f3b6.  v0:= temp @kind object;
  #L14f3b8.  throw v0;
  #L14f3ba.  v1:= Exception @type ^`android.database.SQLException` @kind object;
  #L14f3bc.  v1:= v0 @kind object;
  #L14f3be.  v0:= 1I;
  #L14f3c0.  if v1 == 0 then goto L14f35c;
  #L14f3c4.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L14f3ca.  goto L14f35c;
  #L14f3cc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14f3ce.  v4:= v1 @kind object;
  #L14f3d0.  v1:= v0 @kind object;
  #L14f3d2.  v0:= v4 @kind object;
  #L14f3d4.  if v1 == 0 then goto L14f3de;
  #L14f3d8.  call `close`(v1) @signature `Landroid/database/sqlite/SQLiteStatement;.close:()V` @kind virtual;
  #L14f3de.  throw v0;
  #L14f3e0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L14f3e2.  goto L14f3d4;
  #L14f3e4.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L14f3e6.  goto L14f3be;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L14f374;
  catch `android.database.SQLException` @[Try_start1..Try_end1] goto L14f3ba;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L14f3cc;
  catch `android.database.SQLException` @[Try_start2..Try_end2] goto L14f3e4;
  catch `java.lang.Throwable` @[Try_start2..Try_end2] goto L14f3e0;
}
procedure `java.lang.Object`[] `getArgArray`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L14f420.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f424.  if v0 != 0 then goto L14f42e;
  #L14f428.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] @kind object;
  #L14f42c.  return v0 @kind object;
  #L14f42e.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f432.  v1:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f436.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14f43c.  v1:= temp;
  #L14f43e.  v1:= new `java.lang.Object`[v1];
  #L14f442.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L14f448.  v0:= temp @kind object;
  #L14f44a.  goto L14f42c;
}
procedure `java.lang.String`[] `getStringArray`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getStringArray:()[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L14f45c.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f460.  if v0 != 0 then goto L14f46a;
  #L14f464.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.NO_STRING_ARGS` @type ^`java.lang.String`[] @kind object;
  #L14f468.  return v0 @kind object;
  #L14f46a.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f46e.  v1:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f472.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L14f478.  v1:= temp;
  #L14f47a.  v1:= new `java.lang.String`[v1];
  #L14f47e.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L14f484.  v0:= temp @kind object;
  #L14f486.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L14f48a.  goto L14f468;
}
procedure `void` `isInPrep`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L14f49c.  v0:= v2.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f4a0.  if v0 == 0 then goto L14f4b4;
  #L14f4a4.  v0:= new `java.sql.SQLException`;
  #L14f4a8.  v1:= "Query already run. Cannot add argument values." @kind object;
  #L14f4ac.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14f4b2.  throw v0;
  #L14f4b4.  return @kind void;
}
procedure `void` `cancel`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14f4c8.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L14f4cc.  if v0 == 0 then goto L14f4da;
  #L14f4d0.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L14f4d4.  call `cancel`(v0) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;.cancel:()V` @kind interface;
  #L14f4da.  return @kind void;
}
procedure `void` `close`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14f4ec.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f4f0.  if v0 == 0 then goto L14f50e;
  #L14f4f4.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f4f8.  call temp:= `isClosed`(v0) @signature `Landroid/database/Cursor;.isClosed:()Z` @kind interface;
  #L14f4fe.  v0:= temp;
  #L14f500.  if v0 != 0 then goto L14f50e;
  #Try_start0.  
  #L14f504.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f508.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #Try_end0.  
  #L14f50e.  v0:= 0I;
  #L14f510.  v3.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` := v0 @kind object;
  #L14f514.  return @kind void;
  #L14f516.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L14f518.  v1:= new `java.io.IOException`;
  #L14f51c.  v2:= "Problems closing Android cursor" @kind object;
  #L14f520.  call `<init>`(v1, v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L14f526.  throw v1;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L14f516;
}
procedure `void` `closeQuietly`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.closeQuietly:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14f548.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f54c.  if v0 == 0 then goto L14f55a;
  #L14f550.  v0:= v1.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f554.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L14f55a.  return @kind void;
}
procedure `int` `getColumnCount`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getColumnCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14f56c.  call temp:= `getCursor`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L14f572.  v0:= temp @kind object;
  #L14f574.  call temp:= `getColumnCount`(v0) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L14f57a.  v0:= temp;
  #L14f57c.  return v0;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getColumnName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14f590.  call temp:= `getCursor`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L14f596.  v0:= temp @kind object;
  #L14f598.  call temp:= `getColumnName`(v0, v2) @signature `Landroid/database/Cursor;.getColumnName:(I)Ljava/lang/String;` @kind interface;
  #L14f59e.  v0:= temp @kind object;
  #L14f5a0.  return v0 @kind object;
}
procedure `android.database.Cursor` `getCursor`(`com.j256.ormlite.android.AndroidCompiledStatement` v5 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L14f5b4.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f5b8.  if v0 != 0 then goto L14f61a;
  #L14f5bc.  v1:= 0I;
  #Try_start0.  
  #L14f5be.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L14f5c2.  if v0 != 0 then goto L14f620;
  #L14f5c6.  v1:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L14f5ca.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancelQueriesEnabled` @type ^`boolean` @kind boolean;
  #L14f5ce.  if v0 == 0 then goto L14f5e2;
  #L14f5d2.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` @kind object;
  #L14f5d6.  call temp:= `createCancellationHook`(v0) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility;.createCancellationHook:()Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;` @kind interface;
  #L14f5dc.  v0:= temp @kind object;
  #L14f5de.  v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` := v0 @kind object;
  #L14f5e2.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.apiCompatibility` @type ^`com.j256.ormlite.android.compat.ApiCompatibility` @kind object;
  #L14f5e6.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L14f5ea.  call temp:= `getStringArray`(v5) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getStringArray:()[Ljava/lang/String;` @kind direct;
  #L14f5f0.  v3:= temp @kind object;
  #L14f5f2.  v4:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cancellationHook` @type ^`com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook` @kind object;
  #L14f5f6.  call temp:= `rawQuery`(v0, v2, v1, v3, v4) @signature `Lcom/j256/ormlite/android/compat/ApiCompatibility;.rawQuery:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Lcom/j256/ormlite/android/compat/ApiCompatibility$CancellationHook;)Landroid/database/Cursor;` @kind interface;
  #L14f5fc.  v0:= temp @kind object;
  #L14f5fe.  v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` := v0 @kind object;
  #L14f602.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f606.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L14f60c.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L14f610.  v2:= "{}: started rawQuery cursor for: {}" @kind object;
  #L14f614.  call `trace`(v0, v2, v5, v1) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #Try_end0.  
  #L14f61a.  v0:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.cursor` @type ^`android.database.Cursor` @kind object;
  #L14f61e.  return v0 @kind object;
  #Try_start1.  
  #L14f620.  v0:= new `java.lang.StringBuilder`;
  #L14f624.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f62a.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L14f62e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f634.  v0:= temp @kind object;
  #L14f636.  v2:= " LIMIT " @kind object;
  #L14f63a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f640.  v0:= temp @kind object;
  #L14f642.  v2:= v5.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L14f646.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f64c.  v0:= temp @kind object;
  #L14f64e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #Try_end1.  
  #L14f654.  v1:= temp @kind object;
  #L14f656.  goto L14f5ca;
  #L14f658.  v0:= Exception @type ^`android.database.SQLException` @kind object;
  #L14f65a.  v2:= new `java.lang.StringBuilder`;
  #L14f65e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f664.  v3:= "Problems executing Android query: " @kind object;
  #L14f668.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f66e.  v2:= temp @kind object;
  #L14f670.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f676.  v1:= temp @kind object;
  #L14f678.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f67e.  v1:= temp @kind object;
  #L14f680.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L14f686.  v0:= temp @kind object;
  #L14f688.  throw v0;
  catch `android.database.SQLException` @[Try_start0..Try_end0] goto L14f658;
  catch `android.database.SQLException` @[Try_start1..Try_end1] goto L14f658;
}
procedure `int` `runExecute`(`com.j256.ormlite.android.AndroidCompiledStatement` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runExecute:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14f6b4.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L14f6b8.  call temp:= `isOkForExecute`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForExecute:()Z` @kind virtual;
  #L14f6be.  v0:= temp;
  #L14f6c0.  if v0 != 0 then goto L14f706;
  #L14f6c4.  v0:= new `java.lang.IllegalArgumentException`;
  #L14f6c8.  v1:= new `java.lang.StringBuilder`;
  #L14f6cc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f6d2.  v2:= "Cannot call execute on a " @kind object;
  #L14f6d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f6dc.  v1:= temp @kind object;
  #L14f6de.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L14f6e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f6e8.  v1:= temp @kind object;
  #L14f6ea.  v2:= " statement" @kind object;
  #L14f6ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f6f4.  v1:= temp @kind object;
  #L14f6f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f6fc.  v1:= temp @kind object;
  #L14f6fe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14f704.  throw v0;
  #L14f706.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L14f70a.  v1:= "runExecute" @kind object;
  #L14f70e.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L14f712.  call temp:= `getArgArray`(v4) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @kind direct;
  #L14f718.  v3:= temp @kind object;
  #L14f71a.  call temp:= `execSql`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @kind static;
  #L14f720.  v0:= temp;
  #L14f722.  return v0;
}
procedure `com.j256.ormlite.support.DatabaseResults` `runQuery`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this, `com.j256.ormlite.dao.ObjectCache` v4 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runQuery:(Lcom/j256/ormlite/dao/ObjectCache;)Lcom/j256/ormlite/support/DatabaseResults;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14f734.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L14f738.  call temp:= `isOkForQuery`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForQuery:()Z` @kind virtual;
  #L14f73e.  v0:= temp;
  #L14f740.  if v0 != 0 then goto L14f786;
  #L14f744.  v0:= new `java.lang.IllegalArgumentException`;
  #L14f748.  v1:= new `java.lang.StringBuilder`;
  #L14f74c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f752.  v2:= "Cannot call query on a " @kind object;
  #L14f756.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f75c.  v1:= temp @kind object;
  #L14f75e.  v2:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L14f762.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f768.  v1:= temp @kind object;
  #L14f76a.  v2:= " statement" @kind object;
  #L14f76e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f774.  v1:= temp @kind object;
  #L14f776.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f77c.  v1:= temp @kind object;
  #L14f77e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14f784.  throw v0;
  #L14f786.  v0:= new `com.j256.ormlite.android.AndroidDatabaseResults`;
  #L14f78a.  call temp:= `getCursor`(v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getCursor:()Landroid/database/Cursor;` @kind virtual;
  #L14f790.  v1:= temp @kind object;
  #L14f792.  v2:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.cacheStore` @type ^`boolean` @kind boolean;
  #L14f796.  call `<init>`(v0, v1, v4, v2) @signature `Lcom/j256/ormlite/android/AndroidDatabaseResults;.<init>:(Landroid/database/Cursor;Lcom/j256/ormlite/dao/ObjectCache;Z)V` @kind direct;
  #L14f79c.  return v0 @kind object;
}
procedure `int` `runUpdate`(`com.j256.ormlite.android.AndroidCompiledStatement` v4 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.runUpdate:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L14f7b0.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L14f7b4.  call temp:= `isOkForUpdate`(v0) @signature `Lcom/j256/ormlite/stmt/StatementBuilder$StatementType;.isOkForUpdate:()Z` @kind virtual;
  #L14f7ba.  v0:= temp;
  #L14f7bc.  if v0 != 0 then goto L14f802;
  #L14f7c0.  v0:= new `java.lang.IllegalArgumentException`;
  #L14f7c4.  v1:= new `java.lang.StringBuilder`;
  #L14f7c8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f7ce.  v2:= "Cannot call update on a " @kind object;
  #L14f7d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f7d8.  v1:= temp @kind object;
  #L14f7da.  v2:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.type` @type ^`com.j256.ormlite.stmt.StatementBuilder$StatementType` @kind object;
  #L14f7de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f7e4.  v1:= temp @kind object;
  #L14f7e6.  v2:= " statement" @kind object;
  #L14f7ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f7f0.  v1:= temp @kind object;
  #L14f7f2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f7f8.  v1:= temp @kind object;
  #L14f7fa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14f800.  throw v0;
  #L14f802.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L14f806.  if v0 != 0 then goto L14f828;
  #L14f80a.  v0:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L14f80e.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.db` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L14f812.  v2:= "runUpdate" @kind object;
  #L14f816.  call temp:= `getArgArray`(v4) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.getArgArray:()[Ljava/lang/Object;` @kind direct;
  #L14f81c.  v3:= temp @kind object;
  #L14f81e.  call temp:= `execSql`(v1, v2, v0, v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.execSql:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @kind static;
  #L14f824.  v0:= temp;
  #L14f826.  return v0;
  #L14f828.  v0:= new `java.lang.StringBuilder`;
  #L14f82c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f832.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.sql` @type ^`java.lang.String` @kind object;
  #L14f836.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f83c.  v0:= temp @kind object;
  #L14f83e.  v1:= " " @kind object;
  #L14f842.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f848.  v0:= temp @kind object;
  #L14f84a.  v1:= v4.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` @kind object;
  #L14f84e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f854.  v0:= temp @kind object;
  #L14f856.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f85c.  v0:= temp @kind object;
  #L14f85e.  goto L14f80e;
}
procedure `void` `setMaxRows`(`com.j256.ormlite.android.AndroidCompiledStatement` v1 @kind this, `int` v2 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setMaxRows:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14f870.  call `isInPrep`(v1) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @kind direct;
  #L14f876.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L14f87c.  v0:= temp @kind object;
  #L14f87e.  v1.`com.j256.ormlite.android.AndroidCompiledStatement.max` @type ^`java.lang.Integer` := v0 @kind object;
  #L14f882.  return @kind void;
}
procedure `void` `setObject`(`com.j256.ormlite.android.AndroidCompiledStatement` v3 @kind this, `int` v4 , `java.lang.Object` v5 @kind object, `com.j256.ormlite.field.SqlType` v6 @kind object) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setObject:(ILjava/lang/Object;Lcom/j256/ormlite/field/SqlType;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L14f894.  call `isInPrep`(v3) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.isInPrep:()V` @kind direct;
  #L14f89a.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f89e.  if v0 != 0 then goto L14f8b0;
  #L14f8a2.  v0:= new `java.util.ArrayList`;
  #L14f8a6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L14f8ac.  v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` := v0 @kind object;
  #L14f8b0.  if v5 != 0 then goto L14f8c2;
  #L14f8b4.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f8b8.  v1:= 0I;
  #L14f8ba.  call `add`(v0, v4, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L14f8c0.  return @kind void;
  #L14f8c2.  v0:= `@@com.j256.ormlite.android.AndroidCompiledStatement$1.$SwitchMap$com$j256$ormlite$field$SqlType` @type ^`int`[] @kind object;
  #L14f8c6.  call temp:= `ordinal`(v6) @signature `Lcom/j256/ormlite/field/SqlType;.ordinal:()I` @kind virtual;
  #L14f8cc.  v1:= temp;
  #L14f8ce.  v0:= v0[v1];
  #L14f8d2.  goto L14f95c;
  #L14f8d8.  v0:= new `java.sql.SQLException`;
  #L14f8dc.  v1:= new `java.lang.StringBuilder`;
  #L14f8e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f8e6.  v2:= "Unknown sql argument type: " @kind object;
  #L14f8ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f8f0.  v1:= temp @kind object;
  #L14f8f2.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f8f8.  v1:= temp @kind object;
  #L14f8fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f900.  v1:= temp @kind object;
  #L14f902.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14f908.  throw v0;
  #L14f90a.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f90e.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f914.  v1:= temp @kind object;
  #L14f916.  call `add`(v0, v4, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L14f91c.  goto L14f8c0;
  #L14f91e.  v0:= v3.`com.j256.ormlite.android.AndroidCompiledStatement.args` @type ^`java.util.List` @kind object;
  #L14f922.  call `add`(v0, v4, v5) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L14f928.  goto L14f8c0;
  #L14f92a.  v0:= new `java.sql.SQLException`;
  #L14f92e.  v1:= new `java.lang.StringBuilder`;
  #L14f932.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f938.  v2:= "Invalid Android type: " @kind object;
  #L14f93c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f942.  v1:= temp @kind object;
  #L14f944.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f94a.  v1:= temp @kind object;
  #L14f94c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14f952.  v1:= temp @kind object;
  #L14f954.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14f95a.  throw v0;
  #L14f95c.  switch v0
                  | 1 => goto L14f90a
                  | 2 => goto L14f90a
                  | 3 => goto L14f90a
                  | 4 => goto L14f90a
                  | 5 => goto L14f90a
                  | 6 => goto L14f90a
                  | 7 => goto L14f90a
                  | 8 => goto L14f90a
                  | 9 => goto L14f90a
                  | 10 => goto L14f90a
                  | 11 => goto L14f90a
                  | 12 => goto L14f91e
                  | 13 => goto L14f91e
                  | 14 => goto L14f92a
                  | 15 => goto L14f92a
                  | else => goto L14f8d8;
}
procedure `void` `setQueryTimeout`(`com.j256.ormlite.android.AndroidCompiledStatement` v0 @kind this, `long` v1 ) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.setQueryTimeout:(J)V` @AccessFlag PUBLIC {
    temp;

  #L14f9b0.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.j256.ormlite.android.AndroidCompiledStatement` v2 @kind this) @signature `Lcom/j256/ormlite/android/AndroidCompiledStatement;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L14f9c4.  v0:= new `java.lang.StringBuilder`;
  #L14f9c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L14f9ce.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L14f9d4.  v1:= temp @kind object;
  #L14f9d6.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L14f9dc.  v1:= temp @kind object;
  #L14f9de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f9e4.  v0:= temp @kind object;
  #L14f9e6.  v1:= "@" @kind object;
  #L14f9ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14f9f0.  v0:= temp @kind object;
  #L14f9f2.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L14f9f8.  v1:= temp;
  #L14f9fa.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L14fa00.  v1:= temp @kind object;
  #L14fa02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14fa08.  v0:= temp @kind object;
  #L14fa0a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L14fa10.  v0:= temp @kind object;
  #L14fa12.  return v0 @kind object;
}

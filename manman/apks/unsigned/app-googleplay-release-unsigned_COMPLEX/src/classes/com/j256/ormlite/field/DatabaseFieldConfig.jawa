record `com.j256.ormlite.field.DatabaseFieldConfig` @kind class @AccessFlag PUBLIC {
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.allowGeneratedIdInsert` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.canBeNull` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.columnDefinition` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.columnName` @AccessFlag PRIVATE;
  `com.j256.ormlite.field.DataPersister` `com.j256.ormlite.field.DatabaseFieldConfig.dataPersister` @AccessFlag PRIVATE;
  `com.j256.ormlite.field.DataType` `com.j256.ormlite.field.DatabaseFieldConfig.dataType` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.defaultValue` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.foreign` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoCreate` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.foreignCollection` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionColumnName` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionEager` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionForeignFieldName` @AccessFlag PRIVATE;
  `int` `com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionMaxEagerLevel` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderAscending` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderColumnName` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.foreignColumnName` @AccessFlag PRIVATE;
  `com.j256.ormlite.table.DatabaseTableConfig` `com.j256.ormlite.field.DatabaseFieldConfig.foreignTableConfig` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.format` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.generatedId` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.generatedIdSequence` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.id` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.index` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.indexName` @AccessFlag PRIVATE;
  `int` `com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.persisted` @AccessFlag PRIVATE;
  `java.lang.Class` `com.j256.ormlite.field.DatabaseFieldConfig.persisterClass` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.readOnly` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.throwIfNull` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.unique` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.uniqueCombo` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndex` @AccessFlag PRIVATE;
  `java.lang.String` `com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndexName` @AccessFlag PRIVATE;
  `java.lang.Enum` `com.j256.ormlite.field.DatabaseFieldConfig.unknownEnumValue` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.useGetSet` @AccessFlag PRIVATE;
  `boolean` `com.j256.ormlite.field.DatabaseFieldConfig.version` @AccessFlag PRIVATE;
  `int` `com.j256.ormlite.field.DatabaseFieldConfig.width` @AccessFlag PRIVATE;
}
global `boolean` `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_CAN_BE_NULL` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.j256.ormlite.field.DataType` `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_DATA_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Class` `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_PERSISTER_CLASS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.j256.ormlite.field.DatabaseFieldConfig.NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.j256.ormlite.misc.JavaxPersistenceConfigurer` `@@com.j256.ormlite.field.DatabaseFieldConfig.javaxPersistenceConfigurer` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15bcf4.  v0:= constclass @type ^`com.j256.ormlite.field.types.VoidType` @kind object;
  #L15bcf8.  `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_PERSISTER_CLASS` @type ^`java.lang.Class` := v0 @kind object;
  #L15bcfc.  v0:= `@@com.j256.ormlite.field.DataType.UNKNOWN` @type ^`com.j256.ormlite.field.DataType` @kind object;
  #L15bd00.  `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_DATA_TYPE` @type ^`com.j256.ormlite.field.DataType` := v0 @kind object;
  #Try_start0.  
  #L15bd04.  v0:= "javax.persistence.Entity" @kind object;
  #L15bd08.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L15bd0e.  v0:= "com.j256.ormlite.misc.JavaxPersistenceImpl" @kind object;
  #L15bd12.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L15bd18.  v0:= temp @kind object;
  #L15bd1a.  v1:= 0I;
  #L15bd1c.  v1:= new `java.lang.Class`[v1];
  #L15bd20.  call temp:= `getConstructor`(v0, v1) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L15bd26.  v0:= temp @kind object;
  #L15bd28.  v1:= 0I;
  #L15bd2a.  v1:= new `java.lang.Object`[v1];
  #L15bd2e.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15bd34.  v0:= temp @kind object;
  #L15bd36.  v0:= (`com.j256.ormlite.misc.JavaxPersistenceConfigurer`) v0 @kind object;
  #L15bd3a.  `@@com.j256.ormlite.field.DatabaseFieldConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` := v0 @kind object;
  #Try_end0.  
  #L15bd3e.  return @kind void;
  #L15bd40.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15bd42.  v0:= 0I;
  #L15bd44.  `@@com.j256.ormlite.field.DatabaseFieldConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` := v0 @kind object;
  #L15bd48.  goto L15bd3e;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L15bd40;
}
procedure `void` `<init>`(`com.j256.ormlite.field.DatabaseFieldConfig` v2 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15bd6c.  v1:= 1I;
  #L15bd6e.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15bd74.  v0:= `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_DATA_TYPE` @type ^`com.j256.ormlite.field.DataType` @kind object;
  #L15bd78.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.dataType` @type ^`com.j256.ormlite.field.DataType` := v0 @kind object;
  #L15bd7c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.canBeNull` @type ^`boolean` := v1 @kind boolean;
  #L15bd80.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.persisted` @type ^`boolean` := v1 @kind boolean;
  #L15bd84.  v0:= -1I;
  #L15bd86.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int` := v0;
  #L15bd8a.  v0:= `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_PERSISTER_CLASS` @type ^`java.lang.Class` @kind object;
  #L15bd8e.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.persisterClass` @type ^`java.lang.Class` := v0 @kind object;
  #L15bd92.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionMaxEagerLevel` @type ^`int` := v1;
  #L15bd96.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderAscending` @type ^`boolean` := v1 @kind boolean;
  #L15bd9a.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.DatabaseFieldConfig` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15bdac.  v1:= 1I;
  #L15bdae.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15bdb4.  v0:= `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_DATA_TYPE` @type ^`com.j256.ormlite.field.DataType` @kind object;
  #L15bdb8.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.dataType` @type ^`com.j256.ormlite.field.DataType` := v0 @kind object;
  #L15bdbc.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.canBeNull` @type ^`boolean` := v1 @kind boolean;
  #L15bdc0.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.persisted` @type ^`boolean` := v1 @kind boolean;
  #L15bdc4.  v0:= -1I;
  #L15bdc6.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int` := v0;
  #L15bdca.  v0:= `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_PERSISTER_CLASS` @type ^`java.lang.Class` @kind object;
  #L15bdce.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.persisterClass` @type ^`java.lang.Class` := v0 @kind object;
  #L15bdd2.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionMaxEagerLevel` @type ^`int` := v1;
  #L15bdd6.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderAscending` @type ^`boolean` := v1 @kind boolean;
  #L15bdda.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` := v3 @kind object;
  #L15bdde.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.DatabaseFieldConfig` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `com.j256.ormlite.field.DataType` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `boolean` v8 , `boolean` v9 , `boolean` v10 , `java.lang.String` v11 @kind object, `boolean` v12 , `com.j256.ormlite.table.DatabaseTableConfig` v13 @kind object, `boolean` v14 , `java.lang.Enum` v15 @kind object, `boolean` v16 , `java.lang.String` v17 @kind object, `boolean` v18 , `java.lang.String` v19 @kind object, `java.lang.String` v20 @kind object, `boolean` v21 , `int` v22 , `int` v23 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.<init>:(Ljava/lang/String;Ljava/lang/String;Lcom/j256/ormlite/field/DataType;Ljava/lang/String;IZZZLjava/lang/String;ZLcom/j256/ormlite/table/DatabaseTableConfig;ZLjava/lang/Enum;ZLjava/lang/String;ZLjava/lang/String;Ljava/lang/String;ZII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15bdf0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15bdf6.  v1:= `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_DATA_TYPE` @type ^`com.j256.ormlite.field.DataType` @kind object;
  #L15bdfa.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.dataType` @type ^`com.j256.ormlite.field.DataType` := v1 @kind object;
  #L15bdfe.  v1:= 1I;
  #L15be00.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.canBeNull` @type ^`boolean` := v1 @kind boolean;
  #L15be04.  v1:= 1I;
  #L15be06.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.persisted` @type ^`boolean` := v1 @kind boolean;
  #L15be0a.  v1:= -1I;
  #L15be0c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int` := v1;
  #L15be10.  v1:= `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_PERSISTER_CLASS` @type ^`java.lang.Class` @kind object;
  #L15be14.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.persisterClass` @type ^`java.lang.Class` := v1 @kind object;
  #L15be18.  v1:= 1I;
  #L15be1a.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionMaxEagerLevel` @type ^`int` := v1;
  #L15be1e.  v1:= 1I;
  #L15be20.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderAscending` @type ^`boolean` := v1 @kind boolean;
  #L15be24.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` := v3 @kind object;
  #L15be28.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.columnName` @type ^`java.lang.String` := v4 @kind object;
  #L15be2c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.dataType` @type ^`com.j256.ormlite.field.DataType` := v5 @kind object;
  #L15be30.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.defaultValue` @type ^`java.lang.String` := v6 @kind object;
  #L15be34.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.width` @type ^`int` := v7;
  #L15be38.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.canBeNull` @type ^`boolean` := v8 @kind boolean;
  #L15be3c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.id` @type ^`boolean` := v9 @kind boolean;
  #L15be40.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.generatedId` @type ^`boolean` := v10 @kind boolean;
  #L15be44.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.generatedIdSequence` @type ^`java.lang.String` := v11 @kind object;
  #L15be48.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreign` @type ^`boolean` := v12 @kind boolean;
  #L15be4c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignTableConfig` @type ^`com.j256.ormlite.table.DatabaseTableConfig` := v13 @kind object;
  #L15be50.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.useGetSet` @type ^`boolean` := v14 @kind boolean;
  #L15be54.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.unknownEnumValue` @type ^`java.lang.Enum` := v15 @kind object;
  #L15be58.  v0:= v16;
  #L15be5c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.throwIfNull` @type ^`boolean` := v0 @kind boolean;
  #L15be60.  v0:= v17 @kind object;
  #L15be64.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.format` @type ^`java.lang.String` := v0 @kind object;
  #L15be68.  v0:= v18;
  #L15be6c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.unique` @type ^`boolean` := v0 @kind boolean;
  #L15be70.  v0:= v19 @kind object;
  #L15be74.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.indexName` @type ^`java.lang.String` := v0 @kind object;
  #L15be78.  v0:= v20 @kind object;
  #L15be7c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndexName` @type ^`java.lang.String` := v0 @kind object;
  #L15be80.  v0:= v21;
  #L15be84.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @type ^`boolean` := v0 @kind boolean;
  #L15be88.  v0:= v22;
  #L15be8c.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int` := v0;
  #L15be90.  v0:= v23;
  #L15be94.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionMaxEagerLevel` @type ^`int` := v0;
  #L15be98.  return @kind void;
}
procedure `java.lang.reflect.Method` `findGetMethod`(`java.lang.reflect.Field` v6 @kind object, `boolean` v7 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findGetMethod:(Ljava/lang/reflect/Field;Z)Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15beac.  v4:= 2I;
  #L15beae.  v3:= 0I;
  #L15beb0.  v5:= 1I;
  #L15beb2.  v0:= 0I;
  #L15beb4.  v1:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L15beb8.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L15bebe.  v2:= temp @kind object;
  #L15bec0.  call temp:= `equals`(v1, v2) @signature `Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15bec6.  v1:= temp;
  #L15bec8.  if v1 == 0 then goto L15befe;
  #L15becc.  v1:= new `java.lang.String`[v4];
  #L15bed0.  v2:= "get" @kind object;
  #L15bed4.  call temp:= `methodFromField`(v6, v2, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15beda.  v2:= temp @kind object;
  #L15bedc.  v1[v3]:= v2 @kind object;
  #L15bee0.  v2:= "is" @kind object;
  #L15bee4.  call temp:= `methodFromField`(v6, v2, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15beea.  v2:= temp @kind object;
  #L15beec.  v1[v5]:= v2 @kind object;
  #L15bef0.  call temp:= `findMethodFromNames`(v6, v5, v7, v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findMethodFromNames:(Ljava/lang/reflect/Field;ZZ[Ljava/lang/String;)Ljava/lang/reflect/Method;` @kind static;
  #L15bef6.  v1:= temp @kind object;
  #L15bef8.  if v1 != 0 then goto L15bf58;
  #L15befc.  return v0 @kind object;
  #L15befe.  v1:= 4I;
  #L15bf00.  v1:= new `java.lang.String`[v1];
  #L15bf04.  v2:= "get" @kind object;
  #L15bf08.  call temp:= `methodFromField`(v6, v2, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15bf0e.  v2:= temp @kind object;
  #L15bf10.  v1[v3]:= v2 @kind object;
  #L15bf14.  v2:= "get" @kind object;
  #L15bf18.  v3:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L15bf1c.  call temp:= `methodFromField`(v6, v2, v3) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15bf22.  v2:= temp @kind object;
  #L15bf24.  v1[v5]:= v2 @kind object;
  #L15bf28.  v2:= "is" @kind object;
  #L15bf2c.  call temp:= `methodFromField`(v6, v2, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15bf32.  v2:= temp @kind object;
  #L15bf34.  v1[v4]:= v2 @kind object;
  #L15bf38.  v2:= 3I;
  #L15bf3a.  v3:= "is" @kind object;
  #L15bf3e.  v4:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L15bf42.  call temp:= `methodFromField`(v6, v3, v4) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15bf48.  v3:= temp @kind object;
  #L15bf4a.  v1[v2]:= v3 @kind object;
  #L15bf4e.  call temp:= `findMethodFromNames`(v6, v5, v7, v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findMethodFromNames:(Ljava/lang/reflect/Field;ZZ[Ljava/lang/String;)Ljava/lang/reflect/Method;` @kind static;
  #L15bf54.  v1:= temp @kind object;
  #L15bf56.  goto L15bef8;
  #L15bf58.  call temp:= `getReturnType`(v1) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L15bf5e.  v2:= temp @kind object;
  #L15bf60.  call temp:= `getType`(v6) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L15bf66.  v3:= temp @kind object;
  #L15bf68.  if v2 == v3 then goto L15bfc6;
  #L15bf6c.  if v7 == 0 then goto L15befc;
  #L15bf70.  v0:= new `java.lang.IllegalArgumentException`;
  #L15bf74.  v2:= new `java.lang.StringBuilder`;
  #L15bf78.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15bf7e.  v3:= "Return type of get method " @kind object;
  #L15bf82.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bf88.  v2:= temp @kind object;
  #L15bf8a.  call temp:= `getName`(v1) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L15bf90.  v1:= temp @kind object;
  #L15bf92.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bf98.  v1:= temp @kind object;
  #L15bf9a.  v2:= " does not return " @kind object;
  #L15bf9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bfa4.  v1:= temp @kind object;
  #L15bfa6.  call temp:= `getType`(v6) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L15bfac.  v2:= temp @kind object;
  #L15bfae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bfb4.  v1:= temp @kind object;
  #L15bfb6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15bfbc.  v1:= temp @kind object;
  #L15bfbe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15bfc4.  throw v0;
  #L15bfc6.  v0:= v1 @kind object;
  #L15bfc8.  goto L15befc;
}
procedure `java.lang.String` `findIndexName`(`com.j256.ormlite.field.DatabaseFieldConfig` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findIndexName:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L15bfdc.  v0:= v2.`com.j256.ormlite.field.DatabaseFieldConfig.columnName` @type ^`java.lang.String` @kind object;
  #L15bfe0.  if v0 != 0 then goto L15c024;
  #L15bfe4.  v0:= new `java.lang.StringBuilder`;
  #L15bfe8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15bfee.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15bff4.  v0:= temp @kind object;
  #L15bff6.  v1:= "_" @kind object;
  #L15bffa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c000.  v0:= temp @kind object;
  #L15c002.  v1:= v2.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` @kind object;
  #L15c006.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c00c.  v0:= temp @kind object;
  #L15c00e.  v1:= "_idx" @kind object;
  #L15c012.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c018.  v0:= temp @kind object;
  #L15c01a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c020.  v0:= temp @kind object;
  #L15c022.  return v0 @kind object;
  #L15c024.  v0:= new `java.lang.StringBuilder`;
  #L15c028.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c02e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c034.  v0:= temp @kind object;
  #L15c036.  v1:= "_" @kind object;
  #L15c03a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c040.  v0:= temp @kind object;
  #L15c042.  v1:= v2.`com.j256.ormlite.field.DatabaseFieldConfig.columnName` @type ^`java.lang.String` @kind object;
  #L15c046.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c04c.  v0:= temp @kind object;
  #L15c04e.  v1:= "_idx" @kind object;
  #L15c052.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c058.  v0:= temp @kind object;
  #L15c05a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c060.  v0:= temp @kind object;
  #L15c062.  goto L15c022;
}
procedure `java.lang.Enum` `findMatchingEnumVal`(`java.lang.reflect.Field` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findMatchingEnumVal:(Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/Enum;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15c074.  if v6 == 0 then goto L15c084;
  #L15c078.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15c07e.  v0:= temp;
  #L15c080.  if v0 != 0 then goto L15c088;
  #L15c084.  v0:= 0I;
  #L15c086.  return v0 @kind object;
  #L15c088.  call temp:= `getType`(v5) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L15c08e.  v0:= temp @kind object;
  #L15c090.  call temp:= `getEnumConstants`(v0) @signature `Ljava/lang/Class;.getEnumConstants:()[Ljava/lang/Object;` @kind virtual;
  #L15c096.  v0:= temp @kind object;
  #L15c098.  v0:= (`java.lang.Enum`[]) v0 @kind object;
  #L15c09c.  v0:= (`java.lang.Enum`[]) v0 @kind object;
  #L15c0a0.  v3:= length @variable v0;
  #L15c0a2.  v1:= 0I;
  #L15c0a4.  v2:= v1;
  #L15c0a6.  if v2 >= v3 then goto L15c0ce;
  #L15c0aa.  v1:= v0[v2] @kind object;
  #L15c0ae.  call temp:= `name`(v1) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L15c0b4.  v4:= temp @kind object;
  #L15c0b6.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15c0bc.  v4:= temp;
  #L15c0be.  if v4 == 0 then goto L15c0c6;
  #L15c0c2.  v0:= v1 @kind object;
  #L15c0c4.  goto L15c086;
  #L15c0c6.  v1:= v2 + 1;
  #L15c0ca.  v2:= v1;
  #L15c0cc.  goto L15c0a6;
  #L15c0ce.  v0:= new `java.lang.IllegalArgumentException`;
  #L15c0d2.  v1:= new `java.lang.StringBuilder`;
  #L15c0d6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c0dc.  v2:= "Unknwown enum unknown name " @kind object;
  #L15c0e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c0e6.  v1:= temp @kind object;
  #L15c0e8.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c0ee.  v1:= temp @kind object;
  #L15c0f0.  v2:= " for field " @kind object;
  #L15c0f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c0fa.  v1:= temp @kind object;
  #L15c0fc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c102.  v1:= temp @kind object;
  #L15c104.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c10a.  v1:= temp @kind object;
  #L15c10c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c112.  throw v0;
}
procedure `java.lang.reflect.Method` `findMethodFromNames`(`java.lang.reflect.Field` v9 @kind object, `boolean` v10 , `boolean` v11 , `java.lang.String`[] v12 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findMethodFromNames:(Ljava/lang/reflect/Field;ZZ[Ljava/lang/String;)Ljava/lang/reflect/Method;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L15c124.  v2:= 0I;
  #L15c126.  v0:= 0I;
  #L15c128.  v4:= length @variable v12;
  #L15c12a.  v3:= v0;
  #L15c12c.  v1:= v2 @kind object;
  #L15c12e.  if v3 >= v4 then goto L15c188;
  #L15c132.  v0:= v12[v3] @kind object;
  #L15c136.  if v10 == 0 then goto L15c152;
  #Try_start0.  
  #L15c13a.  call temp:= `getDeclaringClass`(v9) @signature `Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L15c140.  v5:= temp @kind object;
  #L15c142.  v6:= 0I;
  #L15c144.  v6:= new `java.lang.Class`[v6];
  #L15c148.  call temp:= `getMethod`(v5, v0, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L15c14e.  v0:= temp @kind object;
  #L15c150.  return v0 @kind object;
  #L15c152.  call temp:= `getDeclaringClass`(v9) @signature `Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L15c158.  v5:= temp @kind object;
  #L15c15a.  v6:= 1I;
  #L15c15c.  v6:= new `java.lang.Class`[v6];
  #L15c160.  v7:= 0I;
  #L15c162.  call temp:= `getType`(v9) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L15c168.  v8:= temp @kind object;
  #L15c16a.  v6[v7]:= v8 @kind object;
  #L15c16e.  call temp:= `getMethod`(v5, v0, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #Try_end0.  
  #L15c174.  v0:= temp @kind object;
  #L15c176.  goto L15c150;
  #L15c178.  v0:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L15c17a.  if v1 != 0 then goto L15c1e4;
  #L15c17e.  v1:= v3 + 1;
  #L15c182.  v3:= v1;
  #L15c184.  v1:= v0 @kind object;
  #L15c186.  goto L15c12e;
  #L15c188.  if v11 == 0 then goto L15c1e0;
  #L15c18c.  v2:= new `java.lang.IllegalArgumentException`;
  #L15c190.  v0:= new `java.lang.StringBuilder`;
  #L15c194.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c19a.  v3:= "Could not find appropriate " @kind object;
  #L15c19e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c1a4.  v3:= temp @kind object;
  #L15c1a6.  if v10 == 0 then goto L15c1da;
  #L15c1aa.  v0:= "get" @kind object;
  #L15c1ae.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c1b4.  v0:= temp @kind object;
  #L15c1b6.  v3:= " method for " @kind object;
  #L15c1ba.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c1c0.  v0:= temp @kind object;
  #L15c1c2.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c1c8.  v0:= temp @kind object;
  #L15c1ca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c1d0.  v0:= temp @kind object;
  #L15c1d2.  call `<init>`(v2, v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15c1d8.  throw v2;
  #L15c1da.  v0:= "set" @kind object;
  #L15c1de.  goto L15c1ae;
  #L15c1e0.  v0:= v2 @kind object;
  #L15c1e2.  goto L15c150;
  #L15c1e4.  v0:= v1 @kind object;
  #L15c1e6.  goto L15c17e;
  catch `java.lang.NoSuchMethodException` @[Try_start0..Try_end0] goto L15c178;
}
procedure `java.lang.reflect.Method` `findSetMethod`(`java.lang.reflect.Field` v6 @kind object, `boolean` v7 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findSetMethod:(Ljava/lang/reflect/Field;Z)Ljava/lang/reflect/Method;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15c208.  v5:= 1I;
  #L15c20a.  v0:= 0I;
  #L15c20c.  v4:= 0I;
  #L15c20e.  v1:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L15c212.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L15c218.  v2:= temp @kind object;
  #L15c21a.  call temp:= `equals`(v1, v2) @signature `Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15c220.  v1:= temp;
  #L15c222.  if v1 == 0 then goto L15c248;
  #L15c226.  v1:= new `java.lang.String`[v5];
  #L15c22a.  v2:= "set" @kind object;
  #L15c22e.  call temp:= `methodFromField`(v6, v2, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15c234.  v2:= temp @kind object;
  #L15c236.  v1[v4]:= v2 @kind object;
  #L15c23a.  call temp:= `findMethodFromNames`(v6, v4, v7, v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findMethodFromNames:(Ljava/lang/reflect/Field;ZZ[Ljava/lang/String;)Ljava/lang/reflect/Method;` @kind static;
  #L15c240.  v1:= temp @kind object;
  #L15c242.  if v1 != 0 then goto L15c27c;
  #L15c246.  return v0 @kind object;
  #L15c248.  v1:= 2I;
  #L15c24a.  v1:= new `java.lang.String`[v1];
  #L15c24e.  v2:= "set" @kind object;
  #L15c252.  call temp:= `methodFromField`(v6, v2, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15c258.  v2:= temp @kind object;
  #L15c25a.  v1[v4]:= v2 @kind object;
  #L15c25e.  v2:= "set" @kind object;
  #L15c262.  v3:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L15c266.  call temp:= `methodFromField`(v6, v2, v3) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L15c26c.  v2:= temp @kind object;
  #L15c26e.  v1[v5]:= v2 @kind object;
  #L15c272.  call temp:= `findMethodFromNames`(v6, v4, v7, v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findMethodFromNames:(Ljava/lang/reflect/Field;ZZ[Ljava/lang/String;)Ljava/lang/reflect/Method;` @kind static;
  #L15c278.  v1:= temp @kind object;
  #L15c27a.  goto L15c242;
  #L15c27c.  call temp:= `getReturnType`(v1) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L15c282.  v2:= temp @kind object;
  #L15c284.  v3:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L15c288.  if v2 == v3 then goto L15c2f2;
  #L15c28c.  if v7 == 0 then goto L15c246;
  #L15c290.  v0:= new `java.lang.IllegalArgumentException`;
  #L15c294.  v2:= new `java.lang.StringBuilder`;
  #L15c298.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c29e.  v3:= "Return type of set method " @kind object;
  #L15c2a2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c2a8.  v2:= temp @kind object;
  #L15c2aa.  call temp:= `getName`(v1) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L15c2b0.  v3:= temp @kind object;
  #L15c2b2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c2b8.  v2:= temp @kind object;
  #L15c2ba.  v3:= " returns " @kind object;
  #L15c2be.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c2c4.  v2:= temp @kind object;
  #L15c2c6.  call temp:= `getReturnType`(v1) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L15c2cc.  v1:= temp @kind object;
  #L15c2ce.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c2d4.  v1:= temp @kind object;
  #L15c2d6.  v2:= " instead of void" @kind object;
  #L15c2da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c2e0.  v1:= temp @kind object;
  #L15c2e2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c2e8.  v1:= temp @kind object;
  #L15c2ea.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c2f0.  throw v0;
  #L15c2f2.  v0:= v1 @kind object;
  #L15c2f4.  goto L15c246;
}
procedure `com.j256.ormlite.field.DatabaseFieldConfig` `fromDatabaseField`(`com.j256.ormlite.db.DatabaseType` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.reflect.Field` v5 @kind object, `com.j256.ormlite.field.DatabaseField` v6 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.fromDatabaseField:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/reflect/Field;Lcom/j256/ormlite/field/DatabaseField;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15c308.  v0:= new `com.j256.ormlite.field.DatabaseFieldConfig`;
  #L15c30c.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.<init>:()V` @kind direct;
  #L15c312.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L15c318.  v1:= temp @kind object;
  #L15c31a.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` := v1 @kind object;
  #L15c31e.  call temp:= `isEntityNamesMustBeUpCase`(v3) @signature `Lcom/j256/ormlite/db/DatabaseType;.isEntityNamesMustBeUpCase:()Z` @kind interface;
  #L15c324.  v1:= temp;
  #L15c326.  if v1 == 0 then goto L15c33a;
  #L15c32a.  v1:= v0.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` @kind object;
  #L15c32e.  call temp:= `upCaseEntityName`(v3, v1) @signature `Lcom/j256/ormlite/db/DatabaseType;.upCaseEntityName:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L15c334.  v1:= temp @kind object;
  #L15c336.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` := v1 @kind object;
  #L15c33a.  call temp:= `columnName`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.columnName:()Ljava/lang/String;` @kind interface;
  #L15c340.  v1:= temp @kind object;
  #L15c342.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c348.  v1:= temp @kind object;
  #L15c34a.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.columnName` @type ^`java.lang.String` := v1 @kind object;
  #L15c34e.  call temp:= `dataType`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.dataType:()Lcom/j256/ormlite/field/DataType;` @kind interface;
  #L15c354.  v1:= temp @kind object;
  #L15c356.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.dataType` @type ^`com.j256.ormlite.field.DataType` := v1 @kind object;
  #L15c35a.  call temp:= `defaultValue`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.defaultValue:()Ljava/lang/String;` @kind interface;
  #L15c360.  v1:= temp @kind object;
  #L15c362.  v2:= "__ormlite__ no default value string was specified" @kind object;
  #L15c366.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15c36c.  v2:= temp;
  #L15c36e.  if v2 != 0 then goto L15c376;
  #L15c372.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.defaultValue` @type ^`java.lang.String` := v1 @kind object;
  #L15c376.  call temp:= `width`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.width:()I` @kind interface;
  #L15c37c.  v1:= temp;
  #L15c37e.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.width` @type ^`int` := v1;
  #L15c382.  call temp:= `canBeNull`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.canBeNull:()Z` @kind interface;
  #L15c388.  v1:= temp;
  #L15c38a.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.canBeNull` @type ^`boolean` := v1 @kind boolean;
  #L15c38e.  call temp:= `id`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.id:()Z` @kind interface;
  #L15c394.  v1:= temp;
  #L15c396.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.id` @type ^`boolean` := v1 @kind boolean;
  #L15c39a.  call temp:= `generatedId`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.generatedId:()Z` @kind interface;
  #L15c3a0.  v1:= temp;
  #L15c3a2.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.generatedId` @type ^`boolean` := v1 @kind boolean;
  #L15c3a6.  call temp:= `generatedIdSequence`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.generatedIdSequence:()Ljava/lang/String;` @kind interface;
  #L15c3ac.  v1:= temp @kind object;
  #L15c3ae.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c3b4.  v1:= temp @kind object;
  #L15c3b6.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.generatedIdSequence` @type ^`java.lang.String` := v1 @kind object;
  #L15c3ba.  call temp:= `foreign`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.foreign:()Z` @kind interface;
  #L15c3c0.  v1:= temp;
  #L15c3c2.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreign` @type ^`boolean` := v1 @kind boolean;
  #L15c3c6.  call temp:= `useGetSet`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.useGetSet:()Z` @kind interface;
  #L15c3cc.  v1:= temp;
  #L15c3ce.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.useGetSet` @type ^`boolean` := v1 @kind boolean;
  #L15c3d2.  call temp:= `unknownEnumName`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.unknownEnumName:()Ljava/lang/String;` @kind interface;
  #L15c3d8.  v1:= temp @kind object;
  #L15c3da.  call temp:= `findMatchingEnumVal`(v5, v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findMatchingEnumVal:(Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L15c3e0.  v1:= temp @kind object;
  #L15c3e2.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.unknownEnumValue` @type ^`java.lang.Enum` := v1 @kind object;
  #L15c3e6.  call temp:= `throwIfNull`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.throwIfNull:()Z` @kind interface;
  #L15c3ec.  v1:= temp;
  #L15c3ee.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.throwIfNull` @type ^`boolean` := v1 @kind boolean;
  #L15c3f2.  call temp:= `format`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.format:()Ljava/lang/String;` @kind interface;
  #L15c3f8.  v1:= temp @kind object;
  #L15c3fa.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c400.  v1:= temp @kind object;
  #L15c402.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.format` @type ^`java.lang.String` := v1 @kind object;
  #L15c406.  call temp:= `unique`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.unique:()Z` @kind interface;
  #L15c40c.  v1:= temp;
  #L15c40e.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.unique` @type ^`boolean` := v1 @kind boolean;
  #L15c412.  call temp:= `uniqueCombo`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.uniqueCombo:()Z` @kind interface;
  #L15c418.  v1:= temp;
  #L15c41a.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueCombo` @type ^`boolean` := v1 @kind boolean;
  #L15c41e.  call temp:= `index`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.index:()Z` @kind interface;
  #L15c424.  v1:= temp;
  #L15c426.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.index` @type ^`boolean` := v1 @kind boolean;
  #L15c42a.  call temp:= `indexName`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.indexName:()Ljava/lang/String;` @kind interface;
  #L15c430.  v1:= temp @kind object;
  #L15c432.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c438.  v1:= temp @kind object;
  #L15c43a.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.indexName` @type ^`java.lang.String` := v1 @kind object;
  #L15c43e.  call temp:= `uniqueIndex`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.uniqueIndex:()Z` @kind interface;
  #L15c444.  v1:= temp;
  #L15c446.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndex` @type ^`boolean` := v1 @kind boolean;
  #L15c44a.  call temp:= `uniqueIndexName`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.uniqueIndexName:()Ljava/lang/String;` @kind interface;
  #L15c450.  v1:= temp @kind object;
  #L15c452.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c458.  v1:= temp @kind object;
  #L15c45a.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndexName` @type ^`java.lang.String` := v1 @kind object;
  #L15c45e.  call temp:= `foreignAutoRefresh`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.foreignAutoRefresh:()Z` @kind interface;
  #L15c464.  v1:= temp;
  #L15c466.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @type ^`boolean` := v1 @kind boolean;
  #L15c46a.  v1:= v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @type ^`boolean` @kind boolean;
  #L15c46e.  if v1 != 0 then goto L15c480;
  #L15c472.  call temp:= `maxForeignAutoRefreshLevel`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.maxForeignAutoRefreshLevel:()I` @kind interface;
  #L15c478.  v1:= temp;
  #L15c47a.  v2:= 2I;
  #L15c47c.  if v1 == v2 then goto L15c4f2;
  #L15c480.  call temp:= `maxForeignAutoRefreshLevel`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.maxForeignAutoRefreshLevel:()I` @kind interface;
  #L15c486.  v1:= temp;
  #L15c488.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int` := v1;
  #L15c48c.  call temp:= `persisterClass`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.persisterClass:()Ljava/lang/Class;` @kind interface;
  #L15c492.  v1:= temp @kind object;
  #L15c494.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.persisterClass` @type ^`java.lang.Class` := v1 @kind object;
  #L15c498.  call temp:= `allowGeneratedIdInsert`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.allowGeneratedIdInsert:()Z` @kind interface;
  #L15c49e.  v1:= temp;
  #L15c4a0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.allowGeneratedIdInsert` @type ^`boolean` := v1 @kind boolean;
  #L15c4a4.  call temp:= `columnDefinition`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.columnDefinition:()Ljava/lang/String;` @kind interface;
  #L15c4aa.  v1:= temp @kind object;
  #L15c4ac.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c4b2.  v1:= temp @kind object;
  #L15c4b4.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.columnDefinition` @type ^`java.lang.String` := v1 @kind object;
  #L15c4b8.  call temp:= `foreignAutoCreate`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.foreignAutoCreate:()Z` @kind interface;
  #L15c4be.  v1:= temp;
  #L15c4c0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoCreate` @type ^`boolean` := v1 @kind boolean;
  #L15c4c4.  call temp:= `version`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.version:()Z` @kind interface;
  #L15c4ca.  v1:= temp;
  #L15c4cc.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.version` @type ^`boolean` := v1 @kind boolean;
  #L15c4d0.  call temp:= `foreignColumnName`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.foreignColumnName:()Ljava/lang/String;` @kind interface;
  #L15c4d6.  v1:= temp @kind object;
  #L15c4d8.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c4de.  v1:= temp @kind object;
  #L15c4e0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignColumnName` @type ^`java.lang.String` := v1 @kind object;
  #L15c4e4.  call temp:= `readOnly`(v6) @signature `Lcom/j256/ormlite/field/DatabaseField;.readOnly:()Z` @kind interface;
  #L15c4ea.  v1:= temp;
  #L15c4ec.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.readOnly` @type ^`boolean` := v1 @kind boolean;
  #L15c4f0.  return v0 @kind object;
  #L15c4f2.  v1:= -1I;
  #L15c4f4.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int` := v1;
  #L15c4f8.  goto L15c48c;
}
procedure `com.j256.ormlite.field.DatabaseFieldConfig` `fromField`(`com.j256.ormlite.db.DatabaseType` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.reflect.Field` v5 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.fromField:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/reflect/Field;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L15c50c.  v1:= 0I;
  #L15c50e.  v0:= constclass @type ^`com.j256.ormlite.field.DatabaseField` @kind object;
  #L15c512.  call temp:= `getAnnotation`(v5, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L15c518.  v0:= temp @kind object;
  #L15c51a.  v0:= (`com.j256.ormlite.field.DatabaseField`) v0 @kind object;
  #L15c51e.  if v0 == 0 then goto L15c53c;
  #L15c522.  call temp:= `persisted`(v0) @signature `Lcom/j256/ormlite/field/DatabaseField;.persisted:()Z` @kind interface;
  #L15c528.  v2:= temp;
  #L15c52a.  if v2 == 0 then goto L15c538;
  #L15c52e.  call temp:= `fromDatabaseField`(v3, v4, v5, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.fromDatabaseField:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/String;Ljava/lang/reflect/Field;Lcom/j256/ormlite/field/DatabaseField;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @kind static;
  #L15c534.  v0:= temp @kind object;
  #L15c536.  return v0 @kind object;
  #L15c538.  v0:= v1 @kind object;
  #L15c53a.  goto L15c536;
  #L15c53c.  v0:= constclass @type ^`com.j256.ormlite.field.ForeignCollectionField` @kind object;
  #L15c540.  call temp:= `getAnnotation`(v5, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L15c546.  v0:= temp @kind object;
  #L15c548.  v0:= (`com.j256.ormlite.field.ForeignCollectionField`) v0 @kind object;
  #L15c54c.  if v0 == 0 then goto L15c55a;
  #L15c550.  call temp:= `fromForeignCollection`(v3, v5, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.fromForeignCollection:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/reflect/Field;Lcom/j256/ormlite/field/ForeignCollectionField;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @kind static;
  #L15c556.  v0:= temp @kind object;
  #L15c558.  goto L15c536;
  #L15c55a.  v0:= `@@com.j256.ormlite.field.DatabaseFieldConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` @kind object;
  #L15c55e.  if v0 != 0 then goto L15c566;
  #L15c562.  v0:= v1 @kind object;
  #L15c564.  goto L15c536;
  #L15c566.  v0:= `@@com.j256.ormlite.field.DatabaseFieldConfig.javaxPersistenceConfigurer` @type ^`com.j256.ormlite.misc.JavaxPersistenceConfigurer` @kind object;
  #L15c56a.  call temp:= `createFieldConfig`(v0, v3, v5) @signature `Lcom/j256/ormlite/misc/JavaxPersistenceConfigurer;.createFieldConfig:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/reflect/Field;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @kind interface;
  #L15c570.  v0:= temp @kind object;
  #L15c572.  goto L15c536;
}
procedure `com.j256.ormlite.field.DatabaseFieldConfig` `fromForeignCollection`(`com.j256.ormlite.db.DatabaseType` v2 @kind object, `java.lang.reflect.Field` v3 @kind object, `com.j256.ormlite.field.ForeignCollectionField` v4 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.fromForeignCollection:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/reflect/Field;Lcom/j256/ormlite/field/ForeignCollectionField;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L15c584.  v0:= new `com.j256.ormlite.field.DatabaseFieldConfig`;
  #L15c588.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.<init>:()V` @kind direct;
  #L15c58e.  call temp:= `getName`(v3) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L15c594.  v1:= temp @kind object;
  #L15c596.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` := v1 @kind object;
  #L15c59a.  call temp:= `columnName`(v4) @signature `Lcom/j256/ormlite/field/ForeignCollectionField;.columnName:()Ljava/lang/String;` @kind interface;
  #L15c5a0.  v1:= temp @kind object;
  #L15c5a2.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15c5a8.  v1:= temp;
  #L15c5aa.  if v1 <= 0 then goto L15c5ba;
  #L15c5ae.  call temp:= `columnName`(v4) @signature `Lcom/j256/ormlite/field/ForeignCollectionField;.columnName:()Ljava/lang/String;` @kind interface;
  #L15c5b4.  v1:= temp @kind object;
  #L15c5b6.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.columnName` @type ^`java.lang.String` := v1 @kind object;
  #L15c5ba.  v1:= 1I;
  #L15c5bc.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollection` @type ^`boolean` := v1 @kind boolean;
  #L15c5c0.  call temp:= `eager`(v4) @signature `Lcom/j256/ormlite/field/ForeignCollectionField;.eager:()Z` @kind interface;
  #L15c5c6.  v1:= temp;
  #L15c5c8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionEager` @type ^`boolean` := v1 @kind boolean;
  #L15c5cc.  call temp:= `maxEagerLevel`(v4) @signature `Lcom/j256/ormlite/field/ForeignCollectionField;.maxEagerLevel:()I` @kind interface;
  #L15c5d2.  v1:= temp;
  #L15c5d4.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionMaxEagerLevel` @type ^`int` := v1;
  #L15c5d8.  call temp:= `orderColumnName`(v4) @signature `Lcom/j256/ormlite/field/ForeignCollectionField;.orderColumnName:()Ljava/lang/String;` @kind interface;
  #L15c5de.  v1:= temp @kind object;
  #L15c5e0.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c5e6.  v1:= temp @kind object;
  #L15c5e8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderColumnName` @type ^`java.lang.String` := v1 @kind object;
  #L15c5ec.  call temp:= `orderAscending`(v4) @signature `Lcom/j256/ormlite/field/ForeignCollectionField;.orderAscending:()Z` @kind interface;
  #L15c5f2.  v1:= temp;
  #L15c5f4.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderAscending` @type ^`boolean` := v1 @kind boolean;
  #L15c5f8.  call temp:= `columnName`(v4) @signature `Lcom/j256/ormlite/field/ForeignCollectionField;.columnName:()Ljava/lang/String;` @kind interface;
  #L15c5fe.  v1:= temp @kind object;
  #L15c600.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c606.  v1:= temp @kind object;
  #L15c608.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionColumnName` @type ^`java.lang.String` := v1 @kind object;
  #L15c60c.  call temp:= `foreignFieldName`(v4) @signature `Lcom/j256/ormlite/field/ForeignCollectionField;.foreignFieldName:()Ljava/lang/String;` @kind interface;
  #L15c612.  v1:= temp @kind object;
  #L15c614.  call temp:= `valueIfNotBlank`(v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L15c61a.  v1:= temp @kind object;
  #L15c61c.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionForeignFieldName` @type ^`java.lang.String` := v1 @kind object;
  #L15c620.  return v0 @kind object;
}
procedure `java.lang.String` `methodFromField`(`java.lang.reflect.Field` v4 @kind object, `java.lang.String` v5 @kind object, `java.util.Locale` v6 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.methodFromField:(Ljava/lang/reflect/Field;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15c634.  v3:= 1I;
  #L15c636.  call temp:= `getName`(v4) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L15c63c.  v1:= temp @kind object;
  #L15c63e.  v0:= 0I;
  #L15c640.  call temp:= `substring`(v1, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L15c646.  v0:= temp @kind object;
  #L15c648.  if v6 != 0 then goto L15c682;
  #L15c64c.  call temp:= `toUpperCase`(v0) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L15c652.  v0:= temp @kind object;
  #L15c654.  v2:= new `java.lang.StringBuilder`;
  #L15c658.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c65e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c664.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c66a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15c670.  v0:= temp;
  #L15c672.  call temp:= `append`(v2, v1, v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c678.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c67e.  v0:= temp @kind object;
  #L15c680.  return v0 @kind object;
  #L15c682.  call temp:= `toUpperCase`(v0, v6) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L15c688.  v0:= temp @kind object;
  #L15c68a.  goto L15c654;
}
procedure `java.lang.String` `valueIfNotBlank`(`java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.valueIfNotBlank:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L15c69c.  if v1 == 0 then goto L15c6ac;
  #L15c6a0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15c6a6.  v0:= temp;
  #L15c6a8.  if v0 != 0 then goto L15c6ae;
  #L15c6ac.  v1:= 0I;
  #L15c6ae.  return v1 @kind object;
}
procedure `java.lang.String` `getColumnDefinition`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getColumnDefinition:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c6c0.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.columnDefinition` @type ^`java.lang.String` @kind object;
  #L15c6c4.  return v0 @kind object;
}
procedure `java.lang.String` `getColumnName`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c6d8.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.columnName` @type ^`java.lang.String` @kind object;
  #L15c6dc.  return v0 @kind object;
}
procedure `com.j256.ormlite.field.DataPersister` `getDataPersister`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getDataPersister:()Lcom/j256/ormlite/field/DataPersister;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c6f0.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.dataPersister` @type ^`com.j256.ormlite.field.DataPersister` @kind object;
  #L15c6f4.  if v0 != 0 then goto L15c706;
  #L15c6f8.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.dataType` @type ^`com.j256.ormlite.field.DataType` @kind object;
  #L15c6fc.  call temp:= `getDataPersister`(v0) @signature `Lcom/j256/ormlite/field/DataType;.getDataPersister:()Lcom/j256/ormlite/field/DataPersister;` @kind virtual;
  #L15c702.  v0:= temp @kind object;
  #L15c704.  return v0 @kind object;
  #L15c706.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.dataPersister` @type ^`com.j256.ormlite.field.DataPersister` @kind object;
  #L15c70a.  goto L15c704;
}
procedure `com.j256.ormlite.field.DataType` `getDataType`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getDataType:()Lcom/j256/ormlite/field/DataType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c71c.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.dataType` @type ^`com.j256.ormlite.field.DataType` @kind object;
  #L15c720.  return v0 @kind object;
}
procedure `java.lang.String` `getDefaultValue`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getDefaultValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c734.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.defaultValue` @type ^`java.lang.String` @kind object;
  #L15c738.  return v0 @kind object;
}
procedure `java.lang.String` `getFieldName`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFieldName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c74c.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` @kind object;
  #L15c750.  return v0 @kind object;
}
procedure `java.lang.String` `getForeignCollectionColumnName`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c764.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionColumnName` @type ^`java.lang.String` @kind object;
  #L15c768.  return v0 @kind object;
}
procedure `java.lang.String` `getForeignCollectionForeignFieldName`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionForeignFieldName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c77c.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionForeignFieldName` @type ^`java.lang.String` @kind object;
  #L15c780.  return v0 @kind object;
}
procedure `int` `getForeignCollectionMaxEagerLevel`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionMaxEagerLevel:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c794.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionMaxEagerLevel` @type ^`int`;
  #L15c798.  return v0;
}
procedure `java.lang.String` `getForeignCollectionOrderColumnName`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionOrderColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c7ac.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderColumnName` @type ^`java.lang.String` @kind object;
  #L15c7b0.  return v0 @kind object;
}
procedure `java.lang.String` `getForeignColumnName`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignColumnName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c7c4.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignColumnName` @type ^`java.lang.String` @kind object;
  #L15c7c8.  return v0 @kind object;
}
procedure `com.j256.ormlite.table.DatabaseTableConfig` `getForeignTableConfig`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignTableConfig:()Lcom/j256/ormlite/table/DatabaseTableConfig;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c7dc.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignTableConfig` @type ^`com.j256.ormlite.table.DatabaseTableConfig` @kind object;
  #L15c7e0.  return v0 @kind object;
}
procedure `java.lang.String` `getFormat`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFormat:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c7f4.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.format` @type ^`java.lang.String` @kind object;
  #L15c7f8.  return v0 @kind object;
}
procedure `java.lang.String` `getGeneratedIdSequence`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getGeneratedIdSequence:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c80c.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.generatedIdSequence` @type ^`java.lang.String` @kind object;
  #L15c810.  return v0 @kind object;
}
procedure `java.lang.String` `getIndexName`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getIndexName:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c824.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.index` @type ^`boolean` @kind boolean;
  #L15c828.  if v0 == 0 then goto L15c840;
  #L15c82c.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.indexName` @type ^`java.lang.String` @kind object;
  #L15c830.  if v0 != 0 then goto L15c840;
  #L15c834.  call temp:= `findIndexName`(v1, v2) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findIndexName:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L15c83a.  v0:= temp @kind object;
  #L15c83c.  v1.`com.j256.ormlite.field.DatabaseFieldConfig.indexName` @type ^`java.lang.String` := v0 @kind object;
  #L15c840.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.indexName` @type ^`java.lang.String` @kind object;
  #L15c844.  return v0 @kind object;
}
procedure `int` `getMaxForeignAutoRefreshLevel`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getMaxForeignAutoRefreshLevel:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c858.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @type ^`boolean` @kind boolean;
  #L15c85c.  if v0 == 0 then goto L15c866;
  #L15c860.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int`;
  #L15c864.  return v0;
  #L15c866.  v0:= -1I;
  #L15c868.  goto L15c864;
}
procedure `java.lang.Class` `getPersisterClass`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getPersisterClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c87c.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.persisterClass` @type ^`java.lang.Class` @kind object;
  #L15c880.  return v0 @kind object;
}
procedure `java.lang.String` `getUniqueIndexName`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getUniqueIndexName:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c894.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndex` @type ^`boolean` @kind boolean;
  #L15c898.  if v0 == 0 then goto L15c8b0;
  #L15c89c.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndexName` @type ^`java.lang.String` @kind object;
  #L15c8a0.  if v0 != 0 then goto L15c8b0;
  #L15c8a4.  call temp:= `findIndexName`(v1, v2) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.findIndexName:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L15c8aa.  v0:= temp @kind object;
  #L15c8ac.  v1.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndexName` @type ^`java.lang.String` := v0 @kind object;
  #L15c8b0.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndexName` @type ^`java.lang.String` @kind object;
  #L15c8b4.  return v0 @kind object;
}
procedure `java.lang.Enum` `getUnknownEnumValue`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getUnknownEnumValue:()Ljava/lang/Enum;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c8c8.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.unknownEnumValue` @type ^`java.lang.Enum` @kind object;
  #L15c8cc.  return v0 @kind object;
}
procedure `int` `getWidth`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c8e0.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.width` @type ^`int`;
  #L15c8e4.  return v0;
}
procedure `boolean` `isAllowGeneratedIdInsert`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isAllowGeneratedIdInsert:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c8f8.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.allowGeneratedIdInsert` @type ^`boolean` @kind boolean;
  #L15c8fc.  return v0;
}
procedure `boolean` `isCanBeNull`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isCanBeNull:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c910.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.canBeNull` @type ^`boolean` @kind boolean;
  #L15c914.  return v0;
}
procedure `boolean` `isForeign`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeign:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c928.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreign` @type ^`boolean` @kind boolean;
  #L15c92c.  return v0;
}
procedure `boolean` `isForeignAutoCreate`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignAutoCreate:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c940.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoCreate` @type ^`boolean` @kind boolean;
  #L15c944.  return v0;
}
procedure `boolean` `isForeignAutoRefresh`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignAutoRefresh:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c958.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @type ^`boolean` @kind boolean;
  #L15c95c.  return v0;
}
procedure `boolean` `isForeignCollection`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignCollection:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c970.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollection` @type ^`boolean` @kind boolean;
  #L15c974.  return v0;
}
procedure `boolean` `isForeignCollectionEager`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignCollectionEager:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c988.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionEager` @type ^`boolean` @kind boolean;
  #L15c98c.  return v0;
}
procedure `boolean` `isForeignCollectionOrderAscending`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignCollectionOrderAscending:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c9a0.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderAscending` @type ^`boolean` @kind boolean;
  #L15c9a4.  return v0;
}
procedure `boolean` `isGeneratedId`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isGeneratedId:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c9b8.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.generatedId` @type ^`boolean` @kind boolean;
  #L15c9bc.  return v0;
}
procedure `boolean` `isId`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isId:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c9d0.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.id` @type ^`boolean` @kind boolean;
  #L15c9d4.  return v0;
}
procedure `boolean` `isIndex`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isIndex:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c9e8.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.index` @type ^`boolean` @kind boolean;
  #L15c9ec.  return v0;
}
procedure `boolean` `isPersisted`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isPersisted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ca00.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.persisted` @type ^`boolean` @kind boolean;
  #L15ca04.  return v0;
}
procedure `boolean` `isReadOnly`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isReadOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ca18.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.readOnly` @type ^`boolean` @kind boolean;
  #L15ca1c.  return v0;
}
procedure `boolean` `isThrowIfNull`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isThrowIfNull:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ca30.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.throwIfNull` @type ^`boolean` @kind boolean;
  #L15ca34.  return v0;
}
procedure `boolean` `isUnique`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isUnique:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ca48.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.unique` @type ^`boolean` @kind boolean;
  #L15ca4c.  return v0;
}
procedure `boolean` `isUniqueCombo`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isUniqueCombo:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ca60.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueCombo` @type ^`boolean` @kind boolean;
  #L15ca64.  return v0;
}
procedure `boolean` `isUniqueIndex`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isUniqueIndex:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ca78.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndex` @type ^`boolean` @kind boolean;
  #L15ca7c.  return v0;
}
procedure `boolean` `isUseGetSet`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isUseGetSet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ca90.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.useGetSet` @type ^`boolean` @kind boolean;
  #L15ca94.  return v0;
}
procedure `boolean` `isVersion`(`com.j256.ormlite.field.DatabaseFieldConfig` v1 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isVersion:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15caa8.  v0:= v1.`com.j256.ormlite.field.DatabaseFieldConfig.version` @type ^`boolean` @kind boolean;
  #L15caac.  return v0;
}
procedure `void` `postProcess`(`com.j256.ormlite.field.DatabaseFieldConfig` v2 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.postProcess:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15cac0.  v0:= v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignColumnName` @type ^`java.lang.String` @kind object;
  #L15cac4.  if v0 == 0 then goto L15cace;
  #L15cac8.  v0:= 1I;
  #L15caca.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @type ^`boolean` := v0 @kind boolean;
  #L15cace.  v0:= v2.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @type ^`boolean` @kind boolean;
  #L15cad2.  if v0 == 0 then goto L15cae6;
  #L15cad6.  v0:= v2.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int`;
  #L15cada.  v1:= -1I;
  #L15cadc.  if v0 != v1 then goto L15cae6;
  #L15cae0.  v0:= 2I;
  #L15cae2.  v2.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int` := v0;
  #L15cae6.  return @kind void;
}
procedure `void` `setAllowGeneratedIdInsert`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setAllowGeneratedIdInsert:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15caf8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.allowGeneratedIdInsert` @type ^`boolean` := v1 @kind boolean;
  #L15cafc.  return @kind void;
}
procedure `void` `setCanBeNull`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setCanBeNull:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cb10.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.canBeNull` @type ^`boolean` := v1 @kind boolean;
  #L15cb14.  return @kind void;
}
procedure `void` `setColumnDefinition`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setColumnDefinition:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cb28.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.columnDefinition` @type ^`java.lang.String` := v1 @kind object;
  #L15cb2c.  return @kind void;
}
procedure `void` `setColumnName`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setColumnName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cb40.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.columnName` @type ^`java.lang.String` := v1 @kind object;
  #L15cb44.  return @kind void;
}
procedure `void` `setDataPersister`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `com.j256.ormlite.field.DataPersister` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setDataPersister:(Lcom/j256/ormlite/field/DataPersister;)V` @AccessFlag PUBLIC {
    temp;

  #L15cb58.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.dataPersister` @type ^`com.j256.ormlite.field.DataPersister` := v1 @kind object;
  #L15cb5c.  return @kind void;
}
procedure `void` `setDataType`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `com.j256.ormlite.field.DataType` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setDataType:(Lcom/j256/ormlite/field/DataType;)V` @AccessFlag PUBLIC {
    temp;

  #L15cb70.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.dataType` @type ^`com.j256.ormlite.field.DataType` := v1 @kind object;
  #L15cb74.  return @kind void;
}
procedure `void` `setDefaultValue`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setDefaultValue:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cb88.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.defaultValue` @type ^`java.lang.String` := v1 @kind object;
  #L15cb8c.  return @kind void;
}
procedure `void` `setFieldName`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setFieldName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cba0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.fieldName` @type ^`java.lang.String` := v1 @kind object;
  #L15cba4.  return @kind void;
}
procedure `void` `setForeign`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeign:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cbb8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreign` @type ^`boolean` := v1 @kind boolean;
  #L15cbbc.  return @kind void;
}
procedure `void` `setForeignAutoCreate`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignAutoCreate:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cbd0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoCreate` @type ^`boolean` := v1 @kind boolean;
  #L15cbd4.  return @kind void;
}
procedure `void` `setForeignAutoRefresh`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignAutoRefresh:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cbe8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignAutoRefresh` @type ^`boolean` := v1 @kind boolean;
  #L15cbec.  return @kind void;
}
procedure `void` `setForeignCollection`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollection:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cc00.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollection` @type ^`boolean` := v1 @kind boolean;
  #L15cc04.  return @kind void;
}
procedure `void` `setForeignCollectionColumnName`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionColumnName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cc18.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionColumnName` @type ^`java.lang.String` := v1 @kind object;
  #L15cc1c.  return @kind void;
}
procedure `void` `setForeignCollectionEager`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionEager:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cc30.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionEager` @type ^`boolean` := v1 @kind boolean;
  #L15cc34.  return @kind void;
}
procedure `void` `setForeignCollectionForeignFieldName`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionForeignFieldName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cc48.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionForeignFieldName` @type ^`java.lang.String` := v1 @kind object;
  #L15cc4c.  return @kind void;
}
procedure `void` `setForeignCollectionMaxEagerLevel`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `int` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionMaxEagerLevel:(I)V` @AccessFlag PUBLIC {
    temp;

  #L15cc60.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionMaxEagerLevel` @type ^`int` := v1;
  #L15cc64.  return @kind void;
}
procedure `void` `setForeignCollectionOrderAscending`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionOrderAscending:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cc78.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderAscending` @type ^`boolean` := v1 @kind boolean;
  #L15cc7c.  return @kind void;
}
procedure `void` `setForeignCollectionOrderColumnName`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionOrderColumnName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cc90.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignCollectionOrderColumnName` @type ^`java.lang.String` := v1 @kind object;
  #L15cc94.  return @kind void;
}
procedure `void` `setForeignColumnName`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignColumnName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cca8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignColumnName` @type ^`java.lang.String` := v1 @kind object;
  #L15ccac.  return @kind void;
}
procedure `void` `setForeignTableConfig`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `com.j256.ormlite.table.DatabaseTableConfig` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignTableConfig:(Lcom/j256/ormlite/table/DatabaseTableConfig;)V` @AccessFlag PUBLIC {
    temp;

  #L15ccc0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.foreignTableConfig` @type ^`com.j256.ormlite.table.DatabaseTableConfig` := v1 @kind object;
  #L15ccc4.  return @kind void;
}
procedure `void` `setFormat`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setFormat:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15ccd8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.format` @type ^`java.lang.String` := v1 @kind object;
  #L15ccdc.  return @kind void;
}
procedure `void` `setGeneratedId`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setGeneratedId:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15ccf0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.generatedId` @type ^`boolean` := v1 @kind boolean;
  #L15ccf4.  return @kind void;
}
procedure `void` `setGeneratedIdSequence`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setGeneratedIdSequence:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cd08.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.generatedIdSequence` @type ^`java.lang.String` := v1 @kind object;
  #L15cd0c.  return @kind void;
}
procedure `void` `setId`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setId:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cd20.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.id` @type ^`boolean` := v1 @kind boolean;
  #L15cd24.  return @kind void;
}
procedure `void` `setIndex`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setIndex:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cd38.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.index` @type ^`boolean` := v1 @kind boolean;
  #L15cd3c.  return @kind void;
}
procedure `void` `setIndexName`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setIndexName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15cd50.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.indexName` @type ^`java.lang.String` := v1 @kind object;
  #L15cd54.  return @kind void;
}
procedure `void` `setMaxForeignAutoRefreshLevel`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `int` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setMaxForeignAutoRefreshLevel:(I)V` @AccessFlag PUBLIC {
    temp;

  #L15cd68.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.maxForeignAutoRefreshLevel` @type ^`int` := v1;
  #L15cd6c.  return @kind void;
}
procedure `void` `setPersisted`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setPersisted:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cd80.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.persisted` @type ^`boolean` := v1 @kind boolean;
  #L15cd84.  return @kind void;
}
procedure `void` `setPersisterClass`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setPersisterClass:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L15cd98.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.persisterClass` @type ^`java.lang.Class` := v1 @kind object;
  #L15cd9c.  return @kind void;
}
procedure `void` `setReadOnly`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setReadOnly:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cdb0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.readOnly` @type ^`boolean` := v1 @kind boolean;
  #L15cdb4.  return @kind void;
}
procedure `void` `setThrowIfNull`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setThrowIfNull:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cdc8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.throwIfNull` @type ^`boolean` := v1 @kind boolean;
  #L15cdcc.  return @kind void;
}
procedure `void` `setUnique`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUnique:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cde0.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.unique` @type ^`boolean` := v1 @kind boolean;
  #L15cde4.  return @kind void;
}
procedure `void` `setUniqueCombo`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUniqueCombo:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15cdf8.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueCombo` @type ^`boolean` := v1 @kind boolean;
  #L15cdfc.  return @kind void;
}
procedure `void` `setUniqueIndex`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUniqueIndex:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15ce10.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndex` @type ^`boolean` := v1 @kind boolean;
  #L15ce14.  return @kind void;
}
procedure `void` `setUniqueIndexName`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUniqueIndexName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L15ce28.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.uniqueIndexName` @type ^`java.lang.String` := v1 @kind object;
  #L15ce2c.  return @kind void;
}
procedure `void` `setUnknownEnumValue`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `java.lang.Enum` v1 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUnknownEnumValue:(Ljava/lang/Enum;)V` @AccessFlag PUBLIC {
    temp;

  #L15ce40.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.unknownEnumValue` @type ^`java.lang.Enum` := v1 @kind object;
  #L15ce44.  return @kind void;
}
procedure `void` `setUseGetSet`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUseGetSet:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15ce58.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.useGetSet` @type ^`boolean` := v1 @kind boolean;
  #L15ce5c.  return @kind void;
}
procedure `void` `setVersion`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `boolean` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setVersion:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L15ce70.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.version` @type ^`boolean` := v1 @kind boolean;
  #L15ce74.  return @kind void;
}
procedure `void` `setWidth`(`com.j256.ormlite.field.DatabaseFieldConfig` v0 @kind this, `int` v1 ) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setWidth:(I)V` @AccessFlag PUBLIC {
    temp;

  #L15ce88.  v0.`com.j256.ormlite.field.DatabaseFieldConfig.width` @type ^`int` := v1;
  #L15ce8c.  return @kind void;
}

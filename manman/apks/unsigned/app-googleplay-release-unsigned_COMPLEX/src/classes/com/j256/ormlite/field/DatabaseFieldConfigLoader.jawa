record `com.j256.ormlite.field.DatabaseFieldConfigLoader` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.CONFIG_FILE_END_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.CONFIG_FILE_START_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.j256.ormlite.field.DataPersister` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.DEFAULT_DATA_PERSISTER` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_ALLOW_GENERATED_ID_INSERT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_CAN_BE_NULL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_COLUMN_DEFINITION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_COLUMN_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_DATA_PERSISTER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_DEFAULT_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FIELD_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_AUTO_CREATE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_AUTO_REFRESH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLLECTION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLLECTION_EAGER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FOREIGN_COLUMN_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_FORMAT` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_GENERATED_ID` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_GENERATED_ID_SEQUENCE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_ID` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_INDEX` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_INDEX_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_PERSISTER_CLASS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_READ_ONLY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_THROW_IF_NULL` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_UNIQUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_UNIQUE_COMBO` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_UNIQUE_INDEX` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_UNIQUE_INDEX_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_UNKNOWN_ENUM_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_USE_GET_SET` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_VERSION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.FIELD_NAME_WIDTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L15cea0.  v0:= `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_DATA_TYPE` @type ^`com.j256.ormlite.field.DataType` @kind object;
  #L15cea4.  call temp:= `getDataPersister`(v0) @signature `Lcom/j256/ormlite/field/DataType;.getDataPersister:()Lcom/j256/ormlite/field/DataPersister;` @kind virtual;
  #L15ceaa.  v0:= temp @kind object;
  #L15ceac.  `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.DEFAULT_DATA_PERSISTER` @type ^`com.j256.ormlite.field.DataPersister` := v0 @kind object;
  #L15ceb0.  return @kind void;
}
procedure `void` `<init>`(`com.j256.ormlite.field.DatabaseFieldConfigLoader` v0 @kind this) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15cec4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15ceca.  return @kind void;
}
procedure `com.j256.ormlite.field.DatabaseFieldConfig` `fromReader`(`java.io.BufferedReader` v7 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.fromReader:(Ljava/io/BufferedReader;)Lcom/j256/ormlite/field/DatabaseFieldConfig;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15cedc.  v3:= 1I;
  #L15cede.  v2:= 0I;
  #L15cee0.  v0:= new `com.j256.ormlite.field.DatabaseFieldConfig`;
  #L15cee4.  call `<init>`(v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.<init>:()V` @kind direct;
  #L15ceea.  v1:= v2;
  #Try_start0.  
  #L15ceec.  call temp:= `readLine`(v7) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #Try_end0.  
  #L15cef2.  v4:= temp @kind object;
  #L15cef4.  if v4 != 0 then goto L15cf0e;
  #L15cef8.  if v1 == 0 then goto L15cfa4;
  #L15cefc.  return v0 @kind object;
  #L15cefe.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L15cf00.  v1:= "Could not read DatabaseFieldConfig from stream" @kind object;
  #L15cf04.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15cf0a.  v0:= temp @kind object;
  #L15cf0c.  throw v0;
  #L15cf0e.  v5:= "# --field-end--" @kind object;
  #L15cf12.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15cf18.  v5:= temp;
  #L15cf1a.  if v5 != 0 then goto L15cef8;
  #L15cf1e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15cf24.  v5:= temp;
  #L15cf26.  if v5 == 0 then goto L15ceec;
  #L15cf2a.  v5:= "#" @kind object;
  #L15cf2e.  call temp:= `startsWith`(v4, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L15cf34.  v5:= temp;
  #L15cf36.  if v5 != 0 then goto L15ceec;
  #L15cf3a.  v5:= "# --field-start--" @kind object;
  #L15cf3e.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15cf44.  v5:= temp;
  #L15cf46.  if v5 != 0 then goto L15ceec;
  #L15cf4a.  v1:= "=" @kind object;
  #L15cf4e.  v5:= -2I;
  #L15cf50.  call temp:= `split`(v4, v1, v5) @signature `Ljava/lang/String;.split:(Ljava/lang/String;I)[Ljava/lang/String;` @kind virtual;
  #L15cf56.  v1:= temp @kind object;
  #L15cf58.  v5:= length @variable v1;
  #L15cf5a.  v6:= 2I;
  #L15cf5c.  if v5 == v6 then goto L15cf92;
  #L15cf60.  v0:= new `java.sql.SQLException`;
  #L15cf64.  v1:= new `java.lang.StringBuilder`;
  #L15cf68.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15cf6e.  v2:= "DatabaseFieldConfig reading from stream cannot parse line: " @kind object;
  #L15cf72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cf78.  v1:= temp @kind object;
  #L15cf7a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15cf80.  v1:= temp @kind object;
  #L15cf82.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cf88.  v1:= temp @kind object;
  #L15cf8a.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cf90.  throw v0;
  #L15cf92.  v4:= v1[v2] @kind object;
  #L15cf96.  v1:= v1[v3] @kind object;
  #L15cf9a.  call `readField`(v0, v4, v1) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.readField:(Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15cfa0.  v1:= v3;
  #L15cfa2.  goto L15ceec;
  #L15cfa4.  v0:= 0I;
  #L15cfa6.  goto L15cefc;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L15cefe;
}
procedure `void` `readField`(`com.j256.ormlite.field.DatabaseFieldConfig` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.readField:(Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L15cfc8.  v1:= 0I;
  #L15cfca.  v2:= 1I;
  #L15cfcc.  v0:= "fieldName" @kind object;
  #L15cfd0.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15cfd6.  v0:= temp;
  #L15cfd8.  if v0 == 0 then goto L15cfe4;
  #L15cfdc.  call `setFieldName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setFieldName:(Ljava/lang/String;)V` @kind virtual;
  #L15cfe2.  return @kind void;
  #L15cfe4.  v0:= "columnName" @kind object;
  #L15cfe8.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15cfee.  v0:= temp;
  #L15cff0.  if v0 == 0 then goto L15cffc;
  #L15cff4.  call `setColumnName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setColumnName:(Ljava/lang/String;)V` @kind virtual;
  #L15cffa.  goto L15cfe2;
  #L15cffc.  v0:= "dataPersister" @kind object;
  #L15d000.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d006.  v0:= temp;
  #L15d008.  if v0 == 0 then goto L15d024;
  #L15d00c.  call temp:= `valueOf`(v11) @signature `Lcom/j256/ormlite/field/DataType;.valueOf:(Ljava/lang/String;)Lcom/j256/ormlite/field/DataType;` @kind static;
  #L15d012.  v0:= temp @kind object;
  #L15d014.  call temp:= `getDataPersister`(v0) @signature `Lcom/j256/ormlite/field/DataType;.getDataPersister:()Lcom/j256/ormlite/field/DataPersister;` @kind virtual;
  #L15d01a.  v0:= temp @kind object;
  #L15d01c.  call `setDataPersister`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setDataPersister:(Lcom/j256/ormlite/field/DataPersister;)V` @kind virtual;
  #L15d022.  goto L15cfe2;
  #L15d024.  v0:= "defaultValue" @kind object;
  #L15d028.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d02e.  v0:= temp;
  #L15d030.  if v0 == 0 then goto L15d03c;
  #L15d034.  call `setDefaultValue`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setDefaultValue:(Ljava/lang/String;)V` @kind virtual;
  #L15d03a.  goto L15cfe2;
  #L15d03c.  v0:= "width" @kind object;
  #L15d040.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d046.  v0:= temp;
  #L15d048.  if v0 == 0 then goto L15d05c;
  #L15d04c.  call temp:= `parseInt`(v11) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L15d052.  v0:= temp;
  #L15d054.  call `setWidth`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setWidth:(I)V` @kind virtual;
  #L15d05a.  goto L15cfe2;
  #L15d05c.  v0:= "canBeNull" @kind object;
  #L15d060.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d066.  v0:= temp;
  #L15d068.  if v0 == 0 then goto L15d07c;
  #L15d06c.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d072.  v0:= temp;
  #L15d074.  call `setCanBeNull`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setCanBeNull:(Z)V` @kind virtual;
  #L15d07a.  goto L15cfe2;
  #L15d07c.  v0:= "id" @kind object;
  #L15d080.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d086.  v0:= temp;
  #L15d088.  if v0 == 0 then goto L15d09c;
  #L15d08c.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d092.  v0:= temp;
  #L15d094.  call `setId`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setId:(Z)V` @kind virtual;
  #L15d09a.  goto L15cfe2;
  #L15d09c.  v0:= "generatedId" @kind object;
  #L15d0a0.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d0a6.  v0:= temp;
  #L15d0a8.  if v0 == 0 then goto L15d0bc;
  #L15d0ac.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d0b2.  v0:= temp;
  #L15d0b4.  call `setGeneratedId`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setGeneratedId:(Z)V` @kind virtual;
  #L15d0ba.  goto L15cfe2;
  #L15d0bc.  v0:= "generatedIdSequence" @kind object;
  #L15d0c0.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d0c6.  v0:= temp;
  #L15d0c8.  if v0 == 0 then goto L15d0d4;
  #L15d0cc.  call `setGeneratedIdSequence`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setGeneratedIdSequence:(Ljava/lang/String;)V` @kind virtual;
  #L15d0d2.  goto L15cfe2;
  #L15d0d4.  v0:= "foreign" @kind object;
  #L15d0d8.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d0de.  v0:= temp;
  #L15d0e0.  if v0 == 0 then goto L15d0f6;
  #L15d0e4.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d0ea.  v0:= temp;
  #L15d0ec.  call `setForeign`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeign:(Z)V` @kind virtual;
  #L15d0f2.  goto L15cfe2;
  #L15d0f6.  v0:= "useGetSet" @kind object;
  #L15d0fa.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d100.  v0:= temp;
  #L15d102.  if v0 == 0 then goto L15d118;
  #L15d106.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d10c.  v0:= temp;
  #L15d10e.  call `setUseGetSet`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUseGetSet:(Z)V` @kind virtual;
  #L15d114.  goto L15cfe2;
  #L15d118.  v0:= "unknownEnumValue" @kind object;
  #L15d11c.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d122.  v0:= temp;
  #L15d124.  if v0 == 0 then goto L15d260;
  #L15d128.  v0:= "#" @kind object;
  #L15d12c.  v3:= -2I;
  #L15d12e.  call temp:= `split`(v11, v0, v3) @signature `Ljava/lang/String;.split:(Ljava/lang/String;I)[Ljava/lang/String;` @kind virtual;
  #L15d134.  v4:= temp @kind object;
  #L15d136.  v0:= length @variable v4;
  #L15d138.  v3:= 2I;
  #L15d13a.  if v0 == v3 then goto L15d170;
  #L15d13e.  v0:= new `java.lang.IllegalArgumentException`;
  #L15d142.  v1:= new `java.lang.StringBuilder`;
  #L15d146.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d14c.  v2:= "Invalid value for unknownEnumValue which should be in class#name format: " @kind object;
  #L15d150.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d156.  v1:= temp @kind object;
  #L15d158.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d15e.  v1:= temp @kind object;
  #L15d160.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d166.  v1:= temp @kind object;
  #L15d168.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d16e.  throw v0;
  #L15d170.  v0:= 0I;
  #Try_start0.  
  #L15d172.  v0:= v4[v0] @kind object;
  #L15d176.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #Try_end0.  
  #L15d17c.  v0:= temp @kind object;
  #L15d17e.  call temp:= `getEnumConstants`(v0) @signature `Ljava/lang/Class;.getEnumConstants:()[Ljava/lang/Object;` @kind virtual;
  #L15d184.  v0:= temp @kind object;
  #L15d186.  if v0 != 0 then goto L15d1f0;
  #L15d18a.  v0:= new `java.lang.IllegalArgumentException`;
  #L15d18e.  v1:= new `java.lang.StringBuilder`;
  #L15d192.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d198.  v2:= "Invalid class is not an Enum for unknownEnumValue: " @kind object;
  #L15d19c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d1a2.  v1:= temp @kind object;
  #L15d1a4.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d1aa.  v1:= temp @kind object;
  #L15d1ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d1b2.  v1:= temp @kind object;
  #L15d1b4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d1ba.  throw v0;
  #L15d1bc.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L15d1be.  v0:= new `java.lang.IllegalArgumentException`;
  #L15d1c2.  v1:= new `java.lang.StringBuilder`;
  #L15d1c6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d1cc.  v2:= "Unknown class specified for unknownEnumValue: " @kind object;
  #L15d1d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d1d6.  v1:= temp @kind object;
  #L15d1d8.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d1de.  v1:= temp @kind object;
  #L15d1e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d1e6.  v1:= temp @kind object;
  #L15d1e8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d1ee.  throw v0;
  #L15d1f0.  v0:= (`java.lang.Enum`[]) v0 @kind object;
  #L15d1f4.  v0:= (`java.lang.Enum`[]) v0 @kind object;
  #L15d1f8.  v5:= length @variable v0;
  #L15d1fa.  v3:= v1;
  #L15d1fc.  if v3 >= v5 then goto L15d22a;
  #L15d200.  v6:= v0[v3] @kind object;
  #L15d204.  call temp:= `name`(v6) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L15d20a.  v7:= temp @kind object;
  #L15d20c.  v8:= v4[v2] @kind object;
  #L15d210.  call temp:= `equals`(v7, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d216.  v7:= temp;
  #L15d218.  if v7 == 0 then goto L15d224;
  #L15d21c.  call `setUnknownEnumValue`(v9, v6) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUnknownEnumValue:(Ljava/lang/Enum;)V` @kind virtual;
  #L15d222.  v1:= v2;
  #L15d224.  v3:= v3 + 1;
  #L15d228.  goto L15d1fc;
  #L15d22a.  if v1 != 0 then goto L15cfe2;
  #L15d22e.  v0:= new `java.lang.IllegalArgumentException`;
  #L15d232.  v1:= new `java.lang.StringBuilder`;
  #L15d236.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d23c.  v2:= "Invalid enum value name for unknownEnumvalue: " @kind object;
  #L15d240.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d246.  v1:= temp @kind object;
  #L15d248.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d24e.  v1:= temp @kind object;
  #L15d250.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d256.  v1:= temp @kind object;
  #L15d258.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d25e.  throw v0;
  #L15d260.  v0:= "throwIfNull" @kind object;
  #L15d264.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d26a.  v0:= temp;
  #L15d26c.  if v0 == 0 then goto L15d282;
  #L15d270.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d276.  v0:= temp;
  #L15d278.  call `setThrowIfNull`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setThrowIfNull:(Z)V` @kind virtual;
  #L15d27e.  goto L15cfe2;
  #L15d282.  v0:= "format" @kind object;
  #L15d286.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d28c.  v0:= temp;
  #L15d28e.  if v0 == 0 then goto L15d29c;
  #L15d292.  call `setFormat`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setFormat:(Ljava/lang/String;)V` @kind virtual;
  #L15d298.  goto L15cfe2;
  #L15d29c.  v0:= "unique" @kind object;
  #L15d2a0.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d2a6.  v0:= temp;
  #L15d2a8.  if v0 == 0 then goto L15d2be;
  #L15d2ac.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d2b2.  v0:= temp;
  #L15d2b4.  call `setUnique`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUnique:(Z)V` @kind virtual;
  #L15d2ba.  goto L15cfe2;
  #L15d2be.  v0:= "uniqueCombo" @kind object;
  #L15d2c2.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d2c8.  v0:= temp;
  #L15d2ca.  if v0 == 0 then goto L15d2e0;
  #L15d2ce.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d2d4.  v0:= temp;
  #L15d2d6.  call `setUniqueCombo`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUniqueCombo:(Z)V` @kind virtual;
  #L15d2dc.  goto L15cfe2;
  #L15d2e0.  v0:= "index" @kind object;
  #L15d2e4.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d2ea.  v0:= temp;
  #L15d2ec.  if v0 == 0 then goto L15d302;
  #L15d2f0.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d2f6.  v0:= temp;
  #L15d2f8.  call `setIndex`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setIndex:(Z)V` @kind virtual;
  #L15d2fe.  goto L15cfe2;
  #L15d302.  v0:= "indexName" @kind object;
  #L15d306.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d30c.  v0:= temp;
  #L15d30e.  if v0 == 0 then goto L15d322;
  #L15d312.  call `setIndex`(v9, v2) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setIndex:(Z)V` @kind virtual;
  #L15d318.  call `setIndexName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setIndexName:(Ljava/lang/String;)V` @kind virtual;
  #L15d31e.  goto L15cfe2;
  #L15d322.  v0:= "uniqueIndex" @kind object;
  #L15d326.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d32c.  v0:= temp;
  #L15d32e.  if v0 == 0 then goto L15d344;
  #L15d332.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d338.  v0:= temp;
  #L15d33a.  call `setUniqueIndex`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUniqueIndex:(Z)V` @kind virtual;
  #L15d340.  goto L15cfe2;
  #L15d344.  v0:= "uniqueIndexName" @kind object;
  #L15d348.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d34e.  v0:= temp;
  #L15d350.  if v0 == 0 then goto L15d364;
  #L15d354.  call `setUniqueIndex`(v9, v2) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUniqueIndex:(Z)V` @kind virtual;
  #L15d35a.  call `setUniqueIndexName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setUniqueIndexName:(Ljava/lang/String;)V` @kind virtual;
  #L15d360.  goto L15cfe2;
  #L15d364.  v0:= "foreignAutoRefresh" @kind object;
  #L15d368.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d36e.  v0:= temp;
  #L15d370.  if v0 == 0 then goto L15d386;
  #L15d374.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d37a.  v0:= temp;
  #L15d37c.  call `setForeignAutoRefresh`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignAutoRefresh:(Z)V` @kind virtual;
  #L15d382.  goto L15cfe2;
  #L15d386.  v0:= "maxForeignAutoRefreshLevel" @kind object;
  #L15d38a.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d390.  v0:= temp;
  #L15d392.  if v0 == 0 then goto L15d3a8;
  #L15d396.  call temp:= `parseInt`(v11) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L15d39c.  v0:= temp;
  #L15d39e.  call `setMaxForeignAutoRefreshLevel`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setMaxForeignAutoRefreshLevel:(I)V` @kind virtual;
  #L15d3a4.  goto L15cfe2;
  #L15d3a8.  v0:= "persisterClass" @kind object;
  #L15d3ac.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d3b2.  v0:= temp;
  #L15d3b4.  if v0 == 0 then goto L15d3fe;
  #Try_start1.  
  #L15d3b8.  call temp:= `forName`(v11) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L15d3be.  v0:= temp @kind object;
  #L15d3c0.  call `setPersisterClass`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setPersisterClass:(Ljava/lang/Class;)V` @kind virtual;
  #Try_end1.  
  #L15d3c6.  goto L15cfe2;
  #L15d3ca.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L15d3cc.  v0:= new `java.lang.IllegalArgumentException`;
  #L15d3d0.  v1:= new `java.lang.StringBuilder`;
  #L15d3d4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d3da.  v2:= "Could not find persisterClass: " @kind object;
  #L15d3de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d3e4.  v1:= temp @kind object;
  #L15d3e6.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d3ec.  v1:= temp @kind object;
  #L15d3ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d3f4.  v1:= temp @kind object;
  #L15d3f6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d3fc.  throw v0;
  #L15d3fe.  v0:= "allowGeneratedIdInsert" @kind object;
  #L15d402.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d408.  v0:= temp;
  #L15d40a.  if v0 == 0 then goto L15d420;
  #L15d40e.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d414.  v0:= temp;
  #L15d416.  call `setAllowGeneratedIdInsert`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setAllowGeneratedIdInsert:(Z)V` @kind virtual;
  #L15d41c.  goto L15cfe2;
  #L15d420.  v0:= "columnDefinition" @kind object;
  #L15d424.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d42a.  v0:= temp;
  #L15d42c.  if v0 == 0 then goto L15d43a;
  #L15d430.  call `setColumnDefinition`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setColumnDefinition:(Ljava/lang/String;)V` @kind virtual;
  #L15d436.  goto L15cfe2;
  #L15d43a.  v0:= "foreignAutoCreate" @kind object;
  #L15d43e.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d444.  v0:= temp;
  #L15d446.  if v0 == 0 then goto L15d45c;
  #L15d44a.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d450.  v0:= temp;
  #L15d452.  call `setForeignAutoCreate`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignAutoCreate:(Z)V` @kind virtual;
  #L15d458.  goto L15cfe2;
  #L15d45c.  v0:= "version" @kind object;
  #L15d460.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d466.  v0:= temp;
  #L15d468.  if v0 == 0 then goto L15d47e;
  #L15d46c.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d472.  v0:= temp;
  #L15d474.  call `setVersion`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setVersion:(Z)V` @kind virtual;
  #L15d47a.  goto L15cfe2;
  #L15d47e.  v0:= "foreignColumnName" @kind object;
  #L15d482.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d488.  v0:= temp;
  #L15d48a.  if v0 == 0 then goto L15d498;
  #L15d48e.  call `setForeignColumnName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignColumnName:(Ljava/lang/String;)V` @kind virtual;
  #L15d494.  goto L15cfe2;
  #L15d498.  v0:= "readOnly" @kind object;
  #L15d49c.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d4a2.  v0:= temp;
  #L15d4a4.  if v0 == 0 then goto L15d4ba;
  #L15d4a8.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d4ae.  v0:= temp;
  #L15d4b0.  call `setReadOnly`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setReadOnly:(Z)V` @kind virtual;
  #L15d4b6.  goto L15cfe2;
  #L15d4ba.  v0:= "foreignCollection" @kind object;
  #L15d4be.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d4c4.  v0:= temp;
  #L15d4c6.  if v0 == 0 then goto L15d4dc;
  #L15d4ca.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d4d0.  v0:= temp;
  #L15d4d2.  call `setForeignCollection`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollection:(Z)V` @kind virtual;
  #L15d4d8.  goto L15cfe2;
  #L15d4dc.  v0:= "foreignCollectionEager" @kind object;
  #L15d4e0.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d4e6.  v0:= temp;
  #L15d4e8.  if v0 == 0 then goto L15d4fe;
  #L15d4ec.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d4f2.  v0:= temp;
  #L15d4f4.  call `setForeignCollectionEager`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionEager:(Z)V` @kind virtual;
  #L15d4fa.  goto L15cfe2;
  #L15d4fe.  v0:= "maxEagerForeignCollectionLevel" @kind object;
  #L15d502.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d508.  v0:= temp;
  #L15d50a.  if v0 == 0 then goto L15d520;
  #L15d50e.  call temp:= `parseInt`(v11) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L15d514.  v0:= temp;
  #L15d516.  call `setForeignCollectionMaxEagerLevel`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionMaxEagerLevel:(I)V` @kind virtual;
  #L15d51c.  goto L15cfe2;
  #L15d520.  v0:= "foreignCollectionMaxEagerLevel" @kind object;
  #L15d524.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d52a.  v0:= temp;
  #L15d52c.  if v0 == 0 then goto L15d542;
  #L15d530.  call temp:= `parseInt`(v11) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L15d536.  v0:= temp;
  #L15d538.  call `setForeignCollectionMaxEagerLevel`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionMaxEagerLevel:(I)V` @kind virtual;
  #L15d53e.  goto L15cfe2;
  #L15d542.  v0:= "foreignCollectionColumnName" @kind object;
  #L15d546.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d54c.  v0:= temp;
  #L15d54e.  if v0 == 0 then goto L15d55c;
  #L15d552.  call `setForeignCollectionColumnName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionColumnName:(Ljava/lang/String;)V` @kind virtual;
  #L15d558.  goto L15cfe2;
  #L15d55c.  v0:= "foreignCollectionOrderColumn" @kind object;
  #L15d560.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d566.  v0:= temp;
  #L15d568.  if v0 == 0 then goto L15d576;
  #L15d56c.  call `setForeignCollectionOrderColumnName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionOrderColumnName:(Ljava/lang/String;)V` @kind virtual;
  #L15d572.  goto L15cfe2;
  #L15d576.  v0:= "foreignCollectionOrderColumnName" @kind object;
  #L15d57a.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d580.  v0:= temp;
  #L15d582.  if v0 == 0 then goto L15d590;
  #L15d586.  call `setForeignCollectionOrderColumnName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionOrderColumnName:(Ljava/lang/String;)V` @kind virtual;
  #L15d58c.  goto L15cfe2;
  #L15d590.  v0:= "foreignCollectionOrderAscending" @kind object;
  #L15d594.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d59a.  v0:= temp;
  #L15d59c.  if v0 == 0 then goto L15d5b2;
  #L15d5a0.  call temp:= `parseBoolean`(v11) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L15d5a6.  v0:= temp;
  #L15d5a8.  call `setForeignCollectionOrderAscending`(v9, v0) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionOrderAscending:(Z)V` @kind virtual;
  #L15d5ae.  goto L15cfe2;
  #L15d5b2.  v0:= "foreignCollectionForeignColumnName" @kind object;
  #L15d5b6.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d5bc.  v0:= temp;
  #L15d5be.  if v0 == 0 then goto L15d5cc;
  #L15d5c2.  call `setForeignCollectionForeignFieldName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionForeignFieldName:(Ljava/lang/String;)V` @kind virtual;
  #L15d5c8.  goto L15cfe2;
  #L15d5cc.  v0:= "foreignCollectionForeignFieldName" @kind object;
  #L15d5d0.  call temp:= `equals`(v10, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d5d6.  v0:= temp;
  #L15d5d8.  if v0 == 0 then goto L15cfe2;
  #L15d5dc.  call `setForeignCollectionForeignFieldName`(v9, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.setForeignCollectionForeignFieldName:(Ljava/lang/String;)V` @kind virtual;
  #L15d5e2.  goto L15cfe2;
  catch `java.lang.ClassNotFoundException` @[Try_start0..Try_end0] goto L15d1bc;
  catch `java.lang.ClassNotFoundException` @[Try_start1..Try_end1] goto L15d3ca;
}
procedure `void` `write`(`java.io.BufferedWriter` v2 @kind object, `com.j256.ormlite.field.DatabaseFieldConfig` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.write:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #Try_start0.  
  #L15d614.  call `writeConfig`(v2, v3, v4) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.writeConfig:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/String;)V` @kind static;
  #Try_end0.  
  #L15d61a.  return @kind void;
  #L15d61c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L15d61e.  v1:= "Could not write config to writer" @kind object;
  #L15d622.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L15d628.  v0:= temp @kind object;
  #L15d62a.  throw v0;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L15d61c;
}
procedure `void` `writeConfig`(`java.io.BufferedWriter` v9 @kind object, `com.j256.ormlite.field.DatabaseFieldConfig` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfigLoader;.writeConfig:(Ljava/io/BufferedWriter;Lcom/j256/ormlite/field/DatabaseFieldConfig;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L15d64c.  v0:= 0I;
  #L15d64e.  v1:= 1I;
  #L15d650.  v8:= 61I;
  #L15d654.  v2:= "# --field-start--" @kind object;
  #L15d658.  call temp:= `append`(v9, v2) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d65e.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d664.  call temp:= `getFieldName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFieldName:()Ljava/lang/String;` @kind virtual;
  #L15d66a.  v2:= temp @kind object;
  #L15d66c.  if v2 == 0 then goto L15d698;
  #L15d670.  v2:= "fieldName" @kind object;
  #L15d674.  call temp:= `append`(v9, v2) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d67a.  v2:= temp @kind object;
  #L15d67c.  call temp:= `append`(v2, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d682.  v2:= temp @kind object;
  #L15d684.  call temp:= `getFieldName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFieldName:()Ljava/lang/String;` @kind virtual;
  #L15d68a.  v3:= temp @kind object;
  #L15d68c.  call temp:= `append`(v2, v3) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d692.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d698.  call temp:= `getColumnName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L15d69e.  v2:= temp @kind object;
  #L15d6a0.  if v2 == 0 then goto L15d6cc;
  #L15d6a4.  v2:= "columnName" @kind object;
  #L15d6a8.  call temp:= `append`(v9, v2) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d6ae.  v2:= temp @kind object;
  #L15d6b0.  call temp:= `append`(v2, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d6b6.  v2:= temp @kind object;
  #L15d6b8.  call temp:= `getColumnName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getColumnName:()Ljava/lang/String;` @kind virtual;
  #L15d6be.  v3:= temp @kind object;
  #L15d6c0.  call temp:= `append`(v2, v3) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d6c6.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d6cc.  call temp:= `getDataPersister`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getDataPersister:()Lcom/j256/ormlite/field/DataPersister;` @kind virtual;
  #L15d6d2.  v2:= temp @kind object;
  #L15d6d4.  v3:= `@@com.j256.ormlite.field.DatabaseFieldConfigLoader.DEFAULT_DATA_PERSISTER` @type ^`com.j256.ormlite.field.DataPersister` @kind object;
  #L15d6d8.  if v2 == v3 then goto L15d772;
  #L15d6dc.  call temp:= `values`() @signature `Lcom/j256/ormlite/field/DataType;.values:()[Lcom/j256/ormlite/field/DataType;` @kind static;
  #L15d6e2.  v3:= temp @kind object;
  #L15d6e4.  v4:= length @variable v3;
  #L15d6e6.  v2:= v0;
  #L15d6e8.  if v2 >= v4 then goto L15d72e;
  #L15d6ec.  v5:= v3[v2] @kind object;
  #L15d6f0.  call temp:= `getDataPersister`(v5) @signature `Lcom/j256/ormlite/field/DataType;.getDataPersister:()Lcom/j256/ormlite/field/DataPersister;` @kind virtual;
  #L15d6f6.  v6:= temp @kind object;
  #L15d6f8.  call temp:= `getDataPersister`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getDataPersister:()Lcom/j256/ormlite/field/DataPersister;` @kind virtual;
  #L15d6fe.  v7:= temp @kind object;
  #L15d700.  if v6 != v7 then goto L15d76c;
  #L15d704.  v0:= "dataPersister" @kind object;
  #L15d708.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d70e.  v0:= temp @kind object;
  #L15d710.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d716.  v0:= temp @kind object;
  #L15d718.  call temp:= `name`(v5) @signature `Lcom/j256/ormlite/field/DataType;.name:()Ljava/lang/String;` @kind virtual;
  #L15d71e.  v2:= temp @kind object;
  #L15d720.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d726.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d72c.  v0:= v1;
  #L15d72e.  if v0 != 0 then goto L15d772;
  #L15d732.  v0:= new `java.lang.IllegalArgumentException`;
  #L15d736.  v1:= new `java.lang.StringBuilder`;
  #L15d73a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d740.  v2:= "Unknown data persister field: " @kind object;
  #L15d744.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d74a.  v1:= temp @kind object;
  #L15d74c.  call temp:= `getDataPersister`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getDataPersister:()Lcom/j256/ormlite/field/DataPersister;` @kind virtual;
  #L15d752.  v2:= temp @kind object;
  #L15d754.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d75a.  v1:= temp @kind object;
  #L15d75c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d762.  v1:= temp @kind object;
  #L15d764.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d76a.  throw v0;
  #L15d76c.  v2:= v2 + 1;
  #L15d770.  goto L15d6e8;
  #L15d772.  call temp:= `getDefaultValue`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getDefaultValue:()Ljava/lang/String;` @kind virtual;
  #L15d778.  v0:= temp @kind object;
  #L15d77a.  if v0 == 0 then goto L15d7a6;
  #L15d77e.  v0:= "defaultValue" @kind object;
  #L15d782.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d788.  v0:= temp @kind object;
  #L15d78a.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d790.  v0:= temp @kind object;
  #L15d792.  call temp:= `getDefaultValue`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getDefaultValue:()Ljava/lang/String;` @kind virtual;
  #L15d798.  v2:= temp @kind object;
  #L15d79a.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d7a0.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d7a6.  call temp:= `getWidth`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getWidth:()I` @kind virtual;
  #L15d7ac.  v0:= temp;
  #L15d7ae.  if v0 == 0 then goto L15d7e2;
  #L15d7b2.  v0:= "width" @kind object;
  #L15d7b6.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d7bc.  v0:= temp @kind object;
  #L15d7be.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d7c4.  v0:= temp @kind object;
  #L15d7c6.  call temp:= `getWidth`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getWidth:()I` @kind virtual;
  #L15d7cc.  v2:= temp;
  #L15d7ce.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L15d7d4.  v2:= temp @kind object;
  #L15d7d6.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d7dc.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d7e2.  call temp:= `isCanBeNull`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isCanBeNull:()Z` @kind virtual;
  #L15d7e8.  v0:= temp;
  #L15d7ea.  if v0 == v1 then goto L15d81e;
  #L15d7ee.  v0:= "canBeNull" @kind object;
  #L15d7f2.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d7f8.  v0:= temp @kind object;
  #L15d7fa.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d800.  v0:= temp @kind object;
  #L15d802.  call temp:= `isCanBeNull`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isCanBeNull:()Z` @kind virtual;
  #L15d808.  v2:= temp;
  #L15d80a.  call temp:= `toString`(v2) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L15d810.  v2:= temp @kind object;
  #L15d812.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d818.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d81e.  call temp:= `isId`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isId:()Z` @kind virtual;
  #L15d824.  v0:= temp;
  #L15d826.  if v0 == 0 then goto L15d84e;
  #L15d82a.  v0:= "id" @kind object;
  #L15d82e.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d834.  v0:= temp @kind object;
  #L15d836.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d83c.  v0:= temp @kind object;
  #L15d83e.  v2:= "true" @kind object;
  #L15d842.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d848.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d84e.  call temp:= `isGeneratedId`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isGeneratedId:()Z` @kind virtual;
  #L15d854.  v0:= temp;
  #L15d856.  if v0 == 0 then goto L15d87e;
  #L15d85a.  v0:= "generatedId" @kind object;
  #L15d85e.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d864.  v0:= temp @kind object;
  #L15d866.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d86c.  v0:= temp @kind object;
  #L15d86e.  v2:= "true" @kind object;
  #L15d872.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d878.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d87e.  call temp:= `getGeneratedIdSequence`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getGeneratedIdSequence:()Ljava/lang/String;` @kind virtual;
  #L15d884.  v0:= temp @kind object;
  #L15d886.  if v0 == 0 then goto L15d8b2;
  #L15d88a.  v0:= "generatedIdSequence" @kind object;
  #L15d88e.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d894.  v0:= temp @kind object;
  #L15d896.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d89c.  v0:= temp @kind object;
  #L15d89e.  call temp:= `getGeneratedIdSequence`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getGeneratedIdSequence:()Ljava/lang/String;` @kind virtual;
  #L15d8a4.  v2:= temp @kind object;
  #L15d8a6.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d8ac.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d8b2.  call temp:= `isForeign`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeign:()Z` @kind virtual;
  #L15d8b8.  v0:= temp;
  #L15d8ba.  if v0 == 0 then goto L15d8e2;
  #L15d8be.  v0:= "foreign" @kind object;
  #L15d8c2.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d8c8.  v0:= temp @kind object;
  #L15d8ca.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d8d0.  v0:= temp @kind object;
  #L15d8d2.  v2:= "true" @kind object;
  #L15d8d6.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d8dc.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d8e2.  call temp:= `isUseGetSet`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isUseGetSet:()Z` @kind virtual;
  #L15d8e8.  v0:= temp;
  #L15d8ea.  if v0 == 0 then goto L15d912;
  #L15d8ee.  v0:= "useGetSet" @kind object;
  #L15d8f2.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d8f8.  v0:= temp @kind object;
  #L15d8fa.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d900.  v0:= temp @kind object;
  #L15d902.  v2:= "true" @kind object;
  #L15d906.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d90c.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d912.  call temp:= `getUnknownEnumValue`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getUnknownEnumValue:()Ljava/lang/Enum;` @kind virtual;
  #L15d918.  v0:= temp @kind object;
  #L15d91a.  if v0 == 0 then goto L15d97a;
  #L15d91e.  v0:= "unknownEnumValue" @kind object;
  #L15d922.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d928.  v0:= temp @kind object;
  #L15d92a.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d930.  v0:= temp @kind object;
  #L15d932.  call temp:= `getUnknownEnumValue`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getUnknownEnumValue:()Ljava/lang/Enum;` @kind virtual;
  #L15d938.  v2:= temp @kind object;
  #L15d93a.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/Enum;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L15d940.  v2:= temp @kind object;
  #L15d942.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15d948.  v2:= temp @kind object;
  #L15d94a.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d950.  v0:= temp @kind object;
  #L15d952.  v2:= 35I;
  #L15d956.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d95c.  v0:= temp @kind object;
  #L15d95e.  call temp:= `getUnknownEnumValue`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getUnknownEnumValue:()Ljava/lang/Enum;` @kind virtual;
  #L15d964.  v2:= temp @kind object;
  #L15d966.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L15d96c.  v2:= temp @kind object;
  #L15d96e.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d974.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d97a.  call temp:= `isThrowIfNull`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isThrowIfNull:()Z` @kind virtual;
  #L15d980.  v0:= temp;
  #L15d982.  if v0 == 0 then goto L15d9aa;
  #L15d986.  v0:= "throwIfNull" @kind object;
  #L15d98a.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d990.  v0:= temp @kind object;
  #L15d992.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d998.  v0:= temp @kind object;
  #L15d99a.  v2:= "true" @kind object;
  #L15d99e.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d9a4.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d9aa.  call temp:= `getFormat`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFormat:()Ljava/lang/String;` @kind virtual;
  #L15d9b0.  v0:= temp @kind object;
  #L15d9b2.  if v0 == 0 then goto L15d9de;
  #L15d9b6.  v0:= "format" @kind object;
  #L15d9ba.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d9c0.  v0:= temp @kind object;
  #L15d9c2.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d9c8.  v0:= temp @kind object;
  #L15d9ca.  call temp:= `getFormat`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getFormat:()Ljava/lang/String;` @kind virtual;
  #L15d9d0.  v2:= temp @kind object;
  #L15d9d2.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d9d8.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15d9de.  call temp:= `isUnique`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isUnique:()Z` @kind virtual;
  #L15d9e4.  v0:= temp;
  #L15d9e6.  if v0 == 0 then goto L15da0e;
  #L15d9ea.  v0:= "unique" @kind object;
  #L15d9ee.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15d9f4.  v0:= temp @kind object;
  #L15d9f6.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15d9fc.  v0:= temp @kind object;
  #L15d9fe.  v2:= "true" @kind object;
  #L15da02.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15da08.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15da0e.  call temp:= `isUniqueCombo`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isUniqueCombo:()Z` @kind virtual;
  #L15da14.  v0:= temp;
  #L15da16.  if v0 == 0 then goto L15da3e;
  #L15da1a.  v0:= "uniqueCombo" @kind object;
  #L15da1e.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15da24.  v0:= temp @kind object;
  #L15da26.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15da2c.  v0:= temp @kind object;
  #L15da2e.  v2:= "true" @kind object;
  #L15da32.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15da38.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15da3e.  call temp:= `getIndexName`(v10, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getIndexName:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L15da44.  v0:= temp @kind object;
  #L15da46.  if v0 == 0 then goto L15da6a;
  #L15da4a.  v2:= "indexName" @kind object;
  #L15da4e.  call temp:= `append`(v9, v2) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15da54.  v2:= temp @kind object;
  #L15da56.  call temp:= `append`(v2, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15da5c.  v2:= temp @kind object;
  #L15da5e.  call temp:= `append`(v2, v0) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15da64.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15da6a.  call temp:= `getUniqueIndexName`(v10, v11) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getUniqueIndexName:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L15da70.  v0:= temp @kind object;
  #L15da72.  if v0 == 0 then goto L15da96;
  #L15da76.  v2:= "uniqueIndexName" @kind object;
  #L15da7a.  call temp:= `append`(v9, v2) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15da80.  v2:= temp @kind object;
  #L15da82.  call temp:= `append`(v2, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15da88.  v2:= temp @kind object;
  #L15da8a.  call temp:= `append`(v2, v0) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15da90.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15da96.  call temp:= `isForeignAutoRefresh`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignAutoRefresh:()Z` @kind virtual;
  #L15da9c.  v0:= temp;
  #L15da9e.  if v0 == 0 then goto L15dac6;
  #L15daa2.  v0:= "foreignAutoRefresh" @kind object;
  #L15daa6.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15daac.  v0:= temp @kind object;
  #L15daae.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dab4.  v0:= temp @kind object;
  #L15dab6.  v2:= "true" @kind object;
  #L15daba.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dac0.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dac6.  call temp:= `getMaxForeignAutoRefreshLevel`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getMaxForeignAutoRefreshLevel:()I` @kind virtual;
  #L15dacc.  v0:= temp;
  #L15dace.  v2:= -1I;
  #L15dad0.  if v0 == v2 then goto L15db04;
  #L15dad4.  v0:= "maxForeignAutoRefreshLevel" @kind object;
  #L15dad8.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dade.  v0:= temp @kind object;
  #L15dae0.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dae6.  v0:= temp @kind object;
  #L15dae8.  call temp:= `getMaxForeignAutoRefreshLevel`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getMaxForeignAutoRefreshLevel:()I` @kind virtual;
  #L15daee.  v2:= temp;
  #L15daf0.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L15daf6.  v2:= temp @kind object;
  #L15daf8.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dafe.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15db04.  call temp:= `getPersisterClass`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getPersisterClass:()Ljava/lang/Class;` @kind virtual;
  #L15db0a.  v0:= temp @kind object;
  #L15db0c.  v2:= `@@com.j256.ormlite.field.DatabaseFieldConfig.DEFAULT_PERSISTER_CLASS` @type ^`java.lang.Class` @kind object;
  #L15db10.  if v0 == v2 then goto L15db44;
  #L15db14.  v0:= "persisterClass" @kind object;
  #L15db18.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15db1e.  v0:= temp @kind object;
  #L15db20.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15db26.  v0:= temp @kind object;
  #L15db28.  call temp:= `getPersisterClass`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getPersisterClass:()Ljava/lang/Class;` @kind virtual;
  #L15db2e.  v2:= temp @kind object;
  #L15db30.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15db36.  v2:= temp @kind object;
  #L15db38.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15db3e.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15db44.  call temp:= `isAllowGeneratedIdInsert`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isAllowGeneratedIdInsert:()Z` @kind virtual;
  #L15db4a.  v0:= temp;
  #L15db4c.  if v0 == 0 then goto L15db74;
  #L15db50.  v0:= "allowGeneratedIdInsert" @kind object;
  #L15db54.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15db5a.  v0:= temp @kind object;
  #L15db5c.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15db62.  v0:= temp @kind object;
  #L15db64.  v2:= "true" @kind object;
  #L15db68.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15db6e.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15db74.  call temp:= `getColumnDefinition`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getColumnDefinition:()Ljava/lang/String;` @kind virtual;
  #L15db7a.  v0:= temp @kind object;
  #L15db7c.  if v0 == 0 then goto L15dba8;
  #L15db80.  v0:= "columnDefinition" @kind object;
  #L15db84.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15db8a.  v0:= temp @kind object;
  #L15db8c.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15db92.  v0:= temp @kind object;
  #L15db94.  call temp:= `getColumnDefinition`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getColumnDefinition:()Ljava/lang/String;` @kind virtual;
  #L15db9a.  v2:= temp @kind object;
  #L15db9c.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dba2.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dba8.  call temp:= `isForeignAutoCreate`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignAutoCreate:()Z` @kind virtual;
  #L15dbae.  v0:= temp;
  #L15dbb0.  if v0 == 0 then goto L15dbd8;
  #L15dbb4.  v0:= "foreignAutoCreate" @kind object;
  #L15dbb8.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dbbe.  v0:= temp @kind object;
  #L15dbc0.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dbc6.  v0:= temp @kind object;
  #L15dbc8.  v2:= "true" @kind object;
  #L15dbcc.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dbd2.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dbd8.  call temp:= `isVersion`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isVersion:()Z` @kind virtual;
  #L15dbde.  v0:= temp;
  #L15dbe0.  if v0 == 0 then goto L15dc08;
  #L15dbe4.  v0:= "version" @kind object;
  #L15dbe8.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dbee.  v0:= temp @kind object;
  #L15dbf0.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dbf6.  v0:= temp @kind object;
  #L15dbf8.  v2:= "true" @kind object;
  #L15dbfc.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dc02.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dc08.  call temp:= `getForeignColumnName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignColumnName:()Ljava/lang/String;` @kind virtual;
  #L15dc0e.  v0:= temp @kind object;
  #L15dc10.  if v0 == 0 then goto L15dc34;
  #L15dc14.  v2:= "foreignColumnName" @kind object;
  #L15dc18.  call temp:= `append`(v9, v2) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dc1e.  v2:= temp @kind object;
  #L15dc20.  call temp:= `append`(v2, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dc26.  v2:= temp @kind object;
  #L15dc28.  call temp:= `append`(v2, v0) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dc2e.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dc34.  call temp:= `isReadOnly`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isReadOnly:()Z` @kind virtual;
  #L15dc3a.  v0:= temp;
  #L15dc3c.  if v0 == 0 then goto L15dc64;
  #L15dc40.  v0:= "readOnly" @kind object;
  #L15dc44.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dc4a.  v0:= temp @kind object;
  #L15dc4c.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dc52.  v0:= temp @kind object;
  #L15dc54.  v2:= "true" @kind object;
  #L15dc58.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dc5e.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dc64.  call temp:= `isForeignCollection`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignCollection:()Z` @kind virtual;
  #L15dc6a.  v0:= temp;
  #L15dc6c.  if v0 == 0 then goto L15dc94;
  #L15dc70.  v0:= "foreignCollection" @kind object;
  #L15dc74.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dc7a.  v0:= temp @kind object;
  #L15dc7c.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dc82.  v0:= temp @kind object;
  #L15dc84.  v2:= "true" @kind object;
  #L15dc88.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dc8e.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dc94.  call temp:= `isForeignCollectionEager`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignCollectionEager:()Z` @kind virtual;
  #L15dc9a.  v0:= temp;
  #L15dc9c.  if v0 == 0 then goto L15dcc4;
  #L15dca0.  v0:= "foreignCollectionEager" @kind object;
  #L15dca4.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dcaa.  v0:= temp @kind object;
  #L15dcac.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dcb2.  v0:= temp @kind object;
  #L15dcb4.  v2:= "true" @kind object;
  #L15dcb8.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dcbe.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dcc4.  call temp:= `getForeignCollectionMaxEagerLevel`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionMaxEagerLevel:()I` @kind virtual;
  #L15dcca.  v0:= temp;
  #L15dccc.  if v0 == v1 then goto L15dd00;
  #L15dcd0.  v0:= "foreignCollectionMaxEagerLevel" @kind object;
  #L15dcd4.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dcda.  v0:= temp @kind object;
  #L15dcdc.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dce2.  v0:= temp @kind object;
  #L15dce4.  call temp:= `getForeignCollectionMaxEagerLevel`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionMaxEagerLevel:()I` @kind virtual;
  #L15dcea.  v2:= temp;
  #L15dcec.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L15dcf2.  v2:= temp @kind object;
  #L15dcf4.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dcfa.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dd00.  call temp:= `getForeignCollectionColumnName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionColumnName:()Ljava/lang/String;` @kind virtual;
  #L15dd06.  v0:= temp @kind object;
  #L15dd08.  if v0 == 0 then goto L15dd34;
  #L15dd0c.  v0:= "foreignCollectionColumnName" @kind object;
  #L15dd10.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dd16.  v0:= temp @kind object;
  #L15dd18.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dd1e.  v0:= temp @kind object;
  #L15dd20.  call temp:= `getForeignCollectionColumnName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionColumnName:()Ljava/lang/String;` @kind virtual;
  #L15dd26.  v2:= temp @kind object;
  #L15dd28.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dd2e.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dd34.  call temp:= `getForeignCollectionOrderColumnName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionOrderColumnName:()Ljava/lang/String;` @kind virtual;
  #L15dd3a.  v0:= temp @kind object;
  #L15dd3c.  if v0 == 0 then goto L15dd68;
  #L15dd40.  v0:= "foreignCollectionOrderColumnName" @kind object;
  #L15dd44.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dd4a.  v0:= temp @kind object;
  #L15dd4c.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dd52.  v0:= temp @kind object;
  #L15dd54.  call temp:= `getForeignCollectionOrderColumnName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionOrderColumnName:()Ljava/lang/String;` @kind virtual;
  #L15dd5a.  v2:= temp @kind object;
  #L15dd5c.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dd62.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dd68.  call temp:= `isForeignCollectionOrderAscending`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignCollectionOrderAscending:()Z` @kind virtual;
  #L15dd6e.  v0:= temp;
  #L15dd70.  if v0 == v1 then goto L15dda4;
  #L15dd74.  v0:= "foreignCollectionOrderAscending" @kind object;
  #L15dd78.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dd7e.  v0:= temp @kind object;
  #L15dd80.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15dd86.  v0:= temp @kind object;
  #L15dd88.  call temp:= `isForeignCollectionOrderAscending`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.isForeignCollectionOrderAscending:()Z` @kind virtual;
  #L15dd8e.  v1:= temp;
  #L15dd90.  call temp:= `toString`(v1) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L15dd96.  v1:= temp @kind object;
  #L15dd98.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dd9e.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dda4.  call temp:= `getForeignCollectionForeignFieldName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionForeignFieldName:()Ljava/lang/String;` @kind virtual;
  #L15ddaa.  v0:= temp @kind object;
  #L15ddac.  if v0 == 0 then goto L15ddd8;
  #L15ddb0.  v0:= "foreignCollectionForeignFieldName" @kind object;
  #L15ddb4.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15ddba.  v0:= temp @kind object;
  #L15ddbc.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L15ddc2.  v0:= temp @kind object;
  #L15ddc4.  call temp:= `getForeignCollectionForeignFieldName`(v10) @signature `Lcom/j256/ormlite/field/DatabaseFieldConfig;.getForeignCollectionForeignFieldName:()Ljava/lang/String;` @kind virtual;
  #L15ddca.  v1:= temp @kind object;
  #L15ddcc.  call temp:= `append`(v0, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15ddd2.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15ddd8.  v0:= "# --field-end--" @kind object;
  #L15dddc.  call temp:= `append`(v9, v0) @signature `Ljava/io/BufferedWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L15dde2.  call `newLine`(v9) @signature `Ljava/io/BufferedWriter;.newLine:()V` @kind virtual;
  #L15dde8.  return @kind void;
}

record `com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap` @kind class @AccessFlag  extends `java.util.LinkedHashMap` @kind class {
  `int` `com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap.capacity` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap` v2 @kind this, `int` v3 ) @signature `Lcom/j256/ormlite/dao/LruObjectCache$LimitedLinkedHashMap;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15821c.  v0:= 0.75F;
  #L158220.  v1:= 1I;
  #L158222.  call `<init>`(v2, v3, v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(IFZ)V` @kind direct;
  #L158228.  v2.`com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap.capacity` @type ^`int` := v3;
  #L15822c.  return @kind void;
}
procedure `boolean` `removeEldestEntry`(`com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lcom/j256/ormlite/dao/LruObjectCache$LimitedLinkedHashMap;.removeEldestEntry:(Ljava/util/Map$Entry;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L158240.  call temp:= `size`(v2) @signature `Lcom/j256/ormlite/dao/LruObjectCache$LimitedLinkedHashMap;.size:()I` @kind virtual;
  #L158246.  v0:= temp;
  #L158248.  v1:= v2.`com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap.capacity` @type ^`int`;
  #L15824c.  if v0 <= v1 then goto L158254;
  #L158250.  v0:= 1I;
  #L158252.  return v0;
  #L158254.  v0:= 0I;
  #L158256.  goto L158252;
}

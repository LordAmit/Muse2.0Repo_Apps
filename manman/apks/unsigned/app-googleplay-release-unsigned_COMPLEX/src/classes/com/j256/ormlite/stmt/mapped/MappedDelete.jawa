record `com.j256.ormlite.stmt.mapped.MappedDelete` @kind class @AccessFlag PUBLIC extends `com.j256.ormlite.stmt.mapped.BaseMappedStatement` @kind class {
}
procedure `void` `<init>`(`com.j256.ormlite.stmt.mapped.MappedDelete` v0 @kind this, `com.j256.ormlite.table.TableInfo` v1 @kind object, `java.lang.String` v2 @kind object, `com.j256.ormlite.field.FieldType`[] v3 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16c4d0.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/BaseMappedStatement;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L16c4d6.  return @kind void;
}
procedure `com.j256.ormlite.stmt.mapped.MappedDelete` `build`(`com.j256.ormlite.db.DatabaseType` v5 @kind object, `com.j256.ormlite.table.TableInfo` v6 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.build:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/table/TableInfo;)Lcom/j256/ormlite/stmt/mapped/MappedDelete;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16c4e8.  call temp:= `getIdField`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getIdField:()Lcom/j256/ormlite/field/FieldType;` @kind virtual;
  #L16c4ee.  v0:= temp @kind object;
  #L16c4f0.  if v0 != 0 then goto L16c53a;
  #L16c4f4.  v0:= new `java.sql.SQLException`;
  #L16c4f8.  v1:= new `java.lang.StringBuilder`;
  #L16c4fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16c502.  v2:= "Cannot delete from " @kind object;
  #L16c506.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c50c.  v1:= temp @kind object;
  #L16c50e.  call temp:= `getDataClass`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getDataClass:()Ljava/lang/Class;` @kind virtual;
  #L16c514.  v2:= temp @kind object;
  #L16c516.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c51c.  v1:= temp @kind object;
  #L16c51e.  v2:= " because it doesn't have an id field" @kind object;
  #L16c522.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c528.  v1:= temp @kind object;
  #L16c52a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c530.  v1:= temp @kind object;
  #L16c532.  call `<init>`(v0, v1) @signature `Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16c538.  throw v0;
  #L16c53a.  v1:= new `java.lang.StringBuilder`;
  #L16c53e.  v2:= 64I;
  #L16c542.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L16c548.  v2:= "DELETE FROM " @kind object;
  #L16c54c.  call temp:= `getTableName`(v6) @signature `Lcom/j256/ormlite/table/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L16c552.  v3:= temp @kind object;
  #L16c554.  call `appendTableName`(v5, v1, v2, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.appendTableName:(Lcom/j256/ormlite/db/DatabaseType;Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L16c55a.  v2:= 0I;
  #L16c55c.  call `appendWhereFieldEq`(v5, v0, v1, v2) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.appendWhereFieldEq:(Lcom/j256/ormlite/db/DatabaseType;Lcom/j256/ormlite/field/FieldType;Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L16c562.  v2:= new `com.j256.ormlite.stmt.mapped.MappedDelete`;
  #L16c566.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c56c.  v1:= temp @kind object;
  #L16c56e.  v3:= 1I;
  #L16c570.  v3:= new `com.j256.ormlite.field.FieldType`[v3];
  #L16c574.  v4:= 0I;
  #L16c576.  v3[v4]:= v0 @kind object;
  #L16c57a.  call `<init>`(v2, v6, v1, v3) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.<init>:(Lcom/j256/ormlite/table/TableInfo;Ljava/lang/String;[Lcom/j256/ormlite/field/FieldType;)V` @kind direct;
  #L16c580.  return v2 @kind object;
}
procedure `int` `delete`(`com.j256.ormlite.stmt.mapped.MappedDelete` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.delete:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #Try_start0.  
  #L16c594.  call temp:= `getFieldObjects`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.getFieldObjects:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L16c59a.  v0:= temp @kind object;
  #L16c59c.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L16c5a0.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16c5a4.  call temp:= `delete`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L16c5aa.  v1:= temp;
  #L16c5ac.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16c5b0.  v3:= "delete data with statement '{}' and {} args, changed {} rows" @kind object;
  #L16c5b4.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L16c5b8.  v5:= length @variable v0;
  #L16c5ba.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16c5c0.  v5:= temp @kind object;
  #L16c5c2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16c5c8.  v6:= temp @kind object;
  #L16c5ca.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L16c5d0.  v2:= length @variable v0;
  #L16c5d2.  if v2 <= 0 then goto L16c5e4;
  #L16c5d6.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16c5da.  v3:= "delete arguments: {}" @kind object;
  #L16c5de.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L16c5e4.  if v1 <= 0 then goto L16c602;
  #L16c5e8.  if v10 == 0 then goto L16c602;
  #L16c5ec.  v0:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.idField` @type ^`com.j256.ormlite.field.FieldType` @kind object;
  #L16c5f0.  call temp:= `extractJavaFieldToSqlArgValue`(v0, v9) @signature `Lcom/j256/ormlite/field/FieldType;.extractJavaFieldToSqlArgValue:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16c5f6.  v0:= temp @kind object;
  #L16c5f8.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.clazz` @type ^`java.lang.Class` @kind object;
  #L16c5fc.  call `remove`(v10, v2, v0) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #Try_end0.  
  #L16c602.  return v1;
  #L16c604.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16c606.  v1:= new `java.lang.StringBuilder`;
  #L16c60a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16c610.  v2:= "Unable to run delete stmt on object " @kind object;
  #L16c614.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c61a.  v1:= temp @kind object;
  #L16c61c.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c622.  v1:= temp @kind object;
  #L16c624.  v2:= ": " @kind object;
  #L16c628.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c62e.  v1:= temp @kind object;
  #L16c630.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L16c634.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c63a.  v1:= temp @kind object;
  #L16c63c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c642.  v1:= temp @kind object;
  #L16c644.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16c64a.  v0:= temp @kind object;
  #L16c64c.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16c604;
}
procedure `int` `deleteById`(`com.j256.ormlite.stmt.mapped.MappedDelete` v7 @kind this, `com.j256.ormlite.support.DatabaseConnection` v8 @kind object, `java.lang.Object` v9 @kind object, `com.j256.ormlite.dao.ObjectCache` v10 @kind object) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.deleteById:(Lcom/j256/ormlite/support/DatabaseConnection;Ljava/lang/Object;Lcom/j256/ormlite/dao/ObjectCache;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16c670.  v0:= 1I;
  #Try_start0.  
  #L16c672.  v0:= new `java.lang.Object`[v0];
  #L16c676.  v1:= 0I;
  #L16c678.  call temp:= `convertIdToFieldObject`(v7, v9) @signature `Lcom/j256/ormlite/stmt/mapped/MappedDelete;.convertIdToFieldObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16c67e.  v2:= temp @kind object;
  #L16c680.  v0[v1]:= v2 @kind object;
  #L16c684.  v1:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L16c688.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.argFieldTypes` @type ^`com.j256.ormlite.field.FieldType`[] @kind object;
  #L16c68c.  call temp:= `delete`(v8, v1, v0, v2) @signature `Lcom/j256/ormlite/support/DatabaseConnection;.delete:(Ljava/lang/String;[Ljava/lang/Object;[Lcom/j256/ormlite/field/FieldType;)I` @kind interface;
  #L16c692.  v1:= temp;
  #L16c694.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16c698.  v3:= "delete data with statement '{}' and {} args, changed {} rows" @kind object;
  #L16c69c.  v4:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L16c6a0.  v5:= length @variable v0;
  #L16c6a2.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16c6a8.  v5:= temp @kind object;
  #L16c6aa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16c6b0.  v6:= temp @kind object;
  #L16c6b2.  call `debug`(v2, v3, v4, v5, v6) @signature `Lcom/j256/ormlite/logger/Logger;.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L16c6b8.  v2:= length @variable v0;
  #L16c6ba.  if v2 <= 0 then goto L16c6cc;
  #L16c6be.  v2:= `@@com.j256.ormlite.stmt.mapped.MappedDelete.logger` @type ^`com.j256.ormlite.logger.Logger` @kind object;
  #L16c6c2.  v3:= "delete arguments: {}" @kind object;
  #L16c6c6.  call `trace`(v2, v3, v0) @signature `Lcom/j256/ormlite/logger/Logger;.trace:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L16c6cc.  if v1 <= 0 then goto L16c6de;
  #L16c6d0.  if v10 == 0 then goto L16c6de;
  #L16c6d4.  v0:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.clazz` @type ^`java.lang.Class` @kind object;
  #L16c6d8.  call `remove`(v10, v0, v9) @signature `Lcom/j256/ormlite/dao/ObjectCache;.remove:(Ljava/lang/Class;Ljava/lang/Object;)V` @kind interface;
  #Try_end0.  
  #L16c6de.  return v1;
  #L16c6e0.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L16c6e2.  v1:= new `java.lang.StringBuilder`;
  #L16c6e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16c6ec.  v2:= "Unable to run deleteById stmt on id " @kind object;
  #L16c6f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c6f6.  v1:= temp @kind object;
  #L16c6f8.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c6fe.  v1:= temp @kind object;
  #L16c700.  v2:= ": " @kind object;
  #L16c704.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c70a.  v1:= temp @kind object;
  #L16c70c.  v2:= v7.`com.j256.ormlite.stmt.mapped.MappedDelete.statement` @type ^`java.lang.String` @kind object;
  #L16c710.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16c716.  v1:= temp @kind object;
  #L16c718.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16c71e.  v1:= temp @kind object;
  #L16c720.  call temp:= `create`(v1, v0) @signature `Lcom/j256/ormlite/misc/SqlExceptionUtil;.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;` @kind static;
  #L16c726.  v0:= temp @kind object;
  #L16c728.  throw v0;
  catch `java.sql.SQLException` @[Try_start0..Try_end0] goto L16c6e0;
}

record `com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1` `com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1$1.this$2` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1$1` v0 @kind this, `com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1` v1 @kind object) @signature `Lcom/adonai/manman/ManLocalArchiveFragment$LocalArchiveParserCallback$1$1;.<init>:(Lcom/adonai/manman/ManLocalArchiveFragment$LocalArchiveParserCallback$1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L12a84c.  v0.`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1$1.this$2` @type ^`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1` := v1 @kind object;
  #L12a850.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12a856.  return @kind void;
}
procedure `void` `run`(`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1$1` v2 @kind this) @signature `Lcom/adonai/manman/ManLocalArchiveFragment$LocalArchiveParserCallback$1$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12a868.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L12a86e.  v0:= temp @kind object;
  #L12a870.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L12a876.  v0:= temp @kind object;
  #L12a878.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L12a87e.  v0:= temp @kind object;
  #Try_start0.  
  #L12a880.  v1:= new `java.lang.Exception`;
  #L12a884.  call `<init>`(v1, v0) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12a88a.  throw v1;
  #Try_end0.  
  #L12a88c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L12a88e.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12a894.  v0:= temp @kind object;
  #L12a896.  v1:= "leak-255" @kind object;
  #L12a89a.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L12a8a0.  v0:= v2.`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1$1.this$2` @type ^`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1` @kind object;
  #L12a8a4.  v0:= v0.`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback$1.this$1` @type ^`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback` @kind object;
  #L12a8a8.  v0:= v0.`com.adonai.manman.ManLocalArchiveFragment$LocalArchiveParserCallback.this$0` @type ^`com.adonai.manman.ManLocalArchiveFragment` @kind object;
  #L12a8ac.  call temp:= `access$800`(v0) @signature `Lcom/adonai/manman/ManLocalArchiveFragment;.access$800:(Lcom/adonai/manman/ManLocalArchiveFragment;)Lcom/adonai/manman/views/ProgressBarWrapper;` @kind static;
  #L12a8b2.  v0:= temp @kind object;
  #L12a8b4.  call `show`(v0) @signature `Lcom/adonai/manman/views/ProgressBarWrapper;.show:()V` @kind virtual;
  #L12a8ba.  return @kind void;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L12a88c;
}

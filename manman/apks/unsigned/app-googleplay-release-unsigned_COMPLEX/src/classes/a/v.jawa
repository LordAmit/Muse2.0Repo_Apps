record `a.v` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `a.v.e` @AccessFlag PRIVATE_FINAL;
}
global `a.v` `@@a.v.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v` `@@a.v.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.v`[] `@@a.v.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L08b438.  v6:= 3I;
  #L08b43a.  v5:= 2I;
  #L08b43c.  v4:= 1I;
  #L08b43e.  v3:= 0I;
  #L08b440.  v0:= new `a.v`;
  #L08b444.  v1:= "HTTP_1_0" @kind object;
  #L08b448.  v2:= "http/1.0" @kind object;
  #L08b44c.  call `<init>`(v0, v1, v3, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08b452.  `@@a.v.a` @type ^`a.v` := v0 @kind object;
  #L08b456.  v0:= new `a.v`;
  #L08b45a.  v1:= "HTTP_1_1" @kind object;
  #L08b45e.  v2:= "http/1.1" @kind object;
  #L08b462.  call `<init>`(v0, v1, v4, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08b468.  `@@a.v.b` @type ^`a.v` := v0 @kind object;
  #L08b46c.  v0:= new `a.v`;
  #L08b470.  v1:= "SPDY_3" @kind object;
  #L08b474.  v2:= "spdy/3.1" @kind object;
  #L08b478.  call `<init>`(v0, v1, v5, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08b47e.  `@@a.v.c` @type ^`a.v` := v0 @kind object;
  #L08b482.  v0:= new `a.v`;
  #L08b486.  v1:= "HTTP_2" @kind object;
  #L08b48a.  v2:= "h2" @kind object;
  #L08b48e.  call `<init>`(v0, v1, v6, v2) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08b494.  `@@a.v.d` @type ^`a.v` := v0 @kind object;
  #L08b498.  v0:= 4I;
  #L08b49a.  v0:= new `a.v`[v0];
  #L08b49e.  v1:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08b4a2.  v0[v3]:= v1 @kind object;
  #L08b4a6.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08b4aa.  v0[v4]:= v1 @kind object;
  #L08b4ae.  v1:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08b4b2.  v0[v5]:= v1 @kind object;
  #L08b4b6.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08b4ba.  v0[v6]:= v1 @kind object;
  #L08b4be.  `@@a.v.f` @type ^`a.v`[] := v0 @kind object;
  #L08b4c2.  return @kind void;
}
procedure `void` `<init>`(`a.v` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `La/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L08b4d4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L08b4da.  v0.`a.v.e` @type ^`java.lang.String` := v3 @kind object;
  #L08b4de.  return @kind void;
}
procedure `a.v` `a`(`java.lang.String` v3 @kind object) @signature `La/v;.a:(Ljava/lang/String;)La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L08b4f0.  v0:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08b4f4.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08b4f8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08b4fe.  v0:= temp;
  #L08b500.  if v0 == 0 then goto L08b50a;
  #L08b504.  v0:= `@@a.v.a` @type ^`a.v` @kind object;
  #L08b508.  return v0 @kind object;
  #L08b50a.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08b50e.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08b512.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08b518.  v0:= temp;
  #L08b51a.  if v0 == 0 then goto L08b524;
  #L08b51e.  v0:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08b522.  goto L08b508;
  #L08b524.  v0:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08b528.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08b52c.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08b532.  v0:= temp;
  #L08b534.  if v0 == 0 then goto L08b53e;
  #L08b538.  v0:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08b53c.  goto L08b508;
  #L08b53e.  v0:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08b542.  v0:= v0.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08b546.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08b54c.  v0:= temp;
  #L08b54e.  if v0 == 0 then goto L08b558;
  #L08b552.  v0:= `@@a.v.c` @type ^`a.v` @kind object;
  #L08b556.  goto L08b508;
  #L08b558.  v0:= new `java.io.IOException`;
  #L08b55c.  v1:= new `java.lang.StringBuilder`;
  #L08b560.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b566.  v2:= "Unexpected protocol: " @kind object;
  #L08b56a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b570.  v1:= temp @kind object;
  #L08b572.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b578.  v1:= temp @kind object;
  #L08b57a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b580.  v1:= temp @kind object;
  #L08b582.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b588.  throw v0;
}
procedure `a.v` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/v;.valueOf:(Ljava/lang/String;)La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08b59c.  v0:= constclass @type ^`a.v` @kind object;
  #L08b5a0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L08b5a6.  v0:= temp @kind object;
  #L08b5a8.  v0:= (`a.v`) v0 @kind object;
  #L08b5ac.  return v0 @kind object;
}
procedure `a.v`[] `values`() @signature `La/v;.values:()[La/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L08b5c0.  v0:= `@@a.v.f` @type ^`a.v`[] @kind object;
  #L08b5c4.  call temp:= `clone`(v0) @signature `[La/v;.clone:()Ljava/lang/Object;` @kind virtual;
  #L08b5ca.  v0:= temp @kind object;
  #L08b5cc.  v0:= (`a.v`[]) v0 @kind object;
  #L08b5d0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`a.v` v1 @kind this) @signature `La/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b5e4.  v0:= v1.`a.v.e` @type ^`java.lang.String` @kind object;
  #L08b5e8.  return v0 @kind object;
}

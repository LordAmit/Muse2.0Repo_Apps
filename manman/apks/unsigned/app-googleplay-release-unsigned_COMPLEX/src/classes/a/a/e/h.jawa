record `a.a.e.h` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `a.a.e.d$a` `a.a.e.h.b` @AccessFlag FINAL;
  `b.e` `a.a.e.h.c` @AccessFlag PRIVATE_FINAL;
  `a.a.e.h$a` `a.a.e.h.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `a.a.e.h.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@a.a.e.h.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L07eba8.  v0:= constclass @type ^`a.a.e.e` @kind object;
  #L07ebac.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L07ebb2.  v0:= temp @kind object;
  #L07ebb4.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L07ebba.  v0:= temp @kind object;
  #L07ebbc.  `@@a.a.e.h.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L07ebc0.  return @kind void;
}
procedure `void` `<init>`(`a.a.e.h` v3 @kind this, `b.e` v4 @kind object, `boolean` v5 ) @signature `La/a/e/h;.<init>:(Lb/e;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L07ebd4.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07ebda.  v3.`a.a.e.h.c` @type ^`b.e` := v4 @kind object;
  #L07ebde.  v3.`a.a.e.h.e` @type ^`boolean` := v5 @kind boolean;
  #L07ebe2.  v0:= new `a.a.e.h$a`;
  #L07ebe6.  v1:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ebea.  call `<init>`(v0, v1) @signature `La/a/e/h$a;.<init>:(Lb/e;)V` @kind direct;
  #L07ebf0.  v3.`a.a.e.h.d` @type ^`a.a.e.h$a` := v0 @kind object;
  #L07ebf4.  v0:= new `a.a.e.d$a`;
  #L07ebf8.  v1:= 4096I;
  #L07ebfc.  v2:= v3.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07ec00.  call `<init>`(v0, v1, v2) @signature `La/a/e/d$a;.<init>:(ILb/r;)V` @kind direct;
  #L07ec06.  v3.`a.a.e.h.b` @type ^`a.a.e.d$a` := v0 @kind object;
  #L07ec0a.  return @kind void;
}
procedure `int` `a`(`int` v4 , `byte` v5 , `short` v6 ) @signature `La/a/e/h;.a:(IBS)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07ec1c.  v0:= v5 ^& 8;
  #L07ec20.  if v0 == 0 then goto L07ec28;
  #L07ec24.  v4:= v4 + -1;
  #L07ec28.  if v6 <= v4 then goto L07ec5c;
  #L07ec2c.  v0:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L07ec30.  v1:= 2I;
  #L07ec32.  v1:= new `java.lang.Object`[v1];
  #L07ec36.  v2:= 0I;
  #L07ec38.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L07ec3e.  v3:= temp @kind object;
  #L07ec40.  v1[v2]:= v3 @kind object;
  #L07ec44.  v2:= 1I;
  #L07ec46.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ec4c.  v3:= temp @kind object;
  #L07ec4e.  v1[v2]:= v3 @kind object;
  #L07ec52.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ec58.  v0:= temp @kind object;
  #L07ec5a.  throw v0;
  #L07ec5c.  v0:= v4 - v6 @kind int;
  #L07ec60.  v0:= (`short`) v0 @kind i2s;
  #L07ec62.  return v0;
}
procedure `int` `a`(`b.e` v2 @kind object) @signature `La/a/e/h;.a:(Lb/e;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L07ec74.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07ec7a.  v0:= temp;
  #L07ec7c.  v0:= v0 ^& 255;
  #L07ec80.  v0:= v0 ^< 16;
  #L07ec84.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07ec8a.  v1:= temp;
  #L07ec8c.  v1:= v1 ^& 255;
  #L07ec90.  v1:= v1 ^< 8;
  #L07ec94.  v0:= v0 ^| v1 @kind int;
  #L07ec96.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07ec9c.  v1:= temp;
  #L07ec9e.  v1:= v1 ^& 255;
  #L07eca2.  v0:= v0 ^| v1 @kind int;
  #L07eca4.  return v0;
}
procedure `java.util.List` `a`(`a.a.e.h` v2 @kind this, `int` v3 , `short` v4 , `byte` v5 , `int` v6 ) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L07ecb8.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07ecbc.  v1:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07ecc0.  v1.`a.a.e.h$a.d` @type ^`int` := v3;
  #L07ecc4.  v0.`a.a.e.h$a.a` @type ^`int` := v3;
  #L07ecc8.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07eccc.  v0.`a.a.e.h$a.e` @type ^`short` := v4 @kind char;
  #L07ecd0.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07ecd4.  v0.`a.a.e.h$a.b` @type ^`byte` := v5 @kind byte;
  #L07ecd8.  v0:= v2.`a.a.e.h.d` @type ^`a.a.e.h$a` @kind object;
  #L07ecdc.  v0.`a.a.e.h$a.c` @type ^`int` := v6;
  #L07ece0.  v0:= v2.`a.a.e.h.b` @type ^`a.a.e.d$a` @kind object;
  #L07ece4.  call `a`(v0) @signature `La/a/e/d$a;.a:()V` @kind virtual;
  #L07ecea.  v0:= v2.`a.a.e.h.b` @type ^`a.a.e.d$a` @kind object;
  #L07ecee.  call temp:= `b`(v0) @signature `La/a/e/d$a;.b:()Ljava/util/List;` @kind virtual;
  #L07ecf4.  v0:= temp @kind object;
  #L07ecf6.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 ) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07ed08.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ed0c.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07ed12.  v1:= temp;
  #L07ed14.  v0:= -2147483648I;
  #L07ed18.  v0:= v0 ^& v1 @kind int;
  #L07ed1a.  if v0 == 0 then goto L07ed44;
  #L07ed1e.  v0:= 1I;
  #L07ed20.  v2:= 2147483647I;
  #L07ed26.  v1:= v1 ^& v2 @kind int;
  #L07ed28.  v2:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ed2c.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07ed32.  v2:= temp;
  #L07ed34.  v2:= v2 ^& 255;
  #L07ed38.  v2:= v2 + 1;
  #L07ed3c.  call `a`(v4, v5, v1, v2, v0) @signature `La/a/e/h$b;.a:(IIIZ)V` @kind interface;
  #L07ed42.  return @kind void;
  #L07ed44.  v0:= 0I;
  #L07ed46.  goto L07ed20;
}
procedure `void` `a`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `La/a/e/h;.a:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07ed58.  v0:= 0I;
  #L07ed5a.  if v7 != 0 then goto L07ed70;
  #L07ed5e.  v1:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L07ed62.  v0:= new `java.lang.Object`[v0];
  #L07ed66.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ed6c.  v0:= temp @kind object;
  #L07ed6e.  throw v0;
  #L07ed70.  v1:= v6 ^& 1;
  #L07ed74.  if v1 == 0 then goto L07edc0;
  #L07ed78.  v1:= 1I;
  #L07ed7a.  v2:= v6 ^& 8;
  #L07ed7e.  if v2 == 0 then goto L07ed94;
  #L07ed82.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ed86.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07ed8c.  v0:= temp;
  #L07ed8e.  v0:= v0 ^& 255;
  #L07ed92.  v0:= (`short`) v0 @kind i2s;
  #L07ed94.  v2:= v6 ^& 32;
  #L07ed98.  if v2 == 0 then goto L07eda6;
  #L07ed9c.  call `a`(v3, v4, v7) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @kind direct;
  #L07eda2.  v5:= v5 + -5;
  #L07eda6.  call temp:= `a`(v5, v6, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07edac.  v2:= temp;
  #L07edae.  call temp:= `a`(v3, v2, v0, v6, v7) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L07edb4.  v0:= temp @kind object;
  #L07edb6.  v2:= -1I;
  #L07edb8.  call `a`(v4, v1, v7, v2, v0) @signature `La/a/e/h$b;.a:(ZIILjava/util/List;)V` @kind interface;
  #L07edbe.  return @kind void;
  #L07edc0.  v1:= v0;
  #L07edc2.  goto L07ed7a;
}
procedure `void` `b`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.b:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07edd4.  v1:= 1I;
  #L07edd6.  v0:= 0I;
  #L07edd8.  v2:= v7 ^& 1;
  #L07eddc.  if v2 == 0 then goto L07ee00;
  #L07ede0.  v2:= v1;
  #L07ede2.  v3:= v7 ^& 32;
  #L07ede6.  if v3 == 0 then goto L07ee04;
  #L07edea.  if v1 == 0 then goto L07ee08;
  #L07edee.  v1:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L07edf2.  v0:= new `java.lang.Object`[v0];
  #L07edf6.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07edfc.  v0:= temp @kind object;
  #L07edfe.  throw v0;
  #L07ee00.  v2:= v0;
  #L07ee02.  goto L07ede2;
  #L07ee04.  v1:= v0;
  #L07ee06.  goto L07edea;
  #L07ee08.  v1:= v7 ^& 8;
  #L07ee0c.  if v1 == 0 then goto L07ee22;
  #L07ee10.  v0:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ee14.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07ee1a.  v0:= temp;
  #L07ee1c.  v0:= v0 ^& 255;
  #L07ee20.  v0:= (`short`) v0 @kind i2s;
  #L07ee22.  call temp:= `a`(v6, v7, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07ee28.  v1:= temp;
  #L07ee2a.  v3:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ee2e.  call `a`(v5, v2, v8, v3, v1) @signature `La/a/e/h$b;.a:(ZILb/e;I)V` @kind interface;
  #L07ee34.  v1:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07ee38.  v2:= (`long`) v0 @kind i2l;
  #L07ee3a.  call `g`(v1, v2) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07ee40.  return @kind void;
}
procedure `void` `c`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.c:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07ee54.  v3:= 0I;
  #L07ee56.  v0:= 5I;
  #L07ee58.  if v6 == v0 then goto L07ee7c;
  #L07ee5c.  v0:= "TYPE_PRIORITY length: %d != 5" @kind object;
  #L07ee60.  v1:= 1I;
  #L07ee62.  v1:= new `java.lang.Object`[v1];
  #L07ee66.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ee6c.  v2:= temp @kind object;
  #L07ee6e.  v1[v3]:= v2 @kind object;
  #L07ee72.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ee78.  v0:= temp @kind object;
  #L07ee7a.  throw v0;
  #L07ee7c.  if v8 != 0 then goto L07ee92;
  #L07ee80.  v0:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L07ee84.  v1:= new `java.lang.Object`[v3];
  #L07ee88.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ee8e.  v0:= temp @kind object;
  #L07ee90.  throw v0;
  #L07ee92.  call `a`(v4, v5, v8) @signature `La/a/e/h;.a:(La/a/e/h$b;I)V` @kind direct;
  #L07ee98.  return @kind void;
}
procedure `void` `d`(`a.a.e.h` v4 @kind this, `a.a.e.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `La/a/e/h;.d:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L07eeac.  v2:= 1I;
  #L07eeae.  v3:= 0I;
  #L07eeb0.  v0:= 4I;
  #L07eeb2.  if v6 == v0 then goto L07eed4;
  #L07eeb6.  v0:= "TYPE_RST_STREAM length: %d != 4" @kind object;
  #L07eeba.  v1:= new `java.lang.Object`[v2];
  #L07eebe.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07eec4.  v2:= temp @kind object;
  #L07eec6.  v1[v3]:= v2 @kind object;
  #L07eeca.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07eed0.  v0:= temp @kind object;
  #L07eed2.  throw v0;
  #L07eed4.  if v8 != 0 then goto L07eeea;
  #L07eed8.  v0:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L07eedc.  v1:= new `java.lang.Object`[v3];
  #L07eee0.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07eee6.  v0:= temp @kind object;
  #L07eee8.  throw v0;
  #L07eeea.  v0:= v4.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07eeee.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07eef4.  v0:= temp;
  #L07eef6.  call temp:= `a`(v0) @signature `La/a/e/b;.a:(I)La/a/e/b;` @kind static;
  #L07eefc.  v1:= temp @kind object;
  #L07eefe.  if v1 != 0 then goto L07ef20;
  #L07ef02.  v1:= "TYPE_RST_STREAM unexpected error code: %d" @kind object;
  #L07ef06.  v2:= new `java.lang.Object`[v2];
  #L07ef0a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ef10.  v0:= temp @kind object;
  #L07ef12.  v2[v3]:= v0 @kind object;
  #L07ef16.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ef1c.  v0:= temp @kind object;
  #L07ef1e.  throw v0;
  #L07ef20.  call `a`(v5, v8, v1) @signature `La/a/e/h$b;.a:(ILa/a/e/b;)V` @kind interface;
  #L07ef26.  return @kind void;
}
procedure `void` `e`(`a.a.e.h` v7 @kind this, `a.a.e.h$b` v8 @kind object, `int` v9 , `byte` v10 , `int` v11 ) @signature `La/a/e/h;.e:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07ef38.  v6:= 1I;
  #L07ef3a.  v2:= 0I;
  #L07ef3c.  if v11 == 0 then goto L07ef52;
  #L07ef40.  v0:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L07ef44.  v1:= new `java.lang.Object`[v2];
  #L07ef48.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ef4e.  v0:= temp @kind object;
  #L07ef50.  throw v0;
  #L07ef52.  v0:= v10 ^& 1;
  #L07ef56.  if v0 == 0 then goto L07ef78;
  #L07ef5a.  if v9 == 0 then goto L07ef70;
  #L07ef5e.  v0:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L07ef62.  v1:= new `java.lang.Object`[v2];
  #L07ef66.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ef6c.  v0:= temp @kind object;
  #L07ef6e.  throw v0;
  #L07ef70.  call `a`(v8) @signature `La/a/e/h$b;.a:()V` @kind interface;
  #L07ef76.  return @kind void;
  #L07ef78.  v0:= v9 %% 6;
  #L07ef7c.  if v0 == 0 then goto L07ef9e;
  #L07ef80.  v0:= "TYPE_SETTINGS length %% 6 != 0: %s" @kind object;
  #L07ef84.  v1:= new `java.lang.Object`[v6];
  #L07ef88.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07ef8e.  v3:= temp @kind object;
  #L07ef90.  v1[v2]:= v3 @kind object;
  #L07ef94.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07ef9a.  v0:= temp @kind object;
  #L07ef9c.  throw v0;
  #L07ef9e.  v3:= new `a.a.e.n`;
  #L07efa2.  call `<init>`(v3) @signature `La/a/e/n;.<init>:()V` @kind direct;
  #L07efa8.  v1:= v2;
  #L07efaa.  if v1 >= v9 then goto L07f040;
  #L07efae.  v0:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07efb2.  call temp:= `i`(v0) @signature `Lb/e;.i:()S` @kind interface;
  #L07efb8.  v0:= temp;
  #L07efba.  v4:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07efbe.  call temp:= `j`(v4) @signature `Lb/e;.j:()I` @kind interface;
  #L07efc4.  v4:= temp;
  #L07efc6.  goto L07f048;
  #L07efcc.  call temp:= `a`(v3, v0, v4) @signature `La/a/e/n;.a:(II)La/a/e/n;` @kind virtual;
  #L07efd2.  v0:= v1 + 6;
  #L07efd6.  v1:= v0;
  #L07efd8.  goto L07efaa;
  #L07efda.  if v4 == 0 then goto L07efcc;
  #L07efde.  if v4 == v6 then goto L07efcc;
  #L07efe2.  v0:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L07efe6.  v1:= new `java.lang.Object`[v2];
  #L07efea.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07eff0.  v0:= temp @kind object;
  #L07eff2.  throw v0;
  #L07eff4.  v0:= 4I;
  #L07eff6.  goto L07efcc;
  #L07eff8.  v0:= 7I;
  #L07effa.  if v4 >= 0 then goto L07efcc;
  #L07effe.  v0:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L07f002.  v1:= new `java.lang.Object`[v2];
  #L07f006.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f00c.  v0:= temp @kind object;
  #L07f00e.  throw v0;
  #L07f010.  v5:= 16384I;
  #L07f014.  if v4 < v5 then goto L07f022;
  #L07f018.  v5:= 16777215I;
  #L07f01e.  if v4 <= v5 then goto L07efcc;
  #L07f022.  v0:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s" @kind object;
  #L07f026.  v1:= new `java.lang.Object`[v6];
  #L07f02a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f030.  v3:= temp @kind object;
  #L07f032.  v1[v2]:= v3 @kind object;
  #L07f036.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f03c.  v0:= temp @kind object;
  #L07f03e.  throw v0;
  #L07f040.  call `a`(v8, v2, v3) @signature `La/a/e/h$b;.a:(ZLa/a/e/n;)V` @kind interface;
  #L07f046.  goto L07ef76;
  #L07f048.  switch v0
                  | 1 => goto L07efcc
                  | 2 => goto L07efda
                  | 3 => goto L07eff4
                  | 4 => goto L07eff8
                  | 5 => goto L07f010
                  | 6 => goto L07efcc
                  | else => goto L07efcc;
}
procedure `void` `f`(`a.a.e.h` v3 @kind this, `a.a.e.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `La/a/e/h;.f:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L07f078.  v0:= 0I;
  #L07f07a.  if v7 != 0 then goto L07f090;
  #L07f07e.  v1:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L07f082.  v0:= new `java.lang.Object`[v0];
  #L07f086.  call temp:= `b`(v1, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f08c.  v0:= temp @kind object;
  #L07f08e.  throw v0;
  #L07f090.  v1:= v6 ^& 8;
  #L07f094.  if v1 == 0 then goto L07f0aa;
  #L07f098.  v0:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f09c.  call temp:= `h`(v0) @signature `Lb/e;.h:()B` @kind interface;
  #L07f0a2.  v0:= temp;
  #L07f0a4.  v0:= v0 ^& 255;
  #L07f0a8.  v0:= (`short`) v0 @kind i2s;
  #L07f0aa.  v1:= v3.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f0ae.  call temp:= `j`(v1) @signature `Lb/e;.j:()I` @kind interface;
  #L07f0b4.  v1:= temp;
  #L07f0b6.  v2:= 2147483647I;
  #L07f0bc.  v1:= v1 ^& v2 @kind int;
  #L07f0be.  v2:= v5 + -4;
  #L07f0c2.  call temp:= `a`(v2, v6, v0) @signature `La/a/e/h;.a:(IBS)I` @kind static;
  #L07f0c8.  v2:= temp;
  #L07f0ca.  call temp:= `a`(v3, v2, v0, v6, v7) @signature `La/a/e/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L07f0d0.  v0:= temp @kind object;
  #L07f0d2.  call `a`(v4, v7, v1, v0) @signature `La/a/e/h$b;.a:(IILjava/util/List;)V` @kind interface;
  #L07f0d8.  return @kind void;
}
procedure `void` `g`(`a.a.e.h` v5 @kind this, `a.a.e.h$b` v6 @kind object, `int` v7 , `byte` v8 , `int` v9 ) @signature `La/a/e/h;.g:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L07f0ec.  v0:= 1I;
  #L07f0ee.  v1:= 0I;
  #L07f0f0.  v2:= 8I;
  #L07f0f4.  if v7 == v2 then goto L07f116;
  #L07f0f8.  v2:= "TYPE_PING length != 8: %s" @kind object;
  #L07f0fc.  v0:= new `java.lang.Object`[v0];
  #L07f100.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f106.  v3:= temp @kind object;
  #L07f108.  v0[v1]:= v3 @kind object;
  #L07f10c.  call temp:= `b`(v2, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f112.  v0:= temp @kind object;
  #L07f114.  throw v0;
  #L07f116.  if v9 == 0 then goto L07f12c;
  #L07f11a.  v0:= "TYPE_PING streamId != 0" @kind object;
  #L07f11e.  v1:= new `java.lang.Object`[v1];
  #L07f122.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f128.  v0:= temp @kind object;
  #L07f12a.  throw v0;
  #L07f12c.  v2:= v5.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f130.  call temp:= `j`(v2) @signature `Lb/e;.j:()I` @kind interface;
  #L07f136.  v2:= temp;
  #L07f138.  v3:= v5.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f13c.  call temp:= `j`(v3) @signature `Lb/e;.j:()I` @kind interface;
  #L07f142.  v3:= temp;
  #L07f144.  v4:= v8 ^& 1;
  #L07f148.  if v4 == 0 then goto L07f154;
  #L07f14c.  call `a`(v6, v0, v2, v3) @signature `La/a/e/h$b;.a:(ZII)V` @kind interface;
  #L07f152.  return @kind void;
  #L07f154.  v0:= v1;
  #L07f156.  goto L07f14c;
}
procedure `void` `h`(`a.a.e.h` v6 @kind this, `a.a.e.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `La/a/e/h;.h:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07f168.  v5:= 1I;
  #L07f16a.  v4:= 0I;
  #L07f16c.  v0:= 8I;
  #L07f170.  if v8 >= v0 then goto L07f192;
  #L07f174.  v0:= "TYPE_GOAWAY length < 8: %s" @kind object;
  #L07f178.  v1:= new `java.lang.Object`[v5];
  #L07f17c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f182.  v2:= temp @kind object;
  #L07f184.  v1[v4]:= v2 @kind object;
  #L07f188.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f18e.  v0:= temp @kind object;
  #L07f190.  throw v0;
  #L07f192.  if v10 == 0 then goto L07f1a8;
  #L07f196.  v0:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L07f19a.  v1:= new `java.lang.Object`[v4];
  #L07f19e.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f1a4.  v0:= temp @kind object;
  #L07f1a6.  throw v0;
  #L07f1a8.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f1ac.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07f1b2.  v1:= temp;
  #L07f1b4.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f1b8.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07f1be.  v0:= temp;
  #L07f1c0.  v2:= v8 + -8;
  #L07f1c4.  call temp:= `a`(v0) @signature `La/a/e/b;.a:(I)La/a/e/b;` @kind static;
  #L07f1ca.  v3:= temp @kind object;
  #L07f1cc.  if v3 != 0 then goto L07f1ee;
  #L07f1d0.  v1:= "TYPE_GOAWAY unexpected error code: %d" @kind object;
  #L07f1d4.  v2:= new `java.lang.Object`[v5];
  #L07f1d8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f1de.  v0:= temp @kind object;
  #L07f1e0.  v2[v4]:= v0 @kind object;
  #L07f1e4.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f1ea.  v0:= temp @kind object;
  #L07f1ec.  throw v0;
  #L07f1ee.  v0:= `@@b.f.b` @type ^`b.f` @kind object;
  #L07f1f2.  if v2 <= 0 then goto L07f204;
  #L07f1f6.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f1fa.  v4:= (`long`) v2 @kind i2l;
  #L07f1fc.  call temp:= `c`(v0, v4) @signature `Lb/e;.c:(J)Lb/f;` @kind interface;
  #L07f202.  v0:= temp @kind object;
  #L07f204.  call `a`(v7, v1, v3, v0) @signature `La/a/e/h$b;.a:(ILa/a/e/b;Lb/f;)V` @kind interface;
  #L07f20a.  return @kind void;
}
procedure `void` `i`(`a.a.e.h` v6 @kind this, `a.a.e.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `La/a/e/h;.i:(La/a/e/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07f21c.  v5:= 1I;
  #L07f21e.  v4:= 0I;
  #L07f220.  v0:= 4I;
  #L07f222.  if v8 == v0 then goto L07f244;
  #L07f226.  v0:= "TYPE_WINDOW_UPDATE length !=4: %s" @kind object;
  #L07f22a.  v1:= new `java.lang.Object`[v5];
  #L07f22e.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f234.  v2:= temp @kind object;
  #L07f236.  v1[v4]:= v2 @kind object;
  #L07f23a.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f240.  v0:= temp @kind object;
  #L07f242.  throw v0;
  #L07f244.  v0:= v6.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f248.  call temp:= `j`(v0) @signature `Lb/e;.j:()I` @kind interface;
  #L07f24e.  v0:= temp;
  #L07f250.  v0:= (`long`) v0 @kind i2l;
  #L07f252.  v2:= 2147483647L;
  #L07f258.  v0:= v0 ^& v2 @kind long;
  #L07f25a.  v2:= 0L;
  #L07f25e.  v2:= lcmp(v0, v2);
  #L07f262.  if v2 != 0 then goto L07f284;
  #L07f266.  v2:= "windowSizeIncrement was 0" @kind object;
  #L07f26a.  v3:= new `java.lang.Object`[v5];
  #L07f26e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L07f274.  v0:= temp @kind object;
  #L07f276.  v3[v4]:= v0 @kind object;
  #L07f27a.  call temp:= `b`(v2, v3) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f280.  v0:= temp @kind object;
  #L07f282.  throw v0;
  #L07f284.  call `a`(v7, v10, v0) @signature `La/a/e/h$b;.a:(IJ)V` @kind interface;
  #L07f28a.  return @kind void;
}
procedure `void` `a`(`a.a.e.h` v7 @kind this, `a.a.e.h$b` v8 @kind object) @signature `La/a/e/h;.a:(La/a/e/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07f29c.  v6:= 1I;
  #L07f29e.  v5:= 0I;
  #L07f2a0.  v0:= v7.`a.a.e.h.e` @type ^`boolean` @kind boolean;
  #L07f2a4.  if v0 == 0 then goto L07f2c6;
  #L07f2a8.  call temp:= `a`(v7, v6, v8) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @kind virtual;
  #L07f2ae.  v0:= temp;
  #L07f2b0.  if v0 != 0 then goto L07f348;
  #L07f2b4.  v0:= "Required SETTINGS preface not received" @kind object;
  #L07f2b8.  v1:= new `java.lang.Object`[v5];
  #L07f2bc.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f2c2.  v0:= temp @kind object;
  #L07f2c4.  throw v0;
  #L07f2c6.  v0:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f2ca.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L07f2ce.  call temp:= `g`(v1) @signature `Lb/f;.g:()I` @kind virtual;
  #L07f2d4.  v1:= temp;
  #L07f2d6.  v2:= (`long`) v1 @kind i2l;
  #L07f2d8.  call temp:= `c`(v0, v2) @signature `Lb/e;.c:(J)Lb/f;` @kind interface;
  #L07f2de.  v0:= temp @kind object;
  #L07f2e0.  v1:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07f2e4.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L07f2e8.  call temp:= `isLoggable`(v1, v2) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L07f2ee.  v1:= temp;
  #L07f2f0.  if v1 == 0 then goto L07f31a;
  #L07f2f4.  v1:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07f2f8.  v2:= "<< CONNECTION %s" @kind object;
  #L07f2fc.  v3:= new `java.lang.Object`[v6];
  #L07f300.  call temp:= `e`(v0) @signature `Lb/f;.e:()Ljava/lang/String;` @kind virtual;
  #L07f306.  v4:= temp @kind object;
  #L07f308.  v3[v5]:= v4 @kind object;
  #L07f30c.  call temp:= `a`(v2, v3) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L07f312.  v2:= temp @kind object;
  #L07f314.  call `fine`(v1, v2) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L07f31a.  v1:= `@@a.a.e.e.a` @type ^`b.f` @kind object;
  #L07f31e.  call temp:= `equals`(v1, v0) @signature `Lb/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L07f324.  v1:= temp;
  #L07f326.  if v1 != 0 then goto L07f348;
  #L07f32a.  v1:= "Expected a connection header but was %s" @kind object;
  #L07f32e.  v2:= new `java.lang.Object`[v6];
  #L07f332.  call temp:= `a`(v0) @signature `Lb/f;.a:()Ljava/lang/String;` @kind virtual;
  #L07f338.  v0:= temp @kind object;
  #L07f33a.  v2[v5]:= v0 @kind object;
  #L07f33e.  call temp:= `b`(v1, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f344.  v0:= temp @kind object;
  #L07f346.  throw v0;
  #L07f348.  return @kind void;
}
procedure `boolean` `a`(`a.a.e.h` v7 @kind this, `boolean` v8 , `a.a.e.h$b` v9 @kind object) @signature `La/a/e/h;.a:(ZLa/a/e/h$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L07f35c.  v1:= 0I;
  #L07f35e.  v0:= 1I;
  #Try_start0.  
  #L07f360.  v2:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f364.  v4:= 9L;
  #L07f368.  call `a`(v2, v4) @signature `Lb/e;.a:(J)V` @kind interface;
  #Try_end0.  
  #L07f36e.  v2:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f372.  call temp:= `a`(v2) @signature `La/a/e/h;.a:(Lb/e;)I` @kind static;
  #L07f378.  v2:= temp;
  #L07f37a.  if v2 < 0 then goto L07f386;
  #L07f37e.  v3:= 16384I;
  #L07f382.  if v2 <= v3 then goto L07f3aa;
  #L07f386.  v3:= "FRAME_SIZE_ERROR: %s" @kind object;
  #L07f38a.  v0:= new `java.lang.Object`[v0];
  #L07f38e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L07f394.  v2:= temp @kind object;
  #L07f396.  v0[v1]:= v2 @kind object;
  #L07f39a.  call temp:= `b`(v3, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f3a0.  v0:= temp @kind object;
  #L07f3a2.  throw v0;
  #L07f3a4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L07f3a6.  v0:= v1;
  #L07f3a8.  return v0;
  #L07f3aa.  v3:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f3ae.  call temp:= `h`(v3) @signature `Lb/e;.h:()B` @kind interface;
  #L07f3b4.  v3:= temp;
  #L07f3b6.  v3:= v3 ^& 255;
  #L07f3ba.  v3:= (`byte`) v3 @kind i2b;
  #L07f3bc.  if v8 == 0 then goto L07f3e4;
  #L07f3c0.  v4:= 4I;
  #L07f3c2.  if v3 == v4 then goto L07f3e4;
  #L07f3c6.  v2:= "Expected a SETTINGS frame but was %s" @kind object;
  #L07f3ca.  v0:= new `java.lang.Object`[v0];
  #L07f3ce.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L07f3d4.  v3:= temp @kind object;
  #L07f3d6.  v0[v1]:= v3 @kind object;
  #L07f3da.  call temp:= `b`(v2, v0) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07f3e0.  v0:= temp @kind object;
  #L07f3e2.  throw v0;
  #L07f3e4.  v1:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f3e8.  call temp:= `h`(v1) @signature `Lb/e;.h:()B` @kind interface;
  #L07f3ee.  v1:= temp;
  #L07f3f0.  v1:= v1 ^& 255;
  #L07f3f4.  v1:= (`byte`) v1 @kind i2b;
  #L07f3f6.  v4:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f3fa.  call temp:= `j`(v4) @signature `Lb/e;.j:()I` @kind interface;
  #L07f400.  v4:= temp;
  #L07f402.  v5:= 2147483647I;
  #L07f408.  v4:= v4 ^& v5 @kind int;
  #L07f40a.  v5:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07f40e.  v6:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L07f412.  call temp:= `isLoggable`(v5, v6) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L07f418.  v5:= temp;
  #L07f41a.  if v5 == 0 then goto L07f430;
  #L07f41e.  v5:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07f422.  call temp:= `a`(v0, v4, v2, v3, v1) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L07f428.  v6:= temp @kind object;
  #L07f42a.  call `fine`(v5, v6) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L07f430.  goto L07f48c;
  #L07f436.  v1:= v7.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f43a.  v2:= (`long`) v2 @kind i2l;
  #L07f43c.  call `g`(v1, v2) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07f442.  goto L07f3a8;
  #L07f444.  call `b`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.b:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f44a.  goto L07f3a8;
  #L07f44c.  call `a`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.a:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f452.  goto L07f3a8;
  #L07f454.  call `c`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.c:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f45a.  goto L07f3a8;
  #L07f45c.  call `d`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.d:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f462.  goto L07f3a8;
  #L07f464.  call `e`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.e:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f46a.  goto L07f3a8;
  #L07f46c.  call `f`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.f:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f472.  goto L07f3a8;
  #L07f474.  call `g`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.g:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f47a.  goto L07f3a8;
  #L07f47c.  call `h`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.h:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f482.  goto L07f3a8;
  #L07f484.  call `i`(v7, v9, v2, v1, v4) @signature `La/a/e/h;.i:(La/a/e/h$b;IBI)V` @kind direct;
  #L07f48a.  goto L07f3a8;
  #L07f48c.  switch v3
                  | 0 => goto L07f444
                  | 1 => goto L07f44c
                  | 2 => goto L07f454
                  | 3 => goto L07f45c
                  | 4 => goto L07f464
                  | 5 => goto L07f46c
                  | 6 => goto L07f474
                  | 7 => goto L07f47c
                  | 8 => goto L07f484
                  | else => goto L07f436;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07f3a4;
}
procedure `void` `close`(`a.a.e.h` v1 @kind this) @signature `La/a/e/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07f4d8.  v0:= v1.`a.a.e.h.c` @type ^`b.e` @kind object;
  #L07f4dc.  call `close`(v0) @signature `Lb/e;.close:()V` @kind interface;
  #L07f4e2.  return @kind void;
}

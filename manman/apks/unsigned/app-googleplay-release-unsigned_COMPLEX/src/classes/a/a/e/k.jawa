record `a.a.e.k` @kind class @AccessFlag  {
  `a.a.e.k$a` `a.a.e.k.d` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@a.a.e.k.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@a.a.e.k.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `a.a.e.k` `@@a.a.e.k.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/e/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L08143c.  v1:= 256I;
  #L081440.  v0:= new `int`[v1];
  #L081444.  goto L08146c;
  #L08144a.  `@@a.a.e.k.a` @type ^`int`[] := v0 @kind object;
  #L08144e.  v0:= new `byte`[v1];
  #L081452.  goto L081874;
  #L081458.  `@@a.a.e.k.b` @type ^`byte`[] := v0 @kind object;
  #L08145c.  v0:= new `a.a.e.k`;
  #L081460.  call `<init>`(v0) @signature `La/a/e/k;.<init>:()V` @kind direct;
  #L081466.  `@@a.a.e.k.c` @type ^`a.a.e.k` := v0 @kind object;
  #L08146a.  return @kind void;
  #L08146c.  v0:= (8184I, 8388568I, 268435426I, 268435427I, 268435428I, 268435429I, 268435430I, 268435431I, 268435432I, 16777194I, 1073741820I, 268435433I, 268435434I, 1073741821I, 268435435I, 268435436I, 268435437I, 268435438I, 268435439I, 268435440I, 268435441I, 268435442I, 1073741822I, 268435443I, 268435444I, 268435445I, 268435446I, 268435447I, 268435448I, 268435449I, 268435450I, 268435451I, 20I, 1016I, 1017I, 4090I, 8185I, 21I, 248I, 2042I, 1018I, 1019I, 249I, 2043I, 250I, 22I, 23I, 24I, 0I, 1I, 2I, 25I, 26I, 27I, 28I, 29I, 30I, 31I, 92I, 251I, 32764I, 32I, 4091I, 1020I, 8186I, 33I, 93I, 94I, 95I, 96I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 252I, 115I, 253I, 8187I, 524272I, 8188I, 16380I, 34I, 32765I, 3I, 35I, 4I, 36I, 5I, 37I, 38I, 39I, 6I, 116I, 117I, 40I, 41I, 42I, 7I, 43I, 118I, 44I, 8I, 9I, 45I, 119I, 120I, 121I, 122I, 123I, 32766I, 2044I, 16381I, 8189I, 268435452I, 1048550I, 4194258I, 1048551I, 1048552I, 4194259I, 4194260I, 4194261I, 8388569I, 4194262I, 8388570I, 8388571I, 8388572I, 8388573I, 8388574I, 16777195I, 8388575I, 16777196I, 16777197I, 4194263I, 8388576I, 16777198I, 8388577I, 8388578I, 8388579I, 8388580I, 2097116I, 4194264I, 8388581I, 4194265I, 8388582I, 8388583I, 16777199I, 4194266I, 2097117I, 1048553I, 4194267I, 4194268I, 8388584I, 8388585I, 2097118I, 8388586I, 4194269I, 4194270I, 16777200I, 2097119I, 4194271I, 8388587I, 8388588I, 2097120I, 2097121I, 4194272I, 2097122I, 8388589I, 4194273I, 8388590I, 8388591I, 1048554I, 4194274I, 4194275I, 4194276I, 8388592I, 4194277I, 4194278I, 8388593I, 67108832I, 67108833I, 1048555I, 524273I, 4194279I, 8388594I, 4194280I, 33554412I, 67108834I, 67108835I, 67108836I, 134217694I, 134217695I, 67108837I, 16777201I, 33554413I, 524274I, 2097123I, 67108838I, 134217696I, 134217697I, 67108839I, 134217698I, 16777202I, 2097124I, 2097125I, 67108840I, 67108841I, 268435453I, 134217699I, 134217700I, 134217701I, 1048556I, 16777203I, 1048557I, 2097126I, 4194281I, 2097127I, 2097128I, 8388595I, 4194282I, 4194283I, 33554414I, 33554415I, 16777204I, 16777205I, 67108842I, 8388596I, 67108843I, 134217702I, 67108844I, 67108845I, 134217703I, 134217704I, 134217705I, 134217706I, 134217707I, 268435454I, 134217708I, 134217709I, 134217710I, 134217711I, 134217712I, 67108846I) @kind object;
  #L081873.  goto L08144a;
  #L081874.  v0:= (13I, 23I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 24I, 30I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 6I, 10I, 10I, 12I, 13I, 6I, 8I, 11I, 10I, 10I, 8I, 11I, 8I, 6I, 6I, 6I, 5I, 5I, 5I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 7I, 8I, 15I, 6I, 12I, 10I, 13I, 6I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 8I, 7I, 8I, 13I, 19I, 13I, 14I, 6I, 15I, 5I, 6I, 5I, 6I, 5I, 6I, 6I, 6I, 5I, 7I, 7I, 6I, 6I, 6I, 5I, 6I, 7I, 6I, 5I, 5I, 6I, 7I, 7I, 7I, 7I, 7I, 15I, 11I, 14I, 13I, 28I, 20I, 22I, 20I, 20I, 22I, 22I, 22I, 23I, 22I, 23I, 23I, 23I, 23I, 23I, 24I, 23I, 24I, 24I, 22I, 23I, 24I, 23I, 23I, 23I, 23I, 21I, 22I, 23I, 22I, 23I, 23I, 24I, 22I, 21I, 20I, 22I, 22I, 23I, 23I, 21I, 23I, 22I, 22I, 24I, 21I, 22I, 23I, 23I, 21I, 21I, 22I, 21I, 23I, 22I, 23I, 23I, 20I, 22I, 22I, 22I, 23I, 22I, 22I, 23I, 26I, 26I, 20I, 19I, 22I, 23I, 22I, 25I, 26I, 26I, 26I, 27I, 27I, 26I, 24I, 25I, 19I, 21I, 26I, 27I, 27I, 26I, 27I, 24I, 21I, 21I, 26I, 26I, 28I, 27I, 27I, 27I, 20I, 24I, 20I, 21I, 22I, 21I, 21I, 23I, 22I, 22I, 25I, 25I, 24I, 24I, 26I, 23I, 26I, 27I, 26I, 26I, 27I, 27I, 27I, 27I, 27I, 28I, 27I, 27I, 27I, 27I, 27I, 26I) @kind object;
  #L08197b.  goto L081458;
}
procedure `void` `<init>`(`a.a.e.k` v1 @kind this) @signature `La/a/e/k;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L08198c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L081992.  v0:= new `a.a.e.k$a`;
  #L081996.  call `<init>`(v0) @signature `La/a/e/k$a;.<init>:()V` @kind direct;
  #L08199c.  v1.`a.a.e.k.d` @type ^`a.a.e.k$a` := v0 @kind object;
  #L0819a0.  call `b`(v1) @signature `La/a/e/k;.b:()V` @kind direct;
  #L0819a6.  return @kind void;
}
procedure `a.a.e.k` `a`() @signature `La/a/e/k;.a:()La/a/e/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L0819b8.  v0:= `@@a.a.e.k.c` @type ^`a.a.e.k` @kind object;
  #L0819bc.  return v0 @kind object;
}
procedure `void` `a`(`a.a.e.k` v6 @kind this, `int` v7 , `int` v8 , `byte` v9 ) @signature `La/a/e/k;.a:(IIB)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L0819d0.  v3:= new `a.a.e.k$a`;
  #L0819d4.  call `<init>`(v3, v7, v9) @signature `La/a/e/k$a;.<init>:(II)V` @kind direct;
  #L0819da.  v0:= v6.`a.a.e.k.d` @type ^`a.a.e.k$a` @kind object;
  #L0819de.  v2:= v0 @kind object;
  #L0819e0.  v0:= 8I;
  #L0819e4.  if v9 <= v0 then goto L081a38;
  #L0819e8.  v0:= v9 + -8;
  #L0819ec.  v9:= (`byte`) v0 @kind i2b;
  #L0819ee.  v0:= v8 ^>> v9 @kind int;
  #L0819f2.  v0:= v0 ^& 255;
  #L0819f6.  v1:= v2.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L0819fa.  if v1 != 0 then goto L081a0e;
  #L0819fe.  v0:= new `java.lang.IllegalStateException`;
  #L081a02.  v1:= "invalid dictionary: prefix not unique" @kind object;
  #L081a06.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L081a0c.  throw v0;
  #L081a0e.  v1:= v2.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L081a12.  v1:= v1[v0] @kind object;
  #L081a16.  if v1 != 0 then goto L081a2c;
  #L081a1a.  v1:= v2.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L081a1e.  v4:= new `a.a.e.k$a`;
  #L081a22.  call `<init>`(v4) @signature `La/a/e/k$a;.<init>:()V` @kind direct;
  #L081a28.  v1[v0]:= v4 @kind object;
  #L081a2c.  v1:= v2.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L081a30.  v0:= v1[v0] @kind object;
  #L081a34.  v2:= v0 @kind object;
  #L081a36.  goto L0819e0;
  #L081a38.  v0:= v9 - 8;
  #L081a3c.  v1:= v8 ^< v0 @kind int;
  #L081a40.  v1:= v1 ^& 255;
  #L081a44.  v4:= 1I;
  #L081a46.  v4:= v4 ^< v0 @kind int;
  #L081a48.  v0:= v1;
  #L081a4a.  v5:= v1 + v4 @kind int;
  #L081a4e.  if v0 >= v5 then goto L081a60;
  #L081a52.  v5:= v2.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L081a56.  v5[v0]:= v3 @kind object;
  #L081a5a.  v0:= v0 + 1;
  #L081a5e.  goto L081a4a;
  #L081a60.  return @kind void;
}
procedure `void` `b`(`a.a.e.k` v3 @kind this) @signature `La/a/e/k;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L081a74.  v0:= 0I;
  #L081a76.  v1:= `@@a.a.e.k.b` @type ^`byte`[] @kind object;
  #L081a7a.  v1:= length @variable v1;
  #L081a7c.  if v0 >= v1 then goto L081a9c;
  #L081a80.  v1:= `@@a.a.e.k.a` @type ^`int`[] @kind object;
  #L081a84.  v1:= v1[v0];
  #L081a88.  v2:= `@@a.a.e.k.b` @type ^`byte`[] @kind object;
  #L081a8c.  v2:= v2[v0] @kind byte;
  #L081a90.  call `a`(v3, v0, v1, v2) @signature `La/a/e/k;.a:(IIB)V` @kind direct;
  #L081a96.  v0:= v0 + 1;
  #L081a9a.  goto L081a76;
  #L081a9c.  return @kind void;
}
procedure `int` `a`(`a.a.e.k` v6 @kind this, `b.f` v7 @kind object) @signature `La/a/e/k;.a:(Lb/f;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L081ab0.  v2:= 0L;
  #L081ab4.  v0:= 0I;
  #L081ab6.  call temp:= `g`(v7) @signature `Lb/f;.g:()I` @kind virtual;
  #L081abc.  v1:= temp;
  #L081abe.  if v0 >= v1 then goto L081ae0;
  #L081ac2.  call temp:= `a`(v7, v0) @signature `Lb/f;.a:(I)B` @kind virtual;
  #L081ac8.  v1:= temp;
  #L081aca.  v1:= v1 ^& 255;
  #L081ace.  v4:= `@@a.a.e.k.b` @type ^`byte`[] @kind object;
  #L081ad2.  v1:= v4[v1] @kind byte;
  #L081ad6.  v4:= (`long`) v1 @kind i2l;
  #L081ad8.  v2:= v2 + v4 @kind long;
  #L081ada.  v0:= v0 + 1;
  #L081ade.  goto L081ab6;
  #L081ae0.  v0:= 7L;
  #L081ae4.  v0:= v0 + v2 @kind long;
  #L081ae6.  v2:= 3I;
  #L081ae8.  v0:= v0 ^> v2 @kind long;
  #L081aea.  v0:= (`int`) v0 @kind l2i;
  #L081aec.  return v0;
}
procedure `void` `a`(`a.a.e.k` v8 @kind this, `b.f` v9 @kind object, `b.d` v10 @kind object) @signature `La/a/e/k;.a:(Lb/f;Lb/d;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L081b00.  v0:= 0I;
  #L081b02.  v2:= 0L;
  #L081b06.  v1:= v0;
  #L081b08.  call temp:= `g`(v9) @signature `Lb/f;.g:()I` @kind virtual;
  #L081b0e.  v4:= temp;
  #L081b10.  if v0 >= v4 then goto L081b58;
  #L081b14.  call temp:= `a`(v9, v0) @signature `Lb/f;.a:(I)B` @kind virtual;
  #L081b1a.  v4:= temp;
  #L081b1c.  v4:= v4 ^& 255;
  #L081b20.  v5:= `@@a.a.e.k.a` @type ^`int`[] @kind object;
  #L081b24.  v5:= v5[v4];
  #L081b28.  v6:= `@@a.a.e.k.b` @type ^`byte`[] @kind object;
  #L081b2c.  v4:= v6[v4] @kind byte;
  #L081b30.  v2:= v2 ^< v4 @kind long;
  #L081b32.  v6:= (`long`) v5 @kind i2l;
  #L081b34.  v2:= v2 ^| v6 @kind long;
  #L081b36.  v1:= v1 + v4 @kind int;
  #L081b38.  v4:= 8I;
  #L081b3c.  if v1 < v4 then goto L081b52;
  #L081b40.  v1:= v1 + -8;
  #L081b44.  v4:= v2 ^> v1 @kind long;
  #L081b48.  v4:= (`int`) v4 @kind l2i;
  #L081b4a.  call temp:= `i`(v10, v4) @signature `Lb/d;.i:(I)Lb/d;` @kind interface;
  #L081b50.  goto L081b38;
  #L081b52.  v0:= v0 + 1;
  #L081b56.  goto L081b08;
  #L081b58.  if v1 <= 0 then goto L081b74;
  #L081b5c.  v0:= v1 - 8;
  #L081b60.  v2:= v2 ^< v0 @kind long;
  #L081b62.  v0:= 255I;
  #L081b66.  v0:= v0 ^>> v1 @kind int;
  #L081b68.  v0:= (`long`) v0 @kind i2l;
  #L081b6a.  v0:= v0 ^| v2 @kind long;
  #L081b6c.  v0:= (`int`) v0 @kind l2i;
  #L081b6e.  call temp:= `i`(v10, v0) @signature `Lb/d;.i:(I)Lb/d;` @kind interface;
  #L081b74.  return @kind void;
}
procedure `byte`[] `a`(`a.a.e.k` v6 @kind this, `byte`[] v7 @kind object) @signature `La/a/e/k;.a:([B)[B` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L081b88.  v0:= 0I;
  #L081b8a.  v4:= new `java.io.ByteArrayOutputStream`;
  #L081b8e.  call `<init>`(v4) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L081b94.  v1:= v6.`a.a.e.k.d` @type ^`a.a.e.k$a` @kind object;
  #L081b98.  v2:= v0;
  #L081b9a.  v3:= v1 @kind object;
  #L081b9c.  v1:= v0;
  #L081b9e.  v5:= length @variable v7;
  #L081ba0.  if v0 >= v5 then goto L081c10;
  #L081ba4.  v5:= v7[v0] @kind byte;
  #L081ba8.  v5:= v5 ^& 255;
  #L081bac.  v2:= v2 ^< 8;
  #L081bb0.  v2:= v2 ^| v5 @kind int;
  #L081bb2.  v1:= v1 + 8;
  #L081bb6.  v5:= 8I;
  #L081bba.  if v1 < v5 then goto L081bf6;
  #L081bbe.  v5:= v1 + -8;
  #L081bc2.  v5:= v2 ^>> v5 @kind int;
  #L081bc6.  v5:= v5 ^& 255;
  #L081bca.  v3:= v3.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L081bce.  v3:= v3[v5] @kind object;
  #L081bd2.  v5:= v3.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L081bd6.  if v5 != 0 then goto L081bf0;
  #L081bda.  v5:= v3.`a.a.e.k$a.b` @type ^`int`;
  #L081bde.  call `write`(v4, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L081be4.  v3:= v3.`a.a.e.k$a.c` @type ^`int`;
  #L081be8.  v1:= v1 - v3 @kind int;
  #L081bea.  v3:= v6.`a.a.e.k.d` @type ^`a.a.e.k$a` @kind object;
  #L081bee.  goto L081bb6;
  #L081bf0.  v1:= v1 + -8;
  #L081bf4.  goto L081bb6;
  #L081bf6.  v0:= v0 + 1;
  #L081bfa.  goto L081b9e;
  #L081bfc.  v3:= v0.`a.a.e.k$a.b` @type ^`int`;
  #L081c00.  call `write`(v4, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L081c06.  v0:= v0.`a.a.e.k$a.c` @type ^`int`;
  #L081c0a.  v1:= v1 - v0 @kind int;
  #L081c0c.  v3:= v6.`a.a.e.k.d` @type ^`a.a.e.k$a` @kind object;
  #L081c10.  if v1 <= 0 then goto L081c38;
  #L081c14.  v0:= v1 - 8;
  #L081c18.  v0:= v2 ^< v0 @kind int;
  #L081c1c.  v0:= v0 ^& 255;
  #L081c20.  v3:= v3.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L081c24.  v0:= v3[v0] @kind object;
  #L081c28.  v3:= v0.`a.a.e.k$a.a` @type ^`a.a.e.k$a`[] @kind object;
  #L081c2c.  if v3 != 0 then goto L081c38;
  #L081c30.  v3:= v0.`a.a.e.k$a.c` @type ^`int`;
  #L081c34.  if v3 <= v1 then goto L081bfc;
  #L081c38.  call temp:= `toByteArray`(v4) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L081c3e.  v0:= temp @kind object;
  #L081c40.  return v0 @kind object;
}

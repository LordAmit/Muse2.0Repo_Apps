record `a.a.e.f$a` @kind class @AccessFlag  extends `b.g` @kind class {
  `a.a.e.f` `a.a.e.f$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`a.a.e.f$a` v0 @kind this, `a.a.e.f` v1 @kind object, `b.r` v2 @kind object) @signature `La/a/e/f$a;.<init>:(La/a/e/f;Lb/r;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L07cc0c.  v0.`a.a.e.f$a.a` @type ^`a.a.e.f` := v1 @kind object;
  #L07cc10.  call `<init>`(v0, v2) @signature `Lb/g;.<init>:(Lb/r;)V` @kind direct;
  #L07cc16.  return @kind void;
}
procedure `void` `close`(`a.a.e.f$a` v3 @kind this) @signature `La/a/e/f$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L07cc28.  v0:= v3.`a.a.e.f$a.a` @type ^`a.a.e.f` @kind object;
  #L07cc2c.  v0:= v0.`a.a.e.f.a` @type ^`a.a.b.g` @kind object;
  #L07cc30.  v1:= 0I;
  #L07cc32.  v2:= v3.`a.a.e.f$a.a` @type ^`a.a.e.f` @kind object;
  #L07cc36.  call `a`(v0, v1, v2) @signature `La/a/b/g;.a:(ZLa/a/c/c;)V` @kind virtual;
  #L07cc3c.  call `close`(v3) @signature `Lb/g;.close:()V` @kind super;
  #L07cc42.  return @kind void;
}

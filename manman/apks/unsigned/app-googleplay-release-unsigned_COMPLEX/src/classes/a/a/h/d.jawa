record `a.a.h.d` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `a.a.h.d` `@@a.a.h.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/a/h/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L084244.  v0:= new `a.a.h.d`;
  #L084248.  call `<init>`(v0) @signature `La/a/h/d;.<init>:()V` @kind direct;
  #L08424e.  `@@a.a.h.d.a` @type ^`a.a.h.d` := v0 @kind object;
  #L084252.  return @kind void;
}
procedure `void` `<init>`(`a.a.h.d` v0 @kind this) @signature `La/a/h/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L084264.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08426a.  return @kind void;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v5 @kind object) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08427c.  v0:= 7I;
  #L08427e.  call temp:= `a`(v5, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L084284.  v0:= temp @kind object;
  #L084286.  v1:= 2I;
  #L084288.  call temp:= `a`(v5, v1) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L08428e.  v1:= temp @kind object;
  #L084290.  v2:= new `java.util.ArrayList`;
  #L084294.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L08429a.  v3:= temp;
  #L08429c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L0842a2.  v4:= temp;
  #L0842a4.  v3:= v3 + v4 @kind int;
  #L0842a6.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L0842ac.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L0842b2.  call temp:= `addAll`(v2, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L0842b8.  return v2 @kind object;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v5 @kind object, `int` v6 ) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0842cc.  v2:= new `java.util.ArrayList`;
  #L0842d0.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #Try_start0.  
  #L0842d6.  call temp:= `getSubjectAlternativeNames`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L0842dc.  v0:= temp @kind object;
  #L0842de.  if v0 != 0 then goto L0842ec;
  #L0842e2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L0842e8.  v0:= temp @kind object;
  #L0842ea.  return v0 @kind object;
  #L0842ec.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L0842f2.  v3:= temp @kind object;
  #L0842f4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L0842fa.  v0:= temp;
  #L0842fc.  if v0 == 0 then goto L084362;
  #L084300.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L084306.  v0:= temp @kind object;
  #L084308.  v0:= (`java.util.List`) v0 @kind object;
  #L08430c.  if v0 == 0 then goto L0842f4;
  #L084310.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L084316.  v1:= temp;
  #L084318.  v4:= 2I;
  #L08431a.  if v1 < v4 then goto L0842f4;
  #L08431e.  v1:= 0I;
  #L084320.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L084326.  v1:= temp @kind object;
  #L084328.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L08432c.  if v1 == 0 then goto L0842f4;
  #L084330.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L084336.  v1:= temp;
  #L084338.  if v1 != v6 then goto L0842f4;
  #L08433c.  v1:= 1I;
  #L08433e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L084344.  v0:= temp @kind object;
  #L084346.  v0:= (`java.lang.String`) v0 @kind object;
  #L08434a.  if v0 == 0 then goto L0842f4;
  #L08434e.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #Try_end0.  
  #L084354.  goto L0842f4;
  #L084356.  v0:= Exception @type ^`java.security.cert.CertificateParsingException` @kind object;
  #L084358.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L08435e.  v0:= temp @kind object;
  #L084360.  goto L0842ea;
  #L084362.  v0:= v2 @kind object;
  #L084364.  goto L0842ea;
  catch `java.security.cert.CertificateParsingException` @[Try_start0..Try_end0] goto L084356;
}
procedure `boolean` `a`(`a.a.h.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L084388.  v6:= -1I;
  #L08438a.  v5:= 46I;
  #L08438e.  v1:= 1I;
  #L084390.  v0:= 0I;
  #L084392.  if v8 == 0 then goto L0843c2;
  #L084396.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08439c.  v2:= temp;
  #L08439e.  if v2 == 0 then goto L0843c2;
  #L0843a2.  v2:= "." @kind object;
  #L0843a6.  call temp:= `startsWith`(v8, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0843ac.  v2:= temp;
  #L0843ae.  if v2 != 0 then goto L0843c2;
  #L0843b2.  v2:= ".." @kind object;
  #L0843b6.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0843bc.  v2:= temp;
  #L0843be.  if v2 == 0 then goto L0843c4;
  #L0843c2.  return v0;
  #L0843c4.  if v9 == 0 then goto L0843c2;
  #L0843c8.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0843ce.  v2:= temp;
  #L0843d0.  if v2 == 0 then goto L0843c2;
  #L0843d4.  v2:= "." @kind object;
  #L0843d8.  call temp:= `startsWith`(v9, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0843de.  v2:= temp;
  #L0843e0.  if v2 != 0 then goto L0843c2;
  #L0843e4.  v2:= ".." @kind object;
  #L0843e8.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0843ee.  v2:= temp;
  #L0843f0.  if v2 != 0 then goto L0843c2;
  #L0843f4.  v2:= "." @kind object;
  #L0843f8.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0843fe.  v2:= temp;
  #L084400.  if v2 != 0 then goto L084426;
  #L084404.  v2:= new `java.lang.StringBuilder`;
  #L084408.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08440e.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084414.  v2:= temp @kind object;
  #L084416.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08441c.  v2:= temp @kind object;
  #L08441e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L084424.  v8:= temp @kind object;
  #L084426.  v2:= "." @kind object;
  #L08442a.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L084430.  v2:= temp;
  #L084432.  if v2 != 0 then goto L084458;
  #L084436.  v2:= new `java.lang.StringBuilder`;
  #L08443a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L084440.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L084446.  v2:= temp @kind object;
  #L084448.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L08444e.  v2:= temp @kind object;
  #L084450.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L084456.  v9:= temp @kind object;
  #L084458.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L08445c.  call temp:= `toLowerCase`(v9, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L084462.  v2:= temp @kind object;
  #L084464.  v3:= "*" @kind object;
  #L084468.  call temp:= `contains`(v2, v3) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L08446e.  v3:= temp;
  #L084470.  if v3 != 0 then goto L08447e;
  #L084474.  call temp:= `equals`(v8, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08447a.  v0:= temp;
  #L08447c.  goto L0843c2;
  #L08447e.  v3:= "*." @kind object;
  #L084482.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L084488.  v3:= temp;
  #L08448a.  if v3 == 0 then goto L0843c2;
  #L08448e.  v3:= 42I;
  #L084492.  call temp:= `indexOf`(v2, v3, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L084498.  v3:= temp;
  #L08449a.  if v3 != v6 then goto L0843c2;
  #L08449e.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0844a4.  v3:= temp;
  #L0844a6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0844ac.  v4:= temp;
  #L0844ae.  if v3 < v4 then goto L0843c2;
  #L0844b2.  v3:= "*." @kind object;
  #L0844b6.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0844bc.  v3:= temp;
  #L0844be.  if v3 != 0 then goto L0843c2;
  #L0844c2.  call temp:= `substring`(v2, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0844c8.  v2:= temp @kind object;
  #L0844ca.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0844d0.  v3:= temp;
  #L0844d2.  if v3 == 0 then goto L0843c2;
  #L0844d6.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0844dc.  v3:= temp;
  #L0844de.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0844e4.  v2:= temp;
  #L0844e6.  v2:= v3 - v2 @kind int;
  #L0844ea.  if v2 <= 0 then goto L0844fe;
  #L0844ee.  v2:= v2 + -1;
  #L0844f2.  call temp:= `lastIndexOf`(v8, v5, v2) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L0844f8.  v2:= temp;
  #L0844fa.  if v2 != v6 then goto L0843c2;
  #L0844fe.  v0:= v1;
  #L084500.  goto L0843c2;
}
procedure `boolean` `b`(`a.a.h.d` v5 @kind this, `java.lang.String` v6 @kind object, `java.security.cert.X509Certificate` v7 @kind object) @signature `La/a/h/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L084514.  v1:= 0I;
  #L084516.  v0:= 7I;
  #L084518.  call temp:= `a`(v7, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L08451e.  v3:= temp @kind object;
  #L084520.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L084526.  v4:= temp;
  #L084528.  v2:= v1;
  #L08452a.  if v2 >= v4 then goto L084552;
  #L08452e.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L084534.  v0:= temp @kind object;
  #L084536.  v0:= (`java.lang.String`) v0 @kind object;
  #L08453a.  call temp:= `equalsIgnoreCase`(v6, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L084540.  v0:= temp;
  #L084542.  if v0 == 0 then goto L08454a;
  #L084546.  v0:= 1I;
  #L084548.  return v0;
  #L08454a.  v0:= v2 + 1;
  #L08454e.  v2:= v0;
  #L084550.  goto L08452a;
  #L084552.  v0:= v1;
  #L084554.  goto L084548;
}
procedure `boolean` `c`(`a.a.h.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.security.cert.X509Certificate` v9 @kind object) @signature `La/a/h/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L084568.  v1:= 1I;
  #L08456a.  v2:= 0I;
  #L08456c.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L084570.  call temp:= `toLowerCase`(v8, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L084576.  v4:= temp @kind object;
  #L084578.  v0:= 2I;
  #L08457a.  call temp:= `a`(v9, v0) @signature `La/a/h/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L084580.  v5:= temp @kind object;
  #L084582.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L084588.  v6:= temp;
  #L08458a.  v3:= v2;
  #L08458c.  v0:= v2;
  #L08458e.  if v3 >= v6 then goto L0845b8;
  #L084592.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L084598.  v0:= temp @kind object;
  #L08459a.  v0:= (`java.lang.String`) v0 @kind object;
  #L08459e.  call temp:= `a`(v7, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L0845a4.  v0:= temp;
  #L0845a6.  if v0 == 0 then goto L0845ae;
  #L0845aa.  v0:= v1;
  #L0845ac.  return v0;
  #L0845ae.  v0:= v3 + 1;
  #L0845b2.  v3:= v0;
  #L0845b4.  v0:= v1;
  #L0845b6.  goto L08458e;
  #L0845b8.  if v0 != 0 then goto L0845e8;
  #L0845bc.  call temp:= `getSubjectX500Principal`(v9) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L0845c2.  v0:= temp @kind object;
  #L0845c4.  v1:= new `a.a.h.c`;
  #L0845c8.  call `<init>`(v1, v0) @signature `La/a/h/c;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @kind direct;
  #L0845ce.  v0:= "cn" @kind object;
  #L0845d2.  call temp:= `a`(v1, v0) @signature `La/a/h/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L0845d8.  v0:= temp @kind object;
  #L0845da.  if v0 == 0 then goto L0845e8;
  #L0845de.  call temp:= `a`(v7, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L0845e4.  v0:= temp;
  #L0845e6.  goto L0845ac;
  #L0845e8.  v0:= v2;
  #L0845ea.  goto L0845ac;
}
procedure `boolean` `a`(`a.a.h.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L0845fc.  call temp:= `c`(v2) @signature `La/a/c;.c:(Ljava/lang/String;)Z` @kind static;
  #L084602.  v0:= temp;
  #L084604.  if v0 == 0 then goto L084612;
  #L084608.  call temp:= `b`(v1, v2, v3) @signature `La/a/h/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L08460e.  v0:= temp;
  #L084610.  return v0;
  #L084612.  call temp:= `c`(v1, v2, v3) @signature `La/a/h/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L084618.  v0:= temp;
  #L08461a.  goto L084610;
}
procedure `boolean` `verify`(`a.a.h.d` v3 @kind this, `java.lang.String` v4 @kind object, `javax.net.ssl.SSLSession` v5 @kind object) @signature `La/a/h/d;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L08462c.  v1:= 0I;
  #Try_start0.  
  #L08462e.  call temp:= `getPeerCertificates`(v5) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L084634.  v0:= temp @kind object;
  #L084636.  v2:= 0I;
  #L084638.  v0:= v0[v2] @kind object;
  #L08463c.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L084640.  call temp:= `a`(v3, v4, v0) @signature `La/a/h/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #Try_end0.  
  #L084646.  v0:= temp;
  #L084648.  return v0;
  #L08464a.  v0:= Exception @type ^`javax.net.ssl.SSLException` @kind object;
  #L08464c.  v0:= v1;
  #L08464e.  goto L084648;
  catch `javax.net.ssl.SSLException` @[Try_start0..Try_end0] goto L08464a;
}

record `a.a.e.h$a` @kind class @AccessFlag FINAL extends `b.r` @kind interface {
  `int` `a.a.e.h$a.a` @AccessFlag ;
  `byte` `a.a.e.h$a.b` @AccessFlag ;
  `int` `a.a.e.h$a.c` @AccessFlag ;
  `int` `a.a.e.h$a.d` @AccessFlag ;
  `short` `a.a.e.h$a.e` @AccessFlag ;
  `b.e` `a.a.e.h$a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.e.h$a` v0 @kind this, `b.e` v1 @kind object) @signature `La/a/e/h$a;.<init>:(Lb/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L07e9fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L07ea02.  v0.`a.a.e.h$a.f` @type ^`b.e` := v1 @kind object;
  #L07ea06.  return @kind void;
}
procedure `void` `b`(`a.a.e.h$a` v8 @kind this) @signature `La/a/e/h$a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L07ea18.  v7:= 1I;
  #L07ea1a.  v6:= 0I;
  #L07ea1c.  v0:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L07ea20.  v1:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07ea24.  call temp:= `a`(v1) @signature `La/a/e/h;.a:(Lb/e;)I` @kind static;
  #L07ea2a.  v1:= temp;
  #L07ea2c.  v8.`a.a.e.h$a.d` @type ^`int` := v1;
  #L07ea30.  v8.`a.a.e.h$a.a` @type ^`int` := v1;
  #L07ea34.  v1:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07ea38.  call temp:= `h`(v1) @signature `Lb/e;.h:()B` @kind interface;
  #L07ea3e.  v1:= temp;
  #L07ea40.  v1:= v1 ^& 255;
  #L07ea44.  v1:= (`byte`) v1 @kind i2b;
  #L07ea46.  v2:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07ea4a.  call temp:= `h`(v2) @signature `Lb/e;.h:()B` @kind interface;
  #L07ea50.  v2:= temp;
  #L07ea52.  v2:= v2 ^& 255;
  #L07ea56.  v2:= (`byte`) v2 @kind i2b;
  #L07ea58.  v8.`a.a.e.h$a.b` @type ^`byte` := v2 @kind byte;
  #L07ea5c.  v2:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07ea60.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L07ea64.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L07ea6a.  v2:= temp;
  #L07ea6c.  if v2 == 0 then goto L07ea8e;
  #L07ea70.  v2:= `@@a.a.e.h.a` @type ^`java.util.logging.Logger` @kind object;
  #L07ea74.  v3:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L07ea78.  v4:= v8.`a.a.e.h$a.a` @type ^`int`;
  #L07ea7c.  v5:= v8.`a.a.e.h$a.b` @type ^`byte` @kind byte;
  #L07ea80.  call temp:= `a`(v7, v3, v4, v1, v5) @signature `La/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L07ea86.  v3:= temp @kind object;
  #L07ea88.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L07ea8e.  v2:= v8.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07ea92.  call temp:= `j`(v2) @signature `Lb/e;.j:()I` @kind interface;
  #L07ea98.  v2:= temp;
  #L07ea9a.  v3:= 2147483647I;
  #L07eaa0.  v2:= v2 ^& v3 @kind int;
  #L07eaa2.  v8.`a.a.e.h$a.c` @type ^`int` := v2;
  #L07eaa6.  v2:= 9I;
  #L07eaaa.  if v1 == v2 then goto L07eacc;
  #L07eaae.  v0:= "%s != TYPE_CONTINUATION" @kind object;
  #L07eab2.  v2:= new `java.lang.Object`[v7];
  #L07eab6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L07eabc.  v1:= temp @kind object;
  #L07eabe.  v2[v6]:= v1 @kind object;
  #L07eac2.  call temp:= `b`(v0, v2) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07eac8.  v0:= temp @kind object;
  #L07eaca.  throw v0;
  #L07eacc.  v1:= v8.`a.a.e.h$a.c` @type ^`int`;
  #L07ead0.  if v1 == v0 then goto L07eae6;
  #L07ead4.  v0:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L07ead8.  v1:= new `java.lang.Object`[v6];
  #L07eadc.  call temp:= `b`(v0, v1) @signature `La/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L07eae2.  v0:= temp @kind object;
  #L07eae4.  throw v0;
  #L07eae6.  return @kind void;
}
procedure `long` `a`(`a.a.e.h$a` v6 @kind this, `b.c` v7 @kind object, `long` v8 ) @signature `La/a/e/h$a;.a:(Lb/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L07eaf8.  v0:= -1L;
  #L07eafc.  v2:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L07eb00.  if v2 != 0 then goto L07eb30;
  #L07eb04.  v2:= v6.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07eb08.  v3:= v6.`a.a.e.h$a.e` @type ^`short` @kind short;
  #L07eb0c.  v4:= (`long`) v3 @kind i2l;
  #L07eb0e.  call `g`(v2, v4) @signature `Lb/e;.g:(J)V` @kind interface;
  #L07eb14.  v2:= 0I;
  #L07eb16.  v6.`a.a.e.h$a.e` @type ^`short` := v2 @kind char;
  #L07eb1a.  v2:= v6.`a.a.e.h$a.b` @type ^`byte` @kind byte;
  #L07eb1e.  v2:= v2 ^& 4;
  #L07eb22.  if v2 == 0 then goto L07eb28;
  #L07eb26.  return v0 @kind wide;
  #L07eb28.  call `b`(v6) @signature `La/a/e/h$a;.b:()V` @kind direct;
  #L07eb2e.  goto L07eafc;
  #L07eb30.  v2:= v6.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07eb34.  v3:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L07eb38.  v4:= (`long`) v3 @kind i2l;
  #L07eb3a.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L07eb40.  v4:= temp @kind wide;
  #L07eb42.  call temp:= `a`(v2, v7, v4) @signature `Lb/e;.a:(Lb/c;J)J` @kind interface;
  #L07eb48.  v2:= temp @kind wide;
  #L07eb4a.  v4:= lcmp(v2, v0);
  #L07eb4e.  if v4 == 0 then goto L07eb26;
  #L07eb52.  v0:= v6.`a.a.e.h$a.d` @type ^`int`;
  #L07eb56.  v0:= (`long`) v0 @kind i2l;
  #L07eb58.  v0:= v0 - v2 @kind long;
  #L07eb5a.  v0:= (`int`) v0 @kind l2i;
  #L07eb5c.  v6.`a.a.e.h$a.d` @type ^`int` := v0;
  #L07eb60.  v0:= v2 @kind wide;
  #L07eb62.  goto L07eb26;
}
procedure `b.s` `a`(`a.a.e.h$a` v1 @kind this) @signature `La/a/e/h$a;.a:()Lb/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L07eb74.  v0:= v1.`a.a.e.h$a.f` @type ^`b.e` @kind object;
  #L07eb78.  call temp:= `a`(v0) @signature `Lb/e;.a:()Lb/s;` @kind interface;
  #L07eb7e.  v0:= temp @kind object;
  #L07eb80.  return v0 @kind object;
}
procedure `void` `close`(`a.a.e.h$a` v0 @kind this) @signature `La/a/e/h$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L07eb94.  return @kind void;
}

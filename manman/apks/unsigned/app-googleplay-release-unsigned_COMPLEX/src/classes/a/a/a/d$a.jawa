record `a.a.a.d$a` @kind class @AccessFlag PUBLIC_FINAL {
  `a.a.a.d$b` `a.a.a.d$a.a` @AccessFlag FINAL;
  `boolean`[] `a.a.a.d$a.b` @AccessFlag FINAL;
  `a.a.a.d` `a.a.a.d$a.c` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `a.a.a.d$a.d` @AccessFlag PRIVATE;
}
procedure `void` `a`(`a.a.a.d$a` v3 @kind this) @signature `La/a/a/d$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L075558.  v0:= v3.`a.a.a.d$a.a` @type ^`a.a.a.d$b` @kind object;
  #L07555c.  v0:= v0.`a.a.a.d$b.f` @type ^`a.a.a.d$a` @kind object;
  #L075560.  if v0 != v3 then goto L07559c;
  #L075564.  v0:= 0I;
  #L075566.  v1:= v3.`a.a.a.d$a.c` @type ^`a.a.a.d` @kind object;
  #L07556a.  v1:= v1.`a.a.a.d.c` @type ^`int`;
  #L07556e.  if v0 >= v1 then goto L075592;
  #Try_start0.  
  #L075572.  v1:= v3.`a.a.a.d$a.c` @type ^`a.a.a.d` @kind object;
  #L075576.  v1:= v1.`a.a.a.d.b` @type ^`a.a.f.a` @kind object;
  #L07557a.  v2:= v3.`a.a.a.d$a.a` @type ^`a.a.a.d$b` @kind object;
  #L07557e.  v2:= v2.`a.a.a.d$b.d` @type ^`java.io.File`[] @kind object;
  #L075582.  v2:= v2[v0] @kind object;
  #L075586.  call `a`(v1, v2) @signature `La/a/f/a;.a:(Ljava/io/File;)V` @kind interface;
  #Try_end0.  
  #L07558c.  v0:= v0 + 1;
  #L075590.  goto L075566;
  #L075592.  v0:= v3.`a.a.a.d$a.a` @type ^`a.a.a.d$b` @kind object;
  #L075596.  v1:= 0I;
  #L075598.  v0.`a.a.a.d$b.f` @type ^`a.a.a.d$a` := v1 @kind object;
  #L07559c.  return @kind void;
  #L07559e.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L0755a0.  goto L07558c;
  catch `java.io.IOException` @[Try_start0..Try_end0] goto L07559e;
}
procedure `void` `b`(`a.a.a.d$a` v3 @kind this) @signature `La/a/a/d$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L0755c4.  v1:= v3.`a.a.a.d$a.c` @type ^`a.a.a.d` @kind object;
  #L0755c8.  @monitorenter v1
  #Try_start0.  
  #L0755ca.  v0:= v3.`a.a.a.d$a.d` @type ^`boolean` @kind boolean;
  #L0755ce.  if v0 == 0 then goto L0755e4;
  #L0755d2.  v0:= new `java.lang.IllegalStateException`;
  #L0755d6.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L0755dc.  throw v0;
  #L0755de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L0755e0.  @monitorexit v1
  #Try_end0.  
  #L0755e2.  throw v0;
  #Try_start1.  
  #L0755e4.  v0:= v3.`a.a.a.d$a.a` @type ^`a.a.a.d$b` @kind object;
  #L0755e8.  v0:= v0.`a.a.a.d$b.f` @type ^`a.a.a.d$a` @kind object;
  #L0755ec.  if v0 != v3 then goto L0755fc;
  #L0755f0.  v0:= v3.`a.a.a.d$a.c` @type ^`a.a.a.d` @kind object;
  #L0755f4.  v2:= 0I;
  #L0755f6.  call `a`(v0, v3, v2) @signature `La/a/a/d;.a:(La/a/a/d$a;Z)V` @kind virtual;
  #L0755fc.  v0:= 1I;
  #L0755fe.  v3.`a.a.a.d$a.d` @type ^`boolean` := v0 @kind boolean;
  #L075602.  @monitorexit v1
  #Try_end1.  
  #L075604.  return @kind void;
  catch `java.lang.Throwable` @[Try_start0..Try_end0] goto L0755de;
  catch `java.lang.Throwable` @[Try_start1..Try_end1] goto L0755de;
}

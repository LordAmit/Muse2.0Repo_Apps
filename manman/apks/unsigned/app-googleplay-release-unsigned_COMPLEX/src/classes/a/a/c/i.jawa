record `a.a.c.i` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`a.r` v3 @kind object) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L078c60.  call temp:= `h`(v3) @signature `La/r;.h:()Ljava/lang/String;` @kind virtual;
  #L078c66.  v0:= temp @kind object;
  #L078c68.  call temp:= `j`(v3) @signature `La/r;.j:()Ljava/lang/String;` @kind virtual;
  #L078c6e.  v1:= temp @kind object;
  #L078c70.  if v1 == 0 then goto L078ca2;
  #L078c74.  v2:= new `java.lang.StringBuilder`;
  #L078c78.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L078c7e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078c84.  v0:= temp @kind object;
  #L078c86.  v2:= 63I;
  #L078c8a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L078c90.  v0:= temp @kind object;
  #L078c92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078c98.  v0:= temp @kind object;
  #L078c9a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L078ca0.  v0:= temp @kind object;
  #L078ca2.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.x` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `La/a/c/i;.a:(La/x;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L078cb4.  v0:= new `java.lang.StringBuilder`;
  #L078cb8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L078cbe.  call temp:= `b`(v2) @signature `La/x;.b:()Ljava/lang/String;` @kind virtual;
  #L078cc4.  v1:= temp @kind object;
  #L078cc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078ccc.  v1:= 32I;
  #L078cd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L078cd6.  call temp:= `b`(v2, v3) @signature `La/a/c/i;.b:(La/x;Ljava/net/Proxy$Type;)Z` @kind static;
  #L078cdc.  v1:= temp;
  #L078cde.  if v1 == 0 then goto L078d04;
  #L078ce2.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078ce8.  v1:= temp @kind object;
  #L078cea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078cf0.  v1:= " HTTP/1.1" @kind object;
  #L078cf4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078cfa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L078d00.  v0:= temp @kind object;
  #L078d02.  return v0 @kind object;
  #L078d04.  call temp:= `a`(v2) @signature `La/x;.a:()La/r;` @kind virtual;
  #L078d0a.  v1:= temp @kind object;
  #L078d0c.  call temp:= `a`(v1) @signature `La/a/c/i;.a:(La/r;)Ljava/lang/String;` @kind static;
  #L078d12.  v1:= temp @kind object;
  #L078d14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L078d1a.  goto L078cf0;
}
procedure `boolean` `b`(`a.x` v1 @kind object, `java.net.Proxy$Type` v2 @kind object) @signature `La/a/c/i;.b:(La/x;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L078d2c.  call temp:= `g`(v1) @signature `La/x;.g:()Z` @kind virtual;
  #L078d32.  v0:= temp;
  #L078d34.  if v0 != 0 then goto L078d44;
  #L078d38.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L078d3c.  if v2 != v0 then goto L078d44;
  #L078d40.  v0:= 1I;
  #L078d42.  return v0;
  #L078d44.  v0:= 0I;
  #L078d46.  goto L078d42;
}

record `a.a.g.c$a` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `boolean` `a.a.g.c$a.a` @AccessFlag ;
  `java.lang.String` `a.a.g.c$a.b` @AccessFlag ;
  `java.util.List` `a.a.g.c$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.a.g.c$a` v0 @kind this, `java.util.List` v1 @kind object) @signature `La/a/g/c$a;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L082c94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L082c9a.  v0.`a.a.g.c$a.c` @type ^`java.util.List` := v1 @kind object;
  #L082c9e.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`a.a.g.c$a` v6 @kind this, `java.lang.Object` v7 @kind object, `java.lang.reflect.Method` v8 @kind object, `java.lang.Object`[] v9 @kind object) @signature `La/a/g/c$a;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L082cb0.  v1:= 0I;
  #L082cb2.  v5:= 1I;
  #L082cb4.  v2:= 0I;
  #L082cb6.  call temp:= `getName`(v8) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L082cbc.  v0:= temp @kind object;
  #L082cbe.  call temp:= `getReturnType`(v8) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L082cc4.  v3:= temp @kind object;
  #L082cc6.  if v9 != 0 then goto L082cce;
  #L082cca.  v9:= `@@a.a.c.b` @type ^`java.lang.String`[] @kind object;
  #L082cce.  v4:= "supports" @kind object;
  #L082cd2.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082cd8.  v4:= temp;
  #L082cda.  if v4 == 0 then goto L082cf0;
  #L082cde.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L082ce2.  if v4 != v3 then goto L082cf0;
  #L082ce6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L082cec.  v0:= temp @kind object;
  #L082cee.  return v0 @kind object;
  #L082cf0.  v4:= "unsupported" @kind object;
  #L082cf4.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082cfa.  v4:= temp;
  #L082cfc.  if v4 == 0 then goto L082d10;
  #L082d00.  v4:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L082d04.  if v4 != v3 then goto L082d10;
  #L082d08.  v6.`a.a.g.c$a.a` @type ^`boolean` := v5 @kind boolean;
  #L082d0c.  v0:= v1 @kind object;
  #L082d0e.  goto L082cee;
  #L082d10.  v4:= "protocols" @kind object;
  #L082d14.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082d1a.  v4:= temp;
  #L082d1c.  if v4 == 0 then goto L082d2c;
  #L082d20.  v4:= length @variable v9;
  #L082d22.  if v4 != 0 then goto L082d2c;
  #L082d26.  v0:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L082d2a.  goto L082cee;
  #L082d2c.  v4:= "selectProtocol" @kind object;
  #L082d30.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082d36.  v4:= temp;
  #L082d38.  if v4 != 0 then goto L082d4c;
  #L082d3c.  v4:= "select" @kind object;
  #L082d40.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082d46.  v4:= temp;
  #L082d48.  if v4 == 0 then goto L082dc2;
  #L082d4c.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L082d50.  if v4 != v3 then goto L082dc2;
  #L082d54.  v3:= length @variable v9;
  #L082d56.  if v3 != v5 then goto L082dc2;
  #L082d5a.  v3:= v9[v2] @kind object;
  #L082d5e.  v3:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L082d62.  if v3 == 0 then goto L082dc2;
  #L082d66.  v0:= v9[v2] @kind object;
  #L082d6a.  v0:= (`java.util.List`) v0 @kind object;
  #L082d6e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L082d74.  v3:= temp;
  #L082d76.  v1:= v2;
  #L082d78.  if v1 >= v3 then goto L082dac;
  #L082d7c.  v4:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L082d80.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L082d86.  v5:= temp @kind object;
  #L082d88.  call temp:= `contains`(v4, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L082d8e.  v4:= temp;
  #L082d90.  if v4 == 0 then goto L082da6;
  #L082d94.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L082d9a.  v0:= temp @kind object;
  #L082d9c.  v0:= (`java.lang.String`) v0 @kind object;
  #L082da0.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L082da4.  goto L082cee;
  #L082da6.  v1:= v1 + 1;
  #L082daa.  goto L082d78;
  #L082dac.  v0:= v6.`a.a.g.c$a.c` @type ^`java.util.List` @kind object;
  #L082db0.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L082db6.  v0:= temp @kind object;
  #L082db8.  v0:= (`java.lang.String`) v0 @kind object;
  #L082dbc.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L082dc0.  goto L082cee;
  #L082dc2.  v3:= "protocolSelected" @kind object;
  #L082dc6.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082dcc.  v3:= temp;
  #L082dce.  if v3 != 0 then goto L082de2;
  #L082dd2.  v3:= "selected" @kind object;
  #L082dd6.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L082ddc.  v0:= temp;
  #L082dde.  if v0 == 0 then goto L082dfa;
  #L082de2.  v0:= length @variable v9;
  #L082de4.  if v0 != v5 then goto L082dfa;
  #L082de8.  v0:= v9[v2] @kind object;
  #L082dec.  v0:= (`java.lang.String`) v0 @kind object;
  #L082df0.  v6.`a.a.g.c$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L082df4.  v0:= v1 @kind object;
  #L082df6.  goto L082cee;
  #L082dfa.  call temp:= `invoke`(v8, v6, v9) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L082e00.  v0:= temp @kind object;
  #L082e02.  goto L082cee;
}

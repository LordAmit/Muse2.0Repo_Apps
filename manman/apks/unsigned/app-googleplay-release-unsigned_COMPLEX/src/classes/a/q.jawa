record `a.q` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `a.q.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`a.q` v2 @kind this, `a.q$a` v3 @kind object) @signature `La/q;.<init>:(La/q$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L088b10.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L088b16.  v0:= v3.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088b1a.  v1:= v3.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088b1e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L088b24.  v1:= temp;
  #L088b26.  v1:= new `java.lang.String`[v1];
  #L088b2a.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L088b30.  v0:= temp @kind object;
  #L088b32.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L088b36.  v2.`a.q.a` @type ^`java.lang.String`[] := v0 @kind object;
  #L088b3a.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L088b4c.  v0:= length @variable v2;
  #L088b4e.  v0:= v0 + -2;
  #L088b52.  if v0 < 0 then goto L088b76;
  #L088b56.  v1:= v2[v0] @kind object;
  #L088b5a.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L088b60.  v1:= temp;
  #L088b62.  if v1 == 0 then goto L088b70;
  #L088b66.  v0:= v0 + 1;
  #L088b6a.  v0:= v2[v0] @kind object;
  #L088b6e.  return v0 @kind object;
  #L088b70.  v0:= v0 + -2;
  #L088b74.  goto L088b52;
  #L088b76.  v0:= 0I;
  #L088b78.  goto L088b6e;
}
procedure `int` `a`(`a.q` v1 @kind this) @signature `La/q;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088b8c.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088b90.  v0:= length @variable v0;
  #L088b92.  v0:= v0 / 2;
  #L088b96.  return v0;
}
procedure `java.lang.String` `a`(`a.q` v2 @kind this, `int` v3 ) @signature `La/q;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L088ba8.  v0:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088bac.  v1:= v3 * 2;
  #L088bb0.  v0:= v0[v1] @kind object;
  #L088bb4.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`a.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `La/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088bc8.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088bcc.  call temp:= `a`(v0, v2) @signature `La/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L088bd2.  v0:= temp @kind object;
  #L088bd4.  return v0 @kind object;
}
procedure `a.q$a` `b`(`a.q` v3 @kind this) @signature `La/q;.b:()La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L088be8.  v0:= new `a.q$a`;
  #L088bec.  call `<init>`(v0) @signature `La/q$a;.<init>:()V` @kind direct;
  #L088bf2.  v1:= v0.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088bf6.  v2:= v3.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088bfa.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L088c00.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`a.q` v2 @kind this, `int` v3 ) @signature `La/q;.b:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L088c14.  v0:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088c18.  v1:= v3 * 2;
  #L088c1c.  v1:= v1 + 1;
  #L088c20.  v0:= v0[v1] @kind object;
  #L088c24.  return v0 @kind object;
}
procedure `java.util.List` `b`(`a.q` v5 @kind this, `java.lang.String` v6 @kind object) @signature `La/q;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L088c38.  v1:= 0I;
  #L088c3a.  v0:= 0I;
  #L088c3c.  call temp:= `a`(v5) @signature `La/q;.a:()I` @kind virtual;
  #L088c42.  v2:= temp;
  #L088c44.  v4:= v0;
  #L088c46.  v0:= v1 @kind object;
  #L088c48.  v1:= v4;
  #L088c4a.  if v1 >= v2 then goto L088c86;
  #L088c4e.  call temp:= `a`(v5, v1) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L088c54.  v3:= temp @kind object;
  #L088c56.  call temp:= `equalsIgnoreCase`(v6, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L088c5c.  v3:= temp;
  #L088c5e.  if v3 == 0 then goto L088c80;
  #L088c62.  if v0 != 0 then goto L088c72;
  #L088c66.  v0:= new `java.util.ArrayList`;
  #L088c6a.  v3:= 2I;
  #L088c6c.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L088c72.  call temp:= `b`(v5, v1) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L088c78.  v3:= temp @kind object;
  #L088c7a.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088c80.  v1:= v1 + 1;
  #L088c84.  goto L088c4a;
  #L088c86.  if v0 == 0 then goto L088c94;
  #L088c8a.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L088c90.  v0:= temp @kind object;
  #L088c92.  return v0 @kind object;
  #L088c94.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L088c9a.  v0:= temp @kind object;
  #L088c9c.  goto L088c92;
}
procedure `boolean` `equals`(`a.q` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `La/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L088cb0.  v0:= instanceof @variable v3 @type ^`a.q` @kind boolean;
  #L088cb4.  if v0 == 0 then goto L088cd4;
  #L088cb8.  v3:= (`a.q`) v3 @kind object;
  #L088cbc.  v0:= v3.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088cc0.  v1:= v2.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088cc4.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L088cca.  v0:= temp;
  #L088ccc.  if v0 == 0 then goto L088cd4;
  #L088cd0.  v0:= 1I;
  #L088cd2.  return v0;
  #L088cd4.  v0:= 0I;
  #L088cd6.  goto L088cd2;
}
procedure `int` `hashCode`(`a.q` v1 @kind this) @signature `La/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088ce8.  v0:= v1.`a.q.a` @type ^`java.lang.String`[] @kind object;
  #L088cec.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L088cf2.  v0:= temp;
  #L088cf4.  return v0;
}
procedure `java.lang.String` `toString`(`a.q` v5 @kind this) @signature `La/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L088d08.  v1:= new `java.lang.StringBuilder`;
  #L088d0c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L088d12.  v0:= 0I;
  #L088d14.  call temp:= `a`(v5) @signature `La/q;.a:()I` @kind virtual;
  #L088d1a.  v2:= temp;
  #L088d1c.  if v0 >= v2 then goto L088d5c;
  #L088d20.  call temp:= `a`(v5, v0) @signature `La/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L088d26.  v3:= temp @kind object;
  #L088d28.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088d2e.  v3:= temp @kind object;
  #L088d30.  v4:= ": " @kind object;
  #L088d34.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088d3a.  v3:= temp @kind object;
  #L088d3c.  call temp:= `b`(v5, v0) @signature `La/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L088d42.  v4:= temp @kind object;
  #L088d44.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088d4a.  v3:= temp @kind object;
  #L088d4c.  v4:= "\n" @kind object;
  #L088d50.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L088d56.  v0:= v0 + 1;
  #L088d5a.  goto L088d1c;
  #L088d5c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L088d62.  v0:= temp @kind object;
  #L088d64.  return v0 @kind object;
}

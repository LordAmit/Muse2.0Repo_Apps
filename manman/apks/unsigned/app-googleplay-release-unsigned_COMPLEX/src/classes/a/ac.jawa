record `a.ac` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `a.ac.f` @AccessFlag FINAL;
}
global `a.ac` `@@a.ac.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac` `@@a.ac.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `a.ac`[] `@@a.ac.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `La/ac;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L085038.  v7:= 4I;
  #L08503a.  v6:= 3I;
  #L08503c.  v5:= 2I;
  #L08503e.  v4:= 1I;
  #L085040.  v3:= 0I;
  #L085042.  v0:= new `a.ac`;
  #L085046.  v1:= "TLS_1_3" @kind object;
  #L08504a.  v2:= "TLSv1.3" @kind object;
  #L08504e.  call `<init>`(v0, v1, v3, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L085054.  `@@a.ac.a` @type ^`a.ac` := v0 @kind object;
  #L085058.  v0:= new `a.ac`;
  #L08505c.  v1:= "TLS_1_2" @kind object;
  #L085060.  v2:= "TLSv1.2" @kind object;
  #L085064.  call `<init>`(v0, v1, v4, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L08506a.  `@@a.ac.b` @type ^`a.ac` := v0 @kind object;
  #L08506e.  v0:= new `a.ac`;
  #L085072.  v1:= "TLS_1_1" @kind object;
  #L085076.  v2:= "TLSv1.1" @kind object;
  #L08507a.  call `<init>`(v0, v1, v5, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L085080.  `@@a.ac.c` @type ^`a.ac` := v0 @kind object;
  #L085084.  v0:= new `a.ac`;
  #L085088.  v1:= "TLS_1_0" @kind object;
  #L08508c.  v2:= "TLSv1" @kind object;
  #L085090.  call `<init>`(v0, v1, v6, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L085096.  `@@a.ac.d` @type ^`a.ac` := v0 @kind object;
  #L08509a.  v0:= new `a.ac`;
  #L08509e.  v1:= "SSL_3_0" @kind object;
  #L0850a2.  v2:= "SSLv3" @kind object;
  #L0850a6.  call `<init>`(v0, v1, v7, v2) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L0850ac.  `@@a.ac.e` @type ^`a.ac` := v0 @kind object;
  #L0850b0.  v0:= 5I;
  #L0850b2.  v0:= new `a.ac`[v0];
  #L0850b6.  v1:= `@@a.ac.a` @type ^`a.ac` @kind object;
  #L0850ba.  v0[v3]:= v1 @kind object;
  #L0850be.  v1:= `@@a.ac.b` @type ^`a.ac` @kind object;
  #L0850c2.  v0[v4]:= v1 @kind object;
  #L0850c6.  v1:= `@@a.ac.c` @type ^`a.ac` @kind object;
  #L0850ca.  v0[v5]:= v1 @kind object;
  #L0850ce.  v1:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L0850d2.  v0[v6]:= v1 @kind object;
  #L0850d6.  v1:= `@@a.ac.e` @type ^`a.ac` @kind object;
  #L0850da.  v0[v7]:= v1 @kind object;
  #L0850de.  `@@a.ac.g` @type ^`a.ac`[] := v0 @kind object;
  #L0850e2.  return @kind void;
}
procedure `void` `<init>`(`a.ac` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `La/ac;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L0850f4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L0850fa.  v0.`a.ac.f` @type ^`java.lang.String` := v3 @kind object;
  #L0850fe.  return @kind void;
}
procedure `a.ac` `a`(`java.lang.String` v3 @kind object) @signature `La/ac;.a:(Ljava/lang/String;)La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L085110.  v0:= -1I;
  #L085112.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L085118.  v1:= temp;
  #L08511a.  goto L0851dc;
  #L085120.  goto L085208;
  #L085126.  v0:= new `java.lang.IllegalArgumentException`;
  #L08512a.  v1:= new `java.lang.StringBuilder`;
  #L08512e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L085134.  v2:= "Unexpected TLS version: " @kind object;
  #L085138.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08513e.  v1:= temp @kind object;
  #L085140.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L085146.  v1:= temp @kind object;
  #L085148.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08514e.  v1:= temp @kind object;
  #L085150.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L085156.  throw v0;
  #L085158.  v1:= "TLSv1.3" @kind object;
  #L08515c.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085162.  v1:= temp;
  #L085164.  if v1 == 0 then goto L085120;
  #L085168.  v0:= 0I;
  #L08516a.  goto L085120;
  #L08516c.  v1:= "TLSv1.2" @kind object;
  #L085170.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L085176.  v1:= temp;
  #L085178.  if v1 == 0 then goto L085120;
  #L08517c.  v0:= 1I;
  #L08517e.  goto L085120;
  #L085180.  v1:= "TLSv1.1" @kind object;
  #L085184.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08518a.  v1:= temp;
  #L08518c.  if v1 == 0 then goto L085120;
  #L085190.  v0:= 2I;
  #L085192.  goto L085120;
  #L085194.  v1:= "TLSv1" @kind object;
  #L085198.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L08519e.  v1:= temp;
  #L0851a0.  if v1 == 0 then goto L085120;
  #L0851a4.  v0:= 3I;
  #L0851a6.  goto L085120;
  #L0851a8.  v1:= "SSLv3" @kind object;
  #L0851ac.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L0851b2.  v1:= temp;
  #L0851b4.  if v1 == 0 then goto L085120;
  #L0851b8.  v0:= 4I;
  #L0851ba.  goto L085120;
  #L0851bc.  v0:= `@@a.ac.a` @type ^`a.ac` @kind object;
  #L0851c0.  return v0 @kind object;
  #L0851c2.  v0:= `@@a.ac.b` @type ^`a.ac` @kind object;
  #L0851c6.  goto L0851c0;
  #L0851c8.  v0:= `@@a.ac.c` @type ^`a.ac` @kind object;
  #L0851cc.  goto L0851c0;
  #L0851ce.  v0:= `@@a.ac.d` @type ^`a.ac` @kind object;
  #L0851d2.  goto L0851c0;
  #L0851d4.  v0:= `@@a.ac.e` @type ^`a.ac` @kind object;
  #L0851d8.  goto L0851c0;
  #L0851da.  
  #L0851dc.  switch v1
                  | -503070503 => goto L085180
                  | -503070502 => goto L08516c
                  | -503070501 => goto L085158
                  | 79201641 => goto L0851a8
                  | 79923350 => goto L085194
                  | else => goto L085120;
  #L085208.  switch v0
                  | 0 => goto L0851bc
                  | 1 => goto L0851c2
                  | 2 => goto L0851c8
                  | 3 => goto L0851ce
                  | 4 => goto L0851d4
                  | else => goto L085126;
}
procedure `a.ac` `valueOf`(`java.lang.String` v1 @kind object) @signature `La/ac;.valueOf:(Ljava/lang/String;)La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L085234.  v0:= constclass @type ^`a.ac` @kind object;
  #L085238.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L08523e.  v0:= temp @kind object;
  #L085240.  v0:= (`a.ac`) v0 @kind object;
  #L085244.  return v0 @kind object;
}
procedure `a.ac`[] `values`() @signature `La/ac;.values:()[La/ac;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L085258.  v0:= `@@a.ac.g` @type ^`a.ac`[] @kind object;
  #L08525c.  call temp:= `clone`(v0) @signature `[La/ac;.clone:()Ljava/lang/Object;` @kind virtual;
  #L085262.  v0:= temp @kind object;
  #L085264.  v0:= (`a.ac`[]) v0 @kind object;
  #L085268.  return v0 @kind object;
}

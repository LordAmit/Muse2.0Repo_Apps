record `a.q$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `a.q$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`a.q$a` v2 @kind this) @signature `La/q$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L088848.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08884e.  v0:= new `java.util.ArrayList`;
  #L088852.  v1:= 20I;
  #L088856.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L08885c.  v2.`a.q$a.a` @type ^`java.util.List` := v0 @kind object;
  #L088860.  return @kind void;
}
procedure `void` `d`(`a.q$a` v9 @kind this, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L088874.  v5:= 127I;
  #L088878.  v8:= 3I;
  #L08887a.  v7:= 2I;
  #L08887c.  v6:= 1I;
  #L08887e.  v1:= 0I;
  #L088880.  if v10 != 0 then goto L088894;
  #L088884.  v0:= new `java.lang.NullPointerException`;
  #L088888.  v1:= "name == null" @kind object;
  #L08888c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L088892.  throw v0;
  #L088894.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L08889a.  v0:= temp;
  #L08889c.  if v0 == 0 then goto L0888b0;
  #L0888a0.  v0:= new `java.lang.IllegalArgumentException`;
  #L0888a4.  v1:= "name is empty" @kind object;
  #L0888a8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0888ae.  throw v0;
  #L0888b0.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L0888b6.  v2:= temp;
  #L0888b8.  v0:= v1;
  #L0888ba.  if v0 >= v2 then goto L088910;
  #L0888be.  call temp:= `charAt`(v10, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L0888c4.  v3:= temp;
  #L0888c6.  v4:= 32I;
  #L0888ca.  if v3 <= v4 then goto L0888d2;
  #L0888ce.  if v3 < v5 then goto L08890a;
  #L0888d2.  v2:= new `java.lang.IllegalArgumentException`;
  #L0888d6.  v4:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L0888da.  v5:= new `java.lang.Object`[v8];
  #L0888de.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0888e4.  v3:= temp @kind object;
  #L0888e6.  v5[v1]:= v3 @kind object;
  #L0888ea.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L0888f0.  v0:= temp @kind object;
  #L0888f2.  v5[v6]:= v0 @kind object;
  #L0888f6.  v5[v7]:= v10 @kind object;
  #L0888fa.  call temp:= `a`(v4, v5) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L088900.  v0:= temp @kind object;
  #L088902.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L088908.  throw v2;
  #L08890a.  v0:= v0 + 1;
  #L08890e.  goto L0888ba;
  #L088910.  if v11 != 0 then goto L088924;
  #L088914.  v0:= new `java.lang.NullPointerException`;
  #L088918.  v1:= "value == null" @kind object;
  #L08891c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L088922.  throw v0;
  #L088924.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L08892a.  v2:= temp;
  #L08892c.  v0:= v1;
  #L08892e.  if v0 >= v2 then goto L088992;
  #L088932.  call temp:= `charAt`(v11, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L088938.  v3:= temp;
  #L08893a.  v4:= 31I;
  #L08893e.  if v3 > v4 then goto L08894a;
  #L088942.  v4:= 9I;
  #L088946.  if v3 != v4 then goto L08894e;
  #L08894a.  if v3 < v5 then goto L08898c;
  #L08894e.  v2:= new `java.lang.IllegalArgumentException`;
  #L088952.  v4:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L088956.  v5:= 4I;
  #L088958.  v5:= new `java.lang.Object`[v5];
  #L08895c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L088962.  v3:= temp @kind object;
  #L088964.  v5[v1]:= v3 @kind object;
  #L088968.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L08896e.  v0:= temp @kind object;
  #L088970.  v5[v6]:= v0 @kind object;
  #L088974.  v5[v7]:= v10 @kind object;
  #L088978.  v5[v8]:= v11 @kind object;
  #L08897c.  call temp:= `a`(v4, v5) @signature `La/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L088982.  v0:= temp @kind object;
  #L088984.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08898a.  throw v2;
  #L08898c.  v0:= v0 + 1;
  #L088990.  goto L08892e;
  #L088992.  return @kind void;
}
procedure `a.q$a` `a`(`a.q$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `La/q$a;.a:(Ljava/lang/String;)La/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L0889a4.  v2:= 1I;
  #L0889a6.  v0:= ":" @kind object;
  #L0889aa.  call temp:= `indexOf`(v4, v0, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L0889b0.  v0:= temp;
  #L0889b2.  v1:= -1I;
  #L0889b4.  if v0 == v1 then goto L0889d8;
  #L0889b8.  v1:= 0I;
  #L0889ba.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L0889c0.  v1:= temp @kind object;
  #L0889c2.  v0:= v0 + 1;
  #L0889c6.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0889cc.  v0:= temp @kind object;
  #L0889ce.  call temp:= `b`(v3, v1, v0) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L0889d4.  v0:= temp @kind object;
  #L0889d6.  return v0 @kind object;
  #L0889d8.  v0:= ":" @kind object;
  #L0889dc.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L0889e2.  v0:= temp;
  #L0889e4.  if v0 == 0 then goto L0889fe;
  #L0889e8.  v0:= "" @kind object;
  #L0889ec.  call temp:= `substring`(v4, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L0889f2.  v1:= temp @kind object;
  #L0889f4.  call temp:= `b`(v3, v0, v1) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L0889fa.  v0:= temp @kind object;
  #L0889fc.  goto L0889d6;
  #L0889fe.  v0:= "" @kind object;
  #L088a02.  call temp:= `b`(v3, v0, v4) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088a08.  v0:= temp @kind object;
  #L088a0a.  goto L0889d6;
}
procedure `a.q$a` `a`(`a.q$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `La/q$a;.a:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088a1c.  call `d`(v1, v2, v3) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L088a22.  call temp:= `b`(v1, v2, v3) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088a28.  v0:= temp @kind object;
  #L088a2a.  return v0 @kind object;
}
procedure `a.q` `a`(`a.q$a` v1 @kind this) @signature `La/q$a;.a:()La/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L088a3c.  v0:= new `a.q`;
  #L088a40.  call `<init>`(v0, v1) @signature `La/q;.<init>:(La/q$a;)V` @kind direct;
  #L088a46.  return v0 @kind object;
}
procedure `a.q$a` `b`(`a.q$a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L088a58.  v0:= 0I;
  #L088a5a.  v1:= v0;
  #L088a5c.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088a60.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L088a66.  v0:= temp;
  #L088a68.  if v1 >= v0 then goto L088aa8;
  #L088a6c.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088a70.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L088a76.  v0:= temp @kind object;
  #L088a78.  v0:= (`java.lang.String`) v0 @kind object;
  #L088a7c.  call temp:= `equalsIgnoreCase`(v3, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L088a82.  v0:= temp;
  #L088a84.  if v0 == 0 then goto L088aa0;
  #L088a88.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088a8c.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L088a92.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088a96.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L088a9c.  v1:= v1 + -2;
  #L088aa0.  v0:= v1 + 2;
  #L088aa4.  v1:= v0;
  #L088aa6.  goto L088a5c;
  #L088aa8.  return v2 @kind object;
}
procedure `a.q$a` `b`(`a.q$a` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L088abc.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088ac0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088ac6.  v0:= v2.`a.q$a.a` @type ^`java.util.List` @kind object;
  #L088aca.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L088ad0.  v1:= temp @kind object;
  #L088ad2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L088ad8.  return v2 @kind object;
}
procedure `a.q$a` `c`(`a.q$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `La/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @AccessFlag PUBLIC {
    temp;

  #L088aec.  call `d`(v0, v1, v2) @signature `La/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L088af2.  call temp:= `b`(v0, v1) @signature `La/q$a;.b:(Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088af8.  call temp:= `b`(v0, v1, v2) @signature `La/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)La/q$a;` @kind virtual;
  #L088afe.  return v0 @kind object;
}

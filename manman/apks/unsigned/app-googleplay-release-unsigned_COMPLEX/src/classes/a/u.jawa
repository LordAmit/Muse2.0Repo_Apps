record `a.u` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface {
  `int` `a.u.A` @AccessFlag FINAL;
  `int` `a.u.B` @AccessFlag FINAL;
  `a.n` `a.u.c` @AccessFlag FINAL;
  `java.net.Proxy` `a.u.d` @AccessFlag FINAL;
  `java.util.List` `a.u.e` @AccessFlag FINAL;
  `java.util.List` `a.u.f` @AccessFlag FINAL;
  `java.util.List` `a.u.g` @AccessFlag FINAL;
  `java.util.List` `a.u.h` @AccessFlag FINAL;
  `java.net.ProxySelector` `a.u.i` @AccessFlag FINAL;
  `a.m` `a.u.j` @AccessFlag FINAL;
  `a.c` `a.u.k` @AccessFlag FINAL;
  `a.a.a.e` `a.u.l` @AccessFlag FINAL;
  `javax.net.SocketFactory` `a.u.m` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `a.u.n` @AccessFlag FINAL;
  `a.a.h.b` `a.u.o` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `a.u.p` @AccessFlag FINAL;
  `a.g` `a.u.q` @AccessFlag FINAL;
  `a.b` `a.u.r` @AccessFlag FINAL;
  `a.b` `a.u.s` @AccessFlag FINAL;
  `a.j` `a.u.t` @AccessFlag FINAL;
  `a.o` `a.u.u` @AccessFlag FINAL;
  `boolean` `a.u.v` @AccessFlag FINAL;
  `boolean` `a.u.w` @AccessFlag FINAL;
  `boolean` `a.u.x` @AccessFlag FINAL;
  `int` `a.u.y` @AccessFlag FINAL;
  `int` `a.u.z` @AccessFlag FINAL;
}
global `java.util.List` `@@a.u.a` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@a.u.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `La/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L08aec4.  v4:= 2I;
  #L08aec6.  v3:= 1I;
  #L08aec8.  v2:= 0I;
  #L08aeca.  v0:= new `a.v`[v4];
  #L08aece.  v1:= `@@a.v.d` @type ^`a.v` @kind object;
  #L08aed2.  v0[v2]:= v1 @kind object;
  #L08aed6.  v1:= `@@a.v.b` @type ^`a.v` @kind object;
  #L08aeda.  v0[v3]:= v1 @kind object;
  #L08aede.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L08aee4.  v0:= temp @kind object;
  #L08aee6.  `@@a.u.a` @type ^`java.util.List` := v0 @kind object;
  #L08aeea.  v0:= 3I;
  #L08aeec.  v0:= new `a.k`[v0];
  #L08aef0.  v1:= `@@a.k.a` @type ^`a.k` @kind object;
  #L08aef4.  v0[v2]:= v1 @kind object;
  #L08aef8.  v1:= `@@a.k.b` @type ^`a.k` @kind object;
  #L08aefc.  v0[v3]:= v1 @kind object;
  #L08af00.  v1:= `@@a.k.c` @type ^`a.k` @kind object;
  #L08af04.  v0[v4]:= v1 @kind object;
  #L08af08.  call temp:= `a`(v0) @signature `La/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L08af0e.  v0:= temp @kind object;
  #L08af10.  `@@a.u.b` @type ^`java.util.List` := v0 @kind object;
  #L08af14.  v0:= new `a.u$1`;
  #L08af18.  call `<init>`(v0) @signature `La/u$1;.<init>:()V` @kind direct;
  #L08af1e.  `@@a.a.a.a` @type ^`a.a.a` := v0 @kind object;
  #L08af22.  return @kind void;
}
procedure `void` `<init>`(`a.u` v1 @kind this) @signature `La/u;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L08af34.  v0:= new `a.u$a`;
  #L08af38.  call `<init>`(v0) @signature `La/u$a;.<init>:()V` @kind direct;
  #L08af3e.  call `<init>`(v1, v0) @signature `La/u;.<init>:(La/u$a;)V` @kind direct;
  #L08af44.  return @kind void;
}
procedure `void` `<init>`(`a.u` v4 @kind this, `a.u$a` v5 @kind object) @signature `La/u;.<init>:(La/u$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L08af58.  v2:= 0I;
  #L08af5a.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L08af60.  v0:= v5.`a.u$a.a` @type ^`a.n` @kind object;
  #L08af64.  v4.`a.u.c` @type ^`a.n` := v0 @kind object;
  #L08af68.  v0:= v5.`a.u$a.b` @type ^`java.net.Proxy` @kind object;
  #L08af6c.  v4.`a.u.d` @type ^`java.net.Proxy` := v0 @kind object;
  #L08af70.  v0:= v5.`a.u$a.c` @type ^`java.util.List` @kind object;
  #L08af74.  v4.`a.u.e` @type ^`java.util.List` := v0 @kind object;
  #L08af78.  v0:= v5.`a.u$a.d` @type ^`java.util.List` @kind object;
  #L08af7c.  v4.`a.u.f` @type ^`java.util.List` := v0 @kind object;
  #L08af80.  v0:= v5.`a.u$a.e` @type ^`java.util.List` @kind object;
  #L08af84.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08af8a.  v0:= temp @kind object;
  #L08af8c.  v4.`a.u.g` @type ^`java.util.List` := v0 @kind object;
  #L08af90.  v0:= v5.`a.u$a.f` @type ^`java.util.List` @kind object;
  #L08af94.  call temp:= `a`(v0) @signature `La/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L08af9a.  v0:= temp @kind object;
  #L08af9c.  v4.`a.u.h` @type ^`java.util.List` := v0 @kind object;
  #L08afa0.  v0:= v5.`a.u$a.g` @type ^`java.net.ProxySelector` @kind object;
  #L08afa4.  v4.`a.u.i` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L08afa8.  v0:= v5.`a.u$a.h` @type ^`a.m` @kind object;
  #L08afac.  v4.`a.u.j` @type ^`a.m` := v0 @kind object;
  #L08afb0.  v0:= v5.`a.u$a.i` @type ^`a.c` @kind object;
  #L08afb4.  v4.`a.u.k` @type ^`a.c` := v0 @kind object;
  #L08afb8.  v0:= v5.`a.u$a.j` @type ^`a.a.a.e` @kind object;
  #L08afbc.  v4.`a.u.l` @type ^`a.a.a.e` := v0 @kind object;
  #L08afc0.  v0:= v5.`a.u$a.k` @type ^`javax.net.SocketFactory` @kind object;
  #L08afc4.  v4.`a.u.m` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L08afc8.  v0:= v4.`a.u.f` @type ^`java.util.List` @kind object;
  #L08afcc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L08afd2.  v3:= temp @kind object;
  #L08afd4.  v1:= v2;
  #L08afd6.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L08afdc.  v0:= temp;
  #L08afde.  if v0 == 0 then goto L08b008;
  #L08afe2.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L08afe8.  v0:= temp @kind object;
  #L08afea.  v0:= (`a.k`) v0 @kind object;
  #L08afee.  if v1 != 0 then goto L08affe;
  #L08aff2.  call temp:= `a`(v0) @signature `La/k;.a:()Z` @kind virtual;
  #L08aff8.  v0:= temp;
  #L08affa.  if v0 == 0 then goto L08b004;
  #L08affe.  v0:= 1I;
  #L08b000.  v1:= v0;
  #L08b002.  goto L08afd6;
  #L08b004.  v0:= v2;
  #L08b006.  goto L08b000;
  #L08b008.  v0:= v5.`a.u$a.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08b00c.  if v0 != 0 then goto L08b014;
  #L08b010.  if v1 != 0 then goto L08b09a;
  #L08b014.  v0:= v5.`a.u$a.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08b018.  v4.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L08b01c.  v0:= v5.`a.u$a.m` @type ^`a.a.h.b` @kind object;
  #L08b020.  v4.`a.u.o` @type ^`a.a.h.b` := v0 @kind object;
  #L08b024.  v0:= v5.`a.u$a.n` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L08b028.  v4.`a.u.p` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L08b02c.  v0:= v5.`a.u$a.o` @type ^`a.g` @kind object;
  #L08b030.  v1:= v4.`a.u.o` @type ^`a.a.h.b` @kind object;
  #L08b034.  call temp:= `a`(v0, v1) @signature `La/g;.a:(La/a/h/b;)La/g;` @kind virtual;
  #L08b03a.  v0:= temp @kind object;
  #L08b03c.  v4.`a.u.q` @type ^`a.g` := v0 @kind object;
  #L08b040.  v0:= v5.`a.u$a.p` @type ^`a.b` @kind object;
  #L08b044.  v4.`a.u.r` @type ^`a.b` := v0 @kind object;
  #L08b048.  v0:= v5.`a.u$a.q` @type ^`a.b` @kind object;
  #L08b04c.  v4.`a.u.s` @type ^`a.b` := v0 @kind object;
  #L08b050.  v0:= v5.`a.u$a.r` @type ^`a.j` @kind object;
  #L08b054.  v4.`a.u.t` @type ^`a.j` := v0 @kind object;
  #L08b058.  v0:= v5.`a.u$a.s` @type ^`a.o` @kind object;
  #L08b05c.  v4.`a.u.u` @type ^`a.o` := v0 @kind object;
  #L08b060.  v0:= v5.`a.u$a.t` @type ^`boolean` @kind boolean;
  #L08b064.  v4.`a.u.v` @type ^`boolean` := v0 @kind boolean;
  #L08b068.  v0:= v5.`a.u$a.u` @type ^`boolean` @kind boolean;
  #L08b06c.  v4.`a.u.w` @type ^`boolean` := v0 @kind boolean;
  #L08b070.  v0:= v5.`a.u$a.v` @type ^`boolean` @kind boolean;
  #L08b074.  v4.`a.u.x` @type ^`boolean` := v0 @kind boolean;
  #L08b078.  v0:= v5.`a.u$a.w` @type ^`int`;
  #L08b07c.  v4.`a.u.y` @type ^`int` := v0;
  #L08b080.  v0:= v5.`a.u$a.x` @type ^`int`;
  #L08b084.  v4.`a.u.z` @type ^`int` := v0;
  #L08b088.  v0:= v5.`a.u$a.y` @type ^`int`;
  #L08b08c.  v4.`a.u.A` @type ^`int` := v0;
  #L08b090.  v0:= v5.`a.u$a.z` @type ^`int`;
  #L08b094.  v4.`a.u.B` @type ^`int` := v0;
  #L08b098.  return @kind void;
  #L08b09a.  call temp:= `x`(v4) @signature `La/u;.x:()Ljavax/net/ssl/X509TrustManager;` @kind direct;
  #L08b0a0.  v0:= temp @kind object;
  #L08b0a2.  call temp:= `a`(v4, v0) @signature `La/u;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind direct;
  #L08b0a8.  v1:= temp @kind object;
  #L08b0aa.  v4.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L08b0ae.  call temp:= `a`(v0) @signature `La/a/h/b;.a:(Ljavax/net/ssl/X509TrustManager;)La/a/h/b;` @kind static;
  #L08b0b4.  v0:= temp @kind object;
  #L08b0b6.  v4.`a.u.o` @type ^`a.a.h.b` := v0 @kind object;
  #L08b0ba.  goto L08b024;
}
procedure `javax.net.ssl.SSLSocketFactory` `a`(`a.u` v4 @kind this, `javax.net.ssl.X509TrustManager` v5 @kind object) @signature `La/u;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L08b0cc.  v0:= "TLS" @kind object;
  #L08b0d0.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L08b0d6.  v0:= temp @kind object;
  #L08b0d8.  v1:= 0I;
  #L08b0da.  v2:= 1I;
  #L08b0dc.  v2:= new `javax.net.ssl.TrustManager`[v2];
  #L08b0e0.  v3:= 0I;
  #L08b0e2.  v2[v3]:= v5 @kind object;
  #L08b0e6.  v3:= 0I;
  #L08b0e8.  call `init`(v0, v1, v2, v3) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L08b0ee.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #Try_end0.  
  #L08b0f4.  v0:= temp @kind object;
  #L08b0f6.  return v0 @kind object;
  #L08b0f8.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L08b0fa.  v0:= new `java.lang.AssertionError`;
  #L08b0fe.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08b104.  throw v0;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L08b0f8;
}
procedure `javax.net.ssl.X509TrustManager` `x`(`a.u` v4 @kind this) @signature `La/u;.x:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #Try_start0.  
  #L08b128.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L08b12e.  v0:= temp @kind object;
  #L08b130.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L08b136.  v1:= temp @kind object;
  #L08b138.  v0:= 0I;
  #L08b13a.  v0:= (`java.security.KeyStore`) v0 @kind object;
  #L08b13e.  call `init`(v1, v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L08b144.  call temp:= `getTrustManagers`(v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L08b14a.  v0:= temp @kind object;
  #L08b14c.  v1:= length @variable v0;
  #L08b14e.  v2:= 1I;
  #L08b150.  if v1 != v2 then goto L08b162;
  #L08b154.  v1:= 0I;
  #L08b156.  v1:= v0[v1] @kind object;
  #L08b15a.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L08b15e.  if v1 != 0 then goto L08b1aa;
  #L08b162.  v1:= new `java.lang.IllegalStateException`;
  #L08b166.  v2:= new `java.lang.StringBuilder`;
  #L08b16a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L08b170.  v3:= "Unexpected default trust managers:" @kind object;
  #L08b174.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b17a.  v2:= temp @kind object;
  #L08b17c.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L08b182.  v0:= temp @kind object;
  #L08b184.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L08b18a.  v0:= temp @kind object;
  #L08b18c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L08b192.  v0:= temp @kind object;
  #L08b194.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L08b19a.  throw v1;
  #Try_end0.  
  #L08b19c.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L08b19e.  v0:= new `java.lang.AssertionError`;
  #L08b1a2.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L08b1a8.  throw v0;
  #L08b1aa.  v1:= 0I;
  #Try_start1.  
  #L08b1ac.  v0:= v0[v1] @kind object;
  #L08b1b0.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #Try_end1.  
  #L08b1b4.  return v0 @kind object;
  catch `java.security.GeneralSecurityException` @[Try_start0..Try_end0] goto L08b19c;
  catch `java.security.GeneralSecurityException` @[Try_start1..Try_end1] goto L08b19c;
}
procedure `int` `a`(`a.u` v1 @kind this) @signature `La/u;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b1e0.  v0:= v1.`a.u.y` @type ^`int`;
  #L08b1e4.  return v0;
}
procedure `a.e` `a`(`a.u` v2 @kind this, `a.x` v3 @kind object) @signature `La/u;.a:(La/x;)La/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08b1f8.  v0:= new `a.w`;
  #L08b1fc.  v1:= 0I;
  #L08b1fe.  call `<init>`(v0, v2, v3, v1) @signature `La/w;.<init>:(La/u;La/x;Z)V` @kind direct;
  #L08b204.  return v0 @kind object;
}
procedure `int` `b`(`a.u` v1 @kind this) @signature `La/u;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b218.  v0:= v1.`a.u.z` @type ^`int`;
  #L08b21c.  return v0;
}
procedure `int` `c`(`a.u` v1 @kind this) @signature `La/u;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b230.  v0:= v1.`a.u.A` @type ^`int`;
  #L08b234.  return v0;
}
procedure `java.net.Proxy` `d`(`a.u` v1 @kind this) @signature `La/u;.d:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b248.  v0:= v1.`a.u.d` @type ^`java.net.Proxy` @kind object;
  #L08b24c.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `e`(`a.u` v1 @kind this) @signature `La/u;.e:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b260.  v0:= v1.`a.u.i` @type ^`java.net.ProxySelector` @kind object;
  #L08b264.  return v0 @kind object;
}
procedure `a.m` `f`(`a.u` v1 @kind this) @signature `La/u;.f:()La/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b278.  v0:= v1.`a.u.j` @type ^`a.m` @kind object;
  #L08b27c.  return v0 @kind object;
}
procedure `a.a.a.e` `g`(`a.u` v1 @kind this) @signature `La/u;.g:()La/a/a/e;` @AccessFlag  {
    temp;
    v0;

  #L08b290.  v0:= v1.`a.u.k` @type ^`a.c` @kind object;
  #L08b294.  if v0 == 0 then goto L08b2a2;
  #L08b298.  v0:= v1.`a.u.k` @type ^`a.c` @kind object;
  #L08b29c.  v0:= v0.`a.c.a` @type ^`a.a.a.e` @kind object;
  #L08b2a0.  return v0 @kind object;
  #L08b2a2.  v0:= v1.`a.u.l` @type ^`a.a.a.e` @kind object;
  #L08b2a6.  goto L08b2a0;
}
procedure `a.o` `h`(`a.u` v1 @kind this) @signature `La/u;.h:()La/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b2b8.  v0:= v1.`a.u.u` @type ^`a.o` @kind object;
  #L08b2bc.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `i`(`a.u` v1 @kind this) @signature `La/u;.i:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b2d0.  v0:= v1.`a.u.m` @type ^`javax.net.SocketFactory` @kind object;
  #L08b2d4.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `j`(`a.u` v1 @kind this) @signature `La/u;.j:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b2e8.  v0:= v1.`a.u.n` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L08b2ec.  return v0 @kind object;
}
procedure `javax.net.ssl.HostnameVerifier` `k`(`a.u` v1 @kind this) @signature `La/u;.k:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b300.  v0:= v1.`a.u.p` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L08b304.  return v0 @kind object;
}
procedure `a.g` `l`(`a.u` v1 @kind this) @signature `La/u;.l:()La/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b318.  v0:= v1.`a.u.q` @type ^`a.g` @kind object;
  #L08b31c.  return v0 @kind object;
}
procedure `a.b` `m`(`a.u` v1 @kind this) @signature `La/u;.m:()La/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b330.  v0:= v1.`a.u.s` @type ^`a.b` @kind object;
  #L08b334.  return v0 @kind object;
}
procedure `a.b` `n`(`a.u` v1 @kind this) @signature `La/u;.n:()La/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b348.  v0:= v1.`a.u.r` @type ^`a.b` @kind object;
  #L08b34c.  return v0 @kind object;
}
procedure `a.j` `o`(`a.u` v1 @kind this) @signature `La/u;.o:()La/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b360.  v0:= v1.`a.u.t` @type ^`a.j` @kind object;
  #L08b364.  return v0 @kind object;
}
procedure `boolean` `p`(`a.u` v1 @kind this) @signature `La/u;.p:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b378.  v0:= v1.`a.u.v` @type ^`boolean` @kind boolean;
  #L08b37c.  return v0;
}
procedure `boolean` `q`(`a.u` v1 @kind this) @signature `La/u;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b390.  v0:= v1.`a.u.w` @type ^`boolean` @kind boolean;
  #L08b394.  return v0;
}
procedure `boolean` `r`(`a.u` v1 @kind this) @signature `La/u;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b3a8.  v0:= v1.`a.u.x` @type ^`boolean` @kind boolean;
  #L08b3ac.  return v0;
}
procedure `a.n` `s`(`a.u` v1 @kind this) @signature `La/u;.s:()La/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b3c0.  v0:= v1.`a.u.c` @type ^`a.n` @kind object;
  #L08b3c4.  return v0 @kind object;
}
procedure `java.util.List` `t`(`a.u` v1 @kind this) @signature `La/u;.t:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b3d8.  v0:= v1.`a.u.e` @type ^`java.util.List` @kind object;
  #L08b3dc.  return v0 @kind object;
}
procedure `java.util.List` `u`(`a.u` v1 @kind this) @signature `La/u;.u:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b3f0.  v0:= v1.`a.u.f` @type ^`java.util.List` @kind object;
  #L08b3f4.  return v0 @kind object;
}
procedure `java.util.List` `v`(`a.u` v1 @kind this) @signature `La/u;.v:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b408.  v0:= v1.`a.u.g` @type ^`java.util.List` @kind object;
  #L08b40c.  return v0 @kind object;
}
procedure `java.util.List` `w`(`a.u` v1 @kind this) @signature `La/u;.w:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L08b420.  v0:= v1.`a.u.h` @type ^`java.util.List` @kind object;
  #L08b424.  return v0 @kind object;
}

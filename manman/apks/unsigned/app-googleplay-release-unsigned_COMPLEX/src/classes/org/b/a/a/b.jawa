record `org.b.a.a.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`org.b.a.a.b` v0 @kind this) @signature `Lorg/b/a/a/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17539c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1753a2.  return @kind void;
}
procedure `boolean` `a`(`org.b.a.a.b` v1 @kind this, `byte` v2 ) @signature `Lorg/b/a/a/b;.a:(B)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1753b4.  v0:= v2 ^& 128;
  #L1753b8.  if v0 != 0 then goto L1753c0;
  #L1753bc.  v0:= 1I;
  #L1753be.  return v0;
  #L1753c0.  v0:= 0I;
  #L1753c2.  goto L1753be;
}
procedure `boolean` `b`(`org.b.a.a.b` v2 @kind this, `byte` v3 ) @signature `Lorg/b/a/a/b;.b:(B)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1753d4.  v0:= v3 ^& 255;
  #L1753d8.  v1:= 65I;
  #L1753dc.  if v0 < v1 then goto L1753f8;
  #L1753e0.  v1:= 90I;
  #L1753e4.  if v0 <= v1 then goto L1753f0;
  #L1753e8.  v1:= 97I;
  #L1753ec.  if v0 < v1 then goto L1753f8;
  #L1753f0.  v1:= 122I;
  #L1753f4.  if v0 <= v1 then goto L1753fc;
  #L1753f8.  v0:= 1I;
  #L1753fa.  return v0;
  #L1753fc.  v0:= 0I;
  #L1753fe.  goto L1753fa;
}
procedure `java.lang.String` `a`() @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.b.a.a.b$a` `a`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `b`() @signature `Lorg/b/a/a/b;.b:()F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.nio.ByteBuffer` `b`(`org.b.a.a.b` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/b;.b:([BII)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L175410.  v2:= 0I;
  #L175412.  call temp:= `allocate`(v10) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L175418.  v3:= temp @kind object;
  #L17541a.  v4:= v9 + v10 @kind int;
  #L17541e.  v0:= v9;
  #L175420.  v1:= v2;
  #L175422.  if v9 >= v4 then goto L175474;
  #L175426.  v5:= v8[v9] @kind byte;
  #L17542a.  call temp:= `a`(v7, v5) @signature `Lorg/b/a/a/b;.a:(B)Z` @kind direct;
  #L175430.  v6:= temp;
  #L175432.  if v6 != 0 then goto L17543e;
  #L175436.  v1:= 1I;
  #L175438.  v9:= v9 + 1;
  #L17543c.  goto L175422;
  #L17543e.  call temp:= `b`(v7, v5) @signature `Lorg/b/a/a/b;.b:(B)Z` @kind direct;
  #L175444.  v5:= temp;
  #L175446.  if v5 == 0 then goto L175438;
  #L17544a.  if v1 == 0 then goto L17546e;
  #L17544e.  if v9 <= v0 then goto L17546e;
  #L175452.  v1:= v9 - v0 @kind int;
  #L175456.  call temp:= `put`(v3, v8, v0, v1) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L17545c.  v0:= 32I;
  #L175460.  call temp:= `put`(v3, v0) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L175466.  v0:= v9 + 1;
  #L17546a.  v1:= v2;
  #L17546c.  goto L175438;
  #L17546e.  v0:= v9 + 1;
  #L175472.  goto L175438;
  #L175474.  if v1 == 0 then goto L175486;
  #L175478.  if v9 <= v0 then goto L175486;
  #L17547c.  v1:= v9 - v0 @kind int;
  #L175480.  call temp:= `put`(v3, v8, v0, v1) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L175486.  return v3 @kind object;
}
procedure `java.nio.ByteBuffer` `c`(`org.b.a.a.b` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/b;.c:([BII)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L175498.  v1:= 0I;
  #L17549a.  call temp:= `allocate`(v10) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L1754a0.  v3:= temp @kind object;
  #L1754a2.  v4:= v9 + v10 @kind int;
  #L1754a6.  v2:= v9;
  #L1754a8.  v0:= v1;
  #L1754aa.  if v9 >= v4 then goto L17550c;
  #L1754ae.  v5:= v8[v9] @kind byte;
  #L1754b2.  v6:= 62I;
  #L1754b6.  if v5 != v6 then goto L1754fa;
  #L1754ba.  v0:= v1;
  #L1754bc.  call temp:= `a`(v7, v5) @signature `Lorg/b/a/a/b;.a:(B)Z` @kind direct;
  #L1754c2.  v6:= temp;
  #L1754c4.  if v6 == 0 then goto L1754f4;
  #L1754c8.  call temp:= `b`(v7, v5) @signature `Lorg/b/a/a/b;.b:(B)Z` @kind direct;
  #L1754ce.  v5:= temp;
  #L1754d0.  if v5 == 0 then goto L1754f4;
  #L1754d4.  if v9 <= v2 then goto L175506;
  #L1754d8.  if v0 != 0 then goto L175506;
  #L1754dc.  v5:= v9 - v2 @kind int;
  #L1754e0.  call temp:= `put`(v3, v8, v2, v5) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1754e6.  v2:= 32I;
  #L1754ea.  call temp:= `put`(v3, v2) @signature `Ljava/nio/ByteBuffer;.put:(B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1754f0.  v2:= v9 + 1;
  #L1754f4.  v9:= v9 + 1;
  #L1754f8.  goto L1754aa;
  #L1754fa.  v6:= 60I;
  #L1754fe.  if v5 != v6 then goto L1754bc;
  #L175502.  v0:= 1I;
  #L175504.  goto L1754bc;
  #L175506.  v2:= v9 + 1;
  #L17550a.  goto L1754f4;
  #L17550c.  if v0 != 0 then goto L17551e;
  #L175510.  if v9 <= v2 then goto L17551e;
  #L175514.  v0:= v9 - v2 @kind int;
  #L175518.  call temp:= `put`(v3, v8, v2, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L17551e.  return v3 @kind object;
}
procedure `org.b.a.a.b$a` `c`() @signature `Lorg/b/a/a/b;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `d`() @signature `Lorg/b/a/a/b;.d:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}

record `org.b.a.a.c` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.c.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.c.b` @AccessFlag PRIVATE;
  `org.b.a.a.a.a` `org.b.a.a.c.c` @AccessFlag PRIVATE;
  `org.b.a.a.b.c` `org.b.a.a.c.d` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.c.e` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L190370.  v0:= new `org.b.a.a.d.c`;
  #L190374.  call `<init>`(v0) @signature `Lorg/b/a/a/d/c;.<init>:()V` @kind direct;
  #L19037a.  `@@org.b.a.a.c.f` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L19037e.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L190390.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L190396.  v0:= new `org.b.a.a.d.b`;
  #L19039a.  v1:= `@@org.b.a.a.c.f` @type ^`org.b.a.a.d.m` @kind object;
  #L19039e.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L1903a4.  v2.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L1903a8.  v0:= new `org.b.a.a.a.a`;
  #L1903ac.  call `<init>`(v0) @signature `Lorg/b/a/a/a/a;.<init>:()V` @kind direct;
  #L1903b2.  v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` := v0 @kind object;
  #L1903b6.  v0:= new `org.b.a.a.b.c`;
  #L1903ba.  call `<init>`(v0) @signature `Lorg/b/a/a/b/c;.<init>:()V` @kind direct;
  #L1903c0.  v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` := v0 @kind object;
  #L1903c4.  v0:= 2I;
  #L1903c6.  v0:= new `byte`[v0];
  #L1903ca.  v2.`org.b.a.a.c.e` @type ^`byte`[] := v0 @kind object;
  #L1903ce.  call `d`(v2) @signature `Lorg/b/a/a/c;.d:()V` @kind virtual;
  #L1903d4.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.c` v1 @kind this) @signature `Lorg/b/a/a/c;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1903e8.  v0:= `@@org.b.a.b.i` @type ^`java.lang.String` @kind object;
  #L1903ec.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.c` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/c;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L190400.  v6:= 1I;
  #L190402.  v5:= 0I;
  #L190404.  v1:= v9 + v10 @kind int;
  #L190408.  v0:= v9;
  #L19040a.  if v0 >= v1 then goto L19042a;
  #L19040e.  v2:= v7.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L190412.  v3:= v8[v0] @kind byte;
  #L190416.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L19041c.  v2:= temp;
  #L19041e.  if v2 != v6 then goto L19047a;
  #L190422.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L190426.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19042a.  v0:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L19042e.  v1:= v1 + -1;
  #L190432.  v1:= v8[v1] @kind byte;
  #L190436.  v0[v5]:= v1 @kind byte;
  #L19043a.  v0:= v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19043e.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L190442.  if v0 != v1 then goto L190474;
  #L190446.  v0:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L19044a.  call temp:= `c`(v0) @signature `Lorg/b/a/a/a/a;.c:()Z` @kind virtual;
  #L190450.  v0:= temp;
  #L190452.  if v0 == 0 then goto L190474;
  #L190456.  call temp:= `b`(v7) @signature `Lorg/b/a/a/c;.b:()F` @kind virtual;
  #L19045c.  v0:= temp;
  #L19045e.  v1:= 1064514355I;
  #L190464.  v0:= fcmpl(v0, v1);
  #L190468.  if v0 <= 0 then goto L190474;
  #L19046c.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L190470.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L190474.  v0:= v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L190478.  return v0 @kind object;
  #L19047a.  v3:= 2I;
  #L19047c.  if v2 != v3 then goto L19048a;
  #L190480.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L190484.  v7.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L190488.  goto L19042a;
  #L19048a.  if v2 != 0 then goto L1904c6;
  #L19048e.  v2:= v7.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L190492.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L190498.  v2:= temp;
  #L19049a.  if v0 != v9 then goto L1904cc;
  #L19049e.  v3:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L1904a2.  v4:= v8[v9] @kind byte;
  #L1904a6.  v3[v6]:= v4 @kind byte;
  #L1904aa.  v3:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L1904ae.  v4:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L1904b2.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/a/a;.a:([BII)V` @kind virtual;
  #L1904b8.  v3:= v7.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L1904bc.  v4:= v7.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L1904c0.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/c;.a:([BII)V` @kind virtual;
  #L1904c6.  v0:= v0 + 1;
  #L1904ca.  goto L19040a;
  #L1904cc.  v3:= v7.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L1904d0.  v4:= v0 + -1;
  #L1904d4.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/a/a;.a:([BII)V` @kind virtual;
  #L1904da.  v3:= v7.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L1904de.  v4:= v0 + -1;
  #L1904e2.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/c;.a:([BII)V` @kind virtual;
  #L1904e8.  goto L1904c6;
}
procedure `float` `b`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1904fc.  v0:= v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L190500.  call temp:= `a`(v0) @signature `Lorg/b/a/a/a/a;.a:()F` @kind virtual;
  #L190506.  v0:= temp;
  #L190508.  v1:= v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L19050c.  call temp:= `a`(v1) @signature `Lorg/b/a/a/b/c;.a:()F` @kind virtual;
  #L190512.  v1:= temp;
  #L190514.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L19051a.  v0:= temp;
  #L19051c.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.c` v1 @kind this) @signature `Lorg/b/a/a/c;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L190530.  v0:= v1.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` @kind object;
  #L190534.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.c` v2 @kind this) @signature `Lorg/b/a/a/c;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L190548.  v0:= v2.`org.b.a.a.c.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19054c.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L190552.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L190556.  v2.`org.b.a.a.c.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19055a.  v0:= v2.`org.b.a.a.c.c` @type ^`org.b.a.a.a.a` @kind object;
  #L19055e.  call `b`(v0) @signature `Lorg/b/a/a/a/a;.b:()V` @kind virtual;
  #L190564.  v0:= v2.`org.b.a.a.c.d` @type ^`org.b.a.a.b.c` @kind object;
  #L190568.  call `b`(v0) @signature `Lorg/b/a/a/b/c;.b:()V` @kind virtual;
  #L19056e.  v0:= v2.`org.b.a.a.c.e` @type ^`byte`[] @kind object;
  #L190572.  v1:= 0I;
  #L190574.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L19057a.  return @kind void;
}

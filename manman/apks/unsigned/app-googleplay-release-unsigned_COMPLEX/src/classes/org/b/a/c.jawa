record `org.b.a.c` @kind class @AccessFlag PUBLIC {
  `org.b.a.c$a` `org.b.a.c.a` @AccessFlag PRIVATE;
  `boolean` `org.b.a.c.b` @AccessFlag PRIVATE;
  `boolean` `org.b.a.c.c` @AccessFlag PRIVATE;
  `boolean` `org.b.a.c.d` @AccessFlag PRIVATE;
  `byte` `org.b.a.c.e` @AccessFlag PRIVATE;
  `java.lang.String` `org.b.a.c.f` @AccessFlag PRIVATE;
  `org.b.a.a.b`[] `org.b.a.c.g` @AccessFlag PRIVATE;
  `org.b.a.a.b` `org.b.a.c.h` @AccessFlag PRIVATE;
  `org.b.a.a` `org.b.a.c.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.c` v3 @kind this, `org.b.a.a` v4 @kind object) @signature `Lorg/b/a/c;.<init>:(Lorg/b/a/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L196018.  v2:= 0I;
  #L19601a.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L196020.  v3.`org.b.a.c.i` @type ^`org.b.a.a` := v4 @kind object;
  #L196024.  v3.`org.b.a.c.h` @type ^`org.b.a.a.b` := v2 @kind object;
  #L196028.  v0:= 3I;
  #L19602a.  v0:= new `org.b.a.a.b`[v0];
  #L19602e.  v3.`org.b.a.c.g` @type ^`org.b.a.a.b`[] := v0 @kind object;
  #L196032.  v0:= 0I;
  #L196034.  v1:= v3.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L196038.  v1:= length @variable v1;
  #L19603a.  if v0 >= v1 then goto L19604c;
  #L19603e.  v1:= v3.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L196042.  v1[v0]:= v2 @kind object;
  #L196046.  v0:= v0 + 1;
  #L19604a.  goto L196034;
  #L19604c.  call `d`(v3) @signature `Lorg/b/a/c;.d:()V` @kind virtual;
  #L196052.  return @kind void;
}
procedure `void` `a`(`org.b.a.c` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/b/a/c;.a:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L196064.  v8:= 2I;
  #L196066.  v7:= 255I;
  #L19606a.  v5:= 254I;
  #L19606e.  v0:= 0I;
  #L196070.  v6:= 1I;
  #L196072.  v1:= v9.`org.b.a.c.b` @type ^`boolean` @kind boolean;
  #L196076.  if v1 == 0 then goto L19607c;
  #L19607a.  return @kind void;
  #L19607c.  if v12 <= 0 then goto L196084;
  #L196080.  v9.`org.b.a.c.d` @type ^`boolean` := v6 @kind boolean;
  #L196084.  v1:= v9.`org.b.a.c.c` @type ^`boolean` @kind boolean;
  #L196088.  if v1 == 0 then goto L196164;
  #L19608c.  v9.`org.b.a.c.c` @type ^`boolean` := v0 @kind boolean;
  #L196090.  v1:= 3I;
  #L196092.  if v12 <= v1 then goto L196164;
  #L196096.  v1:= v10[v11] @kind byte;
  #L19609a.  v1:= v1 ^& 255;
  #L19609e.  v2:= v11 + 1;
  #L1960a2.  v2:= v10[v2] @kind byte;
  #L1960a6.  v2:= v2 ^& 255;
  #L1960aa.  v3:= v11 + 2;
  #L1960ae.  v3:= v10[v3] @kind byte;
  #L1960b2.  v3:= v3 ^& 255;
  #L1960b6.  v4:= v11 + 3;
  #L1960ba.  v4:= v10[v4] @kind byte;
  #L1960be.  v4:= v4 ^& 255;
  #L1960c2.  goto L1962e0;
  #L1960c8.  v1:= v9.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L1960cc.  if v1 == 0 then goto L196164;
  #L1960d0.  v9.`org.b.a.c.b` @type ^`boolean` := v6 @kind boolean;
  #L1960d4.  goto L19607a;
  #L1960d6.  v1:= 187I;
  #L1960da.  if v2 != v1 then goto L1960c8;
  #L1960de.  v1:= 191I;
  #L1960e2.  if v3 != v1 then goto L1960c8;
  #L1960e6.  v1:= `@@org.b.a.b.u` @type ^`java.lang.String` @kind object;
  #L1960ea.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L1960ee.  goto L1960c8;
  #L1960f0.  if v2 != v7 then goto L196106;
  #L1960f4.  if v3 != 0 then goto L196106;
  #L1960f8.  if v4 != 0 then goto L196106;
  #L1960fc.  v1:= `@@org.b.a.b.A` @type ^`java.lang.String` @kind object;
  #L196100.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L196104.  goto L1960c8;
  #L196106.  if v2 != v7 then goto L1960c8;
  #L19610a.  v1:= `@@org.b.a.b.v` @type ^`java.lang.String` @kind object;
  #L19610e.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L196112.  goto L1960c8;
  #L196114.  if v2 != 0 then goto L19612a;
  #L196118.  if v3 != v5 then goto L19612a;
  #L19611c.  if v4 != v7 then goto L19612a;
  #L196120.  v1:= `@@org.b.a.b.x` @type ^`java.lang.String` @kind object;
  #L196124.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L196128.  goto L1960c8;
  #L19612a.  if v2 != 0 then goto L1960c8;
  #L19612e.  if v3 != v7 then goto L1960c8;
  #L196132.  if v4 != v5 then goto L1960c8;
  #L196136.  v1:= `@@org.b.a.b.B` @type ^`java.lang.String` @kind object;
  #L19613a.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L19613e.  goto L1960c8;
  #L196140.  if v2 != v5 then goto L196156;
  #L196144.  if v3 != 0 then goto L196156;
  #L196148.  if v4 != 0 then goto L196156;
  #L19614c.  v1:= `@@org.b.a.b.y` @type ^`java.lang.String` @kind object;
  #L196150.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L196154.  goto L1960c8;
  #L196156.  if v2 != v5 then goto L1960c8;
  #L19615a.  v1:= `@@org.b.a.b.w` @type ^`java.lang.String` @kind object;
  #L19615e.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L196162.  goto L1960c8;
  #L196164.  v2:= v11 + v12 @kind int;
  #L196168.  v1:= v11;
  #L19616a.  if v1 >= v2 then goto L196242;
  #L19616e.  v3:= v10[v1] @kind byte;
  #L196172.  v3:= v3 ^& 255;
  #L196176.  v4:= v3 ^& 128;
  #L19617a.  if v4 == 0 then goto L196208;
  #L19617e.  v4:= 160I;
  #L196182.  if v3 == v4 then goto L196208;
  #L196186.  v3:= v9.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L19618a.  v4:= `@@org.b.a.c$a.c` @type ^`org.b.a.c$a` @kind object;
  #L19618e.  if v3 == v4 then goto L196202;
  #L196192.  v3:= `@@org.b.a.c$a.c` @type ^`org.b.a.c$a` @kind object;
  #L196196.  v9.`org.b.a.c.a` @type ^`org.b.a.c$a` := v3 @kind object;
  #L19619a.  v3:= v9.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L19619e.  if v3 == 0 then goto L1961a8;
  #L1961a2.  v3:= 0I;
  #L1961a4.  v9.`org.b.a.c.h` @type ^`org.b.a.a.b` := v3 @kind object;
  #L1961a8.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1961ac.  v3:= v3[v0] @kind object;
  #L1961b0.  if v3 != 0 then goto L1961c6;
  #L1961b4.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1961b8.  v4:= new `org.b.a.a.j`;
  #L1961bc.  call `<init>`(v4) @signature `Lorg/b/a/a/j;.<init>:()V` @kind direct;
  #L1961c2.  v3[v0]:= v4 @kind object;
  #L1961c6.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1961ca.  v3:= v3[v6] @kind object;
  #L1961ce.  if v3 != 0 then goto L1961e4;
  #L1961d2.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1961d6.  v4:= new `org.b.a.a.k`;
  #L1961da.  call `<init>`(v4) @signature `Lorg/b/a/a/k;.<init>:()V` @kind direct;
  #L1961e0.  v3[v6]:= v4 @kind object;
  #L1961e4.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1961e8.  v3:= v3[v8] @kind object;
  #L1961ec.  if v3 != 0 then goto L196202;
  #L1961f0.  v3:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1961f4.  v4:= new `org.b.a.a.i`;
  #L1961f8.  call `<init>`(v4) @signature `Lorg/b/a/a/i;.<init>:()V` @kind direct;
  #L1961fe.  v3[v8]:= v4 @kind object;
  #L196202.  v1:= v1 + 1;
  #L196206.  goto L19616a;
  #L196208.  v4:= v9.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L19620c.  v5:= `@@org.b.a.c$a.a` @type ^`org.b.a.c$a` @kind object;
  #L196210.  if v4 != v5 then goto L196238;
  #L196214.  v4:= 27I;
  #L196218.  if v3 == v4 then goto L196230;
  #L19621c.  v4:= 123I;
  #L196220.  if v3 != v4 then goto L196238;
  #L196224.  v3:= v9.`org.b.a.c.e` @type ^`byte` @kind byte;
  #L196228.  v4:= 126I;
  #L19622c.  if v3 != v4 then goto L196238;
  #L196230.  v3:= `@@org.b.a.c$a.b` @type ^`org.b.a.c$a` @kind object;
  #L196234.  v9.`org.b.a.c.a` @type ^`org.b.a.c$a` := v3 @kind object;
  #L196238.  v3:= v10[v1] @kind byte;
  #L19623c.  v9.`org.b.a.c.e` @type ^`byte` := v3 @kind byte;
  #L196240.  goto L196202;
  #L196242.  v1:= v9.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L196246.  v2:= `@@org.b.a.c$a.b` @type ^`org.b.a.c$a` @kind object;
  #L19624a.  if v1 != v2 then goto L196290;
  #L19624e.  v0:= v9.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L196252.  if v0 != 0 then goto L196264;
  #L196256.  v0:= new `org.b.a.a.f`;
  #L19625a.  call `<init>`(v0) @signature `Lorg/b/a/a/f;.<init>:()V` @kind direct;
  #L196260.  v9.`org.b.a.c.h` @type ^`org.b.a.a.b` := v0 @kind object;
  #L196264.  v0:= v9.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L196268.  call temp:= `a`(v0, v10, v11, v12) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @kind virtual;
  #L19626e.  v0:= temp @kind object;
  #L196270.  v1:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L196274.  if v0 != v1 then goto L19607a;
  #L196278.  v9.`org.b.a.c.b` @type ^`boolean` := v6 @kind boolean;
  #L19627c.  v0:= v9.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L196280.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L196286.  v0:= temp @kind object;
  #L196288.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v0 @kind object;
  #L19628c.  goto L19607a;
  #L196290.  v1:= v9.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L196294.  v2:= `@@org.b.a.c$a.c` @type ^`org.b.a.c$a` @kind object;
  #L196298.  if v1 != v2 then goto L19607a;
  #L19629c.  v1:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1962a0.  v1:= length @variable v1;
  #L1962a2.  if v0 >= v1 then goto L19607a;
  #L1962a6.  v1:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1962aa.  v1:= v1[v0] @kind object;
  #L1962ae.  call temp:= `a`(v1, v10, v11, v12) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @kind virtual;
  #L1962b4.  v1:= temp @kind object;
  #L1962b6.  v2:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1962ba.  if v1 != v2 then goto L1962da;
  #L1962be.  v9.`org.b.a.c.b` @type ^`boolean` := v6 @kind boolean;
  #L1962c2.  v1:= v9.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1962c6.  v0:= v1[v0] @kind object;
  #L1962ca.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L1962d0.  v0:= temp @kind object;
  #L1962d2.  v9.`org.b.a.c.f` @type ^`java.lang.String` := v0 @kind object;
  #L1962d6.  goto L19607a;
  #L1962da.  v0:= v0 + 1;
  #L1962de.  goto L19629c;
  #L1962e0.  switch v1
                  | 0 => goto L196114
                  | 239 => goto L1960d6
                  | 254 => goto L1960f0
                  | 255 => goto L196140
                  | else => goto L1960c8;
}
procedure `boolean` `a`(`org.b.a.c` v1 @kind this) @signature `Lorg/b/a/c;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L196314.  v0:= v1.`org.b.a.c.b` @type ^`boolean` @kind boolean;
  #L196318.  return v0;
}
procedure `java.lang.String` `b`(`org.b.a.c` v1 @kind this) @signature `Lorg/b/a/c;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19632c.  v0:= v1.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L196330.  return v0 @kind object;
}
procedure `void` `c`(`org.b.a.c` v5 @kind this) @signature `Lorg/b/a/c;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L196344.  v0:= 0I;
  #L196346.  v1:= v5.`org.b.a.c.d` @type ^`boolean` @kind boolean;
  #L19634a.  if v1 != 0 then goto L196350;
  #L19634e.  return @kind void;
  #L196350.  v1:= v5.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L196354.  if v1 == 0 then goto L196376;
  #L196358.  v0:= 1I;
  #L19635a.  v5.`org.b.a.c.b` @type ^`boolean` := v0 @kind boolean;
  #L19635e.  v0:= v5.`org.b.a.c.i` @type ^`org.b.a.a` @kind object;
  #L196362.  if v0 == 0 then goto L19634e;
  #L196366.  v0:= v5.`org.b.a.c.i` @type ^`org.b.a.a` @kind object;
  #L19636a.  v1:= v5.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L19636e.  call `a`(v0, v1) @signature `Lorg/b/a/a;.a:(Ljava/lang/String;)V` @kind interface;
  #L196374.  goto L19634e;
  #L196376.  v1:= v5.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L19637a.  v2:= `@@org.b.a.c$a.c` @type ^`org.b.a.c$a` @kind object;
  #L19637e.  if v1 != v2 then goto L1963ee;
  #L196382.  v1:= 0I;
  #L196384.  v2:= v1;
  #L196386.  v1:= v0;
  #L196388.  v3:= v5.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L19638c.  v3:= length @variable v3;
  #L19638e.  if v0 >= v3 then goto L1963b4;
  #L196392.  v3:= v5.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L196396.  v3:= v3[v0] @kind object;
  #L19639a.  call temp:= `b`(v3) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L1963a0.  v3:= temp;
  #L1963a2.  v4:= fcmpl(v3, v2);
  #L1963a6.  if v4 <= 0 then goto L1963ae;
  #L1963aa.  v1:= v0;
  #L1963ac.  v2:= v3;
  #L1963ae.  v0:= v0 + 1;
  #L1963b2.  goto L196388;
  #L1963b4.  v0:= 1045220557I;
  #L1963ba.  v0:= fcmpl(v2, v0);
  #L1963be.  if v0 <= 0 then goto L19634e;
  #L1963c2.  v0:= v5.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L1963c6.  v0:= v0[v1] @kind object;
  #L1963ca.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L1963d0.  v0:= temp @kind object;
  #L1963d2.  v5.`org.b.a.c.f` @type ^`java.lang.String` := v0 @kind object;
  #L1963d6.  v0:= v5.`org.b.a.c.i` @type ^`org.b.a.a` @kind object;
  #L1963da.  if v0 == 0 then goto L19634e;
  #L1963de.  v0:= v5.`org.b.a.c.i` @type ^`org.b.a.a` @kind object;
  #L1963e2.  v1:= v5.`org.b.a.c.f` @type ^`java.lang.String` @kind object;
  #L1963e6.  call `a`(v0, v1) @signature `Lorg/b/a/a;.a:(Ljava/lang/String;)V` @kind interface;
  #L1963ec.  goto L19634e;
  #L1963ee.  v0:= v5.`org.b.a.c.a` @type ^`org.b.a.c$a` @kind object;
  #L1963f2.  v1:= `@@org.b.a.c$a.b` @type ^`org.b.a.c$a` @kind object;
  #L1963f6.  if v0 != v1 then goto L19634e;
  #L1963fa.  goto L19634e;
}
procedure `void` `d`(`org.b.a.c` v2 @kind this) @signature `Lorg/b/a/c;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19640c.  v0:= 0I;
  #L19640e.  v2.`org.b.a.c.b` @type ^`boolean` := v0 @kind boolean;
  #L196412.  v1:= 1I;
  #L196414.  v2.`org.b.a.c.c` @type ^`boolean` := v1 @kind boolean;
  #L196418.  v1:= 0I;
  #L19641a.  v2.`org.b.a.c.f` @type ^`java.lang.String` := v1 @kind object;
  #L19641e.  v2.`org.b.a.c.d` @type ^`boolean` := v0 @kind boolean;
  #L196422.  v1:= `@@org.b.a.c$a.a` @type ^`org.b.a.c$a` @kind object;
  #L196426.  v2.`org.b.a.c.a` @type ^`org.b.a.c$a` := v1 @kind object;
  #L19642a.  v2.`org.b.a.c.e` @type ^`byte` := v0 @kind byte;
  #L19642e.  v1:= v2.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L196432.  if v1 == 0 then goto L196440;
  #L196436.  v1:= v2.`org.b.a.c.h` @type ^`org.b.a.a.b` @kind object;
  #L19643a.  call `d`(v1) @signature `Lorg/b/a/a/b;.d:()V` @kind virtual;
  #L196440.  v1:= v2.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L196444.  v1:= length @variable v1;
  #L196446.  if v0 >= v1 then goto L19646a;
  #L19644a.  v1:= v2.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L19644e.  v1:= v1[v0] @kind object;
  #L196452.  if v1 == 0 then goto L196464;
  #L196456.  v1:= v2.`org.b.a.c.g` @type ^`org.b.a.a.b`[] @kind object;
  #L19645a.  v1:= v1[v0] @kind object;
  #L19645e.  call `d`(v1) @signature `Lorg/b/a/a/b;.d:()V` @kind virtual;
  #L196464.  v0:= v0 + 1;
  #L196468.  goto L196440;
  #L19646a.  return @kind void;
}

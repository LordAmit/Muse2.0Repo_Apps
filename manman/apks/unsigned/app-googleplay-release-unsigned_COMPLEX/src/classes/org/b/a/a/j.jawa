record `org.b.a.a.j` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.b$a` `org.b.a.a.j.a` @AccessFlag PRIVATE;
  `org.b.a.a.b`[] `org.b.a.a.j.b` @AccessFlag PRIVATE;
  `boolean`[] `org.b.a.a.j.c` @AccessFlag PRIVATE;
  `int` `org.b.a.a.j.d` @AccessFlag PRIVATE;
  `int` `org.b.a.a.j.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.a.j` v3 @kind this) @signature `Lorg/b/a/a/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L195068.  v1:= 7I;
  #L19506a.  call `<init>`(v3) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L195070.  v0:= new `org.b.a.a.b`[v1];
  #L195074.  v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] := v0 @kind object;
  #L195078.  v0:= new `boolean`[v1];
  #L19507c.  v3.`org.b.a.a.j.c` @type ^`boolean`[] := v0 @kind object;
  #L195080.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L195084.  v1:= 0I;
  #L195086.  v2:= new `org.b.a.a.n`;
  #L19508a.  call `<init>`(v2) @signature `Lorg/b/a/a/n;.<init>:()V` @kind direct;
  #L195090.  v0[v1]:= v2 @kind object;
  #L195094.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L195098.  v1:= 1I;
  #L19509a.  v2:= new `org.b.a.a.l`;
  #L19509e.  call `<init>`(v2) @signature `Lorg/b/a/a/l;.<init>:()V` @kind direct;
  #L1950a4.  v0[v1]:= v2 @kind object;
  #L1950a8.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1950ac.  v1:= 2I;
  #L1950ae.  v2:= new `org.b.a.a.c`;
  #L1950b2.  call `<init>`(v2) @signature `Lorg/b/a/a/c;.<init>:()V` @kind direct;
  #L1950b8.  v0[v1]:= v2 @kind object;
  #L1950bc.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1950c0.  v1:= 3I;
  #L1950c2.  v2:= new `org.b.a.a.g`;
  #L1950c6.  call `<init>`(v2) @signature `Lorg/b/a/a/g;.<init>:()V` @kind direct;
  #L1950cc.  v0[v1]:= v2 @kind object;
  #L1950d0.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1950d4.  v1:= 4I;
  #L1950d6.  v2:= new `org.b.a.a.d`;
  #L1950da.  call `<init>`(v2) @signature `Lorg/b/a/a/d;.<init>:()V` @kind direct;
  #L1950e0.  v0[v1]:= v2 @kind object;
  #L1950e4.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1950e8.  v1:= 5I;
  #L1950ea.  v2:= new `org.b.a.a.a`;
  #L1950ee.  call `<init>`(v2) @signature `Lorg/b/a/a/a;.<init>:()V` @kind direct;
  #L1950f4.  v0[v1]:= v2 @kind object;
  #L1950f8.  v0:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1950fc.  v1:= 6I;
  #L1950fe.  v2:= new `org.b.a.a.e`;
  #L195102.  call `<init>`(v2) @signature `Lorg/b/a/a/e;.<init>:()V` @kind direct;
  #L195108.  v0[v1]:= v2 @kind object;
  #L19510c.  call `d`(v3) @signature `Lorg/b/a/a/j;.d:()V` @kind virtual;
  #L195112.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.j` v2 @kind this) @signature `Lorg/b/a/a/j;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L195124.  v1:= -1I;
  #L195126.  v0:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L19512a.  if v0 != v1 then goto L195142;
  #L19512e.  call temp:= `b`(v2) @signature `Lorg/b/a/a/j;.b:()F` @kind virtual;
  #L195134.  v0:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L195138.  if v0 != v1 then goto L195142;
  #L19513c.  v0:= 0I;
  #L19513e.  v2.`org.b.a.a.j.d` @type ^`int` := v0;
  #L195142.  v0:= v2.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L195146.  v1:= v2.`org.b.a.a.j.d` @type ^`int`;
  #L19514a.  v0:= v0[v1] @kind object;
  #L19514e.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @kind virtual;
  #L195154.  v0:= temp @kind object;
  #L195156.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.j` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lorg/b/a/a/j;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L195168.  v2:= 1I;
  #L19516a.  v3:= 0I;
  #L19516c.  v4:= new `byte`[v11];
  #L195170.  v5:= v10 + v11 @kind int;
  #L195174.  v1:= v3;
  #L195176.  v0:= v2;
  #L195178.  if v10 >= v5 then goto L1951b6;
  #L19517c.  v6:= v9[v10] @kind byte;
  #L195180.  v6:= v6 ^& 128;
  #L195184.  if v6 == 0 then goto L1951a2;
  #L195188.  v0:= v1 + 1;
  #L19518c.  v6:= v9[v10] @kind byte;
  #L195190.  v4[v1]:= v6 @kind byte;
  #L195194.  v1:= v2;
  #L195196.  v10:= v10 + 1;
  #L19519a.  v7:= v0;
  #L19519c.  v0:= v1;
  #L19519e.  v1:= v7;
  #L1951a0.  goto L195178;
  #L1951a2.  if v0 == 0 then goto L19522c;
  #L1951a6.  v0:= v1 + 1;
  #L1951aa.  v6:= v9[v10] @kind byte;
  #L1951ae.  v4[v1]:= v6 @kind byte;
  #L1951b2.  v1:= v3;
  #L1951b4.  goto L195196;
  #L1951b6.  v0:= v3;
  #L1951b8.  v2:= v8.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1951bc.  v2:= length @variable v2;
  #L1951be.  if v0 >= v2 then goto L1951f8;
  #L1951c2.  v2:= v8.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L1951c6.  v2:= v2[v0] @kind boolean;
  #L1951ca.  if v2 != 0 then goto L1951d4;
  #L1951ce.  v0:= v0 + 1;
  #L1951d2.  goto L1951b8;
  #L1951d4.  v2:= v8.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1951d8.  v2:= v2[v0] @kind object;
  #L1951dc.  call temp:= `a`(v2, v4, v3, v1) @signature `Lorg/b/a/a/b;.a:([BII)Lorg/b/a/a/b$a;` @kind virtual;
  #L1951e2.  v2:= temp @kind object;
  #L1951e4.  v5:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1951e8.  if v2 != v5 then goto L1951fe;
  #L1951ec.  v8.`org.b.a.a.j.d` @type ^`int` := v0;
  #L1951f0.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1951f4.  v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1951f8.  v0:= v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1951fc.  return v0 @kind object;
  #L1951fe.  v5:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L195202.  if v2 != v5 then goto L1951ce;
  #L195206.  v2:= v8.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L19520a.  v2[v0]:= v3 @kind boolean;
  #L19520e.  v2:= v8.`org.b.a.a.j.e` @type ^`int`;
  #L195212.  v2:= v2 + -1;
  #L195216.  v8.`org.b.a.a.j.e` @type ^`int` := v2;
  #L19521a.  v2:= v8.`org.b.a.a.j.e` @type ^`int`;
  #L19521e.  if v2 > 0 then goto L1951ce;
  #L195222.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L195226.  v8.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19522a.  goto L1951f8;
  #L19522c.  v7:= v1;
  #L19522e.  v1:= v0;
  #L195230.  v0:= v7;
  #L195232.  goto L195196;
}
procedure `float` `b`(`org.b.a.a.j` v4 @kind this) @signature `Lorg/b/a/a/j;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L195244.  v1:= 0I;
  #L195246.  v0:= v4.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19524a.  v2:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19524e.  if v0 != v2 then goto L19525a;
  #L195252.  v1:= 1065185444I;
  #L195258.  return v1;
  #L19525a.  v0:= v4.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L19525e.  v2:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L195262.  if v0 != v2 then goto L19526e;
  #L195266.  v1:= 1008981770I;
  #L19526c.  goto L195258;
  #L19526e.  v0:= 0I;
  #L195270.  v2:= v4.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L195274.  v2:= length @variable v2;
  #L195276.  if v0 >= v2 then goto L195258;
  #L19527a.  v2:= v4.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L19527e.  v2:= v2[v0] @kind boolean;
  #L195282.  if v2 != 0 then goto L19528c;
  #L195286.  v0:= v0 + 1;
  #L19528a.  goto L195270;
  #L19528c.  v2:= v4.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L195290.  v2:= v2[v0] @kind object;
  #L195294.  call temp:= `b`(v2) @signature `Lorg/b/a/a/b;.b:()F` @kind virtual;
  #L19529a.  v2:= temp;
  #L19529c.  v3:= fcmpg(v1, v2);
  #L1952a0.  if v3 >= 0 then goto L195286;
  #L1952a4.  v4.`org.b.a.a.j.d` @type ^`int` := v0;
  #L1952a8.  v1:= v2;
  #L1952aa.  goto L195286;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.j` v1 @kind this) @signature `Lorg/b/a/a/j;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1952bc.  v0:= v1.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` @kind object;
  #L1952c0.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.j` v3 @kind this) @signature `Lorg/b/a/a/j;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1952d4.  v0:= 0I;
  #L1952d6.  v3.`org.b.a.a.j.e` @type ^`int` := v0;
  #L1952da.  v1:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1952de.  v1:= length @variable v1;
  #L1952e0.  if v0 >= v1 then goto L19530e;
  #L1952e4.  v1:= v3.`org.b.a.a.j.b` @type ^`org.b.a.a.b`[] @kind object;
  #L1952e8.  v1:= v1[v0] @kind object;
  #L1952ec.  call `d`(v1) @signature `Lorg/b/a/a/b;.d:()V` @kind virtual;
  #L1952f2.  v1:= v3.`org.b.a.a.j.c` @type ^`boolean`[] @kind object;
  #L1952f6.  v2:= 1I;
  #L1952f8.  v1[v0]:= v2 @kind boolean;
  #L1952fc.  v1:= v3.`org.b.a.a.j.e` @type ^`int`;
  #L195300.  v1:= v1 + 1;
  #L195304.  v3.`org.b.a.a.j.e` @type ^`int` := v1;
  #L195308.  v0:= v0 + 1;
  #L19530c.  goto L1952da;
  #L19530e.  v0:= -1I;
  #L195310.  v3.`org.b.a.a.j.d` @type ^`int` := v0;
  #L195314.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L195318.  v3.`org.b.a.a.j.a` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19531c.  return @kind void;
}

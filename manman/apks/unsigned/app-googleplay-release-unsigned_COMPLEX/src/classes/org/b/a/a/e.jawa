record `org.b.a.a.e` @kind class @AccessFlag PUBLIC extends `org.b.a.a.b` @kind class {
  `org.b.a.a.d.b` `org.b.a.a.e.a` @AccessFlag PRIVATE;
  `org.b.a.a.b$a` `org.b.a.a.e.b` @AccessFlag PRIVATE;
  `org.b.a.a.b.e` `org.b.a.a.e.c` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.a.e.d` @AccessFlag PRIVATE;
}
global `org.b.a.a.d.m` `@@org.b.a.a.e.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1944d0.  v0:= new `org.b.a.a.d.e`;
  #L1944d4.  call `<init>`(v0) @signature `Lorg/b/a/a/d/e;.<init>:()V` @kind direct;
  #L1944da.  `@@org.b.a.a.e.e` @type ^`org.b.a.a.d.m` := v0 @kind object;
  #L1944de.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.e` v2 @kind this) @signature `Lorg/b/a/a/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1944f0.  call `<init>`(v2) @signature `Lorg/b/a/a/b;.<init>:()V` @kind direct;
  #L1944f6.  v0:= new `org.b.a.a.d.b`;
  #L1944fa.  v1:= `@@org.b.a.a.e.e` @type ^`org.b.a.a.d.m` @kind object;
  #L1944fe.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/d/b;.<init>:(Lorg/b/a/a/d/m;)V` @kind direct;
  #L194504.  v2.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` := v0 @kind object;
  #L194508.  v0:= new `org.b.a.a.b.e`;
  #L19450c.  call `<init>`(v0) @signature `Lorg/b/a/a/b/e;.<init>:()V` @kind direct;
  #L194512.  v2.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` := v0 @kind object;
  #L194516.  v0:= 2I;
  #L194518.  v0:= new `byte`[v0];
  #L19451c.  v2.`org.b.a.a.e.d` @type ^`byte`[] := v0 @kind object;
  #L194520.  call `d`(v2) @signature `Lorg/b/a/a/e;.d:()V` @kind virtual;
  #L194526.  return @kind void;
}
procedure `java.lang.String` `a`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L194538.  v0:= `@@org.b.a.b.k` @type ^`java.lang.String` @kind object;
  #L19453c.  return v0 @kind object;
}
procedure `org.b.a.a.b$a` `a`(`org.b.a.a.e` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/b/a/a/e;.a:([BII)Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L194550.  v6:= 1I;
  #L194552.  v5:= 0I;
  #L194554.  v1:= v9 + v10 @kind int;
  #L194558.  v0:= v9;
  #L19455a.  if v0 >= v1 then goto L19457a;
  #L19455e.  v2:= v7.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L194562.  v3:= v8[v0] @kind byte;
  #L194566.  call temp:= `a`(v2, v3) @signature `Lorg/b/a/a/d/b;.a:(B)I` @kind virtual;
  #L19456c.  v2:= temp;
  #L19456e.  if v2 != v6 then goto L1945ca;
  #L194572.  v0:= `@@org.b.a.a.b$a.c` @type ^`org.b.a.a.b$a` @kind object;
  #L194576.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19457a.  v0:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L19457e.  v1:= v1 + -1;
  #L194582.  v1:= v8[v1] @kind byte;
  #L194586.  v0[v5]:= v1 @kind byte;
  #L19458a.  v0:= v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L19458e.  v1:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L194592.  if v0 != v1 then goto L1945c4;
  #L194596.  v0:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L19459a.  call temp:= `c`(v0) @signature `Lorg/b/a/a/b/e;.c:()Z` @kind virtual;
  #L1945a0.  v0:= temp;
  #L1945a2.  if v0 == 0 then goto L1945c4;
  #L1945a6.  call temp:= `b`(v7) @signature `Lorg/b/a/a/e;.b:()F` @kind virtual;
  #L1945ac.  v0:= temp;
  #L1945ae.  v1:= 1064514355I;
  #L1945b4.  v0:= fcmpl(v0, v1);
  #L1945b8.  if v0 <= 0 then goto L1945c4;
  #L1945bc.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1945c0.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1945c4.  v0:= v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1945c8.  return v0 @kind object;
  #L1945ca.  v3:= 2I;
  #L1945cc.  if v2 != v3 then goto L1945da;
  #L1945d0.  v0:= `@@org.b.a.a.b$a.b` @type ^`org.b.a.a.b$a` @kind object;
  #L1945d4.  v7.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L1945d8.  goto L19457a;
  #L1945da.  if v2 != 0 then goto L194608;
  #L1945de.  v2:= v7.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L1945e2.  call temp:= `a`(v2) @signature `Lorg/b/a/a/d/b;.a:()I` @kind virtual;
  #L1945e8.  v2:= temp;
  #L1945ea.  if v0 != v9 then goto L19460e;
  #L1945ee.  v3:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L1945f2.  v4:= v8[v9] @kind byte;
  #L1945f6.  v3[v6]:= v4 @kind byte;
  #L1945fa.  v3:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L1945fe.  v4:= v7.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L194602.  call `a`(v3, v4, v5, v2) @signature `Lorg/b/a/a/b/e;.a:([BII)V` @kind virtual;
  #L194608.  v0:= v0 + 1;
  #L19460c.  goto L19455a;
  #L19460e.  v3:= v7.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L194612.  v4:= v0 + -1;
  #L194616.  call `a`(v3, v8, v4, v2) @signature `Lorg/b/a/a/b/e;.a:([BII)V` @kind virtual;
  #L19461c.  goto L194608;
}
procedure `float` `b`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L194630.  v0:= v1.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L194634.  call temp:= `a`(v0) @signature `Lorg/b/a/a/b/e;.a:()F` @kind virtual;
  #L19463a.  v0:= temp;
  #L19463c.  return v0;
}
procedure `org.b.a.a.b$a` `c`(`org.b.a.a.e` v1 @kind this) @signature `Lorg/b/a/a/e;.c:()Lorg/b/a/a/b$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L194650.  v0:= v1.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` @kind object;
  #L194654.  return v0 @kind object;
}
procedure `void` `d`(`org.b.a.a.e` v2 @kind this) @signature `Lorg/b/a/a/e;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L194668.  v0:= v2.`org.b.a.a.e.a` @type ^`org.b.a.a.d.b` @kind object;
  #L19466c.  call `b`(v0) @signature `Lorg/b/a/a/d/b;.b:()V` @kind virtual;
  #L194672.  v0:= `@@org.b.a.a.b$a.a` @type ^`org.b.a.a.b$a` @kind object;
  #L194676.  v2.`org.b.a.a.e.b` @type ^`org.b.a.a.b$a` := v0 @kind object;
  #L19467a.  v0:= v2.`org.b.a.a.e.c` @type ^`org.b.a.a.b.e` @kind object;
  #L19467e.  call `b`(v0) @signature `Lorg/b/a/a/b/e;.b:()V` @kind virtual;
  #L194684.  v0:= v2.`org.b.a.a.e.d` @type ^`byte`[] @kind object;
  #L194688.  v1:= 0I;
  #L19468a.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([BB)V` @kind static;
  #L194690.  return @kind void;
}

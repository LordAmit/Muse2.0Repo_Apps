record `org.a.a.a.a.a.a` @kind class @AccessFlag PUBLIC extends `org.a.a.a.a.a` @kind class {
  `java.io.InputStream` `org.a.a.a.a.a.a.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.a.a.a.a.a.a.c` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.a.a.a.a.a.a.d` @AccessFlag PRIVATE_FINAL;
  `int` `org.a.a.a.a.a.a.e` @AccessFlag PRIVATE;
  `java.util.zip.Inflater` `org.a.a.a.a.a.a.f` @AccessFlag PRIVATE;
  `java.util.zip.CRC32` `org.a.a.a.a.a.a.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.a.a.a.a.a.a.h` @AccessFlag PRIVATE;
  `byte`[] `org.a.a.a.a.a.a.i` @AccessFlag PRIVATE_FINAL;
  `org.a.a.a.a.a.b` `org.a.a.a.a.a.a.j` @AccessFlag PRIVATE_FINAL;
}
global `boolean` `@@org.a.a.a.a.a.a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lorg/a/a/a/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L172658.  v0:= constclass @type ^`org.a.a.a.a.a.a` @kind object;
  #L17265c.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L172662.  v0:= temp;
  #L172664.  if v0 != 0 then goto L172670;
  #L172668.  v0:= 1I;
  #L17266a.  `@@org.a.a.a.a.a.a.a` @type ^`boolean` := v0 @kind boolean;
  #L17266e.  return @kind void;
  #L172670.  v0:= 0I;
  #L172672.  goto L17266a;
}
procedure `void` `<init>`(`org.a.a.a.a.a.a` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lorg/a/a/a/a/a/a;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L172684.  v0:= 0I;
  #L172686.  call `<init>`(v1, v2, v0) @signature `Lorg/a/a/a/a/a/a;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L17268c.  return @kind void;
}
procedure `void` `<init>`(`org.a.a.a.a.a.a` v3 @kind this, `java.io.InputStream` v4 @kind object, `boolean` v5 ) @signature `Lorg/a/a/a/a/a/a;.<init>:(Ljava/io/InputStream;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1726a0.  v2:= 0I;
  #L1726a2.  v1:= 1I;
  #L1726a4.  call `<init>`(v3) @signature `Lorg/a/a/a/a/a;.<init>:()V` @kind direct;
  #L1726aa.  v0:= 8192I;
  #L1726ae.  v0:= new `byte`[v0];
  #L1726b2.  v3.`org.a.a.a.a.a.a.d` @type ^`byte`[] := v0 @kind object;
  #L1726b6.  v3.`org.a.a.a.a.a.a.e` @type ^`int` := v2;
  #L1726ba.  v0:= new `java.util.zip.Inflater`;
  #L1726be.  call `<init>`(v0, v1) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L1726c4.  v3.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` := v0 @kind object;
  #L1726c8.  v0:= new `java.util.zip.CRC32`;
  #L1726cc.  call `<init>`(v0) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L1726d2.  v3.`org.a.a.a.a.a.a.g` @type ^`java.util.zip.CRC32` := v0 @kind object;
  #L1726d6.  v3.`org.a.a.a.a.a.a.h` @type ^`boolean` := v2 @kind boolean;
  #L1726da.  v0:= new `byte`[v1];
  #L1726de.  v3.`org.a.a.a.a.a.a.i` @type ^`byte`[] := v0 @kind object;
  #L1726e2.  v0:= new `org.a.a.a.a.a.b`;
  #L1726e6.  call `<init>`(v0) @signature `Lorg/a/a/a/a/a/b;.<init>:()V` @kind direct;
  #L1726ec.  v3.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` := v0 @kind object;
  #L1726f0.  call temp:= `markSupported`(v4) @signature `Ljava/io/InputStream;.markSupported:()Z` @kind virtual;
  #L1726f6.  v0:= temp;
  #L1726f8.  if v0 == 0 then goto L17270c;
  #L1726fc.  v3.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` := v4 @kind object;
  #L172700.  v3.`org.a.a.a.a.a.a.c` @type ^`boolean` := v5 @kind boolean;
  #L172704.  call temp:= `a`(v3, v1) @signature `Lorg/a/a/a/a/a/a;.a:(Z)Z` @kind direct;
  #L17270a.  return @kind void;
  #L17270c.  v0:= new `java.io.BufferedInputStream`;
  #L172710.  call `<init>`(v0, v4) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L172716.  v3.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` := v0 @kind object;
  #L17271a.  goto L172700;
}
procedure `boolean` `a`(`org.a.a.a.a.a.a` v10 @kind this, `boolean` v11 ) @signature `Lorg/a/a/a/a/a/a;.a:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L17272c.  v0:= 1I;
  #L17272e.  v1:= `@@org.a.a.a.a.a.a.a` @type ^`boolean` @kind boolean;
  #L172732.  if v1 != 0 then goto L17274e;
  #L172736.  if v11 != 0 then goto L17274e;
  #L17273a.  v1:= v10.`org.a.a.a.a.a.a.c` @type ^`boolean` @kind boolean;
  #L17273e.  if v1 != 0 then goto L17274e;
  #L172742.  v0:= new `java.lang.AssertionError`;
  #L172746.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L17274c.  throw v0;
  #L17274e.  v1:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L172752.  call temp:= `read`(v1) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L172758.  v1:= temp;
  #L17275a.  v2:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L17275e.  call temp:= `read`(v2) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L172764.  v2:= temp;
  #L172766.  v3:= -1I;
  #L172768.  if v1 != v3 then goto L172774;
  #L17276c.  if v11 != 0 then goto L172774;
  #L172770.  v0:= 0I;
  #L172772.  return v0;
  #L172774.  v3:= 31I;
  #L172778.  if v1 != v3 then goto L172784;
  #L17277c.  v1:= 139I;
  #L172780.  if v2 == v1 then goto L17279e;
  #L172784.  v1:= new `java.io.IOException`;
  #L172788.  if v11 == 0 then goto L172798;
  #L17278c.  v0:= "Input is not in the .gz format" @kind object;
  #L172790.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172796.  throw v1;
  #L172798.  v0:= "Garbage after a valid .gz stream" @kind object;
  #L17279c.  goto L172790;
  #L17279e.  v3:= new `java.io.DataInputStream`;
  #L1727a2.  v1:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L1727a6.  call `<init>`(v3, v1) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1727ac.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L1727b2.  v1:= temp;
  #L1727b4.  v2:= 8I;
  #L1727b8.  if v1 == v2 then goto L1727fa;
  #L1727bc.  v0:= new `java.io.IOException`;
  #L1727c0.  v2:= new `java.lang.StringBuilder`;
  #L1727c4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1727ca.  v3:= "Unsupported compression method " @kind object;
  #L1727ce.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1727d4.  v2:= temp @kind object;
  #L1727d6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1727dc.  v1:= temp @kind object;
  #L1727de.  v2:= " in the .gz header" @kind object;
  #L1727e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1727e8.  v1:= temp @kind object;
  #L1727ea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1727f0.  v1:= temp @kind object;
  #L1727f2.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1727f8.  throw v0;
  #L1727fa.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L172800.  v4:= temp;
  #L172802.  v1:= v4 ^& 224;
  #L172806.  if v1 == 0 then goto L17281a;
  #L17280a.  v0:= new `java.io.IOException`;
  #L17280e.  v1:= "Reserved flags are set in the .gz header" @kind object;
  #L172812.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172818.  throw v0;
  #L17281a.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L17281e.  call temp:= `b`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.b:(Ljava/io/DataInputStream;)J` @kind direct;
  #L172824.  v6:= temp @kind wide;
  #L172826.  v8:= 1000L;
  #L17282a.  v6:= v6 * v8 @kind long;
  #L17282c.  call `a`(v1, v6) @signature `Lorg/a/a/a/a/a/b;.a:(J)V` @kind virtual;
  #L172832.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L172838.  v1:= temp;
  #L17283a.  goto L172914;
  #L172840.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L172844.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17284a.  v2:= temp;
  #L17284c.  call `b`(v1, v2) @signature `Lorg/a/a/a/a/a/b;.b:(I)V` @kind virtual;
  #L172852.  v1:= v4 ^& 4;
  #L172856.  if v1 == 0 then goto L17289e;
  #L17285a.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L172860.  v1:= temp;
  #L172862.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L172868.  v2:= temp;
  #L17286a.  v2:= v2 ^< 8;
  #L17286e.  v1:= v1 ^| v2 @kind int;
  #L172870.  v2:= v1 + -1;
  #L172874.  if v1 <= 0 then goto L17289e;
  #L172878.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17287e.  v1:= v2;
  #L172880.  goto L172870;
  #L172882.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L172886.  v2:= 9I;
  #L17288a.  call `a`(v1, v2) @signature `Lorg/a/a/a/a/a/b;.a:(I)V` @kind virtual;
  #L172890.  goto L172840;
  #L172892.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L172896.  call `a`(v1, v0) @signature `Lorg/a/a/a/a/a/b;.a:(I)V` @kind virtual;
  #L17289c.  goto L172840;
  #L17289e.  v1:= v4 ^& 8;
  #L1728a2.  if v1 == 0 then goto L1728c6;
  #L1728a6.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L1728aa.  v2:= new `java.lang.String`;
  #L1728ae.  call temp:= `a`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.a:(Ljava/io/DataInputStream;)[B` @kind direct;
  #L1728b4.  v5:= temp @kind object;
  #L1728b6.  v6:= "ISO-8859-1" @kind object;
  #L1728ba.  call `<init>`(v2, v5, v6) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1728c0.  call `a`(v1, v2) @signature `Lorg/a/a/a/a/a/b;.a:(Ljava/lang/String;)V` @kind virtual;
  #L1728c6.  v1:= v4 ^& 16;
  #L1728ca.  if v1 == 0 then goto L1728ee;
  #L1728ce.  v1:= v10.`org.a.a.a.a.a.a.j` @type ^`org.a.a.a.a.a.b` @kind object;
  #L1728d2.  v2:= new `java.lang.String`;
  #L1728d6.  call temp:= `a`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.a:(Ljava/io/DataInputStream;)[B` @kind direct;
  #L1728dc.  v5:= temp @kind object;
  #L1728de.  v6:= "ISO-8859-1" @kind object;
  #L1728e2.  call `<init>`(v2, v5, v6) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1728e8.  call `b`(v1, v2) @signature `Lorg/a/a/a/a/a/b;.b:(Ljava/lang/String;)V` @kind virtual;
  #L1728ee.  v1:= v4 ^& 2;
  #L1728f2.  if v1 == 0 then goto L1728fc;
  #L1728f6.  call temp:= `readShort`(v3) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L1728fc.  v1:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L172900.  call `reset`(v1) @signature `Ljava/util/zip/Inflater;.reset:()V` @kind virtual;
  #L172906.  v1:= v10.`org.a.a.a.a.a.a.g` @type ^`java.util.zip.CRC32` @kind object;
  #L17290a.  call `reset`(v1) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L172910.  goto L172772;
  #L172914.  switch v1
                  | 2 => goto L172882
                  | 3 => goto L172840
                  | 4 => goto L172892
                  | else => goto L172840;
}
procedure `byte`[] `a`(`org.a.a.a.a.a.a` v2 @kind this, `java.io.DataInputStream` v3 @kind object) @signature `Lorg/a/a/a/a/a/a;.a:(Ljava/io/DataInputStream;)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L172938.  v0:= new `java.io.ByteArrayOutputStream`;
  #L17293c.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L172942.  call temp:= `readUnsignedByte`(v3) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L172948.  v1:= temp;
  #L17294a.  if v1 == 0 then goto L172956;
  #L17294e.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L172954.  goto L172942;
  #L172956.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L17295c.  v0:= temp @kind object;
  #L17295e.  return v0 @kind object;
}
procedure `long` `b`(`org.a.a.a.a.a.a` v5 @kind this, `java.io.DataInputStream` v6 @kind object) @signature `Lorg/a/a/a/a/a/a;.b:(Ljava/io/DataInputStream;)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L172970.  call temp:= `readUnsignedByte`(v6) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L172976.  v0:= temp;
  #L172978.  call temp:= `readUnsignedByte`(v6) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17297e.  v1:= temp;
  #L172980.  v1:= v1 ^< 8;
  #L172984.  v0:= v0 ^| v1 @kind int;
  #L172986.  call temp:= `readUnsignedByte`(v6) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17298c.  v1:= temp;
  #L17298e.  v1:= v1 ^< 16;
  #L172992.  v0:= v0 ^| v1 @kind int;
  #L172994.  v0:= (`long`) v0 @kind i2l;
  #L172996.  call temp:= `readUnsignedByte`(v6) @signature `Ljava/io/DataInputStream;.readUnsignedByte:()I` @kind virtual;
  #L17299c.  v2:= temp;
  #L17299e.  v2:= (`long`) v2 @kind i2l;
  #L1729a0.  v4:= 24I;
  #L1729a4.  v2:= v2 ^< v4 @kind long;
  #L1729a6.  v0:= v0 ^| v2 @kind long;
  #L1729a8.  return v0 @kind wide;
}
procedure `void` `close`(`org.a.a.a.a.a.a` v2 @kind this) @signature `Lorg/a/a/a/a/a/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1729bc.  v0:= v2.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L1729c0.  if v0 == 0 then goto L1729d4;
  #L1729c4.  v0:= v2.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L1729c8.  call `end`(v0) @signature `Ljava/util/zip/Inflater;.end:()V` @kind virtual;
  #L1729ce.  v0:= 0I;
  #L1729d0.  v2.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` := v0 @kind object;
  #L1729d4.  v0:= v2.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L1729d8.  v1:= `@@java.lang.System.in` @type ^`java.io.InputStream` @kind object;
  #L1729dc.  if v0 == v1 then goto L1729ea;
  #L1729e0.  v0:= v2.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L1729e4.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L1729ea.  return @kind void;
}
procedure `int` `read`(`org.a.a.a.a.a.a` v4 @kind this) @signature `Lorg/a/a/a/a/a/a;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1729fc.  v3:= 0I;
  #L1729fe.  v0:= -1I;
  #L172a00.  v1:= v4.`org.a.a.a.a.a.a.i` @type ^`byte`[] @kind object;
  #L172a04.  v2:= 1I;
  #L172a06.  call temp:= `read`(v4, v1, v3, v2) @signature `Lorg/a/a/a/a/a/a;.read:([BII)I` @kind virtual;
  #L172a0c.  v1:= temp;
  #L172a0e.  if v1 != v0 then goto L172a14;
  #L172a12.  return v0;
  #L172a14.  v0:= v4.`org.a.a.a.a.a.a.i` @type ^`byte`[] @kind object;
  #L172a18.  v0:= v0[v3] @kind byte;
  #L172a1c.  v0:= v0 ^& 255;
  #L172a20.  goto L172a12;
}
procedure `int` `read`(`org.a.a.a.a.a.a` v10 @kind this, `byte`[] v11 @kind object, `int` v12 , `int` v13 ) @signature `Lorg/a/a/a/a/a/a;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L172a34.  v0:= -1I;
  #L172a36.  v2:= 0I;
  #L172a38.  v1:= v10.`org.a.a.a.a.a.a.h` @type ^`boolean` @kind boolean;
  #L172a3c.  if v1 == 0 then goto L172a42;
  #L172a40.  return v0;
  #L172a42.  v1:= v2;
  #L172a44.  if v13 <= 0 then goto L172bd0;
  #L172a48.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L172a4c.  call temp:= `needsInput`(v3) @signature `Ljava/util/zip/Inflater;.needsInput:()Z` @kind virtual;
  #L172a52.  v3:= temp;
  #L172a54.  if v3 == 0 then goto L172aa2;
  #L172a58.  v3:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L172a5c.  v4:= v10.`org.a.a.a.a.a.a.d` @type ^`byte`[] @kind object;
  #L172a60.  v4:= length @variable v4;
  #L172a62.  call `mark`(v3, v4) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L172a68.  v3:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L172a6c.  v4:= v10.`org.a.a.a.a.a.a.d` @type ^`byte`[] @kind object;
  #L172a70.  call temp:= `read`(v3, v4) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L172a76.  v3:= temp;
  #L172a78.  v10.`org.a.a.a.a.a.a.e` @type ^`int` := v3;
  #L172a7c.  v3:= v10.`org.a.a.a.a.a.a.e` @type ^`int`;
  #L172a80.  if v3 != v0 then goto L172a90;
  #L172a84.  v0:= new `java.io.EOFException`;
  #L172a88.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L172a8e.  throw v0;
  #L172a90.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L172a94.  v4:= v10.`org.a.a.a.a.a.a.d` @type ^`byte`[] @kind object;
  #L172a98.  v5:= v10.`org.a.a.a.a.a.a.e` @type ^`int`;
  #L172a9c.  call `setInput`(v3, v4, v2, v5) @signature `Ljava/util/zip/Inflater;.setInput:([BII)V` @kind virtual;
  #Try_start0.  
  #L172aa2.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L172aa6.  call temp:= `inflate`(v3, v11, v12, v13) @signature `Ljava/util/zip/Inflater;.inflate:([BII)I` @kind virtual;
  #Try_end0.  
  #L172aac.  v3:= temp;
  #L172aae.  v4:= v10.`org.a.a.a.a.a.a.g` @type ^`java.util.zip.CRC32` @kind object;
  #L172ab2.  call `update`(v4, v11, v12, v3) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L172ab8.  v12:= v12 + v3 @kind int;
  #L172aba.  v13:= v13 - v3 @kind int;
  #L172abc.  v1:= v1 + v3 @kind int;
  #L172abe.  call `a`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.a:(I)V` @kind virtual;
  #L172ac4.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L172ac8.  call temp:= `finished`(v3) @signature `Ljava/util/zip/Inflater;.finished:()Z` @kind virtual;
  #L172ace.  v3:= temp;
  #L172ad0.  if v3 == 0 then goto L172a44;
  #L172ad4.  v3:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L172ad8.  call `reset`(v3) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L172ade.  v3:= v10.`org.a.a.a.a.a.a.e` @type ^`int`;
  #L172ae2.  v4:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L172ae6.  call temp:= `getRemaining`(v4) @signature `Ljava/util/zip/Inflater;.getRemaining:()I` @kind virtual;
  #L172aec.  v4:= temp;
  #L172aee.  v3:= v3 - v4 @kind int;
  #L172af0.  v4:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L172af4.  v6:= (`long`) v3 @kind i2l;
  #L172af6.  call temp:= `skip`(v4, v6) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L172afc.  v4:= temp @kind wide;
  #L172afe.  v6:= (`long`) v3 @kind i2l;
  #L172b00.  v3:= lcmp(v4, v6);
  #L172b04.  if v3 == 0 then goto L172b26;
  #L172b08.  v0:= new `java.io.IOException`;
  #L172b0c.  call `<init>`(v0) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L172b12.  throw v0;
  #L172b14.  v0:= Exception @type ^`java.util.zip.DataFormatException` @kind object;
  #L172b16.  v0:= new `java.io.IOException`;
  #L172b1a.  v1:= "Gzip-compressed data is corrupt" @kind object;
  #L172b1e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172b24.  throw v0;
  #L172b26.  v10.`org.a.a.a.a.a.a.e` @type ^`int` := v2;
  #L172b2a.  v3:= new `java.io.DataInputStream`;
  #L172b2e.  v4:= v10.`org.a.a.a.a.a.a.b` @type ^`java.io.InputStream` @kind object;
  #L172b32.  call `<init>`(v3, v4) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L172b38.  call temp:= `b`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.b:(Ljava/io/DataInputStream;)J` @kind direct;
  #L172b3e.  v4:= temp @kind wide;
  #L172b40.  v6:= v10.`org.a.a.a.a.a.a.g` @type ^`java.util.zip.CRC32` @kind object;
  #L172b44.  call temp:= `getValue`(v6) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L172b4a.  v6:= temp @kind wide;
  #L172b4c.  v4:= lcmp(v4, v6);
  #L172b50.  if v4 == 0 then goto L172b64;
  #L172b54.  v0:= new `java.io.IOException`;
  #L172b58.  v1:= "Gzip-compressed data is corrupt (CRC32 error)" @kind object;
  #L172b5c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172b62.  throw v0;
  #L172b64.  call temp:= `b`(v10, v3) @signature `Lorg/a/a/a/a/a/a;.b:(Ljava/io/DataInputStream;)J` @kind direct;
  #L172b6a.  v4:= temp @kind wide;
  #L172b6c.  v3:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L172b70.  call temp:= `getBytesWritten`(v3) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L172b76.  v6:= temp @kind wide;
  #L172b78.  v8:= 4294967295L;
  #L172b82.  v6:= v6 ^& v8 @kind long;
  #L172b84.  v3:= lcmp(v4, v6);
  #L172b88.  if v3 == 0 then goto L172b9c;
  #L172b8c.  v0:= new `java.io.IOException`;
  #L172b90.  v1:= "Gzip-compressed data is corrupt(uncompressed size mismatch)" @kind object;
  #L172b94.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172b9a.  throw v0;
  #L172b9c.  v3:= v10.`org.a.a.a.a.a.a.c` @type ^`boolean` @kind boolean;
  #L172ba0.  if v3 == 0 then goto L172bb0;
  #L172ba4.  call temp:= `a`(v10, v2) @signature `Lorg/a/a/a/a/a/a;.a:(Z)Z` @kind direct;
  #L172baa.  v3:= temp;
  #L172bac.  if v3 != 0 then goto L172a44;
  #L172bb0.  v2:= v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` @kind object;
  #L172bb4.  call `end`(v2) @signature `Ljava/util/zip/Inflater;.end:()V` @kind virtual;
  #L172bba.  v2:= 0I;
  #L172bbc.  v10.`org.a.a.a.a.a.a.f` @type ^`java.util.zip.Inflater` := v2 @kind object;
  #L172bc0.  v2:= 1I;
  #L172bc2.  v10.`org.a.a.a.a.a.a.h` @type ^`boolean` := v2 @kind boolean;
  #L172bc6.  if v1 == 0 then goto L172a40;
  #L172bca.  v0:= v1;
  #L172bcc.  goto L172a40;
  #L172bd0.  v0:= v1;
  #L172bd2.  goto L172a40;
  catch `java.util.zip.DataFormatException` @[Try_start0..Try_end0] goto L172b14;
}

record `org.jsoup.parser.Tokeniser` @kind class @AccessFlag FINAL {
  `org.jsoup.parser.Token$Character` `org.jsoup.parser.Tokeniser.charPending` @AccessFlag ;
  `char`[] `org.jsoup.parser.Tokeniser.charRefHolder` @AccessFlag PRIVATE_FINAL;
  `java.lang.StringBuilder` `org.jsoup.parser.Tokeniser.charsBuilder` @AccessFlag PRIVATE;
  `java.lang.String` `org.jsoup.parser.Tokeniser.charsString` @AccessFlag PRIVATE;
  `org.jsoup.parser.Token$Comment` `org.jsoup.parser.Tokeniser.commentPending` @AccessFlag ;
  `java.lang.StringBuilder` `org.jsoup.parser.Tokeniser.dataBuffer` @AccessFlag ;
  `org.jsoup.parser.Token$Doctype` `org.jsoup.parser.Tokeniser.doctypePending` @AccessFlag ;
  `org.jsoup.parser.Token` `org.jsoup.parser.Tokeniser.emitPending` @AccessFlag PRIVATE;
  `org.jsoup.parser.Token$EndTag` `org.jsoup.parser.Tokeniser.endPending` @AccessFlag ;
  `org.jsoup.parser.ParseErrorList` `org.jsoup.parser.Tokeniser.errors` @AccessFlag PRIVATE;
  `boolean` `org.jsoup.parser.Tokeniser.isEmitPending` @AccessFlag PRIVATE;
  `java.lang.String` `org.jsoup.parser.Tokeniser.lastStartTag` @AccessFlag PRIVATE;
  `org.jsoup.parser.CharacterReader` `org.jsoup.parser.Tokeniser.reader` @AccessFlag PRIVATE;
  `boolean` `org.jsoup.parser.Tokeniser.selfClosingFlagAcknowledged` @AccessFlag PRIVATE;
  `org.jsoup.parser.Token$StartTag` `org.jsoup.parser.Tokeniser.startPending` @AccessFlag ;
  `org.jsoup.parser.TokeniserState` `org.jsoup.parser.Tokeniser.state` @AccessFlag PRIVATE;
  `org.jsoup.parser.Token$Tag` `org.jsoup.parser.Tokeniser.tagPending` @AccessFlag ;
}
global `char`[] `@@org.jsoup.parser.Tokeniser.notCharRefCharsSorted` @AccessFlag PRIVATE_STATIC_FINAL;
global `char` `@@org.jsoup.parser.Tokeniser.replacementChar` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/jsoup/parser/Tokeniser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.jsoup.parser.Tokeniser` v3 @kind this, `org.jsoup.parser.CharacterReader` v4 @kind object @name `reader`, `org.jsoup.parser.ParseErrorList` v5 @kind object @name `errors`) @signature `Lorg/jsoup/parser/Tokeniser;.<init>:(Lorg/jsoup/parser/CharacterReader;Lorg/jsoup/parser/ParseErrorList;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `characterReferenceError`(`org.jsoup.parser.Tokeniser` v6 @kind this, `java.lang.String` v7 @kind object @name `message`) @signature `Lorg/jsoup/parser/Tokeniser;.characterReferenceError:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `error`(`org.jsoup.parser.Tokeniser` v3 @kind this, `java.lang.String` v4 @kind object @name `errorMsg`) @signature `Lorg/jsoup/parser/Tokeniser;.error:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `acknowledgeSelfClosingFlag`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.acknowledgeSelfClosingFlag:()V` @AccessFlag  {

  # return;
}
procedure `void` `advanceTransition`(`org.jsoup.parser.Tokeniser` v1 @kind this, `org.jsoup.parser.TokeniserState` v2 @kind object @name `state`) @signature `Lorg/jsoup/parser/Tokeniser;.advanceTransition:(Lorg/jsoup/parser/TokeniserState;)V` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `appropriateEndTagName`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.appropriateEndTagName:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `char`[] `consumeCharacterReference`(`org.jsoup.parser.Tokeniser` v13 @kind this, `java.lang.Character` v14 @kind object @name `additionalAllowedCharacter`, `boolean` v15 @name `inAttribute`) @signature `Lorg/jsoup/parser/Tokeniser;.consumeCharacterReference:(Ljava/lang/Character;Z)[C` @AccessFlag  {

  # return;
}
procedure `void` `createCommentPending`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.createCommentPending:()V` @AccessFlag  {

  # return;
}
procedure `void` `createDoctypePending`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.createDoctypePending:()V` @AccessFlag  {

  # return;
}
procedure `org.jsoup.parser.Token$Tag` `createTagPending`(`org.jsoup.parser.Tokeniser` v1 @kind this, `boolean` v2 @name `start`) @signature `Lorg/jsoup/parser/Tokeniser;.createTagPending:(Z)Lorg/jsoup/parser/Token$Tag;` @AccessFlag  {

  # return;
}
procedure `void` `createTempBuffer`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.createTempBuffer:()V` @AccessFlag  {

  # return;
}
procedure `boolean` `currentNodeInHtmlNS`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.currentNodeInHtmlNS:()Z` @AccessFlag  {

  # return;
}
procedure `void` `emit`(`org.jsoup.parser.Tokeniser` v1 @kind this, `char` v2 @name `c`) @signature `Lorg/jsoup/parser/Tokeniser;.emit:(C)V` @AccessFlag  {

  # return;
}
procedure `void` `emit`(`org.jsoup.parser.Tokeniser` v2 @kind this, `java.lang.String` v3 @kind object @name `str`) @signature `Lorg/jsoup/parser/Tokeniser;.emit:(Ljava/lang/String;)V` @AccessFlag  {

  # return;
}
procedure `void` `emit`(`org.jsoup.parser.Tokeniser` v4 @kind this, `org.jsoup.parser.Token` v5 @kind object @name `token`) @signature `Lorg/jsoup/parser/Tokeniser;.emit:(Lorg/jsoup/parser/Token;)V` @AccessFlag  {

  # return;
}
procedure `void` `emit`(`org.jsoup.parser.Tokeniser` v1 @kind this, `char`[] v2 @kind object @name `chars`) @signature `Lorg/jsoup/parser/Tokeniser;.emit:([C)V` @AccessFlag  {

  # return;
}
procedure `void` `emitCommentPending`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.emitCommentPending:()V` @AccessFlag  {

  # return;
}
procedure `void` `emitDoctypePending`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.emitDoctypePending:()V` @AccessFlag  {

  # return;
}
procedure `void` `emitTagPending`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.emitTagPending:()V` @AccessFlag  {

  # return;
}
procedure `void` `eofError`(`org.jsoup.parser.Tokeniser` v6 @kind this, `org.jsoup.parser.TokeniserState` v7 @kind object @name `state`) @signature `Lorg/jsoup/parser/Tokeniser;.eofError:(Lorg/jsoup/parser/TokeniserState;)V` @AccessFlag  {

  # return;
}
procedure `void` `error`(`org.jsoup.parser.Tokeniser` v7 @kind this, `org.jsoup.parser.TokeniserState` v8 @kind object @name `state`) @signature `Lorg/jsoup/parser/Tokeniser;.error:(Lorg/jsoup/parser/TokeniserState;)V` @AccessFlag  {

  # return;
}
procedure `org.jsoup.parser.TokeniserState` `getState`(`org.jsoup.parser.Tokeniser` v1 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.getState:()Lorg/jsoup/parser/TokeniserState;` @AccessFlag  {

  # return;
}
procedure `boolean` `isAppropriateEndTagToken`(`org.jsoup.parser.Tokeniser` v2 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.isAppropriateEndTagToken:()Z` @AccessFlag  {

  # return;
}
procedure `org.jsoup.parser.Token` `read`(`org.jsoup.parser.Tokeniser` v6 @kind this) @signature `Lorg/jsoup/parser/Tokeniser;.read:()Lorg/jsoup/parser/Token;` @AccessFlag  {

  # return;
}
procedure `void` `transition`(`org.jsoup.parser.Tokeniser` v0 @kind this, `org.jsoup.parser.TokeniserState` v1 @kind object @name `state`) @signature `Lorg/jsoup/parser/Tokeniser;.transition:(Lorg/jsoup/parser/TokeniserState;)V` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `unescapeEntities`(`org.jsoup.parser.Tokeniser` v4 @kind this, `boolean` v5 @name `inAttribute`) @signature `Lorg/jsoup/parser/Tokeniser;.unescapeEntities:(Z)Ljava/lang/String;` @AccessFlag  {

  # return;
}

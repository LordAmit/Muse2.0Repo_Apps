record `org.jsoup.examples.HtmlToPlainText$FormattingVisitor` @kind class @AccessFlag  extends `org.jsoup.select.NodeVisitor` @kind interface {
  `java.lang.StringBuilder` `org.jsoup.examples.HtmlToPlainText$FormattingVisitor.accum` @AccessFlag PRIVATE;
  `org.jsoup.examples.HtmlToPlainText` `org.jsoup.examples.HtmlToPlainText$FormattingVisitor.this$0` @AccessFlag FINAL_SYNTHETIC;
  `int` `org.jsoup.examples.HtmlToPlainText$FormattingVisitor.width` @AccessFlag PRIVATE;
}
global `int` `@@org.jsoup.examples.HtmlToPlainText$FormattingVisitor.maxWidth` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.jsoup.examples.HtmlToPlainText$FormattingVisitor` v1 @kind this, `org.jsoup.examples.HtmlToPlainText` v2 @kind object) @signature `Lorg/jsoup/examples/HtmlToPlainText$FormattingVisitor;.<init>:(Lorg/jsoup/examples/HtmlToPlainText;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.jsoup.examples.HtmlToPlainText$FormattingVisitor` v0 @kind this, `org.jsoup.examples.HtmlToPlainText` v1 @kind object @name `x0`, `org.jsoup.examples.HtmlToPlainText$1` v2 @kind object @name `x1`) @signature `Lorg/jsoup/examples/HtmlToPlainText$FormattingVisitor;.<init>:(Lorg/jsoup/examples/HtmlToPlainText;Lorg/jsoup/examples/HtmlToPlainText$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `append`(`org.jsoup.examples.HtmlToPlainText$FormattingVisitor` v10 @kind this, `java.lang.String` v11 @kind object @name `text`) @signature `Lorg/jsoup/examples/HtmlToPlainText$FormattingVisitor;.append:(Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `head`(`org.jsoup.examples.HtmlToPlainText$FormattingVisitor` v4 @kind this, `org.jsoup.nodes.Node` v5 @kind object @name `node`, `int` v6 @name `depth`) @signature `Lorg/jsoup/examples/HtmlToPlainText$FormattingVisitor;.head:(Lorg/jsoup/nodes/Node;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `tail`(`org.jsoup.examples.HtmlToPlainText$FormattingVisitor` v6 @kind this, `org.jsoup.nodes.Node` v7 @kind object @name `node`, `int` v8 @name `depth`) @signature `Lorg/jsoup/examples/HtmlToPlainText$FormattingVisitor;.tail:(Lorg/jsoup/nodes/Node;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.jsoup.examples.HtmlToPlainText$FormattingVisitor` v1 @kind this) @signature `Lorg/jsoup/examples/HtmlToPlainText$FormattingVisitor;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}

record `org.jsoup.parser.ParseErrorList` @kind class @AccessFlag  extends `java.util.ArrayList` @kind class {
  `int` `org.jsoup.parser.ParseErrorList.maxSize` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.jsoup.parser.ParseErrorList.INITIAL_CAPACITY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.jsoup.parser.ParseErrorList` v0 @kind this, `int` v1 @name `initialCapacity`, `int` v2 @name `maxSize`) @signature `Lorg/jsoup/parser/ParseErrorList;.<init>:(II)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `org.jsoup.parser.ParseErrorList` `noTracking`() @signature `Lorg/jsoup/parser/ParseErrorList;.noTracking:()Lorg/jsoup/parser/ParseErrorList;` @AccessFlag STATIC {

  # return;
}
procedure `org.jsoup.parser.ParseErrorList` `tracking`(`int` v2 @name `maxSize`) @signature `Lorg/jsoup/parser/ParseErrorList;.tracking:(I)Lorg/jsoup/parser/ParseErrorList;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `canAddError`(`org.jsoup.parser.ParseErrorList` v2 @kind this) @signature `Lorg/jsoup/parser/ParseErrorList;.canAddError:()Z` @AccessFlag  {

  # return;
}
procedure `int` `getMaxSize`(`org.jsoup.parser.ParseErrorList` v1 @kind this) @signature `Lorg/jsoup/parser/ParseErrorList;.getMaxSize:()I` @AccessFlag  {

  # return;
}

record `org.jsoup.nodes.Entities` @kind class @AccessFlag PUBLIC {
}
global `java.util.Map` `@@org.jsoup.nodes.Entities.base` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@org.jsoup.nodes.Entities.baseByVal` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@org.jsoup.nodes.Entities.full` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@org.jsoup.nodes.Entities.fullByVal` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object`[][] `@@org.jsoup.nodes.Entities.xhtmlArray` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@org.jsoup.nodes.Entities.xhtmlByVal` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/jsoup/nodes/Entities;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.jsoup.nodes.Entities` v0 @kind this) @signature `Lorg/jsoup/nodes/Entities;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.util.Map` `access$000`() @signature `Lorg/jsoup/nodes/Entities;.access$000:()Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `access$100`() @signature `Lorg/jsoup/nodes/Entities;.access$100:()Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `access$200`() @signature `Lorg/jsoup/nodes/Entities;.access$200:()Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `canEncode`(`org.jsoup.nodes.Entities$CoreCharset` v3 @kind object @name `charset`, `char` v4 @name `c`, `java.nio.charset.CharsetEncoder` v5 @kind object @name `fallback`) @signature `Lorg/jsoup/nodes/Entities;.canEncode:(Lorg/jsoup/nodes/Entities$CoreCharset;CLjava/nio/charset/CharsetEncoder;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `escape`(`java.lang.String` v7 @kind object @name `string`, `org.jsoup.nodes.Document$OutputSettings` v8 @kind object @name `out`) @signature `Lorg/jsoup/nodes/Entities;.escape:(Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `void` `escape`(`java.lang.Appendable` v12 @kind object @name `accum`, `java.lang.String` v13 @kind object @name `string`, `org.jsoup.nodes.Document$OutputSettings` v14 @kind object @name `out`, `boolean` v15 @name `inAttribute`, `boolean` v16 @name `normaliseWhite`, `boolean` v17 @name `stripLeadingWhite`) @signature `Lorg/jsoup/nodes/Entities;.escape:(Ljava/lang/Appendable;Ljava/lang/String;Lorg/jsoup/nodes/Document$OutputSettings;ZZZ)V` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Character` `getCharacterByName`(`java.lang.String` v1 @kind object @name `name`) @signature `Lorg/jsoup/nodes/Entities;.getCharacterByName:(Ljava/lang/String;)Ljava/lang/Character;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isBaseNamedEntity`(`java.lang.String` v1 @kind object @name `name`) @signature `Lorg/jsoup/nodes/Entities;.isBaseNamedEntity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isNamedEntity`(`java.lang.String` v1 @kind object @name `name`) @signature `Lorg/jsoup/nodes/Entities;.isNamedEntity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.util.Map` `loadEntities`(`java.lang.String` v10 @kind object @name `filename`) @signature `Lorg/jsoup/nodes/Entities;.loadEntities:(Ljava/lang/String;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Map` `toCharacterKey`(`java.util.Map` v6 @kind object) @signature `Lorg/jsoup/nodes/Entities;.toCharacterKey:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `unescape`(`java.lang.String` v1 @kind object @name `string`) @signature `Lorg/jsoup/nodes/Entities;.unescape:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `unescape`(`java.lang.String` v1 @kind object @name `string`, `boolean` v2 @name `strict`) @signature `Lorg/jsoup/nodes/Entities;.unescape:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}

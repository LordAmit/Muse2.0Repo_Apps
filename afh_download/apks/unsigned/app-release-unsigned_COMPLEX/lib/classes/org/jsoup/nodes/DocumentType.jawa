record `org.jsoup.nodes.DocumentType` @kind class @AccessFlag PUBLIC extends `org.jsoup.nodes.Node` @kind class {
}
global `java.lang.String` `@@org.jsoup.nodes.DocumentType.NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.jsoup.nodes.DocumentType.PUBLIC_ID` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.jsoup.nodes.DocumentType.SYSTEM_ID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.jsoup.nodes.DocumentType` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `publicId`, `java.lang.String` v4 @kind object @name `systemId`, `java.lang.String` v5 @kind object @name `baseUri`) @signature `Lorg/jsoup/nodes/DocumentType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `has`(`org.jsoup.nodes.DocumentType` v1 @kind this, `java.lang.String` v2 @kind object @name `attribute`) @signature `Lorg/jsoup/nodes/DocumentType;.has:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `nodeName`(`org.jsoup.nodes.DocumentType` v1 @kind this) @signature `Lorg/jsoup/nodes/DocumentType;.nodeName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `outerHtmlHead`(`org.jsoup.nodes.DocumentType` v3 @kind this, `java.lang.Appendable` v4 @kind object @name `accum`, `int` v5 @name `depth`, `org.jsoup.nodes.Document$OutputSettings` v6 @kind object @name `out`) @signature `Lorg/jsoup/nodes/DocumentType;.outerHtmlHead:(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V` @AccessFlag  {

  # return;
}
procedure `void` `outerHtmlTail`(`org.jsoup.nodes.DocumentType` v0 @kind this, `java.lang.Appendable` v1 @kind object @name `accum`, `int` v2 @name `depth`, `org.jsoup.nodes.Document$OutputSettings` v3 @kind object @name `out`) @signature `Lorg/jsoup/nodes/DocumentType;.outerHtmlTail:(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V` @AccessFlag  {

  # return;
}

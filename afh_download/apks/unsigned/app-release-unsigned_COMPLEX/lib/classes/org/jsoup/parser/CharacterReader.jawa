record `org.jsoup.parser.CharacterReader` @kind class @AccessFlag FINAL {
  `char`[] `org.jsoup.parser.CharacterReader.input` @AccessFlag PRIVATE_FINAL;
  `int` `org.jsoup.parser.CharacterReader.length` @AccessFlag PRIVATE_FINAL;
  `int` `org.jsoup.parser.CharacterReader.mark` @AccessFlag PRIVATE;
  `int` `org.jsoup.parser.CharacterReader.pos` @AccessFlag PRIVATE;
  `java.lang.String`[] `org.jsoup.parser.CharacterReader.stringCache` @AccessFlag PRIVATE_FINAL;
}
global `char` `@@org.jsoup.parser.CharacterReader.EOF` @AccessFlag STATIC_FINAL;
global `int` `@@org.jsoup.parser.CharacterReader.maxCacheLen` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.jsoup.parser.CharacterReader` v1 @kind this, `java.lang.String` v2 @kind object @name `input`) @signature `Lorg/jsoup/parser/CharacterReader;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `cacheString`(`org.jsoup.parser.CharacterReader` v10 @kind this, `int` v11 @name `start`, `int` v12 @name `count`) @signature `Lorg/jsoup/parser/CharacterReader;.cacheString:(II)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `advance`(`org.jsoup.parser.CharacterReader` v1 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.advance:()V` @AccessFlag  {

  # return;
}
procedure `char` `consume`(`org.jsoup.parser.CharacterReader` v3 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consume:()C` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeAsString`(`org.jsoup.parser.CharacterReader` v4 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consumeAsString:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeData`(`org.jsoup.parser.CharacterReader` v5 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consumeData:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeDigitSequence`(`org.jsoup.parser.CharacterReader` v4 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consumeDigitSequence:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeHexSequence`(`org.jsoup.parser.CharacterReader` v4 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consumeHexSequence:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeLetterSequence`(`org.jsoup.parser.CharacterReader` v4 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consumeLetterSequence:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeLetterThenDigitSequence`(`org.jsoup.parser.CharacterReader` v4 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consumeLetterThenDigitSequence:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeTagName`(`org.jsoup.parser.CharacterReader` v5 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consumeTagName:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeTo`(`org.jsoup.parser.CharacterReader` v3 @kind this, `char` v4 @name `c`) @signature `Lorg/jsoup/parser/CharacterReader;.consumeTo:(C)Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeTo`(`org.jsoup.parser.CharacterReader` v3 @kind this, `java.lang.String` v4 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.consumeTo:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeToAny`(`org.jsoup.parser.CharacterReader` v7 @kind this, `char`[] v8 @kind object @name `chars`) @signature `Lorg/jsoup/parser/CharacterReader;.consumeToAny:([C)Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeToAnySorted`(`org.jsoup.parser.CharacterReader` v4 @kind this, `char`[] v5 @kind object @name `chars`) @signature `Lorg/jsoup/parser/CharacterReader;.consumeToAnySorted:([C)Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `consumeToEnd`(`org.jsoup.parser.CharacterReader` v4 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.consumeToEnd:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `boolean` `containsIgnoreCase`(`org.jsoup.parser.CharacterReader` v4 @kind this, `java.lang.String` v5 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.containsIgnoreCase:(Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `char` `current`(`org.jsoup.parser.CharacterReader` v2 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.current:()C` @AccessFlag  {

  # return;
}
procedure `boolean` `isEmpty`(`org.jsoup.parser.CharacterReader` v2 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.isEmpty:()Z` @AccessFlag  {

  # return;
}
procedure `void` `mark`(`org.jsoup.parser.CharacterReader` v1 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.mark:()V` @AccessFlag  {

  # return;
}
procedure `boolean` `matchConsume`(`org.jsoup.parser.CharacterReader` v2 @kind this, `java.lang.String` v3 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.matchConsume:(Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `matchConsumeIgnoreCase`(`org.jsoup.parser.CharacterReader` v2 @kind this, `java.lang.String` v3 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.matchConsumeIgnoreCase:(Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `matches`(`org.jsoup.parser.CharacterReader` v2 @kind this, `char` v3 @name `c`) @signature `Lorg/jsoup/parser/CharacterReader;.matches:(C)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `matches`(`org.jsoup.parser.CharacterReader` v6 @kind this, `java.lang.String` v7 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.matches:(Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `matchesAny`(`org.jsoup.parser.CharacterReader` v5 @kind this, `char`[] v6 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.matchesAny:([C)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `matchesAnySorted`(`org.jsoup.parser.CharacterReader` v2 @kind this, `char`[] v3 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.matchesAnySorted:([C)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `matchesDigit`(`org.jsoup.parser.CharacterReader` v4 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.matchesDigit:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `matchesIgnoreCase`(`org.jsoup.parser.CharacterReader` v7 @kind this, `java.lang.String` v8 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.matchesIgnoreCase:(Ljava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `matchesLetter`(`org.jsoup.parser.CharacterReader` v4 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.matchesLetter:()Z` @AccessFlag  {

  # return;
}
procedure `int` `nextIndexOf`(`org.jsoup.parser.CharacterReader` v2 @kind this, `char` v3 @name `c`) @signature `Lorg/jsoup/parser/CharacterReader;.nextIndexOf:(C)I` @AccessFlag  {

  # return;
}
procedure `int` `nextIndexOf`(`org.jsoup.parser.CharacterReader` v7 @kind this, `java.lang.CharSequence` v8 @kind object @name `seq`) @signature `Lorg/jsoup/parser/CharacterReader;.nextIndexOf:(Ljava/lang/CharSequence;)I` @AccessFlag  {

  # return;
}
procedure `int` `pos`(`org.jsoup.parser.CharacterReader` v1 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.pos:()I` @AccessFlag  {

  # return;
}
procedure `boolean` `rangeEquals`(`org.jsoup.parser.CharacterReader` v9 @kind this, `int` v10 @name `start`, `int` v11 @name `count`, `java.lang.String` v12 @kind object @name `cached`) @signature `Lorg/jsoup/parser/CharacterReader;.rangeEquals:(IILjava/lang/String;)Z` @AccessFlag  {

  # return;
}
procedure `void` `rewindToMark`(`org.jsoup.parser.CharacterReader` v1 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.rewindToMark:()V` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `toString`(`org.jsoup.parser.CharacterReader` v5 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `unconsume`(`org.jsoup.parser.CharacterReader` v1 @kind this) @signature `Lorg/jsoup/parser/CharacterReader;.unconsume:()V` @AccessFlag  {

  # return;
}

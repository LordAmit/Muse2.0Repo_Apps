record `org.jsoup.select.CombiningEvaluator$Or` @kind class @AccessFlag FINAL extends `org.jsoup.select.CombiningEvaluator` @kind class {
}
procedure `void` `<init>`(`org.jsoup.select.CombiningEvaluator$Or` v0 @kind this) @signature `Lorg/jsoup/select/CombiningEvaluator$Or;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.jsoup.select.CombiningEvaluator$Or` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lorg/jsoup/select/CombiningEvaluator$Or;.<init>:(Ljava/util/Collection;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`org.jsoup.select.CombiningEvaluator$Or` v1 @kind this, `org.jsoup.select.Evaluator` v2 @kind object @name `e`) @signature `Lorg/jsoup/select/CombiningEvaluator$Or;.add:(Lorg/jsoup/select/Evaluator;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `matches`(`org.jsoup.select.CombiningEvaluator$Or` v3 @kind this, `org.jsoup.nodes.Element` v4 @kind object @name `root`, `org.jsoup.nodes.Element` v5 @kind object @name `node`) @signature `Lorg/jsoup/select/CombiningEvaluator$Or;.matches:(Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.jsoup.select.CombiningEvaluator$Or` v4 @kind this) @signature `Lorg/jsoup/select/CombiningEvaluator$Or;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}

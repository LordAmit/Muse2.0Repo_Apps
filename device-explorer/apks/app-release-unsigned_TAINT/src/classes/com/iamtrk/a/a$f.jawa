record `com.iamtrk.a.a$f` @kind class @AccessFlag PUBLIC extends `com.iamtrk.a.a$j` @kind class {
}
procedure `void` `<init>`(`com.iamtrk.a.a$f` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/iamtrk/a/a$f;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L090ce8.  call `<init>`(v0, v1, v2) @signature `Lcom/iamtrk/a/a$j;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L090cee.  return @kind void;
}
procedure `java.util.List` `a`(`com.iamtrk.a.a$f` v5 @kind this) @signature `Lcom/iamtrk/a/a$f;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L090d00.  v0:= new `java.util.ArrayList`;
  #L090d04.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L090d0a.  v1:= new `com.iamtrk.a.a$k`;
  #L090d0e.  v2:= "Encryption" @kind object;
  #L090d12.  v3:= "ro.crypto.state" @kind object;
  #L090d16.  v4:= "" @kind object;
  #L090d1a.  call temp:= `a`(v3, v4) @signature `Lcom/iamtrk/a/a;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L090d20.  v3:= temp @kind object;
  #L090d22.  call `<init>`(v1, v2, v3) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L090d28.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L090d2e.  return v0 @kind object;
}

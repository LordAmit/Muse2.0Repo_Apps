record `com.iamtrk.a.a$n` @kind class @AccessFlag PUBLIC extends `com.iamtrk.a.a$j` @kind class {
}
procedure `void` `<init>`(`com.iamtrk.a.a$n` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/iamtrk/a/a$n;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L091124.  call `<init>`(v0, v1, v2) @signature `Lcom/iamtrk/a/a$j;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L09112a.  return @kind void;
}
procedure `java.util.List` `a`(`com.iamtrk.a.a$n` v4 @kind this) @signature `Lcom/iamtrk/a/a$n;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L09113c.  v0:= new `java.util.ArrayList`;
  #L091140.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L091146.  v1:= new `com.iamtrk.a.a$k`;
  #L09114a.  v2:= "Root status" @kind object;
  #L09114e.  call temp:= `c`() @signature `Lcom/iamtrk/a/a;.c:()Ljava/lang/String;` @kind static;
  #L091154.  v3:= temp @kind object;
  #L091156.  call `<init>`(v1, v2, v3) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L09115c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L091162.  return v0 @kind object;
}

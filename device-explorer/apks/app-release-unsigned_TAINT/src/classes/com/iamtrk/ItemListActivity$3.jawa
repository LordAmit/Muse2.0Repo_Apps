record `com.iamtrk.ItemListActivity$3` @kind class @AccessFlag  extends `java.lang.Thread` @kind class {
  `java.lang.String` `com.iamtrk.ItemListActivity$3.a` @AccessFlag ;
  `java.lang.String` `com.iamtrk.ItemListActivity$3.b` @AccessFlag ;
  `com.iamtrk.ItemListActivity` `com.iamtrk.ItemListActivity$3.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.iamtrk.ItemListActivity$3` v1 @kind this, `com.iamtrk.ItemListActivity` v2 @kind object) @signature `Lcom/iamtrk/ItemListActivity$3;.<init>:(Lcom/iamtrk/ItemListActivity;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L08ed84.  v1.`com.iamtrk.ItemListActivity$3.c` @type ^`com.iamtrk.ItemListActivity` := v2 @kind object;
  #L08ed88.  call `<init>`(v1) @signature `Ljava/lang/Thread;.<init>:()V` @kind direct;
  #L08ed8e.  v0:= "12" @kind object;
  #L08ed92.  v1.`com.iamtrk.ItemListActivity$3.a` @type ^`java.lang.String` := v0 @kind object;
  #L08ed96.  v0:= "9" @kind object;
  #L08ed9a.  v1.`com.iamtrk.ItemListActivity$3.b` @type ^`java.lang.String` := v0 @kind object;
  #L08ed9e.  return @kind void;
}
procedure `void` `run`(`com.iamtrk.ItemListActivity$3` v2 @kind this) @signature `Lcom/iamtrk/ItemListActivity$3;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L08edb0.  v0:= v2.`com.iamtrk.ItemListActivity$3.c` @type ^`com.iamtrk.ItemListActivity` @kind object;
  #L08edb4.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L08edba.  v1:= temp @kind object;
  #L08edbc.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L08edc2.  v1:= temp @kind object;
  #L08edc4.  call temp:= `getDisplayName`(v1) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L08edca.  v1:= temp @kind object;
  #L08edcc.  v0.`com.iamtrk.ItemListActivity.l` @type ^`java.lang.String` := v1 @kind object;
  #L08edd0.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L08edd6.  v0:= temp @kind object;
  #L08edd8.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L08edde.  v0:= temp @kind object;
  #L08ede0.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L08ede6.  v0:= temp @kind object;
  #L08ede8.  v2.`com.iamtrk.ItemListActivity$3.b` @type ^`java.lang.String` := v0 @kind object;
  #Try_start0.  
  #L08edec.  call temp:= `isInterrupted`(v2) @signature `Lcom/iamtrk/ItemListActivity$3;.isInterrupted:()Z` @kind virtual;
  #L08edf2.  v0:= temp;
  #L08edf4.  if v0 != 0 then goto L08ee1a;
  #L08edf8.  v0:= 1000L;
  #L08edfc.  call `sleep`(v0) @signature `Ljava/lang/Thread;.sleep:(J)V` @kind static;
  #L08ee02.  v0:= v2.`com.iamtrk.ItemListActivity$3.c` @type ^`com.iamtrk.ItemListActivity` @kind object;
  #L08ee06.  v1:= new `com.iamtrk.ItemListActivity$3$1`;
  #L08ee0a.  call `<init>`(v1, v2) @signature `Lcom/iamtrk/ItemListActivity$3$1;.<init>:(Lcom/iamtrk/ItemListActivity$3;)V` @kind direct;
  #L08ee10.  call `runOnUiThread`(v0, v1) @signature `Lcom/iamtrk/ItemListActivity;.runOnUiThread:(Ljava/lang/Runnable;)V` @kind virtual;
  #Try_end0.  
  #L08ee16.  goto L08edec;
  #L08ee18.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L08ee1a.  return @kind void;
  catch `java.lang.InterruptedException` @[Try_start0..Try_end0] goto L08ee18;
}

record `com.iamtrk.a.a$o` @kind class @AccessFlag PUBLIC extends `com.iamtrk.a.a$j` @kind class {
  `java.lang.String` `com.iamtrk.a.a$o.a` @AccessFlag ;
  `java.lang.String` `com.iamtrk.a.a$o.b` @AccessFlag ;
  `java.lang.String` `com.iamtrk.a.a$o.c` @AccessFlag ;
}
procedure `void` `<init>`(`com.iamtrk.a.a$o` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/iamtrk/a/a$o;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L091cd0.  call `<init>`(v2, v3, v4) @signature `Lcom/iamtrk/a/a$j;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L091cd6.  v0:= "" @kind object;
  #L091cda.  v2.`com.iamtrk.a.a$o.a` @type ^`java.lang.String` := v0 @kind object;
  #L091cde.  v0:= "" @kind object;
  #L091ce2.  v2.`com.iamtrk.a.a$o.b` @type ^`java.lang.String` := v0 @kind object;
  #L091ce6.  v0:= "" @kind object;
  #L091cea.  v2.`com.iamtrk.a.a$o.c` @type ^`java.lang.String` := v0 @kind object;
  #L091cee.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L091cf4.  v0:= temp @kind object;
  #L091cf6.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L091cfc.  v0:= temp @kind object;
  #L091cfe.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L091d04.  v0:= temp @kind object;
  #L091d06.  v2.`com.iamtrk.a.a$o.c` @type ^`java.lang.String` := v0 @kind object;
  #L091d0a.  v0:= "leak-39-0" @kind object;
  #L091d0e.  v1:= v2.`com.iamtrk.a.a$o.c` @type ^`java.lang.String` @kind object;
  #L091d12.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091d18.  v0:= "leak-40-0" @kind object;
  #L091d1c.  v1:= v2.`com.iamtrk.a.a$o.b` @type ^`java.lang.String` @kind object;
  #L091d20.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091d26.  v0:= "leak-41-0" @kind object;
  #L091d2a.  v1:= v2.`com.iamtrk.a.a$o.a` @type ^`java.lang.String` @kind object;
  #L091d2e.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091d34.  return @kind void;
}
procedure `java.util.List` `a`(`com.iamtrk.a.a$o` v6 @kind this) @signature `Lcom/iamtrk/a/a$o;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L091d48.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L091d4e.  v0:= temp @kind object;
  #L091d50.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L091d56.  v0:= temp @kind object;
  #L091d58.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L091d5e.  v0:= temp @kind object;
  #L091d60.  v6.`com.iamtrk.a.a$o.b` @type ^`java.lang.String` := v0 @kind object;
  #L091d64.  v0:= "leak-39-1" @kind object;
  #L091d68.  v1:= v6.`com.iamtrk.a.a$o.c` @type ^`java.lang.String` @kind object;
  #L091d6c.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091d72.  v0:= "leak-40-1" @kind object;
  #L091d76.  v1:= v6.`com.iamtrk.a.a$o.b` @type ^`java.lang.String` @kind object;
  #L091d7a.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091d80.  v0:= "leak-41-1" @kind object;
  #L091d84.  v1:= v6.`com.iamtrk.a.a$o.a` @type ^`java.lang.String` @kind object;
  #L091d88.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091d8e.  v0:= new `java.util.ArrayList`;
  #L091d92.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L091d98.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L091d9e.  v1:= temp @kind object;
  #L091da0.  v2:= new `com.iamtrk.a.a$k`;
  #L091da4.  v3:= "availableProcessors" @kind object;
  #L091da8.  call temp:= `availableProcessors`(v1) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L091dae.  v4:= temp;
  #L091db0.  call `<init>`(v2, v3, v4) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L091db6.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L091dbc.  v2:= new `com.iamtrk.a.a$k`;
  #L091dc0.  v3:= "freeMemory" @kind object;
  #L091dc4.  call temp:= `freeMemory`(v1) @signature `Ljava/lang/Runtime;.freeMemory:()J` @kind virtual;
  #L091dca.  v4:= temp @kind wide;
  #L091dcc.  call temp:= `a`(v4) @signature `Lcom/iamtrk/a/a;.a:(J)Ljava/lang/String;` @kind static;
  #L091dd2.  v4:= temp @kind object;
  #L091dd4.  call `<init>`(v2, v3, v4) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L091dda.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L091de0.  v2:= new `com.iamtrk.a.a$k`;
  #L091de4.  v3:= "totalMemory" @kind object;
  #L091de8.  call temp:= `totalMemory`(v1) @signature `Ljava/lang/Runtime;.totalMemory:()J` @kind virtual;
  #L091dee.  v4:= temp @kind wide;
  #L091df0.  call temp:= `a`(v4) @signature `Lcom/iamtrk/a/a;.a:(J)Ljava/lang/String;` @kind static;
  #L091df6.  v4:= temp @kind object;
  #L091df8.  call `<init>`(v2, v3, v4) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L091dfe.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L091e04.  v2:= new `com.iamtrk.a.a$k`;
  #L091e08.  v3:= "maxMemory" @kind object;
  #L091e0c.  call temp:= `maxMemory`(v1) @signature `Ljava/lang/Runtime;.maxMemory:()J` @kind virtual;
  #L091e12.  v4:= temp @kind wide;
  #L091e14.  call temp:= `a`(v4) @signature `Lcom/iamtrk/a/a;.a:(J)Ljava/lang/String;` @kind static;
  #L091e1a.  v1:= temp @kind object;
  #L091e1c.  call `<init>`(v2, v3, v1) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L091e22.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L091e28.  return v0 @kind object;
}

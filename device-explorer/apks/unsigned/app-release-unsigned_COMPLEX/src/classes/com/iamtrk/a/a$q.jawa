record `com.iamtrk.a.a$q` @kind class @AccessFlag PUBLIC extends `com.iamtrk.a.a$j` @kind class {
}
procedure `void` `<init>`(`com.iamtrk.a.a$q` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lcom/iamtrk/a/a$q;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L092544.  call `<init>`(v4, v5, v6) @signature `Lcom/iamtrk/a/a$j;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L09254a.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L092550.  v0:= temp @kind object;
  #L092552.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L092558.  v0:= temp @kind object;
  #L09255a.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L092560.  v1:= temp @kind object;
  #L092562.  v2:= new `java.util.HashMap`;
  #L092566.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L09256c.  v0:= "test" @kind object;
  #L092570.  v3:= new `java.util.HashMap`;
  #L092574.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L09257a.  call temp:= `put`(v2, v0, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L092580.  v0:= "test" @kind object;
  #L092584.  call temp:= `get`(v2, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L09258a.  v0:= temp @kind object;
  #L09258c.  v0:= (`java.util.HashMap`) v0 @kind object;
  #L092590.  v3:= "test" @kind object;
  #L092594.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L09259a.  v0:= "test" @kind object;
  #L09259e.  call temp:= `get`(v2, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0925a4.  v0:= temp @kind object;
  #L0925a6.  v0:= (`java.util.HashMap`) v0 @kind object;
  #L0925aa.  v1:= "test" @kind object;
  #L0925ae.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L0925b4.  v0:= temp @kind object;
  #L0925b6.  v0:= (`java.lang.String`) v0 @kind object;
  #L0925ba.  v1:= "leak-149" @kind object;
  #L0925be.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0925c4.  return @kind void;
}
procedure `java.util.List` `a`(`com.iamtrk.a.a$q` v5 @kind this) @signature `Lcom/iamtrk/a/a$q;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L0925d8.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0925de.  v0:= temp @kind object;
  #L0925e0.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L0925e6.  v0:= temp @kind object;
  #L0925e8.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0925ee.  v0:= temp @kind object;
  #L0925f0.  v1:= new `java.lang.StringBuffer`;
  #L0925f4.  call `<init>`(v1) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L0925fa.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L092600.  v2:= temp @kind object;
  #L092602.  v3:= length @variable v2;
  #L092604.  v0:= 0I;
  #L092606.  if v0 >= v3 then goto L09261a;
  #L09260a.  v4:= v2[v0] @kind char;
  #L09260e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L092614.  v0:= v0 + 1;
  #L092618.  goto L092606;
  #L09261a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L092620.  v0:= temp @kind object;
  #L092622.  v1:= "leak-150" @kind object;
  #L092626.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L09262c.  v0:= new `java.util.ArrayList`;
  #L092630.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L092636.  v1:= new `com.iamtrk.a.a$k`;
  #L09263a.  v2:= "External storage is emulated" @kind object;
  #L09263e.  call temp:= `isExternalStorageEmulated`() @signature `Landroid/os/Environment;.isExternalStorageEmulated:()Z` @kind static;
  #L092644.  v3:= temp;
  #L092646.  call `<init>`(v1, v2, v3) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L09264c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L092652.  v1:= new `com.iamtrk.a.a$k`;
  #L092656.  v2:= "External storage is removable" @kind object;
  #L09265a.  call temp:= `isExternalStorageRemovable`() @signature `Landroid/os/Environment;.isExternalStorageRemovable:()Z` @kind static;
  #L092660.  v3:= temp;
  #L092662.  call `<init>`(v1, v2, v3) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L092668.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L09266e.  v1:= new `com.iamtrk.a.a$k`;
  #L092672.  v2:= "External storage state" @kind object;
  #L092676.  call temp:= `getExternalStorageState`() @signature `Landroid/os/Environment;.getExternalStorageState:()Ljava/lang/String;` @kind static;
  #L09267c.  v3:= temp @kind object;
  #L09267e.  call `<init>`(v1, v2, v3) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L092684.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L09268a.  return v0 @kind object;
}

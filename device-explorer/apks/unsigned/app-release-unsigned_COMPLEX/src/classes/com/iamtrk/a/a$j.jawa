record `com.iamtrk.a.a$j` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.lang.String` `com.iamtrk.a.a$j.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `com.iamtrk.a.a$j.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.iamtrk.a.a$j` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lcom/iamtrk/a/a$j;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L0901f0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L0901f6.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L0901fc.  v0:= temp @kind object;
  #L0901fe.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L090204.  v0:= temp @kind object;
  #L090206.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L09020c.  v1:= temp @kind object;
  #L09020e.  v2:= new `java.util.HashMap`;
  #L090212.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L090218.  v0:= "test" @kind object;
  #L09021c.  v3:= new `java.util.HashMap`;
  #L090220.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L090226.  call temp:= `put`(v2, v0, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L09022c.  v0:= "test" @kind object;
  #L090230.  call temp:= `get`(v2, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L090236.  v0:= temp @kind object;
  #L090238.  v0:= (`java.util.HashMap`) v0 @kind object;
  #L09023c.  v3:= "test" @kind object;
  #L090240.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L090246.  v0:= "test" @kind object;
  #L09024a.  call temp:= `get`(v2, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L090250.  v0:= temp @kind object;
  #L090252.  v0:= (`java.util.HashMap`) v0 @kind object;
  #L090256.  v1:= "test" @kind object;
  #L09025a.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L090260.  v0:= temp @kind object;
  #L090262.  v0:= (`java.lang.String`) v0 @kind object;
  #L090266.  v1:= "leak-53" @kind object;
  #L09026a.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L090270.  v4.`com.iamtrk.a.a$j.a` @type ^`java.lang.String` := v5 @kind object;
  #L090274.  v4.`com.iamtrk.a.a$j.b` @type ^`java.lang.String` := v6 @kind object;
  #L090278.  return @kind void;
}
procedure `java.util.List` `a`(`com.iamtrk.a.a$j` v4 @kind this) @signature `Lcom/iamtrk/a/a$j;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L09028c.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L090292.  v0:= temp @kind object;
  #L090294.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L09029a.  v0:= temp @kind object;
  #L09029c.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0902a2.  v0:= temp @kind object;
  #Try_start0.  
  #L0902a4.  v1:= new `java.lang.Exception`;
  #L0902a8.  call `<init>`(v1, v0) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L0902ae.  throw v1;
  #Try_end0.  
  #L0902b0.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L0902b2.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L0902b8.  v0:= temp @kind object;
  #L0902ba.  v1:= "leak-55" @kind object;
  #L0902be.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0902c4.  v0:= new `java.util.ArrayList`;
  #L0902c8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L0902ce.  v1:= new `com.iamtrk.a.a$k`;
  #L0902d2.  v2:= "name" @kind object;
  #L0902d6.  v3:= "ravikumar" @kind object;
  #L0902da.  call `<init>`(v1, v2, v3) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L0902e0.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0902e6.  v1:= new `com.iamtrk.a.a$k`;
  #L0902ea.  v2:= "cmp" @kind object;
  #L0902ee.  v3:= "myn" @kind object;
  #L0902f2.  call `<init>`(v1, v2, v3) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L0902f8.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L0902fe.  return v0 @kind object;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L0902b0;
}
procedure `java.lang.String` `b`(`com.iamtrk.a.a$j` v5 @kind this) @signature `Lcom/iamtrk/a/a$j;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L090320.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L090326.  v0:= temp @kind object;
  #L090328.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L09032e.  v0:= temp @kind object;
  #L090330.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L090336.  v0:= temp @kind object;
  #L090338.  v1:= new `java.lang.StringBuffer`;
  #L09033c.  call `<init>`(v1) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L090342.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L090348.  v2:= temp @kind object;
  #L09034a.  v3:= length @variable v2;
  #L09034c.  v0:= 0I;
  #L09034e.  if v0 >= v3 then goto L090362;
  #L090352.  v4:= v2[v0] @kind char;
  #L090356.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L09035c.  v0:= v0 + 1;
  #L090360.  goto L09034e;
  #L090362.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L090368.  v0:= temp @kind object;
  #L09036a.  v1:= "leak-54" @kind object;
  #L09036e.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L090374.  v0:= v5.`com.iamtrk.a.a$j.b` @type ^`java.lang.String` @kind object;
  #L090378.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.iamtrk.a.a$j` v4 @kind this) @signature `Lcom/iamtrk/a/a$j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L09038c.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L090392.  v0:= temp @kind object;
  #L090394.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L09039a.  v0:= temp @kind object;
  #L09039c.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L0903a2.  v0:= temp @kind object;
  #L0903a4.  v1:= 2I;
  #L0903a6.  v1:= new `java.lang.String`[v1];
  #L0903aa.  v2:= 0I;
  #L0903ac.  v3:= "n/a" @kind object;
  #L0903b0.  v1[v2]:= v3 @kind object;
  #L0903b4.  v2:= 1I;
  #L0903b6.  v1[v2]:= v0 @kind object;
  #L0903ba.  v0:= length @variable v1;
  #L0903bc.  v0:= v0 + -1;
  #L0903c0.  v0:= v1[v0] @kind object;
  #L0903c4.  v1:= "leak-56" @kind object;
  #L0903c8.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L0903ce.  v0:= v4.`com.iamtrk.a.a$j.b` @type ^`java.lang.String` @kind object;
  #L0903d2.  return v0 @kind object;
}

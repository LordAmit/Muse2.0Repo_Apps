record `com.iamtrk.a.a$k` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.iamtrk.a.a$k.a` @AccessFlag PRIVATE;
  `java.lang.String` `com.iamtrk.a.a$k.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.iamtrk.a.a$k` v4 @kind this, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L091c9c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L091ca2.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L091ca8.  v0:= temp @kind object;
  #L091caa.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L091cb0.  v0:= temp @kind object;
  #L091cb2.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L091cb8.  v1:= temp @kind object;
  #L091cba.  v2:= new `java.util.HashMap`;
  #L091cbe.  call `<init>`(v2) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L091cc4.  v0:= "test" @kind object;
  #L091cc8.  v3:= new `java.util.HashMap`;
  #L091ccc.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L091cd2.  call temp:= `put`(v2, v0, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L091cd8.  v0:= "test" @kind object;
  #L091cdc.  call temp:= `get`(v2, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L091ce2.  v0:= temp @kind object;
  #L091ce4.  v0:= (`java.util.HashMap`) v0 @kind object;
  #L091ce8.  v3:= "test" @kind object;
  #L091cec.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L091cf2.  v0:= "test" @kind object;
  #L091cf6.  call temp:= `get`(v2, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L091cfc.  v0:= temp @kind object;
  #L091cfe.  v0:= (`java.util.HashMap`) v0 @kind object;
  #L091d02.  v1:= "test" @kind object;
  #L091d06.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L091d0c.  v0:= temp @kind object;
  #L091d0e.  v0:= (`java.lang.String`) v0 @kind object;
  #L091d12.  v1:= "leak-49" @kind object;
  #L091d16.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091d1c.  v4.`com.iamtrk.a.a$k.a` @type ^`java.lang.String` := v5 @kind object;
  #L091d20.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L091d26.  v0:= temp @kind object;
  #L091d28.  call temp:= `toString`(v0) @signature `Ljava/lang/Integer;.toString:()Ljava/lang/String;` @kind virtual;
  #L091d2e.  v0:= temp @kind object;
  #L091d30.  v4.`com.iamtrk.a.a$k.b` @type ^`java.lang.String` := v0 @kind object;
  #L091d34.  return @kind void;
}
procedure `void` `<init>`(`com.iamtrk.a.a$k` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L091d48.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L091d4e.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L091d54.  v0:= temp @kind object;
  #L091d56.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L091d5c.  v0:= temp @kind object;
  #L091d5e.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L091d64.  v0:= temp @kind object;
  #Try_start0.  
  #L091d66.  v1:= new `java.lang.Exception`;
  #L091d6a.  call `<init>`(v1, v0) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L091d70.  throw v1;
  #Try_end0.  
  #L091d72.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L091d74.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L091d7a.  v0:= temp @kind object;
  #L091d7c.  v1:= "leak-47" @kind object;
  #L091d80.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091d86.  v2.`com.iamtrk.a.a$k.a` @type ^`java.lang.String` := v3 @kind object;
  #L091d8a.  v2.`com.iamtrk.a.a$k.b` @type ^`java.lang.String` := v4 @kind object;
  #L091d8e.  return @kind void;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L091d72;
}
procedure `void` `<init>`(`com.iamtrk.a.a$k` v5 @kind this, `java.lang.String` v6 @kind object, `boolean` v7 ) @signature `Lcom/iamtrk/a/a$k;.<init>:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L091db0.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L091db6.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L091dbc.  v0:= temp @kind object;
  #L091dbe.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L091dc4.  v0:= temp @kind object;
  #L091dc6.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L091dcc.  v0:= temp @kind object;
  #L091dce.  v1:= new `java.lang.StringBuffer`;
  #L091dd2.  call `<init>`(v1) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L091dd8.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L091dde.  v2:= temp @kind object;
  #L091de0.  v3:= length @variable v2;
  #L091de2.  v0:= 0I;
  #L091de4.  if v0 >= v3 then goto L091df8;
  #L091de8.  v4:= v2[v0] @kind char;
  #L091dec.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L091df2.  v0:= v0 + 1;
  #L091df6.  goto L091de4;
  #L091df8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L091dfe.  v0:= temp @kind object;
  #L091e00.  v1:= "leak-50" @kind object;
  #L091e04.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091e0a.  v5.`com.iamtrk.a.a$k.a` @type ^`java.lang.String` := v6 @kind object;
  #L091e0e.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L091e14.  v0:= temp @kind object;
  #L091e16.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:()Ljava/lang/String;` @kind virtual;
  #L091e1c.  v0:= temp @kind object;
  #L091e1e.  v5.`com.iamtrk.a.a$k.b` @type ^`java.lang.String` := v0 @kind object;
  #L091e22.  return @kind void;
}
procedure `java.lang.String` `a`(`com.iamtrk.a.a$k` v2 @kind this) @signature `Lcom/iamtrk/a/a$k;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L091e34.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L091e3a.  v0:= temp @kind object;
  #L091e3c.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L091e42.  v0:= temp @kind object;
  #L091e44.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L091e4a.  v0:= temp @kind object;
  #Try_start0.  
  #L091e4c.  v1:= new `java.lang.Exception`;
  #L091e50.  call `<init>`(v1, v0) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L091e56.  throw v1;
  #Try_end0.  
  #L091e58.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L091e5a.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L091e60.  v0:= temp @kind object;
  #L091e62.  v1:= "leak-51" @kind object;
  #L091e66.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091e6c.  v0:= v2.`com.iamtrk.a.a$k.a` @type ^`java.lang.String` @kind object;
  #L091e70.  return v0 @kind object;
  catch `java.lang.Exception` @[Try_start0..Try_end0] goto L091e58;
}
procedure `java.lang.String` `b`(`com.iamtrk.a.a$k` v4 @kind this) @signature `Lcom/iamtrk/a/a$k;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L091e94.  call temp:= `getInstance`() @signature `Ljava/util/Calendar;.getInstance:()Ljava/util/Calendar;` @kind static;
  #L091e9a.  v0:= temp @kind object;
  #L091e9c.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L091ea2.  v0:= temp @kind object;
  #L091ea4.  call temp:= `getDisplayName`(v0) @signature `Ljava/util/TimeZone;.getDisplayName:()Ljava/lang/String;` @kind virtual;
  #L091eaa.  v0:= temp @kind object;
  #L091eac.  v1:= 2I;
  #L091eae.  v1:= new `java.lang.String`[v1];
  #L091eb2.  v2:= 0I;
  #L091eb4.  v3:= "n/a" @kind object;
  #L091eb8.  v1[v2]:= v3 @kind object;
  #L091ebc.  v2:= 1I;
  #L091ebe.  v1[v2]:= v0 @kind object;
  #L091ec2.  v0:= length @variable v1;
  #L091ec4.  v0:= v0 + -1;
  #L091ec8.  v0:= v1[v0] @kind object;
  #L091ecc.  v1:= "leak-52" @kind object;
  #L091ed0.  call temp:= `d`(v1, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L091ed6.  v0:= v4.`com.iamtrk.a.a$k.b` @type ^`java.lang.String` @kind object;
  #L091eda.  return v0 @kind object;
}
